commit_id,msg
2b84821581935b30e36a0cfc8509c0f86c74c96d,"adding gunit for v4

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6619]"
c9c01f2e3dcf8bf3114ba9f9b0c36ae5e03fd162,"gunit v4 works enough to do ANTLR.gunit for AST testing

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6620]"
7f63527ce116f368501627f925a4db974396115c,"adding initial antlr v4 files

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6621]"
f49b99ec3e505587ffe56921e5b70f9e48ae8617,"keep in repo so people can build

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6622]"
493177c04eda683777e02263c4b6db6c816abed6,"add new stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6624]"
f04dab7b837274f063ce0f68c3d69ace53b30a21,"got error message stuff in better shape. started semantics pipeline

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6631]"
4673f7ae02bdb5042bf6051f8b67f3fc419df47c,"added todo

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6633]"
c9d6efc7c5744f0b57bd6dd29cc12db7242ecd31,"move to v4

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6634]"
08d8a0db232d9e7eb11f8bdc3b054e515ae6bb84,"got error handling  with v4 ST working; no error loops etc...

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6641]"
b49707ce4a8306dea2c017b7e6bbd57085ffe434,"errors show file/line now; got a few semantic checks in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6642]"
e248e8dbe0a6dc7c924ce1fc32be34766ecfc253,"started new structure for semantics; XXXTriggers and XXXChecks

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6643]"
d81ae7478d77213e8b21b0ffb0aa7a7d986e8836,"refactored. checking for illegal token ref

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6646]"
9b47afdf8f111d4f435837e2c9041911f8a46fcb,"checking for illegal args on token ref

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6647]"
004f15bfb1ccdf94e2a89f13938de7a41880d771,"checking for illegal tokens everywhere

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6649]"
c7b6dff683c797ab6476e81b1f18c3f7beb77486,"increased specificity of tree node types.  Got options stored into AST properly.  Added <...> token options for hetero trees.  Using ID to allow more syntax in some cases instead of TOKEN_REF.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6650]"
8991dfeafc754f2ec37bdcfc94249bb7d9486105,"check count of rules and prequels.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6651]"
bfa9e934f125890b427e3c975160b287f0033b93,"checking for REWRITE_FOR_MULTI_ELEMENT_ALT

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6652]"
0ca7573e8bc3c9b084c807be08eb885117518763,"update comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6653]"
f7807ade1002f61bc5f69a9e68e3aa8c60d052de,"got more ast op checks in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6654]"
b004c36bcee7de49fe5c4abd61a6c978b8d3df43,"got tree filter mode option check in. reorg'd GRAMMAR node in tree.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6655]"
f3fb19b921d61b9d3b4f7e61cf95a7d6069b12ab,"got wildcard as root error detected; tweaked how we call DOT/WILDCARD

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6656]"
b50c813cc5d8fa89ab9a9a90c385b9066fdf0684,"got invalid import error done

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6657]"
6829fc9e4724851b5a892ee03ed53305b175956f,"check for tokenVocab in import done

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6658]"
81bcfe56dc082257a29ef5822990fb47f39237a8,"got basic test harness for grammar errors

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6659]"
9b0d27b1b737cbd0e9f7598baa7650b55393eb01,"more unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6660]"
ffd60dc26b94e4e42e7f33ce5793b3d343847957,"add def sym; fix errors so they ignore right of ->

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6666]"
6f7e52ec9e6b290b931928118fa1f9b84e064e63,"got some symbols collected; renamed.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6667]"
6d4a521ec04fa0a77258b895c9a4d5d8cf55fd7b,"forgot to add

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6668]"
09eb3b5753f12abd1f96f568d8eb325277870261,"split AST for combined grammar into two, copying to lexer grammar.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6669]"
1ba84877260819d7679bc6b9c8023dc895336f86,"added rule and action redef; options copied to lexer now too.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6670]"
2cf2898a04e642fc0d127528232e8766e966dca2,"added rule arg checks and undefined rule

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6671]"
ad5bf33eb4eb39b95a905046bd4770ca042039fc,"finished SCOPE_REDEFINITION (new), TOKEN_ALIAS_REASSIGNMENT

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6674]"
8d0d3e1c9401d460f04f9f91d202a326fdff1349,"add tests for symbols; check LABEL_CONFLICTS_WITH_RULE, LABEL_CONFLICTS_WITH_TOKEN, SYMBOL_CONFLICTS_WITH_GLOBAL_SCOPE (label v scope, token v scope, rule v scope)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6675]"
795df39aaacc427ca5ce054e5b92a9f3e4e87181,"finished LABEL_TYPE_CONFLICT

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6676]"
974c9556fd36b0b8ef458121168163c9532e2eea,"start tracking tokens after -> in rewrite; added test

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6677]"
1cea245655b663991cfbb0dc69c96a4c23eda7e2,"did REWRITE_ELEMENT_NOT_PRESENT_ON_LHS

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6678]"
6f2a5f3c57c9470ce95cd86e7315daa33c9f8b81,"got initial scope parser copied from v3

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6679]"
56a0940360900560f99f6a5c68e9ef16b6651963,"added unit tests for scope parser

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6680]"
25be3b0172b2f9dff186fe5412d15f91068448b9,"handled scope/arg errors; added tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6681]"
cf04cf14a0d20e972397422c6fb62c296c3959e1,"fix error nums

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6682]"
edde1ae80d21821ab419b87afa03d1d91a01b33d,"REWRITE_OR_OP_WITH_NO_OUTPUT_OPTION

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6683]"
f94ef660f434bb2462804946e72cd17aafdc97fd,"add action splitter

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6684]"
b51019140cb9f43f94f588d65e8e538f6b3444bf,"got basic semantic checker for attributes written

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6685]"
e825a774665817e3f669ba72d3c5f6a60e24d2cc,"made listener for action splitter

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6686]"
b3f7c8e3cc7ea3f3ddc108f9334f7bbd96c7d88f,"got more symbol resolution in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6687]"
172851245e15143ebff604c206077962cc1727a4,"refactoring resolving; alts know about rules and those know about grammars.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6688]"
66f179823da0f8507296dd5eeb7afcadc810bdaa,"rename

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6689]"
b108a7cf2a1a4580883b7b024afae3179cff3e58,"got actions/scopes into grammar

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6690]"
68719b8df713e0b649bc2e8ab90500e93ec056bd,"got test harness going

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6691]"
e38535a9bccd65ee4bc96fcc0c7b0db0b0a6169d,"got attribute checks done

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6693]"
d23c9cb527fbd54881dc1e809be7ef9bd0068241,"snapshot

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6694]"
846e25d9cbb68e96691df9d217c23d95e5841f90,"rewrote resolver to return attr and scopes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6695]"
29c602c202c4c1fde2665cfa41c52681ec0918a5,"got dynamic scope checking in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6696]"
9c8e4380fcd425d9497ad5e8eca7e72d94cd81d3,"got more tests in; about to refactor resolving.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6697]"
6ec90d61d95d2b0ae9a2933315a8b9773d564373,"refactored resolving; clean up in next push

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6698]"
340af98839aa7771e011605ea9f0900777850742,"cleaned up resolving. resolver interface is only 3 methods now

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6699]"
c08812ea54d44f8b18309dd27570ed7d1d6429e9,"cleaned up, added $ids check for list labels

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6700]"
1a5dfde6b5e9aaf337b70ca47fcffdf153cef1ba,"handle invalid template syntax %x.y = 3

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6701]"
483c5881a1666701087183e50001d92299aa87cd,"got imported rule thing worked out

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6705]"
0e38fd9c47aadede60803fe294ed47755c202ec7,"detect missing ';' on rule

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6709]"
49d7d03238925217bfb84fdd26af0eb1ff365664,"fixed up import symbols and tokens{} section in imports

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6718]"
2e6aee85af59c848e699f58fdc7c241cee973889,"fixed unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6719]"
3872f9201768cf2f8411841de16d68f5cef45528,"fix unit tests; all pass

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6720]"
4fb0e7db70f42dea8a337bba88c09cc69612b276,"stop processing if syn err.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6721]"
66ec9fa9fdab17289859925c757eb97a5a0386c0,"added comments and we are now ready to build NFA, hooray!

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6722]"
d2b5f95016f6a96f425aaef2c14be9e1d52e45e0,"adding state stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6723]"
80ea7cf0db892dd20ffb7b98d7c46fdc4702c753,"reorg

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6724]"
cbb8a6917a57131fd6fdf0163fa167c01385894a,"reorg, de-emphasis label fields

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6725]"
6571ca437a76c162ee79495c1622d3e190bd5ce9,"add specialized NFA states

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6726]"
d5801b91d7d043dd507764b8b3ef325d733a835a,"add fields and NFA/DFA

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6727]"
33a8d69814b7542af300bf55c3f24f2e5d6401e2,"adding nfa building infrastructur

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6728]"
0795563bab750947d26fd982ddbf0635a6ddf2b2,"separate lexer/parser nfa factory

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6729]"
29175a418c907719c32db6faf12c6fc2a6af9631,"working on NFA factory

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6730]"
bf088010224d2ca5041ee61b68e95469739d609c,"got more NFA created

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6732]"
d7bda19fd11cbb6411217d2cde092873da639d77,"more work on NFA

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6735]"
6832a3c89cf3a4a516ce5f6b98c3fe2eda3f3125,"added +, rule ref, etc...

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6736]"
572aeb007107455e4d031a17fd81a40e0ada89db,"got more NFA constr. tests in; added range

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6737]"
4125ed8fb435bda8f271c7d2ee90e99b3c66fbb9,"got left-recursion core in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6738]"
309cb6d623444c6c564294e4e4ed0d539939aa0d,"add missing

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6739]"
61fbb6571d3ef4479dc1f5a4419f4b672a30fc13,"fixed left-recur check, adding dfa stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6740]"
6ad8ff2a46a3e9315cbfc1149ff6d1071104a36e,"moved lots of crap from v3 for DFA display

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6741]"
665b64fee048df88159a3ff24c90386ecb0061e5,"have pieces of DFA conversion working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6742]"
42a1489a48f750d31033ead37f939e08cd0b54f3,"got draft of DFA conversion working; gen's DOT files for DFAs.  Works for recursive prediction example

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6743]"
d7cf809489ef9320f3a8e87542c91c7c6cd5446f,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6746]"
18a69d455001fa264cf775302c1ef1019772bb9e,"got full analysis in minus sem preds

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6747]"
bf9c0dd5a2d0b57e9a3c0214a93f5bfaa2731b16,"got sem pred analysis in for stack limited NFA conversion

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6748]"
f242c09d46bab9c4b2524a50a72ee275609fc267,"made DOTGen nonrecursive; add DFA verification stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6749]"
773832bd4b148afb2d23571b1ee9fccc514768f6,"fixed up ambig/dangling stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6752]"
e70287954a19209a4c1d8b389d90bf6990be0103,"got sample input sequence and grammar mapping working for ambig paths

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6753]"
c967b39f44768cf5a149fd7a43b92f9e8ba2accc,"after experimenting with m, r

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6754]"
d72dbb7af4337d786e5091fb73a1a0618bd64784,"wow. added dfa minimization

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6755]"
2aa34fc41e88fafd174019958261c92e61887829,"got line num etc... into ambig, unreachable warnings

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6760]"
c175549e43e7ba814744f30fa4073370a149f5b0,"got insuff pred warning in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6761]"
3e81cbc7863234daed6546c2c109e8b9cc4b05fa,"got hidden pred message working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6762]"
2e85e0d3a7331c5b03db016d9a2c4e4aafdf27f9,"got left recur msg in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6763]"
f871e2dbf786a418a16fc24e7806bc24a6442dd9,"only gen if >0

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6764]"
ad036f9ab1df17dc33510174d8b81ffaddb13272,"wasn't killing all states

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6766]"
a87f6e766696c83380f01d6ca8c2035830193f1f,"got more messages for recursion in there.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6767]"
8650c2962769ae8aaa58d22e774c403b01c09ba2,"reorged a bit; improved msg about recur ovf.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6768]"
d94c4744ec67e98e2767a9a669690d6518451103,"added lin approx lookahead

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6770]"
d24af6fd8a10ac0c4ff7314c9111f55bb573d33c,"rm misleading comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6771]"
e52880931ffbaa2a6308a7d72660c77042f96c99,"rm some output

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6772]"
f7445e961b43bc64a94b0815d21bdd31738cb465,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6773]"
cb7445cf36e89d64d92285583d4db0d38da721d7,"got basic lexer DFAs in (I think i need to use NFAConfigs though)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6774]"
5d570170986336d94ef136830b3a2d6955c8c494,"added context and started using NFAConfig for lexer DFA

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6775]"
2f5eb69cddf8d2419b463e5753146bce77958207,"handles recursive lexer rules now

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6776]"
09974258fb29930ab97a92b446e2ebe8cdabb217,"move out of way but keep

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6777]"
63342b1b1e3591fabae02636cf945cd5960da0fc,"snapshot

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6778]"
2a9fb1bba658021718c5f6ab28a7365756c9b192,"clean up

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6779]"
e9fd3d8b8cec7cc6d7ba218604df596174f9079b,"got new alg working :)  added recursed bit to context.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6780]"
a6f0d43a36f94941a1fd8248f0ec55e0bd6b3cea,"Reorganized to pass a proposed NFA configuration to closure instead of all those parameters.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6781]"
067b6b60f6277b3d2ede071f92ec4044396d08b4,"don't pass configs down through closures

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6782]"
856c5321748b203a8635cc02a7a42d37857e2da7,"update comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6783]"
ddc285a6c182791e9f8bb7c8a211fc4ad2970aef,"update comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6784]"
d67e0d6a56117b4f9c9ad3d32ac464f4fd533364,"removed unused recursion errors

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6785]"
c2f24b5f8ae718c00ec9e19d444fd744b71f1345,"sorted DFA output, added approx tests, got unit tests working again; notSet messed up. impl set transitions.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6786]"
dcadda638eae12495696cb2c950612b6e18ddf0e,"got some unit tests in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6787]"
47a3f66feaf993425efd8e43a9eb525934820b0c,"added more DFA unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6807]"
f6eaa737a4af52aa93403e7f3965701bec48494d,"more tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6808]"
37b7f46d40d3e489f0327f631a5ba1a8e40378c2,"more tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6809]"
c2fd73647a17eb9082b68512f1e62321fa1ea3d2,"added empty/non-empty test into nfa context ambig check; was missing. added comments

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6810]"
2646c177b15a39cf64dfcdb6bdc7dcf923d401f6,"comment out template tests,

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6811]"
2faaf7bc7f042dc09141e234ee0389c0da1fe1e1,"added cached hashcode check to equals

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6812]"
c29f0e1d7c3210fb6b6733fa192dbe367496a4f7,"figured out unit test issues; sem pipeline bailed out too early and also setting errorlistener didn't reset error count

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6813]"
529933b0ba6cf135e35eaf6e642302b206c09d54,"reworked ErrorManager to be instance, tool makes one. errors go to tool.errMgr and back to tool for emitting out listener list. fixed unit tests to go with it.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6814]"
849060e55a3339a5925b2eacca972731e9bdcc9c,"added ""mode ID;"" to the grammar.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6816]"
91f92d9b6c22cc3d77a91277cdd7f34bbabae259,"added test for modes in non lexers

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6817]"
55899d032cd5bcbeee76c57826e98d8569a19ab4,"got modes sort of working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6818]"
41c0225adfff2951bbb8ea77a0b22703a3eb6201,"fix how decision numbers set in lexer nfas

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6819]"
30157782027e9cf9c5719d8d41a5295ec9f7577d,"added in NFA VM prototype

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6820]"
4093bb326eb117c7c4255262eb579c61283ad131,"add todo

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6821]"
0516292911cbfd2d666120d6d65a3b9a431344fa,"got basic NFA code gen and interp working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6822]"
a576c169054694321a7951721dbe8fd1cdd70d25,"got thompson's working it seems

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6823]"
7cf42fe4dda486db35fb6744ec93977d07fc3434,"reorg a bit

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6825]"
43278cf7018a76706c799362d29c52cc92482d8e,"added SAVE, WILDCARD

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6826]"
6b55114dd0cd4beb92e7a21c787efb615efefba7,"got it to kill all addrs within a rule once we hit its accept state; needed for nongreedy loops.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6827]"
541350bbe3935b5bd92bfaaf3919c4916e5a75c6,"handles nongreedy + and * loops.  rewinds properly to last good accept if we kept going and failed.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6828]"
9dbc6a43fdb6c71ebe7e9bb0210de4661de01084,"added exec version that handles stack and new ThreadState / context. unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6829]"
f3e6d4644de5f0383322c10cbf141b98416f23dc,"got INT calls DIGIT working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6830]"
f6f444db5219158f31e3d1c8c1d36d060a679a66,"got QID calling ID working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6831]"
16ad680adbda13d075b199005caaccdb827423a5,"recursive calls work

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6832]"
61603d18a9122aee9cd0c225d0645f2b928b02d3,"more tests, fixes ANTLR-189. recursion works; rewinds properly.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6833]"
689687f0ed9c33e61c22c6e2e82b8ec350674802,"reorg so instrs in separate package. added label/save; added code gen at least for actions/sempred.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6834]"
9c03c08ba09262b65467573dd2003c6126a1fd69,"added comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6835]"
cf7a730b3195e4335d09e8d377f0cf8816b09517,"reworked how i assign label indexes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6836]"
e6d65be27b7507786d3df46debf215367b0a757d,"rewinds now and does with feeling for actions in rules

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6837]"
b0ca11f46b97a92e2ba51e69bdbe313162b73a28,"got sempreds in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6838]"
27d9f25ec22eedce6fb3e921a726b875fe7ee861,"simplified label computation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6839]"
62aa952f34ef158d1a85970825959e281f9b28ff,"optimization: don't add intermediate closure addrs to closure; we ignore them during reach anyway. saves time/space.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6840]"
c310c3b3a1ec07b98944a000c3d1d24439213e33,"optimization: don't add intermediate closure addrs to closure; did same for parser DFA construction as i did for NFA VM.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6841]"
9913972caafbdcd040ec88e253b31300e6e81495,"adding initial src code generation output model objects

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6842]"
fbaeb50e5e96f88fa00cdaa63b0487b2b1d02b94,"track finally action separately now

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6843]"
07625981fbe62d3cf45499bf72dc93e64187ec0a,"got good start on code generator

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6844]"
5baff5d37ee108ede027f62fa27c398ee8c7cde3,"snapshot

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6845]"
8fa7179c6d4155bc263f03ac3fee204aac148d21,"track AST nodes -> NFA now and add more code gen

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6846]"
3b7b45787a06b6eded3dce35316c1a2b4ab1e80d,"forget lexers

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6847]"
d822cb8b2333322394d0614bc4fc50c189be7d10,"removed alt as unnecessary arg to LOOK in linear approximator; added FOLLOW computation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6848]"
cab4d7d1975a15907a0c9f7aea6527dcac2cb965,"added comments

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6849]"
3e1f43117eb486b90feca759e0e9ca22d4a21491,"template names = class names; reorg'd char stuff; got bitsets defined.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6850]"
883a00a4b0545398c8a982b63d05d87a497aa0f9,"got simple LL1 (..) and (..)? in; added Decl concept

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6851]"
2384c426985267449d2a6acb84aa0e3059b39234,"tweaked LA(1) var

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6854]"
930b1e12369343d742121f245d680b8f54abc159,"got LL(1) star loops in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6857]"
e218632b6730285b7e587d0c9cba8f7227b3ff6d,"got LL(1) plus loops in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6858]"
4cd721efa92af28718ee34af4b50f6a794102b22,"add method

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6859]"
01002decf761e1b21b1d974d80f305f11e8a652f,"reorg

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6860]"
adc231ddae9607ca290a734091fcc2fddf0ff4a8,"reorg

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6862]"
d1b8c3229d346d15dee345439748b2008c14e685,"reorg

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6863]"
82b93e717d4044e56c86c778ef4b49e2758c3094,"got lookahead _la decl done

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6864]"
161dd26006647f2cb6eac92160868ad98be3e72a,"got rule scope going

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6866]"
5a1607e8841333a0dc738c0ddd2287620d7f0f3b,"merged args/retvals into one object

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6867]"
dfffbe7ef353c8920f10f197bf2ac8a00fea3cf7,"improved funcs; args back in; push/pop to func def.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6868]"
563de77ec4450db09d6ed970036ef1ba66a1a766,"move exceptions over from v3 runtime. add bitset defs..

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6869]"
f5cc4efc1b2758fee9c62951dcabce71be0a1171,"got basic lexers generated

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6871]"
118d22506651e0b2f2c5746f13c18796064cf8ef,"got actions into lexer; reorg'd

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6872]"
e1ccf086807a543c037e09aadb4335907782b4b5,"Implemented token vocab option

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6873]"
b315dd4ae427ba7aeabb0e81440e0533630d0f27,"reorg snapshot; separate LexerSharedState; pass ctx as arg to funcctions

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6874]"
3324f181f4972ab5f76555af61bea49540b0f9fe,"good start on action translation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6875]"
1b0186329c37f67b15b4839d975090b789716dee,"snapshot

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6876]"
05ef22d9e77c43f14537e5d560ae5db2ca33c521,"got basic attr action stuff in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6877]"
89b05e095427afcbf39593032e2bb2cdd736b45f,"got start on action trans testing

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6878]"
be72c49e538fa51f3d924484b7357f81c9189c53,"got dyn scope code gen partially going

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6879]"
33c8efe7e5055e466e9ef8a0f470cc5f7f0426f7,"finished dyn scope trans. unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6880]"
bf92a4bc73199c9e1c5118e240cd5871cf8afb42,"updated errors to be listener

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6881]"
03d9f0ba3253f97dbb0859cefe7c8c32b3dadae9,"Got rid of the fields listed in the output model object hierarchy; created the exception throwing templates

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6882]"
eaaa98bde92b8ec9a0964621b05bd6440f5ef998,"got sync in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6883]"
e1577a80719d2d69284f73f9e1b34ad79c3a2f03,"reworked look comp for loops

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6884]"
f69f3f2c0981dc21b75a129bc2044f5c624f14a3,"refactored

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6885]"
865437647d12b406556710141bfdddc951f4663d,"rule invoke follow was off

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6886]"
8ee1042f032e90f2eebd0b9c4f92cebacc00d25f,"added start rule; fixed error recovery set stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6887]"
f89ad35e1b59e504ef019982ed6fc02cd1e0fec1,"fix clone in bit set

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6888]"
259ec8f693e7ce10c2eef4b586415fc52214c1cc,"clean up

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6889]"
f32056f978b68e5130b53685eb5a286e4509acae,"oops; adaptor created wrong dup nodes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6892]"
38ef035c06f9ee0fac727177d5354551631b7e34,"fixed actions in lexer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6893]"
ca8ea6feea15f0e01d75f0af790765d365a76c21,"hacking with Oliver Z.  Lots of fixes to code gen and sync/error handling/mode stuff.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6894]"
b4fb29b30df1ab8802082a59a37978defe0b06ba,"refactored to inline ctors

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6895]"
3fe028ecc4e7671c1ed3e5c74cb0fdb98cc1cc61,"got mode methods in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6896]"
c9ae2330e0305be904eb39dfae6ab3daf8a9c6b9,"wildcard alts make surrounding block nongreedy

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6897]"
b1c3e8d0d73e23083422a6517551598db9eef25c,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6898]"
acf962bc28d449979830134277a6b2372d0fc8ce,"initial DFA -> PDA compilation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6899]"
19aecd31630808b8cdd0322a07a0a71579c4328c,"added NOT/SET ops, refactored PDA generation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6900]"
231758b0decaf264ff68345640584118ce1b261a,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6901]"
de380d2fd1a78f8235db5ef08e95f5c07de77847,"got DFA interp working from parser grammar + unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6902]"
b9a5cf86918a57a9e6acc97cd6092d0bd91bce55,"range16 was hosed; got java lexer working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6903]"
98bddc444696ed1d36b52f2aee70502ed404b899,"got unicode and escape sequences into literals for bytecodes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6904]"
a017bb8feb27026ced75e104deb10b44dbe015d8,"NOT eval was messed up; handles java lexer now (slowly)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6905]"
c18898a9174ce5e1efd069e5829db4f008042d34,"PDA for lexers are too slow; working DFA back in. DFA construction was nondeterministic due to sets not ordered sets.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6909]"
024f03b8d7b0bd74ffbe250f4d30a466435a1731,"got started on DFA to transition table generation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6910]"
4b71c478c134a5d018382c01377fb99947b88c82,"huge update; preds in lexers

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6911]"
3bf528498a407c686d580db8c8e8469114d6d4bf,"move tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6912]"
0e4fbf903dc91b1fc9d68c51305de5a9806c1ad5,"put preds in DFA not just in print out

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6913]"
6414fa00c67eff1768432a9077e67a06a5d6041a,"crap; was messing with lexers but anyway just added depth back to closure

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 6915]"
03b147f129d9773ff77fe7098b55efa751121a48,"make it compile

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 7066]"
695c997f2600c7ac41cbd7d6a14efba3d0e71f37,"tweak comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 7167]"
b5be319b9be4165a64c306e43bfab01ab67494e9,"make more flexible

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 7381]"
0c254d76299d9a1db2a0a1f86592c3816a2e1e32,"improve gunit in v4

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 7388]"
0eccd0f3a77c972e288f700daf824f03a511bac8,"not sure what i was doing; stopping dev

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 7710]"
360bd17f21937cf2fcdb43b6df71395b6baf888b,"not sure

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 7819]"
36fb229434f1c37c54942b1484d27f22ed653b17,"Rename/move file(s) from old antlr4 to antlr-rewrite; that's not antlr4 anymore

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 7912]"
55f384237b8a42a9c1781f5630a211a4a9386468,"add initial antlr4 files (mainly runtime)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8636]"
f6e54b33274ba24daeec9fac7c663f0eae481eee,"add more

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8637]"
c186d5ad76ab7d745bad3eef16f3943e16664d69,"add

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8638]"
a13068c7c213252dfd1c620fcf8c3318d3d3c0e1,"[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8640]"
72ee89294fbc551e41c6600890712fa38fa54c5e,"add

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8642]"
2ddeb7c769b798731b0cc2d538fd55a0c101119b,"adding new files

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8658]"
061fff09f9d3104ec5b58beee06447357511691f,"adding new files

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8659]"
1a43396d3bbea163ea74a82534e6c29f2c483a20,"adding new files

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8660]"
bb02ed151e99cb5534892d375e6989772388fa6b,"adding new files

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8661]"
1a17eb3be1da808cf453748cb9f7344b9c0c93d3,"get to compile

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8662]"
bd5df8ed5325c6af541ebf0d561ad6da13525525,"ok, working on java again...same functionality as antlr-rewrite dir. ready to move forward

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8664]"
a3b985fadfd82bf5e70ef0b05e0014bc0d4e7feb,"added @ModelElement annotation. model walker now descends into these in order to fill template args.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8665]"
1530234c2934fea43359eaf4863e2f8eae7ca6f9,"moved from ST group file of en.stg messages to inline in ErrorType; no one made a non-English version in 4 years so...

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8666]"
da633613a7a5914c890226d9fd39c9182f504bd1,"all rule indexes are 0-based now; 0..n-1 not 1..n

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8667]"
1d6ce548165897a102c661293a15fc647f584194,"tweak token consts.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8668]"
d6e4d5fb4201df388b8b0e90043029945bc501d6,"fix from 3.4

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8671]"
a7bed42c355b2ae4959e8aca3bb665acbfad8ea4,"setting up ant build

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8684]"
a2ed93e9970e39373ed68e628c13d2a5eb2fc5f2,"messing w/build

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8687]"
315944694f76a8993a667c202312b59a2cf7d106,"mv file

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8688]"
981aff4132acf5bd0fa473de827b1cba6b163936,"kill

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8694]"
4e3fd8446db6ff454f8f26cdd1e41e23c1cd4274,"removed state stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8726]"
c607e66f1af435dd54cc2967c0795212a0835a12,"added demo target X.stg

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8729]"
5f95cde48d5b67f876daf24f6220bb16f198fd56,"cleaned up action splitting

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8737]"
7f56ba47c3e0f92d6c98d012fca9bdc3067c584d,"separated setattr for lexers

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8740]"
d8edb713ed27d19359f733f3166876387b5ff6a0,"initial wack at args/return value object

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8743]"
046b469f8e9c7f06c0c269d5fa4aea8d8cb9ecec,"got all locals into return struct. all vars are visible to invoked rules via $rule::attr now.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8757]"
46f68c8d630730f848d9ed26d227e05e7fa6d11a,"moved decls into package. messed around with AddLeaf. must distinguish between implicit and regular labels. implicit are locals, manual labels go into ctx.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8765]"
506f8eec0929c3e2bc18b1f622c1e0c83fec8b15,"started reorg to have codegen extensions for customizing and doing stuff like output=AST

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8766]"
55ce044acf67f58e27bd3382e71c4f3bd7f26325,"reorg to get extensions

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8767]"
05d76709858a36d7d4d1b51e184d9bd28eb84bfa,"woof. separated out interfaces etc... now codegen extensions work

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8768]"
7e45a0c01d1f105ec61b28ac57c293729ff43e44,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8775]"
de0881a88ba841b3081debe918251f1325fd20c1,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8776]"
ad98d17191ee8a639162be864d0e2a5e3f7b252f,"snapshot; removed some dependencies to tool in runtime; made sure java grammar / parser still works

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8777]"
4d04b21999ab264630f0e170436c0175913d83b6,"removed Rule depend from ATN

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8778]"
9bc02bfd3335faf13a4396988e5e1c2340997a40,"no tool depends now in ATN, moved some maps to arrays :)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8779]"
87c727e91fb60cee98f06f0fa683d7b210cbed52,"change rule to ruleIndex in Rule; tests pass

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8786]"
1510686b021384b7cb3c0da98fc17bc4ef156525,"runtime no longer depends on tool module

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8787]"
15fbaccb6d8547b266abbb4d4b78a472cdddeec1,"reorg to get walking of rules out of default factory into controller

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8790]"
2d5c4fd686bcafa48b44a3fd75d7c3fd75d6adfe,"got core ^ and ! ops in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8791]"
68cef48483c7545e3ef5a52f69159c33b044761f,"cleaned up; mv'd stuff to parser. reorg to have lexer in controller

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8794]"
9da8639ba8f6692594905fc35c6f5a7377cdb959,"got AST construction ops working it seems.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8797]"
1775feffdb24bce80765cc4dfd968314686537dd,"update copyright

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8798]"
a421082008c3839924c2ce292b32dc05e2a65e97,"update copyright

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8808]"
b9daa3763cb733f8eb6c3c719e1a1cad55bf3bb7,"using old ast op code from v3. works fine.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8812]"
8ea7bd16d25fc79048f480fe61d0485f07351b24,"moved some AST code out of generic parser factory

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8813]"
ab8d07d82fabf90182675d95329c121237f36578,"got started on rewrite stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8817]"
919e3a1c0686d966a27394439a27140748e17053,"Small optimization

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8820]"
07161bffe74109cd7c26bc3080cdab81dfd541ca,"major reorg to get rewrites in there

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8821]"
411e1bb210d296ddf4752bee3e4ed656813892dd,"rewrite is now block of code; can have nested

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8822]"
3cfbe39b4f30fed097fdfa17610ef649fcf96da7,"got _root0 defined; each SrcOp knows its block now; setting current block

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8823]"
d33b3a4a624903611cca49b042dba9b7bcebadf5,"got A b C -> ^(A b C) working :)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8824]"
fbc92258f681989fd7731e9fe9b35eb07671b96c,"got nested trees working:
a : A b C -> ^(A ^(b C))
| B
;

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8825]"
df80cb762203701eb764ae40c999d4907e0fc232,"good start on * and ? in rewrites

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8826]"
f8abf5d40b923e1c2641717913ccd54ed909d66a,"A B+ -> ^(A B)* works!  fixed ant build

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8838]"
aad0a3752523d9650f80b383c1a491dead387f35,"got some rewrite AST tests to work; got ID[...]

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8841]"
671a7f90383af719c6af670557495e5201ac32d6,"got lots of ast rewrites working; off to do labels

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8845]"
557e3a838968f33961c249d402594afbc69f3693,"got 61/81 rewrite ast tests working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8846]"
a3da5c5f5337f763ab80a8269d44fe2a9eba1d68,"reorg to focus context fields in controller not factory and grammar.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8847]"
a20912ba7321c4ae5faaf04187b45b305d0c1f76,"got rid of ...IsRoot templates and model elements!

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8848]"
a06679fec747d00ef0646486e2ce1ebbb75d3f44,"cleaned up

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8849]"
1dc598c26edc6bee379b6ab0c92ab57ae94ac690,"got lots more rewrite ast done including predicates

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8850]"
dbceac768dbba6a2541851e5b01eb81a9874e22c,"all rewrites working minus error checking ones

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8851]"
59178d995957fac0b4247b59dfbc657f3af1ca4e,"got most of AST op unit tests working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8852]"
39fe27dd1f8b714f4c7ad6cedf938b793e43f01c,"fixed outer most vs inner alt issue

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8853]"
8a1a9d39cd6c9b14910e8cba62e8dd44fa1159ae,"fixed ast structure unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8854]"
42f6b7cf86e55230de97125e7e789dcd90dd5655,"after much bullshit, got sets working for ast stuff.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8855]"
f36b1ad87592a163dc833216afbcf4d82e628296,"started refactoring to collapse tree walker grammars into visitors

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8856]"
b9ef4f9beeea846a16553e34ea816f7ba10e095c,"woot! new visitor does away with BasicSemanticTriggers.g and Refs.g

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8861]"
f81d629780cf1086e5ef611539a81927aae31805,"new visitor does away with CollectSymbols.g

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8862]"
43f4ef59f728b16e5132080e1035cd90a00012e1,"track tokens in SETs

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8863]"
65396e6d7c4813051fabf8f6aff1353907280581,"don't reduce SETs if elements ref'd in -> rewrite

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8864]"
8de140836572d475d790d156ed17dab924a65bee,"rm bad error

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8865]"
9fb93fd0901cc68b5b8d34f123f3474a122a0ba6,"fixed wildcard; ast ops all work now per tests :)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8866]"
7a109d29d58b18fde1a64921cdf748b71d337954,"added a LexerInterpreter and copied in unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8867]"
c3f5bbed379ca67659ac066347e0423a0e0db2af,"wasn't chked out

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8868]"
90a4bd9c413c5acbf946078a17108063a4bf2c50,"rename

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8869]"
5ffe679514150b98a697db3f84bfa036cab8dfea,"part of rename

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8870]"
c6904bb21b5f0127f03b9b6f4b2e961fe439d326,"imports get merged into root grammar now.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8872]"
66933e36a24e610041c3cd6ee397cd4cd22dfc22,"got token aliases checks done

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8893]"
6dab71e160dffa56267b7280961c62f654fa54a0,"symbol issue test working again

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8894]"
36f3590f6c395537cc76276cbafeb25c15647518,"got rule props in for current rule; fixed yet another freakin bug in implicit lexer extraction.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8895]"
40f9e867cdfff0a9b40408d75eea64b602605b7a,"23 import grammar unit tests pass

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8896]"
3b52eb4e6ae4354f5035212dfff4ed1884b61d39,"snapshot

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8899]"
ba9f5d54e727a9c88c62e67fefa0a26bb9896377,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8900]"
d51784a250522ed0c416f4e9aa868b5ea43c8c18,"got lexer actions working again

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8901]"
66da1f723af570079806f7a638c4a09228c32e69,"got unit tests working again for interp; got args funcs in output

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8902]"
1fcc12a7ad4f7d8144824a2f2a9a5535d693396d,"changes to ATN simulator just before I try adding context back in.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8903]"
b4b02bb813960c105d50193623f81aeba4ed8dd1,"cleaned up atn construction / set detection / unit tests. still not done full context in parser simulation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8904]"
613c802c8cf6d9ccf0404e6a27039afde922a4a2,"rm dead code

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8905]"
a29feac1bfa6ea95783b2b9532a4cf4f2e4dfc72,"a bit of clean up

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8906]"
76ca9ba0d56c5c4c997fedf1a57f25d27fd3b166,"a bit of clean up

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8907]"
c6fa2fce6eb2628babcceeb312dd427525f8ffee,"decided to clean up a bit, backtracking from updating current to have inner/outer context. will try with full ctx again.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8908]"
fd3f8b17c9039fc9147adb8e0ce6b692eac786ae,"~sets weren't working; got closer to java.g working again.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8909]"
078e2ab47c9fc80db7912d548d3c6d9ccd58ec47,"java.g working again.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8910]"
213628796650752086c7d0bbb87b50b8a0c8fb29,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8911]"
2db09cdeb9e1bdf8f0cfb2a037d0cfde4cf5e4e3,"rm scopes for rules/grammar, added locals [int i, int j] for rules. i do not generate anything for the LOCALS tree at moment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8912]"
9328c164af8e3d0033f32ac6259b020f3d417dbf,"set type

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8913]"
e084c12483c95a33f8110f9c4900fad5eb42752c,"rm gated sem pred and other weird variants

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8914]"
10d7a79324cee3522ff705566585def8ef7d65fd,"reorg; cleanup. added ast.g ptr setting to nodes created during left-recursion elim.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8915]"
0cb91817d902772a171be046473b1a2ef26d0d69,"not tested but put locals into attr lookup for rule and code gen chunks + java.stg

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8917]"
3d15daccad9a3fecd0f886f4fcc9292ac9373548,"got predicate issue resolved. executes preds if not dependent on context and no dipping into outer context

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8919]"
cce6c70b2e76bcae18f385910f006343c9971f93,"fixed context in sempred. don't exec forced actions either if in outer context and dependent.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8920]"
dcfb804ed39f79697f9a2d472d68cc7f58c46a1e,"added method to get context for non-arg rules

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8921]"
4b5cd3a9bab9325303be9d2ff029a79fea9dc8a2,"We're forced to exec args, even if dependent on _localctx.  If no actual context to use, create dummy context to use for arg eval only.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8922]"
b90b073450c71dacda2806bb490196ddf179dfc9,"getting more unit tests in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8924]"
0168e0837ad5f7cc9a848a552c5e5ead932c45ed,"finished getting unit tests for action/pred exec during ATN simulation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8932]"
2ebedba42170f7a878a10533293219664adbb8e7,"debugging

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8933]"
64e12dbfa5884364e713ebdc3afd067a27d67829,"add method

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8961]"
cf54eea3b3f47d8c9eed3254d45173fca71d7e8f,"set type

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8965]"
e32bae327629c5dd84725f422f78bc99a952e037,"rebuilt ATN structure for ()* and ()+; two decisions each now unless single alt.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8966]"
c713b3dd2d3016c10a4c08c4965e5176b40313c1,"rm print

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8967]"
d2651a50a6e0fd31279b95b67d564adca7ae85ff,"backing out changes; tried 2 stacks; too complicated

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8968]"
328444244fa561ea141b365afbfd7d9ac7c2cd4b,"backing out changes; tried 2 stacks; too complicated

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8969]"
a7f2bc31ac079c39d04f7209ab2bc16da510b715,"ok, got new simple semantics in for sempreds; no forced actions and preds always eval unless ctx dependent, in which case they need to bein original rule.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8970]"
ec5d74c83ef800e96a1af648cbbe385cd5c9cacc,"removed all traces of FORCED_ACTION

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8971]"
d926ec9661706858ba78ffa91f62117b6acd913d,"WOOT! all left-recursive tests pass

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8972]"
a9782118acd6c03377c530b14edd9a6d424c6c97,"add

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 8985]"
f44c49a8b8d76e681c8f616a4cccdc63c0c7e80b,"got lexer nongreedy loops going

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9018]"
085dd05bf17f071d22e9d089932884d914dadcdf,"got parser nongreedy loops going

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9032]"
62549b65bf18e71eef7782edb274a115adb90024,"add dbg classes. add mark/rewind

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9034]"
7aad57fe492a35a021d47f54eca29f56aa2a967e,"add

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9035]"
104f39acdee6388106f80b9bf5955a4b2750cd40,"working on parse trees

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9036]"
c1aa0fcd101701e172bacc4e3d619729c38db6fd,"New parse tree mechanism

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9037]"
5c6f35abefe42f36e2adc118c66289e8845a36a9,"did some reorganization

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9038]"
783f1bc38f6d8b440a5ad4777a7c761dd53d30ab,"Split token into read-only and writable portions. added release method. moved the methods around that get input streams and token streams between interfaces. simplify the character stream interface by moving the gas line and get characterization methods to the lexer.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9039]"
32a375bbf7210fcf9abf401fc665c5c96015ec5d,"I split the tree interface into multiple simpler ones and removed the methods that can modify a node. Either you should use the adapter or, you know the concrete type and then you can call those methods directly not through the interface. The whole point of the interface is to be flexible but then for consistency users must use the adapters. I'm also starting to pull helper methods into a Trees ""module"". I also renamed CommonTree to be CommonAST. I also renamed the adapters appropriately.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9040]"
5c35165873b1317dc495dc26ce8821c64c4f3d3d,"update the comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9041]"
01020ee1bbaa50bb0feed3b6da4a1dd03c2e254a,"more cleanup

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9042]"
528d6df1e3d9f16e622dd5dd1f6ecd667aeaa009,"added list of rule consts; parser ctx tracks rule index

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9043]"
f93bc7aa7a968a2eac7fa83bbcf4a09b1ce99e64,"add org.abego.treelayout

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9044]"
0f74909c8ccd4ffd3d933f0b94f6d552e77b7840,"mv ruleIndex

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9045]"
afb767b99c383ffcbefaa7570f547ccdc9cc8831,"should not be in depot

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9046]"
99d5d64efb10ede3e3a2b1ba9891fb5620f82600,"update ant build

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9047]"
d3dc566a6979a5c159d4663b45d6b12d823c3ce4,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9048]"
730794128ea570221c0ae836437b54adee6fa530,"parse tree visiting; now, we ALWAYS generate a return struct definition: rule_ctx.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9049]"
1e595a486ac0d1aac2a76c307943472a7b856247,"add

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9050]"
a440d4e988c1cea50e382737d70b7c64b0795dd9,"add TreeViewer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9051]"
4f2beaf69d2fbd11297d5fa1fd1d61622c26a86e,"rename discover/finish

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9052]"
c79848cca00af027b01e086d30d2a68effa5ae6c,"gen listener file; reorg file generation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9053]"
297087770eaa3eb3d3ca2fbd7437b08a3c3e6c1a,"scope listener name in output

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9054]"
c16782c8488a4da0e7e925be02f1725611841dcc,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9055]"
0e7911f99c369209850a49f0405b4991c342b059,"add

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9056]"
b671cb1fba9f1e02ec2a9ceb7a93dcd5aa3aedf4,"add treeTextProvider and various ""visual"" properties to TreeViewer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9057]"
da7e7c88138b3697dbd74b083465eb124811b7e3,"clean up tree output, rename _ctx to context

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9058]"
2d234ee28ce62ca9262a5a663a0dd507e7be4db9,"Got the visitor thing cleaned up enough for a small example

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9059]"
62937ca6393ba34773a51bdc2037611551ac4fbb,"rename visit->walk

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9060]"
f13fd1973e5613abf710546c204d666003c7d749,"mv ruleIndex, add alt

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9061]"
bf194654373d42d1200e337312cf825403a721a0,"Got a rule labels added to the tree and also altered code generation so that it pays attention to the labels. fairly major surgery but it's a nice refactoring.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9062]"
64ccba416817b93f242f2d59bf3bf2a9ed9ff193,"rebuilt the code generator so that I generate a separate class for each labeled alternative and modify the listener so that it's always enter and exit rule; the type of the argument that distinguishes between them. I now create the overall rule context and then copy it into the alternative context if they have a label.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9064]"
0e608ab0a40defea09ad90cff4c854275b85ce13,"clean up unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9065]"
a1c682434d0e1f5313852a036f88cf6c57f28b13,"removes the individual stacks to track rule invocations. $a::x now looks up the context stack for rule index RULE_a. they're not done very often and so it's better to say all of the overhead pushing and popping the contexts.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9066]"
a8195e5d7c6ff7f1f6a56d9fbcfea9de145513aa,"playing

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9067]"
6c45753bea74f9aeafd99f1d170ce0d2f1788872,"got basic tree parser ^(A B) stuff in.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9068]"
a126e2043a5d8b05b1b8726b77994b8c92d809b2,"add file

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9069]"
0c1716d0629b6e65e1ce910c21cebcc406451d05,"reorg to get tree parser gen'd

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9070]"
b63b271815adf5f601aaa3aeb872aaa4ea1d0e7c,"got basic tree parser working.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9071]"
9c5f636bea85851f49cd2e91e10d0ddc8d19ec98,"labels work with tree parsers now.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9072]"
149033fb2e725a3dac1712daa2d8d35f5f5f6d40,"add more tests from v3

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9073]"
93581cfa9816dae8afea5bb1457f6cbe844ad84d,"got v3 tests working in v4

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9074]"
e8a2a738cfafacfc8f02492d7181d9e9e5b90edb,"rename TreeNodeStream

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9075]"
f02db87c026ffc45fa17b664a772bc7a55857c1a,"got nullable kids tree parsing working. got $rule.text in tree parsing working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9077]"
e3d6db04785e7d2249376299c884b6bcbe26df7e,"more unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9081]"
cd2c4e622d6bded617720b790c845707328aa3eb,"fix bug in code gen for * loops

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9082]"
fd3f482375bfc88041ef285c9e0bf74340f1e60b,"fixed regression in atn interp

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9083]"
c535d45f660b4e5394b18fdae72239b02a4f58b6,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9084]"
82360bfaa86c226d5d344251cb572e6dfba55960,"clean up

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9085]"
9e69640bc13b07be87733d26da19851205ea1047,"added more unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9086]"
60c9fe76c0b6da18b4bb6f94e6e1ddd7c7d3172f,"almost got new error mech in 

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9087]"
6b4e9905fb066f55ff309926e40962f9874d5ede,"rename member, tweak output. new chk for inf loop from error sync works

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9088]"
98942212493718536b4edc3fa3ed692650fc85f1,"rename test. tweak errs

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9089]"
298a15e017f059c4107aa852943891c43ba3a998,"Parse error systemTweaks, removing the debug API since we won't use it

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9090]"
49571e386f92efb484d0a99551aa4e1346461d4a,"err clean up

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9091]"
02d424a92b506ccbfb0de3c76b5cc21796c55bc2,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9092]"
05360be562f45dc31ade10aa485780168df6cf65,"more cleanup

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9093]"
2a34d00d09f18096875fa31efc5c54f41767a77a,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9094]"
c33b06fdde6de46ed304157f9ab5218580058881,"bug fix; no lexer if no lex rules

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9095]"
1556d076bdb41994bfdfc3c77b293c3b7abd736c,"got token insertion working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9096]"
bf48ca5b7309608ed84faf13996b1a4d8b97fc0c,"test for conjured token

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9097]"
8508dd6da0efd30d0165caf18474aaf4ea44d9e0,"got sync in

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9101]"
48e292dcdd5095983150c22fd34ed758d8763001,"new test

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9102]"
473e56d59fb2b8319ab7c9212146cee99f58294b,"more tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9103]"
2707837bc84e7003886dd24483f058b649dc571a,"factored out node construction for parse trees into a consume() method. added a start to the test parse trees. added the  notion of an error node to the parse tree.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9104]"
5f9e2f6e05ec145e4aec1a7d22aac8b829080626,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9105]"
d56e8c3a1868b13b98aca8c36e6641dad305e9cf,"reorg error and add parse tree tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9106]"
e293cbbdf58532a4479e3e37516d5409a14eaa9b,"UnsupportedOperationException

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9107]"
6179d7586bfec4667b6710328895b7e993d59876,"tweak tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9108]"
c99ce6d26ebd199447b894d643b852ed71779a84,"tweak tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9109]"
1efa316de9b341b700290f88e7421c9577a3cad8,"added ctx stack test

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9110]"
251a42ddbb0b48055a4510102c53c2446f95de05,"bug fixes in error handling

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9111]"
547d58514de51b427b011068a524bcd42a237e3c,"bug fixes in error handling part deux

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9112]"
9784ce3d22c4f425de83ab7ddfdbb5eba6c5e3ce,"move ast nodes to new package

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9135]"
fd9027b4a07a2296a1fa91e9c4f8a83008682a47,"new nodes, added visitor

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9136]"
632ccffd9334c96fe0623add8f629ada876a63dc,"added comments

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9143]"
3bbcfa5d255bfdef4612345382faf3af25eb73df,"change name of method

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9144]"
9eb19cf9294f670729547f02b6f1c7bcff727701,"added start/stop methods.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9145]"
688f69541c8b0fae542391305cd4496421c88703,"sync for use at home

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9146]"
0dbebf879a5260f243fcd567f3a3d62a234bd5f6,"Use hard tabs to save space in generated files

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9147]"
6c104b772476f49c51ff007fb07fd634b0295185,"pull apart treeviewer; rename ANTLRParserListener

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9148]"
542a57b49aa4154e4806737fa677a513e354acea,"reworked udo's tree viewer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9149]"
89d4b31ef652e281f743087f373a4d5cdefd9551,"rm treelayout, add jar

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9150]"
72906f5910f552b0d2636c5d4759c36c10f6e6b7,"add font metrics to gen PS properly

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9152]"
78bc92d81bf9815f4a4c27a5af7cdb88e119b734,"compiile error

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9153]"
39314b8d74f0acbc8455918056ddaa72fbce3284,"added PS support routines

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9154]"
4920bb2c9ee01480c6723499607f0a812bb399b3,"_errHandler.sync(this);

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9176]"
11b61d979dd8eff9d1b5d924e039ae5264278810,"refactored sync/recoverInLine. figured out exactly what sync does at start of alt. setState goes to loopBack now in loops

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9177]"
2cbd522320f95551913748885b6ac4c5d15b4594,"clean up, added tree parser err handler

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9178]"
565be04fd26003c04f87648f1d8b4a9e6cc1052f,"sam changes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9179]"
08bba26940934f7ada6e26cfa055dfd46a7006dc,"commented out DotGen

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9180]"
490cec9af69148e7ad257d38b81c394f1d498964,"antialias lines

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9181]"
fc8507285188b4b86d3ba894cc7a6ad6bce12023,"add ArialNarrow, update to 255 max char

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9190]"
7f867ec9d6c5d4c70a0efe45d38f78538eb65177,"tweak padding

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9191]"
ad468ee29bb43f563d6488390fc1a47c3adacc75,"added tree node highlighting in treeviewer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9206]"
980db2caac89f41b8a8f9ab88306c2113c8d0102,"v4: add ANTLRMessage.getCause(), overridden in GrammarSyntaxMessage instead of keeping 2 separate fields

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9210]"
bedb935bdebc5fb79581a7d6fa44b7d092126997,"v4: Fix IndexOutOfBoundsException when token type < -1

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9211]"
e2db920cced1ff26827f7e113c2bbcad54a6191a,"msg.e -> msg.getCause()

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9218]"
f44d03343a18c2d10f55e557230b26089dc94dd4,"push to grab at work...lexer might be hosed

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9220]"
6576abf65fd4b965a9a08eca6e39ecaf9f759525,"reorg'd lexer ATN sim to fix bug

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9221]"
6e2bbcdb42bdee6d3b08b06c17f5ab9e49dd0056,"got EOF in lexer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9223]"
bc5577307c107c97b28614a501ff22ed6fbd611b,"more tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9224]"
95bc4236690ab2f11d31a372bfa8f39d210dcab4,"more tests and made EOF always appear even if DONE : EOF ; in lexer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9225]"
2d43a22e27b81cd511178ed177d0b6bd65af1402,"reorg'd lexer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9226]"
800564e1d6f4d646dd49866122861c79832c6687,"made DFA sim loop smaller; refactored

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9227]"
947a11a3e4211ef90e6aa6bdc0a34a5e66ff846a,"start  lexical error unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9228]"
dd1ad971a9a5c9ae6fe2c208e65695e1c48cfbfb,"more

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9229]"
5cf4cba9c7e00d334c3681d26482772289cbaf76,"fix bug in modes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9231]"
e75aa84d4cc2666bb4d033e4f53773b75bbde1e2,"udo fixes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9233]"
2efba8b39dade60e363e8b7996cf4974bd0158d5,"it was sending null to postscript generation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9235]"
8eb2e62feacfc237fb2b0b3e5e1a8b59e3f2d468,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9236]"
647cb6d0ada0bd6bc0c94398861e9f17fa245221,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9237]"
ffc4f9b126acce48defb82b87eac78136df81e8f,"added Cay Horstmann's printing code for postscript.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9254]"
b23c093b687755ffe27cf3677e1845440e50c1b4,"no longer drawing background of nodes in tree unless you set a color

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9255]"
3e03259ac04b57175a77d4067d0fc3f948f86456,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9260]"
c17aab708f9ca0dc05088e53e37f64b635cc5f71,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9261]"
64b4cbd2c88490e80cdd67325a081e9aebbf9384,"added auto highlight to tree views

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9262]"
8237c2f0fbcd2637fe1a68c9bbac2a17bd2f8b3b,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9263]"
ddb7ae218d7ec1b3e249bdbec859f846e84c0475,"useError recovery said notThe set that follows a loop for sync()

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9264]"
ca17a4ce5b6fdc41404feccd3f404cc6177f72bc,"ooops; wrong version

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9265]"
e0fc8fe087ed7667070dbc6d99e589112b3125df,"was consuming too much in recover

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9266]"
2767530a4776e8563aac16ec66a6d54e5b42ecd0,"name change

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9267]"
783c3b2e5062280ac8270c247f84ccaced4cb520,"v4:
* Use mark->seek->release instead of mark->release->seek
* mark() returns a marker. must pass the result of index() to seek(), and the result of mark() to release().

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9268]"
3ca6ab034d1764f4186d4df7b4ad15dd86e9ed4c,"v4: Can't add a DFA edge for token types < -1 (EOF)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9269]"
f9c364db1fe5107722a47e5a93501d3c05cd8db1,"v4 tool: A couple simple generics

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9270]"
3a8ab7f8594ed7dc1104ce4f3b861e1cfb4e8267,"v4 tool: Fix compile error (Ter's using a custom build of v3... this works with both) :)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9271]"
26d5d5c9c0667c57fce2e7802e60719e8175d2b3,"v4 tool:
* StringBuilder instead of StringBuffer
* Add Utils.setSize for List<?>
* Use Func1<T, TResult> ""delegate"" instead of reflection for Utils.apply (and rename apply to select to suggest a return value)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9272]"
b6d8ff9234755dffeb9a9d95c32813081fa93612,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9286]"
fbbf74bc4e9d765dd651b62e554335e504f95927,"add exception to recover()

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9287]"
843375522d686429f0b4632e587258707f165562,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9288]"
1cd3bacaf239856ebed5dc72c4199155a5f38110,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9289]"
61e9eade6a57d943a2a6d70c83d66c03a6d8c602,"added {...}?<msg=""foo""> option

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9300]"
3729529f2597511107d4f333ff5c1f8ddb01be7f,"msg->fail

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9301]"
91ccd76e654324003431a015ee0bfa7115205761,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9302]"
e6d316f3e96444f66c1109ce518f6f1954d5f0fb,"added {...} as option value. <fail={""value must be <= ""+$max}>

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9303]"
7050d07d5b1e3f15ef50da812ba6411f4d593974,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9304]"
f420f4c3272332c990f9aa5e5bda07c079c898a1,"add OK button, set size, add scale

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9305]"
324884585bb7927e0df1bfdcaade2e4b912bbc14,"add slider

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9306]"
1d29898f1b26e2130aea7b60858767f6b60d4f30,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9307]"
60817a180a55bf0c2a011b70b2266b49ead27560,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9308]"
c8e9e12a7409a9a59c4f1e0f31183210d78eaa1a,"add <T> to ast stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9309]"
27cbd249acc164502b06ad550384a9608a8c9c4d,"Added lots of little stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9310]"
d597de1792ca6c85ec0536b83593722b348831ff,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9311]"
fe16bc3f1fb0335aeb559681eabcd32be10b3f4f,"v4: Add ParseTreeWalker.DEFAULT to make basic listener usage easier

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9312]"
6e38497b114314c57de67f910985afc2cc1283d3,"change name

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9313]"
8792fe19ff1b45c209b203cae73693fc9026224d,"rm

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9314]"
ee4a70cf16181ea00303715b2d55e33d5a5882e2,"v4: StringBuilder instead of StringBuffer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9324]"
92bbdfbaea03b9f08f98010decaeda21c64ab41f,"v4: Use generics for List and Map fields/locals to clean up several casts

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9325]"
29ec107b24a508cd216bf8dee601ad6324f5a4b8,"v4: Remove explicit boxing/unboxing
Add @Override and @Nullable annotations

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9326]"
ddf4cadf06a21a0cd26583cda8cd0d3550283236,"v4: TokenStream extends ObjectStream<Token> (specified Token as the type parameter)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9327]"
ed32646f527bb3a69fe6b1591d47b78a30b9fe8f,"v4: Simple use of generics to clean up local impl code
Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9332]"
66c53e18dc46a77d548d7bdc14907b1e456fda32,"v4: Expose generic List<Integer>

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9333]"
2fce2b0f2d03e62c33e8cd2ff6c0ac5aa3e5f916,"v4: Fix mark/seek/release for LookaheadStream
LookaheadStream.LB can see back to the earliest mark
Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9334]"
79da4c738632845e1303fecd7f56dd82e5fcba83,"v4: Specify @Override, add <?> for local generic instance

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9335]"
421a261ddb0db2c39ae35f18260bc687c23a2a5f,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9337]"
f9396907bd669900a065c6782912f3e09d362720,"v4: Clean up impl with generic List<T> field

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9338]"
41ed2408501f28aeeb3811391da4ed4eaaea5e1a,"v4: Return List<Token> instead of List

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9339]"
0d41d48d6e2ee8cb7e949bbf0316758f7c1bd0fa,"v4: Remove unnecessary cast

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9340]"
352619810552c3bf1c106f9ce2c5c28d200a7aca,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9341]"
36a9af8b2991a8f7704365ff61e97b97d9541587,"v4: Specify @Nullable

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9342]"
818be0bfb76d8e6f920376cd1efde9619e59bcb2,"v4: Simple use of generics

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9343]"
5ccf0526aab5a31d7e339fde9ef965ea1b65e146,"v4: StringBuilder instead of StringBuffer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9344]"
f356cd42d13f5bdef4a69e3ab7a58d65b647de68,"v4: Remove unnecessary casts

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9345]"
062210b54a032ec2aece9931b74b3a99e1526357,"v4: check for labels that alias a token name

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9346]"
32976eefdb8c5ae0b71fc8842831ae99b5881bda,"v4: check for invalid block and rule options
fix error for hetero AST usage outside of rewrite in alts with rewrites

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9347]"
dd0d5e3ed56446d003374d7d424ea96c691a42f1,"v4: add support for custom interfaces and extension members StructDecl

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9348]"
7e6eb1fda4c01e4b44649c364cfdab7f4da227b0,"v4: fix possible NPE

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9349]"
0fb5baca1ca23de5b86b8f861e419f63b80c7c6b,"v4: specify default Parser and TreeParser superclass in the code generation template

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9350]"
b1a060a61e74248d43470ffd715b0e384d638c61,"v4: refactor ASTLabelType() and TokenLabelType() to new templates that properly handle null values

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9351]"
b27441346b1266bfc3b185bafe36caeaa1f1d20b,"v4: Specify concrete value for TreeParser<T> base class

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9352]"
24b354e0a52ac245bf3f3e546fa18e44c7a1da61,"v4: Return List<String> instead of List

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9353]"
08d47088b4ad71ac09039a7a5917f8b5424a3eb2,"v4: Fix NPE when creating Action elements within an extension

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9354]"
89b1d52c771f64540676ab923c242904b47fbc39,"v4: add error for isolated rule refs

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9355]"
57eb76aab3e54835868678b328adedf41704a030,"v4: StringBuilder instead of StringBuffer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9357]"
bac9c543baf955a743688eb938553a6b2b5b185a,"v4: Fix _LOOK for NotSetTransition

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9358]"
5e567eacc9633a3857c9f81cbdba90a99d3ff236,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9359]"
d01c583e36446adb996aea28bbe88d38ca7b7d18,"v4: Class<?> instead of Class

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9361]"
1da1fe8002a4b8a6330552900a892f899b89c328,"v4: remove unnecessary casts

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9362]"
66f0e01520650f499e714f81690380dc03c585da,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9363]"
845d1f913c7d023d5c5373c37a5f6b9760101e8d,"v4: Specify generic argument for ASTAdaptor usage, remove unnecessary casts

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9364]"
77aeca8174d1778e84239d99181a00682ba308d3,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9365]"
88b4c7572faa5e13da3f0b772b92ea5d509f9659,"v4: Remove unnecessary casts

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9366]"
e2dbb085acae202b02f9db287f22e658070a19ae,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9367]"
afebb6138e4bd4f206d964d9b5f768c4a1a974bc,"v4: Specify generic argument for ASTAdaptor usage

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9368]"
c4bb346f9a143e5296b25d285733162f49c8c19e,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9369]"
1581c54ff6e1212cc3d478d7a8de8494f7ae7943,"v4: Specify generic arguments for ASTAdaptor usage, remove unnecessary casts

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9370]"
d9c0ce2f0c7d7ee17161128422f256f51586b638,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9371]"
9ce0968a5e4b97342e5c5cbd27ae7bc5664fadcc,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9372]"
8d92e55e49b230301dd29bac1494c5e60fa36330,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9373]"
0e587759c1fc65c5b692956ec377c8519559682b,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9374]"
5f6b463174fb0d24320a9f7dbbbc1063a8675f80,"v4: StringBuilder instead of StringBuffer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9375]"
b441dc226abbb523ea407863f6f22cfe76d7a99e,"v4: Specify @Override

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9376]"
73907aacd3fe7ff4345c3f3362960370f5da487f,"v4: Unnecessary semi in {;}

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9377]"
65f8b9f124277137040c2b663d734f7ead1eea43,"v4: Add TSymbol generic type parameter to Recognizer, BaseRecognizer, ParserATNSimulator, ParserRuleContext, ParseTreeListener, ANTLRErrorStrategy, ANTLRErrorListener, TreeParserRuleContext

 Move ParserRuleContext.tree/getTree to the generated contexts, implement ASTContext<T> for strongly typed getTree() method

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9379]"
f999b5c3d0ffd93848b1cb1b8f2a2cfd68b9deb2,"v4: TODO comments

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9380]"
ff97c91ef2b5414d04747c83d348df3b87d86a47,"v4: ObjectStream -> SymbolStream

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9381]"
3e279fbd3e6a6a8d715c0a3d125ad916f94937c9,"v4: Update BaseTest harness for changes to the runtime

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9382]"
c12167974b41bce9b8a66f48ae7fadcb39d03897,"v4: fix several unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9383]"
6060b6c288475daa2d393f1b158007bcea648687,"v4: visitToken->visitTerminal
TokenNode->TerminalNode

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9384]"
909ea67d6b1aa4184006121df264f0aeadff9f45,"v4: support disabling the inlined LL1 code generation

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9387]"
ca141afc287a63842ccb24cb559bb0c3fccfb042,"v4: @NotNull and @Nullable annotations for fields and methods
mark fields final
no behavior changes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9389]"
5e1b372ca1a3e3cb3498d27753ab4256b4b9d4fa,"v4: fix generated attribute name for wildcards (_track__wild instead of _track_.)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9390]"
9e89438556c199ba36d36e301599aa3bff6bde6e,"v4: specify tokenVocab to fix unit test

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9391]"
7774405ee38650dd7047b9506848a9682bd13519,"v4: Can't use the @NotNull and @Nullable from com.sun.istack.internal. Adding our own until we settle on a final library.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9394]"
f64ecebd34c948432683e20e12c3cdde6429d99f,"v4: Fix LookaheadStream ability to seek forward past the current location (via consume())

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9395]"
0092b421b506728da53ee05a044748825e7b9147,"v4: Fix Lexer.reset (and as a side effect fixes Lexer.setInputStream)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9396]"
ac7913e67fb80a0f6aa92c9c2393a9a32c7a7115,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9398]"
06ed597d294cf543ce15c2f56794480e338dfcb6,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9399]"
7f042393d21e84ee2631b96dbf60a92b3f79a208,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9400]"
c1b77ac6a870a17739496df2d8c5456664f75319,"format else

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9401]"
20f86b80182413f865da93c5b99eff13f0ea48ca,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9402]"
4476cbf22ba07761980c294d9ba7cc8ba932b8a4,"else format

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9403]"
6b1c367d54e2300f3db9285a63f8df3cc97ef24f,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9404]"
5c7ff2cf9dea39c6900841551d3d162042fec8db,"v4: Use IntStream.mark to ensure that CharStream.substring works within the bounds necessary for Lexer.getText

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9405]"
b61603e98a8b3126134c4249f2d020e36da454cd,"A rename of TSymbol->Symbol and a few of T to Symbol. Also changed name of the default error handler

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9406]"
140f0fc098c4080e90b0ca16471010b47ae970ac,"visitTerminal had extra <> so it was <Token> arg type

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9407]"
426d96c3b8f3a40f86cb2e0f51521ee859032c0a,"v4: Fix the BlankListenerFile template

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9408]"
beb4386fd0665d389c5d33561cca2990dbadcd1f,"v4: Fix BlankListenerFile (these files should be part of CL9408)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9409]"
01a71c5b027558ba16bef8bcd406537e9968d7ea,"fixing a lot of little thingsTo make my examples work

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9410]"
18e8a853e79c38a232feb496d1fb6caa4bd59f0d,"rm prints, add log mgr to runtime (in case we need it there for profiling/testing etc...)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9412]"
4b4a7d9c7ae5cb3eefa874d026576d0b7566e809,"add LogManager, add InputSymbolType()

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9413]"
9f294794a86ae74c17683ee715b2ee5b58ab77ab,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9414]"
e71440b9cb67dfd019934195ae1f7cadfbd4c9ba,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9415]"
4cc8a8e50119f528a7edd0bccf4c7c5f049e92a2,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9416]"
2c98cae7518cb4e7b50cbdb54fda56998717f00e,"no more line/col in string stream

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9417]"
6abc73cba37a5d68258f3f1d13b0e60d5b3f0d49,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9418]"
3e216a258d77876ad192e67b8d29df5321f9108c,"combine Reader/InputStream into InputStream

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9419]"
f8a8aadca27259c4e5e72611420f5d809315b2d2,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9420]"
0fe415e227913598702e0ad65f7bdc433ce61cc6,"checking in but doesn't work yet; just so i can pull at work

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9421]"
dcedc63dec52cb1b4500e4f65ff1bb10b77522c6,"added missing error msg

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9422]"
f3b0ffb8b2ffaf4e2d3d7035cea60e8d672d9f70,"almost working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9423]"
45dc683a91de4b683a2ba073c82c8e2811b6399f,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9424]"
31c24292cd4c49f563d2963251b51839e741a909,"unbuff char stream working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9425]"
0d691db980d0e272955008a9a5229e802b86e863,"added uniq error codes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9426]"
4b393cf44814391705506e32ea3e7dc398d0ebb5,"rm QStack and use ArrayDeque

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9427]"
7d5c69842bfd7601adc5ad42b61e550eceee40e2,"BufferedTokenStream gets generic type. CommonTokenStream extends BufferedTokenStream<CommonToken>, rename unbuff'd stream. add unbuff token stream

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9428]"
cfecf4b10982342468c7878ef5f5ac92fc9e7a96,"add CANNOT_FIND_ATTRIBUTE_NAME_IN_DECL

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9429]"
09ad4bcb0a2f0e66a402ecbc2c23b293ab97f727,"v4: Remove dependency on v3 tool (still depends on v3 runtime)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9431]"
ed12c072e9dcfff3931707373b63579070a04c57,"v4: Update BaseTest with @Override annotations, remove obsolete rewind methods, and use List<T> instead of List

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9432]"
95f3afa562993e03378ef26704c84a196d88cb9a,"rm ANTLRStringStream. combined with ANTLRInputStream. causes name change in lots of files. rm encoding ability.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9435]"
72684907bcd2da1172271b15a2c9a294f7198d12,"add -Xlog, add .ctx to rule refs. parse tree test pass.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9436]"
1495ba5bd7f94dcee0fd5c8535bc59777425f299,"v4: use getInterpreter() instead of directly accessing the _interp field

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9437]"
cf0d47c8fe64869b85895f56de508597610ed62b,"v4: Parser.setInputStream calls Parser.setTokenStream

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9438]"
22edf772634438666cb981497741cd0cf3bd8239,"v4: specify generic type

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9439]"
83e5e3fe7fccc77cc4c9a4af4540531be405c320,"v4: Mark @Override for generated action and sempred methods. Don't emit the DEFAULT_MODE constant in lexers because it's already defined in Lexer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9440]"
2b36a19739fe09ce9523b49234aac559a3b6ee68,"rm Rule.scope field. not doing scope {...} anymore

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9442]"
ec5593709ee5716111b9f81b005677505b962688,"v4: Specify generic types

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9443]"
d0230aba5b6081c455b83fb1656a99b97ad1810d,"rm legacy options from grammar, rule, block

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9444]"
bf1e306baecb56337af112e126652f2c0b8c898f,"rm commented out code

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9445]"
ed7377dfd49190d012c2a2ae865fae70b473f6be,"v4: remove TODO - situation was already addressed

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9446]"
89ebd369f93d69bd98021a921c25b35302fb7b52,"v4: @Override annotations, update equals to check parameter type

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9447]"
898138a5e2907a32342ea75739260021ab398c01,"v4: Reusable ATN simulator objects

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9448]"
7a52d4e304dd4152c8b162559acb6d97ba38fd42,"Back out changelist 9448

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9449]"
4af8a7ac61aa292fc2f67f02e6edaa20c5e3fa6b,"rm bad comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9452]"
5dfc4aed1de32ec02b0da2300a8b7c322bac5a6f,"add on-the-fly listeners; augment enter/exit rule, consume().  playground/U.g and MyUListener.java are test. added human-readable toInfoString to ParserRuleContext such as
RuleParserRuleContext[s, a]{altNum=0, start=[@0,0:0='a',<6>,1:0], stop=null, st=null}

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9453]"
3b543098aa6c509920572d1650987c39c3e80dd3,"refactor grammar transform pipeline

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9454]"
06b27b82448ea27c2cba603efab19cd142a43db5,"added stub for ID*[','] if we want that syntax

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9455]"
d35560583ce6a245d7716320472be3b6d66efc8b,"add remove() to IntervalSet

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9456]"
c69814515b00798ea395b2d10cd02af4ac87bd78,"add unit tests for remove()

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9457]"
6898dc6f5eec833a8ffe929b4e8060fdcbe0fe01,"add readonly bit to sets

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9458]"
d2b24da47f7cbb69a11f7593358149e71af68ccf,"remove incidentTransition from ATNState, add computation for next tokens within rule, add nextTokenWithinRule to ATNState, add EPSILON as -2 token type

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9459]"
2c52166dd057f55493e7e8a2772002ec635cac95,"removing sync() in front of (...) and (...)?

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9460]"
fe1691da78540dcb4cf828655787c4a78154903d,"update comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9461]"
30d89abc4a26ae73e5dbbd849c8f8e4a7799e370,"rm type param

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9462]"
a6be7ddb9c75c59d3d4da26d37a75d14aa6bdcdc,"fixed enter/exit. ""every"" done first/last now.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9463]"
a81ab4cc64d0ff386df3e4bd7a7608c3a221dba5,"rm more invalid options

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9464]"
9b924d03481c7666b8cbf10d27cf6ba75b63ef41,"fix toString for EPS

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9465]"
b83da61f52ab05c0e8b0d1b5fb424a76662320f9,"Left EPSILON in expected set; rm'd

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9466]"
36a7597bcf972aca5e285aa1fae5313f701354e9,"adding left-recursive parser

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9467]"
181611da94a2ebd1d711f703a46ae8ceb197d2bb,"rounded line edges, no border if color==null; 1.0.1 abego

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9468]"
bb73ad341b857efb5d8d6bd417be61961b9c3cc7,"tweak

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9469]"
c2145a4120607afa562dc23a84053c357cf9dc62,"didn't store parser::members in combined grammar

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9470]"
21e9f67927cd3c176349d4adddcec0a20be2433b,"rm print

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9471]"
00365ac511bc6210b5c8cc81afd4744e119d1b80,"add test

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9472]"
dc4ce0cd161b0b431ae2ea187f5aa0c88b84f481,"update cmt in ctx and make out of ctx preds see through

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9473]"
d9a499f8f7ae52c284944e537c5f8d17c0823ab6,"got left-recur java grammar working w/o generics

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9474]"
c0262d569b5850b6715ccd92d1fd9a38a60aef41,"pull v3 pred ctx tree stuff

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9475]"
fc2b4cad07c20dce4b32547fbb14361ed1a7031c,"v4: Call mark() from match instead of matchATN

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9476]"
3b7e984d5fbf968a89582d5e10fe8b7dd9009036,"mv join to runtime Utils

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9477]"
eb6443b32b1ae560e38fa47fc18c9df9ab934374,"add TODO

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9478]"
e288ff30393e69d2dfef4ef648ccdad7210e1de9,"interim pred overhaul

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9479]"
9a1a8428b55d61d8885526a7b6e4a3b38e639810,"got ambig pred thing working i think; unit tests. missing validating pred thing.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9480]"
4e30119ab61f4101b025377cbaa80313e884ec98,"fix various issues in TreeViewer

1) Issue: The tree ""jumps"" from a larger scale to a much smaller scale when starting dragging the scale slider.

Cause: Initially the slider was not correctly positioned. It always assumed a scale of 1. 

Solution: I now calculate the initial slider position using the current scale (was 1.5).

---

2) Issue: NullPointerException when the scale slider is dragged to the very left.

Cause: The formula ""v / 1000.0 + 1.0"" results in a scale of 0.0 when using -1000 (left position). A scale of 0 is not supported.

Solution: in setScale I now check for ""<= 0.0"". In the case I use scale 1. In addition I changed the lower bound of the slider to -999, i.e. the left position represents the scale ""0.001"".

---

3) Issue: when scaling the scrollbars are not added/updated/removed

Cause: when scaling the preferred size of the TreeViewer must be updated as the ScrollPane refers to the preferredSize for scrolling.

Solution: now calling ""updatePreferredSize"" in setScale. This will set the preferred size to the ""scaled tree size"". It also ensures parents will be notified and the view is repainted.

---

4) Issue: only an upper left part of the tree is painted.

Cause: the TreeViewer overwrote the getWidth/Height and returned unchanged values (800x600). Only this area in painted. If the preferred size exceeded this size the remaining area was not painted.

Solution: Removed the overwrite of getWidth/Height. As one consequence the dialog will start at maximum size for large tree layouts.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9481]"
e00fa44996bfda0ba2f6fab3660c57c310d9087d,"Got validating and disambiguating predicates the way I want; widespread changes. DFAStates now have a list of predicate/alt pairs that they can test at except states. renamed Java.g4 to JavaLR.g4. LL(1) analysis did not fail when it's all predicates, which it must.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9482]"
0bf1aca47f8521a34ab9f785219817e7fd9c466c,"cleaned up a bit so that TestToolSyntaxErrors works. added some cast checks and some bailout upon error before semantic processing

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9483]"
2243cc2e8130b961992e0676a9ff5cd2781fed12,"wasn't seeing thru some preds.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9484]"
c25f3ff3d88976933957e6a2e89e60607e9fe436,"Add type parameter to BailErrorStrategy since the class may safely be used with any type of recognizer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9485]"
a71a9f04eadd2f1f70a9a73755c4781ab9455da7,"v4: check for null before evaluating sempreds in the lexer (issue a warning if no recognizer is available for evaluation)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9486]"
99cf07cc3c5895bd98fe44e2252d70e29f3925b3,"v4: check for null

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9487]"
07bbf42f8ba51ab6698fb528757d85d8f81cd6fa,"v4: Add <?> to generic instance

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9488]"
fb3de170d197b53dd56d0403e9d8e832dc8342f3,"v4: Add BaseRecognizer.isExpectedToken - *massive* performance improvement in DefaultErrorStrategy.sync()

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9489]"
1be2e2c556b22e4caf75f3f5fff72d72b949014f,"v4: Initial tracing support in the lexer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9490]"
2bbb1ca13240e84fdd888c1946f26f41a8d18616,"v4: Fix Parser.reset (side effect fixes Parser.setInputStream)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9491]"
befd9ba483e98512788d905310ab27ca8c8afcc7,"v4: Combine calls to Set.contains and Set.add

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9492]"
83a5f592d05a4e69d7e0b671f4f42013ddf09053,"v4: Convert do{...}while(true) to while(true){...}
Use CharStream.EOF instead of Token.EOF when referencing results of CharStream.LA

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9493]"
8096b3b4c482842b2e0353976fd412e677e5a600,"v4: Check for early return conditions during DFA updates

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9494]"
583668746fc0d345457d191422c1b14566f10152,"v4: Optimize ATNState.onlyHasEpsilonTransitions (5-15% improvement during warmup)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9495]"
8c3e8272d8f6ca2bc7ef1797e36a1afb696f2005,"v4: System.out.format instead of System.out.println

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9496]"
49ea01136c97daf24e1871c96b1fba46340d62a2,"v4: Compile the generated listeners in BaseTest. Allow tests to specify extra options to the tool.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9497]"
1ba52d6f542940a15ea25ed7239d117ffbc47dc8,"v4: Add configurable performance unit test

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9498]"
918544f2b23d74eaf12d2bd8df41d4a4ab9f4436,"v4: Code cleanup in BaseTest

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9499]"
417af93ca10a1a1bd016f00275295715c1bda05e,"v4: code cleanup in BaseTest

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9500]"
ef57f4424000c7112b1f44f06c957112050feb48,"add ""useCurvedEdges"" feature

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9501]"
1bc3997930c039c1d2abac36dfcf0614cddfeb4d,"add ""useCurvedEdges"" feature

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9502]"
8d7a97fb68be6ecba6ab87a971107ecb2274c909,"fixing some pred bugs. fixed unit testSimple in pred eval. optimized sem ctx.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9503]"
ad9259fc4f22bf2e99674d4c8b47bea68e30da4c,"bad attribute in error msg

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9504]"
b6b4583b921fcc2ae91e2d26d6be89401ef85e95,"let it build DFA again.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9505]"
a8219d943e49d75909aca009ea5deed4e80dd5ce,"got java LR parser working :)  allows e A B C e type LR alts now

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9506]"
11b6fa13f91e3c931d33096b425e97be6a275698,"v4: PredictionContext optimization

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9507]"
38c69af8055343b8dc2b6cb6b1de165bd6ed55c1,"v4: Back out changelist 9507 (PredictionContext optimization)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9508]"
4400ba169fa46143990198f484099e0cecb6aa7b,"refactored RuleContext to move all noncritical fields down into ParserRuleContext. Widespread but minor changes. Using the more specific ParserRuleContext where appropriate.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9509]"
4d942c37c84dd8d718349147d8f1ab67d2279944,"use RuleContext not ParserRuleContext during prediction

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9510]"
682e60b065a98fa296855af946535fbb7a933982,"v4: DFAState.configs now ATNConfig[] instead of OrderedHashSet<ATNConfig>

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9511]"
ae74881de6e180e0bd5221d0d0e22f60544f2dc9,"strip epsilons between alternative elements and also stripped the final epsilons before block ends. added an ATN visitor for general use. updated all of the unit tests so they pass new smaller ATNs. had to do some work in the serialization and deserialization to handle state numbers without state information. did not want to reorder state numbers during optimization.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9512]"
beec4ab72194bae60f032987905289d0eb162dd2,"v4: Back out changelist 9511 (change DFAState.configs to ATNConfig[])

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9513]"
cabe808c7f1cdc4cd072c5a6fd7cd74b2796b14d,"trivial change, gets small speed bump

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9514]"
f08e8fc098e2110ff2e37042befe70f0f4d0a5cf,"predTransition was not passing along predicate properly. rm'd unneeded parameter. pass null if ctx independent pred. added 2 unit tests for non outer ctx check.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9516]"
2b8a821c21818b0f8afda6c86daab42ba63a4f15,"turn off dbg print

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9517]"
80fd90d36348de19bcdb23466023f95a39244927,"rm'd epsilon transition in ATN after rule refs.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9518]"
110fafde5aab1a46ca796cdf86a170d7edf0d757,"change name

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9524]"
b09077209cbbb3e49d4f87c593545b5fbcca998f,"fixed hideous bug found by sam in getAmbigAlts

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9525]"
2ddb8100e983258ff8c3ec3fb64f1f682bf3fa32,"shrunk serialized ATN a bit

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9526]"
265a189a8641b1c99bfeb220cfee699567a07eb6,"crap. fixing regression. was adding way too many followlinks.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9527]"
cab803d5f34ef745f506ee8f925b517cbba37aa5,"tweak comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9528]"
edc4224b5668e4914724db3ce3b647f0f50d851f,"v4: updated atn graphs

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9531]"
27aca5a66eba7c065e13504f1929dafa98d703bd,"rm prints

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9533]"
cc00494e9d18d2a162bbe26008e912ec3d097f2a,"add null chk

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9535]"
afb89c56b989e9700d1bf7535a327bf5e1938c4e,"fix a few unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9536]"
6e79c3686104695a31a5240aac839cf3cbef3530,"add verbose dfa state option

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9537]"
af8e1edb327250c9bbe257ca5be1b698b47d76da,"v4: Run unit tests in same process (30% performance improvement)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9538]"
cb5d55512a4df2205ca646c5c62eca70ceea75ea,"v4: remove stale code (and fix broken build)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9539]"
28696fe2ff2435a8c7da2dfce36cf9303abbfde2,"add toSet()

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9540]"
946c59da145c6c11545b06b6ca26d9cc570a242d,"added Sam's fix for def of ambiguous DFA state; added unit test but not working yet. rule ctx conflictsWith() consistent with v3 now; replaced some Set<Integer> with IntervalSet (for alt sets) and sped things up.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9541]"
6c5f3655b91f261e4359bbcb65c23487220f3d29,"dropped another eps edge; like 5% savings for JavaLR.g4

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9543]"
9173367a1e664e88a54d705eecd9c98efbe2da42,"fix unit test

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9544]"
63168c5577a9ef15203d36bec5d6bd81bcef8f8d,"added more dbg prints, turned on context sensitivity in test java lr.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9545]"
131e9f7686fc969195f31d5bcf239b5eb2425600,"added comments, working on parser interpreter (not prediction) reorg. adding ParserInterpreter. adding unit tests.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9546]"
d170d89ce6356ee087e4e96436a75e2bf8a093b3,"wasn't using some args

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9547]"
b682450e298bcfb414e558d028644304342bb672,"add clone()

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9548]"
b1c7edb8d87fcc8005dee915a56fcae783e9ef71,"moved empty context chk for retry
altered args on reporting methods
reporting methods moved from parser to error strategy
fixed full ctx retry in DFA (used to only work in ATN)
i record conflictSet not just boolean in DFA
added debugging support to BaseRecognizer
added DiagnosticErrorStrategy

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9549]"
12aa6c2404beca1c43a19a9b149d12226220fbe3,"fix unit tests, bug in collecting preds and testing in DFA state

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9550]"
c59b63c79b2d9712b0ad614a390d10ddab7feb8b,"turn on in-VM exec for testing.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9551]"
b89d7c0932002e86e5463c7019d97c1b10db1d3d,"rm dead code

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9552]"
1923242b370ef3075d4bdaff49b94023d0a5113b,"clean up comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9553]"
c32b703555b422afa519dff43dc40d67b342cde8,"quote literal was not translated properly. updated Lexer to convert antlr literals to target literals properly. added unit test.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9557]"
c3630843d2e30a10d1c15bc6affe0b6db4e430b9,"add convenience method

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9558]"
d372d761d5275b513f851fdcdffe9257c7defbce,"interim refactoring. much smaller execATN; removed prevAccept fields. useless.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9559]"
18ff004d836e2643e1ecfefbd661d0a2173193f7,"playing; nop

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9560]"
b379a56c7ff76066c1c900d7c800c136cb7ac5e9,"was playing with test java

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9561]"
8615fc26da4fc109b34666022b43fe5901bd4ef9,"rm dead code

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9562]"
3fb7466a803439ff20f85866e2c0f4dc93cad7a8,"another big reorg and fixed unit test. lots more sharing and splitting into methods; same 21/807 tests fail; java works.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9563]"
b9afdf6e07f6d073e0e6dee5cbd152fa2d8e4a5a,"rename var; add missing return

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9564]"
8f7fb98e167eafa6c68a74195ace92944aa1f526,"added big comments

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9565]"
8d73f537754142a4fd8d4e80fb5ee44a1b36ef3f,"check in start of new ATN sim engine; rm traversedPred in DFAState.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9598]"
92279bd6db9824ee424d39cda0d527b86709b37c,"almost got prediction working

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9600]"
fa3483a7fcb0d36a6b97e0d9afce400a7661c5b7,"Merge CL9619 to main (fix CommonTokenStream.seek)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9620]"
5ad1505fdb006a8f0d5a8b6221dc377efd9929d8,"almost got new ATN engine working; separated .* nongreedy tests, reorg args on reporting methods

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9627]"
1e8548297e2be954b973b7079e81074e772fa223,"mv comment over and make sure that the tree parsers use the new ATN engine

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9635]"
3d133e94176c7b97a7eb1a3af851116d7169ec6f,"broke out fullctx tests, some fixes.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9636]"
ebd1fbb63dec31eb081c5b644e738257b854e2e6,"within 2 or 3 unit test of where I was before I got it the ATN simulator

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9642]"
6b673a3b2e62a18d308038dabdc89297d1f19293,"track stats properly

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9643]"
bb48deb354d77ea1b2dd0fb892decb34010a83e3,"tweak to dotgenerator, make parserinterp using new atn sim

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9645]"
c59cf36f88c4caa45681374a5b450673901dfce4,"Integrate CL9646 to main (fix forward seek)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9647]"
79d1c40427ffd255688b89c90a5cc5bb03f214f2,"Integrate CL9648 to main (getAncestors returns Collections.emptyList() instead of null)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9649]"
6daa66f83f7b4a0413b4d953250c93d89ed326b8,"no more resolved bit in config.  use ATNConfigSet all over. final clean up of ATN sim.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9741]"
494f519b05aacf8c1be3b5d3e785feb32dc7fcaf,"add java org.antlr.v4.runtime.misc.TestRig GrammarName startRuleName [-tree | -ps file.ps] [input-filename]

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9743]"
adb91a9bde49605898f86ebee3ec0d67e9f39012,"rm print

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9744]"
c6bde7e1e856ff67a04cd3209f9b3ed1b883f1ff,"-ps arg wrong

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9745]"
5c50e5f049ab512793a9a94e164df879c6f18025,"Wasn't using Udo's lib correctly

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9746]"
db655f8f2c57f61580b7f467b7a880248419e37f,"add -gui option to view in gui window

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9747]"
c1923a107e403dcf76fe15bbd3b79bb5aa16d837,"-tree => -print option

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9748]"
6fa5e52d5ee043686a211242a2d756122917f2d7,"added => skip, channel(99), more, mode(xx), push(xx), pop lexer syntax. separated lexer rules from others in parser / AST now.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9749]"
d9efffd1043d727631cc641316bf061f043e6d37,"Add [abc] syntax to allow set of char in lexer; args aren't allowed so unambig.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9750]"
3fae7cc880c791cf9020e67e59074ccaefd866b7,"rm unnecessary code

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9751]"
ce9638e59cc3cf5b6d207cc39c04018ddbb4d732,"was still creating dfa with sempreds

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9752]"
299c29d927aebc7cb6590dbd3062d18ab9603a1d,"more lexer rule specialization in parser. got antlr almost back to working with new [Aa] notation in lexer.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9753]"
24c572d05536f719e87ca0712fd5571a0a210785,"oops. antlr was ok, it was javalr grammar.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9754]"
bf8473e0fd9eceb929ae2b94bede266c2c3e181b,"add cmt

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9755]"
c1e199d77f21f0c7eeb3fa22915b1ea52b186e9e,"added -tokens flag

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9756]"
638969bed9564c4d2293d502c4255009eade993c,"add '...' to diagnostics input

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9757]"
bb960e3c37ed82f438ea6acd4c8e2cb9bd48a1fb,"improved data to report insuff. preds. also, it was detecting it improperly

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9758]"
985306109321f5eba13a6cd29cdae84d1d5a9bde,"added null chk

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9759]"
d01bde912513043604bae16083076463cdceb8b3,"added new reportAttemptingFullContext to strategy

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9760]"
3b51bb478d016ccb48f8534319be2d3c1b41d32e,"rm unneeded field

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9761]"
52396d8f5fcb1623b943cb4307172c5d22070b59,"removed method call

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9762]"
3a3ed27e6062e0bf078085de68e0b131273080ef,"add some tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9763]"
a923ad8765f25c7b0a8aa290a7ec00d488feb3a2,"Major update to v4. I backed out a change I made on Christmas then mistakenly prevented any lexer DFA creation. Per http://www.antlr.org/wiki/display/~admin/2011/12/29/Flaw+in+ANTLR+v3+LL%28*%29+analysis+algorithm I fixed a major flaw in ANTLR's notion of context. To do that, I needed to create a new LoopEndState, with all of its fanout to the serialization and parser ATN construction. got a very good start on ParserATNPathFinder, which uses basic recursion to find all possible paths and return a tree with the possibilities. I left it in the condition where he would sometimes loop forever; it needs to track sets of configurations in the busy set; it using states at the moment.  added a new signal from the interpreter: reportAttemptingFullContext. I fixed a bug where configuration sets derived from a configuration that had reachesIntoOuterContext>0 were not being considered as dipping into the outer context. The ambiguity checker needed to switch so that a check for exact matches not suffixes when doing full context. It's faster at the very least for full context. added some more support routines to DFA. Added TraceTree in support of the new ParserATNPathFinder.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9764]"
8846b98ee73bd1523f82f63e925846fc40f923be,"fix compile error

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9765]"
dff466be66c851b4f237e49bb052bf7392e8e2eb,"literal rules like A:'a' not seen in modes; weren't in .tokens files

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9766]"
353ddc6c2b1217d4cb23c1f769f871fdf0aaa4f0,"using wrong map class

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9767]"
93011a61959c1f4c7f0c86bfe580d4ae9a5be19f,"add

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9768]"
47bf5a086e77db89b1fb8b39c77091f6c5138015,"add antlr3.4 jars

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9769]"
8b2abff09bfc764c85688cc61332beaa1d37dc3d,"make complete jar

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9770]"
029eae90b7a9d34fbd02a4676c665f8a13d4bcc5,"no v2 in jar

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9771]"
5aada9b2a57928a4d06e2af4eadbfafd9bded5ad,"includes templates

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9772]"
77c13da7c59ef38cf72f2f5c9db94ca66eb51e2d,"fix include

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9773]"
9114749c5194c9e15974e45be2d78e69bd7b6c4d,"add Main-Class:org.antlr.v4.Tool to manifest

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9774]"
3d620734afb5cb8cfc06f0407663950a6005a422,"Merging CL9604 to main (optimized string literals in generated code)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9777]"
ddb68aa9488764dc70cd4ef0a4c7309989d10549,"new example

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9778]"
1921a46dd2e7978795a700810124da2404030a79,"include ST v4

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9779]"
1b04195a2f078f84ee160ff93d41b6f1fd1cc64e,"removed all template / AST rewrite stuff; massive change; added -encoding tool option

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9780]"
3aeeb2b2779970e1d26fdd48f2805f4eb30663f5,"rename BaseREcognizer as Parser

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9781]"
5c3c8d6e7a95e5e60a99219c02ff1bae3fcc14d6,"Added TokenFactory, CommonTokenFactory. Update the parser in the lexer with methods to set the factory. Alter the default error strategy and the lexer to use the factory. The parser's set token factory method updates the token source, usually the lexer, and the error handling strategy. I had to add the set token factory method to token source as well to make all of this work.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9789]"
2d9139ca4dbf0fc967fb1df3c6cbb3e912b87b82,"remove % from ActionSplitter.g

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9790]"
c716a87544d6f906b5b42b44efa8e56beb8e2ed9,"move method down in file

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9791]"
5d60e856170ceed84d487e4f991a3250f19c4aba,"rm trace ATN state stuff. Will think about when we do debugging.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9792]"
1d6bbb08c37e70475c302e40afa1a464a0953263,"kill

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9793]"
5c328c7e3f8379ee24a4e68458051d9f90d121e1,"Bug: didn't stop at end of stream during consume()

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9794]"
8099cec3bd81c4428fab51d3b79bd373a62cba07,"Added ctx to visitTerminal in parse tree listener. That should be useful information. made commensurate change in the parse tree walker to make sure I have a proper context to send to the visitTerminal method.  renamed a few fields of parser/lexer to have _ in front to avoid name collisions with user actions. change the name of the listener method so that they're more explicit using the terms Error and Parser to identify what kind of listener we are adding or removing. Added a default TraceListener to Parser so that we can call setTrace(true) to have it start dumping out information as a first step in the debugging process.  there are now multiple parse tree listeners possible because I made a list. we may want to pass in multiple actions to the parser.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9795]"
224a4bc9e117945ffc6270a2d7ea4af1ab5674c6,"changed formatting

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9796]"
963ccd2700ae1850ef0bf1105fc4d5ac0ca45b2b,"added comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9797]"
cab41e41e343a84fd402ee9023129cdaf4af92ef,"had non-ascii char

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9812]"
b2269a22f4adb6b023728720b81d321de91b870e,"not needed

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9815]"
e29b11882d6a01b7b904440ac4c8308cf36b4433,"fix unit tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9816]"
e7f6ba5ac131db58caab91cf3a58ec4ef990fcb6,"lr rules now gen only 1 rule e->e not e->e_ etc... altered tests to build parse trees.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9823]"
7d68546dbe6c409b3b77b4f09ea7a9d4ce9d52ce,"rm prints

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9824]"
78c7c254a0b511bbc1f99b9184f7c8842c02434a,"rm cmt'd out prints

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9825]"
2e8a5f391a4f065d1ca63c814ab5d5685afd429d,"no more -trace

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9826]"
4ae23f4a644842a727dcbafd046b75f8cc2eab3b,"* 1+2*3 now gives new parse tree: (e (e 1) + (e (e 2) * (e 3))) See CHANGES.txt now too

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9833]"
e8ae8ee005ce3e3b7d73a97660727075281ab6f4,"labels allowed in left recursive rule refs.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9834]"
742a08862fb0f617451f9a825a9d96ad6b88548a,"Merging dev changes to main

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9853]"
848c6e43136c08c63c79ca7209fff6b277aa3977,"This change is a major restructuring of how left recursive rules are transformed.  Previously I simply rewrote the grammar and ANTLR was none the wiser. However, it quickly became apparent that ANTLR needed to do many different things for recursive rules so I had to insert transformation later in the pipeline. Specifically, I needed it after Rule object creation. I made a special LeftRecursiveRule object that track information collected during transformation so that I could use it later. I made major changes to the left recursion templates as well as the little code snippets in Java.stg.  I created a new template called LeftRecursiveRuleFunction an accompanying model object that handles the special case, even though there is some duplication. the biggest difference in the grammar is the introduction of => ID notation on any outermost alternative. This information is not added to the tree, instead the ALT node is annotated with the ID.  Rule.getAltLabels() now looks also in the LeftRecursiveRuleAltInfo objects. I have moved to the left recursion transformation to its own object and have moved some objects into the analysis package. Further, I have split out the Rule object creation into its own RuleCollector. I renamed discoverAlt in the grammar tree visitor to be discoverOuterAlt an added discoverAlt so we can get information about individual alts even inside subrules.  Listeners always get an event for the generic rule context, which is used if there is no specific label for an alternative. Added a list of iteration operations for LL(*) subrules. Split buildRuleFunction into buildLeftRecursiveRuleFunction and one for normal rule function creation. I have to insert lots of extra code to manage the contexts, but of course it's all done using the templates. As long as those templates are correct, this code generation mechanism will work.  I removed the st field from the parser rule context. I injected the left recursion transformation inside the SemanticPipeline.  Visitor dispatch methods are always added to the generated context structures. Fixed some unit tests. About 24 fail.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9854]"
b3c187e6c33d4a15ebac5f6ba1518b33346c5d3c,"update changes

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9855]"
73793898a98091f7a838a825d259f2734c817718,"update grammars

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9856]"
5bd780c235767e955303fbeb602e9a6ebb0f1ef8,"in tree views, spaces/newlines were blanks. I converted to \n and middle dot
for space.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9857]"
1ddf609e2592b356d61f8a037079fb097729c4a3,"labels on tokens in left-recursive rules caused codegen exception.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9866]"
093a4f951b03fe5c13f6643366d314a272de601a,"leave start/stop char index alone in CommonTokenFactory; refers to original text.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9867]"
491744f893b43e91eac67779cdb68019e7017cfc,"reuse of -> label on multiple alts in rule caused dup ctx object defs.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9868]"
252cfbda78f553b45c97db1ef509303b30afb634,"v4: integrate 9870 to main (unit test for partially predicated alts)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9871]"
ec5e3e51b1f27ba05d6a93f1c5f9b4d44f5c6321,"rm ForcedAction

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9873]"
b90d41b50801cb18c80005731c69c02bcf226b74,"wasn't walking lexer rule trees right.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9874]"
06e771f33addc31c03e25005a6b0347c07b5bbe2,"rm dead str

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9875]"
d321bb7854fbd6e672d650c5f108fdcb11b7c90f,"fixed comment

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9876]"
dc82edad024a2192afa45eed2c1b5a566c5be8bc,"Summary: we can have lexer commands like -> skip now.
moved model.actions package to chunk
type(foo) didn't match.
ATNBuilder.g now tracks the outer alternative number and calls new factory commands on the lexer commands.
Removed unnecessary resolveWithPredicate field from ATNConfig
Added lexerActionIndex field to ATNConfig since we need to track whether we passed an action in an alternative will rule in the lexer.
Renamed ruleIndex in DFAState and added the lexer action index so that we can execute lexer actions from the DFA.
added functions to the grammar tree visitor for the lexer commands.
Added templates for the lexer commands.
Augmented the lexer ATN factory so that it constructs plain old actions from the lexer commands it finds. That way, the code generator doesn't know any different and generates an action.
Augmented the lexer ATN simulator so that it fires a proper action index now. previously it only used the rule index, which of course doesn't work when you have more than one action in a rule.
rm'd dup code from OutputModelController
altered the epsilon edge removal optimization so that it could not remove actions in lexer rules.
Added list of valid lexer commands in Rule.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9877]"
6013c4c97d2e986148bb1020350e7930c33d9399,"Added modeNames to gen'd lexers

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9878]"
9ae5049d44f3019a30ad35c65522671b7fd244a4,"play with tests

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9879]"
4632d7f4935945c224682592fcdb022f16bd27dc,"rule name change

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9880]"
fd0d280e6aeb36b81e676eb186a416e5e09b0c40,"cleanup

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9881]"
449c845dc053db318ebdf45edc4c2c8739862d2a,"more cleanup

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9882]"
9fd280b30e15cb2076b62709f5dfa7ecb3b60666,"Lexer fields mv from x to _x

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9883]"
884472358dc51eca68e776658655a90c1aca2265,"-> popMode was broken

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9893]"
9ffe9d2ee3489246ea2f8b55f088129d0bdc108e,"must have forgotten to commit

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9894]"
89ad5880230349dd62777eb63d0e97d03fe21a05,"fix regression

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9896]"
15d537ce6ee87c43e99863e83027aed195151c6b,"Added ranges, escapes to [a-z] notation in lexer

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9897]"
adcf72b9a2e4ef0bd7cd627e8af3c656cbffd707,"whitespace was being escaped to special characters even when printing to string should only do so when doing GUI tree

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9904]"
7498908d624afda0d1f07a82c9ea58a9aaddfd5c,"rollback and do a real fix for whitespace escaping

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9906]"
09da63cfd4aa0cefba50addda50e4a09e717fb67,"rollback and do a real fix for whitespace escaping

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9911]"
043afd376719de9d65cfda90dcb7f98df224f365,"shelve for pull at home; don't sync ;)

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9914]"
f4ecc75df598cb7e592079e730b9a8c7be682de4,"allows "" in [] char set now.

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9923]"
368b70d53cd834084e054c437a70a6a8448ad4f3,"get 'x' not x in tokenNames

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9925]"
e90b322dd42424f28ce1f0ffdaf548d07d46c18f,"~[] stuff is allowed and works inside sets etc...

[git-p4: depot-paths = ""//depot/code/antlr4/main/"": change = 9926]"
1cc7ac3410dbd959f7cd03a660b5cf3bdb532f0a,added -trace to TestRig. fixed code gen issue for trace listener
433a30c584bbe14afa2fe75514f87e2a4e1c395b,"Merge pull request #2 from parrt/dev

added -trace to TestRig. fixed code gen issue for trace listener"
3cefd3832f720293d86d7ac3f7262b463744f692,tweak readme
0a5803fab4296d489beec559e2c33118320bccca,useless tweaks
c723bd9305c14014a3c0f5e0c28b13b1e783ecf6,Merge commit '0a5803fab4296d489beec559e2c33118320bccca' into dev
5eb9ec958290c74072c2b143c0cfd1acda84f009,fixed bug in [a-z]
dfc3acb39a3d6a72eb52d7e3643840e44c2eb19a,add README
c94037def5f2c09e51e1695bc5966b02ceed442c,"fixed regression ""a returns [int i] : A ;"" didn't work."
5cec4721abf02be871913bc01b8a871f744eac4d,Merge branch 'dev'
6fe8ac1ac65dd2d6cf5dcc08a2b24d8875c80f44,"Merge pull request #3 from parrt/master

pulling in fixes"
c47c07299a13cd5cb2181fd05f0e89dd62dfc3f2,"ugh. fix ""[a-z]"" for real now"
c09c8b88d79ebb3dae3a89304deb0967e06c9ab1,"Merge pull request #4 from parrt/master

ugh. fix ""[a-z]"" for real now"
894a77168dd5194538a1731d9c5ae15befba0bed,"rename atn sim, add error message to TestRig"
93408d8901000c2efa31e800f1f144daf6e3bf8c,"Merge pull request #5 from parrt/master

rename atn sim, add error message to TestRig"
a5a403514dbdd7fba44b7a216d242281cfe16023,oops;  forgot to update the templates when I renamed the ATN simulator
59e4a54faa26f5554a586158a779c47a8355b394,alter tests for new parser atn name
5c79fc600af710ecfbabca1b8b348fc4ee607b77,"[""\\] didn't work in lexer"
66d82fab9b2e265f659aa830afdab953db34e857,Merge remote-tracking branch 'parrt/master'
a6524d8b38edbf0ae1449c89c17dc2da581cfdd3,Add pom.xml to support maven builds
18a6414fb39f9e3a204344c9415d46e947c471fe,Use ATNConfigSet for parameter instead of OrderedHashSet<ATNConfig>
326cb259a096832afe37eb0e20c48ca30d93eec7,Construct Parser with TokenStream (restriction from IntStream)
52256044a98af88b0b19a8cc297d9f771d530e6f,Use for each instead of indexed for; use isEmpty() instead of size()==0
1df70924f5d6fa7060c3469ee9ae8df2b8ab4919,Use ATNConfigSet instead of OrderedHashSet<ATNConfig>
2249135c21581f29e5d6e74c0ef7d9a81101f67b,Specify generic type parameters
71e0c664770da4d3150fea1ecedc1371b77c84c4,"Rename NUM_EDGES to MAX_DFA_EDGE, reduce max value to 127"
64210f4b7223f29e9ca79d8cb7b396a5e75907c9,"Add @NotNull annotations, make ATNConfig.semanticContext field final"
dcdfac4bcdac959ca3b20547a19ac45fce0628ec,Improved implementation of equals() and hashCode() for ATNConfig
773e9e1c7eb74d52369abf350761d8653cd6ff47,Add generic type argument
64203312acdf3ef7ed12e45ed955d1a237bc5d88,"Improved SemanticContext.hashCode(), add @Override annotations"
21a855e94e28d6794d9e800a18bb5047cf1ee4bd,Specify generic type parameters in generated code
d181b230dc1ce38dd759eba558fdec8108b270bb,Specify generic type parameter
a9e44f3aab09c3641d542474bb947ee3dd720f3a,"Use isEmpty() instead of size()==0, use StringBuilder instead of StringBuffer, use chained append() calls instead of string concatenation, add @Override annotations"
a34fd6330b7f22612800003824b9b8b108963331,Use isEmpty() instead of size()==0
f43f9f22184e3b8193fceeeb0a975b4284d270d2,Override CommonTokenStream.reset() to make sure the stream is left on an on-channel token
3b4ae2a7422c5b3084ca43ec8096ceebd7df20a4,Use trivial implementation of mark/release for BufferedTokenStream
5279b250caa563ed41cbf7d940850d110162679b,"Use isEmpty() instead of size()==0, use StringBuilder instead of StringBuffer, use chained append() calls instead of string concatenation, remove unnecessary initializations."
4f3e40f0d34856cbb4d6b4dc6c79969120a88d3b,Use List instead of Vector
33c8f9b2d60b2df72604004fa89d68b4bebe0be1,"Suppress ""cast"" warnings in generated code"
851069d87b2b3471d86be3597cfbe0a9c9b73af7,Hard tabs in generated code
32aefbce74ff204dc0e2334f8179e1abef1576a9,Fix start/stop indexes for contexts created by LR rules
05a199ed2d742e45acd5301eb8f9ac0c1cf7bb24,Compile grammars with debug info for tests
e5aa9494354eaedb834975f14783d8a4bc9c7720,More informative parameter names
0ec084dc73e43c8491dae62c728d165ad0a9c587,Simplified exec code in BaseTest
460e4495b44a87f25f2bd7a4dee78bcabb0f9d8c,"Merge pull request #1 from sharwell/master

Many small changes here."
f5f3861cb7627c1faaa30b61ea9de203dd564a9b,Fix unit test
40a875927690c2b84e5276c571e9755d24769e03,Add LexerATNSimulator.getTraceStream
9c554a002b8fd9f72a0005c90cb83ac757076a3a,Add LexerATNSimulator.copyState (allows copying state information from another simulator instance)
46d5458617cd44ac54a188898620ef8c7663a456,Fix handling of alts with some configs predicated and some configs unpredicated (should be treated as always true)
6304a562ea4a5205afe6c6273c6b77e5225460cf,Fix unit tests
b686efb293e030ed88f0ddbb5d5dc0d3824e3045,Code cleanup in unit tests
bf5df307081c18805ec49f7007aff04de8a19334,"Remove unnecessary initializations, use isEmpty() instead of size()==0"
d589011ad82968ff6c6b8e70e4eb090eeddfd257,Small fixes to the Java grammars used in the performance test
7fb73a38493492a27f4ba8c5924c01e48a6c6d1e,Construct DFA instances with the decision number
702b91fab746b2001ef5c8d9762ae817e8c80812,Ignore TestPerformance by default since it fails without special configuration
ddf946b067247a3040d78fe3cf535b4f6418e380,"Token.EOF instead of -1, add <?> to generic type usage, make getUniqueAlt an instance method (need to override it for some apps), @NotNull annotations"
467797785f30dd44041162334344cbd1cf60394e,Fix generics in ParserATNSimulator
99ce3cba5cfe2ecaa81244e59400fa28f2104be3,Fix ParserATNSimulator.closure not tracking proper context for context-sensitive predicates during full-context parsing
30c58bf8ebbd1b98f42f84888346249c4332d84b,Specify <?> type parameter on raw types
cd3adb140d7308082171e0640a15e312caee84be,Fix ParserATNSimulator.execDFA adding incorrect error edges in the DFA
46094f57ba083f31b327a00e7938ced0829f97e9,"Merge pull request #7 from sharwell/9c554a002b8fd9f72a0005c90cb83ac757076a3a

Small fixes, plus ability to copy LexerATNSimulator state from one simulator to another"
9e192fe71ac3d505e4b8c1bb16f87ee445146829,Merge remote-tracking branch 'parrt/master'
f278d3b45334e44f6c0277d89b4988cac9d7469c,add unit test for left-recur grammars
6e4cba131a9e34aeaa27540dba6bf32ad84350f8,Allow var args in ctor of IntervalSet
b80b22e4faa3d848056485d87b7eeb027da7e5b7,rm remnants of tree parser
808d23e6d181bbc98fb7153588c8f3a7e62ab5bc,add some useful classes
dee579a68f54ae5ea752bb11c707d0f4ec4a7cee,oops; need to alter this when removing up/down stuff
62146c1651620445e96303e5522eddc2105f2379,Remove redundant null check
9600a7072488725697c030f1446c6e0784f3329c,Fix NPE in CommonToken when TokenSource is not available
f8285bcca0a3f5a96228f6f7d16feb6d36b1552a,another useful tuple
3dbf4cdabcba1f7aa1b0f21fdf9d3997e582692b,mid-job push so i can pull from work to continue. working on updating ctx objects to have getters
8af1e23461e3eb910ad8c1e23421c4a2b004b884,adding tests
40b3bc0861161540251d0abdec8e8ee43ed57519,"Merge pull request #9 from sharwell/9600a70724

Fix NPE in CommonToken"
43daec6f5bc5e2c94d0aba6f92f1bc680392877b,"Merge branch 'master', remote-tracking branch 'origin' into enhance-ctx"
d06b83fd22a686883e532ac819974d3749dd89f6,"Merge pull request #8 from sharwell/62146c1651620445e96303e5522eddc2105f2379

Removed redundant check for null"
ebb8b3a15b47afde1edfb08fd95fe413dd984304,Merge branch 'master' of github.com:parrt/antlr4 into enhance-ctx
97ab2c42da56405c55265698f0b14f6315eb3336,mode wasn't working as lexer command
b68ce1f5aabab15d7fb15e7410ab2b814a883b51,almost got ctx stuff working
146a9b0509bb65079402b4b622252fa43b7a5a9e,"Fix unit test placing output files like ""null.java"" in the project directory"
7b672c31dab41d3ccac1da6bdcd29969c8ba5dcf,"Merge pull request #11 from sharwell/clean-tests

Clean tests"
2091f2d001613d20d0421ed580c33417d92280b4,change enterRule to enter in listener interface
0031075da285b4fa5e520197476e57a88f11abb1,Merge branch 'master' into enhance-ctx
203ad4682038cf5432392041f1720d3241e83740,fixed 8 unit tests; only 9 fail now.
6c2beb530db276b0375e95922ffe0457bf209454,see A.g4 for getter syntax; use e() not gete(). adding ContextGetterDecl.java
a6786743d4b036bcbdfe55dcadcf285b597d858d,"got it generating getters, labels correctly. now to impl getters"
b8f50d46e77ca317911126b75e42b2b29c954060,update playground
cdb420fddeb7d1a9ac3b89edb7b233c4a6d7c64d,got implementation of getters in!  Fixes #8
e30627c96727b4606593a3ffa2653f92d53826cd,updated command line options.
fa3a664696f3cb1ecdd87c0ef32405e7125af504,got some good examples working that play around with the getter methods.
3d56d4097597bb1b43b07e9fd27bb060e4b2389c,update playground
c8f4f1618faef8bb6f5784f7596dc2907d5b6903,"Merge pull request #12 from parrt/master

Big update to the listener events"
19afb4a8bccb431e27857216db4afcd37941ad5c,Specify surefire plugin version
707311996d7fbf7dc2a3f88dbbf33053fe469916,"Updated TestPerformance (features, grammar fixes)"
40af40282233da9ddbdb8a405cd03c3f0146ac36,Allow enabling TEST_IN_SAME_PROCESS via jvm argument
2d2134eb6bf53d38e5ffddb405f0517b7a78aa77,Update BaseTest to compile XBaseListener instead of BlankXListener
5ab082967f60ce0c52c0cd274ef7d26a6f705c96,Fix generic usage
bc87562aff8fc274d17760a6c393c75083d4dda7,Remove unused exception LexerRecognitionExeption [sic]
0bbb7101ba649086f5a457cd77362b8de1297239,Include input character in LexerNoViableAltException.toString()
685cf7b7d5814a3321ac6c2ef6c33e061e6c4358,"Further improvements to auto-label generic usage, return Collections.emptyList() instead of null when no children are found"
b44b0a3c09fb30735c713f01ee86b38320b45a1d,"Merge pull request #13 from sharwell/parrt-master

Several fixes on the latest updates"
79f0de4cdeecfcee761658346189329fc8c131c7,Fix unit test checking for incorrect input index in warning message
28919bbdc55b0cd222220ab2043eb2b68b285477,Fix ParserATNSimulator.execDFA consuming an unnecessary symbol after an accept or context-sensitive state is reached
f426e8781ba84f340714b7db2d848fbe3bb8a528,"Merge pull request #14 from sharwell/parrt-master

Fixed excessive consume in execDFA and corrected the unit test that should have detected it"
27806dc4906135a4a8adca06947009320808b7bc,Merge remote-tracking branch 'parrt/master'
feeaffc71035bf24007cdb6c81f44cd0dedcbcad,Fix listener name BlankJavaListener->JavaBaseListener
8013bb868c5270a135f1701c49903d9e516e50fc,stash; got lost of visitor stuff working
baf62685ab1ade1bec904b53c5195ace9e30ded3,snapshot
4a374dab602e58536d4b451fff260792ef2f5e40,got visitors generated
646b22b9ec25ee5c0c763f850dd055bdab17dc85,snapshot
0520400493a077348408be8f627ca70bf44be19c,TestPerformance: print additional information about states/configs
82aac56c986256012759c488f47239bd3a0e3710,Fix rule list labels
66e7e0fad2040cc345a53e5b7380f75cb749d5fd,"Merge pull request #16 from sharwell/parrt_master

Fix listener name BlankJavaListener->JavaBaseListener"
100b5302014643d44669028e6dca6338edcf8f60,report errors with too few alt labels or redef of alt label
d00ec9d2274abf0b5efb39baa67d4eed7a2f664c,got -no prefix options working. rm'd dup error from toolError(); rm dbg print
c098e5c72964f0fff7d14a57f27d6ce133692667,rm file
2b9511f333b5bb70d52675a91f014c42ebbfec32,Merge branch 'master' of github.com:parrt/antlr4 into visitors
44c0c8ca5ef5db5f9a47e87a51452e8c1e5f90e1,dont gen visitor unless -visitor option
725b105135c1856b028bf776e26ed054b9601345,"Added visitor gen mechanism, runtime support"
f0a852c3d7c94ffeee2673cd52ce0d4d232f3276,"Merge pull request #16 from parrt/master

Added automatically generated parse tree visitors"
b33f157743b7f0d4a8c8d03de4f2d252cca0043c,Merge branch 'visitors'
c6fd89728797ea8b7fdcdbdfc5f8c1833d662eeb,"altered naming scheme for listeners/visitors

* names changed. visit() -> visitX(). enter/exit() -> enter/exitX()
* capitalizing automatically now. rule s -> SContext not sContext
* no enter/exit method in generic rule context object if rule has alt labels, nor in interfaces.
* dup labels allowed in same rule
* label X or x illegal if rule x exists"
9b49005f9b46e29bccd20bef39959e1d77946b16,"Merge pull request #21 from parrt/master

Big update to include visitors, update listener names etc..."
71b75c88dd5a5c487b593e73c8cffd2cc554be03,Fix regression; did not gen enter/exit in alt label structs.
4e8931519c760aaf1e6940c340c1047e34579233,added -parse-listener option and generated code if option on. parse listener differs from tree listener
65bd54124250af8de421bc0709c056308132e719,add to changes file
9792b360b16359cc2f0f1e43c8b0f1b627ab54b7,"Merge pull request #22 from parrt/master

added -parse-listener option, interfaces; fixes antlr/antlr4#18"
642177f7166e9625fb51890bfabe3b83a899ca8e,forgot to add dispatch methods in context objects.  in-parse listeners should work now.
f53b9820baab310a780ae41d53d017c067d68b09,"Merge pull request #23 from parrt/master

forgot to add dispatch methods in context objects.  in-parse listeners should work now."
7287f5a2d3719f992f34bfea5071c8d7d9c16ab5,prefix left-recursive alts weren't recognized with actions on end.
1a2094b2ddf798b43b4f5a00db023965d8a120ab,"merging Sam\'s fix to full ctx pred etc...; effectively did pull parrt/antlr4#15, includes fixes antlr/antlr4#14, includes fixes antlr/antlr4#15"
e9122cafa302f81fce991d9133ddb5c877cfbfdc,Merge commit '46d5458'
97660e21ae82ac6eda744c879c16aa725cb4c9fe,add alt labels to all alts
16fa8ba4f4eaefe681e1e0c55a8b9a1e97ebbd93,Add comments describing the context depth latch in ParserATNSimulator.closure
2982f4b5a607684a6f58fa58a4e4e6ad700517a3,Add comments describing the semantics of an ATNConfig set with partially predicated alts in ParserATNSimulator
8773c34375566ffdf6a0802cc827435cf3603e3c,Fix unit tests
d166e6d5d12b1f7dbe567a5a0715e383b1f432bb,Emit grammar file name instead of generated class file name in generated implementation of getGrammarFileName(). Implement getGrammarFileName() in generated parser.
a81b1a17eb92749cb3e5a321581080bd8e2deb0f,"Extract abstract method in Recognizer for Parser.getGrammarFileName() and generated lexer's getGrammarFileName(). Make Recognizer.getTokenNames(), getRuleNames(), and getATN() abstract - implementations are always generated."
ca0b1d399c56b6395a1f8df386140dd55b55c58e,"Move ""metadata"" methods to top of generated parser"
f5edb7653a48ce8181af2870e68fe75a70abc940,"Add missing @Override attributes in generated code, use hard tabs instead of spaces"
611728a3806d6a8c9fe44a538d34b448784986c1,Update testPerformance to show information about DFA states in the lexer
5fb389b6e417918ebaef2780ce89b35b57498755,Improve lexer performance during warm-up by tracking DFA states within exec (ATN) and using existing edges when available
1970ac240e8a3cba154a97b834e9a43f54b5c52c,Generalize several functions in TestPerformance
05930b04ce1dcf6b66691192b9c91bf52accac88,Use Class.asSubclass instead of unchecked cast
0e23c7e2a3f300566309f21f0d29037db4817a05,Merge commit '611728a3806d6a8c9fe44a538d34b448784986c1'
58ef729be58d986017215528d6141d9697b64e24,"renamed next to target. factored out to methods, commented code."
8a34176d8221208f4bae4930dac5b2575ca4805a,"added listener unit tests. fixed bug that didn't create ctx getters properly for recursive rules. added Symbol extends Token to parse tree stuff. added visitTerminal to Visitor.  recursive alts now track their original, unedited AltAST subtree so we can properly count rule refs etc... later. dup of RuleRefAST was making wrong node. don't gen dispatch methods if no listener."
995f8e01085356640c5dfdd7ccb13dea4c694820,"Merge pull request #24 from parrt/master

lots of stuff; check out commits"
7c0d5cd726394d8ea403a057f7ddec220a851c0e,Fix use of v3 runtime generics
4aee8aa4dcb98f66fe2ddd575f8450019fafc83f,Merge remote-tracking branch 'parrt/master'
d30b36ca01414deb7c830c08ad4de7ea15588159,tweak to compile with 3.4
5a13ddc517b55dfed1143546312cb31120a7b6c9,fix regression; LR rules weren't working
b459dafeb9c22f891a5d48d8c039eed9e2da7e3c,empty alternatives didn't trigger listener events. overrode getParent in ParserRuleContext to make type more specific.
96c08bec524b99b044a123ff868a724c0a5458aa,Remove unused imports
1492648d26214783e3198b516cba2b7cbac257d8,Add missing @Override annotations
44df49f24fd85b697d22d8317f268d98639cd4f6,Remove tree parser methods from BaseTest
5ab1c3319cc266bdeb727f480be0e1f63cfc65b2,Make sure failed compiles result in failed unit tests
db4ce6dd8e48226f4845922c0fc09d114689bcdf,Unexpected v3 RecognitionException should cause testActions to fail
4ae58868d71256784b1ff6e2e2ec6faa6dc22777,Compile listeners and visitors with the unit tests by default to help catch compile errors with them
d7dbef278240709fa3a9eb33be280e7d018dd401,Can get token start and stop index from Token interface now
7dcb148d732613640574fc645782104954c33537,CommonTokenStream now extends BufferedTokenStream<Token> instead of BufferedTokenStream<CommonToken>. Token interface provides the same information and the change helps the work on improving generics.
6c26917b907506ba22a473bb5dafb1efc4283b55,Use generic List instead of generic array for listeners
1c8efd6a48dc1976c6ee45b8a17d23a66aa0175b,Allow contravariant error listeners
e400f5b1a1f7b209cc8f1c25bf3ea2408efd7cf5,Move Recognizer._errHandler to Parser class
1e3e09232681ba840b4d17a47960cca3f4aa1ddd,Fix unchecked warnings in clone()
9bf6f284dfad0f3c1bd19c2e508351f5963103bd,"Code cleanup (little things like using .isEmpty() and StringBuilder, and specify some small-scale generic arguments)"
2c8ef6470f82d83540e2641f5797995f0638f2a3,"Despite being absurdly verbose in Java, use callable objects instead of reflection in CodeGenerator because the latter is prone to runtime errors and debugging headaches"
019ea15e3f1f87b402fbcb23d17299a419e87e14,Catch specific RecognitionException instead of Exception
a74da2df60fb5754e276ed262371db7c35381447,Use ==ParserRuleContext.EMPTY instead of .isEmpty()
90bcfec45682a4af2f88359cd04d208506906a79,Simplify CodeGenerator
73ae2b0bfc77d0df67198695378ded65c4109e4f,"Added ParseTreeProperty and added generically useful Map that ignores key.hashCode and equals() and simply uses key identity instead. In particular, this is useful for ANTLR because parse trees are actually interfaces laid on top of the rule context objects used by ANTLR's grammar analysis. These context objects use special equals methods and so on. Plus, when we want to annotate trees with values, we want a specific note to have a value. Identity is what we intend."
600c4bbd91bd9d05cad94ea5a92ad70f0dda6190,crap. sun already made IdentityHashMap; rm'ing my version
528e9c7b86b9ba432221ae3164e5faa09c55cef0,fix cut/paste error
db1b86af91e3deb022a359f29cf2172e06d5cb7d,"alter visitTerminal interface, add visitErrorNode."
1e438746be9d28d901cbe843cdacca1b74597429,"added interface for error nodes, method in terminalnode."
b7da3361de94fb3f1d552c08e543d1ed293521fc,fix bug. e : e '(' exprList ')' ... ; came back with e as a list not single element.
bedc502d33e852d2aef5113b26ff3bb4d5b4bf1f,Set the listeners list back to null if all listeners are removed from it
1c68c10599e112fd84ee84e53b7f356a32cb7f84,Merge branch 'master' of https://github.com/sharwell/antlr4
41be88dcd566614e9502ed3b894a51c4d42fb111,mv to runtime
e9a3de645a8f89bbb66ca3fce151491c2a92ecd8,add useful method to get a->b pairs out
67b2e6d7c1d86507c829813a6aa7486fc0d58f3d,forgot to move Pair etc...
ae08867ff32027d22a6043322d92491bf1ca5f87,"alter visitTerminal interface, add visitErrorNode."
9ae92a5cef07b19cb7051095c564973f2619ae3d,reformat
dd69a7532d73c788afc3de3c3fd0a2a7f091830f,getToken/s returns TerminalNode now per Sam's suggestion. altered tests. seems correct.
51c38c110349c5698c0dfce9ea8679fa90305780,Use single int _alt in generated code instead of a new _alt<choice.uniqueID> for each PlusBlock and StarBlock
c3cd99858c006b78e1ac6f5b9845c68e5ffea5cb,Reduce size of generated code by emitting predicate text instead of full failed predicate message
fa9ec191bdcc96bb111fcb8b3613d7adb831423b,Add TrimToSizeListener and Parser.get/setTrimParseTrees
2ba5a1f12a85d4fe2780b4150a335150fd1484bf,Made the parse tree visitor walk ParseTree objects not ParserRuleContext objects. This necessitated pulling up the accept() and toStringTree(Parser) methods into ParseTree.
0375f8318a4e5318af66ef67d025967b5299c5e2,rename a parameter
80b3ec8c620c2fcd4cdabb1f5d1b9cbf1677e364,Dispatch accept() for terminal nodes to visitor
a948736729c4c326753d507585e6d639dc55df95,TerminalNodeImpl.isErrorNode now tests for ErrorNode interface instead of ErrorNodeImpl implementation
b570641e2b94c345420cd888d365c33c9d69e947,Simplify ParseTree.visitChildren; ParseTree.visit and visitChildren take a RuleNode parameter; update comments
5deab167a1d27bab4674a841aa01c74105e40881,ParseTreeVisitor.visit takes a ParseTree... only visitChildren takes a RuleNode
5280bc32802ad6b02b07871ba5080dac31ef49f8,Tweak doc comment
ce142a2a4cc5fbd904241fe7d3c33a328a7e1d25,Merge commit '51c38c1'
a9e74ce3992f18088efe571ac58fe08856c8b258,Merge branch 'failed-predicate-message' of git://github.com/sharwell/antlr4
62c265fe543c446722f355e5438da8b4127c5f8b,Ignore heap dumps created during profiling (*.hprof)
7525bb6e1dd6d8f68796789dc5f48a6108e7fef6,Semantic predicates now evaluate with standard min-alt selection
86671d30fb5ac827748179a98195c1831d50963b,Tweak comments
2cc39c2f9b0111b0adf27d2421ec8eba01eee434,Evaluate predicates for all ambiguous alternatives and report if still ambiguous after predicate evaluation. Remove misleading message insufficient predicates. Fixes antlr/antlr4#31. Partially addresses antlr/antlr4#39.
04cd48e88d68db1b0e942b1bd52cf2a42a703c33,No need to fully evaluate predicates when called from execDFA because ambiguous alts aren't reported anyway.
50180825d933839de0ed00772eefbb4c67f0d3e0,"Add boolean field ParserATNSimulator.reportAmbiguities (default true). When false, ambiguous alts aren't reported which allows usage of (the faster) incomplete semantic predicate evaluation even within execATN."
bbff5bd20a62884c21f3e941464ff76b0b7a9a7e,New tests related to if/if/else constructs
dce72dcbfb3a3d5efc48b405bf48a879f968badb,"* Recognizer._listeners initialized to have a single ConsoleErrorListener
* Use CopyOnWriteArrayList so listeners can be added/removed in callbacks
* Remove special handling for _listeners null or empty (never null, ConsoleErrorListener will be present if feature is desired)"
768bfc0cf2e705cd0eeaa0ab11bcd18f453442a0,Add ProxyErrorListener to allow dispatching error reporting to multiple listeners without manually iterating over the list of listeners.
3f1f76df7d44332c637e5a92f27933e9c9f3e5ac,"Move reportAmbiguity, reportContextSensitivity, reportAttemptingFullContext, reportInsufficientPredicates from ANTLRErrorStrategy to ANTLRErrorListener.

Add BaseErrorListener to allow implementing ANTLRErrorListener without implementing every method (e.g. ConsoleErrorListener).
DiagnosticErrorStrategy is now DiagnosticErrorListener, updated tests."
fb03f1e2762f93f7cfa17653f81be6e130671ce8,Merge remote-tracking branch 'sharwell/ignore-hprof'
754408da27776b901bf4d6460a5c68d6a31c4119,Merge commit '86671d3'
79f204ff948a5bc48b3a87cbfb665038f111ef56,Merge commit 'fa9ec19'
2d76dd8193661b8a2cefa1c5a1a222069d5ce603,Merge commit 'bbff5bd'
2fc9760ba7d051ba126bd8d519ecad387f7b5d83,Merge remote-tracking branch 'sharwell/ambig-sempred'
dc627158e6da0f451a469401a2e22e7d022f62d7,loop invar. code motion
aca3e0ddb226c4afc8e4d4db3d8a43f98f1b55f7,make trim parse trees singular
590558c4d85ebb250810d4aebbff61f4e074382d,Combine DFAExecState and ATNExecState so we no longer need to throw exceptions in LexerATNSimulator.failOrAccept for valid inputs
1f60da9cfdd5a0a547ce9c1423ce95b1bb10fa39,Handle DFA error states in lexer atn exec
9d774c6543cdf23acd255fe6b4b4d47e72b18a6d,Separate handling of DFA and ATN transitions during lexer atn sim.
83c680850eded20e09b78393548798371564c938,Only create a new ATNConfigSet for reach when no DFA edge is available
51a15ac4a78ae570251ccc7c6a81b568663f1212,"ATNConfigSet prior to error is closure, not reach. Reach is empty."
aeb43069aa97d8a4ff4e1fec13d5ebb8dd4ac878,Move reach variable inside loop. Remove unnecessary ATNConfigSet clone.
ae871dcc0799b1ddda793b9061a8856fd62f0a0f,Rename exec/exec to execDFA/execATN
6887c86d5e983b19349389055732e4eb5ba55e95,shelve
ee0bc39b53c3e754f3a5f9d1328cc66b710ba06a,Add unit test for loopsSimulateTailRecursion
0ec7f1528c2522ebabff4917f7cedbd3c07a4c99,"Clean up testLoopsSimulateTailRecursion, move to TestFullContextParsing."
28ee391c815cb7d0ea5cb221100f1d16fb5fa30e,Merge remote-tracking branch 'sharwell/loops-recursion-test'
102980dffd82c87bf3d728ea615793dc598c6dca,make T.g same
73a2bb3fdb6ee3a0e9510c4ebcec3be1370c9ecc,Add Recognizer.setInterpreter
9a0aaacbee0d7ae6c2a3bccd00dbcec811de95b7,rm k=1 chk to report early ambiguity.
ea7037dd2dff6c36b358b0a641c197d499367c0c,missing semicolon
7e910e90a957fa9b76c9cf8f729d4cd44be6fd2a,Don't allow BufferedTokenStream to be constructed without a non-null TokenSource
525b90fe9a03982dd9c78a21b059eab839180918,Add tests for CommonTokenStream handling of consume() at EOF
95d3b69f1f3ce3016573e1a0265823819f1ec8ce,Remove unused field
26a7a811df3acb26403b015a510254a8193ad4b2,Remove unnecessary duplication of code
595f92fe5ee58c7d108d54c5e58234b1d6fe41b8,"Add lazyInit() method to take the place of ""if (p==-1) setup();"""
5404ea4c159974afde31efc7d19af43769205012,Standard 0-based indexing in for loop
e8830ae51a2a14e14ef12b990a365fa2045e19e6,Fix handling of consume() at EOF in BufferedTokenStream and derived
c970a2e7ee9532dacbf661af83be955bd087d53a,Updated doc comment
4778383e1d2f2fff1ab88a1da7e1d65f7d3704af,Fix BufferedTokenStream.reset() putting the stream in an invalid state when called before lazyInit
78eb5b0119fb9563b8d391190090bb5e84844fb6,Simplify maintenance of CommonTokenStream by providing a hook in BufferedTokenStream for manipulating the target of seek operations (including a simple consume operation).
24d7bed5ec975daee396b014e868b44f6459df89,Don't reset the channel of a CommonTokenStream during a call to setTokenSource
dd0944b9c469608bb13d16620ff79a78728d1c1f,Simplify and improve performance of BufferedTokenStream.fill
ea434982fb9f4aa7d7cd68554b172079375055d8,Pull error reporting outside of try/finally to ensure errors are not hidden
bdb2aa9d157c8294488c6656326643268ed5e319,initial add of graph-structured stack. some unit tests. only got singleton merge in there.
17defc62f69cc4d25949b732e336915bff653987,got array merge in; lots more unit tests. single level array merge working.
650c0fac0d14cad3a34d6a89eedaf94a33168354,more unit tests; works.
8d8f256a8c2fa5a74a32f66e1e68c0cd5a0bfe49,comment
3a79aa15ba261d3f576ea702a0dfa3e036771908,move new classes into proper package locations
72331774413cae69a5b80a696168ec4c26e7d7ca,got integrated graph stacks to compile. commit so i can look at sam's
90516272fed11d4925d2b8e807c6500e2d83e43d,snapshot
974ae65cb9d7e7979c474645316202a16037feb4,shelve
a70cb6f36a60edb39b5fc1488cd5884144ac861e,Fix NPE in LexerATNSimulator.execDFA error recovery
4bc615d72ff72756f8fcbf284911b9dbcb79a2cc,Ensure that serialized transitions only point to states which weren't removed. Add unit test for a current failure case (will be a regression test once fixed).
5e0f9a4490673b886f80abd4789b452532ea6887,Ensure target non-null in Transition constructor (additional runtime-side consistency check).
bd7796544d980639586b15c10fa68b016dea6d1e,Update comments
85b40c7d2efd53de3d4cfa90445aefe06fb2d02c,shelve
2232ea5101daddfba2e53bb4e07104f298f65a85,was not computing lookahead correctly in _LOOK.  It assumed all epsilons were predicates.
48d663667ba2fd0fdd9c3dfdc305d0e987862bc2,pull from master
7e9a86a3e1a9db96dea0867d0073d4b8310bc61c,got TestATNInterpreter working
5945b29a867eea401ca8a56556d66823cf9de8f5,got more working
55ed1a45bf107803c0c38a35d14391ac34a05c8d,lexer wasn't using new prediction context. weird. put in functionality for $ merge in full ctx mode.  removed configs array in ATNConfigSet. ATNConfigSet wasn't tracking lexerActionIndex from config. ATNConfigSet now maps key to ATNConfig.
9318391664c7c71be19e487ac07a23be0ff8e578,tweak to fromRuleContext. more sempred tests work.
0f969af9479095f21f482eb6132b6262910b3a5f,added in Sam's popAll to deal with loop end push/pop stuff. passes LR tests and all but 2 sempred tests. does some JavaLR.g4 parsing too.
b035ceec9efdbead6bed5960f745b5b58df5c9b8,"EMPTY gives """" not ""$"" now. rename closure->closure_. had return in wrong spot in closure for-loop. fix fromRuleContext."
05ea1bc65f77b8a49eabd34cb59d0d93e6054728,"Merge pull request #47 from parrt/master

Lots of fixes; just pushing from active repo parrt/antlr4"
b1bcde76b746f1fef82d78e9f478ca51042b7bc4,Merge commit '768bfc0' into parrt-default-error-listener
6791bf60cf90524ab0b480b1c26c49c5af19389a,"Merge commit '3f1f76d' into parrt-default-error-listener

Conflicts:
	runtime/Java/src/org/antlr/v4/runtime/ANTLRErrorStrategy.java
	runtime/Java/src/org/antlr/v4/runtime/DefaultErrorStrategy.java
	runtime/Java/src/org/antlr/v4/runtime/DiagnosticErrorListener.java
	runtime/Java/src/org/antlr/v4/runtime/atn/ParserATNSimulator.java"
e228e88ac598b0f40c3974c7b52af291c4d14914,tweak to remove insuff pred method
c6365fb5e2b395ae163616a0ef242f31e7d2b576,removed config list (huge) from default message.
4ea3c73d1fb305abeef2eeb779117d7c3d5d2d55,cleaned up interval stuff. moved getSourceInterval to ParserRuleContext; renamed create to of() in Interval.
542e70064493b90689e38af0c9009eb10c75b284,fix antlr/antlr4/#48 (getText from parse tree node). Don't NPE when start/stop null in getSourceInterval.
2b5896e83b0b043aaa1ec789fd26e4419fef5e64,Merge branch 'master' into stack-graphs-integration
bdda174af64a4a325ccfb0c7f721b2c3b4f4c701,Set stop token even when RecognitionException occurs. Add ParserRuleContext.exception field to hold exception if one occurs. Resolves antlr/antlr4#49.
be4caa3d111a1e88f3e164439f67a7f4e9e24674,Fix tests affected by c6365fb5e2
fdb92ccf6d8f6dd9341e2dab6c4773d5158bd87a,Fix tests affected by 9a0aaacbee and 2232ea5101
df2e24a228c7ac56026d2120625979434f3beb8c,Override getRuleIndex() in generated context objects so ParserRuleContext.ruleIndex field can be removed
aa34f33846fe44f47db21d31c3b3a6fca85dc25e,Move ParserRuleContext._s to a field in Recognizer
169f58a3ff52b139be9c3875d0a17b97533383aa,fix def of EMPTY->INVALID
9b42e7dfe6dffae056737b716c4aacbbc2c016ea,"Implement support for abstract grammars via the ""abstract"" grammar option and ""-abstract"" command line option. Resolves antlr/antlr4#36."
e8765ef2413dc6fff1ac71bebe3efa9e5be39b80,Fix errors tracking current state on rule return
84659203438c9874f364188b5238486208ad0f7a,Merge branch 'atnstate-reachability-test' of github.com:sharwell/antlr4
f307945d2a03c3fad6a302a294e21211a9c178a0,Merge branch 'lexer-npe' of github.com:sharwell/antlr4
580ec1f7d7ca0da69d6dd02c6a5590d479104b48,Merge branch 'fix-tests' of github.com:sharwell/antlr4
41e97791bb120a382073eea9b4c16571d3bed6a6,Merge branch 'set-stop-token' of github.com:sharwell/antlr4
bf07f7907f178aeb7bf3226d19a683dfea16ea0b,Merge branch 'override-ruleindex' of github.com:sharwell/antlr4
bd51907c5ebe12d41b37d0ac68a089d6a6f89325,Merge branch 'abstract-parser' of github.com:sharwell/antlr4
9c1e58db7cbf6e5707694ed271911ce7085c9abb,"add {} in primary alt block to prevent ID|INT from becoming SET, which breaks code gen needs."
a363e7058216050e135491c94ad6c3728bd558e3,pull from master
4b0040f2a17d5a20980121db8226aab927ac7fb4,Fix test affected by bdda174af6 (set stop token even if exception occurs)
eb48cdf55bf33c684f6a0a294d403418cca7c8b5,Fix test affected by 9c1e58db7c (add {} in primary alt block of LR rule)
95b6cd58c4bc8da2c17996d05a8acfb7fd1fc741,Fix NPE when a grammar contains no rules (instead of appropriate error message)
2ff9c128487c6af7ba96a963a9eb4cbf8715441d,Fix expected error/warning numbers
8d16912fb99149fd303c4317fad6203eb58215ec,Fix expected output for testAmbigLR
cc7e9c1b0c0675fb385f0e3db3f439ca512c079f,Don't strip error numbers from lines because the numbers are constants of the public API
48b2e237d1b4ee8a496f1dfade8de94b0ac438da,Merge branch 'no-rules-npe' of https://github.com/sharwell/antlr4
e2d9ffc767ac8b4334e5ac32993474e8e18572f5,"Merge pull request #51 from parrt/master

 a bunch of new updates"
447a5620f0feddebf64f14d943dddf7641d3b968,add -diagnostics option to test rig.
42706485e97d5b7b320c8532ef09890302366fc0,was looking for imports with .g not .g4
1b1ff9915d64ddc0a572208c0d0f22e692947a09,tweak to Gen.java so it looks in correct templates area.
11cd720cc674fed7f0111be2e299d09283059216,added failing test so i go back and fix issue with op=('+'|'-') in LR rules
cfcb2a1a55defd310519ca12564cd74ea59e8422,"Add Tool.GRAMMAR_EXTENSION (.g4) and Tool.LEGACY_GRAMMAR_EXTENSION (.g), allow imported grammars to use either extension (favoring .g4 over .g)."
e5d7c27b09566985d1f1604f2e636eb6a0465c4a,Updated comments to indicate preference of .g4 over .g
f166df7b9401cd85f9f52dc50f40c8c76e4d01b3,Updated unit tests to use .g4 as the preferred grammar extension
9fbe9b6e21e306820c340ba29a177644c28d9775,op=(x|y) works as left-recur binary op now.
c9aef6fdbeefcda788aa65006b3866eae7263a46,Merge branch 'master' into stack-graphs-integration
2c6738041b1ac552f31aed7abf5e850346c6406b,"Merge pull request #52 from parrt/master

more changes to merge"
cc20a52cdd6f04d17f53050c7457aafd1ba51b60,"allow special ""tokens"" start rule name so we can test pure lexer grammars."
f238d7579ef4de47535e16c9d5f98573b252e014,added getText() to ParseTree. getText(tokens) is still really what you want but convenient for ctx.type().getText() when it's just one token.
588e30bfe17b017ff6fd2128d04b62cd2826610e,getText(...) moved to CharStream and TokenStream; cleaned up names. removed getInputString from parser.
e1870d16e9cd29dd4b4e1f3decd3ecb7af76e49b,added convenience getText(ctx) method to TokenStream. unlikley to need in CharStream and can get another way
d6e2e41c1f92e3f3fceac6948397b1aad2f9271d,Fix stop index
8ec9ba14c911f776b5fa5141068706686e8e5695,Implement getText within marked intervals of unbuffered streams
53c5aecb85d19bea27d446bf61b9b3c769965a36,Implement UnbufferedTokenStream.get(int) within marked intervals
adad53ee18f14f2e1c8a695c604b701bd0926a1e,Fix unit tests that called TokenStream.toString (now TokenStream.getText)
9ef61279829dcee16823f8c8b2ced9159c0dd026,merging from master
186293ae869640cb387e24dd6b5b6e25ac366762,tweak
5fd8b223b66a5a0d1c24df537d14d8619c818438,Fix ErrorManager ignoring error code in messages
78fcc134cdcd2a68e667e908a19cd8d6e8b2c0c2,Fix error codes in unit tests
3849cd572d3fd7ef0d99048051bb27a43f50158a,"rm SymbolStream<T>, change all to TokenStream. all but 5 tests pass."
bf9c7c3a28c04e0f8ad2e304416d828d308894ec,Remove old TokenRewriteStream in favor of new TokenStreamRewriter that is not a stream; it feeds off of the stream to provide transformations of that original stream. Updated the comment at the top of the file. Instead of toString() we use getText(). Altered the unit tests to create a buffered stream and then create the rewriter attached to that.
b433c2ae345dab266cdf1c9aee700c6e042a97a7,Add warning 125: implicit definition of token in parser
c3e5c42c519897bec0a17c70cc3fe54f33594e1d,Fix (broken) unit tests which included implicitly defined tokens
9ce85cc6e4f50a38290402e103853187e10f4283,Add error 126: implicit definition of string literal token in non-combined grammar
251490cfc9ee34bb41e9fc3324fce004b6b80e10,Fix unit tests which included implicitly defined string literal tokens
9fd02cfd007c58db64f469bbad6fb26b3f8de2a2,Add the -Werror command line option - upon warning emits new error 9: warning treated as error
4304ba251fb93c044d57a5a16d5ff494e50ac468,Treat warnings as errors in TestPerformance
1c9e52b5d639a9394ef3227d94fb6ea4073db50e,Use CopyOnWriteArrayList instead of Collections.synchronizedList
2c1f673f621dba72df40ceb161301768dfdbb12a,Mark ErrorType fields final
16046a7ec17ffec9dcc263058ecb69e441e79056,Proper maven reference for org.abego.treelayout.core dependency
64e0a8734f8bd5d479f9c3ac41bddfd00cd37b2c,Report warnings as well as errors
70825902408948581bca6f10d272a201eb6b33e9,Allow tests to use the default tool listener for error reporting (prints formatted error messages). Use this in TestPerformance.
d054a358a4158bde67bfb910d56459f2dd0f34b4,Don't run compiler if tool reported error(s)
e4612935f2afd5eb18b1cb79bb64eb435b41d102,Only need TokenStream (was overly restricted to BufferedTokenStream)
a85f1c17a14e195c5ff45749087507f7dc189b5e,Add TokenStreamRewriter.getSource()
bbd61dca35bf942d5150431a76a105799d9e2e7c,Remove TokenStreamRewriter.getOriginalText() (use rewriter.getSource().getText() instead)
cdb357b37f331dacc5ec20aed650199c9bde7783,Merge branch 'tool-cleanup' of git://github.com/sharwell/antlr4
8658be69ba03e2c707aad6f7548d43bf7c49119e,Merge branch 'test-reporting' of git://github.com/sharwell/antlr4
8155b1138e6c9773b5cb82913eec053a764e8a84,Merge branch 'implicit-tokens' of git://github.com/sharwell/antlr4
ff2655d37979a00872c907227ea9c2ad4e6e1b0d,Rename getSource() to getTokenStream()
585aa0a14b2e89c20f6b2ac25724b71337b54ed2,Merge branch 'tokenstreamrewriter' of git://github.com/sharwell/antlr4
08e3ddefc06691c171ca03c3d8a23c6c6731e7cf,Merge branch 'master' into stack-graphs-integration
e11dc07275faf339715ce78bee92d74e99d64be1,Remove TokenRewriteStream
1ade15392b9f076a5d3aea0e87dd91b994133a0a,Add license header
9d9244612541132a3c5c766be9df160ff5356ebc,Merge remote-tracking branch 'parrt/master' into basetest-error-reporting
290833150d824142e04886b1271da4bf8a62ccf4,Merge branch 'basetest-error-reporting' of git://github.com/sharwell/antlr4
d22eb34fe7f457183320fc28e2cdb6d79e660360,Merge branch 'master' into stack-graphs-integration
6a0081d12e77d14eaea81b314909f72c5e511f14,rm gunit for now
35aeeb7c5c08498c8f201e175c3848d4fadfb22a,turn on building parse trees by default since we do -listener by default.
f5501979c686ac5f9b60e173a8b1bc3f2eefefd4,Merge branch 'master' into stack-graphs-integration
95f5cc6b8bfbeb1f69a90964cb3f92c1bd27bf28,Support specifying the inputDirectory in code
ce73e1e0abf18d36299be1ac1db6985c0121d586,Initial work on Maven plugin for ANTLR 4
9b78d7ee182962126893d6dc2e65902c8295a2f2,Add Eclipse project files
d902a738341863dde347b780881a20dc19024534,"Initial Maven plugin for ANTLR 4. Just replaced v3 references with v4, so documentation not up-to-date."
eea046224185ef9138ab253e6a633b73f5c24443,Report inputs/outputs during Maven build
f4abc84054fec83e69a133681e49cfd434a35a3c,MutableInt's compare method was messed up.
30f61b17e3d988eb957163ba0ec2a0c76c1f86e0,comment tweak
6314b7d31bf48ddb199c59958de90db136979049,-> becomes # for alt labels
3ea6a5cb2f5fd83d1e3adb5a17738fdab3f7a694,"Merge branch 'master' into stack-graphs-integration

Conflicts:
	tool/playground/T.g"
2454182a3847682f093d2a3606bdd51755347925,"Merge pull request #57 from parrt/master

Lots of new stuff,Pulled from my main development repo"
5fbc994342ca8516eab8c7e1766b19a524004d42,update changes
a46368275d9af6d12c011c6fb629db3e0a842b80,Merge branch 'master' of github.com:parrt/antlr4
c590ba8fd8a593d63659bc36c52aab42bcd3cb0f,don't look backwards for err msg if EOF is entire input. make sure we don't use -1 rule index for ruleNames[]
d46c7db52c8008fe02447572bf7cf1e0ced1459a,merge master
7be2ba9d4296fb1a50abc43475af662959c247e5,remove unused type param
03d7b51d3c927207e5b203d8f4fb2a9a9a7e7799,"throw exception upon bad token indexes, add getOffChannelTokensToLeft, right. pull up some off channel token methods from CommonTokenStream. renamed."
990da7d1d873c39fce0ac726a9a0008ff774e49b,add unit test
5fc148381a3560badcdc013f1c6f90d37bb8f6e0,rm toString from token stream. it affects buffer.
6215390408c1aeb235abb2ed5db321852e7b38be,add ctor for consistency
d378469c9c4ebf9c88da3f0ae25ed85527242773,rename
ed879ab4e3ac9b091049809e862c9cee4f14b090,working towards interactive lexer
868ca7ca6d2df3f777e62f3e996e91f75452077a,"named actions in combined get copied to lexer now, but lexer::{...} are MOVED to lexer grammar."
bd87ec95e26a5e48c6c67fb14a11a4bd428cb457,add setters for line/charpos to lexer/lexersimulator
8078d390530d7a5146477c57336d1d49649fe421,"rm ""st"" attribute"
bc236a6e0bccea9e6340805c209be756b013c15b,no tree attribute
cd82465830994b9a389b64fbef3a657b7032874c,updated [...] parser so it handles < > and [ ] properly. no escapes now.
e737653b4ff1ec971b4cbd1b0595651476000ab3,"lexer getText() included lookahead char, which it shouldn't."
6539c5f464693490047c9e677a95d6acb9942d4e,remove inappropriate attributes of lexer rules
3b1d91e0105be86ffa011c5ca9ebbba49e3fcd5d,fix unit tests
aab88067830f87e8f1d05e065e57dc84142afd58,added setter for _token
de83aacb65e321e7d415fedcfc466f60f81aae6f,add unit test
94071d7d82feb06445dac219a7b9cea20f68b513,prevent negative indexes
59af8ab76b07854b72063016499a8f1a9f8bb6d8,clean up constants
8481979f69cc1dabd676e3dee87d4d4d9f936bb2,rename method
5a2fe297e3e8a06ffb438fc8cf3f75f4d5047283,ack. more cleanup work will be required for change of token types from 3..n to 1..n
5a7b3b0cabf07d85a07557ba35a83002a391265b,"fixed a bug where some decisions that could see predicates thought they were LL(1). Added HIT_PRED invalid token type to the lookahead set to indicate we had a predicate; later we wipe out that entire set before returning from ""get token lookahead sets""."
0e9bcfbeca3401f4ee251221d0dacf3ea9ba83ad,change in token type broke many tests; fixed. says 5 failures now.
e1524fe86cfeea416f3fcfda91556f21719cd02f,add test
7192cc9a682befcd141712a4a9d02afe36d3e08b,rm deadcode
5a2197a74d7d52a037dc982046bc02265830baf1,fix bug where X : 'x' {pred}? ; wasn't seen as alias from X to 'x'.
d3c238569f3a687fae04f4db16eae88cc9b71227,fix unit test.
b255509e961bfa798e209c4656738b2937d2b1c3,"fix a bug related to semantic predicates in the lexer and generally cleaned up variable and method names in the simulator. I moved all of the predicates to the right side of lexer rules in the unit tests. Later, we should ensure that predicates only occur on the right edge of lexer rules. We should state that the rule is not been accepted so we can't test things like getText(), we have to use more raw indexes into the character stream. In the lexer simulator, the addDFAState() method now does not try to compute whether there is a predicate in the configurations. That information has already been set into the ATNConfigSet by the getEpsilonTarget() method. [I should also point out that I have not tested the Java parsing in a while and now it hits a landmine on a number of common Java files in jdk :(. I'm not sure where that crept in]"
018e3c03e898f3c266655617e3646f45e4fc10a5,look for T not just TLexer if no parser just tokens.
abc0e2ef878ee86eac1574de737297d2a55eeaa7,add getSpeculativeText(); text matched so far in a lexer rule.  Use this in predicates not actions. add unit tests.
3ece2c8640821cd1103c6e0a15aceceda008abb4,merge from master; this pulls in the cleanup and bug fix in the lexer related to semantic predicates.
13d9f6ed5356ece9c061f40799e0ef5b8e6682be,add comment
bfc90d473cb330fd580d80e62dd5c3a6a43d5afe,fix help msg slightly.
b18475113b6e577b4b4d247f8828769e7295b56c,Merge branch 'master' into interactive
740208ee4d9ee54130b9b5e0df195ce3f248f31c,test code.
f396b4dc82584305aeed434de27126c432f641e9,error->syntaxError in listener
e861902a1041db5bec02785799be14d915d4ce9e,set hidden channel num to 1 not 99. default is chan 0
0c22d1287001786e258b809dbb0b8a41893d05f8,"updated comments, remove duplicate code, add new functionality."
390060602445a4c61a84329034247c3328b2727c,no need for range field. removed. overrirde tostring so nothing weird comes out.
44355d6ff6445c2c05be971952ce75ac1fd4365c,oops; don't need these afterall
5c69d31e88ae7d35e604fa4f27fd66533494ecd8,"CommonTokenFactory now knows how to copy the text out of the character stream buffer before they disappear in unbuffered character strengths; added ctor.

Lexer now guarantees that the text of the current token is always available to the emit() method even if the character stream is unbuffered.

Added some hooks to see some of the internal data in the unbuffered character stream so that I can test it better.

Updated LexerInterpreter so that it uses the token factory.

Improved/added unit tests for the unbuffered character string.

Updated various comments"
f80166b39ca33412473ddacda1070adfdaa341f6,"Rewrote the unbuffered token stream to use a type-adjusted version of the unbuffered character stream. Simpler and I get to remove fast queue and lookahead string classes. These unbuffered streams always prime the pump with the 1st single.

Added a unit test for the unbuffered token stream.

Made sure that the unbuffered streams move forward always on a consume

Removed the reset method from the unbuffered streams because it's meaningless to reset to the beginning of the buffer."
6053ac5269b1b1d0d6145c0ee6b06cca7675d2a2,rm gunit; hmm...my commits are wacked on this/last one. sorry!
0b4fa240c57baff187dbd5b689d6250472288bd9,alter comment
db66257d7ef0079e29741c1f3a193dd543a34214,cleanup so Lexer lets us subclass to support multiple token emit()s per lex rule match.
37396d604011abc56186bc52352b9bc8f4449b2f,clean up
bb5790d6a9a1aa2e6a92d82c571365d8f90356da,Add convenience method.
3ad87ba12c8797f0df6080052cc544c8ab99d6f5,"rm generic parameter from ANTLRErrorListener, ripple effect."
ae7313f36a79d4a13742554e5a4851047556d68d,factor out input.read() and make ctor for easy subclass.
4329f00186cf53ced2c746b938cdb24ef1ce5462,Merge branch 'master' into nogenerics-in-error-listener-2nd-try
111c44b3fdfd3b02232cd714a7b2bafa94d020a1,add default ctor to Lexer
71bd16020f6e3381dfb3b37e78789f7bd462a726,Merge branch 'master' into nogenerics-in-error-listener-2nd-try
6b6274b0c8861354a9e404723a7f83d9ed45a7ff,add type narrowed getters
1d9aef0a5e453f0972cf4518aa14a0e804142ba9,replace .tokens file parser with regex to avoid \t becoming tab char.
2e9c449ec4811eb417d3b308e1f9b3105a0d62a1,fix a few tests
9455f5cd30a5016e7abd642d81360017ad56b391,bug fix; .tokens didn't allow ' ' or 'a b'.
d0e7e79b2b21c55d8edb33e0ab9bc89136e58b36,make sure tokenNames puts tokens at right spot; didn't handle wholes in token type sequence.
00808ef11fef46163e4189907acff0517b1044c0,off by 1 error.
ec47251bb2fbaa47416b455fde699276409f8a3d,unbuffered release() can get markers in weird order since we reset p to beginning of buffer. Might mark at 1 and then at release p = 0 etc... Don't   look for errors. Just reset earliestMarker if needed.
3b2c0a617790357cde29ded95971bbc86e2fc9fb,fix bug in get hidden channel stuff. rewrote. update test.
707ff615b404990416e4c14ff96558d0d2a74384,tweak javadoc
9a4227841dfa45cfeb96d42d6505d3a5e826c078,-print -> -tree
97386581265ce694b590b112b9e38bc9948bc925,rm unneeded code to set line/charpos
a3371ac9eadcc04ebb23e028371516a7cc930ddd,rm unneeded override.
de744f912a58d460353cca3a65ed42a83441915b,allow A : '<' -> skip ; style token name/literal aliases.
4923cb3874cec1e6b5e04b6e20401ac6e1d8bb35,reorg r : '...' ; matching. deals with -> cmds better (and more of em)
683b915507f3e7e98f515bc22b59f18b45a991ec,rm prints
d626c4acd6505950e012b1fedbef44f3617d1077,Simplify ParserRuleContext.toString
96654531b7fdcb09a7ad9e4c324105334e5b9d2c,"Use isEmpty() instead of size()==0, specify generic arguments"
47362b2951e24c0b6199f05d5d8334c21a4bbbc1,use Horstmann's PS save not mine; it'll handle Japanese char etc.. this way.
22bb947019725e466f226cd92e05aec435e2bab2,Merge branch 'master' of github.com:antlr/antlr4
f220212a95484bfb87a2746a8c7da2435ee2e8fc,couldn't get Horstmann's routine to do EPS not PS so had to backtrack.
a37f8cf4f1c8665d7b39ceae02f2e4773b226880,Add missing license notices
45815d97f7f69840f0b3f2b0e9cc19255cce7b68,Specifically test for the ModelElement annotation on fields (not just any annotation will do)
589d6bf1877cb4e3e8c28e0173c4f62cce3988c0,Remove field which hides another field with the same name; add check for this condition to OutputModelWalker
29d71acef9486c2ad70f9a0433023b2160a7f6a2,Update documentation
8b4a4612624b7563592b47549f3ad713f5244edb,Merge branch 'ModelElement'
3a35f3cb081fafb88635ae69b91058b1baaad0f5,Check object type in equals
45e42d724318ae32626de31a0d87d7dcf7548bdf,Parameter to equals can be null
4c1e9b4119647cb125e1c99cb952fe3af3c7438f,Improve performance of equals
4c4f767d17614285a7cd68b3cb187c7379c790a4,Prevent NPE after reporting error
2f0029a04056a19359ed4336273f1a3a790f4c50,Improved handling of (potentially) null fields
3b9940b02a6467c42da134cb5f69e25883f99004,Use isEmpty() instead of comparing size() with 0
84e10258013c74fda088917082abc533d9d9c2ca,"Remove extraneous ';' (empty statement), remove unnecessary null checks and dead code"
6045bd4eb5b709f81259ae3ef34f0076ae627112,Add null check
44ef41ff29e95d49402830e8f34c326ca34684e1,Remove unnecessary variable initializations
2056e019a5a5a24a26d1e2c0c9062e25665924e6,Use HashMap instead of Hashtable
6259ab5c9ea1a2a5c3993e8bf40e68783889ef3d,Use StringBuilder instead of StringBuffer
885f6530ada3a97b050dfdfaa7570d8b0121bd5e,Use chained calls to append instead of string concatenation
0141bc058a57f68dec77b359cc7fecbb99dda62a,"merge from master,In preparation for continuing on this experiment branch."
f78bf4d09736b343f60893fed5b81c763de2b2ef,rm comment; looks inappropriate for branch
991014d3f2df7b8e9d9d50132aa6905df7d504fd,"clean up, add comments, fix graph unit tests, updated toDotString()."
8c03dbacf8dca5e26ad3f598590ca4fc155f6c25,Resolves #41. EOF cannot follow s. would need s' : s EOF ; for that. updating unit test TestParserExec.testOptional
7a4a269615e0e2558f633e28277d66fd4d0e0abd,fix test so no error due to EOF.
9539572ee7155ca403d0cb6bf9ee0d74fee4d0c1,simplify test.
93945d47f5e66c257ebe435febebe1d47d1127ac,Merge branch 'master' into stack-graphs-integration
36a725765e1024d81c232621e4a6c549eeb1f6d9,cleanup; hashcode for single node pred ctx was wrong. failed to see [46] and [46] as same.
54d23066b21a9eff520a8267c355fe7e76767fd2,merge of array and $ for rootIsWildcard was broken. Fixed JavaLR parsing. Still sticks on Pattern.java but not 5 hours anymore--faster up til that landmine.
43e986db8bc5606705545c54552786539286e725,small hash code cleanup.
43424cd5df8b14edd65a767a6f93b2b41e25ca7e,do check for a==b in merge(); improve DOT output
869521090390642b3de5fda98e7ffcfdeddf64d9,"cleanup, simplify array ctx equals"
829ad9191c1f8c840d558502dfc7658d2107c0dc,"didn't join a$ + bx as [a,b]$ for local ctx. new unit test to chk"
3edb35d95ef135c3cb5088189f42af880e48d9fd,cleanup; avoid array creation
44ae1dad0b5df3e4963cd34f23e46ff4572eb801,"if merged array is 1 node, return singleton. more unit tests"
eb785934698da09b6c5bddc8d08358910825b961,rm comment
f7eeca274f33b17dee29e1d35ff95fb7d07c8774,"reorg closure and fix bug where $ in arrayctx wouldn't perform global follow. fix case in array merge that didn't check both a[i], b[i] as $ (only matters in full ctx). unit tests for graph show fewer ctx's created."
f1e4d85d0ac21d5ced1b2f5acc0afbafe797565f,fix cut/paste error.
e18b9132d9cacc378992d7cb364c6d7fefb49594,cleanup and merge common parents for array merge; fixes unit test
d8a9207041fc12f358f96369a6afd27a8cdb3013,"improve combine common parents, return a or b in merge array of merged is a or b; new unit test."
935fd2831e46d40e781fa0ffa374972759ebedba,add writeFile util. improve dbg msg
00c4f981348403fe74cf4919e5300113cce454ac,add test file that kills antlr
19663792658e34e833374c15d17096782a4d6392,shelve to look back at sam's. added optimizeConfigs() stuff.
344a56fd1e991ed4f4182614cdd58587fd93b063,finished inter-dfa-state-context-cache but doesn't fix landmine. add debug_list_atn_decisions field.
320868d6611e2466fbc830681eb631226a960978,added code chking size of ctxs. changed configsets -> configs. added recur getallnodes.
760c403151653977a937609ff0feaa9a744e7c0e,Use arrays T[] instead of List<T> to save memory in the cached DFA
2673e08bfc1cbdfb79f600506d1c1e9e1a145799,Use arrays T[] instead of Set<T> to save memory in SemanticContext instances
9627652b6798fb6ced773b4efddcfabc82e6846b,tweak to compile
ac4f00524ec510b880506806192e500b8c3a7c29,add ctx cache.
2ae4d4eebdf740c2f6ffefb6a0829ab5b4a511a2,"add ctx cache to merge op. now i get optimal graph it seems. doesn't seem longer for java.* with JavaLR. still landmine in Pattern.java, Foo.java. Made toDOTString sort predctx nodes by id for repeatable tests. updated unit tests."
2495ce6b2088e3ed6c282c6f177a56e243d31739,add SLL option to the ATN simulator and use in TestJavaLR.
3cec976f7e927c8f223138a8a19cc46f742afdd2,Don't pursue the closure if there is just one state or it's predicting unique alt. Fixed up computeReachSet() to do this.  Dropped from 6s to 4.5s for TestJavaLR -SLL on java.* with 45M max footprint.
3774c5752be920d3073db12d3b9f538cfa4864a2,add more tracking var
05de7149870eebca2806ad00dc09caff0e031fa5,add chk for null contextCache.
86a4f265967d73314d8db86753a3b5e6f41f8fb3,"still has dfa and local predict ctx cache, but doesn't help much, and takes time.  Eval preds as we pass them in full ctx mode; no sempred ctx in configs then. removed LANDMINE!!!!!!!!!  some lame code that uses fields like _startIndex; fix that.  added bail option to testjavalr. 18s to parse java.* with javalr full ctx now."
faafe8dfa2ffdc1b1007309039d01f57b6d388e6,no local/shared predctx caches. remove spurious array creation.
6b8e6cf0a787f5625ac1ca3751eb8a3293d1198a,reduces a few equals calls.
48ddc0bceeab5391eb0d486c70c55f1014a723e7,add gc()
3c7b4c2a336eda7b40731dcae74ce018c7a4c0b9,big cleanup.
0e24a66f0776c2425fa748a7ec7a367638820d46,reduce memory usage by creating LexerATNConfig a subclass with the lexer action index. saves about 2M on java.* with javalr.
6322ff3abdefb267512d4604b7e63ce5d6d60486,add comment
093af0edce5b2bc33210c306c57b099822a7be04,update comment
26165c5d5454195b0553fc623d7510aba23d80b4,"atnconfigsets can be readonly now. no copying to put into new DFA state, set readonly instead. made atnconfigset.equals() more accurate. add -notree option to test java lr"
9445d1fdd630973bbb3c88d76b792a5cb8efa97c,update comment
b83c90af2feec4fe3804d297278a78deac325fe1,play with atnconfigset fields
b843d6cf592c28516d015d9bfe383f6680bc4fc5,initial new hash table impl.
b8f072e23131231e9618e37e02894bd4f644f35d,rebuilt new hashtable as T[][]
14372f25151df83788e6fe2144d84ceac2304c39,only 14 unit tests fail.
8279c3da11fce5343b440dd4d969faebb1cf43cf,turn on local context cache.
54fd28c29d0a492a8ecacec0808167f7a74b7587,add() was wrong
7ff5544573e910209a53033fc7cc687b17ec3d1d,wipe out config lookup in ATNConfigSet when it goes readonly.
2ee5a2f3ae60c2b7adb2a4f920d6ad0d26e22722,release entire ConfigHashSet upon readonly. sames some mem and is faster.
8a301f59f8a7f77002b49fde77f67b0b02311dd1,try making smaller config list.
eda95f74787b3353961099446aacf88769a3eb84,DFA cache on again; dropped from 25 to 16M!!!
680df17280027ab2284b713331806f5202cfabc3,rm transient context cache for closure computations; slight speed improvement maybe. less complex.
75fd3264ffdd142085af27ad789841301025584b,adding new equivalence class support code and new SingletonSet
ee233f7dd37f0812deef151f450c82bc6314d860,"add -SLL option, allow multiple input files, reuse same parser/lexer."
68275eb998401bb950172ee8989ae992b4a70085,rm singleton set; didn't help.
109880b7ab973510a5156b2af0823828ea5a7fb8,added ALIAS_REASSIGNMENT warning so redef of string literal among rules caught. First literal goes to .tokens.
3f26d42d5346635b97e18d10cf88bbc9038e8191,add Sam's getConflictingAlts potential bug fix as comment
8c8752a7b2d55dc6ab40d4b89f014ac616e1bdef,print file names if > 1 file
e3e739dfc7e689167741b473aa5c75e9f438736d,"The lexer and parser ATN simulators' adaptivePredict now synchronize on the specific DFA of the decision to be simulated. This should prevent a lot of contention that would occur if we synchronize the entire adaptivePredict method. When the individual DFA are created, we also synchronize on the shared DFA[] table quickly to create a DFA and insert it into the array.  Code generation modified to have _decisionToDFA generated at the top of both the parser and the lexer.  Simulators created now with the recognizer, ATN, DFA[]. Not sure the LexerInterp/ParserInterp work but pushing ahead anyway for the moment."
ceab49e3ce1b99d4cb3ea01a75327f49db84cbbd,rm for now
79594a942e24c86933603e3e7490e2d3f2501f7b,synchronized lexer. just as fast now to build new parser/lexer each iter in TestJavaLR
510c1c0dd93b967eb2e868004022a7ffc81ac6a3,clean up
7181483bbf00f589ac4352801665e05b8e804edd,test javalr does -2x now
57124241562a67d13cd6bbdd8a96acc1e63a4edd,create 2 worker threads for testjavalr
230b687b033199738feedef1dbf93778a1a7c9ed,add barrier
9bcfc83678ec9d7aaffc82a566e0ace1bdb2b32a,adding full LL prediction in DFAState from ctx -> predicted alt. Drops from 17s to 12s and costs only 4M more ram. woot!
c97f36bd89515d49fa51eb027afe017067d2f6f8,reorg workers
4fe9efeb856e81f98ecab1d2e6f359c7d4beec30,tweak tester
f5f6715a07e30b9b2e2031e07b74bebc8b72fe32,back to core sync around creating DFA in decisionToDFA.  not thread-safe for dfa update.
8836e139543f1d69e572a27f4f8092b1cd2c6716,use ReentrantReadWriteLock to sync. works much better but still occasional illegal monitor state :(
489f3d17cbf06e888f191374bb73d5ed050a0f0c,tweak
c0ece0bd091bdd2a23464043969416a8f2593487,add read/write lock to lexer.
fa62570737591bcafe5b823099cc713bd5e0fcb1,"Add IntegerList and IntegerStack, behaves like ArrayList<Integer> and ArrayDeque<Integer> (mostly) except doesn't require boxing"
3bf99d6d88b2d6c32aed5a2dc9fe6262e6e2d791,"Add IntervalSet.toIntegerList(), use IntegerStack to hold mode stack in Lexer"
dcdcad8febddeee5dfac608dcbb94228a278838c,"Add IntegerList.addAll overload for Collection<Integer>, add contains, sort, hashCode, equals, toString."
7d4f71d829b24a2aaf6a52d2add6123212d3cb37,Use IntegerList in the tool
c893f2af08180ee55f298ccfe3d57a29b9171be8,Pulled Sam's new IntegerList
8c820269e4420381e53350e61278b3093828f587,Fix IntegerList.binarySearch
56c304ead4508163b5b5d4021614ecfdd678c6f7,Merge branch 'master' into main
85ea296632b238a16681b754b8084ed438f61b4e,added D2 as dup temp of D state. almost ready to change position of addDFAState
fedb7c105b6b2749176ec25944e3673307d05ee0,tweaks
170a8347bb597535f565e18d8275f9afc6b830fc,Emit a RangeTransition instead of SetTransition if a set has only one interval
b8f7acdeac089bfd171403eae9121b9953aa39cc,"refactor to create DFAState target, fill it in, then add to DFA only after it's complete. Combine some helper methods. simpler."
abb268416e920841952a3f32fc0167fbdbdeee06,Merge branch 'master' into main
3d2cbe087d7de643b7a1ad155552727d43d89a83,refactoring
feb41eee15a97d490fb6a870b7a8a9b1b686b8e9,fix a few unit tests.
80560efcf84b27ddf20f7a7cc177bcca8306746c,"wow. i think i got threaded working. rm readwrite lock, sync add add to shared context and add dfa state"
abb0ef52963c49cd0f2c7602bbe8acdb726650dc,Merge branch 'main' of github.com:parrt/antlr4 into main
0cfe3b42063969f6b3113d550db0840793782048,tweak to leave code for printing DFA DOT
b0c9a9c7c27781f9febdfb6b9cbf50991ece7eee,"tried optimization concerning recomputing DFA states in DFA, but didn't help much. left in as comment for now."
ff24630494b58bf93ebf5cfca9572583a9024d6f,add cmt
b0b30fec6877aed3b58e4a60eb0c1b6a58ac9066,cleanup
754e6eb5932d5dac87b6e2b73e4d9cea1f853005,mirrored parser ATN sim changes in lexer ATN sim for thread safety. reduced contention for contextCache.
60df00be4f3b26959b3436299dfeba0814817ed8,Transition classes override getSerializationType()
ff4eb0f744805019c08865e9eebcd99bf99d59dc,Transition classes except for SetTransition are final
06d7c150fd11e22aaa8ecb0a1c5d001e4f564c63,"slow again since i had to remove full LL context->alt cache (wasn't correct). But, threaded now makes bigger diff than before."
86e47b9c02c734ad1644cbd7c446cdd4c9dadfa7,"update comments to explain SLL vs LL, predicate strategy, etc...  (and did a small tweak in code)"
54a375941205e7e2f1d0dfb4127c33ba0ddbbb96,LexerATNSimulator and ParserATNSimulator switch on result of getSerializationType() instead of performing multiple type checks
eff9e0c47f221edada06e6a7141cf0c2701e3a92,Move TailEpsilonRemover to top-level class
f9bacf50600cfea71d9210446cff8d38fc35c86d,Add ATN optimizer (currently doesn't provide optimizations)
1f4df2ea5aaddd493714808f2e318881e1ec139f,Add ATN optimization to remove null state entries and renumber the remaining states
50192782046779e9bb9c6d7eb55c1a86b47ba4ba,Add ATN optimization to collapse multiple alternatives to a single SetTransition where possible. Currently disabled for parser grammars since the code generator doesn't support set transitions.
43da92e1172cbe147039becb0354d6af12c1cac3,Remove old tree parser code
674471c0906dcb908b7d91bc0e3c062b06b6d496,"Add NotNull annotations, null check, tweak documentation"
95f5d858cbb7a8215a2931fd8a17c8bc02008998,fix null ptr
e7b65057a64617e8498348855f57e59b17fd878e,added var for sll loop tail recursion default value; updated unit tests
b8c2f5b75b7b7598e0a3e4ae1bbad098558ecd5a,added var for sll loop tail recursion default value; updated unit tests
8a0af228d8942fbf57e4ed0d3c7cdd39783025a8,"Revert ""fix null ptr""

This reverts commit 95f5d858cbb7a8215a2931fd8a17c8bc02008998."
75dcb75a06cb4bbef4695664e99caeb669c23c6c,"added mergeArray cache, which didn't help java much but made massive diff to Go grammar. a file, nat.go, went from 2min to 3s in speed."
88dedbd1e0cddca001afb2704a03cd58e5013805,"added mergeArray cache, which didnt help java much but made massive diff to Go grammar. a file, nat.go, went from 2min to 3s in speed. Fixed bug where SLL had preds but they ORd to NONE. made it resolve to min alt. DoubleKeyMap moved to runtime."
5455813145d953a19db3e16ecb49fb2d82af16bb,Merge branch 'main' of github.com:parrt/antlr4 into main
b160a3b14d6cceec2cb1d65d34d14630ce86b93b,"caching more operations in mergeCache, updated comments, added null chk in front of mergeCache ops."
b7b2a45c8b0ec2cab083c708ea3bceef694c1a7b,update comments
f8aeb04eda61628cc41cfbc5cd614cc2d668069b,Merge remote-tracking branch 'sharwell/serialization-type'
20d96b0a8623ba395988a8385dd84913e55764f8,Merge remote-tracking branch 'sharwell/automata-cleanup'
d504d210107e6c9218d27964d811e4e0327ccd29,Do not emit token types for lexer rules with a 'type(...)' or 'more' command
c7d1ea7e2313a1bc10d959361373ef1f7a2ad2d8,Merge remote-tracking branch 'sharwell/atn-optimization'
c2b49bd94eb0d186584765294ed87f91cf9e8daf,pull in Sam's ATN alt collapsing optimizations with optimizeStates off as it causes a class cast exception.
1e88980db5309fc000d54e299a6ac3130e8ec572,Merge remote-tracking branch 'sharwell/aliased-tokens'
aed26c690eb967f58bff1a4929901525929bfc57,Merge branch 'master' into main
6d12cbfddbb79b16a23ede10fcd7d15c428c549c,fix regression; didn't work with stdin
4090621bebb1e1d70f75071210250ed0630a28bd,"same literal different modes gens no literal in .tokens, rm warning"
1bec176eaa9f7797c641b805524265142c0fe0e5,Impl Sam's no viable alt avoidance idea that chooses min alt that dips into outer context. unit test
0d92c25056d1c8e0ef0422a1bbef34c6851bd308,improve hashCode
2947fe6a2ad1c01f98920a8d42d668664719d23b,Fix ATN optimizer leaving loop back state numbers in an inconsistent state
492980de71f30014fd5d4c23712cc18abfbc8555,Merge branch 'master' into main
78d8002303af1195329102ff5c53849158aec44f,allow atn state optimization; sam fixed.
8637f318371d05fb73a2c32ba1e4e424e25d86e9,rm prints
717af9c371d15b96fc2051d319432fa0e104a0f4,remove useless code
799b7afc1cb1bf6a6ebd2d4f5fada94d1572e65d,playwith grammar
64c050f2338afabb3a39e90c2bb4fe9ad9cba30a,sets at top level work now: s : A | B ; in lexer and parser.
cb09dd6d0971e22f03ac1ccf8a1304237efb8ed7,"Move RuleNode, TerminalNode, ErrorNode, TerminalNodeImpl, and ErrorNodeImpl to top-level types"
199e9892dc6d9e263148481797296498ecedbf66,Should be checking for ErrorNode (interface) instead of ErrorNodeImpl (class)
2d62b73a14f360a14ad51162e82f923453082d8f,Merge branch 'master' into main
5dacfc95542491d610ec5bf80a67b9fe6479ed2d,Automatic context accessors detect closures
83d8903f9fea2bd457ee8d2af9b0892c46f0832d,ATNSimulator.deserialize derives rule stop states and (in the lexer) the outgoing transitions for those states
9b42acbf4dd56b27a289f302813f478fc26a8dbe,ATNSimulator.deserialize computes values for PlusBlockStartState.loopBackState and StarLoopEntryState.loopBackState
0c073062f73b5258470811443600c1b39b4ed805,TokensStartState is not really a BlockStartState because it doesn't have an associated end state
2975c90fac56119e59d4f1ed1aab3d7d5c6da417,Serialize/deserialize the value of BlockStartState.endState
3bfcb7b38fc037a3715245efea6cfc3ec8681b21,Add ATNSimulator.verifyATN to verify several assumptions about the deserialized ATN
1d92b311ceba1c948006afee7452c67ffa09d539,Merge branch 'master' into main
f6a9c7e81c663872dbe115367bc40a298951c92b,add contrib agreement
1155c40fc8f4acf93b7b2e400b540ee0a8d5e437,add contrib agreement
6a251340e8197840f188a2d248a4d6857d2ed9de,Merge branch 'master' into main
17f7efca0a260a2e8187c9f6bed9ed010b0025da,Never serialize edges for rule stop states since they can be trivially derived during ATN deserialization
6f38942e31412cb45399fcc6206c057c07444ab5,Add overload of Trees.toStringTree that takes a list of rule names instead of a Recognizer instance
dd12508f5d289c08c3259943024b208b675d42c6,Add overloads of RuleContext.toStringTree and RuleContext.toString which take a list of rule names instead of a Recognizer instance. Remove ParserRuleContext override because it does the same thing as the base method.
4508f96ce429b5b4ce81f140007e71a4a459eeb3,BailErrorStrategy propagates the RecognitionException to the current rule context and it's parents
a51f1e70550d4664ff2f4b6df0be73a26983a2e8,Updated documentation in BailErrorStrategy
d8b4d6403a2120c60b4780da1fc1d8094840c5fe,add doxy stuff
ad737ebdf65a3fab7faf99ff41203a51d0f0e80d,tweak
e33e355d669cc73ce05167d3cf4b50329de30a96,tweak comment
1a52e0212e72c3b0c54a3c6f49bf1c4aaedb5f43,tweak comment
050b27cf65329913922cd941460eda9d789f3b53,tweak comment
60d99e62dcc413406b8ccb0197e832141d5280ed,rm ParseListener; tested the tracer with left recursive rules; weird but deterministic for entry events.
1eb258b8f84e39fc2d45c3521824864c784e9efa,tweak test
d9ad3d0bde64902442b5691996368c0891b40bb0,rm as unneeded.
20aa8cf4ec119ce05992a2f50554895de3db790b,update comments
cdf3454bc5fc5829bdfbfda49f4f25849845f638,tweaks; mostly comments.
11e6bdaef6cd1ac53215de7469d2f74720a5a322,Merge branch 'main' of github.com:parrt/antlr4 into main
3565efbbc32a797331bdc973400a433a26cba09a,Merge branch 'parserrulecontext-tostring' of github.com:sharwell/antlr4 into main
a0563656f74a67a8ee9d4258ba78e5084be2c56a,Merge branch 'closure-labels' of github.com:sharwell/antlr4 into main
201db8b6d0c1b4072fe1df0e71e72783f0c3b757,merge sam's pulls
8dd215f4b4e6fb1eccc4848e899e59f717d20fea,Merge branch 'deserialize' of github.com:sharwell/antlr4 into main
38e0ad238d79723dfe9fe5854233982fafbe69ef,Merge branch 'bail-error-propagation' of github.com:sharwell/antlr4 into main
c277f445e73bef6e1e091916644f8ecba1ab7ffb,rip out remainder of parselistener in code gen
5c70d5072aa03d6d2844cb89f96ead530308a8a9,fixed for new atn structure
7c955e3caeb6c43a6ab0b0dafeee4892ccc0fb55,fixed for new atn serialization
c7603c24ea575b9c47476a38d377b0ec48031af7,fix atn decode
ab64b1c62dad98b29b3d9689162557e63aa902f8,update / shuffle legal options
e4a9a44671a007cb2904d71283b36da8f5fe2c51,grammar option cleanup. was a mess.  -Doption=value works to override grammar options on cmd-line now.
cd35a53fc8f916f0bdef5fafe535a0b382e3c097,rm print
60a17f31577d3ad4908c3cbfea6505807929d921,fix help
26bf5acf196cbf05bdfd79cfb4ecb487ae5a1bb6,"made ""a4 -message-format antlr T.g"" work; deactivated the options that don't work yet."
d31378229c885619f4dd0c4865215d6142911d50,set help msg
2d324058d6895a7f5bc67ef55ac5cf4f61561ee2,set version
2b5c3723ba8453bdce270a773374f7b37cef217d,update comments from Sam's version
b3b02a54492f71aae71acd798a5f50f9620749a9,"rm T='literal' in tokens { }. Also it's comma-separated not ';' terminated now. tokens { A,B }"
b1277c5081e306a0f7125d6284baa81d516c7db3,mv order in which I create the error manager
1504c2f8f3e5d5813f8aa7b69dd7186c768edafc,was not paying attention to the encoding from the command line when generating output files.
c5ade128fd30592c6949f6b7039be2a8853ba706,made a better error message when they target was not available and also I bail out of the code generation process.
4e68b4d3eb9452acba35b0d5e165a9c5cc4d7cce,superClass capitalization consistent now with option in grammar; lexer was not letting me set the superclass.
e63e9774d814a4531fd51cbdaf366d206446809d,ooops; it did not do the right thing for lexers. fixed
5403d9bae9f87f60fb6ce7898315deb3859f172e,pay attention to the TokenLabelType
dfeca1b9d91e0e9fb930fb10d5072d329a05a8c8,rm abstract option
64cd79a18a9fdfbc25e04868955e305793501635,add return values
bbfc441438df26a83b3e0656195d99b4fab0fb12,put range back in for parsers as error alt.
7586afff27c049052c2fa3000f762b910318276c,don't pass new term node
4b31da9e7c04ba34e99fcffb7e3570ccc7e0f2ed,VERSION back to nonstatic
fcb67d8d93d92a8572bca94e73043bbe3a022457,ensure 3 literal redefs don't leave literal around.
3638073efe62d0bc8da5a69d165c12a547307409,*.g cmdline works now to topologically sort by tokenVocab dependencies.
0bb154957ab5645303796de5980d4da0e5d610a9,version to method.
1f529e45b1a7f7cf4da4a3963aad138ca452efdd,fix unit test
36cdba494f91eb83ff75767efa18ce16389777b5,Merge branch 'main'
726fe2c9832d6db549cdac0b2aeddaa6d94d273e,Make sure to call visitErrorNode instead of visitTerminal when you have an ErrorNode. Also fix listener calls for case where _buildParseTrees is false (adds terminal as children of the rule nodes but won't actually construct the parse tree).
0a961645bef331c611f2c6e6fa74825b5545b22b,fix comments; fix unit test
8908641dca2d8bf5ee8d2fb22621034aae115ce3,use v4 not v3 Graph.
22e3f4f85f34e9b9ef8f5a7c55331dfeeb889823,use v4 not v3 ordered hash
4bbbff4e8eece86d64ff1fd77419472f07df4ba4,comments and a rename
c581faafc73f98110e358bcf4875986d750e6a7b,removing public/private rule modifiers.
0ac781aebfb1d5ae0a5b0de26aa867c17490a615,was processing grammar after syntax error.
3c5dec11723c18c84f6e82fad99be23225dab211,add large comment describing the decision rule for continuing analysis.
89656989e6e0010400f2528f294f7d74405330bf,add new map that lets me specify hashCode/equals
aa2d893a77df6551fa7569ff8c43042dd8fecd86,"got first draft of new ""go/stop"" algorithm."
e9656e35f9d40da5a0328784c3a98af1fa4d26d2,Fix codegen problem where notset and wildcard transitions could match invalid tokens and/or EOF
1ce6b69651c3300b0ac4d8f6578c5760ca472c9d,"Fix build warnings in FlexibleHashMap, reduce entry size"
ce38d61f3a068b69f04acfceed35eef512b5575a,Merge branch 'flexiblehashmap' of github.com:sharwell/antlr4
3dbdf90a3f0a92678a388f6242feb00bedec4524,change version
046402b00eb2c60fec19ea0880cc14b891354fb3,updated Changes
54673f46751bbdf62375638ea1a0207485bf67de,"Added some documentation, change the version number on v3 lib. Added Sam to the license."
ff0c658af5b316af331b77a9ba98e925fb91d5cd,Sign contributors.txt
8a928d43268759bb7fb13306ea5c4ebbcd557b39,working on fix for rule exceptions
01b5510be11274a4c8f2ac946b24daa331633350,"Exceptions now work on rules. If you specify at least one catch, then it overrides all catches that ANTLR generates. Otherwise, there would be no way to override the generic recognition exception clause."
4abedb08ddad156fb89ac43438d88fec8f7fc1cc,tweak comments
2241b3ea51de9814cdc3add9a2b2b662702a1e58,comment out attributes for lexical rule references.
91bad33f570ce8a3b89a552d80d9f27e7bc0d85c,comment out attributes for lexical rule references.
1909fb3f85b013f92f290d538d20e2c5d8447aa6,fix unit tests
913bb717bdf926e2d3cf17f75dc07186052ad41c,added -package option.
5f8645ce9f3f2684e072e82547b2a45edce983c8,forgot to add to the changes list
71276f7df8c7533a71a92006d5ff51cbdaa7844d,generate package for the listener and visitor files too
62e005c841563107745c691e2d6adaea055dc4f7,Add nb-configuration.xml files
7ed6cdcc4b7e29048af106aa33e5d5eac111f81f,TerminalNodeImpl.getSourceInterval didn't fulfill the contract of SyntaxTree.getSourceInterval
8e3b85d868fdff39aa29251aab86389b49e75f02,The -package command line option shouldn't suppress the @header{} block in a grammar
fed03ea66472bcc943193b1d6a5662ddfb262b41,Generate hard tabs instead of spaces to reduce generated file sizes
56c4e0e8b0e89676c4fbdbd493758fdb02df7507,"Add back support for properties $type, $text, $channel, $mode in lexer actions"
d4d65be663e43a476bb539e798baec40fc061a8f,Merge branch 'codegen-template-tweaks' of github.com:sharwell/antlr4
1b605432073a6b19b905bff664af1f9ad2c4956d,Merge branch 'lexer-properties' of github.com:sharwell/antlr4
262a331a5b16002d6dfdda531f8ad78516f41dee,recursive rule bug in lexer;  the lexer ATN simulator was not checking for empty stack at rule stop states.
bca63c64aaee014cfbbdb95de8eb637480fe251e,the test rig did not allow lexer only grammars; a regression.
f43cd15dd95146c317337a0ae6683dae61df93bc,rm'd $foo references from lexer actions and added a good error message.
4bde79a666dd0352bb26efc76bcc8fca86d2ef37,playing with tests.
faff63366c1275270ec47affe89ed846942d3d66,tweak
332c9f4452797e9a45c5d4ff4b6055f709846d59,push
19782e6d777ea0720129c260524ca6eb5481ff3a,first wack at fixing nongreedy (ACTION | .)* for recursive rules.
4d8158c6f372c34beb189a53ac4e9683afd94a4b,"mixed this up in branch, but fixing $attr refs in a grammar."
c8a51ccfad21d2e7f3c070fc02138e4ad0e2d32c,got wildcard working properly with recursion now!!! new unit test.
ea652962ea772407f939be625b5ab2de3855cca7,"allow ""tokens {}"""
d3d5bebf9fd7e16e40a81772a7bd6c41d23993c3,add to unit test.
e78ecd418a05a59dc18c22ec55911641c5fc6491,"rm isGreedy from DecisionState, but allow ATN construction for lexer to be nongreedy. error if '.' in parser. rm unit tests for parser nongreedy"
166231b5e16b06af0684105fd66789002fd718b2,no greedy option in lexer either.
84c786da50f1cf3e66aa14a725860c48389ff290,update change list.
b56cd0f587a896eee2bced803382d9d82e3ba2da,simplified delete configs algorithm.
098bdab2947a421068c3b75b8f8e11c48a749b10,tweak for 4.0b2 version num.
1e3d02314f5ddc4b03b67e5fbc0364744de00fca,tweak for 4.0b2 version num. (part deux)
ebe9cd245e12e691a0031932a439915618e86eab,interp DFA shouldn't be static
46fc5001d5f3f1a0020a46a4982c57426588797d,unit test cleanup.
db1bfa9c037ad2d42867ecf966a628f15d811d9a,ParserATNSimulator wasn't using Token type param.
3575e9c3c790b23d73deec2377eabe8a4f1fec68,fix playground
ac29e6cdacf0d8fcf16ac4e8e2b6fbb91d141a93,got unbufferedchar working I think.
9845e4ff20887ebf40e06a4923cfb30ef11bfc57,rm redundant field.
68dd847c048efcac2bf00407b8e2e960eda7e379,"* Fixed the unbuffered streams, which actually buffered everything
  up by mistake. tweaked a few comments.

* Added a getter to IntStream for the token factory"
8cdbc1d5ffdabcb8860acb8af3feb40ad09e586f,Added -depend cmd-line option.
2db3691f6d8acf03a6fdfb69f24adffce67d38d0,added -depend cmd-line option; fixes #71
568d45e8fee5d33a219afdf4f969e64d4475cac0,Merge branch 'master' of github.com:parrt/antlr4
1c65bcd02f33ba6c58977d390239bff8ddfd88de,Move test helper methods out of exposed UnbufferedTokenStream API
fa7015f7986c68c57a359c3999c46227b79912fb,Move test helper methods out of exposed UnbufferedCharStream API
fa3e6e5867dd4a7bef36e2a8da8e59b08eb0683d,Move CharStream.EOF to IntStream.EOF
5637a04eec277503fbeb8ac41bfae06c0f86ebe6,"Extensively document the IntStream, CharStream, and TokenStream interfaces"
b8eac6df6027708a6e030069644bc255e59a590a,Updated tests in TestUnbufferedCharStream to cover many more edge cases
cd2589048629501dd8b427e2b29ebe51de87b1d9,"Many updates to UnbufferedTokenStream:

* Fix LT(-1) after a seek operation
* Prevent consume() after EOF is reached
* Use the EOF token provided by the TokenSource (no need to create a new one)
* Fix assigned token index when marks are in place and when add() is called by derived types
* Throw exception for some invalid use of mark/release/seek
* Prevent fill() from adding multiple EOF tokens
* Remove diagnostic println
* Updated field documentation
* Implement getTokenSource"
3457cc73eaca0ed47e325c7050e4ba1595d630fa,Significant updates to UnbufferedCharStream to meet the IntStream and CharStream interface requirements
ad6bb6af564e1dbcae7c44bb78ab6902f22f9f16,Updated copyright headers
69c20f3cf66e291212cdd16822c62e2bee9330de,Only perform array copy when necessary
40ca5bf6b0af85cc19df703e0d71e5c22bb876bc,set release for today.
0f29f50f2a5ccf53c0a3ca78b23eb7a779c9c0ca,Merge branch 'unbuffered-streams' of git://github.com/sharwell/antlr4
05f1dc0d265fc162be6101d3cab56dd5ae24fdb4,tweak
4dee32ade825f82d364ed1e28295c98474497794,Validate parse tree shape as part of the unit tests
1defbdcc5dae23b2e2ac325988626a4b13e8f169,Fix parent pointers in parse trees for nested recursion contexts
4989ae965fa7df33df6ec54dccfba17b789f6ff6,Remove unused imports
f43e3614a8ae515555862224188e3eae6c11542d,Fix invoking states for recursion contexts
e14e7663b54d895aa3decb3e3095a763da676944,Normalize and fix tests in TestGraphNodes
9cea095d816907dfa7bf5655498f56ece8e9dfc1,Fix PredictionContext.mergeRoot placing states in the wrong order
d274650765e79d98abce047b3069f596d8f0fdd1,add null ptr so start rule it doesn't crash if you label the alternatives.
6102c632bcadab196ba6f1d32fd7185f83badcf2,update changes.txt
7bc16f40eafb9001d2079788d567f85960e0317a,Merge branch 'prediction-context-fixes' of git://github.com/sharwell/antlr4
55ad7bdb2c1b51fe73103f66e2afc28c0cbd4844,tweak unit test
ebe633a2cc178a5daf151b9da995db5f7365824a,replace ctor for single ctx and don't merge wildcards when payloads aren't the same. fixes a unit test.
28ddd7a6cdfaa08e0dce00dcf1d5159a6e493829,add cmt
4c6ee82317f45b17d078920908cb631de29368d8,Merge branch 'antlr4-maven-plugin' of git://github.com/sharwell/antlr4
3ff799d35975bd5ae954c396113bb3f8fd3344ac,added -listener and -visitor dependency generation to the command line -depend switch (tool/BuildDependencyGenerator.java); signed contributors.txt file
30b7c9399e7cb7ac00662a82ed65cf66917ab937,made changes suggested by Sam and deleted erroneous comment about not generating TLexer.tokens which is no longer true for ANTLR4
74754d04a232c65640fe8e6d0166cd4008b04d9b,"Merge pull request #74 from stephengaito/master

Adding -listener and -vistor file dependencies to the -depend command line switch"
ad438a70ac9ff317c5b4d0953d4811a2907d99bf,updated the comments for SLL.
058ed513495b219e3615b0639d1ed8ea6aa1f447,initial impl
badb48a987433b9395e757fadf2bf6ce85798a7a,almost there.
643edf0263f39a82cd7d67db8433fc3f2be7eca2,let it consume EOF since we sometimes need to match that during prediction
27a8e5e521f284535d6e363b2d402f6ea7f0801a,update comment on consume()
6654281aab95350d76ae0af92995d74f6af9f483,Merge branch 'master' into new-conflicting-alts
1723bbd6f5b0637fa27a03f836117e3b2e2686f2,no debug
f20cd82920ecbc7a3780b5b47597d9efe71c6f2c,I need EOF edges on rule stop states for start rules.
a3a734759e87824a7f4a36a42768d47204273855,Merge branch 'master' into new-conflicting-alts
2ecfe2671a9722b2ef7c100992e7c6772bac56e4,size!=cardinality with BitSet.
f73c319e426c5d65df2671e0a005fd83f5a060d8,new T.g
b4cc0c70a654b4642dee1b0df3f0c8473c4485af,new TestT
3894d0b664e86ebc808ddbb1376557e39cec427c,add
e69734c501c469c4734603243cee55252769ed66,rm loopsSimulateTailRecursion
d6d3f6f506bbf927bf1d4694aefb6d599e98f88b,missing ambig alt in msg.
4fe05174317c591eb2eed96c989e038e02d28917,Merge branch 'master' of github.com:parrt/antlr4 into new-conflicting-alts
a9ccda48ab9dfc9dcef9224aa5bebbd453491519,Merge branch 'new-conflicting-alts' of github.com:parrt/antlr4 into new-conflicting-alts
742887c9b1f7060d84411f7017699e3abdac18ac,Add another unit test to show when to keep looking for lookahead during prediction
ec32b71761a480621de067c70711caa0691cbdc4,another unit test
e7ece0e90aa6a71e54876606862f75995e155d59,got fast prediction termination with exactAmbig option that forces ANTLR to scan ahead until it identifies the true ambiguity.
01bbce6952dc54e38ddf3c986cb5190b082e0b94,"full LL is always correct now, if slower.  Stops prediction when resolvesToJustOneViableAlt().  SLL always uses heuristic"
e9c83c375f00c9abb8e96168650f60a450481dd7,cleanup and refactor conflict detection code into PredictionMode.
75a01636d01f2181bb0a717d6039d05ad150ced3,got ambiguity reporting set right I think. fixed unit tests to force exact ambig detection.
54871d52ff7e838f3891272980cc86798221c722,"Revert ""let it consume EOF since we sometimes need to match that during prediction""

This reverts commit 643edf0263f39a82cd7d67db8433fc3f2be7eca2."
327a3a01008af0efdbf31caa3eb5eff0bccadb33,"Revert ""update comment on consume()""

This reverts commit 27a8e5e521f284535d6e363b2d402f6ea7f0801a."
a0ffc84952224c1f956828c417592b6ec4cd36bc,Merge branch 'master' into new-conflicting-alts
cb340b1e04daee59c71dba41d582163b3da72fdf,Merge branch 'new-conflicting-alts'
93070445bd641eb84b99908f9be8e47db4b230eb,update change log
c68c058280133e22bd5ab01bd9a1de987b2197da,Implement Array2DHashSet.iterator
b3b1a3750d2316cfbfd2f1c5ee8d1b356c94c67b,Allow optionsSpec at the beginning of a lexer block
850fe5b9c2e84c71865309fc76a335927d55d4d2,Make sure to serialize/deserialize the ATN before using the interpreter since the runtime alters the ATN on load
65793adfc83bfa92db7161265498cf83db27683b,Fix detection of unsupported block options
39c73302f68c108eb19001b48caf1e61be0678a4,Explicit greedy option overrides implicit greedy option
9ea072aee095a1ca983168096c04c6d4f671e9ca,Uniform handling of non-greedy decisions in ATN factory
0d30a7a60b2d18c9d25d633f34d5a73edc8dfa53,Add ATN representation for non-greedy decisions
28b243cda576220daf5658b824320a161c6e9269,BlockEndState links to start state for each block in the ATN (constructed during deserialization)
025cc6187ad9b242f66d9316182e1d9df53cace6,Fix handling of non-greedy blocks in the lexer (uses regex-style non-greedy with unordered alternatives)
b0a4200a08315984180120aef532ecc8ea83ab2b,Allow greedy option for blocks in both lexer and parser
30b5e2c6bed74900614d9339cd6e8786cda5bd16,Fix greedy tests behaving as non-greedy in TestATNLexerInterpreter
7c221f13ed7bc91ea080458df9dc50c874494316,Unify EMPTY_FULL_CTX_INVOKING_STATE and EMPTY_INVOKING_STATE (fixes an array indexing error during closure)
aa2223cd6a4d6ef43e680a1e0c4f074951fb9ab8,Fix assertion in PredictionContext.mergeArrays
d738949ccd93735982c5849a6f74a99237f3e027,Fix testOptional and testNoViableAltAvoidance
bbe77782db1f8e6dbbf4204293ffdce620344365,Fix state checking in new non-greedy handling
a40073a8ccc2bfea6417ea74b0214091108a55a6,Merge remote-tracking branch 'antlr/master' into non-greedy
6fa853c14f5e0eea85cd42063371c6e0a0ab1be2,"Fixes to LexerATNSimulator.closure, fixes to non-greedy positive closure"
c737baf20c00db2b52ce0e276379b2a60134f177,Add several unit tests for greedy/non-greedy behavior in lexer
f9a63b88100d862ec2c91f2b4a3acb755550538f,Fix bug in PredictionContext.arrayMerge
fb87e4c78582e641ec1993ea9bef06771c23c7c3,Another fix for non-greedy with closures
1af9b4c3383d0bd34e07a62c34ec7733e9f2bcb8,Simplify and document non-greedy behavior in processAcceptConfigs
52f1d3b6e54dc47b3d76cb9beb927f67655bff57,Simplify getReachableTarget
d996b5c8c7932de90d5b4676f4b38265ffb05f8f,update change log
ab6b3419428972005e153d0e25014a29362e80e6,a few tweaks/comments.
d96e02019a24d545fbfab313db7a3e0576808e2f,working towards b3
ed7d4b1dc163f9f9b391c563de294ec756d24cbb,fail option on predicates work.
12b2c349469b8cc07e4776529fb41a13050d86ec,"Lexer uses strictly-ordered alternatives within a rule. Simplifies code, increases performance when non-terminal (lexer rules) depth is limited, and actually fixes non-greedy behavior"
1ae3c0104c91235ed59d578665836a2cdc0fb765,"Simplify FailedPredicateException constructors, encapsulate fields"
4790ab76e141442eda404f4083a71c34f45bd6f3,Encapsulate fields in NoViableAltException and LexerNoViableAltException
36c63db2997453a31a6e2f0cd1272251b50d62f1,"Remove redundant casts, encapsulate fields in RecognitionException"
bb44db6397a2ad2511eb57fcb434e23d086220e5,Create a new ParseCancellationException for BailErrorStrategy. Derived from RuntimeException so existing handlers will still work.
a80a6022ff231e67e61cbaec6e15953aaa617dfb,Update pom.xml
4f918f75bc17e26bc3535e2e24638146593521e2,Merge branch 'get-reachable-target' of git://github.com/sharwell/antlr4
31c9fc33f10da4455193c7245ee5842227eb285e,Merge branch 'ordered-configs' of git://github.com/sharwell/antlr4
cb0f5c0e51ced3bb224a89ad8c8e0de486e468c5,Merge branch 'parsecancellationexception' of git://github.com/sharwell/antlr4
b89445e861e39dece968185d35852161be3cf506,Merge branch 'maven-update' of git://github.com/sharwell/antlr4
d5341b55af6bda04e7494b5332bc0db0fc846cd1,Merge branch 'encapsulation' of git://github.com/sharwell/antlr4
514a1500ea090d40f34511168970970642cb62db,Add regression test for antlr/antlr4#6 (NullPointerException in getMissingSymbol)
bfc395d23b5968c338e2ca7827d156e3ea716105,Add regression test for antlr/antlr4#19 (getter for context is not a list when it should be)
73c6ce5c7ec6ee8521a2dc049e1abd0d1a744c6e,CIRCULAR_DEPENDENCY error number changed to 200 to make room for expanding the set of grammar errors
5a5f56e91cd98d4f06b7e841876545707ff21b41,Add unit test for antlr/antlr4#25 (currently fails because the underlying problem hasn't been fixed)
8494007025ee3b7ade2557c83770f20a71e99ba4,Add regression test for antlr/antlr4#26 (an exception upon simple rule with double recursion in an alternative)
e89807e350dc253e0408119d00ba31364e509068,"Add non-greedy quantifier syntax: greedy forms are *, +, ?, and non-greedy forms are *?, +?, ??

""greedy"" is no longer a block option, and all loops are greedy unless the non-greedy quantifier is explicitly used
Add warning 131 when .* is used, because they probably intended to use the non-greedy form .*?"
f4a3d6f3a826fff46e0b2cd94f7ed4e03b19ab90,Move initialization of finallyAction to fillNamedActions - factory cannot provide context information for the Action construction before the constructor completes
bd0868c305ca0d97659d1636dc712b02c6e4a1d5,Merge branch 'action-init' of github.com:sharwell/antlr4
950f588ac07aaea737a9d2c5f03f97adf4746642,Fix implementations: TokenStream interface says getText method returns non-null
4adef1e455f97119a1fd14866d7bced41fe17bb8,Output from -atn flag shows the order of outgoing edges from decision states.
85e2802d66cd7b1afdfa3c2c2bf6f34761a299b1,Use a group file instead of loose templates (easier to understand the interactions)
4d2df41cdbc77e5cdd0a5de1091257277175103e,Format and document the 'state' template to improve readability
b879d508eeac02d92f12068dff96de4ec84ccca4,Fix generated alt numbers for non-greedy quantifiers
59b3a05a050fcfedf76b0a164c224eb7eb2a101f,"warning 108 for ""token name foo is already defined"""
f46d06aec6652d6ab3956671fce6475931ed58de,"Fix testA, testB, and testE in TestSymbolIssues"
55c1652fcd3569812a564f59bbf05ae0aa8d8f23,Unit tests for parser greedy/non-greedy
25c5802ba42808bb6cada43013f100af5b8eb465,Use suggested v4 syntax in unit tests
37425b70d05d870757fde651e0927122007400ed,Subtle whitespace changes in Java.stg reduces size of generated code without hurting legibility
94d3de748e26a9abc3e63bd55be52ea5fd5b711a,Unit tests for ('a' | 'ab') in lexers
871db85ecb27a3b8a454b97e99dc97bcfe42715a,"Add field DecisionState.nonGreedy, computed in tool and serialized as one bit in the state type field"
ee647907391fbdbc0fa6e64624aee89ced3a3197,"In lexer, configs which never reached a non-greedy decision state are fully greedy (unordered alternatives, longest match)"
a115490d5e2f2fbdadbd9f7043f85779190a109c,Merge branch 'warnings-as-errors' of git://github.com/sharwell/antlr4
9873230f55df67062ee1d8cc20065cceb796e72a,Correctness for lexer DFA with semantic predicate evaluation only requires suppressing single edges from the DFA
5dace66921087ac5a2ee7bec7938ee7a8c18f3d8,DFAState.configs cannot be null
d17f9191234183873862b585a8ab93cf99e291a1,Updated NotNull annotations in LexerATNSimulator
afed3ac34969c21859084b6ddafb229709c5b20b,Remove unnecessary null checks
c34f0d6945a63bd77dcb975d92d7b800e6aba544,Remove duplicate array bounds check
0deadc688a0702797b00fe13b1c364f9b071dd60,Remove unnecessary array indexing operation in execDFA
1269ce8d4e1cdf69ef0c4db232f0cdb667e33738,Remove 2 field accesses per input character in LexerATNSimulator
7bf50c82635e2449188bdf595889fdc10c56503e,LexerATNSimulator uses explicit lower bound for DFAState.edges array
f554a2ed4f024d8947306202752ee05c4ba192b6,Eliminate debug and dfa_debug overhead in LexerATNSimulator by making them compile-time constants
72c1fc8f6d46e0945cc037fb15417554de1efe1f,tweaks on comments
6db106855fd248b4b108d5d8779431dc4ebb4ddc,Fix Java test grammars
13e940b1dba64749ac01f44b67a106d06fed163f,Fix error messages not shown if invoke(...) throws InvocationTargetException
1e5cfb4a1ebf038a306e8aae131be809f960c639,Add unit test for behavior of lexer with input-position-sensitive predicates
bad2751a2c9b5386475e0bb5165efb67c304f711,Add edge suppression for lexer start state - required for left edge predicates
efa9ea7811dc462199ea61b52b1ec41256d1c48b,Simplify LexerATNSimulator to reduce duplicate code (duplicate instruction executions and duplicated code blocks)
5924d3f9352aad689496b991b0ba04ea6db19fd3,Corrections to Java grammars used by TestPerformance
a96e7a2e70752d2a898d9b8d80b08e799aa7bcd3,Added many new features and flags to TestPerformance
bd121facef330d815061b1fa2c709885a4e22279,Add the COMPUTE_CHECKSUM option to TestPerformance
fca471000437f6fc8c36920cce1e667017b56808,alter tests
a0dd1b4018975edc66970b0cf9c7699dcd2f2763,Merge branch 'test-performance-features' of git://github.com/sharwell/antlr4
a4ba5622100bb236c69cb97bd3816cfcf8a0ca4f,LexerATNSimulator adjusts the input position during a speculative predicate evaluation to accurately reflect the state where the predicate appears in the grammar
d74827181635c23b57af37b28aeb889bdcf82f7b,Remove getSpeculativeText since getText works again
05363cd5ef0ae11bc6f637aca1f01558c56f1f77,Fix tests in TestSemPredEvalLexer
3278997a89a0d41cdffa42b78c24622685004711,Move lexer predicates test to TestSemPredEvalLexer
eca9090fce84b05db2323867d4fbd154baca8c23,Remove tracing support from LexerATNSimulator - in process of moving it to dynamic instrumentation to eliminate runtime overhead in production use
0446c912809eb9f22f82e8e087a7f9bef6a0b818,Use junit 4 API
5a519b9222e43b0f291f9affd6562bf849d42b6e,Ignore tests that fail but aren't critical and got deferred
ca38320d43588fa74f35cae65ed3b3b072b8d924,Simplify ATNConfigSet.toArray
adee7ffd8f32636b6d7efb05a1ba46bb22b58ed9,Fix expected unit test results
01f8716ec4134948494033a84d211d0eb3fb11dc,Fix BasicSemanticCheck to check for token names that do not start with an uppercase letter
7bbc6c18bef74b396150eedd542f1355c51e0375,Remove unchecked casts
9b1741c90eafb641c362a15472034ca35e1a639d,Detect labels on blocks which are not sets (and report an error)
2ce42f46f8a3b8cf7cf3ee75b45a663057b32505,Check for null
c2722b127abe9af3b24d0eb4efd7f4202e87bac5,Store return states instead of invoking states in PredictionContext instances
347097874998b076937daeba3d165e780637cea6,Updated naming conventions since RuleContext stores invoking states but PredictionContext stores return states
d220f90d3bf40cb588cc7055eb3bd4df4b26bb16,Remove generics from all runtime code which did not use them to provide type safety
a828b99b5919ca1fd5c1dde5c628d78c9b20c0ab,Pass -Xlint -Xlint:-serial to javac (Maven build of runtime)
675776267f85cd9cd8dbc81b2a52b67dd7f5265b,foo
8c4edb8fba80e82b195245d1fb9d644b843fbce5,clean playground
a9d4aeab7149e4c7c9115b2fd123ff2bdf814781,no ? extends on rule ctx getters.
c8a9ed6d30316a076d95fb137174a356ed1943b6,added unit test
baa4dcf1b9ef05ddd30ce4a501136a000ce2de37,"+? works, had bad input"
b6653293df131531c95ab1a4f38017361675818f,Tweak comment
cf5bf7c3844f40cff1911e3e24df9a569797bfd3,Add testPredicatedKeywords
c9890e83050483ddbaa7a78db4ff90bbba7db3fa,Throw IllegalStateException if the user tries to consume EOF
fbaac8194b1a2d8f7cb612961ee333e949ef6d68,Avoid calling consume() at EOF
28e29e39dc8370db27a1693a0d217ad4820d084a,Remove code to explicitly add EOF transitions to rule stop states with no outgoing edges
400b58d4a02a28f0b7dc2ac10dddafecf9d181e6,add option -exact-ambiguities to TestRig
d1795d205f65e966f5143c501699eaec32d9201f,"Revert ""add option -exact-ambiguities to TestRig""

This reverts commit 400b58d4a02a28f0b7dc2ac10dddafecf9d181e6."
4480634f13bb2e404a8b3d8b38ec7c8fa67d016b,do exact LL ambigs for -diagnostics
0c3ce2860e09a5b4147e3efa4487901cb72c744a,Merge branch 'lexer-eof' of github.com:sharwell/antlr4
090337011736a4ee094a2e5ef901d5e85128888d,Add unit tests where lexer error recovery consumes to EOF
b917c01bbae1531037f554d56324dc69bc1fe1d3,Fix lexer error recovery could try to consume EOF
f8ec86edd7cdf9d81c8383bc85f1c511666b58f2,rm err 'no wildcard in parser'
c07383518638345de03a27225799cc3dd4af0027,Merge branch 'lexer-recover-eof' of github.com:sharwell/antlr4
a5016b60f98f440c1ea44a6992fe09a8271339d4,nongreedy decisions can't be LL(1)
a62775c4ba95ae88e1d75c1d6a098211b740059b,Updated unit tests to reflect new expectations for parser EOF handling
68b9798d6f543b93bb66502e4826b06218170c57,LL1Analyzer adds EOF to expected tokens set if closure reaches end of start rule.
a70479ad0c41dc8c207604229a6ba165970e1be7,Fix ParserATNSimulator handling of EOF and rule stop states
d33172dce5cf7f41c00f7c3ed772ce2b927f0a60,Simplify Parser.getExpectedTokens and DefaultErrorStrategy.getErrorRecoverySet
ead9258da358b348fc4f3e2dd841391b616371ee,Fix test name
64a5be06752bf5884b3e57d43e23b634e44fe1cc,nongreedy decisions can't be LL(1)
e5c2dfaac40ab569c7a1dfff935ba34e55fd688c,Kill box in tree dialog box makes dialog dispose of itself
61ed3bc01940995031d64768d5ee0b8ef037750c,"Revert ""Simplify Parser.getExpectedTokens and DefaultErrorStrategy.getErrorRecoverySet""

This reverts commit d33172dce5cf7f41c00f7c3ed772ce2b927f0a60."
94c33074be75be2f43bf96bb227f8ae9091fbe40,Avoid unnecessary call to TokenStream.LT
328dedd778a273a845b6719bcdbb10f8992f6abd,change version
669f676c550c52238cefb97560b9a38e5c8bc6d8,Updated NetBeans code style for ANTLR and StringTemplate file types
05fb538304d26f28b26d9794f30dfab5c4c2155a,"Since ASTLabelType=GrammarAST, construct CommonTreeNodeStream with GrammarASTAdaptor to make sure UP/DOWN nodes cannot result in a ClassCastException"
1b08a014d248fdc5bf7ed1179294888f3a852fc1,Update GrammarTreeVisitor to include an ANTLR 4-style listener interface
751b063caeabf8da3999b4c9f14f5826a75d3798,Improved accuracy of implicit label analysis within alternatives
5db5c3393d9c729d1c60340cfab7ad165a300363,TestPositionAdjustingLexer
fdf3a86969bf684c4decff0efb4da37aa94d3b35,Merge branch 'implicit-labels' of https://github.com/sharwell/antlr4
9fe197e5b89c169c9c07c60e4cde8bffd753db55,Fix rule reference should have been to lexerBlock
d66962e860219b2cfb75237eb3c283af6a6071c6,"Make ParseTreeVisitor more extensible, updated documentation"
92ae0f0fa66bf2fb09c094d5a223c42455da8c65,Merge branch 'recognizer-local-state'
3a7a4907aaef6eee440f2169d2283b760b5e0847,Merge branch 'master' into set-interpreter
18f5354d1b956733dabc3225c8dda719ce41291e,Merge branch 'master' into token-stream-bugs
e1c895719206f682d11e386c6ea49520f833c7c6,rm two a.equals(a) bugs
b83a6bbeb0270d443acc8ca73c73aced1279b9a3,Merge branch 'recognizer-local-state' of github.com:sharwell/antlr4
a69ccb3c70fd3a7882566c19de4dc053e71cbf16,Merge branch 'token-stream-bugs' of git://github.com/sharwell/antlr4
ab5c9ede0941447446b81a1d5f9c4555635c90a2,Merge branch 'set-interpreter' of git://github.com/sharwell/antlr4
a438c117345c901d2b2a7b16e4501f0d61eb532e,Merge branch 'visitors' of git://github.com/sharwell/antlr4
40e95ea5e951c6da9f78c57d5c5adae2f269611e,Merge branch 'lexer-block-ref' of git://github.com/sharwell/antlr4
78c75ee5e433a01ac3226d75fa6b0addd11b2340,"add comment showing snippet to fix unit test, allowing SLL to avoid LL with preds."
e366f0082088a7bf616a553041009132d2cd5d61,small improvement in error msg
b1a3370934ca97c5d8627b029b4ba7f117d88a0c,.tokens files goes in output dir like parser file.
5e519d0063c2f1f4cc2340f240358efcf29e6f21,playground tweaks
e86f89724f0cd40ee0799a5b81465c129c5e05e1,added check: action in lexer rules must be last element of outermost alt
9d34d4d3c9353e8423f754e19c4d26ea87245b2a,forgot a case for actions in lexer rules.
8631c143da5b9fe7ebf48f829af10f756da8a4fa,add check for command placement in lexer rules
80b1fa7acb5e2dc0144fa758d87388c95d89f335,properly check for grammar/filename difference
6a345316dffadcfe0cb3e9d357f0adff3c49f706,"if labels, don't allow set collapse for

   a : A # X | B ;"
afe2224881e8bffdb5dc988908519c417b33b8c8,"wasn't checking soon enough for rule redef; now it sets a dead flag in
  AST so no more walking dup.
  error(51): T.g:7:0: rule s redefinition (ignoring); previous at line 3"
fb63c9927ee37eaa7c9ad1f028be8256a7ac30ef,tweak comment
1916ed0626ca9b867a8086384adfe227c04016d3,rm extra newline
0a8e7220f8e351ff893cd65b3de97f933f9bb56d,fixed: undefined rule refs caused exception
468c7912673d82ba3652e1dcb5d18046055c3ff1,"cleanup ErrorType a bit, split an error msg."
3e5a9765997d6ff7d1850d5e0cc74d4f2fb4032f,playground stuff
b214f36044307185a990cf978c5554989d61c27e,"cleanup, rm dead etypes, add check for ids that cause code gen issues; added notion of one-off error"
691532190c12d5062dce6266a2c3a516a8167a14,Extract method ParserATNSimulator.predicateDFAState
aba403405164c49bc7fc56004e2e8c4a266d4d1a,"Evaluate preds in SLL before falling back to full context, avoid full context prediction if unique alternative results"
d2054012f09355ac6bc1c708c359ac85e761e696,"cleanup, rm dead etypes, add check for ids that cause code gen issues; added notion of one-off error"
397f28d12c24aa33d53e3571cced8b0d21701b7a,added check for v3 backward incompatibility: tree grammars
fafc804fdf045a07bc682a149eae3a0d90ec518e,Merge branch 'master' of github.com:parrt/antlr4
ae111eddbdfd926e25b8c60aa23e5144d2c6e2df,"* added check for v3 backward incompatibilities:
** labels in lexer rules"
52d3e7ac718fed03bde921940b8602a0050b1f55,err->warning
38214f63128564fb7470a743cd557a577d483f84,"* added check for v3 backward incompatibilities:
** tokens {A;B;} syntax
** tokens {A='C';} syntax"
405a447ada21b61fbb28cb6355720048ef37be67,warn->err
c5bf2ba0bd102856b31727bceab32543fe9ccac8,"* added check for v3 backward incompatibilities:
** {...}?=> gate semantic predicates"
060343f027cc57315c35bfbdb012d99767e6fe6b,"* added check for v3 backward incompatibilities:
** (...)=> syntactic predicates"
3e91065824a388028d8995d6d723c195e7f2df7c,Detect EOF in lexer rule
44cfedc5e60a28ed95160bbae5d65cfc7b53054e,tweak to compile. strange
133b00aef9cd6a61c8126e66acf66a1d957dfb01,"Revert ""tweak to compile. strange""

This reverts commit 44cfedc5e60a28ed95160bbae5d65cfc7b53054e."
ffbdf8a36c82f324ee5806e763045a57d8791198,tweak to compile. strange
aace1ce399e74e964c57f58522c4a961edd4fa56,"V3 semantic predicate gate (=>) can only appear after a predicate {...}?, not an action {...}"
178df68183d55d86d11b6c4c5daac7c70d00b605,Whitespace can appear between {...}? and => in v3 gated semantic predicates
16ace4b429574f160ca9e515818d1d842ad39a3f,Fix token definitions: tokens in a tokens{...} block now have type TOKEN_REF (was ID before commit 38214f6312)
d6e1ca2b61bb8b72b3f7cc52e68701287cb0f175,Fix NPE when the grammar has no rules
e610f2699871112915e9ce1d4af64c5a99906bea,Fix support for the special token reference `EOF`
7fe48dfebfce30d087181aa90a3cc8bc6d56db43,Remove erroneous lexer command placement error message for rules with more than 1 command
80f7c35a7ce45ec1b698eec4e05b49106a348a74,Merge branch 'fix-several-bugs' of git://github.com/sharwell/antlr4
0742b49c1be497603d01c742b2bec01eea627bb5,Fix USE_OF_BAD_WORD getting reported for elements that never appear in the generated code
fc7977e0d9aa29761ebf69c443513d40cca4a720,rename method
094f40c96194e1d3874434af69c735089b197258,Remove unused field
038d3ad44f330215dbd1c818bf66e1e84d819229,Make sure to check rules in modes while checking for undefined rules
f3ca54d3509dcd0d31ba31ee2245cff0d90f4b58,Separate the EqualityComparator interface from the Set and Map implementations that need it
be3a95e8a767146f840756f702dfe72f5571283b,fix unit test.
7eaccbc7570af648caac8d90167715f64074e816,revert tokens{} ids to id not just TOKEN_REF. semantic error comes later.
670b20a5cb4a8ff8cdcdbf6269a9c682c803aa04,factor out isTokenName.
4e84ae28a22f9ceb6c5e82313fcf886c7b619923,"fix so tokens { A, B } Actually defines them."
d3edfd1c719f79919a27eabdd590603debe841b4,Merge branch 'equalitycomparator' of github.com:sharwell/antlr4
6bf7bf26fd577405bcd7e8c62a040f713fe8f284,rename tokens->tokenStream; make sure left-recur rule translation uses token stream from correct imported file.
3c0883e9c3f2d3ab539321850059d1e14d5e5bb7,fix: actions like @after in imported rules caused inf loop. added unit test.
355eb42898e9254fadeb9b3f9d4bbc32ed8d0336,This misidentified scope lexer/parser: @lexer::members { } @parser::members { }
0696d3a9435efef1a3ec6be93800f8167f2429fc,Fixed POMs so everything builds nicely from the root.
71d27f4c6af7f614d62577b00476446297aadd11,Signed CLA
94803fa9f7fc5d86e396d85ceee404cad1175256,Specify parent POMs
f1ed7ee8688b6dcd418c1df46dc36c3efe76b76f,Specify issue management details in master POM
7226597652096902606974ba9ecab82d4a6670c9,Updated scm url in POM
121044d3b9d5211266edcee3cff2e851121bda04,Remove inherited property from POMs
85f01bcce2d756816109d09b2043063ae9b3dc0d,Updated module display names in POMs
c3ee02401c10f77eab2b5d9a3f0b77c8b6ebfe90,Remove overly verbose comments and an outdated description from POM
ec0863f0f174595925018dc880a378c85319798c,Updated developer roles in POM
867a1ec9a8add92e12db7d01be75ae236c1743f8,Specify url in master POM
cd5192dd1a711d62e6a8691587ad9b8d40dabc1f,Remove inherited and default properties from POMs
a2c5535da1524bb5b2340a36d891cd27d0a64434,Merge branch 'maven' into master
27cb0e401253cd00a759c2e2457c9fcb84acccec,Add IntelliJ project files and folders to .gitignore
6421e312a4b1be848a6e382aad6dc840bd39af08,"Remove the RuleContext.hashCode, equals, conflictsWith, and suffix methods since they produce unexpected behavior for ParserRuleContext and are no longer used for adaptivePredict"
b56f6d858ff906bb379eba68f6e8b3fb499a5993,Exclude the build/ and dist/ folders created by Ant builds
90f4452dc4ee5202e664507228722651bfc40b09,Remove unused method TerminalNodeImpl.isErrorNode
fa5332926bb01bf1006704a7931bcb724be1de46,Don't create action functions for lexer rules with no specified actions
60cf71a56420ced8e61ab9759d20652eab0ad9e5,RuleActionFunction and RuleSempredFunction templates generate private methods
81c4ebbf6f458c80ee32a720d72803c4cedad9cb,Update changes.txt
63690976307ce27b659fe785da0e557812dd1abf,Remove unnecessary dependency on ST4
769e0a418eff3cdfe085565b4e6f80d7695c065a,Updated javadoc
5b4809deb6085ba849d2bba3c2337277a93229ad,Include source and javadoc jars in maven builds
d68f75067d6cd16f05373a9fc6f7c69f25dd412b,Updated library and plugin references
8295d9f90c11c9645b562de936a0d5f45b6a8ed0,Use annotations for plugin registration
348adb5398406d49881c1f6ca25f6144dafe37b9,Fix rawtypes warning
3117a4e9e1e1ad1adcd968d1a4b4f9399f9ce2d7,Generate javadoc and fix warning
8e9619a731a17c148c1a458b444b7ee7d9b2798f,Merge branch 'maven-updates' into master
1bc15c5926676f30cb9a339461eb08138e471c63,Remove unnecessary casts
88dbee6352d1aebf84fe5de76fc7391de37c9d1c,TestSetInline uses bitwise operators for testing blocks of 64 input values at a time
7c5ec45054c21fae6bfb6819f86b98f5ad800fb0,Restrict bitwise comparisons to sets with at least 3 elements (direct equality is cheaper for 1-2 elements)
ad242a0c7a63c853f4f80ee7a722a304c4837565,No need to offset the shift value when the offset is 0
11385f792095d0ea333e887e314a947eea4ee758,Use a zero offset for the first bitset as long as it doesn't force the creation of additional sets
f264609453e9d8f4c4f3ade9880d0bd4c306fbfa,Updated POMs for deploying to sonotype
6e6201a341416034972028d79ab5a1651b34bef2,Build uber-jar of the tool to make it easier to generate code on the command line
75a0551308e4b43d004efffca46c9ee5a07c62b7,"Update POM to include the Implementation-Title, Implementation-Version, and Implementation-Vendor-Id in the MANIFEST.MF"
af76d3294e4138c319e716b1414fedbf86ca6d6c,Configure the maven-source-plugin and maven-javadoc-plugin in the parent POM
8a3298e07513f928889733428a7f730579f8c99a,"Configure the maven-compiler-plugin in the parent POM, including the use of a bootstrap classpath to build a Java 6-compatible jar even when Java 7 is used to build it"
6de457096472a2d9fa066c3f1681a2f62497c16a,Explicitly specify the compile scope
e9c9fe79008ff0c8ad4404b7f57966018975b50e,Merge branch 'maven-updates' into master
8ca298faffa9f669a76eaafa22e9c092b1e4156a,Update changes.txt
5d8d9670df11a27c66266340bacba498019aaa06,Updated .gitignore
c30dc20aa5a8cc2c359576e7b672fab14e6f82ac,Cleaned up documentation and minor tweaks in Antlr4ErrorLog
66bdbb7abdaf8fcd0e7c4f2a5710b514f6cb2f3a,Remove unused options from Tool
f91cb106a9946b3677f34a821e0eeaa2f150b089,"Update copyright, remove options which are no longer relevant to the Tool"
b68779432e10329a544681a74b4d18c385c174e8,Fix exception specification
1bbbf1c0a70d64492beeab63408dcb9a457e32b0,Refactor anonymous class to inner class
b9c7e2075ebd239eb6a9ce5a18f771aad549d9fb,Copyright formatting
c4f4f60d593374d2eadbf1602dad6b87853b1757,Extract method getCommandArguments
924186ad46fed0554b59f1c19e064070e29c8952,"Updated spelling in comments, remove irrelevant comments, updated whitespace"
762fd6f32013dcb7c8532e2d68f21b8204cc36c3,Move source directory existence check earlier
f22bc338370bf642301b406043a5736f5df361f8,Improved use of generics
e537351840dbaa51fb2aca18067db0f30d0df846,Reorder call sequence
124f5eb30da63e05066596284eee828e884569ff,Remove unnecessary calls to isDebugEnabled and isInfoEnabled
9be06f92e7592466c4f499559dc6527394c4d022,Use isDirectory() instead of exists()
3664f18ff42a7e56207365e72e0a4a09d0f121ab,Initialize exceptions with better message and set the inner exception
7b321f80cb5b07b0235e4235ffdbd2e894c31397,Remove the message format option (eventually it should just use one that works with Maven)
ed8f980368dd8804cc336cf21dca93445aeebd30,Updated comments
5ed1a6aebf84d7ff1abd59423c2dcae02996e028,Mark verbose_dfa and force_atn with @Parameter
37e67f4224690a34553756de32b8b2a3e810426c,Support the -listener and -visitor options
41361b65e3d413957b8ad1bce7528860622f044a,Rename the force_atn parameter to forceATN
3fa5af33e2f351afe377ee6a2dcbd7e7519179c1,Updated comments
5711ca4dbf7366661dd57510486854e6f7f1fc79,Set the -package flag according to source grammar file locations within the directory structure
6b3bfdd9d8f249ec2b7257505d3bfcde6f8d08c9,"Remove unused parameter, and @NotNull annotation"
747e65a92cd0dbafc34eb8edd9fd6a586c7c5bc4,Add the encoding and treatWarningsAsErrors parameters
52498a75f2f1b1c8b12663a3b16e78e60722344c,Specify property names to make it easier to override options passed to ANTLR
a3e3cf21cb42e207cc6cd59599fd582e65650ca2,Support the -Doption=value syntax for overriding grammar options
f08b3ed9e528ab7f16505c8073d7fdb3b34cac16,Reduce log message verbosity
ec31c1bd68754d3bf776dcb55e475a10df6c0993,Support specifying arbitrary command line arguments
15a06eef078de704ac9847fab41eba63e255d47d,Merge branch 'antlr4-maven-plugin' into master
7049972ab7f6bb839e1ebd53954a966662d9c4ae,escape [\r\n\t] in lexical error messages. Fixes antlr/antlr4#75
fc79752748e6b89969f74de80110f9c9ad79be01,Merge branch 'master' of github.com:antlr/antlr4
6d6389eef28559abc07c19c1c7be13fe6fc55875,"added error for bad sets in lexer. some tests in TestSets appeared to allow ~('a'|B) but it was randomly working. ('a'|B) works without the ~, though doesn't collapse to a set. fixes antlr/antlr4#70"
84c34d23916f46a6d89f0699f78ecd7428201cdb,make code slightly more obvious.
35202df715180fd70add7bcd5c1deaa930330d6c,"label+='foo' wasn't generating good code. It was generating token type as variable name. Now, I gen ""s<ttype>"" for implicit labels on string literals. Augmented unit test. Fixes antlr/antlr4#90"
9e3907d573fdf36751b02ce06d80b32ec0bd6498,tokens now have token and char source to draw from. fix and close antlr/antlr4#88
346da8b863b88f9f8c30c73c78239922a53fc230,remove -Xsave-lexer option; log file as implicit lexer AST. Fixes antlr/antlr4#82
84306fa3856eeb030994b011d2904b11e8ceedc7,Remove -Xverbose-dfa option. Fixes antlr/antlr4#92
21ed483b9e7ba4ae9fd876521ab215b56b942515,"The ""-Xverbose-dfa"" option was removed from the tool"
cda9afdf555eba100d2a35112de78f416a372f7c,update license everywhere.
2c871250f40f7b2a4eda3ee4b4078b5f3a093973,Merge branch 'master' of github.com:antlr/antlr4
f14cce653904adad2e3e551b17eafc1830418370,reset in prep for 4.0 release
38739cec5e18a3f9cab9a408b3d9f8fa8c01029e,Fix handling of grammars in the default package (resolves antlr/antlr4#94)
380d3daddeb708d83a27fe70154d0155c777a5fb,"Create a ParseTreeVisitor interface, rename current abstract base class to AbstractParseTreeVisitor"
9d47ac716998d1f8e0d057450596659a655b9e67,"Shaded output file is antlr4-4.0-complete.jar, includes all files from v4 runtime"
b2ab7ab5ac318b8805a6915c53f5794fb31b7664,Rename master artifact to antlr4-master
db32c80265c713fd733942be893d13022d31c4b5,Fix bootstrap classpath references
3946c05eec4826583e9bff3f653c38aae485b870,Update dependencies now that ANTLR 3.5 RC 1 and ST 4.0.7 RC 1 are synced with Maven Central
ee8344703b32b6902714e49b697a068c1556ecdf,Fix inconsistency in elementOption syntax in tree grammars
064501967e9b4480c68214da21dcbb151f9c2267,Construct GrammarASTAdaptor with CharStream from lexer
886baaf7732e765fb150f7a1c7f2547b5d78f810,"Use separate lists in the serialized ATN for non-greedy states (cleaner, allows ATNs with twice as many states), resolves antlr/antlr4#96"
64a411485079e8d3771a6f98a88ea8bac41fe438,Make debug fields compile-time constants to improve release runtime performance
90020850eaf76faacaa4df55984671b27d5b4853,Only show warnings and errors from maven-javadoc-plugin
9d3c7634705292b776f340adee246253ee999a3b,"Add ATNSimulator.SERIALIZED_VERSION, resolved antlr/antlr4#95"
97f23097d09f43b2bdbabe04fab79ee6942e1fa0,Allow elementOptions on rule references
0f69799b087032c9cc9e09a34b9cd18861590fe3,Rerun semantic checks on rule produced by LR transform
c44ae39ae5ba3e8f8aee77c747ce968542ba5afa,Evaluate precedence predicates using a special PrecedencePredicateTransition
c556b821f6392f617bb397049ffbf66c683093e9,Add boolean RuleStartState.isPrecedenceRule
8df31df66c3fcb61231d3b8fa7d5a6a8b7bc4cbb,Add int RuleTransition.precedence
356b8e4b273873496f7775b084bb7302457f7a54,"Updated parameter types of copy constructors, return types of dupNode"
38b5a8321bac395f2635e0f60d07c218cdbaf8bc,Remove reference to tree parsers
26f16bed739a1242c50d6c133bc02704a886ec7a,Updated documentation
0e91700678c17d769ad198edacdfed710cb1e3ea,Stronger argument checks for ATN state and transition factory methods
4a442562e6734e4652f0973a65eb9aeefad49978,Allow specifying the bootclasspath by the bootclasspath.java5 and bootclasspath.java6 variables
934bea8b1259dde7ed732283f4c599b4ddb302f3,Add -long-messages option; only show exceptions with errors when set
fc3bb61d2df04d48ecd9b1c951c18cb00cc31bb0,"""warning treated as error"" is a one-off error"
a50c8d9088c999c90da7527895583770a3841496,"Listen for issues reported by StringTemplate, report them as warnings"
f418ae66108f3540278bb4e5031ce1e6d5dd9d40,Fix template issues
70360a4ce8463da696ff00e456f5bfbe54a04c3a,GrammarASTWithOptions.getOptions never returns null
1411a561ab2f1306085d4ce341364a1636ca17f2,Use EnumSet instead of HashSet
b822070790d7978faaefd79ec226f5d1385ebd35,Use new STGroup.GROUP_FILE_EXTENSION value
e5e4402ea9cf2901d34539991d079e1ea7baef45,Merge remote branch 'sharwell/array-opt' with master
9b75ea79f91137789a94d3f6662dd89372550a93,Automatically reduce SemanticContext.AND/SemanticContext.OR with a single operand to the operand itself
f7d0cacb09e9051af3f39f8f4c7be5f566665486,Update changes.txt
c0668a9caea5953d81ffa3d8969c7fca26d61c2d,Merge remote-tracking branch 'antlr/master' into precedence-predicates
05b0f645ef1359d787df472036b7068314da535a,Reduce and/or operations on multiple precedence predicates to a single predicate
6aef4ef1eb9478349387efb1acb603b93f7b2d66,Introduce local variables in TestPerformance
e48d87d6a8223ea84724ed7c4c0ed51f7ee2165e,"In TestPerformance, REUSE_LEXER and REUSE_PARSER default to false since it's an easier case to work with and overhead is minimal now that the DFA is shared between instances"
129e403f4a7023a864476b1748f830e584ed6140,Updated comments in TestPerformance
51dadaf7e8e4cec31ffdf3c7d06ae06b06230649,"Updated TestPerformance output (platform-specific newlines, simplified source name formatting)"
ac55cf39907cb0ca2535446c018a395967624f18,Add missing generic type arguments
227214765dfdacc67a4642b6430cf9e558a2aded,Cleaner initialization of predefined sets and maps
9d0ba56cbd3e70e45d88df234172a675e08b8bef,Build against the latest ANTLR 3.5-SNAPSHOT
ed40c1aad17ee423e8f2855d49092896f348c5dc,Remove redundant casts
0504334d0888c600fc5a2bde67191bcde87a5113,Add missing @Override annotations
2582d330852e183de9bba74d42c682eb01ddda44,"Add @SuppressWarnings(""fallthrough"") to method with intentional fallthrough"
1274e819fe1e4cad4a6da18ab87af80e122e88ce,Fix remaining minor issues with use of generics in Tool
c009c5081d52362ddb3b5bf20e10eed2e5dc9041,Add AbstractConfigHashSet to consolidate default constructor parameters
c99703e1509439be5aeb9db6835b75278fee23da,Remove call to hashCode that was slowing down equals
076a2dcbb90cc5c909b17af33ec865efa5cba6d6,Remove expensive method that's no longer needed
5d238a22c706af4850015eeb3409a707af93cc9a,equals should check the argument type before attempting a cast
36800289a210ee61318cdbdff845fa6882056fd3,Rename absorb to getOrAdd
f77cf59dbf1c1ac22ada00388b2b58fe891002c5,Add Array2DHashSet.createBucket (returns T[]) and createBuckets (returns T[][])
e259cea4261b90389d03602bdfb83f2a2da2e3bc,Array2DHashSet.toArray returns T[]
b2c119002c6f6de2b6be95dbbf31ec3e646feb6a,Extract anonymous class to SetIterator inner class
fd62c583da13e087e83ea17125dd378b3c5aaf91,ATNConfigSet.toArray returns ATNConfig[]
c654c1b4284d3b1ec0d50e96466f0ee5e61899f4,Improved generics usage in Array2DHashSet
c157801296c95a7f153af5f5295f8534c8174e44,Add Array2DHashSet.asElementType for casts from Object to T
83483a7a49733499c4da10f38ed3b56045316b36,Add containsFast and removeFast to avoid a type check when you already have an instance of T
431cdbeb45fd6627cfa3d21184b210f61e0922f1,Call containsFast directly to avoid an IDE warning about calling contains with an unexpected object type
4e1473a6f05a2f4b89aa1228d44c1b73471f015c,"Mark some methods final, remove unnecessary check for null"
01893f967887adb3322ba2463da60f785d524df8,Make sure to set last bucket to null after remove or you could have a memory leak
e37f5d2c20bf19a37b80e03651dfbfd89b8a7224,Need to resize array if the one provided doesn't have enough room
0b71671cda259870b007e0f4ddbc179a44622c8d,Optimized Array2DHashSet.expand
aea4c89c041852221360ba775d37c482740dddb9,Update documentation and comments
9a8d0f06f7a35b9494c36f25a0cd961db6f88576,Implement Array2DHashSet.retainAll and Array2DHashSet.removeAll
225cd78d50cfe700c2921953dd6eb6c713babbb2,Update code formatting for easier debugging
bca2589be1dfbc9ed5c3ca7c90316ae4da9cb2a7,Merge branch 'hashset-updates' into master
99e4438256ad081a5149e68f8e47b9e375ab5062,Use a TestWatcher to properly clean up after successful tests
842d449be37691a9a3f15c0efc3679308419e555,Updated .gitignore to better accomodate projects which may exist in other branches
54c9382ce15b8bf95932bd4adc380fb0e8a71c97,Reference the latest RC-2 releases of ANTLR 3 and ST 4
24052196680519bc60d217c5633c5c5aca7db380,Encapsulate several fields in ANTLRMessage
95335a87990bc7f19942b7e88292ebb27be376ab,Unit test tweaks
d7bf34d4f4e342ee502d31daecc2fd38af15819a,Remove ErrorType.INVALID
9865d03347e3ca1b8905ee0140c336bb1bd1d480,Tweak comments and messages in ErrorType
116c58bec6a921d165b33a06c0bb879bf44f5252,Show all warnings and errors for V3 compatibility issues so the user has a list of all the items to fix
09d6ae5d8d02f0ffbfff2de75070f6170ec66fbc,Update CHANGES.txt
9ec75650e3c8b0ae0bf6463298be6a303a8ea293,Optimize ATNState.getStateType
a64cdc8e2d348fedcccb8aeec0e4ad31506fe348,Make sure reportAttemptingFullContext occurs with input index at the expected location
4832425848c5aa3a68c46955cfd9c03d9990aaa2,Update BufferedTokenStream implementation to match IntStream interface: consume throws IllegalStateException if LA(1)==EOF
068075f1c417b154c5cf5b8b030ad6807f4a8fa1,Fix usage of BufferedTokenStream: cannot consume EOF
29be5523fffbbbf6e74f203feedbf276ec1c898e,Update documentation
50822b6ca5ac2813baea383b80ed319683b71527,Updated NetBeans configuration
3b82dd9e2428198036d9ad1cb720bdf2c876ddf3,inspect and save work with a list of rule names (no need to pass the Parser instance)
62531d2ea1a0aaf1600423620f79a0f094362645,RuleContext.inspect returns Future<JDialog> to provide the created dialog
6a5f609797f33bdd2e629d4df8a621927e1736be,Add Utils.waitForClose
f3f8b425c34f7eded8a4272e41e4fb377b02cdfc,Reference IntStream.EOF directly
1894017eb7e5565bf72900703a42759bcefb5d4f,Switch on result of getStateType
b7e5cbd7f586936e255605f7c7da58e0d3950354,Use Arrays.copyOf
e6d1c7f257d560929243040e28e93d5bccb5587d,Add Eclipse project files to .gitignore
dc3279cf23c54f207cccd749a9b92ccad6b4f69c,assertNotEquals wasn't found (I upgraded to junit 4.10 too). weird.
36c3b2341c034ac253c7e361939ae1bbdc8f1026,add unit test for case when SLL needs to see EOF
73e2a31d36dca37137bb2ecdd813b2cd244d9f50,Call visitChildren by default
29fd6a0c160143c57b0f7a43ef8191bc7d53af8d,improved javadoc output
84189cc81a14f64eacc0a751d661605209bdc285,Merge branch 'master' of github.com:antlr/antlr4
f43166bb456de40f33d5a89f6f7d361635e1ea35,pull version from manifest file or use 4.x.
c93970207eb1f285bc571deba14c5206f37c4896,gen grammar name and antlr version into gen'd files
7811ad9e49510f5ebe0ac1c474251de502be08f6,Also copy command line options to lexer in combined grammars
5d390b4a9071eb73af05952e67a5e09c4da35f5d,Need to shutdown the ExecutorService or the application will stay open
53e6efabc699eb82fcfa21db4941dc3da8feba43,"I altered Target.getTargetStringLiteralFromANTLRStringLiteral() so that it converts \uXXXX in an ANTLR string to \\uXXXX, thus, avoiding Java's conversion to a single character before compilation."
bd46ac1c3ffccbae4f72d4eaca9b64516ddab9b6,"I altered Target.getTargetStringLiteralFromANTLRStringLiteral() so that it converts \uXXXX in an ANTLR string to \uXXXX, thus, avoiding Java's conversion to a single character before compilation. Fixes antlr/antlr#111"
a64187e641b65e0e3e1bee7e8a3bef3829af9ad6,Merge branch 'master' of github.com:parrt/antlr4
82dc6f7714d6a6dab97179a8da4053fb40962492,"update README, date on license."
b6a824ddd5c9a75226de8f7a48089a5ed8951b96,No need to override method - bug was fixed in V3 runtime
26d267ca38b8ad7e959378da4c5d20e7a9b1027d,Add the -XdbgSTWait command line option to block the tool execution until the STViz inspection dialog is closed
c462547ff3b18681c436a268bbaa72cbb46f1694,Support the -XdbgST and -XdbgSTWait options in TestPerformance
112810db28be1ea7d8956ceb71f781bccfd8bebc,Documentation updates
8839d6b1852d473c3d440354cff55e888b8ea30b,Remove unused/commented methods
673dce5664f4bedab82535ae29da0dc09b7fcd47,Add private constructor for Trees
131c26edc0d7644ab741a6d78501c328d68d4eef,Add @NotNull annotation
d9a95948ff3cfb30625bb988204ca7ab1667b248,Updated CHANGES.txt
274d566be621606df40ec2df649b86017dcd893e,TestPerformance.DEBUG_TEMPLATES should default to false
8c92df27c64e6830a5f91755e8548e2685bb8cab,Fix javadoc issues
e3383ecb612d21ddbcf8399bc228b9b5e5d6a799,Add unit test for start rule without EOF
2080be8a1457fd8db4eca8ffdfc16322c2e91f35,Cannot call IntStream.consume after EOF is reached
61b872377c5a5d9b76ce715aa94f300d96cf3e17,Add timeout to unit test due to highlight non-termination of prediction algorithm without resorting to @Ignore
b34ad624bce85425debb4f68ea6d7f5989359f2b,No need to continue SLL prediction if every configuration is at a RuleStopState
4040dc0d6d9c032e6c36c89757ef5474a4386721,"After consuming EOF, only configurations in a RuleStopState are viable"
922fe53bdd29c61a0a9898de08a6f16d86a99191,Ignore testStartRuleWithoutEOF until we decide on the desired behavior
fbfa61c3dd71791fc816b5b1752daeb19d2a9a56,Remove tree parser reference
a5e0c47be5124d92d560278ca592aa4215062616,Formatting: no space after cast
21ac9a3ebe7db44190ad103204913df9d57f88aa,"ATNSimulator.stateFactory sets the ruleIndex (required), not the stateNumber (it's overwritten in ATN.addState)"
6a9a6f7e50ccf4e70850e32ae5eb7e432ddac485,Extract checkCondition helper method
0b7a0a4c4b0e53dac01f0dc30fcf36424e785c46,Add several additional checks to verifyATN
43c5dd0a6759008e5e3620cbcc192befc3222696,Handle potential null value
1f4f8507654961f6b38160e66977913f7ca735de,Remove unnecessary null checks
51437b7eed77be57f6e5d9d08114c8a7753dc3cb,Fix handling of rule stop states in full context mode
4754ef993a84d746b11fd58dec9e424aace5246c,Simplify similar code paths
9b5417c54ada0934a1b2d1b85f513406e0a9a9bf,Update CHANGES.txt
6c23a9604647077c4eb63eab121900f3ece254c5,Always update ATNConfigSet.hasSemanticContext and ATNConfigSet.dipsIntoOuterContext when adding configurations to the set; remove unnecessary manual updates
90c234895acbb437c14a175079e5968d2614041f,Added javadocs for recently added methods
2b2114c3ae6490c6bd96fa566bc2a1c2c4c0132a,"Javadoc formatting, clarification, and links"
4010c599ba0813d41f6fc9a4e513306d8cad2b84,Clarify the impact of configurations in rule stop states on the parser prediction termination algorithm
98d2ba8fb5e1f6a67704c4dc2b1d5e4aac0145ca,Correct link to GitHub issue for unit test documentation
d95cdab065c2e56227e5efb17f1efbd4361c01fd,Updated documentation in PredictionMode
d54b557cc2dc02a114521f139ac88cd88b4659d2,tweak lib
78124081f1cc142aa34f1d6b257c87cc92d9c24b,Also ignore profile-specific nbactions-*.xml
0ee0de1e06b90152f3098ff1b04c04e843e690b9,Maven builds run unit tests in-process by default
fb865cec3b30ee770c4b480cbef229f58f2fb64c,"Maven builds: if mvn is not run with -Psonatype-oss-release, then 1) javadocs are not generated, 2) source jar is not generated, 3) artifacts are not signed, 4) shaded (complete) jar is not generated. Development cycle install ~4:1 faster, clean+install ~2:1 faster"
af74df88eedbc68bf25104612f5fb38cf37fafec,Ant build.xml: remove irrelevant comments
4cf2bb2bba7bf6d41847ab3ba41a7954ce635225,Ant build.xml: pass -Xlint -Xlint:-serial to javac
dac6355b45fc98aa1e81487da0b7153659b28235,Ant build.xml: build fails if grammar compilation fails
1f415378262752fd126faee9afc89a28a731034d,Ant build.xml: Generate grammars in a separate intermediate build output folder
ed648758a08f0aece1abbae41b7f63494ed3f6c9,Ant build.xml: Include generated grammars in source zip for debugging purposes
6e9129848eb9df5b015e07b8a84257295585c966,Ant build.xml: Faster build if we don't fork the ANTLR task
57295785d536f467a4721d3255d526198d74c36c,Ant build.xml: Improve build performance avoiding an unnecessary directory copy
93f7a448e77edfb3dfe8f2c455057527acca932b,Add graphs describing ATNState relations
f59a08c1722229de4f53ff2d86af01c09fd75ab3,"Maven build: reference jUnit 4.10, ANTLR 3.5 final, ST 4.0.7 final"
d1ba09f1f721b22955c5e8fd3cb737a33752988e,Clarify number of allowed transitions leaving a state
f1b6e93a0441a1d056ba6247c03277f87b089b73,"Revert ""Ant build.xml: Faster build if we don't fork the ANTLR task""

This reverts commit 6e9129848eb9df5b015e07b8a84257295585c966."
0cced01ab383e43518fe9cdea57b52cf0a2f9249,"Ant build.xml: look for ANTLR 3 library in lib folder, download from antlr.org if missing. Remove unnecessary build.properties."
f2ae1ef20495b679d5d13ac9282197a4cf05c68f,Ant build.xml: allow user settings in user.build.properties
dfb214307711b940771afb41fe5d094ed4f4c128,Ant build.xml: rename antlr3.gen.dir property to build.antlr3.dir
4d3da8711909180465a606aa351e8cb02fa52733,"Ant build.xml: Move mkdir task to antlr3 target, where the grammars are actually compiled"
01bc4f1ab776bc587f3eb4105640e7480220ee36,Ant build.xml: use macro to simplify multiple calls to the tool
567baefa628a3392a08359ba62192681cbfef5f8,"Ant build.xml: improved up-to-date checks, remove need to pass ""-make"" to the ANTLR 3 tool"
8d13e3c47ea4d90ba3c541b14ce9b51ee420f544,Ant build.xml: Tweak build message
19f861ee8117826f09d2a2d2f69246582e14bea9,Added error message 135: cannot assign a value to list label: $label
899d15aa5a5238622c228d5a2f2014cac4bafd25,Handle null scope
6b3d102ba1ab774bbe44b5e98061504a96a1c852,Also check rule list labels
723637fc59af11282cca43c883a3c5f96bf369f9,Update CHANGES.txt
f19059d6b5828107f07f77595b122e4fa8e89556,Calculate font metrics from the system
3bfd7c37708a33d6cc5a4c5ce840efe8d3411c45,Add map from Java's logical fonts to postscript font names
260115fa2363c12dd24f6c48b4652865c4c4a6e2,The ARG_ACTION token for a rule's locals is always an ActionAST
0496cff25630ed58298df8b94564b50938f20ff3,Add field Attribute.token to hold a pseudo-token with specific location information for the attribute; track this position in ScopeParser
47dcd4881cb601fe7cdcbf44149ae3a2437131bc,Report conflicting argument error at specific location in input
40a40e0feefb27b23bf461bab53e72cb816999eb,"Add detailed errors for the various types of conflicts between names of rules, tokens, parameters, return values, locals, and labels"
538f66a1943803ab93b3481b69a03d71fc566d7f,Documentation and cleanup in AttributeDict
ed9f52702e969697c8d35e9284803cb9c06debb9,Use separate error messages for multi-character literals (always illegal) and rule references (not yet supported) in lexer sets
b5650404e00e249d1e305e8b1ce5e1ac12526e4b,Error message cleanup
ce279de429580667a2ee79485f443ad98fb417d4,Updated CHANGES.txt
7ae67de110b6e8744563794aaa5e187f2c9aace4,Reduce size of _serializedATN by adding 2 to each element: new representation avoids embedded values 0 and 0xFFFF which are common and have multi-byte representations in Java's modified UTF-8
d79bc252bc40e181276d8ed6b20d93ce7e91d903,"TestRig uses instance fields instead of static fields, allows reuse from other applications"
c51bdc2fc9b80580a68127f20e3062137ea61cbc,Add missing listener interface methods to GrammarTreeVisitor
9f82e114313c2d9d3a6db8988bf36551edeecf4d,Remove unused field
c1f831aed1625d1c505839697b0c9ad93c92d50d,"Parser allows empty options{} block, empty element options, modes with no rules, and empty lexer alternatives"
9edec910226e53616f563092f9543481ec8c9b59,Add error 145: lexer mode must contain at least one non-fragment rule
3521a00dbbe2f79b80f917bb8fe5e90870e3f497,Add error 146: non-fragment lexer rule can match the empty string
f43064a31ee2da8b207ab2a4d7a0b1401270cf97,Update CHANGES.txt
48c1a8d43354a2dab4426beb0477a4bea70791a2,Forgot to update GrammarTreeVisitor to support modes with no rules
df7fb3de2f58151766e3148f443a26fe8db580d6,Call grammarError instead of toolError to provide proper error location
758e2422f50a9d169c30cb615d55e13a0f5e06f5,"Updated error message, updated TestAttributeChecks"
98c29943e5dd1aba81b692972dd4c2496ac85c5b,Make TokenVocabParser fields `protected final`
d3a76ebcb1c6c95ed7e8141f84eb801d82ee5d70,Update CHANGES.txt
0a6d1bff7ebf4da76f73203fd040f2e015c5b98e,Fix invalid escape sequences generated for literals containing backslashes
5d489ccbbe883afdf8d681cbc8d3b97c4fd42d53,Update documentation
db51cb38ed88f7321fbeaee769d57d82ab316b1b,Update CHANGES.txt
425df2c5957ef552183c15057ff61c60fbc3a112,"Ensure the token stream is always properly set for Grammar, GrammarRootAST, and LeftRecursiveRuleAnalyzer"
8e32d7b695fc26b81833c18a4d70e73a1da1f5e3,Clean up imports
9ccdca49bb674ba324b09e74b40c0540147003aa,Add error 147: left recursive rule 'a' must contain an alternative which is not left recursive; fixes antlr/antlr4#140
a972a4dc24d3fce5e93514f8a577c85402d0d421,Add error 148: left recursive rule 'a' contains a left recursive alternative which can be followed by the empty string
f37d99bc92a4eb533d3c2f0eec314c62be246ab1,Updated error messages and documentation
9c44939f6a369085e99106f175382df6e0f241ff,tweak for 4.0 release
21a97e4eade6285c65b64a3fe6dd289498a21026,tweak
e5bdcccfc71f43dcca6ead811b836f301bdf5866,Updated Mojo name (antlr4) and default phase (generate-sources)
087dea5e39693d7fef63a036321c437de0addcab,Use project source encoding setting by default
8e738dad523388439fab49d3e831a75e74c19526,Do not require explicit setting of source and output directories
502f0802fac17f8ffd700a56b118fed08910e619,Updated Mojo documentation
fc9a0fe96b81e68f845b183f2795f8c4dcb6b777,"Set inceptionYear, organization, and mailingLists; fix scm url"
2e693dc1695659ec3960edb478e1cb91ce6f02b7,"Fix url, specify reporting plugins"
0054cc020a30c11eba5197ffb518412377da13cb,Prediction context documentation including graphs
b956a9eda16009f390119de4a90226dc544d507e,Fix incorrect HTML excape in Javadoc code tag
019cba7c4634f52329fe9006c0141098f1a9f76b,"Remove unused ""true"" and ""false"" templates"
29495c4a04db67e25a3aaf4a6476dc49168e5ad2,Use hard tab in code generation template
678927617ec21fb7f38f7e69587d30a240b10006,Update CHANGES.txt
625c504f363a6390ba28d673ed5edcc11fcf39fe,"Merge pull request #144 from sharwell/maven-and-javadoc-updates

Maven and javadoc updates"
79551fd1e000ef680260db2812830fd3e4b05c82,Fix Maven goal references
6218e7a0533b34ae1b706f8f5b6a0d00292eefd3,Use a template to fill in the correct version reference
ad9bac95199736c270940c4037b7ee7174bacca6,Fix diagrams for ATNState documentation
e1cce614004220fb02246e65085b6cd00c400f8c,Development line is now 4.0.1
027ebed0af108e5a98bc6fbda915f1a8f150981b,"Update README.txt

Removed spaces from the grun alias so copy and paste people will not get an error."
2bde37a8f6263b7d121a7e254a35457d2b0e6070,"Merge pull request #149 from abrown28/master

Removed extraneous spaces from the alias grun command"
ee0dc0542a76b4ea287cbd1664a407acfa23825c,don't call process() if args aren't specified
b2d2ee348aada78cf7622b40aaea5fe0050d9c32,added Dave Parfitt to contributors.txt
59f7467d688287c0070cdd78d6b3b51f7f7ceee9,"Merge pull request #151 from metadave/dip_check_args

don't call process() if args aren't specified"
aae042c6db2a236e58b499b4106a792940b9595c,Additional IntervalSet unit test (catches underlying cause of #153)
adf80e166a5786ea53c190070d0fa9a5f2ae8c5b,Fix IntervalSet.add when multiple merges are required
cfb074567debe41d46c282ab70061bd2e1bc8461,Add initial .gitignore
3b525e203bbfa2a6e799200c8127f24176ff04ab,Add empty Visual Studio solution
77d1684cffd687e288a60f2b1088a3c763512201,Add ANTLR 4 reference repository as a submodule
3458a6089709715011327c123c3481d326ccd76b,Add Sharpen reference as submodule
b264226b61b13663b54b285355799cd0ed7a11c8,Initial sharpen conversion settings
9f901efdfccb6252f4e14499ad672ea2741264c3,Add some ANTLR 4 specific mappings
598ef3d86ddbff8c92f719d8d05b37fbc21473ca,Updated reference build of ANTLR
a51e84ca63523b0184cc7ecd5b78890b2930340b,Add empty project for the Antlr4.Runtime assembly
1413e6d72c49d6f481ef836e1e59f29e3618c0dc,Add initial translation
457d6e0aa4fa8ebaf1e70e6d149485b3134aaa9b,Updated ANTLR 4 reference revision
fdec53d82dd95e677653c03e2d371ba90c34a261,Updated type mappings for interfaces
6674e9c4c71993eb193bf6a1802b294b329fd36d,Native interface names; generic type parameter count in file names
d21e39305996a02ef7aa5d1cb5efe983df89fd4c,Regenerate code after ignoring several more types and methods
8007bf40123cf4a5aa2c88cbf97fc6340fddd5aa,Fix case of file names in project
8ab7c204116b028e276833386c1a8e6e5c963a19,Generate several properties in place of methods
12d092143fce332ed42658af869f205c28400b75,Map IndexOutOfRangeException to ArgumentOutOfRangeException
3d9c3908b8ed911f8c436821dfa186dc5d626e93,Use spaces instead of tabs
9735d882745b284ef3aa06de9b8a00c34c713b06,Ignore files generated by the sharpen process
1042228e26d18319e481900cc2329a16f777716c,Merge branch 'sharpen'
3ba462d403b00ab77ee2f9574a9780cfe98541fa,Add NotNullAttribute and NullableAttribute
8d4c3252f5ae27684633eb4d3175aa95624f8fdf,Add Runtime.Substring and Arrays.CopyOf
3c6ad91028cd2045a2c0b4c55570fa92c617d251,Add missing using for (for attributes)
ebc00e807c6a9b577a4cd7142fbfb340fc575008,Updated ParseCanceledException constructors
f8c643304ba758b987cfde10172cb69e6c2ecb01,Add type mappings for BitSet; update mapping for BigInteger to use System.Numerics.BigInteger
21ad947f427480f7c3d36dc99483328f2d61ea0a,Merge branch 'sharpen'
73bce570b2f1bd407ac0acab184736937eff2564,Don't compile TestRig or the rule dependency analysis code for now (it will require substantial work)
ad90e54b6776093bac9759b92cd95d285954c071,Must explicitly implement property
c598dcd941c9d81d224a77427904d07f4b2941e1,Use Interlocked methods instead of AtomicInteger
4e7cd5495464a37c3fdc88f766fc1faffe7c63d4,Map IntegerList to List<int>
45ab2eb70ab9f455c120da783114c002dee5df65,Ignore GUI-related methods
5bee542d79a12aaedf92f5163c600e0dd5330a17,Merge branch 'sharpen'
393cdb5c3126b2bb88a3f572714e54f83bbf7529,Move constants from Lexer to TokenTypes
e4139444bd2a431365886089610917867b50e951,Fix static initializer
0572a1cd9db7c86809fc2bd51795614852db405e,Improved support for enums
a47fde57b2ee27e4c8cfe04d433ad756ae6208db,Fix type mapping for Comparator
0b10ff1113e2aeda0d3d22c72d8f902c13979a2f,Merge branch 'sharpen'
bfbcc2816cfeb66a84f5c1537f4a17b6ac876453,Add Arrays.AsList
e0044cc4ddf2be6446691afd9634b1e4f2676c68,Add the StateType and TransitionType enumerations; more properties
d676aa8c4c7d51a213aa447c0d67562f57d740c4,Updated mappings
efe28ed6fc0bb1c2574c88bc8517f0250812c572,Merge branch 'sharpen'
253bedd0eed85f2266a8a50ba71907dfd7195a39,Fix generics for IParseTreeVisitor
3d34aec0c5f86fd0554c10565ce0f619706123b9,Fix collection usage
73b121bc3beb06f52605345c979a0c59fc9202b9,Handle usage of null in generic types
090c9c2bda163f929bccaa00d2f8c7a79804c935,Fix base type of RecognitionException
366da4e5d50000a38af04fad34231ac600f306d5,Updated sharpen property annotations
c0bf9211f8c351132d449e6f40e468c5d02a81ac,Merge branch 'sharpen'
d15fb3f991113ebac204372d95f044901b25b882,Small fixes
9f329cb2909d90ec264770d9df8b7719c8e8d6af,Updated mappings for IntegerStack
9c3ec592b6ffb4e8ec92cf73fcc2cd10c3b96188,Updated mapping for EmptyStackException
759442988c65eaf912cc95259adb0e7045a6e7d0,Merge branch 'sharpen'
b4d7b13755e68c9cb4c797163fc655f32b587109,Collection members update
5641748b624408c32439119b33ee7c9d62d34091,Ignore certain files for now
8ddfed3dd5f1fa9ccc14834502923e9350358ea9,Improved method mapping for String.compareTo(String)
87d27b7c0212991322a01636530770e1770f5309,Updated mapping for EqualityComparator and AbstractEqualityComparator
7638659e081ef71924d2023445814f4e8fccd12e,Merge branch 'sharpen'
11e21868056df68511d24c6b183d04d1cf91bcf3,Updated properties
ef09ec888532a091a6f1531349ceb5a4b40e1fd5,Fix generic Comparable mapping
41fb2cea3c01588487618dd09b56478cd71b70e2,Merge branch 'sharpen'
226c3e7fbaea441dfe4c6907625bdf73d3322720,Add instead of AddItem
80a8cdd773176da8263bd66312346574dd53b124,Indexer instead of Put
1632053432b03ed9158f0d3cad380e67e8c2dd16,Replace instead of ReplaceAll
633cfb6d23c027d8f53ecd324835f8fd9cce51f3,Indexer instead of Set
9aabe06a6bdef07b96ca9be764b7a21e89a8cfdf,Fix usage of ConcurrentDictionary
6d1267a88329bafd2d2e6c50bcc6a08fc1b612db,Cannot assign a value to foreach iteration variable in C#
1f5978398e51a9c3e37b5bd6e91278962a5fcb05,Fix generic types
40994e34deacc1b00d30cfdeff84c2ec19341796,Insert instead of Add
7dd7ad030fa3f65530846471efb90b3b8cde4ed6,Use ToString on primitives
81efb247be532238025c466e10090b74b0df6c8e,Fix generic types
8dbdc2b3c08892f51611e94f4a63764c2927deb0,No need to wrap IOException in C#
f0ef7a5a2893e7d1d80edf2702f7cc3a364c5c51,Updated sharpen annotations
4ff079112077c159c7a5b4d26abaf3c7ae309d70,Use Dictionary instead of FlexibleHashMap
fb5c7655eaf70c504ce2f8b34b8b12ded549e3c8,Updated mappings for InputStream and InputStreamReader
a960ca940ec194235d641e9d1e530f59177716aa,Fix generation of calls to List.remove(int) which should become RemoveAt
11a2a5c2775889636825d5324b4ec784c540f62e,Merge branch 'sharpen'
ba0e345fcc2b71f5d02dbe99799524ebaf93e2fb,Fix signatures of generic methods in Parser
e5df77739348dbdb527649d897e24b9033d9f459,Replace Collections.EmptyList() with a new zero-length array
b9518b9b52964bfe8fbe5f3b9713ab50a53d4317,"@sharpen.ignore Func0, Func1, Predicate"
852a06bab75412dac310ac7e1fc7c304358100bf,Merge branch 'sharpen'
9a3d80d11579f113e7310e0b37fcd7a1bcfb1ad2,Remove files from project (to match previous changes)
63298979f572d3b59cdded276eafce069478ffbf,Merge branch 'sharpen'
b4f8cf53bbdd0be62bf63bb7087731372a5b7021,Use Stack instead of IDeque and ArrayDeque
9135606c15600499c141777ff24aad9eacb3913c,Fix generics usage
bbff99c6e1787c873d77db26d220c5c3e3718aa5,IsEmpty() to Count==0
e2fd234f98fd9849d585a36ebf8ce5290c3ad574,IDeque and ArrayDeque to Stack
a3114c3149ddb0c6806a92b80b78a830cd478271,AddItem to Add
0a1f1f7e43a507a2146e3ce20fc66eef7aca6a18,Add AtomicReference<T>
a7df354202c689d6088cc15ec2471b138516ff81,"Updated mappings for Predicate, Func0, and Func1"
458c6871b7a3b86d4892e6f5c89458ad0c91d21a,Merge branch 'sharpen'
6b4f1a32fc27d6150b475e32dafa29f43fddab63,Fix implementation of RemoveAll
644db625da714f44338b367647046febd64dfde7,Add IRecognizer interface to help with some issues with generics
7becde5c7bc92398e9cd254687ab3a2bbdd9a215,Add Collections.EmptyList and EmptyMap
4b92e747a46955a5b1a5118416f0543e38a9e9f6,Add Arrays.Fill
af94caec5f12c7d125cd7b506204d84977b580a0,SortedDictionary instead of LinkedHashMap
a8213576970c4c1a3cbb874764451abc241bf8ab,List instead of IList so we can use ToArray
1ffb975f0d22c1ff6d7514c733720a8867a3d655,"Default visibility for methods in interfaces converted to C# classes is public, not internal"
aaa7adf5981a10b06c3d84c3b52747b1ba9f8099,Updated sharpen submodule
c46bce3251e6f57d8b6c85199e476c06c35ecf7a,rm bad comment.
2d3fc09ba20eb8b02f4af2860edb9a834545dc09,Add and use the -separateInterfaceConstants option
ee0f26b19d4a161893a4c314886f21b649c53a3f,Merge branch 'sharpen'
47f1171707a7b8ee9d947b67be47f9cf1524888b,Error listener interface support
5dadcca1fffa0db8d8386ba27186ffe16845cf05,"Nullable and NotNull Annotations apply to return values, not methods"
7d1f1ebac76eae5d6ab2e8606a78ec1439c51215,Specify generic type constraint
24b211b405fce09f9baf150cb39ffdbf06befb98,string.Join
d55c2176e1bd07b6ed9afdd8e81e22b97369e78f,Add DictionaryExtensions and ListExtensions
45dd95e9012be89226ba09fd168823f7b5c8af76,Update ParseTreeProperty implementation using a ConcurrentDictionary for the backing store
e2c5a77be56b30ad6ab187e66e2a79f583e1650f,Add required explicit interface implementations
af5057c2d79c348ed118d37ff885fb71f1ca74d5,Fix generic method signature
15a97b41b64d284bce6a8f1c6f80e77f279054e9,Updated properties in ATNConfigSet
1a44b8e7593332e4be562ac35a6b2237cb1808e8,The override keyword should not be generated for interface implementations when -separateInterfaceConstants is specified
a6bd78893dbc4b553f3bfa5516d22564132bad93,Map NoSuchElementException to InvalidOperationException
b12aff16b0702f7abadd9c3ebcf359d982f1d8aa,"BitArray isn't a good replacement for BitSet, will need to provide a proper implementation"
8aa9ff38bbb2af3cfbafabbe5d9215c9eaf3dc6b,Merge branch 'sharpen'
7cddac84985db42a43d9224a4b4dc2a46b9f1908,Convert int to enum by cast
b405ea3f7229e19b59ae37fa14ec459c28c09dab,Initial BitSet implementation stub
be53840add03b047ade1d42f46a3d835e0f8b527,Dictionary usage
1650c4fff38a659aefbf919fa9b32dde3cf17e9b,List and Set usage
5081a4c0b4628dc5ac977d5f6c4bcaa72dfdbe0d,Fix loop variable references
c8659309736da91daf70467ba25ffcdf9bb2145c,Updated annotations in RecognitionException
293990009d8671e1d201a36c69d23ac551fb5623,Merge branch 'sharpen'
4fd4a4f1d79c424d422a90e92ba1886c2e04aa84,Add State and InputStream to the IRecognizer interface
7ab35ea063445a5ed63afdeed0e780f167751385,Fix IEnumerator usage
8ac4d130a89e8153b0d3cd799b79875df60aeec0,Use IRecognizer interface in exceptions
f35b3ec806666161c69d6336816d3cebf9efa05e,Updated collections in Transition
5326ad4f266496d9f5cb279088fc57ecb4aac7aa,Use IRecognizer interface
6aa4042c006b0e7acf17eee1720fd360fec05609,Updated collections
2b3421868d804da1f293eb78e6c0c8aa7de9361d,Updated collections in LL1Analyzer
413e6d7bdea2c5afcc47610e49b1682ad55f5d3e,Updated format strings
a24f65af418bd45275dc1ee0b437b156396a7f14,Updated IntervalSet collection usage
f45c70fcd580f7145378855ca543ccc5c8383086,Add required explicit interface implementations
4593f43c5736acc21164deb2ddd4b5989ef66a35,Allow NotNull and Nullable on properties
0f3b3e35255b52b6d05722165613c2ac78a58305,Use InvalidOperationException instead of Error
26fd804dcd0861a93ba329d34e65a238ed46953c,Use Remove method instead of Sharpen helper method
55f049d0887cb08a156e31dca77ffba328da140b,ATNSimulator updates
0cc20fc9635c38d6940212fcc5f8eb1608a76808,Annotation on return value
dbdec984e22fea8d04a32438077cc525ad0f6bb4,Updated collections in SemanticContext
040896b40a83b38194fc2f5ed87edc1a6f6c813f,Updated ConcurrentDictionary usage in PredictionContext
02f7958446bbfd06e14642c20f41d1596d96ba97,Fix usage of AddAll
b0a106eaa4904eaaa2364136e95bb7c69a140463,Updated properties and parameter types
9a351761d685f2db00743d9af5c0f7a3c4a96916,Merge branch 'sharpen'
9e9be6427d00e21ebc3368e8a8ce149c2aee1085,Use IEnumerable
8ec18a03b8eb866d7e724d014db383fba82d04d6,Sharpen annotations on ATNConfigSet and EdgeMap+derived
e343e839ee4cc82417771a7c8033060881acd73b,Merge branch 'sharpen'
b79519ef1649b55b73799dff0adc19f425513412,"Updated implementations of EmptyList, EmptyMap, SingletonList, and SingletonMap"
2f217b52413a9aa6500ee33061dedf0c7902e395,Collections usage
24f30a607e62da16434476ee476b5eeb48fc3c90,SortedDictionary instead of LinkedHashMap
d8a8466a905fc26eccdaa6845f584e79e48d5e9e,Collections usage
5278993a36ae9271d8d539463340fe5bb0b6d27e,default 0 instead of null for int
4df61d2616ae01b88696c1d33f6ded54b897dd4e,Reverse collection
9983b16190614994698e6db4eec7d7ad762dd2d0,Implement ATNConfigSet.StripHiddenConfigs
28b72ea406f97cad5490bd62344db05a80a31c04,Implement IntervalSet.Add
92c2c8947ad8fd74810a4400a301f58213cddd85,Implement ANTLRFileStream.Load
0c97547a7ed578d41509abad24344012362a19cd,Fix comparison in UnbufferedCharStream.La
115b4736edd54175ddfd76acd692cedd9d7b0b51,Implement SemanticContext.FilterPrecedencePredicates
3dece5c4df9bd3f85e668bce0663bc84f6474714,Fix lexer mode stack
4eb4194f5f47167b1fe7a3a6cd73d39f1c17a32b,Fix collections in TokenStreamRewriter
00b8db4e2b027c56adadc26dd52d588d90044ce1,Fix DFA edge maps
4bee942e2fae3bc31835d8e68d53f1a9e0bbbdf8,"Implement Arrays.HashCode, Equals, ToString"
efa20b3fd2e65c675116f51ba60caed0fb16b001,Updated BitSet implementation
8c3cfdf39152f6f3ad49ac0b53471756521f2915,Add Antlr4.Runtime.Test project
f3b6d3fba219a1a23d28cd4f17de1b076d8eddc1,"Add TestIntervalSet, fix some issues it found"
46d93924393a61caf66a9947d558171dedd59202,Add TestGraphNodes
39f51a47815b9d0ee8bc3a50a5457d42e5d40eef,Move projects into runtime/CSharp
148fc0f827bfdd30ed086fd18f06cb1114100418,Merge branch 'sharpen'
8468606b72fbc34964ae0c8109b3f7f3abea5ef3,Added CreatingTargets.md
861c951d563c4934518db08c46d4a7a7258e3478,Add missing license headers
3d59e47fb44f8fb9d5f4440b312df41e4212b0d6,Remove unnecessary method Utils.replace (already exists as String.replace)
1789e1685b47cf68c47eb56bfcb8fda8742ef09a,"Pair and Triple are immutable, and Triple is not a Pair"
bb36baeb21cfb6968d21dfc56cdc66e1bb52a748,Add a non-null default source Pair for CommonToken
53f147bb18d6cc4fc44825bbc5cbfae7f7981c2c,Clarify type widening casts
08386ba2dcb388215113558f268d0cc4ef431c49,Simplify LEXER_CHAR_SET rule
1bc4c5e6a4d50697350cedee582ce1d5c5c4bf8b,Do not allow raw newline characters in a lexer char set
18508e2209889b910de259fb220a5848901d9227,Do not allow raw newline characters in lexer string literals
b372d4d88dfbb54d48df3dfa1e05e27304aa60d3,add TODOs and fix a -1 to be a constant.
758c5cd37f6afb444e11630037cf86f7b05c356b,Use lexer commands instead of actions where available
371bcc83b2d8f71c157c42d7909812dbc304808b,Use accessor methods for CodeGenerator.templates and CodeGenerator.target
cb298530bab4844f5c08ba92dd179dca397ffecb,Remove unused Target methods
920d5dec8be5dcb59b984187408997a3a3e9b682,"Separate visibility and ""bad word"" analysis in Target"
4d854a521e51ee3c5f2cac319cb83a8af403e3a0,Move template loading to Target
d48ffa1459e00ca5a48e05e548602429f21cedc6,Use accessors for fields in Target
b642c7284511454d9eb66a0a88ca73342ddf7c6d,Avoid loading the target in the CodeGenerator constructor
9e1eed761456f23260c23648d62bf27ed6d62057,"Make Target an abstract base class, with default derived implementation JavaTarget"
b4e66f18cde2574d4eb67daa621beed621cf254b,"Move Java ""bad word"" analysis to JavaTarget"
68050dd1263255b31fe0d1beed6a5e0784a9a639,"Move Java-specific character escaping code to JavaTarget, make methods in Target abstract"
7018297130362842edd4de1edf9c5a98534f21b6,Merge branch 'javatarget'
645f80971f44f43c357a795a65b12ceda9fe1a25,Merge remote-tracking branch 'sharwell/lexer-commands'
459baaf4cadbdbf8faed0479c6efa03770c28eb6,Default visibility for enum constants in enum classes is public
ef57689c88079dbb9d87ff667a6e79e238090fa7,Ignore Maven build directory
17374ffc496bf70e7a578ddca266e7428d12b83d,Updated reference build of ANTLR 4
fdb73a92b860a4da83398874762213fb20170f21,Add TestBitSet and fix bugs
7d7f5a1afc3118e400c2bd07ff408e1ba6d90aa5,Add override BitSet.ToString
2ea504a4936b74fbd3b15438e224b33ef0861f89,Fix use of encoding argument in AntlrFileStream
a988b668d321f846555fa38bb4d9d0ebb95775dc,Add RuleVersionAttribute
f8cce16966721aacd35d338d26e6c3c5e58debd4,Add SequenceEqualityComparer which implements Equals and GetHashCode in a manner compatible with Java's List interface
55331e4a0f0f714f7268da159b4c1d8e9f99d525,Fix Equals and GetHashCode for ATNConfigSet
baa2a95ad147b309ae00f0be93c5afabb297b15a,Fix format strings
db1ee841c6f4dd1a9e9c6fccf426cf73ea1e80e3,Fix generic type usage
68732032e04f0f7f811cfadd1e98b5e7ee46845f,"Interlocked.Increment returns the incremented value, not the original value"
24e8a73afcf2b66ca2ab05e5e5f2cd84b76c256f,Return IReadOnlyList instead of IList
bc2b1cf44e02bbdad9c3754c10e37fae9f1ba073,Merge branch 'sharpen'
fc37abee1cefd68367e0c54ba5414600758f982a,"Add stub CSharpTarget class, copy Java.stg to CSharp.stg, and add initial pom.xml to build the target jar"
fa66235f85d49cc2b7a8055630d6dc5aef74d46e,Add extra files to Solution Items folder
b6dc84b35983325ecb6e65292d4a4b0d4a3c2faa,C# files end with .cs
bd1270a9dbfedaef3322a3302b1231f6ba546f44,Default value for type T is always default(T)
cb253b94b808ad092905a2f2b2c499f37245e1c3,"Use ""string"" instead of ""String"""
0a9679c11be4b6acd989263d8f043e17956ca3be,Fix capitalization of method names
d33822a648887eb591a9def05d3b79c2a72b0f62,Namespace instead of package clause
7bf910622ef0a46fd3727437dc3cedd84c1e7ca9,Using instead of import statements
1f2c25c543aa7fc468dfb352aea3dc3a363bf075,Reference properties instead of methods
c0dfb334a3d66c5d40136facd4dcb08c6050839c,Fix class and interface signature syntax
65caff9353f1d61fc7296e41100f3e10e142af3a,"Appropriate use of ""static readonly"" or ""const"" instead of ""final"""
693a10122078d9d525eb14583de7c3cdad0c34b6,Use the virtual and override modifiers as appropriate
36c0a3f8ff8bb3d8d5935354a2623474eafc39b4,Reference appropriate type names in runtime
af844d074afdbf2513b58d48bffb8c37900bfc47,boolean is just bool in C#
5d87d0739bdca852760c42691dc2dda92a715de6,Translate to properties instead of methods
548f9903ffc864e57da8fdda1a399c852aec1f36,Fix constructor chaining syntax
485964483a8d31f50ccb2fb57a6e5b31594b9321,Remove throws clause from generated rule methods
401c0c4587700a3bf4d791a2d35209a051841e76,Fix generics syntax
28944b69ed2e7b7992569304e6e4e6bbcee993cd,Fix attribute syntax
896c256cb98012357da5e034b1e18dee0567ae5e,Fix constructor chaining syntax
e05a70438ac80424a54b4047b788b70285d17138,"""base."" instead of ""super."""
751f29b2d38563e240ca7ddc567ae8d06ffcf56c,"""is"" instead of ""instanceof"""
42456d75c8763a80515652e40c55ee9f6c793305,Prepend underscore to field names of implicit labels
c054183025403cf046e4a8c62950803ab1d19af8,Remove unused static initializer
80fcee7e61993ae79e593da947580c3d34d18855,int.Parse instead of Integer.valueOf
66aeddd9721dba9eea3ce68fc4ff2c9a9f70197d,Expand generated parameter names
333d706f7315237d9b5ba83f435da8dc1eed91c4,Tweak generic type parameter name
f17dfdffb4b85d15c44c3f7a0ce4f2750124d889,Merge branch 'template'
060075da4a603c67a099dc0bdf42cc379103bc60,Update pom.xml to reference the correct artifact versions
9aa47eb18fcc0ab4e0aecc7d956b3a5b97e445ff,pom.xml should be using jar packaging
07a224640ee4b4d926ef9e7b2232823f814cd693,Remove duplicate sourceDirectory specification
48485e0cdafb507ef088dedd61504118b1b13a3f,Initial implementation of CSharpTarget.java with proper C# escape sequences
2d68418dbca1bd366c1e6c0d0aab8745dd8eb716,Added TestPerformance (body is unaltered Java code)
05b451bfeb7a3b4f6cdd5822b031d33cdc7eb29b,"Fix uses of ""boolean"" and ""final"""
7c02865ccbdbd2d52dd04c9aaf8303aefc197e8d,Add using statements
7bbe3001de95267ec11af8f4611e6fc772358f9b,Translate annotations to attributes
6f60cfbeb7475a2922fd5a01cfaee632539cacdd,Remove throws clauses from methods
cc73453ff1fe41cd148f5c6b51af16f372efe23a,"Fix uses of ""boolean"" and ""final"""
b29ad5268575453b156df3fcdb67b98199d988d8,Translate console output
0bf7f2666c86c5c1b39640a7a302d74aa5edb5ad,Translate X.class to typeof(X)
007a2240763e7eff0a9a0b369427a203caa90c7f,Translate foreach syntax
23c8f4ea2d59cd7eb5382d213f73709d9b19c24d,"Fix uses of ""boolean"" and ""final"""
2bf39bcdac1e02e74e0a71730ecf2aee8cbffa6a,Extract anonymous classes
4e2961eb93d8c961f441da4523b852cc6c6e5847,Translate unsigned right shift
0cc941d45d96bc627da26f4582b5a4dda0ceafe4,Translate assert statements
9dde20de762ba7672dd69b173e3e336e0a0253a7,"Translate ""instanceof"" to ""is"""
94b1e3c84bd05e79c7f85cb88c805facf225aa32,Translate console output
99cc1695b30a82e3c3bad654293e95ea4cb79e96,Translate class declaration syntax
0d43ca3e1c9bae93c63f8e7e6fe2c7a3cca01839,Translate annotations to attributes
ddefabb8ae2561d306bb940b571bf1bff2372fbe,Translate unparsable generic constructs
dd3633d95dc4b914a93b1d056e22903ee6e8c8b3,Format code
1c92b79dabb71b2a4be1a5f82085cd50ca5e7acf,Add QueuedTaskScheduler
b77220ee7f54c6e2865def388c436704fe79473f,Updated Arrays and added Checksum interface with stub CRC32 implementation
e05beca7c6073806b24b88d55fed260abba879ce,"Updated TestPerformance, now just waiting for BaseTest"
40298160ecda43e47b7322f6eed02707b3780d17,Fix interface names
6150ea082bf0c3d4f589977479a7a489fb570bc0,Use built-in types
d4b173c664f3f5d732e84f2a2996f38bfec29893,Add BaseTest
e68e05304343608ad0c159bbbec8444b5341a36d,Handle setup/cleanup
0fa9e30dfeeccbf60e11c4a54d46a3389043963f,Implement mkdir
783ee4d46d1bf94a14165d71916bc8b332829bcf,Implement StreamVacuum
2047f5298eb9c57ed3179073ae6b2505b0ae8618,Implement writeFile and eraseTempDir
b24fa5a99ab990b6137e25c7a383a5fdecc6c878,Make sure tmpdir always points to a new directory for each test
ab0b02bae02ff81ba3b803972797f69989fea33b,Support compiling and executing grammars for the C# target
f91b1880f795541e96d6eae8b0c479066e6dbb0e,Exclude code that isn't translated but isn't needed yet
95b6cb3fa77f4d5b051d17ba209fe6f2a3f2ccac,Mark methods virtual
069652c05452f0cd40e2134fddde944e9ababc27,Merge branch 'basetest' into testperformance
1430873fdf9ec1a454d53891b0ccd212de9a74e8,TestPerformance extends BaseTest
1a0534ae3fb211cbb9cc32593cde1d3b2601e0ef,Fix format specifier
d8f599da4423449d1694b179c96d167920da49f2,Add missing ctor
49e43cdccf4f25162765fbda77ab7244576308ba,Use BlockingCollection instead of ConcurrentBag
8424dc15e0e050d7d40ba8b916df28af6446fd10,Organize usings
a344c4e7940eaa163df2975ecd3cb2076fafdd7f,Add Java grammars
c444758cb401f5e10e9580f731c496b200ec53e2,Update Java grammars to work with the C# target
c52257860cc1277023299f2ddf73faab2a8f6315,Merge branch 'testperformance'
672f40c8b8871326fbf25fb59b3e42a4d7e2e356,Fix link to CSharpTarget.java
21846ab23ca9db8e44a6ffa06c1076ad6ff77f6d,Updated pom.xml testing support
9c86e627e33e3a09e810ffc705a444873ad6fc44,Add note to CreatingTargets.md about the special branch used for the CSharp target
8cf6be9d89f9a89ac1436439a7f36d2be10a87a3,"Add initial Antlr4BuildTasks project, copied Antlr4.targets from Antlr3.targets"
eaa92eb826dbd13bbfe464c26c6403c6f1e9d645,Sign the Antlr4.Runtime assembly
81b256d1f300d85cbf48f2913b2a1ef6debda1ef,Suppress warning about overriding Equals but not GetHashCode
2e1d284a125bc8db4035294e5f626eeab0de239e,Suppress unreachable code warnings
f0cb48b650438bc120cbc820a0de5522a55a02af,"Include ""new"" modifier on interface methods"
eb675668f4ce9d66291850292edfda2e84bd6357,Fix attribute target
515af0e65a27f3e2597f1344af77eb020974b868,Fix warning about bit operation on sign-extended operand
d9a873536167bb040f574c07501b17be0171e945,static readonly instead of const in TestPerformance
d5addbd28724917c49f1d3866bbf24471b7aa96d,Remove unreferenced branch targets
92fc3ac1a1aaa7d4bd4f24099e53cf70bbf3d323,Remove unreferenced locals
789b9578a6fe4315257357544ed5ec03ce7fc203,Updated sharpen property annotations in Lexer
587b95db74735753b23f84d15208208840ffac47,Fix switch case open/closed analysis
21dcd8f5a32df4367c457cbbbd4c2d700f24dbc7,Merge branch 'sharpen'
5e492114550733dd8932a36a374681b7c867f040,Constructors don't inherit visibility
6079069f999c7f06e50ef307fd38af34750589ed,Merge branch 'sharpen'
fc42fe1814872eaa5349eabb0aa64f8fc15902cc,Lexer.ModeNames is now a property
6b7eb5dad408d29a3863f645c5af330486ef52b8,Updated RuleDependencyChecker to match the new behavior of RuleDependencyProcessor
cf73d49f6eb3520893ab1e632c21a1e1c0c3eb6a,checked and unchecked are keywords in C#
42d3ff06d3bf9887b1910779d8545f08a2a3ea40,Merge branch 'sharpen'
cc00681bf8714ab84bb13d1252a497c227568414,Add RuleDependencyAttribute
1bb1f23579956bf8fced221dce4600106dc22bed,The Dependents enumeration is flags
590ae4fe664fdc8e09f99835c60d9d543eae71bf,Implement runtime rule dependency checking
54ebfa862536479109a1d19bcfb9629fd79374e4,Update RuleDependencyChecker to check assemblies instead of individual types
1c8e6dfe2568b357a06fcb2e9481af4c3e19333a,Remove unreachable code
843d01dcac08074df338ac7a3347dbd502bcadf2,Implement CRC32 using zlib code
9582a1e6101307df88f017a68f0851b96d044efa,Use indexers instead of the Set and Put extensions where the return value is not used
e5a1ed69963e0462bd6e1d25eb3e18d1e3c33a35,"Translate Interval as a struct, and make Length a property"
54c4bc826f346c26d7352565a11919bb961853c7,Strings can be constant in C#
6708ae6db321a15aa2aeed93cb7a658cdbe82f65,Merge branch 'sharpen'
843fc1c2d307b109bdb33c5153380798ef8993be,No need to cache Interval instances now that it's a struct
2e57495fe4a5263e5492e32cf0b1b51f81a34af5,Update Interval.Equals now that it's a struct
72c0535d3e2caeabaca2d4dbfd7a975435aefdda,Return Interval? instead of Interval
03f8d3772fcdcd84ef8b8edd4a8e3cdc1e0c03df,Fix comparison with IntStream.EOF
e0b1d7dd264fc479c3bb22a96e0806d93c9e644b,Updated to latest reference build of ANTLR 4
f80c3d15782272645b0404be96b4a411469037bd,Merge branch 'sharpen'
2775c17ffe1f478c2e7a420c504b7af523c95fef,Conversion needs to be wrapped in unchecked()
ba1f0ccb745cb5490c0b1ab7df13a0829c3dfa29,Add the initial build task code
ce8170bbab5832f6b4523ef1c35fbf5af97a8480,Updated code generator to use Java tool and support ANTLR 4 options
05da986f8f521c93f60ae7ff59bdb6fd1e63b0db,Add the CSharpTool extension of Tool to get access to generated file names during the code generation process
4a3b2cdffc13585ba76ac8afce552a1ef8eb1639,Generate shaded jar for the C# target
b36728df104520611cd99a2af6d110535525e6ab,Update build message processing for the ANTLR 4 message formatting
8a1452961a9ec336c32178ffe5bbd513c5cf087a,Handle exceptions in message processing
8bd2dec569bf5049a3533720698bf4f4fa25025b,Parse generated files messages
6abb26c29dc6bc0aba038ac8b5c9978211d68ad7,Fix working directory
11ba8324be3acdc89934b74cc8ae7d7db4d3f4fc,Sign the Antlr4BuildTasks assembly
ee871fa0d4ec6998ce6e2f929274720def3e3bd9,Merge branch 'build'
4862f07a86779f8023762bb0972b34d46fb2c454,Fix build warnings
1ac1d986e8c4f039be6669df6ff2e204b781db2f,Added copyright header
ebf8cd5abca8ea08f7831ad5f2bf8c75c0ea702d,Remove automatic left factoring declaration from Java.g4 since the processing is currently very slow
659c941f18375dc769938f831a78c52c957f2861,Copy Antlr4.targets to the output directory
0bb4046f8b5ebe32cd6dd1c3f187de2bf49e75cd,Add code generation binaries and generate code for Java.g4 during the build
6463fff0e87405ca70afafaa04974ed44760450c,Add initial readme
c464a721154a3775a6e824092e192471c94498b3,Add template groups and targets for each framework version we intend to support
c859debc6889febf19153ea08fdd1e055c5b2850,"CSharpTarget loads the framework-specific template, then imports CSharpTarget.stg as a common base template"
8ee3a2204ff17103f3ff2e98d68c6882bcc43dea,Automatically select the C# target variant for the current framework
d1d13b31032c652913e69ccba0cf156c89dbb978,Forgot to include framework v3.5
54aea042559a09fe16a838a093607950824eca3b,Use the CustomToolNamespace property to place generated code in particular namespaces (defaults to the root namespace of the project)
0e694e1400f83fdbce65058747f07d667ca39b00,Fix group loading errors
37d3e78d7b18acc6491d1870c5a2a822873c74fd,Set file SubType
12c893749240ee466927abf34dbdf334f71b564e,Rename projects to indicate they target .NET 4.5
2c36418999c1b9aedb33c2f67bbcff96b9c75b1d,Set framework-specific bin and obj output directories
fa4489e6bbc1faeffd74ebd31d095f410f2f1e36,Create framework-specific projects
a990f72ba19a65c4a0f9f8a72593edb83c3eb877,Assign unique project guids and update output folder paths
5ee0cb10dfc08ece408d2dea32b8470b14467a11,Add projects to solution
89dc5952dfdbdf5ec993996193b3ef5e350ba4fb,Update project references
5d44535b5013e98d9a1cfbf89f42f68972d37acc,Avoid using the Volatile.Read/Write since it's only supported in .NET 4.5
acc785069ec661f385844101a5647b26085b3a6d,Use ReadOnlyCollection or array instead of IReadOnlyList to address compatibility problems prior to .NET 4.5
77d346406c5d4d29a542d5e8dc787ed6f97c1f7b,Use bit operations instead of Enum.HasFlag
d898160d633162ffe4740bce3317edd11b0b2ad1,Use Utils.Join for improved compatibility with earlier frameworks
61c141e994ad957b4a27774cabe47cdafd853e02,Use IDictionary instead of IReadOnlyDictionary before .NET 4.5
3ad50763b671883a9e30f37025cbba37fa5acc1e,Return the proper collection types from generated context getter methods
47efe0bad5dce7f33dff2a16db9d3cd552e448cf,Updated TargetFrameworkVersion for v4.0 runtime
ec45a07c03dc66a9fc9543a20f604ecea2ea21ff,Updated preprocessor definitions for v4.0 and v4.5 runtimes
fc7587d754c07107a23fca09b2fb93f96329c726,Remove dependency on CustomAttributeExtensions (available in .NET 4.5 only)
02d608a21cc1e973b5e0ce8d20b516e3e36914b4,Ignore Transition.serializationTypes
191c24f89b2b9231a6dfdc9f52a546c3f71b5272,Translate Set interface to HashSet instead of ISet for improved compatibility with earlier frameworks
7e55c0a4e84b3e1e6af8170877f2876a50bd25b7,Merge branch 'sharpen'
dbc1bc5a514814f4d6e6951c06c88f7b64a06d68,Use HashSet instead of ISet for improved compatibility with earlier frameworks
5af2411849cb4daba61d1555d516361ba0bcf4fe,Fix improperly quoted string literal in template
ca133e541db56ed738585ec19d7ddb870cf5af99,Fix Collections.SingletonMap for .NET 4.5
ca4823e67cd6815d3a088c702f9d9ed78440a929,Update assembly names to match the target framework versions
5d167ce21bd3de42a3c5ada9b0acaf54ff44238c,Update the TargetFrameworkVersion for all remaining projects
4231313eb1eb233f3fdc89acf76b0251d4b1ca64,Add compatibility types to the v3.5 runtime (types introduced in .NET 4.0)
102003309601776a094833f2fb63ec076be599d3,Updated v3.5+ projects with a NET_3_5 preprocessor definition
f063557b7bb7f0f76f480857588da30cc3fc3ff9,IEnumerable<T> in .NET 3.5 is not covariant
104de1a1c53ac5ec5c0c3c5a59da3b513139dd90,Update BaseTest to be compatible with .NET 3.5
1fe11155d684c663a46ae6a22650aaaa49ed052b,IEqualityComparer<T> is not covariant before .NET 4
25551e698586544ef9af1a97a6fb15eed91f03ef,Update TestPerformance to run single-threaded prior to .NET 4 (TaskScheduler is not available before that)
efc964bdc63eac4630f58d88016042d80e8a2705,Use TryGetValue and ContainsKey instead of Get extension method
59583da8b0ae1d08b8dd7e2fac15274ac2b4ea48,Explicit usings
3d5f7664c6afc15494f20ab781c4056499966524,Use Dictionary constructor where allowed
ec36fa790fbd3b511f3daa72c62b3ae3f228b8fd,Updated support for the v2.0 runtime
09b0e046be93f9b2958a0f919174fefc101dbc90,Add compatibility layer for the v3.0 runtime
048b35439132a9bd62595f824cbc0823eeaac35f,Updated support for the v2.0 runtime
743315b08f6c2f7ad44c2ccd710e966b859db868,Updated preprocessor definitions for test project
db7d3351f9790ea227629bd9e9d8b047266b841e,Generate partial classes
5b3767003a8e49a79a33180c9c77f82f1e5a8663,Use as+nullcheck instead of is+cast
eb310ae3e8f6b70b0e60f834d6cd4064df65f53e,"Use <%...%> instead of ""..."""
9e341411ad8be86d49a601d4b03f6fdf993ec83f,"Use ""parser"" instead of just ""p"""
c64ad1924e498c38ed60147cb946124d899bffe7,Constructor is protected when the generated parser is abstract
30b69549fcd49b43b6b822ffd290fc90ce0d9f7b,Updated build binaries
8dc10d47336064f8a3909b87e68ee104a2ccaade,Updated preprocessor definitions for NET_2_0 and NET_3_0
ce6296416efb30ab8bc9abcd1b40832a1577d97d,Updated runtime assembly info in preparation for release
e01320c5a271a19d761a6c67ab48e0d65c007981,Updated readme to mention multiple targets
c9ababc0812fb30fca35edebac6904fdd2eed9a2,Fix project modification instructions in readme
a47c2933e9375d91e8db45183e63b215b036a537,Fix IntelliSense issues in projects that reference both Antlr3.targets and Antlr4.targets
d97e88db662771f6e3ae6f6473da6ea43c05c96d,antlr.org -> antlr3.org for loading jar
21b255df54ddf022f9d31aa9d3882673f154c73f,Merge branch 'master' of github.com:antlr/antlr4
8744e65690bcfe23265b9e68c4728514b8b1e020,build.xml: Expand the *.g arg to a list of grammars before calling the ANTLR 3 tool
1f76add8cb3d78725629a6831c04bd4dccce6741,Fix incorrect type checks in TrimToSizeListener
f67c42d5fb75c4c44b8d49dac91cc8deb32eb179,Use Dispose instead of Close for portability
7049163595c6549e7298ea18119586291c421b3a,Add Portable Class Library C# target variant
00689a40bce84979086c809a1d4a99d2294b6b47,"Remove debug, dfa_debug, and retry_debug from portable library"
307464f818265fb9e816db937ec874d8313ad397,Portable class library does not support console IO
5bd661e1152b9ab85ca83af6ec8d77cc6d0d7872,Portable class library does not support direct file IO
0ea64b9bb15d735a6785c7ed855f75dafc418360,SerializableAttribute is not available in the portable class library
1b605a5e7126be354218eff54123cb7975934ce1,Add ICustomAttributeProvider wrappers to the portable library variant
37b15b0e228c36222c2507c5e5f1d5453fc19804,Merge branch 'portable'
d41f4ba906a3f7e90f904316e64b27d345ab4b5f,Need to use the full path for source files or relative output directories will be used and tokens files won't be found
fef6dd288588db7ad3882845869fda0f29971bd1,Allow direct calls to left-recursive rules (fixes #161)
a9e1b8b2b6b0f21f90ad250a157d326b3c50dd9a,Change error type 146 (EPSILON_TOKEN) to a warning (fixes #180)
2ffb12028a9eefcf7fa4bc617e10e05eb3c05d5c,Directly reference ErrorType members from tests for easier cross-referencing
e0e6e0a94c09b6a2a3528bd7f30d0514e6964418,Specify locale for all format operations (fixes #158)
e54aa851cd1b2722667f3b0ba911ed4032658198,Fix generation of invalid Unicode escape sequences in Java code (fixes #164)
56c053a5be93c86fa81da24f8e6868d0d18830d6,Remove unreferenced fragment rules
c35f5ec40c33416d65c0e0cb0ce29dc39649fa34,Do not require escape for $ in action when not followed by an ID start char (fixes #176)
39f58b95aef1a8fc9c01789762dca35cfb8dfd43,"Added a export-to-PNG button in the dialog that is launched after invoking org.antlr.v4.runtime.misc.TestRig with the ""-gui"" parameter. When pressed, a PNG file of the parse tree is created in the present working directory."
d4c8db49400854d183f4a7e58af3e354a531625b,Merge remote-tracking branch 'bkiers/png-export-tree'
82a00104f64f115e82bb3d8ef375e42f84cebba7,Fix formatting problems in pull request
347375ec048978342c7e79e030aead50c6768ea4,"Move ""png"" button to the right of ""OK"", refactor export action to its own method"
c62dfdaa690a227b960f8d33d800b76204491e2e,Expanded PNG export functionality.
df2dcb66317b8b39e5ae4cc645502ddced5e55dc,Merge remote-tracking branch 'bkiers/png-export-tweaks'
5fdb01499db383939b9a33351a6b27dddfa2af6b,Handle the overwrite confirmation by overriding JFileChooser.approveSelection
7d52fb7ecd7fc336673fe5fecd3a872eb5aae64b,Add a PNG Files filter and select it by default
c9d8fceeb7c623c0b0104d1b873c7ed7d64a8958,RuleDependencyChecker should examine non-public types and members as well
f494410681c2131ec223d6703e4a98a4dea725f9,Check for both the 32- and 64-bit versions of Java (fixes #2)
8048f58b57c63b7729008ee2319e3c8fe24a751c,Fix format strings
451e562a345b2ec2112feb8cffd3358f90e1f2fb,Check all dependencies for an assembly before throwing an exception (if any is required)
fe57b88b4b93d3a2a35a67af0f8d9be7c87683d0,Include the name of the attributed element for failed rule dependencies
c6bb5be737a02016d7bda0afe59a1a85d072675b,Actually use the registryView parameter
092078e5bfd94004139ffd82a785bb4d39593dd9,The JavaHome property and TryGetJavaHome methods are now static
3c0b96c413a36e3aba061a7e3a3f1bf4ec07d482,Allow specifying the JVM vendor (default JavaSoft) and installation (default Java Runtime Environment) in the project file
dd5fd6281860513ade7ce0119af69965abb630aa,Mark the assemblies not CLS compliant
b0050b6bdc00e5369b78182904a2b40dd35ec0c9,Address code analysis messages
621281fa67ce288a7603c061b6a6cc57adeeef46,Implement ContainsAll with IEnumerable<ATNConfig> instead of ICollection<_T0>
4a9fe953549f5f9cef48f6fdaf486ddf64332711,Use inline initializer instead of static constructor
e987cebef35cabca137b93a187734253891de7e7,Abstract class should use protected constructor
f9718aa62f630c09796283acb911cf194d2b3f8e,Merge branch 'codeanalysis'
507f331bd08bc01c213822508d18bbc4ba769db4,Update CHANGES.txt
36abbda44fac6cba447c8a97d3cfd69ea29340ba,"Create ATNType enumeration for ATN.grammarType field, use UUID instead of incrementing a version number for improved reliability across branches"
8b6c9946945b84cadf0d07881007970822369c9b,Remove unnecessary field ATN.stateNumber
f6ad977e0de866b9dfc098e0ae63fa50aa67166b,ATN fields grammarType and maxTokenType are now final
4f29c2fe3dbd4025410c239659a3c4188ca69823,Updated ATN documentation
bc17cd4a28003e19d3dfed97dd3e7589ad6161e9,"Move primary implementation of getExpectedTokens to ATN, fixes #191"
e9bccee49ffcc913e9e9bb2b147e4b1a989ccf31,Update CHANGES.txt
c6a9d62b25d06caae0abb650b1c3e466308f6a67,Track the number of syntax errors in Parser.notifyErrorListeners instead of in the error strategy
685d2a32d44bd537145e9fcac8c52c196ce882ef,Update CHANGES.txt
07689de50fef21ee65759845d8afeff5ba5c6070,"Updated @NotNull and @Nullable annotations, linked documentation"
6c4f4181d90ceb84269b8e829e722b6fa5166cc8,Simplify the ANTLRErrorStrategy interface by reusing the token factory from the parser instead of having the error strategy maintain its own separately
70452f7e4bbe441dccab5e108b68afc08daad4ba,ANTLRErrorStrategy.beginErrorCondition and endErrorCondition were implementation details. Replaced them with the API-relevant alternatives reset and reportMatch
56e49fdc38fd838d468ef60cdffeef212f2bdc3d,"ANTLRErrorStrategy.sync and recover can throw a RecognitionException, but not reportError"
185172caac13600e252731b42ad27fd612fdfa6e,Improved encapsulation of DefaultErrorStrategy internal implementation details (protected methods instead of public)
1213aaad0bf5e394f8bab04ed69ea3e53f0771a8,Call inErrorRecoveryMode instead of accessing the errorRecoveryMode field directly
a7e021da4c1948d452dd1a69a6a8dee2f7df6ac5,Updated ANTLRErrorStrategy and DefaultErrorStrategy documentation
6adf9bc95d27bf396032b15a0f6752e6e7934736,Remove unnecessary null check
df9685ecafa6d6e7319cb5ace46c3a358938b2bc,Update CHANGES.txt
c577f5abfe1f68261d2bccb835a5ac961b8baaba,Updated documentation in RecognitionException
cb6207e7076e8d769045e3e8ed4f8d7f8a03b70d,Updated documentation of Parser.match and Parser.matchWildcard
1d3910a78b25a16df6774bc33e64305d43c46db6,Updated documentation of Parser fields
f12de7dfa73b9a0cf8291bfdaf88d5969cd9e865,Remove unused (commented out) code
a087ed17ee2547b0784cba474aadb5a1c661c248,Updated Parser documentation
3acc78cf871d7709f51d0cbb8cd331ca6e3854d1,"Use full name ""listener"" for variables instead of just ""l"""
a60df9d28ed2ee28aa39447ad8ac4894c2b5480b,Updated documentation of Parser's parse listener related methods; event trigger methods are protected instead of public
18bb9dc9bea553821a299afcc05e83e6fa6d60af,Updated documentation of getBuildParseTree and setBuildParseTree
dd9ba73b6ff7e115ab1ef6c40dc083adcfdd960c,Improved documentation and use of the Parser._tracer field; made the field private instead of protected
0bdf5aa4d183c8e800bb560979282270510b58d7,Remove unused Parser utility method toStrings left over from output=template
06375af15e4ca05b70405bbb13c4697e77d7280e,Update CHANGES.txt
15a23c3cd91b745b88060449fd5dfdf9baee565e,"Configs ""in context"" have special meaning for predicate transitions, so don't add them to closure busy as a visited state or some configs could be improperly eliminated from the closure set (fixes #196)"
b4413e865642fc32145986721902c6f4d4954804,Fix handling of empty options{} block in grammar (fixes #194)
05f4b76fab637e118dc3172f067c5f60ad131412,Add additional unit test for empty tokens{} block in grammar
551100ea375bd3db4183ef3619c6f1e86bed5388,Add error 149: INVALID_LEXER_COMMAND (fixes #190)
46c12278a82f6ca356c7e49f366f1caad8814ecd,Add error 150: MISSING_LEXER_COMMAND_ARGUMENT; add error 151: UNWANTED_LEXER_COMMAND_ARGUMENT
7f029a3c80e833bfbcd2009b63c3dd6b9d02ea58,Avoid creating empty action methods in lexer (fixes #202)
c592e416379b33355d1daf7da82f22c5ea53b1d5,Split serialized ATN in Java target to ensure string literals are under 65535 bytes limit (fixes #76)
961f68c8655d534586cbce49b0bc035ddd986f1f,Fix incorrect reports of label type conflicts for labels aliased across separate *labeled* outer alternatives (fixes #195)
f75878b3e65397f6f6cb841cbf6fbac045960232,Merge branch 'fix-196'
71cc6fba8afff751205714e51961ebf8f4a16de4,Merge branch 'fix-194'
cae9f7bbf1a6e142ee19c5a253b81248f58b2736,Merge branch 'fix-202'
2242948c03577d0a58961729e5aca683ec842fce,Merge branch 'fix-76'
0e5cf32bf48157ec9faedda0337053c0ffa9a622,Merge branch 'fix-195'
ff10afe9e670c444828850ddf5d288e265e16277,Add Jim Idle as a developer to pom.xml
afc65faed699a26d2dcd44061d55f2e188f6e6b2,Fix issues with automatic site generation (plugin-info.html and antlr4-mojo.html were not getting created)
5462e2868a00b9af35ce7a3c71ed66aaf012ef28,Fix documentation links to the antlr4 goal
cb991ba46d0a913664bab1a5f629dafd167937d2,Merge branch 'maven-plugin'
805430177c024ffb39b99174d79c2e30dcb1e978,More thorough testing of tool error reporting
7235d71cc0e6cd21792f059cf95952206b531461,Fix NPE revealed by updated testing method
4433a57baa994288b74736ce26463fa66f253b2e,"Strict handling of redefined rules (do not attempt to generate code), fixes #210"
f4ae1cf471cb89abfcd3f417a9b1266bdd31d98c,Updated documentation
31bf3ceef0193770780722454692bb8133add7f9,"Merge pull request #215 from sharwell/error-testing

Error testing"
05f667d2e5528eceb5587983df870fc937531313,Initialize the elements of the decisionToDFA arrays when the array is created
8b3062175df93ca8ef000d9d15cd381d37534f0c,Fewer and finer locks on ATNSimulator.sharedContextCache
5c2b7646705c9a929904327b40d58d2451881412,Finer locks in DFA updates
bb18e14e04a72da5c244c9d11e5ac9df2067876c,Throw UnsupportedOperationException in not implemented method
db85cbc257def9f1b5d6dc3dfbd5187d2902cfef,Fix EOF handling when closure operation was skipped (fixes #218)
9236477438c17b61a64b616b373d76538eb5e99f,Fix code in TestPerformance that clears the DFA
785585199c2eba08abc7bb1fbf691ee43eab25bb,Separate MSBuild integration for .NET 3.5 and .NET 4.0 toolchains
6b0890a5104156f0f157b8d4dbbe46b0a807c3cc,Added Antlr4.Runtime.CF3.5 assembly for .NET Compact Framework 3.5 (requires Visual Studio 2008 to build)
44f943486b2283f13d1e8a4f7d8ed193331c2159,Remove incorrect assembly reference
78e9b97437138c78641325f642333cbde71c7674,Update assembly names in UsingTask definitions
75ae586e508e58fc7587a4477a355073e9b52e18,The Target element in MSBuild 3.5 doesn't support the AfterTargets attribute
e0300618c70e464692efdf91227886fe9444f326,Fix grammar IntelliSense in Visual Studio 2008 / MSBuild 3.5
9babc9527a208bfee5787d322cee0ee102d9ee9a,Merge branch 'compact-framework-3.5'
290c5d5e8276afcf63b86be3b87c295c91e0e9db,Fix output path for release build of Antlr4.Runtime.CF3.5.dll
d01a221a6f51322f3a9af833957e532aa3ea4ce9,Generate XML documentation for the runtime library during the build
6e198f8e0e72febfbbd8c2c3de463144ecf4dd00,Fix XML documentation warnings
bf4f198fbf34758473739bb19c091fcb7e5c85cf,Fix build error
7a7f4a78519e5ea916c1b8ff3f69cf5bc7cd65c3,Must check rule transition follow states before eliminating states in the ATN (fixes #224)
bc9fd41ae5b510e5353b006113fdbbd447ac74fa,Remove unnecessary local
3defe6a2b18b4646221e0983442ba87d23599374,Remove comments with incorrect concurrency requirements
74f4938033a1d4c3f6a08e7b2a2c451527baeaf5,Remove unnecessary duplicate conditions
2410b97aab94919b285261108f62c5733748b4b9,addDFAEdge needs to return the true target state of the added edge
a90529720ee949169c2342fa2f127e5c591ec5aa,Don't try to optimize read-only configuration sets
572712872227fcf03d97593e0bccffad6b99a759,Allow ATN fallback in parser to continue to use DFA edges when available
2393cfd40ec885281f6cee06e8b0fd64ff36149c,Remove unnecessary locals
64354e57401942537f1a474d6960a8715cc0f03c,Add computed state to DFA before moving to full context simulation
9206a263b7972f1a063a5c2d7f99305ed13190ba,Add error edges to DFA
aaea26ee3a09fb57825314dfe832c027248d86e8,Remove execDFA - it doesn't do anything execATN doesn't do
a4d174f44b25200a2dee7c8dd3e447d67ebd3234,Remove statistics that lost their meaning
43e73c8da9d66b7c7fa0522802dcb437509d4903,add counter for stack graph nodes.
007308f4d231d7989b9384116b5579744bce2581,"Merge pull request #226 from sharwell/parser-simplification

ParserATNSimulator simplification; removes explicit DFA or ATN with stack simulation."
c81a839897c9252e2290bc4ec58cad4fb13317cc,Merge branch 'master' of github.com:antlr/antlr4
bc4b530b3b826ca685f4bbea511e803877950500,tweak my tests for java.
ecf225838095b7cb07e64ed7392d8d3cdbb00df6,"Revert ""add counter for stack graph nodes.""

This reverts commit 43e73c8da9d66b7c7fa0522802dcb437509d4903."
e438b60f37b839feb9eb30a7075f030411e1212f,Add the SHUFFLE_FILES_AT_START and SHUFFLE_FILES_AFTER_ITERATIONS options to TestPerformance
82f4d07243c98fbd4b05af0b7e7adc67a3566416,Default value for TestPerformance.BAIL_ON_ERROR is now false since it's overridden anyway for first phase of two-stage parsing
f5294204ae74e441615e38adb1d1c23fc9c09c3b,Add the TestPerformance.MAX_FILES_PER_PARSE_ITERATION configuration field
6c8a6178eeb7ead5309bfaff11f722903b3cd421,Avoid constructing the mergeCache when it's not needed
a55a94c26ed662c8117e620373be87c8d6e5a5bd,Use a better hash code for DFAState
7ebcc41b7bab3c37ca22a34c9061231dba41ca2a,Cache the ATNConfigSet hash code after it's made read only
845bf53a5183b2a2e99b707463987176cf76200f,Use HashMap instead of LinkedHashMap for DFA.states
e7b84c13dd1e139940656715ce51a24b8bf1d73b,Add comment to TestPerformance.PREDICTION_MODE configuration field
94b06df72fc8fd855f3319674858e27487acc693,Add TestPerformance.ENCODING configuration field (default UTF-8)
5280b68cabc1a66b54e7221a452a41dc7fc0526a,Add the TestPerformance.PRELOAD_SOURCES configuration field
b9918b9e254898f105b30e60c75fcec3f3adaa74,Remove unnecessary null checks
210dc31a43fbed3222b2028926aca7d63326ba53,Print the proper statistics when only a subset of available files is parsed
c8701a94341e5249ac74f4ceabab3510a1191e02,"Support directory filters in TestPerformance, add a variety of additional FilenameFilter implementations"
a670d7d2b0ddfdaf866b6d7fa071260f04494279,"Support Java 7 ""try with resources"" and ""multi-catch"""
69f22f801277864e8f6c8009878d8497d91e10c3,"Allow extraneous ';' in annotation interface declaration (not allowed by grammar, but is allowed by compiler and appears in some source code)"
df336b4e5935ecdc4fb2b59e2d374c23de4a4e50,Remove unreferenced rule from Java LR
4b6d0d9ea215d632a2ac8da5728dbe0d71b48c4a,"Support diamond operator, improved support for explicit generic invocations"
ad41c3b14f5cf563db7efa8f08756580b4fbd775,Assignments can appear in the middle of a ternary expression
f1fc42024fd1c6526bbe7ff52e7922ff9ac1ea7f,explicitConstructorInvocation was broken and unnecessary
be83edf6d04aa659834ccf2bd0c057dd01dc5acf,Gather additional parsing statistics from each file
cb1ea47ecc42a84aabb0b06e6ac465e770a9533b,"Merge pull request #231 from sharwell/performance-tweaks

Performance tweaks"
88e836c4d9536862f1a5007019cc808d6cdd6cde,Remove unused class ParserATNPathFinder
15577fd21fe21493a42b3d7222eadb8adbe0cb16,Remove unnecessary method ParserInterpreter.predictATN
25676332fb3cf0741c03e92a53cc141dbb045a9f,Remove unused and undocumented method DFA.getATNStatesAlongPath
ef8b10ebc48ea4e7479485381a73df52dc78a7a4,Cleanup and encapsulation in LexerATNSimulator
1a07a6b6fa52bba5fdc68ee6e38ce2014c945ff8,Improved encapsulation in ParserATNSimulator
297754fff52e3cef8fd7ee319938b96ac41bd1f0,Updated documentation for addDFAEdge and addDFAState
f015942b5e0418eec59a9be4ca03b68b766a848e,"* Simplify creation of new DFA edges - only create the target state and let DFA code check for termination conditions

* Fix handling of previously cached error edges (always need to check previous state for reaching a rule stop state)
* Fix DFA created during SLL-only parsing (should be identical to the DFA created by full LL parsing)"
ca0b0ae74c04713122182d30fbf0d8bc098d7123,Extract methods getExistingTargetState and computeTargetState
5821747a42f59b900ebb8fe2144331c88abec6cd,Add TestPerformance.COMPUTE_TRANSITION_STATS
dda9ed9fab61391fc631a8f1624a370ccf67cd8e,Remove unnecessary null checks
c9ceb48a3c33f28834b0e54ea018f0fc2bcdac0b,"Merge pull request #235 from sharwell/prediction-fixes

Prediction fixes"
eb9eb17aa218a597f8e1e88643f42f8706e3ad5a,inline predictATN into adaptivePredict
646f673d841f13614f948131592e4847b0943d18,Track token count separately for each pass
be57daa108cc6d8468b17307f0f9b1b5756871d5,"Remove unnecessary reflection, fix option to not reuse DFA"
8f7c43fbf6f56d1be207faebf6a151092784055a,Support computing and displaying transition statistics
4dfa2458981877054f16767c38b20f8dfcc574e0,Added the COMPUTE_TIMING_STATS and TIMING_CUMULATIVE options to TestPerformance (disabled by default)
3558151e561d7da5ad773390a409049c3d4d1e3e,Support parallelizing TestPerformance across passes instead of across files (controlled by the FILE_GRANULARITY flag)
cc0d0506224774d3b435ea44da75a79133a6264a,Display the current pass number in TestPerformance result summary (helps monitor progress on very long runs)
28abae9cfb29083f70b91d48026371b3172dc2fd,Add the TIME_PARSE_ONLY flag to TestPerformance
d147e9202d3a4a5eb1275a3af1d2a902e8154be3,Use ->skip instead of ->channel(HIDDEN) to ensure reported token counts correspond to the number of parsed tokens in TestPerformance
d75f8e9aa32194c1ed4f78f5cd8f0e225fc48d40,"Add the DETAILED_DFA_STATE_STATS option to TestPerformance, which shows a breakdown of DFA states by rule (parsers) or mode (lexers)"
9a75c629d2b6fb99f9f16db67ba74be4a6ec91ac,Added JTree to TreeViewer.
2fe7804ee3dd5c1148bcc81aa7fb4bf6f1e0f868,Tweak TreeViewer layout since the zoom slider only affects the visual layout
a7d28388388fcd5b54c99da6c49c4c6b803efb28,Add a default title to the TreeViewer dialog
fc21b41afb93c197b8c371490c12bb1e87b72c87,Update PredictionContext to use the MurmurHash 3 hash algorithm
d67d924b0d36a4f84494b79abbb000833749f130,Update additional classes to use MurmurHash hashing
e1dfa24b8d3f4dbd59504378474b3ed631e8b712,"Merge pull request #246 from sharwell/murmurhash

MurmurHash"
ac7cc7daaf58905689a96f20ad28e9b38f530f98,"Merge pull request #247 from sharwell/parallel-testing

Parallel testing updates"
9ea47475240a753548bdfddb7a7a89202b6ab762,Call Future.get() to propagate exceptions so it's easier to spot problems
3694d51c4eb8bdce7a0d15d2705efd704a54fd74,Don't try to report detailed statistics for empty states (fixes exception in lexer stats reporting)
0fac5ce133022ac154094137950c7d060cea6362,Use System.nanoTime for more precise timing results
0652b61a3380d4b38bd4e3ee95b6b5d2e3a9227b,Default to FILE_GRANULARITY=true
af59f354818d0242e2c5fcc332a6c454d604d0eb,Count full context transitions in statistics
32d4c85f0f85e6af959b33e828edafed3be62e84,Rethrow unit test execution exceptions wrapped in a RuntimeException
5e472f253ba4f62934e2a10792059a5b6957be19,"Merge pull request #251 from sharwell/test-updates

Test updates"
33c316baa4184f861da9104a4fef1bb75506f734,Use a called rule stack to prevent stack overflow in LL1Analyzer
c0d1fcc110386aa10f42286829ebc3f77ce1d0de,"Use 0-based indexing for decision lookahead so we aren't wasting memory, and array indexing is now consistent with ATN state outgoing transitions indexing"
35ef516e282e3f94eb8ec283c0dffee4460ddd29,Add some assertions
1906e4a639c118ff325d0b88974cb76cb83a9707,Use IntervalSet.or and Arrays.copyOf instead of duplicating their functionality
f9f48838553a36409ff04ef3b81e768754d9b599,Updated documentation in LL1Analyzer
d9d51001057eb19ba6bb164d88310e318e330f7b,Use JavaUnicodeInputStream for proper handling of Unicode escape sequences in Java source code
5948f50288fdbf90adf778f17242b5fb349d8479,Proper Unicode identifier handling
0e5bcc2416818a17e5e46f34b9df2a207cc3fd2b,Report file names with lexer errors
62cbab4f860afba402cceb86c535956016cf3044,Use explicit groups so the ATN can collapse sets
d9e1289d13031b2fa17bbdb05cafe6aec28ced3c,Add keywords as explicit lexer rules; enum and assert are always keywords (could extend JavaLexer and override emit to change this behavior)
9bd3e965effeeb755bb59a8c5e8de2fbe22988af,'true' and 'false' are both lexed as a BooleanLiteral token
f5ed71d2b909c8fef8f301a7d80d76f8e309e22d,Improved support for Java 7 numeric literals
0f4ec397da071f547bea1c0f08221cc53fd649b8,Add NullLiteral to the lexer
ad2b5876a54c164493ed8c3fa5ebbc1b0de21489,Add separators and operators to the lexer
c835fc9a7971c61333925b2c697a7992bd48e442,Add unambiguous shift and comparison operators to the lexer
49f9e093e87c4f30e195f176f46db57214eb92f7,Clean up character and string literals in the lexer
f758e8e24d3ab8d18d72f051a1def534b4bc48a4,Some additional lexer tweaks
8ab215373ead114256a96e6010bfc1f1930890af,"Merge pull request #252 from sharwell/tool-updates

Tool updates"
649b930a929b5ef2e2661963a00472fc2ed81b45,"Merge pull request #253 from sharwell/java7-grammars

Java 7 grammars"
aad78ba7d29fb1bab77f6731e4e83a71be8df119,Fix transition statistics calculation when a file contains no transitions
8d0a1bbd8d4bf9188e456cb699596592ef6b0fb3,"Show additional information about rules and viable alternatives for conflicts, ambiguity, and/or context sensitivity"
d8f2a5ce3c791e5609f29d911f199902ec3acf7b,Pass more information to ANTLRErrorListener methods
0644d1a4710fc750256b88e532c805c26b7c6180,Remove statistics gathering from ParserATNSimulator that's more suited for specialized listeners
ec8457383cdac3f1a274bda99d0da0b48a35fbff,Calculate detailed transition statistics per decision
ac72875491fe75b233da8e355ca7cd2f38ccf399,"Merge pull request #255 from sharwell/detailed-statistics

Detailed statistics"
f6255bd5be8e0c0c9df5301bf915a620db0bdc9d,Add regression test for #248 (already passes)
d6c3841b0ad70c75428960fc9f9a0a5e0b234f1c,"Generate Javadoc for the generated listener and visitor interfaces, classes, and methods"
13f121a16f7e581d9614a8f0a4c9d357b02d1abb,Add @NotNull annotations to listener and visitor methods
6cb8502606ed4db71eb6635fc780620ef6394850,"Merge pull request #258 from sharwell/generate-docs

Generate documentation for listener and visitor interfaces and classes"
469ebdd6e8c8fcee71f255424fbc629c0d85138f,Fix unit tests now that the parser might not compute the conflicting alts BitSet before calling report methods
611e5ebf0218c514aa384db2f67b25af96476ceb,Significantly improve the performance of JavaUnicodeInputStream.LA(1)
d3af4a2f3a5cf221cda0a973da91857218b21a79,Report errors that occur while lexing a grammar (fixes #262)
2f2fd4585e66d3b99a4ba5906bca84350930bd23,Improved error message for unterminated string literals (fixes #243)
f1f134c9628e945ce47d501e7bd1ea1271858e16,DiagnosticErrorListener includes rule names for each decision in its reports
780b7ac4ce934cbb1aea602f82d295a52f9717eb,Document ANTLRErrorListener and DiagnosticErrorListener (fixes #265)
85538ecf3c04fb26db50b5ac49f758b7f8aed08b,"Merge pull request #273 from sharwell/fix-265

Document ANTLRErrorListener and DiagnosticErrorListener"
dc801ad6a7160ac18b7da5eac7529656d669349c,"Extend the supported input character range to include all UTF-16 code points (specifically, U+FFFF is now supported, fixes #267)"
9167968b74f03b725fb4aa7d78002c4504b2086e,Only serialize unique sets (smaller serialized ATN)
2a904131888486fb153cf385abb137170563d425,Use standard 0-based indexing
eeda06b698af194c2684004ea810b82595474ac1,"Merge pull request #274 from sharwell/fix-267

Support character U+FFFF"
9d11817667abd233cb51b5a0d6147994eef709f0,Resize ANTLRInputStream.data after reading a file with fewer characters than bytes
4c45a4bc661f029f2af1f7f6e87a700be0080aa6,Reduce GC requirements by creating fewer objects during closure
84324f1dad2594eeb658c07307dd2b1c8231e97c,"PredictionContext instances are not naturally ordered, so remove Comparable implementation"
ba532cdd494faf5bc4e2347ad31b487ec6f26c7f,Support list labels on a set of tokens (fixes #270)
6bf738cabd188baad0ce39881c76eeeb77481603,"Merge pull request #279 from sharwell/fix-270

Support list labels on a set of tokens (fixes #270)"
6fe7154c44950af59da3ca393e8b2f2aaec151b1,Exclusive or operator is left associative (fixes #280)
cd73c212fbe3a94213c456a7a0a1470111b39acf,Add regression test for #239
3bb774a50837de5ec10e5ea79eaf6c0872ed23b8,Add the EPSILON_CLOSURE error and EPSILON_OPTIONAL warning
40f41e2b1c337be3933522f53a4f1ad030be4501,Fix ATN created for non-greedy optional block with multiple alternatives
c5f50846cb4095abc7a49fa68b983943ce181d6a,"Merge pull request #277 from sharwell/raw-data-length

Resize ANTLRInputStream.data after reading a file with fewer chars than bytes"
e575dc40e3ef70642c5eeff18b4c13fdb7d81bd1,"Merge pull request #285 from sharwell/non-greedy-optional

Fix ATN created for non-greedy optional block with multiple alternatives"
82330a8a785e340e5d7bdef5cee9c3399fb41623,Support Unicode escape sequences in JavaUnicodeInputStream with indirection (multiple 'u' characters) (fixes #287)
0495e819fd3c89e54e4b2110fb7cfdd3654a134a,"Merge pull request #289 from sharwell/fix-287

Support Unicode escape sequences with indirection"
f6bcbdba610756c1af8b4bc9ba2d3017f72e6535,Remove the ParserRuleContext.altNum field (fixes #288)
7453ddaf72339b195c6cd75dee6e3f4186c0ceed,closureBusy set is only necessary to prevent infinite recursion for right-recursive SLL rules (fixes #282)
b0ddb4565496dbf890daa9c16ecdfd4a1bd89688,"Merge pull request #284 from sharwell/epsilon-analysis

Add the EPSILON_CLOSURE error and EPSILON_OPTIONAL warning"
c58721b78c67b4a60ba63e77063a997376e61cd8,Merge pull request #291 from sharwell/fix-282
ca213689619bd108f2fd3863676ea4400f2c220e,"Merge pull request #290 from sharwell/fix-288

Remove the ParserRuleContext.altNum field (fixes #288)"
c3af4e9b7b231a00fd37a253e97d66443539b508,Merge pull request #278 from sharwell/reduce-gc
3fb9a60386cfca12e03f8cd9cadd2da4ceb8f6d1,Updated CHANGES.txt
931df811dbc7568a03485da416839cf4445afb22,"Remove tool/playground from source control, add to .gitignore (fixes #293)"
36acb139b7b8af91a972d577fecf2453911b6c9b,Remove the SET_QUALIFIED_ATTR rule from ActionSplitter since it provides no additional functionality (fixes #295)
28c240c54c3aa54660d5131e049b1fdbaffddeb5,"Merge pull request #296 from sharwell/fix-295

Remove the SET_QUALIFIED_ATTR rule from ActionSplitter"
b7133164f43b9769e3ff29ce9d190394b393099d,"Merge pull request #294 from sharwell/fix-293

Remove tool/playground from source control, add to .gitignore"
6bd55c09a5a7ce19068b1e284d8106b929b2fc3a,update 4.0 to 4.1 in text
cb532e152854195bf2ac225c4203ccc6e1ea7fe0,"Merge pull request #297 from parrt/master

update README / CHANGES 4.0 to 4.1"
05f7fc6500f63040ed55e7c6d5812475bb1bd5aa,Update development version to 4.1 (from 4.0.1)
dbe1390c6fda9851315781da5ad5746a6ed36cb5,Update referenced maven plugin version numbers
89a251e4973eb03a1eed5793d3b05864288b5486,Simplify ArrayPredictionContext.isEmpty()
6236072e3b1f783392738d949b489c9997400943,Documentation updates prior to release
3468a5fbd868ce63c4cb61782e9baddac2ed24ae,"Merge pull request #298 from sharwell/build-updates

Build updates"
274120c2b6ea059ad8e9538103163667d2575a2c,Now working on release 4.1.1
e48e2d7436a283ceba30b87b72e53369ac822337,Add LICENSE.txt to repository
50709540501eadfb93fd8ec2273b570876eef32f,Updated pom.xml - now working on the 4.1 release
880bc161a2467a78d6b8e1f7102e1c1e3f580dd8,Updated Maven references in pom.xml
6736b3f900e79c158eb6dcf73516006b0a62e60f,Added NuGet support
f74aabfac8f42c320f578dc86f84509132bc9614,Updated to match ANTLR 4.1 release
fcf2482ab33a613bdcc421363c1475cc6ce97d47,Sharpen can ignore JFileChooserConfirmOverwrite
8111fa587282b9ba453cdd6cd5d1636f912fde1c,Merge branch 'sharpen'
a4e5bfbae927050b0431dae13c0b943a3c76a40b,Fix build errors
81459fb10c031b17fc1faeb523f41fa5ef716a43,Simplify and fix bugs in ANTLRInputStream
9c20726f0aa84897c84c5f9d2affbbbd3cd987c8,Allow spaces in the project path (fixes #6)
a2a1eef6c3f39fdfbabd7c4ae80e4efe86f3700e,Updated several documentation comments
c9a02cd707b637b2ef492b2579a3eff1490f0360,Fix behavior when spaces are in the path (fixes #6)
1fc1f5dda73ceb5ff956ef6478a1b5a25b46eec6,Fix Guid deserialization
66c64be11beea0c76784f51b36347438ab785e8d,Add additional logging for exceptional situations
4f043c87c778f05c951ae44e390d77b9088c2d9b,Updated CSharp.stg to match changes in Java.stg
b9d3a129adad4fd8fe0fe0c133d65429fb127647,Fix build error in referenced project
1e4a53919f883e457aab4f8343226d06ceae1423,Add generated code file headers and [GeneratedCode] attributes (fixes #11)
f4f905ea0e4ffca8d53dbbfc281429f5133fc88d,Fix code generation when a rule or grammar name matches a C# keyword (fixes #4)
27c3e35cfddb534abf28a5522e63ac8649a2f7b6,Forgot to escape bracket in subtemplate
4de1e1b82bd151f1e18af2cc0657106ba4a12bd2,Fix code generation for additional elements that match C# keywords
d27cd5f634b85d3ab74ffc4b86a0cf6e30cca4a2,Build separate NuGet packages for the tool and the runtime (allows separation of VS2008 and VS2010+ features)
d041a4828a4c8c95014cb25c875cfc1f9f4683ad,fix poor function name: setTokenAssoc
185ee4e18e33f03b1097e27343f33403c4739004,add <options> notation to alt right after pipe. rename elementOption to ruleElementOption as it now can match options on alt.  Move AltAST to have options.
531afe5af8ca9768d55779c3db87db48ecdacf1e,"changed grammar to allow <assoc=right> on | operator for alt. still allowed on token refs but ignored. Simplified left-recursion elemination rules. see CHANGES.TXT Aug 7, 2013. BREAKING CHANGE. Must alter ternary op alts in grammars."
19fce5dd7d97c9fd67420ece037067656511ffc3,change ruleElementOption back to elementOption
2637d643201931f95a054abbc7242da7cbbd68fd,"Merge pull request #314 from parrt/reorg-left-recur-elim

Reorg left recur elim"
04d2b5b92dba49b569c18ccd18319adce63f5910,Add regression test for #315 (already passes)
62acd30eca560ed105e1cb3a4bd5cdd5a82fd4b7,"Merge pull request #318 from sharwell/test-315

Add regression test for #315 (already passes)"
f138278cbcabcde25ca05ad38f04509c8bf20d38,Update contributors.txt
a4a957a316c8c157df7bb156382b446d4ff445cd,"Merge pull request #323 from cayhorstmann/patch-1

Update contributors.txt"
8897097b955802e043c364e66030cc6fe22db7fa,Tag generated classes as non CLS compliant.
d1b1bb0c0291c47a4c8b689a46f5c7f686cf5012,"Disable compiler warnings that are irrelevant for generated code.

These warnings are turned off:
CS0162:  Unreachable code detected
CS0219:  The variable '...' is assigned but its value is never used
CS1591:  Missing XML comment for publicly visible type or member '...'"
ac626b02a1dd188eb424610d2af5021a63c69433,"Merge pull request #22 from rharrisxtheta/antlr-patchset-1

Small patches for minor compile issues in CSharp.stg"
9918154f34d97cd686a780f1281b49cf76648e1a,Fix the case of two files' names
68723eff20cb7cbe5e2fd93453ad07554a5797e1,fix null ptr exception as reported by Coverity
b411ccaaa4f1fcb31658b2cc073770eee14aae58,"Merge pull request #327 from parrt/master

fix null ptr exception as reported by Coverity"
9c186c8d5299e1dcbc8e0c486c3e07c4ab6af0a1,rm print statement
d4f2abc5e3def63190c7ab124c5a70dba9e70661,resource leak fix from Coverity Scan
0ac47437bc54c7fc42408335b4005e2f2af2d2d0,rm potential null ptr deref (Coverity)
9420672520ebf8397af0ecb50c50c1b4e891983c,"make explicit that graphs must be EmptyContext, never null (Coverity)"
1febc36e155bff1ddbaaad33f941e4fad54d19cc,avoid potential null ptr deref (Coverity)
21248a42ca3d2be77931f87f211afec9c1dd671a,rm unneeded null ptr check (Coverity)
8bff26d758f6e739fc4c67aa31cc7fcd9c1319f2,fix cut-paste error (Coverity)
875fa0a31d42956e5eab28f0acab1ebf29fbcf05,rm dead code (Coverity)
78298bb382e4ed7d79781b206954218df1de36ba,defined compareTo but not equals/hash (Coverity)
3e53c0c61d12d99cbf3897b2e79a1b0dcd1e1cc6,"oops; deleted side-effecting ""dead code"""
d0b9e7388cd76149ae3bab1de503161326a5369f,change cast to null chk (Coverity)
a7a2050fd2758447e733b604920c106c8e2f72c2,rm dead code (Coverity)
d22290d44fdcdca9b81b0aa962429e1ee05bcab1,consistent return of null for empty DFA (Coverity)
be0d6b3fce05ef9a6d75573eaf74c1f18c936fbf,clean up equals/hashcode for Interval (Coverity)
ba6c711e85a6d8c3e287d39b3ee5c99ee77df747,avoid resource leak upon write() exception (Coverity)
fc2dfcda96eadee94c15ce20eaa54b7e3ae75d1d,dodgy code cleanup (Coverity)
2aade3eecc4662c70302be04b8d33f92302668e4,avoid resource leak and cleanup (Coverity)
bb1354b522c5ffbf1ee9eb1ce7ac0401795d454b,add note about Coverity cleanup.
6d1d0e0488670c5f394f2b1b025f57e5082d9856,"Merge pull request #329 from parrt/master

Lots of little fixes thanks to Coverity Scan"
3416f6db059f3ff2e57969ae37019a18612496f3,playing with initial matcher
b4a7ace9118d29241686dd46ff4b19be15fd1a32,got decent start
d4316ff44b016ba906908363720392b74b3e0066,ah. stupid intellij didn't submit
1070d3a10f36cd62a1f52578885ab21785179eca,"improved tag matching, got escapes working."
5f60ad859e0eda9d1eea32b3d253b0c2bb0e9dd7,stash
56cd7cdf2c3845d4833a34dfff46ae3e732bc737,split apart
531c31861a12ac6ebc4a4d7edb56abf0c7dea10e,got basic pattern compilation going
731b0f65280e9d74ca565635ae128aef574fc6bc,damn intellij
4b87f84b99749b8ef0b04b87a08df7c4dcc89492,got decent test rig
d2f7ba83391a563d4fe1c2bb45b6303b9a17cdea,cleanup
35e279cef10d9ac2d0435b4eda5f02420fe9d4a9,change name from T.g4 to X.g4 to avoid weird classloader issue. TLexer lives somewhere in my damn system and I can't find it.
754348605dded380d7759084f91759e6ac8e3f25,create match object for matching
b1c4c77d28fa68adaa038f5f736462c0a936e8af,tweak
cfac804b576d5a56266793a33c43dc585e06a146,fix error handling to just match <expr> as token under expr RuleNode
7ead36fb4b865f4cebd2a4a0ebe45613935aa63f,fix error handling to just match <expr> as token under expr RuleNode
0df4411ea7a80d8017eab810e3e15eafca0ee245,got optimized tree back with <expr> as single node
90187039f0cb12934ae33db9aaa4b183cdd01f87,foo
94d3c71b023956b47c901ffbd889ab0f87689a15,rm unneeded IF check
f995e474435f8e4fb96c5d576d9b5eb23ce747de,rm ruletag from ParserRuleContext; back to (expr <expr>) for tag in pattern
95aa103dc260ce86c778f270ab71d1cec7431a26,matches text now if not <ID> node
6a26f0499fe943117f80c7bb5fc8179495e30412,a new test
76b4eef60aa95370ec66c06ef7cc6ea0c300e16a,more unit tests; add <.>
4055c2417132ff81ff4e2fe98b004bad325a99c1,add comment
145aeb955d8c1b4b9d119572a7e472626266f6a1,initial add of xpath stuff
d2caae46a787bcab670f860d77d5b06b303306ba,working on xpath
d505a393ef675b72d21cdfdcbc87826c0c58e867,tweak
00fa2c7617b0a8fc467d42298cfe5ea3b89e9f3b,add getChildren() method to Tree.
cbd6e17925603994da4a50281bd1d75ec0566c96,oops; need method: add getChildren() method to Tree.
76418c2b9b4a8ad6962c3cf3d18e89f67de22d2f,refine getChildren() method to narrow return type.
913cda0721975f69c55252b07b2492c5e342ce74,adding more xpath expr types
20d8545e3d9b4f14146fb4094f0737dc3010e759,stash
8237952cbb1efdc87dd9ff6f1d9228a5cebc2ab3,stash
3fda64f85bc3d330ce9a3d27102ea79b0544af73,got a draft implementation
088cd4a9bcb33cc67688f00daac9e1731d338efb,got test rig start. added support test rig stuff to exec parser. add findAll to ParseTree interface.
09ddded3ed086da12d7e11bd580dea8a1a9586fc,cleaned up test rig. more tests. fix bugs.
211f69d0f13335bc27adac5dcee33dd71c4366c6,simplify
a86895c557573499c30eb15228b7b41ca84b3f39,prototype xpath
01082414c35fe676d336a7da162824e59eec834e,rebuilt XPath using ANTLR itself; added error handling; added ! operator
004f47174b3412acd057fe3b627bb165a331694a,rm comment
3db39af8b2b3727c644d074e16712d6935aef290,Change AntlrInputStream to use TextReader instead of StreamReader.
2ac3c96464e448c415aa929fd0d2e5dc85165c52,Use TextReader instead of StreamReader where possible
bb6f6fc0264d82c7d7cab8f77954a9743dbd982b,Generate code with `DefaultMode` when a grammar contains `DEFAULT_MODE` in a `mode` or `pushMode` lexer command
a16bd6067ce9cf568aa89fd8e040e4f402052a78,Generate code with correct channel identifiers when `HIDDEN` or `DEFAULT_TOKEN_CHANNEL` is used in the `channel` lexer command
c0aa59cbee4f90c7a0f78d0dc207a534742592a0,Generate code with correct token names when the predefined `EOF` token is referenced in the grammar
6b1cef745c24e26802671af95d46f80c51981ec0,rm unneeded getChildren
76633525bf48bbec82da50c29999a1bea14d6d1e,rm comments
8aeb90ef82794841a2bb4608ab765700b21ca379,mv findAll to XPath; rm old test in playground.
cc421addfdccf2cfe592b7c601a96b9561766992,add antlr4 to build.xml
3f3e82682003ad55702f324da6e6b621b08c1d40,was missing gen'd v4 src in compile target.
5e7c1c2cf15593654c81ee769eb6047ac673d6d1,update changes file for xpath changes
3ab273363575db64ca2d8ed3fa5356d21efcaa71,-package not @header
9cd32f36b4ba3c331b3d9d751ac41b46661b5a3b,remove comment and package spec from grammar
b80ad5052d1b693be6e5c0a2be8bf87e15b86f18,Add regression test for issue #334 (already passes)
b14ca56441196d63b8974455c0050bfaee4cb3a4,Merge branch 'master' into precedence-predicates
7e3711aca2cfc45cf1434b704569d0775de399ba,Preserve backwards compatibility for grammars generated with versions of the tool prior to adding precedence predicates
b26926570df396245d1bd5f1cf622e4240604890,move getChildren() from Tree into Trees
02dc7b44fd4b2fb32f88af9b1cc2dedfd78fd816,update changes files
57803820af3d9e369cf99123a19266b70d2f2303,update notation in changes file
e58045474a751354a97c8e2221aa54aedca37129,update changes files2
a3d71db1bc71800903dc5c5811abe347989ff440,"Merge pull request #352 from parrt/xpath

Add XPath to collect parse tree nodes/subtrees."
2b5f1c14a1c5e7bed3fa195e29d6bc3a950288e1,Add deprecated methods to preserve backwards compatibility
b2a4bb91a776fdba05356d298b9545883f02a4db,Add ParserInterpreter implementation
e02968f0e7efaa31e7318847cf086e7617f76556,Fix set and range transitions not matching input in ParserInterpreter
7165a42d210cfa3117ca06fb650215ce7cac12a0,Make sure to send the final exit rule event in ParserInterpreter
508817a706b200ed7c446969a2a46fa374d425c6,Fully quality type names from ANTLR 3
f6024aae0a3ab9b679cebc5936d9308dc4704fb1,"Updated interpreter APIs

* Add Grammar.createLexerInterpreter and Grammar.createParserInterpreter
* Rewrite LexerInterpreter to extend Lexer (greatly simplified)"
33043d68c28c6e01f71c99a7696d289dd29f40c1,Add the USE_PARSER_INTERPRETER flag to TestPerformance
49970a46b063df11cbd1eb52b01d368b83bc4606,Improved handling of parse listeners in TestPerformance
320fada3e3aa7cd8636e7a09e02f67acfc0325a0,"When building trees in TestPerformance, compute checksum after the parse using ParseTreeWalker"
ab931e44490be46154ed9e85025969a1c0e19348,"Merge pull request #97 from sharwell/precedence-predicates

Precedence predicates"
52981a1d9713efb7e797a53a8cad20a810dbd858,"Merge pull request #353 from sharwell/parser-interpreter

Parser interpreter"
10cd96f8096464e9cc270c3db208a71ecb8340cb,Generate code for XPathLexer during the build
3309c9d85e9c1fdfef1ad53f1e498979faa5bb8f,Fix build warnings
df0bbf42e1f17f239dfa88b1501874f9b6388720,"Merge pull request #354 from sharwell/xpath-cleanup

XPath cleanup"
2f902da3d2b932717a92c93a30c53b91de754adf,pull master into branch
8cace4e182ec70e4def0e340f0a4fec00fca887f,pull master BaseTest
6eb8111756bd82821174f7b7f63fd99d102350d8,Generate method stub so external calls directly to LR rules do not require the precedence argument
f99cc52d391b6fe01245bdd0bfe8c6ec13e8d0b9,rm any/all pattern
b447256f2073a3dd5113f0f270ef332c81326521,Extract ATN deserialization to a new class ATNDeserializer
affbe510778b3ad834a1e37dfdbdc8eb9636a669,Add ATNDeserializationOptions class
c4c2546fc9447f99f95958d22bfaf6f6894a8d22,"Add the ""verifyATN"" deserialization option"
0981a397b53860a7f40999952f6b2c7f9df2615e,Add option to generate rule bypass transitions during ATN deserialization
889c831e1f8bdd70ce8337a1878973fb69b6e613,rm wildcard code
92a32606cfd2938f26607c8133d2b2c70821c0e6,rm unused lexer
f4bb91d75834413748de02516077f28dba2bb0f2,"Merge pull request #355 from sharwell/lr-method-stub

Generate method stub to call LR rule without precedence argument"
02f937b115ebca0665e00111cc7ed4e0423a2724,Merge branch 'master' into tree-patterns
5a6709aba6d6b2afaad088dde3830bc5b162a7fe,"update changes file, tweak parser interp test to use new api"
ac9af4507eb81ef152768c18b49f8e42b6540b37,"Merge pull request #358 from parrt/master

update changes file, tweak parser interp test to use new api"
42e53432875997d5fd8ad185183ac84f217a4cc9,Merge branch 'master' into tree-patterns
41d9d5bfd4ea401cdbdd058577e176d3f941eda5,"Merge pull request #357 from sharwell/atn-deserializer

ATN deserializer"
3439df0fb05d25d59e9a52ba4e8227db72055147,rm unneeded class
127d9bce3c3b0c4c86eb0bff60215fa8bc74ff8a,add comments to Chunk
d09510a936b006bebb756c330d4c4ffa926cbdb5,Merge branch 'master' into tree-patterns
48ce1f1809fa1336ecc89258a20685f678a88513,Support getting the serialized ATN from a recognizer
c7e9a410e90a3f2accef937fda479ae8d10e267d,rm unused field _contextStack
578dcd07995e5501c54e33d8729da2b7a88410ea,reformat
42cdf244eb8ba6b6ecf633e6ee36c1a59ae36f24,stash
cc07f8faecb204d4bfb282b2f1642356ac4f13c2,mv to runtime. was ref'ing v3 not v4 Token.
f6a0b2f3e36c29c7ee66c1c44d93a323347b31f1,"Merge pull request #359 from parrt/master

mv to runtime. was ref'ing v3 not v4 Token."
1c71d050746f606c32b37c6eca6c3ea2152a3fec,Merge branch 'master' into tree-patterns
5d283761416402d99bfe01d35f4177c36534a8dd,Merge branch 'master' into tree-patterns
8c57233db791c671362e035ca5df68b99c88e46e,mv to runtime. damn git!
bf7b375bb02552a4c8144f655783804e00e984e0,"Merge pull request #360 from parrt/master

mv to runtime. damn git! Seems that it might delete but not move files. hmm..."
0a314ddd49bf3a34a5ef5431ede83387368ca6e3,merge upstream
2791dd56199d1cbcbabcaa410e1a0f572a2e4ec3,Merge branch 'master' into tree-patterns
2394b38995ee201610f2f7cfc6335d6831df7323,"added state to be consistent with enterRule(); most importantly, we need to set the state when we enter a recursive rule, which we are not doing at the moment. This was not a problem before because we never could directly call a recursive rule and the outer rule set the current state. Now that we are using recursive rules as start rules, we need to set the state."
40789babf53323cf7bd0221a4513947d7feb0798,"got tree pattern matching working on my test cases using a parser interpreter not been generated parser to compile patterns like ""<ID> = <expr>;"". It uses Sam's alteration to the ATN to have bypass alternatives for <expr> tags."
e8f577e162134b4b742d4379901086697f0295a3,fix comment
33d11709df72d9cab49dd5c9fe7fe18fccc59e4e,"Revert ""fix comment""

This reverts commit e8f577e162134b4b742d4379901086697f0295a3."
599896cf1b88d91a3c551b60f605001dab305297,throw exception not null
e68757717f7ffc3280249da07f406a3c4d8fee33,pass a lexer and a parser to the tree pattern match or instead of the classes.
68b9a7b4143daab89683d8c3a6f52913b4d72123,cleanup dead code
1a2a45b434016f755ed9ab0a771bb2dc3f37924e,"Merge pull request #361 from parrt/master

ooops; these got deleted but now they are back."
4cbe197a633619e4292ede4b3f3c451cf857f345,we can't use a lexer interpreter because it does not execute skip actions. I duplicate the lexer and use that
4a46e1a679f9a7a205ec76dcbb06c2bdbb7b6ac1,rm dup code
e836544d3016c7c0cdb29d1bb301dcbafa6564b7,add test for hidden tokens
1e835578197f31f81d3c6188f15f1a66a8ec88a0,reorg to pass round a match object in matches_()
b02484b2f5db33e3eb10fa3a402e960832e59564,Merge branch 'master' into tree-patterns
4fdd520c2e047b9eb3058704cfac4405f090c7cf,got labels working
49c4a5ec120ed07cb391c6f8dc6abb5b3ad26237,"fix labeling, add comments"
168bce79d3f3a66f5ccec6dd95794499ca756eb5,working on api
b2ec85d14da0e6092bade76232681ef8c5c2f52d,"updated comments, cleaned up the API, made helper routines."
4c52a103e1830a2b47a79d7fbf748b333f851bfc,cleanup
bd91dc166dd8b26dbf48229fe19bb99dec7bd376,"add getTokenTypeMap(), getRuleIndexMap() to recognizer.  Gen new fields for that an ATN with bypass alts. Then methods for that: getATNWithBypassAlts(). Big changes to interface for ParseTreeMatch; create Parser.compileParseTreePattern() method.  Convert rule names to rule indexes."
0992aa856d62aa52a5309083b14ef2b654da356e,"Merge pull request #362 from parrt/tree-patterns

Add tree patterns"
4b5cb78716d9448f384ea012117411ea58828ebf,convert toMap usage to parser method calls
4e8353dea4da54f62422e0d9246f4890e941b7b7,"Merge pull request #365 from parrt/master

convert toMap usage to parser method calls"
9ca6bf9bd3a86f8bc494a6493ef89ca2856f83fa,"fix null pointer bug with rule ""a : a;"""
2618aa335ae88a940a51deb4006afb4d4fa7a03d,"Merge pull request #376 from parrt/master

fix null pointer bug with rule ""a : a;"""
df616907580db2710eecc5b462d1ca6cad134a14,Clean up the caching of ATN instances with bypass alternatives
75b8174dc8b62e8d1c3137fe110f6b402967a5da,Clean up the result caching for getTokenTypeMap and getRuleIndexMap
45fd53bf2cf3320686992aa83f45e0dfa6d990ee,Remove unused method Lexer.nextTokenOrRuleToken
72675075cf009c2d5c105bf155a76752078657c2,Remove unnecessary testing constructor
2a9a716c53ac11886a33a70e7ce8a3f7eeed8e56,Remove unnecessary methods ParseTreeMatch.getText() and failed() (use getTree().getText() and !succeeded() instead)
40bbd6623114bd4d386db3bab785a88a6e17de35,Updated documentation for Token and TokenSource
8449b9258f8d60f52d1ab9c397d9f3f79ffa2e8f,Updated documentation and API encapsulation for tree patterns
5710eff8f8f645045c50cbd35cae38b967a30873,Fix small warnings in XPath
7f15889d92938272dc5918c6f445f1ca3edaa11b,Make utility methods in ATNDeserializer static
bc59f30857a7a0f850e2942aa1bb79a756417e28,Use ATNDeserializer methods instead of deprecated ATNSimulator methods
fb1880d82c8f6fb32e2f32a6ee702701f83352b8,Move ATNSerializer to runtime
a2ba59d0ac296479ae62b416332cff406cf84094,Use ATNDeserializer methods instead of deprecated ATNSimulator methods
74f974526562cf1cb356f865de027f80f1d147aa,"Merge pull request #377 from sharwell/atn-serializer

ATN serializer"
8c5d088eb772a2e43ceb9a93776c288508daa847,"Merge pull request #378 from sharwell/polish

Tree patterns polish"
2ff3bb6f52109aa66ab6f4662b5e7e1a593a02f9,update change list
64d10cd52fd7c4667c23455f3a0b58e2215dbc27,"Merge pull request #379 from parrt/master

update change list"
6b2817f8bbe313ccfe90b64b0e3be95aa5b320d4,get last not first when get() finds multiple matching nodes.
2d7b0b4178d6aec19c2f3a71303067d410f69291,intellij git missed these files
6f4862561831ac6cc45dea9e6f618e8ee7eeea70,"Merge pull request #380 from parrt/master

get last not first when get() finds multiple matching nodes."
4eec4f1eb29150be4f6e9b473f24a9d518f19b04,Rename README.txt to README.md
ce805c4c554410d134bc89718a973f93e44305fa,Update build.xml
740657e566910521f74b97e3393389cff13a0b48,Update README.md
a864a6b952dc2a4e3b0a0756c2212d7a2486e1c2,Update README.md
4fc39f1dd7b843bd5014f7b7031185141fe770d1,Update README.md
b31627df2d207e20212418fb13b117485eeb659d,"Merge pull request #381 from stokito/master

README code highlight"
93d21fda2ae3873ea86fde60fd0c66386dbe6a16,fixed some typos in the README
bf22a0af5be727de29060be6eb1b19ba1a33b314,Add regression test for #398
9432bfb74691bf5940005d234c41a3e0a7f39610,Do not cache the results of a failed predicate evaluation in the DFA (fixes #398)
f51aaae2f543a6d23d80cecf7227e3174f021cd7,"Merge pull request #399 from sharwell/fix-398

Fix 398"
119cff5720f5960113a2892ce3f94782f883e49e,"Merge pull request #397 from GeertVL/master

fixed some typos in the README"
266f7276d1fe13221d5a2e137f4800013cc5fe22,"Initial implementation of a ""precedence DFA"" (fixes #400)"
bef086e87494c619f4c6d6e7c47387a03156867c,Updated precedence DFA documentation
e75beb69b195c0a9600bf03af129f8676e9482e2,Add the StarLoopEntryState.precedenceRuleDecision field so the information can be shared between ParserATNSimulator and ParserInterpreter
2a177e07c363d8d4abd3dbbed7471874751709de,"Merge pull request #401 from sharwell/fix-400

Fix #400"
967e74aa0da0c73ac8c05248ac3ea8e014ebbe83,Pass the ATN through the ATNSerializer prior to creating an interpreter (fixes #403)
417fb8525dca4d78867661f082ce2f448d9c7f07,"Merge pull request #404 from sharwell/fix-403

Pass the ATN through the ATNSerializer prior to creating an interpreter"
40f0540d8aa2ccf1e2efff68245eaad331ceea97,make public for use for plugins
1246b58b0e488d2b6970d0cfa4ebe54df0b253c8,factor out setting of root so that external tools can reset the tree to get new display. Also allow setting of ruleNames list externally.
f4967ff488b3354b458b866af5af7082c1cbd0cf,make sure we create an interpreter that knows its recognizer
bc4f3a72aadf7678de75245533841c6ddff257f5,add helper methods and rename some internal Tool methods
81e8df81193436941d6a22785867709f08731b27,update readme
d4275ab53a1e185acbdf249a98557d1b26002560,Range check; apparently string literal map not set when we create interp vs code gen.
8f3c01fb3bb438d0d892786af472678753811d1d,check for empty tree list.
28589361db3a912a4f9f60e0dfc1ab6c87d04964,"Merge pull request #406 from parrt/treeview-refactor

Treeview refactor"
f4e5b23bafb3f29e81aa0540e0414e4fe5d23308,"Merge pull request #405 from parrt/lexer-interp

Lexer interp"
6934495853f9a655a20f74bed4f81ce698022135,Fixed documentation link
5c80db61ea54c33df43d1ab3fc512a4a486fee84,"Merge pull request #407 from sharwell/fix-doc-link

Fixed documentation link"
715fe67fce41fe999911e94af56290ec2377c078,Fix ANTLRInputStream cannot seek to end of input
5e9b869f1d98d3201b3d8559724246854dce34bd,Updated lexer to support encoding commands in the ATN and interpreting them with LexerInterpreter
0ed14721dfe968ac733e0caa07c495212b10ba88,"Merge pull request #408 from sharwell/serialized-lexer-actions

Serialized lexer actions"
9e37b7c57855683916d6ddbcaf599ced451e97db,Update CHANGES.txt
d6abf19ffa4d4d214ac1c0812eaa2d8a3bb202b3,"Merge pull request #409 from sharwell/update-changes

Update CHANGES.txt"
224bb0e9c0f8de2d44211a6d195b6c0d878da4b6,Actually support all supported legacy ATN UUIDs (fixes #410)
4f0c14dcee28d24a02bf0d499f4d7863c57190c3,"Merge pull request #411 from sharwell/fix-410

Actually support all supported legacy ATN UUIDs (fixes #410)"
3c51f7ad7b88111c34852dc89679108cf02b1a4f,Add tests for ungrammatical tree patterns. Fixes #413
e98a2b1b6777cdb3d189139c553dc3175f8ca015,"Merge pull request #414 from parrt/master

Add tests for ungrammatical tree patterns. Fixes #413"
9f28fca583f59c6913673a5520c6de691eb6eb73,split action/command tests from lexer tests; add tests for new action stuff from Sam.
a08df5462c345feee11c1f55f22f9b732796ffd0,"Merge pull request #415 from parrt/test-new-lexer-actions

split action/command tests from lexer tests; add tests for new action stuff from Sam."
d1522527cafa76f95fb9fa37a0c184dc806dfbc8,update changes.txt
a6b1929d37dd517df33a7442181c71db5fc5e94e,"Merge pull request #416 from parrt/master

update changes.txt"
d0b8ccefdcc60106737ad41b9bffaaa12e00e4ef,set filename
83ad25ea1dc78a264a50b95e9a2ea5a15a489969,Add regression test for #370
657d496d713e3d2bce246c6092b6975a609aa644,Prevent XPath from returning the same node multiple times (fixes #370)
511c60fe7bee7a4fe94a84c64627626909054490,"Merge pull request #417 from sharwell/fix-370

Fix 370"
05b8c2283341c8359efcd0b35554d641a29116ac,Syntax errors while lexing stop grammar compilation process (fixes #308)
fe5f93a0f49c9baca453ded501f9fee4b42f3fa8,"Merge pull request #418 from sharwell/fix-308

Syntax errors while lexing stop grammar compilation process (fixes #308)"
4fc32e1f7cd9882c13ad5a945bd378d4f117eb47,Fix options not getting properly applied to extracted lexer in combined grammar (fixes #372)
6b78500a506932a18ddb84e32cab662b237f8022,"Merge pull request #419 from sharwell/fix-372

Fix options not getting properly applied to extracted lexer in combined ..."
3ba70ba1a72550fd05c46aadaaf7a7a3efd6014e,Improved maven plugin error reporting (fixes #342)
f2966aaa80ad77c4ac6027f2cefd1e323a8f1bc4,Improve support for m2e (Maven/Eclipse integration) (fixes #319)
a66203205fbc0489481234cbfc092236e9802019,"Merge pull request #420 from sharwell/mvn-plugin-fixes

Maven plugin fixes"
77fce95c22c8203cacdff702d81763d1003445da,Fix XPath implementation throwing exception
1cfb3755b2ed21d691c2c8b16cc23754701a5b2b,"Merge pull request #421 from sharwell/fix-xpath

Fix XPath implementation throwing exception"
b3d3235614fe6e47d6a222bacacee543181e7551,Updated documentation for behavior of AbstractParseTreeVisitor.visitChildren (see #304)
dbfb230b114b3329de00c888136df2fa2f5b301d,Cleaner output in TestPerformance when checksum calculation is disabled
eb370cab2691c115d8cde98cbc908bd3e2761c0e,"Merge pull request #422 from sharwell/tweaks

Tweaks"
85a923f61e03b741084680b5480934b826c2df17,Fix IndexOutOfBoundsException when using ANTLR with Java 8 (fixes #337)
0a41d67fbe054dff1bfdfb8734d16802a4b2b40a,"Merge pull request #424 from sharwell/fix-337

Fix IndexOutOfBoundsException when using ANTLR with Java 8 (fixes #337)"
9889de87ac6d3b7c3092e4f95fd67a9a58cdda25,Add regression test highlighting issue #299
664d66d9373b77995163d37c1391da43b526beb0,Fix incorrect combineMax implementation (fixes #299)
ef0b38e2bb992452fcbaa42bee6d8b4eb02d0bdb,"Merge pull request #425 from sharwell/fix-299

Fix 299"
da0864a2f81116a3e5e32ef8b833bdb8c031b4b1,Support grammar files encoded with UTF-8 with a byte order mark (fixes #175)
14107cc40a13d338864bf7a1c998389ddaaac5e8,Add regression test for expression performance (closes #192)
10f45abbe4a1f373feb5bf8090ce28a6a703dbcf,"Merge pull request #427 from sharwell/fix-192

Add regression test for expression performance (closes #192)"
9b85e9c636bd712ea3f8930a12bf5cc921c09f94,"Merge pull request #426 from sharwell/fix-175

Support grammar files encoded with UTF-8 with a byte order mark"
214b71510789e0794883aa25d089b2821c255102,Restrict lexer action execution to actions defined in the root lexer rule that matches a token
e34669e8352f7f5a282af015501c770119ed993d,"Merge pull request #428 from sharwell/restrict-lexer-actions

Restrict lexer action execution to actions defined in the root lexer rul..."
a55901bc0d311e52ebc563277cf7034eddfd1c02,We are working on the 4.2 release
b6f6c99c3c502418026b979ae871c899304cbd3d,Updated documentation for ErrorType
0b1495b7933c3e15f8cf373916de0e3307fcb3a4,"Merge pull request #429 from sharwell/errortype-docs

Updated documentation for ErrorType"
4507c1a27066a6e7abf7239586277d064f786dd5,Fix many errors reported by -Xdoclint
23e447fe34f6510640fb94a804ca79830dbfaa27,"Merge pull request #430 from sharwell/doclint

Fix many errors reported by -Xdoclint"
f544da5f9369f85ceaf1f11693603a632f1ee1da,Fix label color for arrows in PredictionContext graphics
8d372548599b27902c6c0ad9c4699e8feaed40f6,Allow customizing the path to dot (GraphViz)
d7a7436271932d6017a5f279403e2c5e5a59ee6f,"Merge pull request #431 from sharwell/graphviz

GraphViz tweaks"
eb3b84fa7dc67e5e09312f53784e286f12387f45,Improved formatting of PredictionContext reference hash code algorithm
8d03d92888e6b32bc25aefa0165895ef76b48b78,"Merge pull request #432 from sharwell/doc-polish

Improved formatting of PredictionContext reference hash code algorithm"
937c627b162fe122a07a610d11837d0b4ccbcb8e,Move NotNull and Nullable annotations to their own artifact
f8dbe1b68f583e9d33de9ced1271f49440434546,Initial annotation processor for NotNull and Nullable annotations
e472cc4e2318e868e33d670cd94bdbb3a45507b2,Error if an element is annotated with both NotNull and Nullable
2647856226c61f378e8b760ec2510434c05d44f7,Error if a void method is annotated with NotNull or Nullable
e253954bcf5125025fd8c7e17334ca5656e1b2a1,Check for NotNull and Nullable annotations on primitive types
c1125fe474f8be10d92b2a2fd6083fd92a4fc870,Add check for erroneous overriding NotNull and Nullable annotations
37f83c653738e32d923258fe0ce862370993ef6a,Add warning for potentially incorrect NotNull or Nullable annotations on derived methods and parameters
4bc593b20b2be50565b7f06ca17da79c8be2d0d6,Improved error reporting
49f12fd28d20e14307584f0dd5ac89196d693244,Add note about potential future features
07708d922397724611c71b4a2e49951293453295,Limit the number of errors reported for a single method or parameter
0454916a7057d334dbf4fcb3b0e6dcf817e800a2,Updated documentation for NotNull and Nullable
97b5d77976b3d1d0e712a451e1a4149063755973,"Merge pull request #434 from sharwell/annotations

Annotations"
d917ad46f7ae5f43a17ed0ad3b1a07c2f2297389,Fix error count limiting in NullUsageProcessor
608c6a8a3a774f7938339d4ed5445830be3aad60,Update several usages of @NotNull and @Nullable based on warnings from NullUsageProcessor
ef5b6eb34e1d6217ec003509a691484daa425230,Fix test failure due to change error message text
51b44f946b60fbbe963744ace4ad5d1b94d3e4fc,"Merge pull request #435 from sharwell/annotations

Annotations"
0f25d1c4cf59fb9830168678b2d42e407011a28f,"Merge pull request #436 from sharwell/fix-test-output

Fix test failure due to change error message text"
d5b269b6b6486f416965d7c685dd56370e31a12f,Updated documentation
aba1178c49b46f4620cedb7f4ecf570f6adf60b7,Formatted documentation
58cc8f28d736b8265b78613840afaf337525be38,Added links to documentation
0949ff824982128273ae838c2430ce58e5beb9ac,Updated some wording in the documentation
77342c2256a9de766b6bc7ed8e9080b0817bd35a,Added links to documentation
32ab1a4d03d8deb5bdddc0f5cdba3685f04404a5,Updated documentation for CommonToken and CommonTokenStream
741af63bee66fcafa0a7129b8266e7461df5ff2e,"Merge pull request #438 from sharwell/doc-updates

Documentation updates"
416a92ef0213ddfd844c10afefce332479dffe39,No need to run dot when compiling antlr4-annotations
970ad8c5269087ba7e37908d4728429e06054034,Remove unused field SemanticContext.parent
2f54b3554be065e5cd2bb9d0a0da506c34c6ec9a,Mark field PredictionContextCache.cache final
e116ad14cab2825e21fdaae43a1832f8df3437e3,"Added missing NotNull and Nullable annotations, and fix a case where it wasn't followed"
ac87089528aca712d51c070df63646d627247e66,"Merge pull request #439 from sharwell/cleanup

Cleanup"
cc045fbaf31ebc8ef678c726f40c4770ea80f608,"Improve CommonToken cloning performance, and update documentation"
340738f90330bbf010e166cbcf50657c2c4e050a,ANTLR 4 targets Java 6 at minimum
e63f95268f70f44ed0031b24766585a7830aa1fe,Update javac options during testing to address overly verbose warnings
243e3133fd6f8892299210a73f989abadf7bb142,"Merge pull request #441 from sharwell/java6-minimum

ANTLR 4 targets Java 6 at minimum"
959a49b12ffc655c0aa45c9eccfae00a21e94f15,"Merge pull request #442 from sharwell/test-build-warnings

Update javac options during testing to address overly verbose warnings"
de43cc427c9296db9b44a5e4834434e84ee41a9c,"Merge pull request #440 from sharwell/clone-token-text

Improve CommonToken cloning performance, and update documentation"
233a43f7134b4aac2b922996fd2123fe415fa17a,Use the fetchedEOF field to often avoid an expensive LA(1) operation in BufferedTokenStream.consume
3e45c4bc04e662fc8e1e38e0642a861f6da12129,"Merge pull request #443 from sharwell/consume-opt

Use the fetchedEOF field to often avoid an expensive LA(1) operation in consume"
501317e14bdeedf1dca4e3926f633c8978fdda0b,Include documentation from antlr4-annotations in the antlr4-runtime javadoc build
4a20c8ef362e78994b2792da397048a9d59d702e,"Merge pull request #445 from sharwell/aggregate-docs

Include documentation from antlr4-annotations"
b35f46d93cee695ad3333a96849f43fa49185d6f,"Create a shaded runtime artifact (includes runtime, annotations, and treelayout)"
815a1ad02570de6f567dbb3ac40ad9968d3d88b4,"Merge pull request #447 from sharwell/runtime-complete

Create a shaded runtime artifact"
dc1926cfe3453d74e9a89afde7d6ea52f85381a0,Fix encoding of -1 (EOF) in serialized lexer actions (fixes #449)
8d9cae93ec5e52e084d0a09d9b807b4f814aa846,"Merge pull request #450 from sharwell/fix-449

Fix encoding of -1 (EOF) in serialized lexer actions (fixes #449)"
2eb6f45bd954f53a98e91de2d0e27d6892a01b42,Fix generated code Javadoc incompatible with Java 8
5cff6a6df62596bb00ec932453483bacd34e3e54,"Merge pull request #452 from sharwell/generated-javadoc

Fix generated code Javadoc incompatible with Java 8"
ddbd7086b8a16f1e9237d933285e71edb35f7429,ParserInterpreter calls sync before adaptivePredict
daf793b1c149bc6d4d2d360f42d387067ede87c4,ParserInterpreter handles RecognitionException in the same way as the generated code
51bc2e2def2506e080714dff756f619aa2b7535f,"Merge pull request #453 from sharwell/interp-errors

Error handling in ParserInterpreter"
2730781c9814213ba5f33207e38b559ae50dc123,Fix documentation problems
bf63d5afb92eeb5e5f71741ce7c966056086c86d,Remove unused import
67b6415659df9bc306acf6950609c50e88fac8f5,Fix ParseTreePatternMatcher.compile allowing invalid syntax
0644fa7a260aba8d8abada0df92c51d70c27d4e3,"Merge pull request #458 from sharwell/tweaks

Tweaks"
f3ce4e8a82e44f57a8c150747354882d12a09617,4.1->4.2 in doc
3d462f29b5508d045fec1918406a8c3f367ce02a,Updated maven release configuration
8ef0f590bbf1cd9ee57fbdcee27b6f901b800ef7,Updated build to include annotation processor in shaded Tool jar
5e05b71e8b1cd52cf0e77559786cc4c18dc85c37,[maven-release-plugin] prepare release 4.2
06ab99d16dcc75bfc2ab286a98c48f414cb136cc,[maven-release-plugin] prepare for next development iteration
9d9e718692589de3e257da20d80a1e068a23f6e5,Merge pull request #460 from sharwell/release/4.2
d4982926803b98185473b7255e145302909bf27f,Add regression test for issue #461 (interpreter starting with LR rule)
72a65093e079681b7a098eb432c56bbb3c92ce43,Return the correct tree when starting parser interpreter at an LR rule (fixes #461)
a9628b0ff05e593ebfe9ba05da91ebb5ace79d06,"Merge pull request #462 from sharwell/fix-461

Fix 461"
bf070cf58fd44c9e2ea5629535ca106ac5889ec2,Updated working build of Sharpen
828f0639a7198a3bf1b09788d9c604d0abcd170d,Set wrapping width to 1000
5b9c45fb309e55027a2baa457ff8121b09d842bc,Update to the latest release of ANTLR 4
082f0bbfadeafcb5486bdf5a666687016a057013,Merge branch 'sharpen'
94ad1d162d9057c0ae9f0e34ca040a33016a10e5,Merge branch 'sharpen'
61ecdf7289dae69f9a41b30cf7a545bafb205fb8,Merge branch 'sharpen'
593275784bc5afb737b5bbb190343975ca21658c,Fix build errors produced by the latest Sharpen-generated code
9d73c12b30997ef36849b486117643b5a4e9d00c,Enable NuGet package restore
b9745beaaca69542523b2415ebfdedc84fe511f5,Updated installation instructions in Readme.md
3ad255408705659329ce9bab413abfbb0bbb9091,Updated assembly versions
cb8124c929cf8b153b0f230b98de1e7ea122ae4b,Update to the reference build of Sharpen
fe482cdc4da093c625201e8918915ec7fd70f4ed,Merge branch 'sharpen'
e926e5e42fcdea83d7052c57307758d5f223221d,Fix output folders for portable framework release
5b3e585183acbf8e092cd09cde833cac4495e3cb,Updated build task to use the latest version of the tool
dfbf806c4d0f3fa22ec7b6d2a5a031a2aef8f6c6,Updated test projects to use the latest NuGet package for code generation
d23042d0a1594cc17429fa33327d5b155a2974dc,Updated build script
d457eb93359782e6dc0b2788c1ddb61617e45ae4,Updated pom.xml to use newer dependency versions
c15992da790159178ee06b7c256be2631891672c,Re-translate source with updated configuration
424787bf438bbbfb9fe1df7c4356e76b559092b9,Merge branch 'sharpen'
f321fefeb542a8d700f598c5f68d222e2663a464,Updated code generation templates for the 4.2 release
98b87bd6b31160343973f9cec1c28df1c76c8de6,Update README.md
cb578e1bd9331ad1dc12724e3a63d79365de5c13,"Update README.md

added www. to download for MS Windows link because site of ""antlr.org"" doesn't work but ""www.antlr.org"" does work"
a3282f5fadeeff9d9461a7c9ff34bbcd9dd9633b,"Merge pull request #468 from whitten/patch-1

Update README.md"
9acf9c8fb7d64ec0058b30edfcac09b3b1bc9505,Updated assembly informational version for release
3d5694264fb6ee5c67b82ad050adc08fe8cd7375,Updated assembly informational version for next development cycle
3edb44d5946e4b6e37c41fe5212184bd55805262,Update README.md
c35b59d3b8d5f23b1b60f5f797d91ea2795bee91,Increment current while adding a collection to IntegerList (fixes #474)
330116f7ef5aaaaf20b23710fd51feb730d5fecb,"Merge pull request #475 from sharwell/fix-474

Increment current while adding a collection to IntegerList (fixes #474)"
dd1480e10c153f7075a6085dd8de1cd6e342266f,fix broken download link
c0dda79dff3066e75ad0e7400d02062efa161635,"Merge pull request #481 from shinpei/README-fix-download-link

fix broken download link"
a74005972d9f3c97f593aae9c4607304a5ee8304,"BasicSemanticChecks.checkGrammarName: allow null filenames.

checkGrammarName assumes that all grammars come from actual files, but
grammars loaded using Tool.parseGrammarFromString use input streams
without source file names. This patch changes checkGrammarName to only verify
that grammar names and file names correspond when a file name is
available."
acb1b916e0063167b16b9a8b7767a38c51886459,Add aphyr (Kyle Kingsbury) to contributors list
1dde17efea302606bcb9159bf8a928bff1971e8a,Mark Recognizer.getTokenErrorDisplay as deprecated (fixes #480)
3c70fea32a26b67889c68e814a3d12028ab5294f,Add regression test for issue #433
f1692591cc6b0e0fa5f4057d686ae1c376f1bde4,Updated RuleFunction.addContextGetters to support multiple alternatives with the same label (fixes #433)
6fc77cd88d07421d1303293de0d34fd54b13b0bb,Add regression test for #469
41e04a27c06d4f6004e6c2c85ba4bb308b207309,Fix lexerActionExecutor not being preserved when returning from a rule invocation in the lexer (fixes #469)
27270fdd0506e9909cdca14e40f1cf6d9c6f4c41,"Properly encapsulate LexerATNConfig.lexerActionExecutor, and mark as final"
bc646df8243fe0704f0b9d6d306f7fe6b9204338,Add missing @Nullable annotations
470863dcd05085d3c638e929a04fccd543b9eb97,Update the runtime to build XPathLexer with ANTLR 4.2
78587d0c08a8bbfcb27875bc455ca780bb2ae5a2,Fix paths to online binaries in build.xml
c6e6ccde4cef96101a19ba3681196972b7848550,"Merge pull request #502 from sharwell/fix-480

Mark Recognizer.getTokenErrorDisplay as deprecated (fixes #480)"
cb0119e761cd81aebed0a0c3e976a69f0301b214,Add regression test for issue #509
10558a7beaed34d529a306a8ee26a146d969d16c,Make sure to consider context for the SLL precedence filter (fixes #509)
336a1197e8448e6e7dfd6a73e1df1f664a2f5789,Add a comment describing a possible future optimization to applyPrecedenceFilter
0577b4dcaaddfe0fa82cd4daf1305782d88cb8e5,"Merge pull request #510 from sharwell/fix-509

Fix 509"
e66f663618d87ca72ba466a97f49d0bc2312c19b,"Merge pull request #503 from sharwell/fix-469

Fix 469"
dcd338cfece9f15e049eabe1930c452bff5179c6,"Merge pull request #504 from sharwell/update-xpathlexer

Update xpathlexer"
794e4a0b7b485e28d5b510e648cf0733a2ca998e,"Merge pull request #501 from sharwell/fix-433

Fix 433"
7daae3a89bc21fe6fe49e0afdd2683155e7dc3c1,Add compiler error 156: unterminated string literal (improves reporting for #507)
3e054df98b9e8f0e154e0a1b886c7947e5c00e88,Do not process grammars following an error during parsing (fixes #507)
480544b4fedc7043d34e622fa63de6e5a02cfbd3,Improve wording in description of error 152
96c22611c4dcae2a1869ab40932c1328b4ad9246,"Merge pull request #511 from sharwell/fix-507

Fix 507"
2b3ef648f83cbc6d8792fbee206b458f90a2d9f6,Add compiler warning 157: UNRECOGNIZED_ASSOC_OPTION (fixes #489)
b2af59e73e7e96ea142cbb43e0d378449ddd960c,"Merge pull request #512 from sharwell/fix-489

Add compiler warning 157: UNRECOGNIZED_ASSOC_OPTION (fixes #489)"
0ed651cbc6d2350286fc9ef8335d6c84e891086b,Add compiler warning 158: FRAGMENT_ACTION_IGNORED (fixes #472)
ccda6205e61cfbc2491ebbfae1c85397a6057638,"Merge pull request #513 from sharwell/fix-472

Add compiler warning 158: FRAGMENT_ACTION_IGNORED (fixes #472)"
ea088eb893ac57350ddfce492f35654ff253bb83,Add compile error 159: RESERVED_RULE_NAME (fixes #500)
08300b457fc1edb24f8c11fc8e7f28b47402ed41,"Merge pull request #514 from sharwell/fix-500

Add compile error 159: RESERVED_RULE_NAME (fixes #500)"
b4b91970bdbaea2f4874d1d2054e3524a604a2ba,"Merge pull request #495 from aphyr/fix-load-string-grammar-npe

BasicSemanticChecks.checkGrammarName: allow null filenames."
014785b70a4c9b2e75eb29fa45746f0dd8d530bb,Fix usage of assoc=right in Java-LR.g4 (fixes #515)
6642a9222d7d49e533a5112e86774dfc50aae6a3,"Merge pull request #516 from sharwell/fix-515

Fix usage of assoc=right in Java-LR.g4 (fixes #515)"
85f09126e2e058975a9afef0e395c624b3eb05c8,Don't include the annotation processor registration in the shaded (complete) jar
829b5c78ccc28f5bd712b5aa006fcc405a707841,"Merge pull request #517 from sharwell/rm-processor

Don't include the annotation processor registration in the shaded jar"
dcff40df90f9e0d4b277557ded1cce81b678c1d5,Generate complete documentation with the Tool
d8efb4ad44eae7530234b842fe6cf678ebecdba9,Updated build to use latest releases of ANTLR 3 and ST 4
32adae763d1279f500bfa144a3bce6d85d12c90a,"Merge pull request #518 from sharwell/build-updates

Build updates"
943aaa5d242a7ee369a3ef8412851a3eedd3006b,[maven-release-plugin] prepare release 4.2.1
5be18445cdecf846d53e730906f17bb47d9ecca3,[maven-release-plugin] prepare for next development iteration
b25067b9045df4246559be41a9f6e5390d7959b0,"Merge pull request #519 from sharwell/release/4.2.1

Release/4.2.1"
8e5caa272fcae9bf02f4c74978427ca640b388d8,Update CHANGES.txt
c973567a48c0fd9a3880ceeada0301b22ed2c925,update for 4.2.1
afb3390dabf580ec61f81f909c9c41766a8f0955,add link to the releases
63667f41b4d6132f9e9ce255804b7312c9f614df,Updated .gitignore to simplify work in the sharpen branch
0a3e6f00a83545e56ddf2cb3d17c576bdfa7a7c2,Update to the latest release of ANTLR 4
53f2c8f1a6ace1dc33d11cec1c0db4ee3ee5b417,Merge branch 'sharpen'
a14b1977142da5047d65d26b11326586d520ce3c,Fix issues in newly generated code
a6daadf360871fe0c4a6bd7594ec25eade93bbde,Working on development version 4.2.1
9b35c6339670ea179980a53319fdf879fc3f7104,Updated build dependencies
71a9f87b50bd208105af543f3400278a06e5415c,Updated version numbers for release 4.2.1-alpha001
6eb48b45bc010942495b244f917105232bbed275,Updated version numbers for next development cycle
2729f176b207074207653ddd740b20555a07eca4,Add option TestPerformance.REPORT_SECOND_STAGE_RETRY
c0d158294af03535ed0f595f6a246bd7ff8ccd63,"Implement hashCode, equals, and toString for Pair and Triple"
557e9448f8468774ad26f35eceea729b71ca97c5,"Merge pull request #524 from sharwell/report-retry

Add option TestPerformance.REPORT_SECOND_STAGE_RETRY"
a3a9d727b3637e200e4bb741625f97114cc3430e,"Merge pull request #525 from sharwell/tuple-features

Implement hashCode, equals, and toString for Pair and Triple"
5a56cc114715380f439f8d8b81da70cb16c7b894,"Documented Grammar.defineRule, and updated it to return true if the rule was added to the Grammar"
f34adc916a3d74396365dadef49fed94d57517c1,Added Grammar.undefineRule to support undefining rules prior to AST construction
6de95c15e73d7bb092b1519405cd0f1859e63e8b,"Merge pull request #526 from sharwell/def-undef

defineRule and undefineRule"
69d4b423e1e979ea944bfefb65f5b04bb8708029,"When delaying error reporting because prediction escapes the decision entry rule, we should evaluate predicates to turn off any configurations that are invalid semantically. After that, we can collect the list of alternatives that are satisfied with the input thus far and then choose the minimum as before. Fixes #529"
bbbf5e34dbf178f82a123dea69d4e339900b451e,Treat EOF transitions in the ATN as epsilon transitions after the first EOF transition is traversed
8c8d4d754ee1952c8ea229543823d1e33da60c10,"Remove incorrectly generated call to adaptivePredict

This particular call to adaptivePredict did not correctly match the decision number to the preceding setState() call. In addition, since this code is generated only for a positive closure, the only possible alternative is the one that enters the loop; error handling is deferred to the alternative(s) within the body of the closure."
ea4676b18ab40c99b629e078f1addd6605988403,adaptivePredict never returns -1; it could return ATN.INVALID_ALT_NUMBER
2a0857b7d56e410c53938a8ac5e316116e938eb8,"Merge pull request #531 from sharwell/eof-transitions

Treat EOF transitions in the ATN as epsilon transitions..."
8e8a2dc303413bea104867554d97e5a760d87266,"Merge pull request #532 from sharwell/codegen-fixes

Codegen fixes"
9652d0059c6dbfc849404c98b065ea26ccd06928,add Sam's comment.
8f000d273d0c6b786cf6b410d2a5cdbea7a25fa7,"If there is no syntactically and semantically valid alternative that reaches the end of the decision entry rule upon no viable alt, choose the first alternative that is syntactically valid but semantically invalid.  Refactor into separate method for clarity."
da9186ed6342d75c6d771bb2d52fbfea0c42a166,"Merge pull request #134 from parrt/eval-preds-when-delaying-errors

When delaying error reporting because prediction escapes the decision en..."
14f446f3f8603790a1d57c571ef96a11f77792e9,Update the comment to reflect the new method I put it on.
88c7d09c24937d142dd5251198b84b82955f97a6,Add unit tests for grammars with multiple EOF transitions
f9e9a6ab387ea10814cab1943dfa6c6888cc29fb,Fix handling of multiple EOF symbols in parser rules
f233f6eaae263cea5adb0f50b79ee711ffde4c67,Fix build warning due to use of generics
fb662028206d2092facc3b9ed2b11fac00ea0446,Improved documentation for Transition.isEpsilon
d9ec5c02fb5a7cd7656a357f4c97e7f4b9882728,"Merge pull request #538 from sharwell/polish

Polish"
b175d7b2230ed4786ce4d4284b18c4f4121a690f,"Merge pull request #537 from sharwell/multiple-eof

Multiple EOF"
d209bd0ef09c812bcdb0d31d1a720f2c6e677abf,Remove comment that was only meant for testing
857c40318f3349ddf54c2e1adda7a698ba44b965,"Merge pull request #539 from sharwell/quick-fix

Remove comment that was only meant for testing"
faf011ce8a103832d88709333046c26688d61a9a,Updated documentation for ParserATNSimulator.getConflictingAlts (fixes #528)
9c6023b3851e36af2f15e41b96392eefd0a1c466,"Merge pull request #540 from sharwell/fix-528

Updated documentation for ParserATNSimulator.getConflictingAlts"
736a5f5905026e3df1138ed6d9e9dc0ce7179015,[maven-release-plugin] prepare release 4.2.2
7e2bf4a2d5859300e0cf099c49bc830bb76fdd9d,[maven-release-plugin] prepare for next development iteration
747fb0ba2e278592a91178606e2eb975d9f1d41f,"Merge pull request #541 from sharwell/release/4.2.2

Release/4.2.2"
a41a70f71a7201986975a8391250406849f0a5f0,Update to the latest release of ANTLR 4
f71699e20a61bd43d459f066b295a4769ae47811,Merge branch 'sharpen'
db2fe9dca9da650480bfe77ef06a2e0cf4f9c581,Fix build errors in newly generated code
5763eb8be8d7a59626e6a602f59d29b793668894,Working on development version 4.2.2
c612973d4c8fca342375c8ef3cade6da44b82b17,Updated build dependencies
589a0038a8878fb7bf086417ae238518d5f4e7ed,ST4 no longer requires a dummy template if the STG only contains an import
2dbc91f80108938a8727169eb19ba5d9aacc8c8b,Update reference to obsolete method
8b337bd44f0d0fec210e2ea1652f7a3b233eb096,Update CSharp.stg to match changes since 4.2.1
06acb21c7da07639f404d89a7572640c12441b8d,Updated version numbers for release 4.2.2-alpha001
2ace0f628a7a0da64c5a55b99046e9824b236415,Updated version numbers for next development cycle
65b176a36dedc9f8a5012d3a35002493d09f385f,"Return predefined values instead of null for Grammar methods getTokenNames, getTokenDisplayNames, and getRuleNames

Improve consistency of Grammar methods for names of rules and tokens"
3111db7a76aaab02b35aa29b1f39ec1bd06d197d,"Merge pull request #548 from sharwell/invalid-names

Improve consistency of Grammar methods for names of rules and tokens"
d63a9e31326c655c8852deb211806e68d56a7fa6,"Add the ability to explicitly specify the path to the Java executable (fixes #32, fixes #34)"
d0e425cf35d94320e8273e989e25b1f0e4ebaf2f,Fix string.Format syntax (fixes #40)
6472972efbc3f74ef0845709772304ead89a2873,Fix code generation support for .NET 4.5.1
3194fa037a2b08d569ffef3da7712dcf9c71457d,"Merge pull request #44 from sharwell/fix-40

Fix string.Format syntax (fixes #40)"
6789bd6cbcab49652d4a6ac69c256ac5e259399c,"Merge pull request #45 from sharwell/fix-32

Add the ability to explicitly specify the path to the Java executable"
d206a6e00192eb471a60265faf962b9bc93b05a2,"Merge pull request #46 from sharwell/support-net451

Fix code generation support for .NET 4.5.1"
a3d4ba53a36d65b00f8831343deae3f7591251e2,add tool-template and generatedcode-runtime version compatibility check. Target authors add a VERSION template and supply a RuntimeMetaData.checkVersion() method.
77defbdc706136203d11c5a5e40873f3037c130b,"Git hygiene

Marked .DS_Store files as ignored"
1b616c838ef95acc1639b5b5f9ba1cf95892b9ad,AntLR 4 runtime for Python 2.7.6
533eca53bf83f215ad63e4bbb03e76e69f8e6b01,Git hygiene
07a74cb26912375d4855e4f44420653d9275f34d,AntLR 4 runtime for Python 3.4.0
4aec5aeac23a6ef80dcd7bc556b76906d8b00959,add basic code generation testing rig and 1st test.
813fefdbb711f0f9d029723188b65b35a384b0fb,Fixes #554
4ae0161f1a55df80387f98ec24da434c85a3e56e,"Merge pull request #566 from parrt/args-as-templates

Args as templates"
e0937a6322c18a27a3638b1937e6f395ae14ec9a,Add regression test for #561 (token named ATN breaks reference to ATN.INVALID_ALT_NUMBER)
938a39c05781fe821814c760220088ad8779464e,Qualify references to the ATN class to avoid symbol conflicts with tokens named ATN (fixes #561)
038fa850ed5ffabf9ecee439ec500f3090144346,"Merge pull request #575 from sharwell/fix-561

Qualify references to ATN class in generated code if it would alias a token"
db0830e00d88cad008b65e834dd086d22c04719f,To get static checking I converted the version template to a method and also moved the compatibility check into the target so that in the worst-case target developers can override the compatibility check per their needs. I have also decided to throw an exception for the Java target when the code generation and runtime library versions are incompatible. Change the tool message per Sam's request.
0b8a70a2a4efa1361cc6fc703939dc21aeb5af51,tweaks per Sam's comment. define default version so targets don't fail to compile.
9e77e28bc158c66193f8249729f0215996150f62,should not be a default version lest all targets pass by default. make sure java target and tool move in lockstep. Fixes #572
2d8ffee5e29ad8d3927e7f4f1f35dad653fb5cf2,damn intellij/git always loses changes but just with antlr repo. DAMN! commiting last files manually
6500b26c1464b86ed0f6cb0bcc9f0af444288ab8,get good message
f3fcf5a712354763a670ca5076c5c2534b1d346b,"Merge pull request #569 from parrt/runtime-tool-version-sync

add tool-template and generatedcode-runtime version compatibility check"
673e3bfe5b7b86ad81b4bbf7ebfa301b559e17c0,progress
ab7319ab1586a4d615b3863d12145eced376286e,"Add ATNSimulator.clearDFA, and implement for LexerATNSimulator and ParserATNSimulator"
46e1bad7b489741b8e3a967be3aa73a55efe7c1d,"Simplify the GrammarAST constructors, and correct the token start/stop index not being set"
27ce016d3da5272518697feae8a09339bb72417b,Add utility method ATNConfigSet.getAlts
b80c10c56ce341fe7d4828b38a16b443ec98680f,"Merge pull request #584 from sharwell/clear-dfa

Add ATNSimulator.clearDFA"
43b04f02f6526653aa80ce914778a60d3c04f94f,"Merge pull request #585 from sharwell/grammar-ast

Simplify the GrammarAST constructors"
63fb71cc9f50aa395d1d4c6250465671b86e2d5c,"Merge pull request #586 from sharwell/getalts

Add utility method ATNConfigSet.getAlts"
31f3c2eb5b922e96ddf37f1fd2cafe9d8bf55c33,Add the SemanticContext.Operator base class to provide consistent API access to the operands of AND and OR contexts
aa9bceaa7b93cab9b8dc394ca8958e586f7fd00d,"Merge pull request #587 from sharwell/getoperands

Add the SemanticContext.Operator interface"
fb49d7c6a2fc6655f33b2065c618a4d27805d982,initial profiler
d5aba146f013f9b9938dda5e87ae9dca0b136533,Remove unnecessary call to input.index()
e570489d33552b132437e8505ad80afb4c1d2e3f,Simplify common code in XPath tests
1a56da626f87f4dd2e1417a3893d9800be9884f3,"Merge pull request #591 from sharwell/xpath-tests

Simplify common code in XPath tests"
6245f1383d3624b60e42c982ae8e9cae435b61bb,"Merge pull request #592 from sharwell/rm-unnecessary-call

Remove unnecessary call to input.index()"
68b186e77d53020cc53bc51f0da40e4c5215a878,Add utility methods and track token indexes through the left recursive rule transformation to allow external tools to associate ATN states and transitions with original locations in the grammar source file
be16c71e56206b3566c49508dce79178dd900172,"Merge pull request #583 from sharwell/atn-profiler

Atn profiler"
e7a1d84197d7d8941587b15b6ac3fb5d932fa08a,Fix support for element options on semantic predicates in left recursive rules (fixes #590)
0968498f3e8606e5330a4c807f0fa0b529c741b0,"Merge pull request #593 from sharwell/fix-590

Fix support for element options on semantic predicates in LR rules"
742429a15d42325a24a91df93ee726d004618e14,make sure that previous tree node's start/stop token indexes are correct after left-recur elim.
52fbc5edc94b45e7805e488aed21b8def01fe808,"Merge pull request #596 from parrt/fix-node-indexes

Fix node indexes"
dba3aaf7400d3126ffc4d5b76365605ee1048b4d,"track all predicates, make new method that is called for all preds."
982b70fbfdbb2101983ceab5cc7088ad43fd0fed,reportAttemptingFullContext didn't get conflicting alts unless decision had predicates.
8e6820ac6079cb287c1de9e061c567cf6d13f170,Tweaks
3bab338ba403d86eee47abbfcc0011eb8a0a3d17,change comment to be accurate with code.
59bc9faf45db926af805a41b5b85cc9fda135cf7,"Merge pull request #600 from parrt/reportAttemptingFullContext-bugfix

reportAttemptingFullContext didn't get conflicting alts unless decision ..."
244c8ee0c7c14c70bcbc2e1e72165c124bfa3251,Updated documentation
5e93d5f7b7a43014a38f3cfc5dfe3587c837e4e8,Avoid creating PredicateEvalInfo events for precedence predicates
2a25ec2fa408972307b1ef10491ac3818b08ebc9,"Use tabs, add missing license header"
e4e1cb18456878fcdb56c0d0531f601cf2f45677,Updated the documentation and improved the flexibility for future use of RuntimeMetaData.checkVersion
a87d3acedd9551eb70714e65ca10a470457ded59,"Merge pull request #597 from parrt/track-all-preds

Track all preds"
4e84fa282469658c450510b425a4928feaf63d1f,tweak to comment
31a3b595765b8cb6bb5a57a7f01c4e7cbcede482,Templates LL1PlusBlock and LL1StarBlock were not used. removed. added test for LL1OptionalBlock.
95596b4a52dc7525f6eb700249767354af481651,Update ParserFactory.getLL1EBNFBlock to ensure it is correct even if additional ATN optimizations are implemented
f37347277fc1ac522ca9f757b7bf6810263300d6,"Merge pull request #570 from parrt/codegen-tests

Templates LL1PlusBlock and LL1StarBlock were not used. removed. added te..."
80125d661e3790ab02ce7d85fc60d118ac67bef2,"* Redefine checkVersion as version mismatch detection instead of a compatibility check

* Update notification behavior to notify callback listeners instead of throwing an exception
* Remove the distinction between regular and ""extended"" semantics"
feb86e8d9b100acaf2b36be4d45bbebf87658dce,track context-sensitive phrases in ambiguity reporting.
b8be9aadd1339d82b3ecd2167971003bf9a6d9a2,"* Alter the default version mismatch behavior to throw an exception instead of write a message to System.err

* Ensure that DefaultListener is always the last listener notified (since it throws an exception)
* Update the checkVersion documentation to more clearly describe the scenarios for which version mismatches are detected"
8d17f43f573cfe023754cf323bd39a0c2cd874b8,"Merge pull request #601 from sharwell/versioning-docs

Versioning updates and documentation"
015b9c900e7c96b1d71cada0f7653a5ad3bea49c,Merge branch 'master' into accurate-ctx-sensitive-check
40294f227078edfc7c8d19c2e4fcd9cca15b056d,go to 4.3 not 4.2.3
eeac7bc1c8ac07301035770fa52d5efc8c6e293b,Merge branch 'master' into accurate-ctx-sensitive-check
cc36281ce28ef84a5151b56c09f80354703629c8,new definition of context sensitivity required change in test code. Updated profiler per Sam's comments.
ac63649b2a5f422c893a50f848be12dead8e704f,"Merge pull request #602 from parrt/accurate-ctx-sensitive-check

track context-sensitive phrases in ambiguity reporting."
e6e57f48692ad078b4759cade098e55e2eb47781,First Lexer test running
d68ffad6d39eb7799d81a261c8fcfe52fdace0b7,First running Lexer test
bc566605b155ab7baea3ab63c6520456e012bc11,Leave just one version spec in tool. Not looking externally anymore.
b8a91b9e3f5078a4749997d81a2a9288a132b0ba,Preliminary changes for Python
36da0daad75ac3e1bf572840d6ffa353abc88841,no longer passing Parser/Lexer masquerading as superClass option.
9813115308cdb51a4fce971764abadc20c20c2f0,"Merge pull request #610 from parrt/superClass-codegen-change

no longer passing Parser/Lexer masquerading as superClass option."
ff67ae5d19226f72c518079b0b1d4ec3a40c6367,"Merge branch 'master' of https://github.com/antlr/antlr4 into Preliminary-enhancements-for-Python-target

Terence's implementation"
1592609e894df0833f7772bbd98a37c2baaadd39,"Improves the granularity of tests, thus helping narrow down differences
in behaviour between the reference Java target and other targets that
use the same test suite"
f75e15258fe4db7b2d71c3e49c445625d9c48c6d,merged preliminary python enhancements
c46acf0031e71e46780dc569ce52d71ab1bbc685,cleanup after merge
33fd1804ffd703b27d8a61b94fced93a8f4e2fac,Merge branch 'Preliminary-enhancements-for-Python-target' into Improved-tests-granularity
4545a8f5d079ecf4691df8c9a9b0b6b5fb02f7c1,"resolved the Lexer listener/visitor issue by changing the tests grammar
using @members to @parser::members"
5778570faf523bae1150395cd6c6bf9b11be845b,warningw to be fixed separately
00eb4f89cafd323490dfe733623185609367ffab,Merge branch 'Improved-tests-granularity' into Preliminary-enhancements-for-Python-target
bf83ee42bcd912196ff0a304732800237c914444,"Oops, removed some unwanted changes"
0692334c9fbe932284a175ca79adc047bab54237,unwanted format change
9f15e3fafed3f889257b454ec9ee48846eab6ae4,"Merge pull request #609 from ericvergnaud/Preliminary-enhancements-for-Python-target

Preliminary changes for Python"
23b01621c6e2f5081dadda6fdcb6afe0d095a8e7,Merge branch 'Preliminary-enhancements-for-Python-target' into Improved-tests-granularity
fd9d707d95c667b226732d7fde59966271eb8d12,tests granularity
fa2ed459c603d64cdbafac9917e2d580d1b1f447,Had lost some stuff
eb16926acdfd9f751d4e1b863b57e5afd386e5d3,clean-up before release
850cf69460d4938a8b6d4c2071e216bceb66980b,Git hygiene
43536d42e38f74836d4a9b1b43b7723e8c8e745b,clean-up before release
785483827f4206212051c45144e0e14b0bcca1fc,Hygiene
0460e98bc9c423929c094d6dc5fa78a809533f85,"Merge pull request #611 from ericvergnaud/Improved-tests-granularity

Improved tests granularity"
8adc8d13002cbc5cdcbb14529696c3666cba7d09,add eric to contributors
d94ce39d09058781c49e60bbda28b52a9754fb1c,"Merge pull request #613 from ericvergnaud/add-contributor

add eric to contributors"
8b3ccffd66d87b3f5770519e9e80a491c7c2856d,A second Lexer test running
358a1025d2ec01d2eebe9f18e176631503daef89,tweaks per Sam's comments. Just pushing straight to master.
8447661a2811664b826b7d8a24c09a8b575fd359,add unit test for issue 550
403e8231c0729eb69ac27bf66b8ae720841e151b,I have removed all of the installation and getting started stuff from the readme and pointed them to the wiki which is easier to update.
4aa3556f1caeb1a63f510671b2909b0113c87e7a,set ant build for 4.3 using 4.2.2 (and 3.5.2)
58c1ad6cb8dd10516579caa6398b5b01df7a3e52,Refactor shared load() method to BaseTest
e4fa8f75d424856f40c19bf39ffc78244443e2e0,Add regression test for #588
9e7b13105d9881ed0f1a12cb1f0b748a3966a63b,Fix optimizer incorrectly removing predicate transitions from the ATN (fixes #588)
fdc46c53e6d885307d0ff3f8ceea5474267d1f64,"Merge pull request #617 from sharwell/fix-588

Fix 588"
156696be189bdf3929343fb4bea9b4fbe4a90063,Fix cases where file encoding was not handled properly in the tool (fixes #563)
50cc4ac736935703824003a61caf4445ac49b4ef,Updated documentation and add argument validation assertion for SemPred
00f95b4a294e0b22bb5c85ccd6e7d87089c20273,Fix documentation comments generated for labeled alternatives (fixes #543)
0355f17f04738ad9315d0c8ecad1b282f836e7f3,errors should display literal if no token name avail.
a1c0319b41260a4da1762750efb658b51a855460,test profiler with generated code. dump profile information using toString as dump() no longer available.
0c0fd67082d8f807c9bedabba4c99cdebf6d1de8,"Merge pull request #616 from parrt/test-profiler-with-generated-code

test profiler with generated code. dump profile information using toStri..."
8abe81aaa656d78ac8b9e1a631a849025c9560b0,"Merge pull request #621 from parrt/token-names-vs-literals-fix

errors should display literal if no token name avail."
63069a571dba0e3c13f919d0b79958ad730066c1,"Merge pull request #618 from sharwell/fix-563

Fix cases where file encoding was not handled properly in the tool"
662ef9bfacb0f95110795a9669ccc6e6703b6cbf,"Merge pull request #619 from sharwell/sempred

Updated documentation and add argument validation assertion for SemPred"
633d4e2e19ab176aaf3edabc67eebe5ecd0a43e0,"Merge pull request #620 from sharwell/fix-543

Fix documentation comments generated for labeled alternatives"
de42adae782d526d0aafdbabe3831190f104d2b2,All lexer tests pass except testLargeLexer
51430018d0710b01bc60976b64e9ec2a060426e6,"getMinElement now supports values < 0.  Checked and shouldn't affect any uses.  subtract() from set with EOF, wiped out all negative values. added tests."
f9927d65aee8381689585033be1045f1bbdf61fb,TestParserExec testBasic OK!
64b6408e4a04ea7cbddf68dec7b0f12f941688c4,Update documentation for ANTLRErrorListener (fixes #603)
3574cbd94b5c8947ddf5eabb6ee768c8e9bff158,Add an additional note about the relation between reportContextSensitivity and reportAmbiguity
37bdd8d363e3b2582eaf6999d17c58290950ea3d,"Merge pull request #627 from sharwell/fix-603

Update documentation for ANTLRErrorListener"
e311ec63b44694f30923858cf77dbde7f327b89e,"Fix edge case behavior of nextTokenOnChannel and previousTokenOnChannel (fixes #622, fixes #544)"
8f0880271684b29a6cdf5a8aa36e897b1a20a291,"Merge pull request #626 from sharwell/fix-622

Fix edge case behavior of nextTokenOnChannel and previousTokenOnChannel"
9cbf47319545a9ba057318e4637c8b85d4301d72,Add regression tests for #625
a812c32a227de589abb37333c2241aca06fd94a9,Support multiple epsilon elements at the end of a left-recursive rule alternative (fixes #625)
a113e33eec6e080cb0a3911f706bc8f936a8b98f,"Merge pull request #628 from sharwell/fix-625

Support multiple epsilon elements at the end of LR alternatives"
6eeafacb88aa3b629988d105ff8357afc63b6871,Consistent handling of element options applied to alternatives (fixes #542)
0575c59fc6547464c46a9311b660fbb7ecd94655,"Merge pull request #629 from sharwell/fix-542

Consistent handling of element options applied to alternatives"
2920ad0d1a886c81fe4f0e4c68d4d8fa7513dce3,"* Updated documentation for IntSet

* Reimplemented IntervalSet.subtract and IntervalSet.complement to operate over the complete range of supported values
* Expanded several methods in IntervalSet to operate on any IntSet
* Mark COMPLETE_CHAR_SET and EMPTY_SET as read-only"
91752af88de29d5fe48fdb073b889095d1ed3c2d,"Merge pull request #623 from parrt/fix-set-subtract

getMinElement now supports values < 0.  Checked and shouldn't affect any..."
fab3a8310752dd71ec9e06ff5b043aca54a95110,"Remove ability to reference enclosing rule by name, in favor of always using $ctx (fixes #571)"
17128d64869d43582bccd523f32463d2edaaffc7,"Merge pull request #630 from sharwell/fix-571

Remove ability to reference enclosing rule by name, in favor of $ctx"
8809cc4950c01af7a434f734d67fbbb551dddae0,Fix documentation errors reported during the build
6701202f66c6a3bc0825f3cf68c47ed11ba44cbb,"Merge pull request #631 from sharwell/javadoc-issues

Fix documentation errors reported during the build"
f7a840c7644d344861e6decde9c2158d615728df,Move RuntimeMetaData.VERSION field to the top of the source file
2be522f0093b8cac1a928ad88857e64beaee0e19,Relax the default version mismatch listener to only throw an exception if the major or minor version components do not match
7b88a6dbeb760543328e2474063a8846dedce266,"Update the assignment of Tool.VERSION (fixes #634)

* Reference RuntimeMetaData.VERSION so there are fewer version numbers to update during a release
* Assign the value in a static initializer so it's not a compile-time constant"
6949e832d9a5ef0f8fc1784c37811fade1e42734,Updated comments to clarify recent changes in code
db1f8e6499941f55fb595470153214abc9737327,"Merge pull request #635 from sharwell/relax-versioning

Relax versioning"
3378be9c79f68da8b12fbdd8709eafe11892c17d,Update all version numbers for consistency prior to the 4.3 release
a72058bc67ca326d7c6f552a888c7e6665a7f9dd,Update dependency versions
bbac283ba238908a64bc1a81ce6f95ab065a004e,Add @since documentation to key new exposed API types/methods
3e6e218f4602ee82ac6719189e60611313f88ea9,"Merge pull request #636 from sharwell/consistent-versions

Consistent versions"
201eeb147d01301e8ca4aa0794bc8c2e22c2447f,[maven-release-plugin] prepare release 4.3
7d88b0106a5c0196f9e89e7c6a52f15574a1044e,[maven-release-plugin] prepare for next development iteration
b6311928c187fc9d1eb3309dad67e2f606cb86d9,"Merge pull request #637 from sharwell/release/4.3

Release/4.3"
06b7925460cee33e77af30254cd46bff8a3b965d,Clean up gitignores.
c572f69c1601fea86629f11bd4dd7600b1de7724,Clean up gitignores.
778a6acf583cd2d815e9d31c4833770d685efbc0,Remove checked in pyc file.
c6d986ac61c886b987dc5af8219d3eaae7f62139,Some progress
83f0f7645db139b0c1217bc80d75cc90dd2a5ea0,Some progress
4095ccc01cfa1f54d98157cfada3d1c3c0b30ec8,Prepare release
2b2c0eec00afd552785f2b7a733cd8132391abb0,Prepare release
4f6ce6bc0538521721de630199364c5168e67d54,Ready for release - all tests pass with latest tool
dc02cf7f06d142fbbd4a0fa32c63918c5685cc3f,"Ready for release, all tests pass with latest tool"
c30e14beb9bf61d430bbaef3ee07245891e8585c,"Merge pull request #2 from asottile/clean_up_gitignores

Clean up gitignores."
3a9c568adce9b7b46f12d88e14b1b4ce366a9d5c,"Merge pull request #3 from asottile/dont_check_in_pyc

Remove checked in pyc file."
592d0cb944cf4678f170d8abc819f3561c589ed9,"Merge pull request #3 from asottile/clean_up_gitignores

Clean up gitignores."
284cfc97a957fbe5af6cfef46700402797bfc844,Moved files following new antlr project structure
562057532e38673c11f3d0e60d12589f8df38309,PyPI version
3ecd8389db2690818792c7e352241dd101e4a616,Merged conflicts
489b48e3bc528b029a6aab5e69f75ea0764ee302,PyPI version
860d12750193bfdef67dfc81ee04b38bf6a35645,PyPI version
4acb1091deaa64fdb786a23b9f133a3b30bd0407,"refactor for reuse, make target check majorminor only."
8937e0d16e131c59a28ee1c47e17dd3680e457ab,repl space with tabs.
ff8e446810fc452b326011cc7ece67c8283440fc,version checking
167ddaf69a8e46a536a45776b5a4617a47c93676,version checking
fbd31f38fe548f4d1264e5034a4463c78244acea,"Merge pull request #646 from parrt/refactor-version

Refactor RuntimeMetaData for reuse of code. Make Target check only major/minor version."
91206869c5fb390f8ae7bae940b37d7c4c599248,Prepare for next development iteration
fef1dd5d8d3291b479e12b88f0866519bf0b4072,"Merge pull request #647 from sharwell/4.4-dev

Prepare for next development iteration"
262fd3e8d7b92909e8ea1cca41085a07db776a50,Fixed version checking
530d1b9b2409d98338a11bf47af4ecc1dd712140,Fixed version checking
a07d523c81cdc859c28f055ae10792d78f65ee96,add comment
31aa7bf5c9c15821c92e66384b636e48d80af346,Re-factor loading profile in the streams so that I can reuse that load elsewhere. handy function.
2e352e269754cbd3985b35f0dcc52c58e25ffdd7,add unit tests for -o and -lib; improve BaseTest: refactor writeFile to Utils. -o options and others not accepted by antlr().
5bd415b19526aea8719eeaf6e1cb8e0174ec9b9f,"Merge pull request #645 from parrt/test-tokens-and-imports-dir

More tests of -o and -lib for .tokens files and imports, some useful refactoring."
4f7f8538acb2a1e26082f6d1bc71160ca12f42b6,"add new panic() method, though not yet used. revert to java target if cannot find specified target"
36425dd59cf538c0a50d8f86666fe7bb9272a13c,Big change to error messages themselves by removing single quotes for non input text stuff.  Made cannot_find_tokens_file more specific (split it). Added offending token information to a lot of the messages.  It now only prints the file name and not the full path to the file in error messages. Re-factored the ANTLRMessage hierarchy to share fields. Getting the offending token required number of methods to take different arguments. removed the default ST listener in the error manager as it is apparently unused.  Cannot find imported grammar is now a grammar error not a tool error.
f0ab9b1415d6e20cf634b6fe62b457733c01443d,use assoc value's token.
f1d782ffe1be8caf7e0da49b14114d1cac04b370,Add convenience methods for detecting missing targets. At a few bail out points so that we don't try anything that will need code generator if we get an improper target.
e3fc04bda1ce8bafaa55a2a584f26f2238c910c8,put good quotes back in. rm unneeded arg to left-recur msg.
1b7cdc4328b569333ea60f2c04c3c6940057d130,move templatesExist to Target
163ec98afc995f3935cb0971e512de3781dd8919,"Merge pull request #650 from parrt/null-ptr-unknown-target

add new panic() method, though not yet used. revert to java target if ca..."
d85ea0649ae9aa3a2d50ef0172d80d4a22e88369,"Merge branch 'err-msgs-upgrade'

Conflicts:
	tool/src/org/antlr/v4/tool/ErrorType.java"
07b7a4b334b9c9b93a11928a6009103ec5ba43ea,I messed up the merge a bit in ErrorType. Made something into a grammar error not tool error. changed tool error back so it does not accept a token in the grammar.
9ab1523134bbc85a54dac8c6cc032340b91898c0,tweaks to get tests running in latest 4.4 dev
03fea116351a93638170a05506c780df4faced73,tweaks to get tests running in latest 4.4 dev
9a3900c3a21f6d926d8c2f4b273cd28f7d5770b6,Ignore the Roslyn IDE cache
2a3412ff7389e6814b32b406dc0392e64c76f929,Update to the latest release of ANTLR 4
c860ff779f1a139f5f76dbd518fb9102fa2f2a58,Merge branch 'sharpen'
407b568ed646c7a10eba1cd65c8d87156cf6200d,"Merge pull request #51 from sharwell/roslyn-cache

Ignore the Roslyn IDE cache"
ded0a6a04f3bc50b72493351745fe137f15bf088,Fix build errors in newly generated code
92e77eda26e77995a4ebd46c1346aa7339f1d8fa,Merge remote-tracking branch 'sharwell/master'
484ae7893647e4a30f9989fd3a2a3af92d584d3d,Move Checksum and CRC32 classes to testing library since they aren't used in the runtime (fixes #48)
984261221ceecc7c6d04e014a9296d562d53bacd,Mark Sharpen classes internal where possible
72968775bdcc29d7405a69b1520292cebdd8d567,Fix errors in documentation comments
fb0adf1ce5670cc09dbff2781a25f139d3e234a2,Remove dead code statements
1a2d57d0b38b7355d7533f691f3bece16cf7a5ed,"Merge pull request #52 from sharwell/fix-48

Fix 48"
1e851dc565f9d7b070a3a6f14a8daac63d4115c2,Fix errors in documentation comments
f3efcaf09c58812bd59eb1a882a38aed3ca72e03,Specify StringComparison in call to Equals
d975107e81773fb4d0de2ceca7e2cce09f09ab87,"Merge pull request #53 from sharwell/cleanup

Cleanup"
a07194b88c5720b586aa78dc5ddd3865648af470,"Rename projects, assemblies, and preprocessor directives to more closely match NuGet packaging"
90d2fee8ae1035cdc25b2c635c7895460244182c,Use the client profile for the .NET 3.5 and .NET 4.0 builds
e57ead14102058384f4b7de9bfc43bcaa16d4f08,Rename Sharpen namespace to Antlr4.Runtime.Sharpen to avoid naming conflicts
0c70c2b24e67e7ff5791d969ffce2f5d3a66e123,"Merge pull request #54 from sharwell/sharpen-namespace

Rename Sharpen namespace to Antlr4.Runtime.Sharpen to avoid conflicts"
491078e327212317f65f103ebcbfe3c6a095af8f,"Merge pull request #55 from sharwell/client-profile

Client profile"
f82ade808c579eea3f813dfcc19abf80f3b97846,Update Tool and target templates to match changes in the Java build since the 4.2.2 release
c04f08e0f2c15e39493d6483d242213871d609e1,"Merge pull request #56 from sharwell/templates

Update Tool and target templates to match changes in the Java build"
273a6466fcad55f5ec4caaf5b10f565dc6d78f1d,"Merge pull request #4 from parrt/master

tweaks to get tests running in latest 4.4 dev"
fb3bae96a02d2bace40658a334dc5696f5fea134,fix name
072f57871a029f5184644994832261035e3136e2,fix name
8c9d1c45ee21f96123171f22713a746e92169908,got an initial build script.
c2154188b08056c59eb34bef5be8d03ef729d36d,makes a jar now
9c7563646ff226a63d489506d438d31a312fcb20,add jars to final jar
2bcf5c6b637ade903297d18b3154166c6476ba9a,use 1.6 to compile
4bc328441268e5d0aa11a929a7a95ce8a52a5680,add javadoc
eef89a0071306775a77f199384d1019ae56a0c82,Convert many additional methods as C# properties
775aaa6494ba08e6c445d53b4369f5daa69b11bd,got javadoc DOT images in; updated font names to avoid warnings
5b0120f6e5c265c62e30fe0ebef4163df7619883,"Merge pull request #655 from parrt/add-bild

Add bild script, set version to 4.4"
2cdc0537fac2ca59363d68095651a74db070d6b7,Merge branch 'sharpen'
1be22e5b1a67c6542c125a97ce85703766e69099,Make Args a static class
63053efd2a5ddf3cb63dd3f93d1d9ab760cbb379,Updated TestPerformance and associated code for the latest release
fe326644fe5e7376951ebf461b094f0ee2904a5e,"Merge pull request #57 from sharwell/static-args

Make Args a static class"
caf366d9b4c039b143cb95775c85c58667ee073b,"Merge pull request #58 from sharwell/test-updates

Updated TestPerformance and associated code for the latest release"
5c43d2105d4153870e2185c0e0e8ffd877789426,Add Jim Idle to the list of contributors
914a61eae49d075edf51e50ad5eabaa19992314c,Correct the email address of Jim Idle
5e5efc3f4f87bfaa3bb5f3bac5dc671df211d664,"Merge pull request #656 from jimidle/master

Add Sir Jim Idle to the contributors list"
9995b33cb9f4e551879c94a1061fd5325f8d99e7,Simplify the handling of OperationCanceledException in net35-cf library
38659d3b7939b5901f3acd4a0725ca4b9e6de252,"Merge pull request #59 from sharwell/operation-canceled-exception

Simplify the handling of OperationCanceledException in net35-cf library"
4ef578ec4d5f3a0c773e01ce661806c67c84b1a6,Extend PCL support to Silverlight 5 and Windows Phone 8
7dd8996d41f4e1a52636a3b87eaed16d01c65e63,Added netcore45 and portable-net45 (Profile 78) assemblies
5924d1a9d2dc73cc7b20cdc798c2ce64fee766a1,Update NuGet target framework names for portable class libraries
cbd5d1ae85425528213536a4f0c00680fe8c94b5,Simplify the handling of SerializableAttribute in portable libraries
3b7843d863028c86883d4ac839e9a7381e6953f2,Sign the test assemblies with a publicly shared key
094592242053bf2f885dff6a2ae98b787a553022,"Merge pull request #60 from sharwell/fix-33

Updated portable targets"
6339ee6014170ed70d61e9db15bd6413daad53a3,"Merge pull request #6 from parrt/master

tweaks to get tests running in latest 4.4 dev"
0b59fd5f33cf691545bd7ace7c682f30a11b8543,zip javadoc
04535fcf290a9ef76fa323566d7a51b13cc01cd6,factor common char encoding into main Target; version set to 4.4
cac6850f9761034983c11c7fd36501d1561c4500,factor common char encoding into main Target; version set to 4.4
e1ba264d93e71e83bf521b7adcbd68f27e56e1e0,move common char encoding up to Target; same works for Python.
2ea9d0789a79f8cbc8d7d3f4802d06712545c477,"Merge pull request #657 from parrt/factor-target

Factor target"
543936eefafebb7f220da37b386d4a4172144fa2,bring in Target.java and template files.
809e9ee1454126ea95ee10cb8d759b72ed7e9238,make target javac simpler
fd1cc448b0d7a560e6adca8bb7c2c27523077e1d,"* Update Sharpen namespace to Antlr4.Runtime.Sharpen at code generation time

* Support self-closing tags in XML documentation comments
* Use self-closing see tags when the content is just the name of the referenced item"
0da1f54f199282c517ba963ea53d0ab859a930db,Map Collection.add to Add instead of AddItem
9a23a7f3c5d499dd6ddb018383e355f3ab9146a1,Map java.util.UUID to System.Guid
20fdbad8af9a7aa817d2024bab969d776c604bc2,Merge branch 'sharpen'
8a062443afbe9529468ef11407d5125f22edb970,Map putIfAbsent to GetOrAdd
1f8c124fa74a67c050655972150d7026a67a6a74,got junit tests in for Java target
9f90162a7d1bd3a8a8c622ed15e0c24be4b3d7f1,Map ArrayDeque and Deque to Stack
bd8d057d02383bb8cda4c8001e4fa26a0d32fb18,Map java.util.Reader to System.IO.TextReader
580ef4f950af010a09505151b77ac1ffee0e1647,Merge branch 'sharpen'
e86b6234c5098b6712e4c97445eee6bff4772230,"Merge pull request #7 from parrt/factor-target

factor common char encoding into main Target; version set to 4.4"
2d97a66984440b05a282ad516564a2efc0580106,"Merge pull request #5 from parrt/factor-target

Factor target"
9b76e6423c33d5640d84382f94e03c10582cec34,refine error type
ad069c9e08534a1ec4fe42bcad58cbaa09247bfd,got unit tests working finally.
2b7c32e8cfc63f2bcb39faad4a02172ce133283a,expand path to jar.
d6c1fa152db05f14f1b25b2cb6bfbc6aa0a5f4e4,correctly add target templates
74573c2eed27dd316239c15add056bb24881a90b,"make runtime jar and minimal runtime jar, improve manifests. Fixes #576"
08a1dc77f596b774702b69ad9269ce8456c01be9,can't make minimal runtime jar for this release; unfix #576
84b936a70a058cb3401acbc26252e5b83d261328,Updated version numbers for release 4.3.0
571d553f51613be39ba30ec2b834d85937b7c614,Enhanced version checking
07e3640a2c1a2d3ece36e1ab22650b1d7d175761,Enhanced version checking
75f10cbe4ebb501aee8c68ae1cd382619c9fd1e8,Update version numbers for next development cycle
30b8b1452ddc6435f6968d988a4e136465468a9a,"Merge pull request #61 from sharwell/release/4.3.0

Release/4.3.0"
065d6733aec6486f8272146a2066fbe23683b823,make bild bootstrap
a578dba41590a28b3a3973ae7472b13cd5e02cb7,arg was renamed in bild script
94ddde2dbc0a344c67853239555bd52c67da3c56,c# target dir renamed.
83411ef056c5a2ce4fcca83584cc922c3ddf8224,add test
c22706135d8cc1b82d81135422e3bcec9102df2a,"fix build. separate antlr3,4 gen dirs"
87852c7757debaa5133b904eaa5a84f737a5ea81,Merge branch 'master' into fix-661
ee0345c1e223abe330448c6b9824aab18572afd3,"After gen of antlr 4.4 jar, rebuild XPathLexer with 4.4 then remake jars."
b4a53d56d4324739e823344237c4d7fdf6cac90c,Merge branch 'master' into fix-661
bb389782da9fe9a9a1c56c31a5af4f61c39c31fb,"Fixes #661.  A parser rule reference within a lexer rule would get a bad error message and then an exception. Further, errors within the grammar tree visitor would go to standard error instead of to an error manager because none of the subclasses implemented getErrorManager(). Introduced an error type for this error PARSER_RULE_REF_IN_LEXER_RULE. Added to unit test."
f86fc7112845bc41e0851d322407a40148445780,"Merge pull request #662 from parrt/fix-661

Fix 661"
d31151b5fdb2966b55df446d90f5a668a97297ab,add getVersion() as 4.4
7865142f9e1b38a1e155ad833a21b98d57593c16,improve bild
3f8f01e2f7362699d9ad1e5572e3bafb9ecc5da5,Versioning for release
2f04d5ffedc6c34ada62551fe38c47723b020a6d,versioning for release
1f797853bbab358babf7841abfd8f81088448831,make tests build in their own classpath
7d19889ab291c4b1ad46b4fecbb40ba2b41e342f,add comment to describe build
677cc279ad6a3281145728f0c3cbb4585198584f,include annot in javadoc
b807e06df84a22715affe2583237729332524781,update comment
54b875cb9d4f8baa17e536af95c8274e20f3f2f9,mkjar was missing runtime in jar and included antlr v2 in complete jar.
a61c3eeeda98c0e7ac2b962817100362ba9eed32,set to use 4.3 to build 4.4
1693c74645d5bf1461ba609c5e86f8b9ca71ca74,add classpath to javadoc
90a5aa469a09a9296fe3b9a25b37ed8ebd3d627f,"add title to javadoc, tweak readme stuff."
70dd5227c1a5c3a279ca0fea7a02751fbf444de8,prepare for changes beyond 4.4
2ca20e00ffffd9ce792f004d1625583229c80f15,Remove unneeded createATN().
94c1c77652cf4adebcd1ee8c01be5ea894ad8d81,"If there is no loopentry decision, have + AST point to loopback"
aff865d1a7f7f8235bc122c4ac401b277bdf5f92,Make the plus tree node point at loopback always.
73d2f1f6880dd9941926c2d1921bebaf18ec7306,simplify; + node always points at loopback now.
4a57ed6a5144a1ad9b7ba4719b02fd07599362f1,"Merge pull request #665 from parrt/fix-664-plus-loop-loopback

If there is no loopentry decision, have + AST point to loopback"
c78833e705caf9a628c9b82002abeb28b2eb4be0,Update to latest build of Sharpen
20b89b15e84041390ad6368a0824907bdc3b16b8,Merge branch 'sharpen'
3e276ba25193f55541f76aa56f51828ace92f193,"Mark the parser generator NuGet packages as development dependencies.

This way when you generate packages from projects using the parser generator, NuGet won't try to also reference the parser generator as a dependency."
fd79c662e7fde0aa131f9c582c2b23e65622662f,Update nuspec minClientVersion's since we're using features from 2.7
7e2dfc53cdbdcbb037ab5bd9ddf93d5a16d7525e,"Merge pull request #62 from rharrisxtheta/nuget-package-patch

Mark the parser generator NuGet packages as development dependencies."
8e69a5b99d0b23236ce523ca6cdc1de1445d2f5e,Update CodeGenPipeline.process to check for errors before writing output files
550a737acfa66de9a3999093bb40d6519d51ec7f,Make sure code generation was successful before attempting to compile
399a1df04754365303cf43bc6446805890c452e5,Add regression tests for #677
a7f53ce39602802f3ff69f5828754423260486b8,Support list labels on the recursive atom in a left-recursive rule (fixes #677)
561383c34c5973e129ed77d33a1d850ed4273cc3,"Merge pull request #678 from sharwell/fix-677

Fix 677"
4c8b233afac052e31b1e203bc99d9e8f5a86ccd5,"Updated .gitignore (profiling results, test results, and Roslyn cache as a directory)"
507803e4ea75022d4a94c54e6534fe7d85f32ae8,Include Windows Phone 8.1 support in PCL builds
f3bb171c7e53a62a0e52c3bb069666811cb47776,Use unique assembly names for test projects so all tests can be loaded at once
ac9e3b9bc992932e5d6cc82a8478fecc30e700f6,Update NuGet references to the latest release of ANTLR 4
3cfca9a7fa449b86c998656a042f1a99eff8601e,"Merge pull request #66 from sharwell/nuget-refs

Update NuGet references to the latest release of ANTLR 4"
12e116849aa3a8fadf548475684ba6badb0c22f3,"Merge pull request #65 from sharwell/wpa81

Include Windows Phone 8.1 support in PCL builds"
f375f89a97dadffc77fa9eef4cbc712270b3a4e6,"Merge pull request #64 from sharwell/test-project-names

Use unique assembly names for test projects"
fcdd1a5c91669a396134abe03c76cfdf1b2ee9c1,"Merge pull request #63 from sharwell/gitignore

Updated .gitignore"
61692ac972fa087df67ed582d181f70c80f62d99,Use signing key instead of assembly name to differentiate targets
c6dbd11816f7a60cc176652da7ce6c526f4ddf3c,Use common configuration for NuGet pack and push instructions
fa9021342444c17918a2d96b384f116db073eeaa,Use WriteErrorLine instead of echo
5f6cc0375d9d3d98db2bc75c546cbda6ddafbdeb,Add the -NoClean and -VisualStudioVersion flags to build.ps1
e9613050fe080e9255d592295f323afc108c5a6b,Build the Java code as an integral part of build.ps1
6140614e1660c5fe1b88eb797999260b419e3297,Check signing keys as an integral part of the build
75f79b9ef18dcc70c0ca234426096109a9a855d6,"Merge pull request #67 from sharwell/build-improvements

Build improvements"
899e9a40b71bf65c177676fdace5bd4013d46f70,Fixed template to correctly deal with wildcards
b62408067ee86bc78c871c1e74afe4085488a853,Update precedence filter to properly handle stepping out of left-recursive rules (fixes #679)
99dd914045b4d20c623d4152cbd1036b3c7ff62c,Fix assignment of precedence for binary expressions with an implicit operator (e.g. testDuplicatedLeftRecursiveCall)
0c1178bf3afc172a1669f0a7d629300a52476e28,Include precedence in rule invocations when -atn is specified
6790b25e5b2b1cd9d8db663eafad781a913008fe,Support zero-length tokens in the lexer (fixes #688)
e497efaa5873301b765bf187ee34c1cec88e8d25,Support zero-length empty lexer rules with lexer commands (fixes #687)
cacd317d029a2ec29d985e028cd7b91e891fd9fc,Implement support for defining custom channels in the channels{} construct in lexer grammars (fixes #309)
1f7220756a9e420b2c86a324fc832a5d879ba7b2,Place error 160 in the correct order in ErrorType.java
3ef0c84e7f42bef927719e9b9b6a074816892533,"Merge pull request #690 from sharwell/fix-679

Fix applyPrecedenceFilter removing pruning too many configurations"
7bf47e1670fbab9fe7490e70d3bef316fdad0ff1,"Merge pull request #694 from sharwell/fix-309

Implement channels{} block"
fd194f073baa662cc5b08b8613c10582ac13767a,add parrt summary of conversation with Sam about precedence DFA optimization
6e869b3e806ab199158bb10e835a28b9205687c8,"Merge pull request #695 from parrt/prec-filter-comments

add parrt summary of conversation with Sam about precedence DFA optimization"
a0584a2c3158dc0eb76e9395ad67954e995c5445,token types bumped by 1 I assume due to recent lexer updates for 0-length tokens or for channel thing?
77a7bda1276f127c2738120399568fd9286fc579,"Merge pull request #696 from parrt/update-unit-tests-token-positions

token types bumped by 1 I assume due to recent lexer updates for 0-lengt..."
6e581b3be66dd3a36a3e391488b90133d91fa55b,"Merge pull request #691 from sharwell/fix-688

Improved support for zero-length lexer tokens"
afadc2d976ae75d3ec104cbd562ea7f5fe8a3cd1,Include initial value for attributes in generated code (fixes #672)
7f577d92090ccfd7e945040ef96da8d09d2211c7,"Merge pull request #705 from sharwell/fix-672

Include initial value for attributes in generated code"
47f722370548870de329a7805b8fd04cb6827ccb,"Some great progress

TestLexerExec 100% ok
TestParserExec 100% ok"
727f0431f9a057d9f1e3c2e090636f6c531d93af,"progress

Fixed context dependant sempred
TestSets 100% ok"
9a58ebefb902fb8df67aba6993677da1159126fe,TestSemPredEvalLexer ok
7bf07e76efc0da1609a94c0ce708e75a86462648,"good progress, fixed ATNConfigSet, breaks a few Lexer tests"
96ba79c8c5fb17b423f9a99971ee5adc65e5926f,fixed TestListeners test code
36ed0c6618c9f432f4acac22dcbda1264f120e41,fixed TestParseTrees test code
9d6a6bd3a8bb94278891875dc7f4c029f0792cb2,Add regression test for exponential complexity of recursive imports
e4c193005e81b6082a3698c000d60fcb516c131b,Fix exponential complexity of recursive imports
4b7873783df3f213e5c833cf328ff12e49d2e6fb,Remove logging code which has a detrimental performance impact on processing recursive imports
f78f6ceef06b0e90c6901020316311cd5a43cde3,Suppress OPTIONS_IN_DELEGATE warning if all options match the root grammar (fixes #707)
4422e0ff12fa95b213e3a2eff0489a3618808564,Deprecate ALL_OPS_NEED_SAME_ASSOC (fixes #652)
313767239011a7e044da864629380233cef58092,Add regression test for #670
fbe762374cdf13d865cf2c50ec6267b5f9ac7337,NullUsageProcessor supports Java 6 through 8 (fixes #487)
4f56bb7ab09e09dd47a1e1c4765a39f0587447f6,Add Parser.isTrace() (fixes #701)
92a8ee7ad227ed1f99dc4c271b4086e1cb965fd8,"Fix JDK8 incompatible comments

In JDK8 javadoc runs a lint pass over the documentation and fails if the docs
are not valid HTML. Also, see following article for a more in-depth 
discussion (http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html)

Removed all occurrences of <br />,<p /> and replaced them with <br> and
<p>."
57fad56593f93b226463ae0141664fef77c0d5cb,fix an infinite right recursion bug
c9bff2222c541ca39feb3fe5c342279886973387,"Merge pull request #714 from sharwell/fix-652

Deprecate ALL_OPS_NEED_SAME_ASSOC"
0d4a28eac9291fe6483259312a751228fe4d10a7,"Merge pull request #717 from sharwell/fix-701

Add Parser.isTrace()"
0d18457c6dea681b529bf1fe9829a0eb65f9c788,"Merge pull request #716 from sharwell/fix-670

Add regression test for #670"
e3f2e5a7d07b4e722e7f771ee39baf7ba0676f3b,"Merge pull request #715 from sharwell/fix-487

NullUsageProcessor supports Java 6 through 8"
f143495ab2efb743c4c719546d8f3cc70b22df9d,"Merge pull request #713 from sharwell/fix-707

Improved support for recursive imports"
daa462206af9fd06f167a634e1113b991333238e,Extract abstract model class Recognizer (parent of Parser and Lexer)
1d2a153806d8bb1b81c07665ddd8ba410866fd9d,slight performance improvement
07d1671d58e1f466895004136c0feaf267d64ca6,"fix lexer issues (appeared after fixing parser issues due to change in
config set)"
d476d3e5d9a117a6d00af194e4729dda85254851,Implement token vocabulary (fixes #711)
0be4a3aaeb66a1b86666e2ce73a4c3436d6cd7d1,Fix test compile error by avoiding string literal assignments for the large lexer test
35bbdfb65c619557fbc52c5bdfa1635b56f48b3d,Allow XPath matching by literal or symbolic name (fixes #579)
78c24f05888e52de1f5579183bb9081fbed12d4e,indentation fix
2883ee2897201253d9f370043105b39ad4684a32,contributor agreement signed
61e23a2032c2c8bc22369dbe1773dccfcc7bf86f,"Merge pull request #718 from petrbel/master

TokenStreamRewriter indentation fix"
2454fe6cd112e81c1a4bf56a3c34b7359c85413f,"fixed testDuplicatedLeftRecursiveCall, no regression"
0e4749df160b6799ccddb4b791a2c4c1c7ebbb69,TestParseErrors 100% ok
c92e7baa78e93569ca35958d21c9cd70ecb830a3,TestSemPredEvalParser 100% ok
e5acdcef43c82845e365b3a30706cf0b203f5e95,TestFullContextParsing 100% ok
dc54f12621ef04511095bdf6d255d0f5d390dab2,"all tests pass except ""a.f(x)==T.c"" in testJavaExpressions"
c26cf1f149bd8cb6a267f4232077519d15c3ca77,"Require Maven-plugin-plugin version 3.3 

Reporting targets fail for dependants of the maven-plugin-plugin with
JDK 8, because the plugin generates invalid javadoc.
This has been fixed in version 3.3. 

Also see: https://jira.codehaus.org/browse/MPLUGIN-244"
69f8e0fe65738c8c95379dd208c8053cb6040485,fix bug where SetTransitions would be corrupted when running LOOK
90071c69b850a0f3c79d7a67b3b51f51af61bb80,Fix getSourceName returning null (fixes #667)
065c3e68b870b22c4361f005da01f2b191f0fbd6,Add additional NotNull and Nullable annotations
cfb95ed95a8040dd4888d01994fd4d2b4a826e5f,Add missing Deprecated annotation (fixes build warning)
88d46ee54b32ae62dfb44db2fe5715b0fe8f9851,Cache the Java code generation templates
3565c36db68ba6e82fc4222824a1150c9213bb97,"Merge pull request #721 from sharwell/deprecated-annotation

Add missing Deprecated annotation"
00227078e65ab857b384249e6aa7d998060ac26c,Move doc comments to comments channel (fixes #465)
dd3eaaa31a7b88e63a6626648d865ef809a1ccf4,Define a constant for the comments channel number
26e2c72c97365e0235e7228fe15bb4f3a59e90b7,Sign contributor agreement
0942edbedd1216d30fd9bb8afb86c560e552e866,Use LinkedHashMap for deterministic behavior in Graph class
08ed19078d79476da95500a059366eeaf3a47489,Deterministic token names and types for string literals
2777bc4d269e2e56ebe19f11184aae132f676c61,Output listener and visitor methods in grammar order
7bcb434c6f93cae1c64ba64274e714e4fe95c24e,"Add closing p tag

After discussion with sharell it turns out that some of the automated
 translation tools used for creating other ANTLR language targets look 
for closing tags (for one reason or another), so for this project 
the practice is to explicitly close all tags."
b960d4b39d599cf70fcfef890b05193dcb73c3db,"Merge pull request #712 from sharwell/fix-711

Improve runtime vocabulary information"
6c531dc4297a2d4ceb069107403d05ff089a4ad5,"Merge pull request #720 from sharwell/cache-java-templates

Cache the Java code generation templates"
11aed36aa4ad32e2be8cfab16d43271bf1ac8a2b,"Merge pull request #722 from sharwell/fix-667

Fix multiple issues with getSourceName"
aab59cb62dde85e42af68ad10502aaf7cbc9a711,"Merge pull request #723 from sharwell/fix-465

Move DOC_COMMENT tokens to the comments channel"
badc21bf49d2fea897e9c9928f09b86253a0a24b,"Merge pull request #724 from sharwell/fix-709

Deterministic output improvements"
5dc0b706c403322c15bd7cd14fb6ccabbb2c9dc5,use antlr 4.4 to make xpath.
d50660269659dcb4023cf64b3fa4711b96f6bcfb,Merge pull request #719 from jeduden/master
c3a7bdce7bafd5bafc8cba748c2c0b6fd76f5ef4,Update to the latest working build of ANTLR 4
53a6ff65640c9ade9459d1974ac14c0d6f8cbbcc,Update project to include all files
a20e05e994d1d6cd3d6e74260b0dda7d5fa28a66,Merge branch 'sharpen'
3fb54ffe5bc9d941abcecaea48d7645aadb6f572,Convert recent changes to C#
d26af7c8fb95ee3f4fcc103bbb173f88a6bd91b4,Fix failure to create a copy of an array in Arrays.CopyOf
ed95652f60e80d59707d42fb8646058067dafb6b,Remove unnecessary casts
ab04026ca2efdefe2ac99b0692443349e6ef37e4,Updated code generation templates to incorporate changes from the Java target
728706046ca7675ca0325c3bdced8807a2224c48,"Map .NET Framework [4.5, 5.0) to target CSharp_v4_5"
e811a63b907f2452fd1dc41127880ebd755623f8,Case insensitive comparison in build task
f02285edd714b570905967fe55f62c46a0cd903d,Update to development version 4.4.1
84f086cad4906d195563dc0d5d63381947611331,The master branch is actually compiled against the optimized reference branch
878739f6e4dd1304f8e45865c4f523522f0df590,Updated version numbers for release 4.4.1-alpha001
ab3f6b190ea26f5fcf4dc40cec3e01607e4bbeb4,Prepare for next development iteration
48e9096fa4085760412839b3c97c1bb956e587fe,Merge branch 'release/4.4.1-alpha001'
798af94b90917f79517c2b3c6f358a2186061cc9,Improved deterministic code generation output
84fbdc803886b2040e4ef8686f0d84498aa7a47d,"Merge pull request #726 from sharwell/deterministic-output

Improved deterministic code generation output"
ef8570c6ade6c2cb508b412b5fe776e5d894616d,first successful selenium/Safari test
6f35cf231ba92d415a1a9ef4c41b8e8f6e2f7df4,improve debuggability of generated recognizer
e38eec4d95be516bf06d251ce8753f1f603e6d1b,improve management of test directories
89d80cc8ed64ec07986789677a7f3b8654b3ab20,improve test granularity
7841db1eebe5c4c9bbc5bc5d1d25a18868eb5226,enable testing of javascript runtime in browsers
bb7f2c7a745d4183d64e0f4950646e5e39e4987f,"Merge pull request #728 from ericvergnaud/improve-debuggability

improve debuggability of generated recognizer"
343a10a1b338efd4b351e8681c38fef8f2e7661a,"Merge pull request #731 from ericvergnaud/enable-browser-javascript-testing

enable testing of javascript runtime in browsers"
ba5f6d891940165fea4b086b54f2ddec4cd2c599,Fixed a discarded test
abf10524264d81edba73567781e74647c3ef5e2f,"Merge pull request #730 from ericvergnaud/improve-test-granularity

improve test granularity"
368c142be85e1b174d321410a4a21ddbdf05941e,"Merge pull request #729 from ericvergnaud/improve-management-of-test-directories

improve management of test directories"
844d89350f61372943f7b459d4a6ba9b39b89c00,Refactor and document configurable options for BaseTest
cedbee27b20c94d15cafab17c292e6ae73ffd89b,Create a test jar to assist in testing other language targets
f026bb7d01f174c7b496d585c1f0960d25d07e2b,Provide tokenNames to the code generator for improved compatibility with templates that haven't updated to the new Vocabulary interface
39c3f4b4dd4069c39d067c2c30cc50a7036fa32b,"Merge pull request #736 from sharwell/codegen-tokennames

Provide tokenNames to the code generator"
f8d7e77c431df6b4769ad89b67ea0558af2d570e,"Merge pull request #735 from sharwell/test-jar

Create a test jar to assist in testing other language targets"
cd509b720be4fc9409c81ded49717db30f40678e,"Use File.pathSeparator instead of "":"" to support testing on Windows"
ccbfcc28bb3c01ce053dbe59e0d172458343490d,"Merge pull request #1 from sharwell/path-separator

Use File.pathSeparator instead of "":"" to support testing on Windows"
68bf457b874256683cfb5e3733f78c29ee41a4bc,"Merge pull request #734 from sharwell/refactor-basetest-options

Refactor and document configurable options for BaseTest"
b42502943693d42fe79b44ab06ae994681dc2343,work in progress
ea20af25ab1ff91c04faaf48c5a27bc01908aaa1,work in progress
4df40e58e2f2baec75d01b29c1632664f063e8d3,progress
1d9ac194f1c007d31b703b726002fd442699c156,progress
50466f61dd8e8c814101b3c9f6da7a5bfb8708ab,progress
3137c589a9007753055b1d64740ccbee0d1ed9c6,progress
5f1759cc54efaa08067d3f97131a882d9d67fc7a,"added Serializable interface to Pair class

In order to serialize an ArrayList of CommonTokens without errors"
f22acf701eac16e51fa7d2f03c027a49a3c942d3,progress
6224582ec91c57fd9a35f67cc508b563b3b5b37f,progress
9fe258a9a59034897720b5cd8b77b547c65fdd94,progress
4f657e3e52da70ec39dc2909b0097f48fea65494,progress
3d04a72d5217860dabcff34a692696a26122369e,progress
beb30bdd4545e7f023a570d407bb9c14999beca0,progress
f80f9d7da448bc689faf00072089690edecb7c18,Use encoding in FileStream to decode file contents.
f1b41c44e7eb0eb09ab6e0641ff9a6a1e23de1dc,Changed default encoding to ascii in FileStream.py
fb6839b40a46714098087279ec0805d141079c69,Added name to contributors file
edef56d50e72a15a4b7b183c0107998302750cf5,"Merge pull request #745 from sergiusignacius/master

Added name to contributors file"
cfbee8e4ba35dce9cd458546b5efad14510b2d75,"Merge pull request #14 from sergiusignacius/master

Use encoding in FileStream to decode file contents."
a966650f3e178418c918654b59bc0501b611b171,progress
fe0d1e43e23ea54275508906b91eab1c8600bfeb,progress
85388803c6e18163a98a13a20143f06e41d01967,test templates complete
4bda1b37e537b494cac4c1945613bd935711825a,test templates complete
809bac259100b7020e0bff23b0ee8b3372624d42,generation of TestLexerExec for Java
a4fcd7b48d5311768db495dc94bade179d355778,"changed test hierarchy, regenerated Firefox tests"
a683f05f6a932c3c6e13c13941b97b2c35212db6,"add missing test in LexerExec, fix LexerErrors"
e97083fd81d53611caa7d8a72a59e53f26a3b559,validated SemPredEvalLexer
f99acb7202a64d561b8b279f47600a257e00c357,validated CompositeLexers
e03c7d44e5c05502c15654c39db36406bd21d19e,validated Sets tests
6067aee458eb74bac9b27f4dfb2d8ffe82c57f76,validated ParserExec tests
0c112e97c81f917e550e35a4da4c977f4d66d20c,validate ParserErrors tests
e39ac5a197c825d82b9831742abfcb078373434e,validated CompositeParsers tests
31812721c858c1468e54b00f714c4342d48e1501,validate FullContextParsing tests
740c30d21d4700b8dc4fc01a2134bba7832cf558,validated LeftRecursion tests
5ee6990f8cd79bde93ce2ca23dc9374df45601b8,validated Listeners tests
2716bbd62d1c266ae8bc17137e42598efb10a430,validated ParseTrees tests
ba76b053a7642ddb6dcbf6360645b617be37bef2,validate SemPredEvalParser tests
129cbbbeced3c8f2d9bb73875c61514e33e22c5f,java tests validated
ab7b0ae55800b615219f0d7f36acddbb0c483b8f,Fix the Force ATN option
fcdf397148974a7aa1e264921ecb65bc38a8e65c,Update reference version to fix the abstract grammar option
537819ba478c8b0d1c0270c0c300daa837f21ff8,minor changes for Safari support
6a0032de7cf91111c90fcfa5c2b81f68f72e00df,"all tests pass in NodeJS, good progress in Safari"
15422eb85f1d62f96109d603411b3564c3a1da4d,generated tests
e0cf581d40ea287252825618d88de9710e7d8819,Fix handling of lexer accept positions for zero-length tokens and at EOF
6aa36090dc05d8fa22563dfcbb8df4624f76548a,"Merge pull request #747 from sharwell/lexer-accept-position

Fix handling of lexer accept positions for zero-length tokens and at EOF"
6a74604693c2f71fed6e43118270124e853cd3ab,read errors in Safari
8070c40f0b3638c6f2fb1af9338893baffd066ba,Sign contributors agreement
f3abfb79b724643e00868f941653d1290685856a,"Remove special offset handling for EOFs.

They can just use the position provided by the lexer."
60980e6eddd795258b1330c1b23a11eb8cb40545,"Merge pull request #749 from michaelpj/sign-agreement

Sign contributors agreement"
6acb8e7e462d70faa465012135330d57b7d0508c,Add a little bit of documentation to ParserRuleContext
a38f5a0941e7b9b4b50e093f04c7725613bf776e,Be a little bit more precise - it might not be the direct successor
3e45fb2bec3863c104b3ea8802fce2ce8136122c,"Merge pull request #738 from michaelpj/fix/eof-offsets

Fix character offsets for EOFs after newlines"
cf7a46958c938433ab584e6acfd528eff2fd8a39,add self to contributors.txt
10b9fdf69c39260c998954d26833e83c6282738f,Merge pull request #750 from bdkearns/sign
2fb915bfeb81f8d0c408cf2ccce91e3b15c471b0,progress with Safari tests
0c94f8e8bc23c9d6b5dbbb824d794b1b384e7765,remove automatically generated MANIFEST file
a7cc3fcd502d908f816445847e054a9e2577e947,add some build artifacts to .gitignore
eaa83a3c4e5c07cf2f4e0657813506b8da1115f7,provide support for visitor pattern
a355ecf3968898a3c1d0eeecd27d26a288d05c6e,update tests for deterministic naming in 08ed19078
ba715e4e8c754a3e3b16b9d848abc4dc334f8280,remove unnecessary getSerializedATNSegmentLimit
3398931a976685ac1c57b4d72d4830a4b766c539,"full Safari tests

fixes poor reliability of selenium using a shared web driver. Once
started, all test files use it."
66fa76da7b27a7f9ef86042a420a6e0745db1c26,"Merge pull request #16 from bdkearns/fixes

Fix build artifacts"
ec1844f7438d3b9eb948898cb6a5ed795a11772b,"Merge pull request #21 from bdkearns/fix-tests

update tests for deterministic naming in 08ed19078"
7f2d1f2edf32d4d57fd6c299a8c91932e080bb03,"Merge pull request #20 from bdkearns/fix-atn-seg

remove unnecessary getSerializedATNSegmentLimit
this should have been removed when Target became a full fledged class"
97a2946a2d14d276ab9031bf15d07572ad5f9d30,latest selenium driver
7063c541cb96522d78c629b083cc207ccce27278,"Merge pull request #11 from sk-/master

Fixed template to correctly deal with wildcards
Sorry for the delay, this had gotten off my radar
Can you provide a sample grammar that breaks due to this bug?"
2d4453a7ed696d17d36dff5d7d481c28046ebc66,new tests
1f9bd747915f8eac4a82f75044fdcba1adbe2026,support for symbolicNames
283fbee57dad06a1c99fd4d4d74222f5dfad85ca,"Generated tests and corresponding bug fixes

Comprises support for symbolic names"
fba656e6a2cdfbfcb303fec476652d6b098f309d,"Generated tests and corresponding bug fixes

Comprises support for symbolic names"
875394ae9b26110507eb3fbcdc818bedc9e80285,Generated tests and corresponding bug fixes
86fc7fd44d07d136fed45762a8656ebf407db7c0,"Tests generator and generated tests for Java

As of commit, the generator produces tests for Java, Python 2 and 3,
NodeJS and Safari.
It’s a great relief to seethe full set of runtime tests pas identically
on all targets
The previous tests are now located at org.antlr.v4.test.tool, the files
have been cleaned up to remove duplicates"
cb072ca1c49e64710955191d2e8441fd70415c38,add getVersion() as 4.4
1a8d1d1a88d3099e2c58d96c83dcaad78505c6fc,rebase
195a11ee72673d2c0ab644f3f7f3c6130921ec5b,Merge branch 'master' of https://github.com/antlr/antlr4-csharp
5847fd6995fc5ea6c6736a6615316eb0802344c4,preparing for CSharp
df61f040c4b61697501dbb89698780f32ffccfed,"prepare maven deploy

add mvn_install (requires https://github.com/parrt/bild/pull/2)
add mksrc
improve javadoc"
876906d2d043abd8ca6b288808c29cf0bbff2021,"Merge pull request #741 from fabioramponi/master

added Serializable interface to Pair class"
1a62ba75e53c06a4649095771f973bee54fcf00f,merged master branch into add-maven-install but it really is just accepting all of Erics changes
ee505421b573015748bea3e351526821f0ddf08f,merged master branch into add-maven-install but it really is just accepting all of Erics changes
36d259db12dd63c19e674d53a7c7f37f247126eb,Merge branch 'master' of github.com:antlr/antlr4
29c2712ae1eee9575324db48c2f72c7cb0d28308,fetched runtime-tests-generator branch into master and did a manual merge. Fixes #76 as I was right there anyway.
481a1595e58e78389c467cac13d4e1104da9261a,Merge branch 'ericvergnaud-runtime-tests-generator'
53c53948dfc327330a2925d63f263a03b677d7f2,Merge branch 'issue-TokenStreamRewriter' of github.com:parrt/antlr4 into parrt-issue-TokenStreamRewriter
dcea5c5da5737eafd21fbdebc5ae5ee91135df64,Merge branch 'parrt-issue-TokenStreamRewriter'
f70b358c753fa6d2c3b48eecf4a3e5686e237377,"Merge pull request #743 from michaelpj/doc/parserrulecontext-start-end

Add a little bit of documentation to ParserRuleContext"
4a8340b24c48bea21f382c7e8c2af141cd8328a5,"added tests for Firefox and Chrome, work and pass on Mac"
534be89e6539885ce477000572cf92ecb329db69,Merge branch 'runtime-tests-generator'
939b458f893e6979991ffa516f69ad41ec4c31dd,hygiene
81a1812261a41948848ddf8e46f55522b8732a96,hygiene
fe477f09402d54dc7a47815e4bec361844533f6c,update
fc77e61a39484f1f678753dd0d57b0929c22ccfa,Merge branch 'master' into runtime-tests-generator
ad13de7961e9fc36871dc0e2f03c97ce9b168ff4,"Merge pull request #4 from antlr/runtime-tests-generator

Generated runtime tests for Node, Safari, Firefox and Chrome, corresponding bug fixes"
8a87b70859a6b3411cce1a3c7fd3a558c9c628c3,add test generation for all existing targets
0a4aed19acbc77b2dc1d54c673175ab59a69c07b,"Merge pull request #760 from ericvergnaud/add-test-generators

add test generation for all existing targets"
710a4b11ef7f3121791222bbfbe823167b3781f1,CLSCompliant version for mono
bfb819e045bd6f0f793cc806e4f569bb893737c7,"Merge pull request #1 from antlr/unified-tool

CLSCompliant version for mono"
b07fac17d5198dca766a1d6328674765d0eb4d55,"prepare release

all tests pass
added test for complement set"
618de8f44ffb842ffa2b3149a7bb0b907e092982,"prepare release

all tests pass
added test for complement set"
4b1a7d1274487704badf689f08fafc41ebb7d046,"prepare release

all tests pass
added test for complement set"
0f557737da5069d4e0c5c71d3f6880c94078c10e,"prepare release

all tests pass
added test for complement set"
8228987b4fb20299984d648195f3b4842fa1f7b5,"prepare release

all tests pass (commented out performance and alternate quotes)
added test for complement set
tests regenerated to fix results after bug fixes and « huge string »
issue in java 1.7+
bild.py review to fix numerous bugs"
4e6d3dfd8d88f89d160f579c17f964f28ee7d1bb,"Merge pull request #5 from antlr/prepare-release-4.5

prepare release"
fe4b10237b1d3ab3f5ed668ec11165307bec3413,"Merge pull request #2 from antlr/Prepare-release-4.5

prepare release"
c02b7bec1184cb81f0a75fed7aade6a7570e7269,"Merge pull request #29 from antlr/prepare-release-4.5

prepare release"
c0e562bc5fe9ee458c816111b9595b79bac57eab,"Merge pull request #9 from antlr/prepare-release-4.5

prepare release"
958f2fdf6ec0009bbb2bbe7fc39d82356129ee14,merge from master into release branch
2f15f1cce038769f82339abe4a37f9616f121793,Merge branch 'release-4.5'
f419af9442143558ab928c3fa2d24b535f33b53e,"Merge pull request #18 from bdkearns/visitor

Support visitor pattern, no impact on existing code I believe"
c32a849cc86c1253589d6bb58170fc70369d3394,added visitor code
ddb8fa3d1b3f309bcc7f7926956a53676bc43b15,"Merge pull request #10 from antlr/replicate-python-2-visitor-code

added visitor code"
a20ace6f4ae5ae3c6d2eceddf47fbbbe8913fe29,add edit warnings
bbf9a4ff9d1f8c0925ec71d0b07e22498e6ab8a3,add edit warnings
8dc4231b933625846d870788b2db9cfe2f950a63,add edit warnings
a0e20063fbdefdf5bb114cbd23ceeabc28eff41c,add edit warnings
78027ed0f04a032820c0216398ebfa643f9baea7,add edit warnings + fix chrome location + make locations relative
fb3d97b122442c10e0cc1b9dc4f7804b3f940173,"Merge pull request #11 from antlr/add-warnings-in-generated-tests

add edit warnings"
4be10f7e5a61c26d5fec18625d32873decf740b1,"Merge pull request #30 from antlr/add-warnings-in-generated-tests

add edit warnings"
5c389e5e7bc6c8a9f84974f1e78c843b1eb42058,"Merge pull request #3 from antlr/add-warnings-in-generated-tests

add edit warnings"
5799cea481d261286bc676de874b8a87a0ecae4e,"Merge pull request #6 from antlr/add-warnings-in-generated-tests

add edit warnings"
4c67cf8c730cc57719946486a6b22482dbe2b5b1,added explorer tests
f26cd913cabb4e706c79c0b98f1cfc15f3d4193e,updated tests
ecc2a58615f63bd74d535c01127fb31c6dfbbdea,"Merge pull request #7 from antlr/explorer-tests

Explorer tests"
ab3395095b679bbe191e720400cdc44338e3c4fb,Create README.md
c4ec9e5e35d49c59a86dd83ffeda6f2f5aacf7ab,generate tests for IE
6732540fed472be0d0b811925dd7b9c493882ba7,"Merge pull request #763 from antlr/add-warnings-in-generated-tests

add edit warnings + fix chrome location + make locations relative"
8cc929f94284848aa16df3590c40c3bdcc727427,"Merge pull request #764 from antlr/internet-explorer-tests

Internet explorer tests"
3230356202b39fc4e44fee0127d9f8597c3866ae,Missing reference
fff8354eb840fa2bed74444ff308f1b0fabb23a4,visual studio support
eb0686ca8e8f6f83c554fb933e2cf5db0faf9c41,"Merge pull request #4 from antlr/visual-studio-support

visual studio support"
940d47d6a291219336d45f989d34c6a36518a62f,house keeping
27cdc663067629efd9d55b7e02174ce6292ca458,Ensure self.getErrorDisplayForChar always returns str
80db2b3ff82b5b0e0f245d2b97bf9e9fdecab0ef,"Merge pull request #31 from antlr/Fix-Unicode-error-in-Lexer.py-#25

Ensure self.getErrorDisplayForChar always returns str"
0fbe7f077c06c1fa9f395b183b2127c9df7e783e,"Fix unicode bug

Interestingly, despite the docs, StringIO will NOT accept non unicode
strings"
8ef638e2339f30522ba83c43910da9a5e3842d9b,"Merge pull request #32 from antlr/Lexer-unicode-issue

Fix unicode bug"
710ad3e8d58e2c3a4e98ac99456fd5892bc534db,removed NL
636cb9bab3acb68880b4d62173c3e3b1215c52c8,missing export
4b87b04c72f9cde5360357e228b32e4fe532fb75,nodejs package descriptor
936a27943def12b3c3a8b153990c306e790f0ae4,"Bug fixes

- moved Lexer globals to Lexer static members to make them accessible
 - fixed a dangling ‘or’ instead of ‘||’
 - fixed a dangling multi-valued case"
a47ee4d853fd972184ad12c7930f9f2eee51ffeb,add support for $self
ac81816f38f93ad185d02d85f2cddb25a7027312,add support for $self
7aaafddf9966cd0fe7e4329cea36661d9c0e1627,add support for $self
6ccad93fc56be130881b913d2b4d88ddcb849fde,add support for $self
7c857692d634060062527b7f85bd0fcd038a957b,add support for $self
b69c8efaf5ec1d40ccb1dd958a4c418782338bf2,"moved from $self to $parser

also added a test case for the above, and adjusted generated tests for
member tokens"
3e707eadbc25b297c3678e6d3dad296cf8d002ab,"moved from $self to $parser

also added generated tests for the above, and moved back to member
tokens"
47d790eb1e7d6f2842f4a9acd31cce5091230c79,"moved from $self to $parser

also adjusted generated tests for the above and moved back to member
tokens"
a8a4e19b634bf6281cf928829cc43268a1e656b1,"moved from $self to $parser

also added generated tests for the above
and moved from local to member tokens"
38c4e2b0028d2a305d0cf05ce5669d23d67ea88e,"moved from $self to $parser

- also adjusted generated tests for the above
- also adjusted generated tests for recent changes in Python/JavaScript
targets (token types are nos class members like Java/C#)"
4e3b020a4365ea51124b039a6b03587034ef11c5,"Merge pull request #34 from antlr/add-$parser-support

Add $parser support"
e3a92361630340c48f98d93855817a0e2e4c6adf,"Merge pull request #12 from antlr/add-$parser-support

Add $parser support"
d8d7ebc812f6845e351d92d00331134b0e3f4dc0,"Merge pull request #8 from antlr/add-$parser-support

Add $parser support"
c27222b0a0a03eba1d7b6512c1f8545e66f49499,"Merge pull request #5 from antlr/add-$parser-support

Add $parser support"
538e30b152e71b45158ffea57eca33317f36f256,Fixed encoding bug
9275a0ecad44892c69a11ae1c127a757c6689b99,"Merge pull request #770 from antlr/add-$parser-support

Add $parser support"
2b6710e5df0f0c3a87cc9cfbce2cb5517c4a889d,"rm space, which caused ""./bild.py"" not to work."
eb9ee1bd80a897a8f8a76aee4d9edf69b60f10c7,urlloader.close() doesn't exist in java 1.6; removing for 1.6 compatibility.
f52b97ab7fe26f17f0528d8089bf5283d0846c32,"in bild.py, distinguish between ANTLR BOOTSTRAP_VERSION and VERSION; copy antlr4-4.5-complete.jar to antlr-4.5-complete.jar for my use. remove an unneeded -cp arg and call to compile()."
49a8029985c8b784b5eb1f2b569279681e85372b,allow 4.4-generated parsers to work with new 4.5 runtime.
2a28a9b4f3dc69a5c2cbd8d7d5c5de74beecd4c4,simplify. no need for listeners as System.err can be reset.
047249f2c07791e72ce2f1e0c26d20b51b870f3c,"Merge pull request #774 from parrt/simplify-version-check

simplify. no need for listeners as System.err can be reset."
1b5d948ca0bace07701b85f6ec54c46d57e4178d,add diagram bump version to 4.5
b50868e81718956d62ab5b47b01aa2f16908f0dd,add diagram bump version to 4.5
710d96d0353b2e40ff473f9c756d213f4202439b,add diagram bump version to 4.5
2301648b66d09281604aa5868af870fbcdb91c6c,more 4.4->4.5 version changes
e5dc5b643f051e3cf0710ea88c48d3ab1046349f,more 4.4->4.5 version changes
8282c23ae30e42071dab3088d7602eee6c8b01ac,more 4.4->4.5 version changes
3b2e529f6e08a8e66b386f2609b2e23c877f4df0,Fixed encoding bug
087b7902ebb16bbfb6c39dd7077502d4f61cceab,"Merge pull request #13 from antlr/Encoding-bug

Fixed encoding bug"
a4909b3f52fdc628139904e59458406a6cb8de6e,remove constant word size in *code gen* for inline set testing.
25053b794a7668cdf6823663599b5756961cce57,set inline bitset test word size to 32; ref https://github.com/antlr/antlr4/issues/777
329b468d7384e65068d2598ea4efa3477d4a73d6,"Merge pull request #778 from parrt/flexible-word-size

remove constant word size in *code gen* for inline set testing."
aa0532fd55bea4c1640fb73f44c37b3a7de060d8,Complement and validate bitset bug fix
5fb59389d64b8cbb5249b1c86ca7d2fe834ea632,"Merge pull request #9 from antlr/Test-word-size

Complement and validate bitset bug fix"
7acafdc75e5036c640ea1890fe05fadfdbd21fbc,git cleanup
8fcd12a555b19d489fbb45dd91dca03407928f45,npm compatibility
ea028ebbecc09171222e103fcc18b902d67459a1,Code signed for installing in the GAC
373ef0ae92c71fb8d83f33933d12221943552ab5,git cleanup
877b784be6f5742e5b7aaebba39fc2b3fb858b27,removed legacy
ce6e73bcc7162afd6939d97cebbe2d4a45b29a1f,rename to be consistent
77b1ceb2d6a0cc9d8eedc7487bb38f31dfb265d6,add new readme
8c053640996046872839f27f10188cf999bfb4d9,set versions to 4.5
da5a08bd9994ec40f4e91ddfcf4a89defa8a8bc1,tweak
6cb87ead81e3ebc6fa252190186d0dc5e3dede69,tweak
39ba8e5bb394f95738de018ff4796a12a4ae60b6,set order of target build
f923aa26be5c4919e8065a907a82d3fe0eee8c04,fix doc
00aa4937b955537e6cd3bcea20e3ae14e8b62874,"Merge pull request #785 from parrt/master

fix doc"
aefe61f9977a7d53616c0012db7defcc9a921988,Might as well remove the ant build
7b069873355a857fb526e5fbb97448258f4c0fa9,Merge branch 'master' of github.com:antlr/antlr4
c9a51b98aebbcfc066bb0d74e2cc4b9e4a52e00d,add nullptr check
0c2a693638af8b8b69670accee224c698617b447,remove unnecessary check for missing RULES node as that node is apparently always present; the tree construction rule is: -> ^(RULES rule*)
64f6e196b2197cfcf5f25349c7b49e73d7ddcd4c,add unit test that reproduces issue #670
4f0f361d93a6913f58e1169baa9cef249b7aee6d,Fixes #670. Left recursive rules imported into a root grammar caused an error. All tests pass in all targets.
bfeef347485902ded24aa4e386dad7a1b6121065,Add Eric's pom for mvn plugin.
cf26bc8a33768cb19ecbd63f03e037a3c390c76a,make it 4.5-SNAPSHOT
f02680ce102494271d845b53605d64a78ca26538,"Merge pull request #786 from parrt/fix-java-import

Fix java import"
20032061d4859f7618d45da20c0cedc635daa51d,Merge branch 'master' into freshen-maven-2
7451e9ef5214b5d5eeb7e30cdac738a3f273ec84,"Merge pull request #787 from parrt/freshen-maven-2

Freshen maven 2. Fixes #675."
6298e990fc419d82924e324373fa2f1e858cfb4b,add snapshot repository xml filth inside pom
1437eea2e038730b2b7d2c0d91090cb07614d195,"Merge pull request #788 from parrt/deploy-via-maven

add snapshot repository xml filth inside pom"
9ae25db028cd1d53203b8bec80ef93ad21100fd2,add distr mgmt
6d9d60ccda0befe4a306f89daad8337897016b4d,Copy stuff from the root pom to the individual poms and remove the root. Remove dependency on the annotations artifact which no longer exists. hardcode the version number everywhere to make sure I don't use a variable that doesn't exist. update bild so that it uses a new maven_deploy() function I put into bilder.py
8af4afc0580ca87153e145888dcf94f81576240b,add intellij project files
328857fa849da391dbae67e27d205441f0e1babc,add intellij project files 2
254ddd4be7a06c47f9d8880d5d851018b2b6abcf,rm unneeded pom file
5e819875d758b6c8ea6d17d7bf12d72ff906b03e,set version to 4.5 for release (hopefully)
83e613867c137b6820a688e85eaa0f6bdc2ec624,don't rebuild the source or the doc unless they are stale.
b9ef67f91e99860dc3b9709711f8152a0ee2d884,remove redundant dependency
01e2f5d2e402190c16783ab3f92f09a6cdd1067a,add osgi stuff in manifest of runtime jar
3144430bbae141eca012d0e54177b2e4ca16bab6,"Merge pull request #790 from parrt/make-osgi-ready

add osgi stuff in manifest of runtime jar"
97a48b073025ddff3dc4aed1d02d2a73a9df7680,tweak
c97df3d883631e872a4b2d488a7937f4ce01a1ac,add js target
e6f3911fa5975e042d877e85a3b24c44741e52e3,add python sdist build.   separate out the deploy stuff with scaffolding to fill in.
448061208f6a66b1c17dbba9244157baff961d53,got the basics of pypi in there.
0e03820487c93161715fc969d0f91744a043b773,git health
a8f461fba3e3e38f0777951cba2a4cb62d8169fc,add performance testing for atomic operations
75486e0a518c81c6cf700ce1d761e7564b5e0d63,Added performance testing for atomic operations
1926a1636aa9b2c08a27cb5451e4b420eaa380cb,"maven cleanup

 - added note for maven developers
 - removed maven plugins
 - updated maven dependencies for dev only
 - added antlr4 annotations"
66b713698ab8a58f9febbda94fbb5bb93fa20b2c,Fix parser.setTrace issues
d9ed362966686a4ada9e84e85a3b2b0c44e94b4c,fix setTrace issue
6f66d10a7afd23fee6b5a8e046260c141c3dbf40,"Merge pull request #16 from antlr/fix-set-trace

Fix set trace"
18ef41a256bac2a2c40aa06df2dc0330d82f95b6,"Merge pull request #36 from antlr/fix-set-trace

Fix set trace"
368aad82235cfd5bfa017e2239abc2d1f679a92b,Fixes #796; wasnt rebuilding XPath stuff with latest 4.5
dea7c768d420b6979cafc00eaf94edda232aa189,Test for recovery over-consumption
9e09e6a9c0a97b85318e2f6be4b8bdc6730be02b,"Don't consume after error recovery.

recoverInline should handle making sure that the token stream is
advanced to the appropriate position. It is difficult for the caller to
do that, as recoverInline may create a ""new"" token that is not actually
in the stream."
3d71fc99d6586481b06c70de14227ab8a462fa6a,"Update the documentation for recoverInline to advise against
consumption."
3152b6965667405ef61a90aa5299bdb1218d2ab7,Fixes #12
8b11b67f8250dee904a8fd183ac99c87b7ed3be5,"Merge pull request #794 from antlr/maven-cleanup

maven cleanup"
fe4d900627367a622c5f1ed83b826d92bad11958,"Merge pull request #13 from antlr/export-context-classes

Fixes #12"
34cc04bf6a0755913e30db6216a092c85d9224dd,rm annotations dir from project
bab8d2cf40a5fad37c5df8198ebd0013f4155a78,Merge branch 'master' into fix-recovery
136e8a6286d69a96a23f6e65687754cc129d91c5,tweak
353235ccf412477b3bd4c728aef1b45203655163,"Merge pull request #797 from michaelpj/fix-recovery

Fix excess token consumption after `recoverInline`"
0f9279588b06b0d684ff7ddb6420c817026ceac7,Merge branch 'fix-recovery'
41713e18699b0f5933ce8346ea7c9f0d9ddc8576,revert to 353235c
e40c4e074f2c70588a339c663f345613e08d2d61,Fix recovery error; Fixes https://github.com/antlr/antlr4/issues/795
f26549361a9c3b359b358f8a7ce68630ef9c5684,Fix recovery error; Fixes https://github.com/antlr/antlr4/issues/795
61635f8e798d326dc6d0c3c74e98fbd076d4914c,add tests for https://github.com/antlr/antlr4/issues/795
1f3ed5aa13a98018d6886729b67da763173fba43,Fix recovery error; Fixes https://github.com/antlr/antlr4/issues/795
e2dc5e5d2eff5c3d7b8b9c06366b05f4b887995b,set Generator so that it builds with the current working directory as the main root antlr4 dir like bild.py does.
017fbc8ef7b476b5e664840e7f70f262400523c3,Make new unit tests compatible with all targets; refactor Generator to take cmd-line arg or current dir. rename some methods. add some output.
85c9b6b62b42b8c48f86668f995bb59db276f0db,major rebuild of testing. auto regen the tests for all targets now;target is called regen_tests. added some helpful methods that let you test each target individually
ac4786c29afb07f2b236dcdc1eb39179bd00e172,Fixes
ac3fc7daa64b60a421b12e13ccb8ea6871d80d65,RulePropertyRef_stop refd t but arg was r
9c38019cbb00249c439150edccd1dcbb5cebfacf,"Merge pull request #14 from antlr/fix-RulePropertyRef_stop-bug

RulePropertyRef_stop refd t but arg was r"
b2141c5fd3cd137c4c59c51cfce44d0c2e719646,Generated tests for IE not in line with other browsers
8aeb4f6f27e2fceebc19915ec8eedae25a6f0df9,typo
33a027cae27ae063542371c9c9849be850b6f9c9,git health
f72495367ccd02abbfd57975f7236e2d220765b4,freshen unit tests
4ffb28127485b276264c006250cdf5006f45df63,freshen unit tests
8219262d200e012cb874a0140fbe2181b6053b7c,freshen unit tests
1b02391c52fd1ced6e5bb1fc8b930d83e0ed93d1,Merge branch 'master' of github.com:antlr/antlr4-javascript
8c4376e7eef353f4d50fbf04eb1fe7d4257b3842,freshen unit tests
7e21ec761e9dfc93bd4ef76fc22a8dc185b158eb,freshen unit tests
262d7541d200d4bb3aa5a17ae210990661ad90b4,"Merge pull request #799 from parrt/freshen-unit-test-gen

Freshen unit test gen"
a89bfee9e91882eb57aa9957e432a7d51172acec,set to snapshot again for one more rc
0ee58d929564a833a4aae8339132f257b0380683,rm JavaAnnotations
be03964df3954b1e534d3d3c3e5416303ceb451d,rm @NotNull and @Nullable from codebase to simplify
c84f024676c26ca00e9516599e1b643085571132,"Merge pull request #800 from parrt/rm-nullable-annotations

Rm nullable annotations"
f0959bb3b53f9a66fbb9da625a540dadce719733,freshen unit tests
8da8b72db1dbdee33c7b4a9b57a0e10e2eadb0ce,freshen unit tests
e897f7ce58d0652b338aa677b5d01b8198cbab8f,freshen unit tests
481a6bc7730f96eee2776b16e8164f7161d87e98,bring in changes from the master
f19c25046b5ea063a08c035ecb44a6c96de27636,fix misspelling
ab8e93d6fb5240dfc4dc26caee4a80f2e79d9ec7,added javascript runtime build
2be74daaae0a216b3534167b62a95a298cf239a6,add C# construction and Python 3
4ec744c3f20c0d6149aef8f7f448b623da98bd39,freshen unit tests
e105b322322e7ef9f4afe108e51198aabdf5e1cf,freshen unit tests
a3490ba322a2446e6d67315280404ea855f348dd,freshen unit tests
790994f531a0ffab765b63ae2ae4e1c139b4dc47,fix unit tests for recent bug fix so that they work with JavaScript.
0b589c3db3ce20f90a71d3364f5c92e729554787,add binary Windows installer to PyPi
65e4dc47e1b101cebf7da71506458039ed4a72c8,fix unit tests for recent bug fix so that they work with JavaScript.
e2bfe7a7ddba7bef0295788f6c09ddde4cd2c4df,rm unneeded .gitignores
1b104cf426ff71ba126aaebeb9ee7515c5332e74,make all 4.5
4dcc65d4525b1005f58b58fc7e869a8fc2cebc7d,make all 4.5
6a7717cecb3aeb6c6c8d3651ec6a9e08b40e7ee9,"Merge pull request #801 from parrt/separate-deploy-from-build

Separate deploy from build"
241bde4278a076583e4436fe930f29d1a9c8c5aa,installed jars into local library; also add print and log messages.
ef56710fb4b0fe6c8e1dfffa609fec94a0542258,tweak
e1e12f0b419461c4fc63461a2776024ad9f4fd54,update readme
2246e7500bc995fbacab5f57f26697b7667ccf04,tweak deploy
b033b5ceb12ad12a8ac2fb030dfeec94bd526981,tell the pom to sign the artifacts for the antler maven plug-in.
3a4d53adeac10322ff352078a0bf31a71b4f9683,had license to the pom files and make sure that they use the jar packaging.
87711b47044150d2ad3131a56633c4b5d2aabc3b,it looks like I got the maven deploy thing going after initial failure for not signing the antlr maven plug-in.
2065644b4a3552e9567c85494bb5dff086d489a3,"Merge pull request #803 from parrt/figureout-maven-deploy-to-central

Figure out maven deploy to central"
4cc275ab526792ee8ca8e46fff7b6d4bcf7dd661,I did not have project URL in pom and the maven deploy failed again.
8d9c7d280151916826db9f953d6b49e0c4eb1f00,fix ordering issues with parameters (again!) argh.
84fb456aac0dfce71bdb0e648491cb98483d98b5,"Fix potential misuse of the DFA start state when initializing a decision from multiple threads

Fixes #804"
98956350bdfe2eabe3a9a0b9275a30775ff7d484,Added `function` to javascript keywords
430216b0cf5689212a622f573240a67c88ba97e2,"Added the javascript keywords specified by Mozilla.
Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_gramma"
455a8e55545f3142a9c83c2c843b76de19039663,Fixed typo
83d91ad1da081aff5f5b7361ab8096bff4bf2cae,"Added as contributor due to a fix in antlr4-javascript
https://github.com/antlr/antlr4-javascript/pull/18"
39818ad5479ba38ed3ddeeff98b11df699c373db,"Merge pull request #806 from TomLottermann/master

Added as contributor due to a fix in antlr4-javascript"
a16eb447402d1d2c0984781b5b5cc64b73aedc7b,"Merge pull request #18 from TomLottermann/master

Added `function` to javascript keywords"
88f2b3f409ed81c9ce49f4b14fc90a2334681208,regen XPathLexer with latest antlr
75d6784278028e6c7323e0083d1963a515dfcb93,region of Path lexer using latest antlr
bc98e5b68777487a10aa21efa07a5d07436d7292,Initialize DFA.precedenceDfa when the DFA instance is created
2bf3727055996f2e9ecdd7dd1d86b1faad54a083,"Merge branch 'fix-804'

* fix-804:
  Initialize DFA.precedenceDfa when the DFA instance is created
  Fix potential misuse of the DFA start state when initializing a decision from multiple threads"
4ba571c4d604bbcdba7aca788943d6af206af9b9,Merge branch 'master' of github.com:antlr/antlr4
e8c6dc4e394f895fb5b29b3cb1ce7da6066d4231,"Merge pull request #805 from sharwell/fix-804

Fixes #804 potential misuse of the DFA start state when initializing a decision"
822d61ad477aa785ffd01204d89c177f0da3e993,Fixes #809.
66e275d16458fa3ebc0a95d5dc841e1b392238f7,"Merge pull request #811 from antlr/fix-809

Fix 809"
f56a27bb4b041d84d1a144a21cfe46ed4c2d8324,"makes the UI dialog to save/restore its state - width, height, location on screen, the placement of splitter as well as viewer scale"
255cb56da535675dd2f4f80e97be0cc5031aa920,minor constant rename
d4a43684be4b6a5019c28dd548f08ab8c9c1a179,squash all commits for this branch
7672fe20ca83633fa0da17e5133a330792092b3a,"Merge pull request #816 from parrt/parse-with-starting-alt-feature

Create functionality to get all possible parse trees for ambiguous input."
0ed80d90dadea0a8d953d37df33b64740372fe33,fix erroneous javadoc build. set to 4.5.1 release for bild.py
5e70f9462894841825317991d5c1674898ef704f,Somehow I missed a bunch of imports for @NotNull. Fixes #815.
dadba666109f5ce6e472d57134c829dce951c7af,"Merge pull request #817 from parrt/rm-null-annotations

Somehow I missed a bunch of imports for @NotNull. Fixes #815."
db8de6214eb41f6b1f6b2a05e4fc7ed36102402b,IDE missed some changed files
f4416b513767c2c0378a85a752e781119a6fa1d9,"Merge pull request #818 from parrt/rm-null-annotations

IDE missed some changed files"
0679d19fa3e3f768d7b885ab92526c8df22c4023,adds Pavlo Lysov to the list of contributors
4369626e82e11513cdd137de80be80aefb98d9b7,"Merge pull request #812 from pavlo/master

Makes TestRig's dialog to save and restore its state"
1ae6dc1195982552ec6ff832fdcd321932406ef4,Added Recognizer.removeErrorListeners() to Recognizer.py
a72ad9fe337af9a74f1a1c28ccbd10e20463973f,Added Recognizer.removeErrorListener() to Recognizer.py
80edd600389579c3dfaaed77920d7c98cedde70b,Added Recognizer.removeErrorListeners() to Recognizer.py
b45be6db5a2fbfeedb134b71fa6917635fdb1ee5,Signed contributors agreement
8f96e8b59265b47a17528a3acae3d474356c8d3b,"Merge pull request #830 from RedTailedHawk/master

Signed contributors agreement"
b327c30a37c71520627dcede0fc51c3a64eb9cf4,"Merge pull request #21 from RedTailedHawk/master

Added Recognizer.removeErrorListeners() to Recognizer.py"
8767438e4b4f1e74ef6ad78c26001dce6727e3ef,"Merge pull request #38 from RedTailedHawk/master

Added Recognizer.removeErrorListeners() to Recognizer.py"
c48c643d90b4f91081169878587fc552515c9abc,"ParserRuleContext.getChildCount() now returns 0 if self.children is None

Otherwise, you get the following error when a listener executes ctx.getText() on a rule that allows a blank line:
    TypeError: object of type 'NoneType' has no len()"
7b0f194026d856a6dbfa19e3b79801b743461159,Support for typeless parameters - fixes #23
e4c7bd476dd866b239568e1801d877d5bfb36cd8,Type annotions on Listener/Visitor fixes #18
13e0fdcc0e9f330a0a5b709d27c7fb0649f1b4bd,Initialize locals with init value - fixes #22
0751b4cf8360f076051a758f5a583474f886db07,Initialize locals with init value - fixes #22 from Python3
3bf1a16607e971ab8dc8839f5c594f588d97a3ba,added tests for params and locals
98cf04b166c8fa628449967c4dc9de6ac92fbb0a,Fixed typo: self._buildParseTrees --> self.buildParseTrees
f24db49532daee55b7cb56fef2740a5621c53e6f,"Merge pull request #39 from RedTailedHawk/master

ParserRuleContext.getChildCount() now returns 0 if self.children is None"
0ef754cb866622c699f8c6f46ea30ad8953fdd49,Missing whitespace
5a7c2884777687042bdcdf18b304b626d0a63157,Copy fix from python2
a8ab1cebc700e1ae9fa143b4687ccacb7f19a1a1,Fixed some indents
f669c48f065c48ff50baae64de3dc9ec25431a41,"Merge pull request #41 from RedTailedHawk/master

Fixed typo: self._buildParseTrees --> self.buildParseTrees"
98e8c235328cf82234957995f938a2939e3b18d4,"Merge pull request #42 from RedTailedHawk/master

Fixed some indents"
727c88bde8dca823d732e73bdbb05ea174f82ea4,fixes #21
c4436879d22d7bbd61ee243b03270ca4e06d5b66,Fixed more indents
388ad015b9fb86b60aa14579f4e0094a0e3434ea,"Merge pull request #43 from RedTailedHawk/master

Fixed more indents"
85a0e750b097e4e8fef24b9a904742693a01cdda,"Additional fixes for #21

Should book this time."
dfbc83301a0ef8019ff7b1d1b0557d4f90e9234f,"Missing code, fix #20"
604ef2ab5a59d82e0911d07523367786aae0d97e,Fixes #15
bae2ba5e3eaf4bcb6207b38e5bdd3cef7d8bcfbf,Added error checks.
0d5e471f7c9ad263486b3e24b404bab53bbccaf7,Update IntegerList.java
e64dbaec866944e64314daa28fb9a815394ac741,Update IntegerList.java
f2f477d995b27dcea3818e296c9cd3cb79b5e2be,npm compatible version
94cd2c7c53329899e017b20108095af79086555b,"Added optional predicate parameter to ParserRuleContext.getChildren(), and renamed param in getChild() to avoid warning (type is reserved)"
415d7095a65831825a81f695686af514f588648b,"Merge pull request #45 from RedTailedHawk/master

Added optional predicate parameter to ParserRuleContext.getChildren(), a..."
6c35a12bbb2dd418f9bb449f1cc296db948bfd17,Robert Jacobson signed the contributor agreement.
ac189c12dc0a8446431312adf061b5d790c59079,Fix for issue #46: bug in getChild() in ParserRuleContext.
c4286ed795b3643f2165979455e8d081f0e5573d,"Merge pull request #850 from rljacobson/master

Robert Jacobson signed the contributor agreement."
e3528951b2e98ae2c6cc0522018fc3dd899cf095,"Merge pull request #47 from rljacobson/master

Fix for issue #46: bug in getChild() in ParserRuleContext."
05ba3bfec8a6875c41a2281a0bd47a82ec36834c,Signed contributor's agreement.
bf7135e60033862b2f7d6a560d0770f6dd0ea135,"Merge pull request #853 from ojakubcik/oj-pull-requests

Signed contributor's agreement."
f70dfead0d44a8023e840841fe852fedab7b11ee,fixes #25
f0edad9a5492cc76166707304adc417b58aa1527,prepare npm publish
668cbba3526d87955392b8e2014b5d33a45b477c,update md for npm release
4f14b38c20efb14ba51c501d48ba6b2cc988826f,fix npm deliverables
299fe38efd280b774cd2546e915499ed55cc8f78,fix #25
a79f8f21edf96c21de61f52fcb127a6808990fd8,fix #25
b63ce19e5ea974726a8b9b94def8e122e024e6e9,"initial version

modify from Java TestRig"
1aed4b26e7aa1b56a9abf4dc84f6d7c25f1c9e47,fix typo in channel handling
1d37bf814dbfbe92c35e3a7226b376e705cdad45,fix typo in channel handling + reserved keyword
da3a1410595b5a224bc9e08461fda22df5e21508,Signed contributor's agreement.
a911ffb7ac4859e6a086f8da33767db5bab60b8f,"Merge pull request #865 from jszheng/master

Signed contributor's agreement."
4aeae0edf82ad2152ddf992424c2167629330a10,Update contributors.txt
43e07f9fc4331583f9f9bc13cda75478aa7ae1a9,"Merge pull request #868 from ViceIce/ViceIce-contribute

Update contributors.txt"
2994a0aea3f60864ef8155cde63a2cfe5d99b6bb,"Added Stdin specialisation of InputStream.

This new class will buffer input from stdin. This allows one to
redirect parser input from stdin. This functionality was extremely
useful for testing grammars (in the antlr4 Java target version), in
particular the TestRig."
28cd70cb12a13c6b8fab171a4a92bd600d46b1a6,"Added StdinStream to antlr4 package

For StdinStream to be visible when importing the antlr4 package."
0bff196e1535edd6997f63e5b19d46fa4e52b013,Added lkraz to contributors.
0fc72a010617c3655f421056a208fa775b427c37,"Merge pull request #869 from lukekras/master

Added lkraz to contributors."
3d9ec81c14a7a048da33c8a493c1e4ffff6f8415,"Merge pull request #50 from lukekras/master

I like the dedicated class"
704cd0863bac43ebb8f4c01bb39c6d3d26b32128,Fixes #9: Wrong property name when building for target framework version v4.5.
355d0162e03d70b578ac8c71e96fb7faa0421d50,"Merge pull request #10 from ViceIce/master

Wrong property when building for net v4.5."
baa0ca4274781099cc8d707557f8de7bb1b67f7e,Added ttype parameter to ParserRuleContext.getChildren()
0e9a973acc7a87df89d5cdd7df1655a963fdc00d,"Merge pull request #51 from RedTailedHawk/master

Added ttype parameter to ParserRuleContext.getChildren()"
0956cf11f9578a591118c424845e50bea1509822,missing last char
108f0557fa729a7fa8cedc18071f728aa0858005,Add goto to reserved words for java.
bb3f64fb0a5312794ff8ec15621c1b88912d71c1,"Merge pull request #870 from Pursuit92/master

Add goto to reserved words for java."
baee3675298820ae6c7ee18b4527be00c7342b19,set antlr3 version to 3.5.2 in bild
20d54d873dcdca6dbc37d06396674beccbf78cc9,update version so 4.5.1 tests/builds
23c6ef41cd37ebbeda4fc7e7298b9843df886179,update version so 4.5.1 tests/builds
62783dcb82ca56db43a38b89ccd74011445dc489,update version so 4.5.1 tests/builds
f645e175ad69cf53be87b90cdfe80a7d952b3249,use generated jar not hardcoded 4.5
db076c7986ab91ed503012b99cd952ddd85ef0ba,rm test Eric says I can
0883dc53690ab41b9f5dcf7042c52082753da484,rm test Eric says I can
b5907498de5766db27f4f3140c67d2784c945f00,"Fixes #822, Fixes #855. We didn't check for left-recursive rules that didn't follow pattern that would lead to error. added unit tests. Passes all tests."
f491a1a84fce2ed46bed3d8593315b762e6b7277,"Merge pull request #873 from parrt/fix-nonconforming-lr-rules

Check for nonconforming left-recursive rules."
2ad9ff6b9d91659d520e173d23f1a52ff0d84dab,Fixes #823. Report unknown rule error in proper file.
5cdc3a1d13f9a093eb35d03003bd36d90b4123de,"Merge pull request #874 from parrt/fix-location-in-imported-file-with-errors

Report unknown rule error in proper file."
8bf053d0be7deee5685f36c319abfee9067173dd,Fixes #819. fix-TokenStreamRewriter-doc-getText
1374896a1650d7d32b3f1c7941f488e1e64cfdc7,"Merge pull request #875 from parrt/fix-TokenStreamRewriter-doc-getText

Fixes #819. fix-TokenStreamRewriter-doc-getText"
3674d45476a2582c918ce6691543faa74ce4ceda,Fixes #802. Trigger events for alt labels in parser listeners.
e6de65a1852ddc79fe4a12e207241b6fbae04edc,"Merge pull request #876 from parrt/trigger-enter-alt-label-events

Fixes #802. Trigger events for alt labels in parser listeners."
b539521c5d85b722ec9ac1a3eac83a6fc9818302,Equivalent changes for https://github.com/antlr/antlr4/pull/875 to java runtime Parser
9dab4537557829ad545e212762a4244f272315c0,Equivalent changes for https://github.com/antlr/antlr4/pull/875 to java runtime Parser
b29566286d6753c7df68330afc8410421f90c64a,Equivalent changes for https://github.com/antlr/antlr4/pull/875 to java runtime Parser
b735896eb66da087e99f2acede7e4ef1eb7fa0fa,Merge branch 'master' of github.com:antlr/antlr4-python2
6012c4f9ef221dcc5bb905783e77dea9f3eafc63,Equivalent changes for https://github.com/antlr/antlr4/pull/875 to java runtime Parser
920ea05936f340a0e28fc5c16a8d1f2017e00474,update version so 4.5.1 tests builds
23b3142797890819b375adcc0274acaf052d6d4a,rm NotNull
3279685721afe64f9fc524339f4b0947d451af37,had to update base test
1fad604cd41d5c77f1d45deb96d1faecb68c9fd1,Added my name.
b2db5d17ad9c38893248405a10d30b963244e3ed,"Merge pull request #842 from peturingi/master

Added error checks."
350d17fa47072b20a6a48fc1e50f224ebc600412,"Merge pull request #878 from peturingi/patch-1

Added my name."
7af43f6009945333f4fa56be9b0b4a57202d07d7,Merge branch 'master' of github.com:jszheng/pygrun into pygrun
c9e0101857ac50f667a1a929c53b2db5809e6475,add py3 grun tools by jszheng.  He signed contributors license 2015/04/29
76e1695ed3c5f63803a5c80bfd43f3e03db2c6c8,"Merge pull request #29 from antlr/pygrun

Pygrun"
e604167abbeb66260f47fc0fe59c2cbbcf8ce92d,add common to parse tree listener
9cd727bcf43b103e9c5c5307d2e3f8da916a5bf1,"Add properties to enable access to Lexer fields 

In the Java runtime, Lexer actions can access fields such as _modeStack and _mode. These fields were marked public in Java, but are marked private in C#. I assume this is to preserve CLS compliance because the field names start with an underscore, therefore must be private. 

I needed to access these fields from the C# runtime in one of my grammars, so I hope you can implement this fix.

Additionally, I switched the _modeStack variable to implement an actual stack."
4f0afdcf8ee593023a10e3783e1689bd957018c5,set error number so it does not conflict with Sam's fork.
8f2eca5ae1e35930a8c84891ed429f8ef00a7ed7,added playground stuff
a8b67147c236c4a032b957fc3eb4ace279ff0350,"Fixes #879. only gen parse listener enterRule events in enterOuterAlt, not enterRule."
c2ea6aa49160c1acf365fbb1265c6944e80a5884,"Merge pull request #880 from parrt/fix-parse-listeners

Fix parse listeners"
b5bebb4c13e0665be4d60d61f997e48182432ffa,Fix parse listener per https://github.com/antlr/antlr4/pull/880
91abacbeca6f47c27eb645b8d15931bd4b4e660b,Fix parse listener per https://github.com/antlr/antlr4/pull/880
fb0e1c0cdb0c484a106a98ec83d94a260e0e8832,Fix parse listener per https://github.com/antlr/antlr4/pull/880
4daf3119744a6e869f34761a3b85fe0bdcb3ab5c,Fix parse listener per https://github.com/antlr/antlr4/pull/880
b7e5bfcbf8c9a773b9a5eb7d36a5d790241e89d6,Fixes #846. rm target file before rename in bild script.
90763e5ae2a84a39cc9cea2f09b849ffa1246202,"Rewrite test generator as a Maven plugin that generates tests as part of the build

This commit only updates the ""TestSets"" collection of tests to use the new framework."
039bd22b6715cf01f6a77bbb31e182a4747f3d4a,TestCompositeLexers for Java is working
4ec94e0fae90ce2988a25d1c9ff1e3717c8f6a12,TestParseTrees for Java is working
42ba8c45306057cfa6757c30a6c52b1637164a9b,TestLexerExec for Java is working
98bb519f8a6de001486efa4c372f44e1a77a5b20,TestSemPredEvalParser for Java is working
c11b384b1de20c382b9554a2515518581cbf26ab,TestSemPredEvalLexer for Java is working
113b72da53fcec576fab54c1b574bc11388d7a5c,TestParserErrors for Java is working
9ce5efc570129ad4d9e5b9fbd41fbe539fe70453,TestListeners for Java is working
6890d0bfddc032d4c7b211c443f836b722f8a239,TestLexerErrors for Java is working
c9c32c2c4f8dd3b4b7e3cfec8a649eb5f52ce8db,TestLeftRecursion for Java is working
4fa9ed5a6b4d763b03b04d93ce41d6bedde87bc8,TestParserExec for Java is working
99dcf932068d39b58c9beefdca45e55866b1b1f0,TestFullContextParsing for Java is working
cd89df91096bc83fd99d571cebbfe96f05417098,TestSets for Java is working
8dce2d5fb54a11023ecb60bc3e8cb14d3ee7ccdf,TestCompositeParsers for Java is working
c70c1baccfca89306877832c531259a6d26450dc,Disable annotation processors during testing for performance
3fe8bf3a10e639275225d2f46e0c9d28981228ba,Updated maven-surefire-plugin version
b3e74e4897c621e49a470a84d3fbb8e8171f7ad8,Make template visualization optional (disabled by default)
763906a2d7ee7c086c9a69b62528b17240156951,Add original documentation back to test definitions
a2d0995a37bf881ee06d71083776dbb3069b22d0,Update debug option for tests
0fcba25d4e1a7c02e6669f323a84cc19cf35b27e,Add missing test DuplicatedLeftRecursiveCall_4
ae52f2708a93a83639aa1064795602dd3acf9d37,Fix incorrect reinterpretation of ReferenceToATN test
131599af1a4fe07037089e96dcb7d01b53b176d3,Fix incorrect interpretation of test ListLabelForClosureContext
e248be48d14ccce15f79d3623bd131de2082c99f,Restore missing test testAlternateQuotes
3e5fc6972a081f7efa950c2fa5683ca2777370ba,Fixes #773. rule[arg] in non-lr rule alt didnt translate right
85c145eff9d1bcef9149e54852a35299ca186fb2,"Merge pull request #881 from parrt/fix-missing-arg-on-rule-ref-in-lr-rule

Fixes #773. rule[arg] in non-lr rule alt didnt translate right"
89af462710fc284308bb3ca3b46c438c77ab8f82,"Fix syntax errors under Python 3.2

Signed-off-by: jcbrinfo <jcbrinfo@users.noreply.github.com>"
8270e906b6ded1bb4cd1522065a4981fc2e99c25,"Add @jcbrinfo as a contributor

I want to contribute to the antlr/antlr4-python3 project.

Signed-off-by: jcbrinfo <jcbrinfo@users.noreply.github.com>"
7d464aaca763151aa93857fb0db9b6f1129da055,"Merge pull request #882 from jcbrinfo/patch-1

Add @jcbrinfo as a contributor"
b0bd9d17ad206ce4de85bc6b890fe9eae6995b30,"Make tests easier to run

Allow to use the ""discover"" feature of unittest.

Signed-off-by: jcbrinfo <jcbrinfo@users.noreply.github.com>"
b8eb38edbab845233bae5f196875114620445cf4,"Merge pull request #31 from jcbrinfo/fix-python-3-2-syntax

Fix syntax errors under Python 3.2"
80bc8fbb62851c6dad1be0839d50d3714b453e92,"Merge pull request #34 from jcbrinfo/clean-tests

Make tests easier to run"
d3554cfd9e3018f424be99e3e8582fe178f613ee,"Fix import statements under Python 3.2

Signed-off-by: jcbrinfo <jcbrinfo@users.noreply.github.com>"
e3315015c5636506a8f6047e1d2f47e968f81b47,"Merge pull request #32 from jcbrinfo/fix-python-3-2-import

Fix import statements under Python 3.2"
4197a85b9c7866616ba349094097b337e0454e5c,"Fix syntax of the generated source code

Do not use the Python 2 syntax for strings when generating Python 3 code.

Signed-off-by: jcbrinfo <jcbrinfo@users.noreply.github.com>"
22fcd944698003586b65b221166f2cbaa1c0d99b,"Merge pull request #35 from jcbrinfo/patch-1

Fix syntax of the generated source code"
ac273c4bc8b4344ff46215fe4b31f6822cc17a77,"Fix syntax of the generated source code (again)

Looked for less obvious cases.

Signed-off-by: jcbrinfo <jcbrinfo@users.noreply.github.com>"
7cb154f5254d69e728a9d110d7acf51e62a34137,init handlers at compile time
6421b163aee900e6dc2d33018e3eeb248a2f9144,cleanup warnings
7c045200d2f39671ccbea3073bc43412af0d0106,"circular import bug

fix a bug where generated code would have circular imports between
parser, listener and visitor
fix is ugly, any proposal to improve is welcome"
635e922b5f968892375af693de61276ed59b1f54,missing tests
acc2c2522ae5cc7ad17ef44274e5f61e97e8449a,cleanup
a98bb0424d975bc9a5ca0311c59da594d330bbb6,"Merge pull request #37 from jcbrinfo/fix-tool-strings

Fix syntax of the generated source code (again)"
a319a586728caf984000df2860390c07791542c3,"Do not rely on `__package__`

This variable can be let to `None` even when the module is in a package.

Signed-off-by: jcbrinfo <jcbrinfo@users.noreply.github.com>"
82f06f1dafdd45e0c766bc02cf44e2b919e6c856,"Merge pull request #38 from jcbrinfo/patch-2

Do not rely on `__package__`"
343d0f90b44a0c4e68e4741276aefe2bf5af2234,update comment
181f6708609ca71acc1964df9158adb35dc3672f,set version to 4.5.1
410fafb9393e037ca4ad6d549594c479a7545caa,Merge branch 'master' of github.com:antlr/antlr4
d73e73a091f729dbae6573919f371bca3cd049cb,"update comments, rename var."
b7b860fd2abdd88170598b28ff163b5c9686a64d,test added
a63df8b0882f52f60d74c3bcf9f5474ee1d4d5b9,test added
d4238ea955b11b9c30908ca9a87f73d5f5146c46,update Xamarin
23cdb2ee8f21bda69da2b527ad9c90ff6241df67,Merge branch 'test-generation' into parrt_master
e355fc44e233b463811f50e7f79a700f09c0d7a3,Extracted code generation portion of test suite generator to a separate artifact
b15e66985eaa88f9c2224a5e2af340a4dd2d1257,add main to test gen.
e3325ab606222fe8f12091ed19d17f78a9532315,"add cmd-line interface, add map in Index.stg to targets-specific templates."
0c0fc768467a8b5907c598e340b09bfe06c7886f,Fix #32
dacac8233cade7ed309a6d5bf49d6994211f8e10,Fix #33
a90e294034bae309966656c16fd7ac79f3a524ff,"Revert ""update Xamarin""

This reverts commit d4238ea955b11b9c30908ca9a87f73d5f5146c46."
07aea10ca77f7b6e3f2224746e7e02c50ab7810c,allow more control of root dir. add info()
fafc7722c830eeb4fc1fbbedc5d0a21e94b298ab,got bild to gen java tests (others commented out) and run those tests. rm'd .stg map in Index.stg.
0c7df237db8954aa9b240ff806a7cbc2ad27a3df,remove old java runtime test framework; reorg dirs. bild.py test_java appears to work.
1323e30fa9a47b4ca483162f0b6ff254d18171c3,"moving around templates, deleting old stuff. C# and Java runtime tests work using branch intermediate-test-generation of C#. bild doesn't quite test stuff correctly."
fbf3ee8e966e9db8e6126cf9dd586d970398d681,"a branch to integrate new testing thing. moving around templates, deleting old stuff. C# and Java runtime tests work using branch intermediate-test-generation of C#. bild doesnt quite test stuff correctly."
29db15736dfec4a359a46f230c9dc8aa44c0f739,regen_test in bild.py works now
63336745881f2ece4d71f6ade623a407458f88b9,bild.py works to build c# now.
8c2657b68d6630dad54a01a61de164ff221b7ed4,add more debugging/error handling
fec97f29385b0646dea358cce75e8244820d4bd5,tweaks
6e3484a286c056d505b24ec22ef2a7716a86d939,add old stuff back in.
44664e86478db7abdcb98340a106b6b0379c1b18,"Merge pull request #885 from parrt/intermediate-test-generation

Intermediate test generation"
345bd14c00b9ec76980e6417a32f4b303edb2fb6,"Merge pull request #13 from antlr/intermediate-test-generation

Move to new testing mechanism"
ddf7cfc4012531b7a40e7791ff9903e12da78743,"Revert ""Fixes #802. Trigger events for alt labels in parser listeners.""

This reverts commit 3674d45476a2582c918ce6691543faa74ce4ceda."
965a50e82ebc0594c388a569168ef1afff56299c,"Revert ""Fixes #879. only gen parse listener enterRule events in enterOuterAlt, not enterRule.""

This reverts commit a8b67147c236c4a032b957fc3eb4ace279ff0350."
e5e928cd3f04df9c45530bfe72584afcbc517bdd,"Revert ""Equivalent changes for https://github.com/antlr/antlr4/pull/875 to java runtime Parser""

This reverts commit b539521c5d85b722ec9ac1a3eac83a6fc9818302."
1b0b04aa88852e29f964f95e04ed7271a63b4a19,"Revert ""Fix parse listener per https://github.com/antlr/antlr4/pull/880""

This reverts commit fb0e1c0cdb0c484a106a98ec83d94a260e0e8832."
2379a5116b1c427a44b91e4568ac8a76cb42acc2,"Revert ""Equivalent changes for https://github.com/antlr/antlr4/pull/875 to java runtime Parser""

This reverts commit b29566286d6753c7df68330afc8410421f90c64a."
e7933abe46cb24992da34e3adeb0d36d3cc7f415,"Revert ""Fix parse listener per https://github.com/antlr/antlr4/pull/880""

This reverts commit 4daf3119744a6e869f34761a3b85fe0bdcb3ab5c."
9718bbb01511e5b9e1d1d67b4db34593a3cf317d,"Revert ""Equivalent changes for https://github.com/antlr/antlr4/pull/875 to java runtime Parser""

This reverts commit 9dab4537557829ad545e212762a4244f272315c0."
401d07880842bc91378d57592198d94fd07a2a00,"Revert ""Fix parse listener per https://github.com/antlr/antlr4/pull/880""

This reverts commit b5bebb4c13e0665be4d60d61f997e48182432ffa."
416630ca4872c82eda9f2e7a19d5c30280bc2c92,"Revert ""Equivalent changes for https://github.com/antlr/antlr4/pull/875 to java runtime Parser""

This reverts commit 6012c4f9ef221dcc5bb905783e77dea9f3eafc63."
3e76cfd7d510842f58e67d2ac15590ee77820746,"Revert ""Fix parse listener per https://github.com/antlr/antlr4/pull/880""

This reverts commit 91abacbeca6f47c27eb645b8d15931bd4b4e660b."
3f9cb4b12fe8d70c15d3e4a6a784254da6c1d1ba,make more flexible by allowing subclass to spec test templates resource dir
2162afb33da15d62e85625f5755ba02718d4daa0,"Fix failing C# tests

As a result of a mono upgrade, tests on non windows platform would fail
due to a warning.
This fix removes the warning by providing compatibility information as
part of the build.
HashSet was also renamed to a clean name."
2e06ed8360b8df2cbdca1da73b3bd7de589a910f,test added to check a user issue
cf473b469ca12e7fff92196a864e114b337177b8,put /gen in gitignore
b58eb667749c8c98179cdee5cb5a7d5f726041eb,Merge branch 'master' of github.com:antlr/antlr4
dc445af663508e3df8ecd7e04fc2bfbd29696a87,Improve ParserInterpreter code simplicity
d44751173ba1e00c65fcb19b4a56adb1d3defb7d,"Merge pull request #889 from parrt/track-altnum-in-interp

Improve ParserInterpreter code simplicity"
24ae4b9bcbe74c79396e42bb527b721e5f7a9652,improve gitignore
37fb7a71fbb5a8f820644c977419ef3506e23141,"Merge pull request #891 from parrt/master

improve gitignore"
12efe2f83ba32a3acc990822bf6f929fa7dd43f7,"Verify behavior of lexer tests, and correct errors"
80a881e132af5aebc8e7140fd783b3b42cfc82f2,"Disable tests which rely on carriage returns in the input

For some reason, the test generator is not currently able to create string
literals containing these characters, so the tests will fail."
2f99ca74531c18d0433766d67d43b90e0e9e9c9e,Add the ability to ignore tests on a per-target basis
990fd9d8113fb9b7bedf43b6760fb8260ed9c991,"Verify behavior of LeftRecursion tests, and correct discrepancies"
364d98443782b4a1cdf65ec291ad0e065cf5329b,"Verify behavior of CompositeGrammars tests, and correct discrepancies"
6159947d8f80449b564602c75f1632fa475edef0,Add missing comments to FullContextParsing tests
4455d526fed440eda6e5b795d6e72b3bd0c547b1,Merge branch 'test-generation' into master
6865fd6869b242aacfffdf1f360aef5234fe9c25,Remove files which were unintentionally duplicated in commit 0c7df237
8cf7082e89e0cb28ae2a9c3ffed7f46c2e9b6f3a,add legacy bild
162230d52c5c3833348ca0396bbbd7c94889bbd6,tests added
4282894eaa895a100b4427f7a527ebd22cec8150,support for predicate in ctx.getChildren
cd8daa335fd1eb9fb0996ff3c4c77e19d82724fd,fix #39
a5d64f61f57a9359232b8fba8aaf2dfa4abce701,tests added
334c14bd4edfc880615bcd84442ac20e2b8498a0,added predicate to ctx.getChildren
84b54f72b849294647961fd2404930a477a30fa3,fix python3 #39
2527290cca5ea560858954e0643e8f7a2126576d,"fix ""java-escape"" bug in generated parser"
3be06edc410408d3c14a7be47b453e12a92e5f5a,"Revert ""fix ""java-escape"" bug in generated parser""

This reverts commit 2527290cca5ea560858954e0643e8f7a2126576d."
87cb0995e13c43954c7085a95e15ea9f1f7a22d1,"Revert ""fix python3 #39""

This reverts commit 84b54f72b849294647961fd2404930a477a30fa3."
738ee067b7e31202ec7de3b16c9bc99fb9a650aa,"Revert ""fix #39""

This reverts commit cd8daa335fd1eb9fb0996ff3c4c77e19d82724fd."
2da28ee5b23aa18d907625cde54cf7d71cd68801,add test showing EOF leaf not in source interval of tree
9e5cda85edba2cd2acbbf352c428c6a84c8c8524,Fixes #896. EOF was not counted in source interval.
94bb7c0af3d910a0c63abc5df0efc52ebcaddfe3,"Fixes #897. An empty rule matched at the start got an improper interval. updated documentation for getSourceInterval(), added unit tests. fixed logic for special cases."
81e2a654d772b630933d98ee6a8c1fe08a7d402a,clean up per Sam
a28b299dd47915463c4bd9c3c94736d245bb199e,reset new boolean
b8035d36d09e1dc6c4a313184833b92051976b50,small speed tweak
ed41558dc4ece90ec839da7b08d030c733795c9f,comment tweak.
a3ddd8295052993e7c59cc3186d62275b6f3dd50,"Merge pull request #898 from parrt/check-eof-in-tree

Check eof in tree"
dfeaadaa26bdb4f16e8075274ea07ce20a9df89e,LookaheadEventInfo now tracks alt taken by decision.
4c132b8a3185760a4d84e8bcfd304e0d0874f0aa,"Fixes #899. Add error nodes to interpret or parse trees.

Conflicts:
	runtime/Java/src/org/antlr/v4/runtime/ParserInterpreter.java"
8524630c03752ff1d43ffa4e192c3b730facd8d8,show <mismatched actualtokentext> not one of the expected.
12a36946e89306a3886541be98be6190d07662f4,actually just show text of erroneous token in red in treeviewer.
d2b86997d109a9147d463de175139156a7c16983,"Merge pull request #901 from parrt/master

LookaheadEventInfo now tracks alt taken by decision."
235d1a92165423e49af20fbd95be6d2653b3537b,"Merge pull request #902 from parrt/add-error-nodes

Add error nodes"
e3dded6ffc948e8669a3aaf455a9932b470866bb,"Merge pull request #893 from sharwell/test-generation

Completed test generation review"
cd4d6b85e49d9dc9e0a6d2e0d8d34ac70893e33d,dont throw away exceptions and add more error messages
fcc15905cccdd914a374304d6f3acbd7979cf56d,got all but 4 tests passing for py3!
7d36891c827ef214e6c6e59c4f86772f6db89a2b,"Merge pull request #906 from parrt/mv-python3-to-new-test-gen

got all but 4 tests passing for py3!"
775237b01dee2d3df7df7a89e9920fce0695cca1,copying old support code and templates to new test area; corresponds to https://github.com/antlr/antlr4/pull/906 in main repo
b933496d97cdc5142ddc8a8d3111be1cff511bb5,rename python dir to python2 for consistency
3ddb25919d71e40681bdccba49fff1b4dc872f0f,got all but 2 tests passing for py2!
21740a48b630c7ab38c741d820f5e387c718daba,"Merge pull request #910 from parrt/mv-python2-to-new-test-gen

got all but 2 tests passing for py2!"
92c57d9139e7d32e1414928e4dd81fee975720fd,copying old support code and templates to new test area; corresponds to https://github.com/antlr/antlr4/pull/910 in main repo
ad0239fb32c73fed8d1c482bebd1b9a66fbbec98,got all tests passing for js and changed order of test gen templates
16f2e168dac677ca541d2b83b008bba4e807cdb6,copying old support code and templates to new test area; corresponds to https://github.com/antlr/antlr4/pull/911 in main repo
871b0eb88fe1b58d3abaa6dfdcd6edbc5576bfc8,reorder templates a bit
1068dffb0021fd6c612fe8cde9684572e7c9cdaa,reorder templates a bit
228eae58f5abea08abf19a463bd90bbf298e753c,reorder templates a bit
0ff58068f78aa001f47e43b3ad5ae160e8d61e5c,"Merge pull request #911 from parrt/mv-javascript-to-new-test-gen

got all tests passing for js and changed order of test gen templates"
441587e8598ba25961e3cb20c88d4f425027ab8a,add new unit test corresponding to https://github.com/antlr/antlr4/commit/2e06ed8360b8df2cbdca1da73b3bd7de589a910f
591dca76affcde305344ea37d643c968ee212191,"Merge pull request #912 from parrt/add-TokenMismatch2-test-using-new-mechanism

add new unit test TokenMismatch2"
3c9aabfb80c19ca8f7095b86025804b528051218,"Move TestPerformance.testExpressionGrammar to the runtime test suite

Fixes #909"
fece2e1fa2e185ae8a20649831a2f97114cc03b1,Fix tests generation
1c2d71f623fd306f10c9f88853b68c2317f02085,"Merge remote-tracking branch 'origin/master'

Conflicts:
	tool/test/org/antlr/v4/test/rt/csharp/BaseTest.java
	tool/test/org/antlr/v4/test/runtime/csharp/CSharp.test.stg"
849cb09c39245e0fb0a520ffaa7358e7d5b2930f,duplicate
4bee04f1140cfc138cf22a3a36759214637bfa98,I do not properly add the unit test
94bef386cb3e0539f934ed797d80c970add29dea,add new interpreter that knows how to track alternatives in rule nodes; some cleanup and improvement to other interpreter
11726e072e8c75465f1790ef260eed2f7219c7fe,update the comments.
204cf12e86d54b66853182314e3c2a8e0c35d70d,mv latch check for speed.
1c19c70307201a4335a7e7cb4099127135a37b0e,convert map to int[][]
a319ea4b3ecec4018df351b9c0724052cab9aaa2,"Merge pull request #914 from parrt/add-heavy-parser-interpreter

add new interpreter that knows how to track alternatives in rule nodes"
0e692ed436c33686973242464641c8bf829468e0,allow users to override the TreeLayoutAdaptor
dc150f4aa27944c526e27b9ec51134b966a67865,refactor tokens.size() to be size()
4c063ee7694450c116bd45faf9a192333098a4d2,"Merge pull request #915 from parrt/master

Small refactoring for flexibility of subclasses (token stream, tree view)"
7e8a7bac849113110ece34535c9652bbc7624215,Improve tree highlighting
5f2ce89ea309df1574eeb780945e492c4065caf0,improve robustness
fcae921e61c1be171070cd8a2b7c7458ebecda8f,"Merge pull request #916 from parrt/master

small improvements for trees"
4e11aa2d25f8577718604ed5467aea078aa5495b,"Revert ""refactor tokens.size() to be size()""

This reverts commit dc150f4aa27944c526e27b9ec51134b966a67865."
44993449855a480f70b455785a5ed5bde24caffd,added -root parameter to generate all targets
6937773b148ce768c63d533340b924ae0b739967,updated test generation templates
21802a269aa87c8bbd3dc6fb9cbc20e8159c1868,refactor for consistency
84d3e3de627a48a79b00e4ed87ab62a7a02ec2a4,refactor for consistency
35794c431ceed41783fbbe4e49693c04537058c5,"Merge pull request #917 from antlr/enable-one-shot-tests-generation

added -root parameter to generate all targets"
b742bbdaf490382b9e7fabfb5597e67ca69df7e9,Merge branch 'master' of github.com:antlr/antlr4
e0c6210d2287f5856c641205428391497ab498c9,added a comment and removed redundant array creation from varargs.
ab6b292773eddf58a03c36036a09bb5e0a035cb1,rename package to python2 for consistency with other target and to make it more clear; hope that is okay
0faea5ee1d2e0021530fbe2869154005908616f2,rename package to python2 for consistency with other target and to make it more clear; hope that is okay
a9ca2efae56815dc464189b055ffe9da23766f7f,"add tests, refactor get-all-parse-tree stuff. add Trees support routines."
e9d62bb2314ba326688dac372a6b38b6f2cead98,"Merge pull request #918 from parrt/add-heavy-interp-tests-and-support

add tests, refactor get-all-parse-tree stuff. add Trees support routines"
84b193a0504f36266c2f4eca7890a71a3284639e,"Fix `LexerNoViableAltException.__str__`.

Signed-off-by: jcbrinfo <jcbrinfo@users.noreply.github.com>"
55a33fb45d3c9c48bd82d4c0449f7f5b7adeb275,add missing
74fbf38ce7b747dae6fb2f7b533b6d69c14e0d24,make Predicate consistent with java 8
226755955071b8f85963324f3510a642fdcd645a,yet more ide .xml changes
8beec1828377a6c2d2b05445ca9b7c83fcc79a55,"Add Maven build

Account for the following:
- deploying snapshots to OSSRH
- releasing to Maven Central
- Shaded JAR including the treelayout dependency
- OSGi manifest
- remove Eclipse IDE metadata for clean import
- remove IDEA IDE metadata for clean import"
f661f41071764750b2096237905503287612a05f,Merge branch 'jvanzyl-master'
cfc10cef116ee24caac8ce65d847d3a16da02c07,"Use variable for project version

Thanks to @sharwell for catching this."
e8c6b322832cc04c5a1133f9b3552082252d2c68,"Merge pull request #921 from jvanzyl/master

Use variable for project version"
4115a0ad4702a2fd2162f3ca11a7befb5ff277ba,"Merge pull request #913 from sharwell/fix-909

Move TestPerformance.testExpressionGrammar to the runtime test suite"
c91ce731d24a454469bb9bb0f835809efffde3b5,improve gitignore
560b2b428e32c9230acfe68a0300dec1431e90d9,Remove the three remaining .iml files
80594314756280c2868ad7d05ddfba1a796ce71d,"Merge pull request #923 from sharwell/rm-iml

Remove the three remaining .iml files"
0f1516b7985b0fad1f342943a2be07473acd86dd,Add missing copyright notices. Improve comments.  Construct new temporary parsers of the same class as the original parser. a rename.
cbb3acead6e376800f590c5d3b8f494129d2182d,missing import
708227c3e245c7093c1c707e6ded460454440469,bug where a character would be consumed when already consumed by error recovery mechanism
bde6408fa97e446fffee1f32c7515adcba2a48db,"fix test generation templates

all tests pass"
9ae9511566e745613e962e0036a68e609d70c0aa,generated tests
408856a1655d4ff465c442047a9c96c6c0dc75bd,missing import
f1d9e7c6d2d39a17c82c733457cc04a627da143b,"fix test generation template

all tests pass"
61d67edbc80e7f5798d81d0f65e18a74658c4753,generated tests
91373cb52cdcd08123cbaa08f1c13633bd08cdc7,obsolete
6dd23765a4e7bdf39d323eeadd7e697ede2fa7f5,cleanup test generation templates
3fcc24f6b1d04860b3afececc60c5b43cbd00fbe,generated tests
b47e82125d28dfd73c7c8f778c78cf8790561afb,fix test generation template
373c148ddc377cf651c7c06d8c730f6e9cf265f0,generated tests
6df52134a4ebe36030c9a1d1c87445365777eeec,delete legacy tests
d18c74e48f5c58c3384f197c7c3a4e26ae3c627b,delete legacy tests
be0828cc8d550f53ee402db4beb8ab4031e13c12,delete legacy tests
1534a97c15ec155ae18819758e9e3b9fdcc7dba1,delete legacy tests
06730fcc6c5990272d99d58352288daa64fd3d29,delete legacy test generator and generated tests
957fc8264324f2b2fc7d95888557e5049b740013,"Revert ""rename package to python2 for consistency with other target and to make it more clear; hope that is okay""

This reverts commit ab6b292773eddf58a03c36036a09bb5e0a035cb1."
9956b3e9d1a7312720c52fea036344ff626c80be,"Merge pull request #43 from jcbrinfo/patch-1

Fix `LexerNoViableAltException.__str__`"
6c9a674ea718f255d9f89cf89c7a6e1cf16492fc,"import common code from package python not python2; given the change in package, requires an import"
7f221559001181b49154fd7e54fa068157aee3c2,Tweak package for Python support code.
bb6308f6c14718e9a7571bea987efde24e06d81a,"fix #40

no need to escape with Python"
70073950e2a3c25e57ac44f6da23f2fb3cce1023,fix #40
4dabde4b9b09f29017e1f81917f3d3672e07ba81,missing template
70aad391f71fd7c98a1250a86c29b9d421299991,missing template
82d0cbc3f6d63794a513ed634aee5ea33302e056,add missing template
cfd9641deb00bf3deb290cf32e1bbc9735fbd9d6,fix case sensitive env
214a4b7f52a1755f93fd9e3a7bf8bc3edd72dc51,fix case sensitive env
162c6138a5541ff9c460b2b7516bdc38d509482f,rm unused template
eb390c9bc266f2ddf10b99be8310c81bb5386747,fix broken template
2b0a58e270b327cf8fb27b26f37aaef3ffe470bf,broken template
ab5ec5586a6b0835f699b0d3a57dfd4131b8766a,fixed closure test template
70fa6b27f0cc90acc1a1da89a80eff0ee3d25170,fixed closure test template
57b77c5460c33bb0aa33889b9cea2eb1cf958222,fixed closure test template
e92555a5ec757989ba5eebbb5b93aceb90621315,fixed closure test template
c10ff6033c975d458567ac8756f48d014608b97e,renamed files
98de3a7cbe8f861c20905a8842efc2d9366b62b1,renamed files
c82440b7cbb94cb528ee9ffafc57e0f852508bf8,>Fix #14
3f23144eafa412e4eb0d956bdfe452259fb34b36,"Fix #8

Drops support of .Net versions < 3.5.
Official support by Microsoft is dropped since 2011, see
http://stackoverflow.com/questions/2713392/when-will-microsoft-end-mains
tream-support-for-existing-versions-of-the-net-fra
People in need of support of older versions should use Sam Harwell ’s
version"
232d734ecc3132fabefd026d1191b4708eb7beb6,cleanup post fix #8
44bee0ed5810b1789ca547e5a478d09dc7af81f8,"Merge pull request #11 from superraz375/patch-1

Add properties to enable access to Lexer fields"
c62ed0bc6a34ba1dd5bd99eee26961296ca7b378,Fixes #29
dfda30092ed60c1086b3e45d9329a6e6573ff026,"Remove forward declaration of listener/visitor, and adjust test templates accordingly"
c270c5f3264ba5e08495700e4380f8a21a68b0db,cleanup circular import mess
cc804e57a13eef5064cea21b27a6c7c0da206606,update copyright notice
100d14a94670d1237dfedb462e0de3ef87dc62af,update copyright notice
2b82632a812664a9da4e466d24a55d50d79d66df,update copyright notice
437dd366733546ce43c43f7622d4df1e4fcfa131,update copyright notice
30aa7349f6647b90d8c3af86b7b11cbf941d04de,set version
02f325db12c28462e3371926bade28af830cd8ee,set version
19a43e27eb972e8446ff2833926d894dadae95de,set version
0330cee3198bfc20962f64762ccd05d5f8665848,Use separate actions to get actions on line by themselves.
5c5228884570e1b0decffcb75b2966532e12524a,use template name that indicates what we're testing here. AssertIsList(v).
b8b317ce6908097aa0e274d680a856a14f4da413,add AssertIsList() template; sync with https://github.com/antlr/antlr4/commit/5c5228884570e1b0decffcb75b2966532e12524a
3cf6aa378eede0438db8d41e879884fa16547f69,add AssertIsList() template; sync with https://github.com/antlr/antlr4/commit/5c5228884570e1b0decffcb75b2966532e12524a
c8634bb9b61e55b0ee4bc46675e51e0af1ebbcf9,add AssertIsList() template; sync with https://github.com/antlr/antlr4/commit/5c5228884570e1b0decffcb75b2966532e12524a
73fd170b6252c7eb7353800495ec9b8132a7c8b0,add AssertIsList() template; sync with https://github.com/antlr/antlr4/commit/5c5228884570e1b0decffcb75b2966532e12524a
707dbb9f8f42339bdcd7f6d52b9263bd9fcc26f6,"fix failing test generation

wrong rule was called"
fe13b2362858c211df686a0ccc084319f1d6ac82,"fix failing test generation

failed in Python because « type » is reserved"
62333178ffc56a891e7e53b38231e9eb3cd25a57,node->nodejs executable
b09119e426352ecee36b10fbc72914b720dda7ef,"fix failing tests generation

those 4 tests used \r as input although \r has no impact on what is
being tested. Replaced or removed \r so tests can be generated and ran."
459b4bb8b67e5315e17aba9cb3c2940940c1ad4e,add/update warning comment
3c0f3a17e95ad5a6a1b99b0e9da06abc8d2e02b2,add/update warning comment
c67f4725f88d41b663597b10a9b197a3b894f46a,add/update warning comment
a79e7bc992bdb48428d66b083c4bc4a5dcdac562,add/update warning comment
a95666e7107565bd37e85d1b80d75b764f5a30df,add/update warning comment
9c57b650c1edd0a5733afabef067a71c476580f1,add unit test src for now; it is altogether from all targets
015d3b2bb4f2e4f986632b75b32624b948fe5f7d,add travis ci file
5bb9976ea5bf99ddbba903cd70ba6b1b774098d5,gen tests in new location
317ce86583585e6180c02b49c50a34e6d89cb307,add dependency on tool for tests
02d5ddfbff51584b237ab910466541cc8688fac9,tweak travis
cdbfecaca805939e2788ccb017b9c13930196928,update version
e4747acc72e973633529745dff8db1875610367d,update version
d568bcc1b3e7e572e97de19f94ec31e7067f1be4,update version
aa589d50de9fe72a0d34d3ada814d616ccb0a56e,update version
0e2e13577142345330b9be971f123cac0e4eb54e,tweak bild
7025d70e88fbd93edea83781ec477e05023cd028,cleanup tests template
b0264f4dc00511b086f5b2a25972508809d58bea,cleanup tests template
371708308997a7731bffc20abb5f154efadfdb18,cleanup test templates
0e24a81ad6e3153fb5cbb8be6437a8e926eebbc7,Merge branch 'master' of https://github.com/antlr/antlr4-javascript
7636b744b30a468d2145ba1f037ddd8a7ee3ef37,cleanup tests template
6e86f6d1025540b46f4a81c6847b18558cd600c6,tests are now with runtime-testsuite
f29007581751a351135e2fc6501c8df529f58ac9,tests are now with runtime-testsuite
6e0379d1e4274f0d2d64ffaf58fd4760ec9a24a1,tests are now with runtime-testsuite
5d5c582f82f4151d538c1d0b7f075d620960effe,tests are now with runtime-testsuite
6439b40d09a8bba8bfacfbcfc338ddf39ef1da62,"Merge pull request #928 from antlr/delete-legacy-tests

delete legacy test generator and generated tests"
46202d98a260fb865e6dde6732deb92bcb793c80,"Integrating tests for all supported targets

- A profile ""rts"" has been created which runs the integration tests. By default the the project containing the runtimes tests will not run so that users casually checking out and building the project do not have to install the tools required to test all the supported Antlr targets.

- The base test classes that are required for running the integration tests are downloaded from the other Antlr repos, dynamically added to the compile classpath and used by the currently checked in integration tests

To run the the full build with all the integration tests use the following:

mvn clean install -Prts"
a0fbded1256a76b358e66f8481cfcc8747245c5e,"Merge pull request #937 from jvanzyl/master

Integrating tests for all supported targets"
77e7d9ac4aa022a6d22360fa6ebc2f21322d543b,set new gen dir for tests runtime-testsuite/test/org/antlr/v4/test/runtime/python2 etc...
fcd8a67965a61a209bcd9bad468e701d22ca5dd4,don't allow recursive subdirs of tests
9170f57aff2ffa3215cc59b19b29279139ef47bd,tweak TestGenerator so it sorts test names so order is always same in TestX.java files.
e3eaeeb542e90c8685464b0c544e6dd78f098d1e,"Merge pull request #939 from parrt/fix-test-gen-order

Fix test gen order"
0989a7d242959ce3f79a2a88850e73ffb3c81cf8,Added initial CppTarget so we can start trying to generate data.  Does not yet have support for C++ header files (or really anything).  Expect Java-like code.
095fe36b66f8b56085d7cdd5331a3e5c34fcde74,Updated list of reserved keywords in C++.
363b6409493bd27721b7aac44df0b51777663fa1,"Now actually generates some Java-ish looking code with the following command:

LOCATION=~/GitHub/antlr4cpp/antlr4/dist/antlr-4.1.1-dev-complete.jar
java -classpath $LOCATION -jar $LOCATION -Dlanguage=Cpp T.g4"
8824e35a1fbb08d464d035bfc8388892d0b2721d,Adding myself as a contributor
8d9217352243556bf51e69084176ae446a2d2efd,"Merge pull request #941 from jvanzyl/master

Adding myself as a contributor"
905314e51400deae0e24a221fceb93ac0f635b53,add NotNull back to runtime but just for backward compatibility with 4.5; deprecated
5ea597098a0323a6f322c94c8f56d60d829f82e0,Merge branch 'master' of github.com:antlr/antlr4
fdcfe5482f3d6b93b5d9a38b4176fb0aa6dae9a8,mv tool tests into their own top level directory; mv test template support .stg into the runtime-testsuite area
8ae7f22f86862c1fe5deb1f00e44539e81f956ea,move BaseTest to be in the runtime test area to be consistent with other targets.
0430833450530b5e589feb68144e695b50b76799,"move ErrorQueue, used by BaseTest, to the runtime test area."
66ccef187e26622d98dd9dba107cd0b912ae1de2,update test gen templates and the generated templates themselves to use the new location for BaseTest.
e1c22147f8066955e49642651774c72d7064760f,"Ooops.  do the same update for ErrorQueue, which also moved location."
1cd4ad125c2cb37e7976bad842d3cd10df273308,add import for BaseTest so tool tests compile. it all appears to compile and tool tests pass.
f97183955f3ee745ef30e7567826bfdb4b2636d7,temporarily add manual intellij project files so i can compile.
6d892c71b5538da1650efaa25c71468456209ecb,mv JavaTarget to new target package
e8c4bc4b0942f755d98f1dd49b63c5b4d8ceccb8,"Manual copy/add-to-git from antlr4-csharp repo (w/o history) to show how C# target should get injected into main antlr4 repo. Pieces go into tool for code gen, runtime-testsuite, and of course the runtime module."
6711cdf3212038535108852d69abdbb133c0d672,Got C# target runtime tests working by finding files as resource not relative path. updated intellij proj to include correct stuff as resources.
3b641b0e2261d72c44fab94e4d059dc2bcc9dbb0,ugh. intellij missed a file for commit (again!) wtf?
80b011adefc030e024cbae10a260512f00d170de,reset resource locations to target name under antlr4/runtime for consistency.
ef870a47030d5607fecb685ba4c3a2f4eb2592c9,reset resource locations to entire runtime dir.
d1f95085fe765851c15a309869e7c5560219131d,"all Python3 runtime tests pass. Using same ""get resource"" mechanism to find runtime python code as I did for C#."
8e89af918f35839ca8bfeb420404c68df553ed9e,all Python2 runtime tests pass
da818c0c5c731473515556bb2db2d980e86d3fb6,got javascript/node tests passing; folded in all js targets
ca80d2725704016c4fb0ae10d0de765e3fe84ed9,tweak list of resources to no avail for testing python
7b5ac5a751b026cf1a0f96f0616f85e5e5a53360,fix Node test gen
8e361ef401068b8a5cec2c9720d0a41f34bb8b2b,gen all targets now pays attention to -o option. Simplified target spec. `Regen tests with java org.antlr.v4.testgen.TestGenerator -root /Users/parrt/antlr/code/antlr4` from command-line.
b3133abb21103ea58929ec4033487fbd86fb65fe,gitignore was dropping all my target generators. ugh.
9203dd193e2ef3de88698e20a1d79ccf1be179cb,add gen3/4 for now to avoid bootstrap issue
99ad09ece1c05ccd8cc45d1fc4618fa863ef4b48,"ok, somehow python2 runtime got overwritten with weird stuff. it passes tests again now with fresh copy."
5d2d75d2e37c1f04f48003c9649109b3d97f14c4,"looks like i had python2 and 3 swapped. java, python3, c# pass. python2, js each have same single test failing: testCharSetWithQuote1"
f4709f29739be951046bb39d4bbf3e7b08c21b2e,"tweak pom to give version of maven-jar-plugin so it doesn't fail. success reported for ""maven test"" but no tests run. ;)"
dec5d26a3d14920628636e01438040520010532b,tweak pom so it compiles in `compile` phase and `install` phase but doesn't run tests correctly.
5494e7c73e62e7f62e1545f439ced9eb0124646f,IDE .ipr knows how to build complete jar artifact.
9247334a079685e0bb79dd3c6526714d8b3d4b55,Update getTargetNameFromTemplatesFileName() to also work on Windows systems
157749e8257a65034406d7a8222290029421b0df,"Generate tests during the build

This commit enables the runtime test generator during the Maven build,
process which means the Java runtime receives the same comprehensive
testing during a Maven build as it does during a build with bild.py."
eeb158d9ecb266f02a76f52993bc26e8a3b025c7,rm circular dependency; update a comment
47c234af64622c5e6cc2c97d12b47b15191c10e7,Improve m2e integration for the test generator
f71e225cf272a324576128d776df46816bf821ec,"Fix Travis configuration so the build passes

* The build failed because the `cd antlr4` step failed.
* The `mvn install` operation runs tests, so remove the duplicate `mvn test` step."
b05e3ccdb884ebab9c3b8b66a62611bf4c245220,messing with poms  to get test generation in there. it doesn't seem to compiled and properly though. mvn compile works but mvn install doesn't finished compiling generated tests.
f5b48efd46b71210710cd3214d0898a129986650,manual cherrypick of Sam's https://github.com/sharwell/antlr4/commit/d74781d2fe6fe47774d0aff3818f0e923b3f5782
f98a0a7dfd2fd1c46e1bc44507a03c9c337fb12b,Fix copyright notices for maven plugins
e921ba69c880b5855cb98c3d61ed0f086d13fd22,tweak java version
8c255b9a120e0bcccc02015dd6f17a80dc378b28,trying to get tests to run
681e6c3ed02ffa347b4f9c1283d4bb6691a7d5d1,a test bild script that works on all but a few tool tests.
d4e703a4127200b45ff9808c7a9a83c64d851554,figured out classpath issue
9fa4b0333f66bb90553eca54f6c3e99f0abe57c8,add iml file
7d8078cfc20d72008e4fdfd7399ac9cae3da9fb7,comment out a class-based testbild thingie
d0c3694e71666246adc448595109a07ed05254d7,yet more playing with python build
fd13f137f2ae145a6e85fd38e5a89e8198b850ac,All projects are now building and tests passing from Maven
a13352d8e79f365299533763a307bc6ecf7b8c16,Make javascript test sources compile. Jetty and Selenium required.
1accfe15d3712222be6133309ac5a09238c4c478,rm test build stuff
ee4bb934495f183807f53e777804567450145e19,"Enable the generation of the runtime tests

Note: I had to tweak generator not to assume a particular directory structure. I will
revisit this but the whole maven build is working."
f48aa50a61bee7d49378de60026152912a94b742,"Add a command and README.md for the generation of the runtime test harness.

The workflow we want to support is for an Antlr dev to tweak the harness, examine the output
and when it's desirable checkin the results. This is an offline process done by a dev."
5d45e156018db82ec6b169b5a83933da9952fd62,Place the runtime and tool test suites in a separate profile
9de674a6fd4a8d664169a50fe3d2481ed9b09dd7,Correct name of runtime suite directory
661a565448e0fb3bfcad1397ba84bea2c3623a86,rename rts to tests to make it more understandable
c129166e69654203ec2b2cc02889fd816479fcce,we are calling the test generator directly because Jason said that was much easier than a plug-in that used during the build itself; simplifying to remove that plug-in.
398f7fcf53ddb31f2d903d4192d4c4cff223b6a8,"Run all Java target tests by default

And we will use the ""tests"" profile to initiate the tests for the rest of the targets."
a142a5bc625720f121fddeb6afd3e55a8566e4bd,"Create shaded tool JAR

Which contains:
 - Antlr runtime classes
 - String template classes
 - Tree layout classes"
1e6b4efb5f0eeb2a0b9ff116bbd4e1891f72de17,"Merge pull request #942 from parrt/fold-in-target-repos-experimental

Fold target repos into master (w/o histories I'm afraid)"
738d5b2514471e2bac6c227aafb70e16b004123d,mv files into proper position for folding into main antlr4 repo
631a6ae516184f0b6d1a36c2588e5c9e341558a9,rm non target language runtime files as we have them folded already into main antlr4 repo (no history)
76d5f7b5f7d5292991b8dffafa3554ea1b7608c9,"Merge branch 'fold-into-master' of github.com:antlr/antlr4-csharp

Conflicts:
	.gitignore
	runtime/CSharp/runtime/CSharp/Antlr4.mono.sln"
147a4b3ae3df5885712d177ba85d47f66679b0c4,"Merge pull request #943 from parrt/master

pull in antlr4-csharp history for runtime files."
dac66a6fab858d9fa569597d0c6487ac0b009a67,mv files into proper position for folding into main antlr4 repo
d5fb13ac50831707e9b3c005d3098bbb32f50057,rm non target language runtime files as we have them folded already into main antlr4 repo (no history)
c0aa3b36cab7fe76b633d7d73f850af9a74016a6,get .project into position
6bd039e585b8684e0835f22f84e27cce2884a68a,fold in history from javascript repo
8df10b2085340d127f2758da502402148f699f1a,"Merge pull request #944 from parrt/master

pull in antlr4-javascript history for runtime files."
fe207fb3ee56d37c8a170024be306cae03f5218c,mv files into proper position for folding into main antlr4 repo; delete already moved stuff
40ef11a77c7b7ad466aec46f0282140c75929a0a,Merge branch 'fold-into-master' of github.com:antlr/antlr4-python2
d81fa3312871851f8d894c486453a50ba922eee7,mv files into proper position for folding into main antlr4 repo; delete already moved stuff
7114dcd3aee51925a564c5abef76ad7e261565c5,Merge branch 'fold-into-master' of github.com:antlr/antlr4-python3
c2dfb7f457768c249225d380c027aa6da80df0b6,rm a few local test files
050cdd1511843c97e3eff16d4938d98e42a89f8e,"Merge pull request #946 from parrt/master

pull in antlr4-python2 history for runtime files."
53678867ca61ffb4aa79298b40efcc74bebf952c,rm a few local test files
fccf0b4036c38aef8ad81468b6f19523a95cc757,Now outputs headers a bit as well as code.
0d1b4bffd1b75ffb9ecc96f90c4de137847de24c,Now has support for all 6 header possible header files.
fa0463fc31b94edc2686d810ced3ca23991556b9,Removed handled TODO.
083f924e25dfce3950b6448c9f51d3d08d8d5511,Working on the templates
dee6f88e446fe1c7ad9fecae72eba06a4d50a9b3,A third of the templates now look like C++ (but may not match the final runtime).
8bb5bf0dcdff4fc6bc3764566b9354681ee98154,Now 46% complete.
7ead71d14326d5d876bc56bbea6c0d885b571822,Enough template definitions to be dangerous (near complete).
d1eb13cddc67c68447df4bde4a0a79439a6e792f,"Fix antlr4-javascript #36.
Octal is not supported in strict mode."
735b40431dd0359b372bf284da3af55154826e33,"Merge pull request #950 from ericvergnaud/suppress-octals-in-javascript-serialization

Fix antlr4-javascript #36."
7a8dc8e290b5315c9fbdb33df8f2bc6c4e475f88,simpler and clearer
84588075de065593d62efdd629be73c0ace0c16a,"Merge pull request #952 from ericvergnaud/clarify-nodejs-usage

simpler and clearer identification of runtime process (nodejs vs browser)"
b395127e733b33c27f344695ebf155ecf5edeeab,move swing related stuff out of runtime package into org.antlr.v4.gui
fcd1e54289ece4a799bbb0ebb968c282918fa494,rm unneeded plug-in from maven
2921865a541ffc1132bb55fa7c7814ea0278506e,add TestRig proxy.
b555099842526b29109376bf3168bb491129ab12,"Merge pull request #955 from parrt/move-swing-dependency

move swing related stuff out of runtime package into org.antlr.v4.gui"
ec14027f55a5aaf6e03655611125339172cfbdec,mvn is working well. remove bild stuff
2cd8cc0e70132210fc0bb0776b9511511a378cfb,"Merge pull request #956 from parrt/rm-manual-bild-stuff

mvn is working well. remove bild stuff"
79dae1e6f61c98adebaa4a51e59f9b87eab47b42,[maven-release-plugin] prepare release 4.5.1
3d181af904a29eb42db5f67a28814a61df6db7cc,[maven-release-plugin] prepare for next development iteration
ad6a1bda3f07277711455ff7b4597d45d0715d57,"rm generated files, update a manifest"
3c08f49a1a62457e2c5ea2333725217358ffeac8,"Fix NameError in LexerATNSimulator.reset()

Without this line, one gets ""NameError: name 'Lexer' is not defined"" when calling reset(). This is the same way __init__() assigns self.mode."
0ed092e224887e7febe6d8143cfaf1301d2ea86f,Improvements to start supporting header files (incomplete).
c158777c607b7e458647e5d6fe1f27c63e887eab,"Rename tool-testsuite/test/org.antlr.v4.test.tool.Java-LR.g4 to
JavaLR.g4"
eede25c5eb306297706da0b8236786aadd5e46a0,Added eclipse /bin/ folder
cabb96f5e0b1f2844cc57c4a798507a169a132a5,Add myself to contributers.txt
86980fae9060675309cf747160cb605cdb24483d,Proper check of JavaLR vs Java grammar
63200907d671975c044e290e9544f21e4c056ddb,Fix whitespace damage
1072ace723dd9c8486cde1ff21f004dac5753b60,remove uncessary sourceName variable
4bd204ed9b4968365cae6ab805ecb8e8df20e833,Revert eclipse project specific setting
869bf03d1302e2ccdf34a7e0f25f9fc11a78f8d4,Update README.md
88f0fdac7ba1073765d918556596b99225c7da12,Update README.md
9623d955a047602f5932cfbba4f830c9a606ea29,Add Main-Class attribute to shaded tool JAR
53ec1956ab71a851dd7b5eb5f611fd9dd4bb613a,"Merge pull request #983 from jvanzyl/master

Add Main-Class attribute to shaded tool JAR"
3611fde621fb7b0e4627d1e576e09b532d02a8a5,[maven-release-plugin] prepare release 4.5.1-1
c07aa4ede109f3a9f5dd285ff07e5402e32b8de2,[maven-release-plugin] prepare for next development iteration
cfb557cc9066b40b4bca8a3291fc5744261b487c,add performance test
164a34ba6ed69c73a1d3b2b8be08f1f60596a9d6,use native tuple hash instead of str hash
e6d27c7a7cb432beb4878d993475fa3b3843f46d,use native tuple hash instead of str hash
2f4f36d60c64c22d3db8d3ec68455030cbf1e703,typos
1b5437aeab84a4fe3367abf2e4795348634a200b,more tuning
3a107249197420106dab7094df38c8e3acd887c2,typo
980072b6b418049a67c5495bfc54722b64f46568,more tuning
295d23572891b79c154ec089e6a549a698542fd5,typo
1b3f74495f391982b5551a0a370d14304641501b,typo
d7d59c53a7c2d8cec42776f8b3644c4246c1098d,more tuning
27855f7ed4d9f7622993f8310b19c1bb6422f3f9,remove slow asserts
4617daaea7707d5ab9324a549fc324cc46678e82,"Merge pull request #987 from ericvergnaud/improve-hashing-performance

Improve hashing performance"
52f3933bfbc7caf0428ec70edd0194ade53e0ee4,updated
ee3d29cc50832a5c7220f33ba0f048a6cdf79c49,"Fixes an issue pointed out by Mike Cargal, where null literals where registered as 'null' instead of null in both lexicalNames and symbolicNames, thus resulting in erroneous error messages when handling parsing errors."
bf00f6b57ed5692d8266b0fd3b98eefd76ff3ff1,Switch to selenium v46
ebf8b9aaeaa779c9fdce904cfca166c8440ae29a,Fix templates which were referring to a missing class
b65d5215749596d0bf6fc2a3cbccced86ea8d61e,Fix test generator to support browser tests generation when generating all tests
a80052fa2a81e727f0a65c2a2d95f34edc83d364,"Fixed a bug when locating JavaScript runtime, and refactored common code"
e7cdc2271fcef47589b5ffd7e0cb396dc8eeb5f8,Largely rewritten to support usage in web worker thread without breaking compatibility with NodeJS require
6c0b7d9c87bc91e0e9a8ef34bafbb988d77c2fc4,"Improve compatibility across contexts: nodejs, web ui and web worker"
940cbcf19fc1b239b5c220d39e0a0ca94c665970,"Uncomment syncs before adaptivePredict

These allow slightly better error recovery before we run
`adaptivePredict`, as illustrated by the test."
797cf081117f8a02fabc385b3e808e2015b6b005,"Delete remaining commented out syncs.

These sync calls are truly redundant - when we are in a simple
alternative block, we can recover sufficiently with `recoverInline`, and
so the syncs do not add anything."
af00e52de61a8b21975d2c529822ae55504ba720,Correctly append newline to test output
09588d2936685348209309603ba575405c52c2b3,Update templates for other languages similarly
0c29b54fcb995c5d0ed6b62aae71903157053115,Update generated test source
1e89482a644fb280320fa4b2393a99248e27e228,"Actually, Torben was kind enough to fix the require version from Smoothie, moved to a new framework called Honey, and to switch to the MIT license.
So dropped my version, which also required some fix for Safari, in favor of this one that I don't have to maintain"
3933f8b38afa54d20a78555efff8c73064e55971,"Fixes in the template file, mainly just semicolons at the end of
include statements"
4a90b9f21909538927f220cefbd8a7adc210af7d,Fixes for the Lexer
ac64b032a1d61d280dbd420bde99ff46a0bc597f,"Merge pull request #988 from ericvergnaud/fix-javascript-generation

Fixes an issue pointed out by Mike Cargal, where null literals where …"
66bd976cd1b9ab4b329f8c77c0153d779f68e0ab,"Merge pull request #989 from ericvergnaud/make-require-worker-compatible

Make 'require' web worker compatible"
488f7b92ae14efc335802f6b48720073ac1c3618,was failing when ran in NodeJS
a24b4fdf06cb1c3201a9ec1e42b2afc9d590049c,"fix TestGenerator unclear path detection, enable generation of all targets except javascript browsers"
f7a9a73d647fdee9398e2d4233352bd1a20970af,"fix test generation parameters, enable non-java targets"
6e9680f9cf269a3a2c68e75b3065c0d48533ffba,trying to get python3 tests to run on travis-ci
377fd29f85728e27ddf05f7281f6909316feca29,try again
fce545b51c42213eb8d50797acbee028184ef4e7,try installing python3
f05c9962df412bc05dc755a6b9b0f3da7033af4f,force travis build
0e9f19f2aacbf01c2a8b30549cc430895d66569d,travis install requires sudo
70c33728d0106217f82a3c10b150b2418d1496cf,try again
ac05695db5a4144ce4714e1a2e8f247320c2b689,rollback travis yaml
332e2e02541cf0bd652a9e836614b431bfd17beb,and again
9d3a8e836862203ff4fcd25d992d79bc88815b96,and again
41a78338981c6691d825bc932aaea54a01ac2483,print python version
7a7480911c8ea67a35cc23ed027711af95fe3ad4,added proper visit function in ParseTreeVisitor
b2d771e01c9d07dee641c9ef79c1d9d018b64a1d,fixed bug that prevented run on nodejs
6c4e56c2e718d95e09242ff1eae2f96a657ff6d9,try 3.4 again
50cc266fedbe1896caf033d9c899af7ed514c524,and again
e5f011a9a17fd42dd2706e8c1f9b06b28cf92801,#999: Using unicode(c) instead of str(c) to avoid exception when unicode string contains high byte chars
986d00a5a0793956d73e2822a0ecf313366b261e,"missing 'new', thanks Mike"
cb75cceb9189c9df3fb3ac2b81b48776e7b438f0,and again
14ade86e097286d743c762b73d6ad1b079c87082,and again
a3c071a9790c888bd290df44a4109ead1f285e4f,and again
41f2455c394bf37131bc7f34c58d902d47b7e420,better with autoconf?
50e1512e4f826f74f8d2bd50163467823bee1da5,"ok, now locate python3.4!"
68cdaea368f75af61ecfbfb89cfdb5bc2f960c4b,now trying mono!
55fce54f4e3e9b41bee1d89546dba7e6db3377dd,reverted fix
e2554805de42075e5e0f78a173b3276829e1522f,added myself as contributor
cbd3fad083a2be44f9b9518cdb68cdfe3ea5efd6,fix maven warnings
f804d124dcdc796f8ba348009b48f23d7205c803,need PR #993 to run on TRAVIS-CI
95578de8c61fa4a81b791d827314d9e07a74330f,fix maven warning
8bf760a43785a169dd221077226bd2e8e56e1510,now try mono
6d859a5168b8c953533c46e2a7a74986386e72cd,Get compile error for failing test
f21ec5826e0ce7034dd4cc4686d9bd450d110d9f,"More info, maybe?"
2cea58868f36e9888cc41a2c64062a523e4de40e,get errors from xbuild
7743e445173a15f1c68b172f8a30157a2a213878,fix mono 3.12.1 stack overflow on ubuntu with 60k+ string concat expression
2f082e29fc4990a9f461c36de4eadaa1f4f352c2,fix mono 3.12.1 stack overflow on ubuntu with 60k+ string concat expression #2
7beb07bfc38e7fe41a48fc934840ef2f56a4b90b,SUCCESS!!!! All ANTLR targets successfully build and pass tests on travis-ci!
5c101e750ee4385dc2dbde907572bf348a4129ba,re-enable full csharp test suite
7b602e60541acb3807adb97199bc4455f4f5ba89,"Merge pull request #993 from ericvergnaud/minor-javacript-bug-fixes

was failing when ran in NodeJS"
230221a7d37c708e8b0cfcf188d4d7a246f15df6,"Merge pull request #995 from ericvergnaud/fix-maven-test-scope

Fix maven test scope"
dfe05b5f9f8c5037ecb30f4b22d6b063202cec1c,"Merge pull request #997 from krzkaczor/master

Added proper visit function in ParseTreeVisitor"
7a37322f189bb5a6f69a647b9c6a379e22c32fd5,Adding name to contributors
ca467f2d459ee1d8c0512cd39d713ca9263da188,fix merge in contrib file
3bdc4b7ee64623c5675fb16855ccdec9073e2888,Merge branch 'worsht-master'
f2877d5dfc1ee3381bf087147ea9f9984dfe15f8,Prepare for merge
417c20878778f37e9dfb99ce492850eb6dd457df,"Merge pull request #1 from antlr/master

Update to origin head"
7a031a88ead946be8f99cbeeaee9f18f060e1001,Added myself as contributor
dfced27fe82fb07ce0c10e1f3526bc26e99c79d2,Added contributors from master
a3b27766fa4a1d52ec98572950749ba561c45f2b,fix type
1b01140354307a8ef6f6697aa0f363674e40f87a,Useful information for code completion
158ef2c5678e777f038897de33ca79f58c1e262b,same fix as #1010
3e807138d56f4177df9d3e011c1c5a991760f1ae,local replica of #1010
a87ac8664bcbc8b365eda38abde0ea921e59566b,Error in case of mode conflicts with token. fixed #996
a14ba03b6e7dccba0ac08906e67590544ffc2694,"Changed error code (170), added grammar sample to description."
fce6c086d207074eff0f3be604ef5f64ade1fb95,Update doc comment in C# target base listener and visitor classes to use correct method name.
935c25b110b768d5efc2702a6f44db8d305f4d85,"Removed wildcard imports.

Fixed test with equal mode and token name."
a7a9804ecdb719741a1e5ef81ec4e3859d265f0e,"Restrict certain token, channel, mode names. fixed #1015

Clear error (can not use or declare mode with reserved name) instead of ""Serialized ATN data element out of range."" exception from #967."
78427bae798f4e171fcc416cd796211e57ac45b8,Fixed typos in comments.
84fbffdcb0d76cbe8ff87f00ab3bf7eb300b8283,Updating contributors file.
f3fcc7270d141c3614020e2f7fed7b55b9005e70,Signed contribution agreement.
2f1ea39defe48dea598a31112db4fadc329ebfd1,"Merge pull request #1019 from fedotovalex/contrib

Signed contribution agreement"
8abc1106f704cc3fcc5da96b4cd363db7a0ff8be,"Merge pull request #1012 from ericvergnaud/lexer-bug-in-javascript-runtime

Lexer bug in javascript runtime"
8f53a8e03cb9c91f9b801531d5d3c7441eccc7dd,Resolve overloaded labeled method. When left recursion is used the rule method is overloaded. When not resolved a C# compiler is generated and defaults to the parameterless method. This explicitly sets it to the parameterless method.
3ae2b34d5fcb44fbe2265f2b491e1cd91ff30eb4,Resolve unlabeled left-recursive rules method names.
8bf480dcc5c6d146b4112dd347841c1ab80db787,Fixed non-informative NullPointerException. Empty strings now not allowed. fixed #959.
9fbef85c1cfe22a1854f696fadb5658efd6bdf8b,Updated contributors list.
1ed689c31ce3ea09fb87696111f01ece16047bef,Handle left-recursion overloads by disabling ambiguous method reference warning.
0e09f8b659b54d2525c1ebe22b3bcf6daf7cb30f,Adding getTokenSource in BufferedTokenStream
e051b1a0f887104f807be7e8d7a4156ffd82e6c5,Fixing BufferedTokenStream.getTokenStream() calls
af9e8a1e92e2f036b4115211908b4d1b6ad1c323,fix #1023: getExpectedTokens() returns out of context tokens on consecutive runs
3756ae375f061d0c62ed6313ff2bb2e2ad8c2069,added myself to contributors.txt
5148e15d933378403998fb8ad8d59397a4dba778,"Merge pull request #1026 from martin-probst/master

fix #1023: getExpectedTokens() returns out of context tokens on conse…"
ce503121f593bf240365825309a50b713441dc85,resolve conflict in contributors file
2106fdc60e85c4ac639cdfcb960f4dd27ac8b649,contributors.txt signed
2e5cbc2e53144505167f986eadc7efda37f9c2de,add index of faq
f662966ab8503a3b91e739af4aaf4e2944c8d611,resolve contrib conflict
f25747d769ab8a9200d81217542deea725cdc8e5,"Merge pull request #1028 from parrt/brwml-master

Brwml master"
a2fb725bb62ecdea6ae7582658573a4d2f8271fc,resolve contrib conflict
48b7771c08c8c1eac50e3f808de41c2d60c33c26,"Merge pull request #1027 from parrt/HSorensen-javalr-fix

H sorensen javalr fix"
77aa9ff173db2515eff26189068a8d8c506aa263,adding a few sample faq files
c8e022f377e44cda92371de7492a89a9a764d1fd,adding a few sample faq files
3e79f721fb6eb874738f05e24eb39515989f4dd6,adding more faq
482d8d44fd9339d1272be6acbcc768110c7b51ef,resolve contrib conflict
4cd24f841ef4db7be43eecc9ef55038bf41da946,"Merge pull request #1029 from parrt/hkff-master

Hkff master"
7be596294829718088e0fb3aeacf8803f5a6cf00,finish adding the faq
52d45fe8428a12f130dd1255de1b6891ff374c68,add index of faq
25c8c8899cfb5ecbc85dca954b7e136887d01283,adding a few sample faq files
35bf8c48afa7289397cfecedd8428e5340bba45e,adding a few sample faq files
35dc46ef614ff993a4b1f234d585bc4cfbf427b3,adding more faq
85f453d4195b990685d1c5746b7d9f47bf354ad3,finish adding the faq
e92a0e9ed4447807770f87db8fb2c0116d7810b9,"Merge pull request #1030 from parrt/move-faq-to-repo

Move faq to repo"
8aac8e7157ad3f44bcfec886e5fd6e2ecded16a4,Merge branch 'master' into move-doc-to-repo
78fde76fc5a08905dbb77781ece0dba7b2cfece0,first doc commit
66c0aeb93c7d33b0a24615ae6b308611ef356623,first doc commit
8e286bb372d3688d116891876db0fdd84600577c,first doc commit
84c283c3a9fe380f339e98f6e51e8c676181a64d,"Update TestRig.java

The help and error message from the TestRig program refers to the old `runtime.misc` instead of the new `gui` package:
```
java org.antlr.v4.runtime.misc.TestRig GrammarName startRuleName
  [-tokens] [-tree] [-gui] [-ps file.ps] [-encoding encodingname]
  [-trace] [-diagnostics] [-SLL]
  [input-filename(s)]
Use startRuleName='tokens' if GrammarName is a lexer grammar.
Omitting input-filename makes rig read from stdin.
```"
d692e1f0d90c12e891c48a734d54521ea29bb962,Fixed @sharwell remarks: typos and etc.
7be6ff56a7b69e006993ea1018d3c9d1810f40b4,getting antlr build doc in
b2db71a97ee7263aa45aa34f7c08bf44523ecf4a,got doc in on adding tests
2401e9688d271fa81e490701b62ff0a63c2569ad,add lexicon
4aa9a6d2371428faefc7547903fb9594ad0070ba,add grammars
4d3e50844cb030b640654f894d351e05e2e31711,fix grammars
147b7eb4ef55e49a25a0bc663d4698ec33076fa0,fix grammars
dcbe2ae806d6367dc20fddb9d60758b9abdd092e,"TreeViewer: Fix NPE

The `selectedTree.getSelectionPath()` return null if nothing is selected.
Added check to avoid NPE:
```java
Exception in thread ""AWT-EventQueue-0"" java.lang.NullPointerException
	at org.antlr.v4.gui.TreeViewer$4.valueChanged(TreeViewer.java:376)
	at javax.swing.JTree.fireValueChanged(JTree.java:2921)
	at javax.swing.JTree$TreeSelectionRedirector.valueChanged(JTree.java:3382)
	at javax.swing.tree.DefaultTreeSelectionModel.fireValueChanged(DefaultTreeSelectionModel.java:635)
	at javax.swing.tree.DefaultTreeSelectionModel.notifyPathChange(DefaultTreeSelectionModel.java:1093)
	at javax.swing.tree.DefaultTreeSelectionModel.removeSelectionPaths(DefaultTreeSelectionModel.java:502)
	at javax.swing.JTree.removeDescendantSelectedPaths(JTree.java:3714)
	at javax.swing.JTree.setExpandedState(JTree.java:3597)
	at javax.swing.JTree.collapsePath(JTree.java:2231)
	at javax.swing.plaf.basic.BasicTreeUI.toggleExpandState(BasicTreeUI.java:2297)
	at javax.swing.plaf.basic.BasicTreeUI.handleExpandControlClick(BasicTreeUI.java:2273)
	at javax.swing.plaf.basic.BasicTreeUI.checkForClickInExpandControl(BasicTreeUI.java:2231)
	at javax.swing.plaf.basic.BasicTreeUI$Handler.handleSelection(BasicTreeUI.java:3600)
	at javax.swing.plaf.basic.BasicTreeUI$Handler.mousePressed(BasicTreeUI.java:3548)
	at java.awt.Component.processMouseEvent(Component.java:6524)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3321)
	at java.awt.Component.processEvent(Component.java:6292)
	at java.awt.Container.processEvent(Container.java:2234)
	at java.awt.Component.dispatchEventImpl(Component.java:4883)
	at java.awt.Container.dispatchEventImpl(Container.java:2292)
	at java.awt.Component.dispatchEvent(Component.java:4705)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4898)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4530)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4462)
	at java.awt.Container.dispatchEventImpl(Container.java:2278)
	at java.awt.Window.dispatchEventImpl(Window.java:2739)
	at java.awt.Component.dispatchEvent(Component.java:4705)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:746)
	at java.awt.EventQueue.access$400(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:697)
	at java.awt.EventQueue$3.run(EventQueue.java:691)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:719)
	at java.awt.EventQueue$4.run(EventQueue.java:717)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:716)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
```"
d6a075b843f4d8386a03e00c47f990f17ffc9eb3,mid-addition of parser rules
1232e1bed1e0fcf6625fab9014e6e63a14a77158,table messed up
3b00c09088851077f3154f4d395ebd06bfbc02db,parser rules doc in
9b682b69b7443730979876e3c7c892e6785d96d7,add to index
fcffaca6bf5203eca850bd80b867e462f5b4fc42,fix index
a441b297af9db153a17ffea561b95611ae4be536,"fix javadoc arg in pom, update javadoc instructions"
edc04740baac41e7a80bb41eafdcb088bad69d5f,add more doc
12e25a2ad79f2b232b0c2d2970d386ad1642be36,add lexer rule doc
fd2166984a9ae0ab1b7eb6454cee1144656c849f,add fuzzy doc
98abfc14f35359da6cc1c15d362981bed14917f6,Update GitHub references in npm package
bd4200bb89f069b4cfb04a2d3fb64c102b706cba,"Merge pull request #1040 from ericvergnaud/update-javascript-package

Update GitHub references in npm package"
99f818b5299e20d93de320d26fc844ca3917ea3f,"Merge pull request #1032 from HSorensen/patch-2

TreeViewer: Fix NPE"
c77c2a39e9d6048c55dde540f2ee598b58c768ba,"Merge pull request #1031 from HSorensen/patch-1

Update TestRig.java help text with correct package name"
3abca793af54d76a516429274887237a4231d2d7,Add cooperra to contributors.txt
f6920d87ed63061b105ac9ded34338cf5330cfbb,add more doc
b48c86cc3018d7e182ed51f86159b3c728a1342f,Use correct sync method in C# codegen
42cb08f46a4647dadf2d044ed151e4dcf4ff4762,Add proper qualifiers to the JS and Python errHandler calls
a71ffbe8bc4722f00263775c65d1bc8e7d7bdf8e,"Extra 'null' check in TestRig#process

After loading and casting the parserClass in TestRig#process using
`cl.loadClass(parserName).asSubclass(Parser.class)` there is a check if
the class returned by `#asSubclass` is not null:

```
parserClass = cl.loadClass(parserName).asSubclass(Parser.class);
if ( parserClass==null ) {
	System.err.println(""Can't load ""+parserName);
}
```

The method `#asSubclass` will never return `null`, but throw an
`ClassCastException` when the cast is not valid, therefore the check
can be removed.

See also: [TestRig#process Documentation](http://docs.oracle.com/javase/6/docs/api/java/lang/Class.html#asSubclass(java.lang.Class\))"
3fa8cfe29e753c4fb91f7209c9af82bc096329d2,add more doc
05b50325a84a81879933e41c92e66cc72f207cdc,"Merge pull request #991 from michaelpj/sync-before-predict

Reinstitute `sync` calls before `adaptivePredict`"
586bcd2368357405ffdf6aba766f9be8d3e02438,Merge branch 'master' of github.com:parrt/antlr4 into move-doc-to-repo
73f042139cb844c61480a03eb3fe6790e190de15,add more doc
1c3b4515ea0673cfb2a9ccb0af0a3ecaa4d594a7,add more doc
e1073410f8dc267bf01318d5da187e96670b5b54,more doc
5aa8b294536c2d3e1b7f5cbcb07d4d4cfdc08356,add more doc
292dce4f6d22d9de62b43636e96eee6a9a6f2d25,add more doc
37269920713cd254d1222d34d1ef4b3091f809d0,"Merge pull request #1051 from parrt/move-doc-to-repo

Move doc to repo from wiki."
8a4aa39de23b8d55bbc1df02672f601f93fbbe5a,fix links
15f69d6697c3f8a44fff3c44137f54b41e6687dd,this->self.
8d6203450db15dc6f5d7f1fe87234637037cae0a,"Merge pull request #1052 from parrt/master

this->self."
0857dc40f30efd81ec3d11b26922a25149bc2929,Doc: more details on remotes `origin` and `upstream` in local Git repo
10edd9a243c7115e6c79b91b0d50020364df670e,"Possible NullPointerException in ActionTranslater#translateActionChunk

The parameter `RuleFunction rf` in `ActionTranslater#translateActionChunk` may be `null`.

The method's implementation takes care of this by checking `rf` before making its `ruleCtx` the translator's nodeContext:

```
if ( rf!=null ) translator.nodeContext = rf.ruleCtx;
```

However in the statement following this code the check for `rf!=null` is missing. This will lead to a `NullPointerException` when  `altLabel` is defined and `rf` is `null`:

```
if ( altLabel!=null ) translator.nodeContext = rf.altLabelCtxs.get(altLabel);
```

To avoid the problem only access `rf.altLabelCtxs` when `rf` is not null:

```
if ( rf!=null ) {
    translator.nodeContext = rf.ruleCtx;
    if ( altLabel!=null ) translator.nodeContext = rf.altLabelCtxs.get(altLabel);
}
```"
b9b1afe90292f1345ab50cbccaca35402de6d025,"sign ""contributors.txt"" file"
bd947c90a66be7a2ef30c461ed9602f213658680,"Merge pull request #1055 from abego/patch-5

sign ""contributors.txt"" file"
6da877e895483c30437ffbe5cea9f67da3acb880,"Merge pull request #1053 from abego/patch-3

Doc: more details on remotes `origin` and `upstream` in local Git repo"
36d8d41def98121dbaff7a03fe4dd487d17007cd,"Merge pull request #1046 from abego/extraNullCheckInTestRig

Extra 'null' check in TestRig#process"
6068a4a2c78211ff497f60f1509e10f0fba1346e,"Merge pull request #1054 from abego/patch-4

Possible NullPointerException in ActionTranslater#translateActionChunk"
e7ba4967bc9d5e585404d1a0f188acccf417d3f7,tweak doc
a072f59a87bc4b7e341d4b7ef7bd18ef10d9c67e,Merge branch 'master' of github.com:antlr/antlr4
99563b116e6c335220efd7356fc4f6f3384cf53c,merging KvanTTT changes.
1438ab817f860155cd4f795ddb41bb3e99611905,why oh why does intellij skip changes when i push?
01e6923dbd1c3cc37925459b491d9ad93eeb4ca6,"Merge pull request #1059 from parrt/KvanTTT-master

Kvan ttt master"
c651c83a8b98131a585d3062a7877cd589376e10,fix #1058
447452755ece48ab07a98bf826aa5e162cf3e7be,First commit of go runtime
2c36445ac3d9364131988117bed5e54524ca8800,Stub out stg file
acbce59a8981cdbc1cd60b93d60cedff5b67fadd,Rename file
9f9cd374b4f06a0e1b8d19cd2db86ebf8accfe1e,Add GoTarget
5d046e256b192f7e3f80063244e28dda518ecf16,First steps on converting tool template to Go
e99caf1861624e49a649ccbc7276a51ebaa62452,Prototype arithmetic grammar
e0db3f55bcef0dba7439668efd1dc1d9984fc550,"Mass removal of semicolons, more type conversion work"
eac3d7d6657570ca1893f5eaad850b92b6283dd8,More work on parser template file
e19f0e85642937901887e07fae79031e2a808f32,More adjustments to code generation tool
625ff2ee5533979531a50267b953d5b4a4da795a,A few fixes
7419ca68403b62a525d44a4b9330f27324c39675,More tweaks
f044fc50480ec96fc2b380f6c5c05abb04a85785,Parser template starting to look pretty good
e7e1138e5bf8ef3ceb0082f3f40ec34c38f99186,Started to work on Lexer.go
7d07d7514e35f2af6b3dafc0f584621ed2686322,First pass on token stream types
d3d82b920a2c7a182f0d8e5365051ace6ab0391b,More work up to LL1Analyzer
8a00cbd485b361277c2fedfb29cd9d2a0f37d0b0,null -> nil
f12eaef24ffc1b73097afd81d3d9c35b5c32931f,!== -> !=
fc75fbfab05b7bb3f0b5ffa6ff11bf73e45affd8,new -> New
729f30768af4de35e9e7edf4feaba39d447b9afe,Mass refectoring of const variables
a8da94cb2ea3b5933674ae891095dac4d9e4a125,More const refactorings
02d9013ea1dd954f80f13eb3cfbdbf19fadc47ee,Comment out all require statements and prototype tomfoolery
ac5e4d9b442349bdd96859e07fd42d69c47cb67f,Mass fix for for loops
1ac3d2701abaffb0c05550de3e0718b2409831e1,Mass fixes for toString
dc5cf284ed814c6546ac1f9a66b3d2b38b09d10d,while -> for
15aa407757b9f98475cf2e33a25f272a00ccf04c,Banish instanceof to hell
fd61f71cb973a5885d089870ce72e7e05ad51f0a,"More, more types"
797dd823be99d96a8d1061efec39cd35bca8ca55,"Fix mistake in tokenIndex bounds check

undefined < anyInteger 

returns false"
704a507fac545a76537f0726be89866e834af042,"More, more, more types"
ca20ec3cae0e8d2b212c37fe4cfb2ecbfaf214d4,"AltDict, DoubleDict"
350a39cef393b011a01ff192faf4718015c1ba7b,Various type fixes
3876cc600a9aac1660939374bfd15ebdbf22620a,"Fixing typos in listeners.md

- ParserRuleContext does not have type parameters
- Confusing sentence cleaned up a little"
f9ef62e7b8137a9563966c8b7554a66db7b7d7ce,"RuleContext, Token, Utils"
2aad0fde60c27c3f68cee2460ee4c4ff748aca6c,Banish undefined to nil
2cd064a94e80f684eed28559df314b4462f7784c,More work on error
a631e3007afae7145cd4ba10a1e62dd192c0ece1,"Signed to contributors.txt
- Also implemented sharwell's suggested changes of originally pull request"
ac3d78554cd399a3a03811cddfdef2c90e553aed,"Merge pull request #1067 from sebadur/patch-1

Fixing typos in listeners.md"
42e05d7147e072211397d60e4cac2649f580ece6,"Fix FileStream, InputStream"
cc2c5eca2fd5d2cbe477634f1b9d351cfce47a80,Complete work on PredictionContext
3b69b21834bf4a1965808cc7961f9b692059d940,Numerous minor fixes
e96e55e66d007919010345aec7e2323e0e41d4aa,Ported Transitions
5ef465e8e2eea395e1376b086eb8255ad753c6ec,Ported ATNStates
f85f5d0c14ed5a2821ace43e19ceb2549c4b6a31,PredictionMode
4ea8768751b98ceb4eadb092aadb63245577d9a4,SimState
5d0b4dfa09e0b139dd20e9224247b52ffc2449b8,Move files into one directory
40890f2122bc287ac2f847d69ef31c8880cd2ed7,More work on ATN code
54206cd8537d177801d989444f48395ab3dd3104,Errors
2a4de9bbf9e6c9d7ebee75234efb87508c042e1f,"DFASerializer, DiagnosticErrorListener"
c83d8fb109585b7003b96bd8f0fcbf58e3cd7a4e,Numerous small fixes
db3eb7edcb936c1073d7df22451510013fa432db,LexerAction
f3db2d9637bd70413406c50043d8f227a45a9ed3,LexerActionExecutor
d158f513ab1416128cff4993bd98796e7ac8c47f,SemanticContext
2762fe83b3869a23a58fffd4c8a09aeae985aea7,Trees
c1f473e6ef91812a7ea6656dde18d7cd8358dc6e,Stubbed out test suite
aa6cedaade9cf8de08464b5cbc82793074ef7b1f,PredictionMode
cd2466a9d9c4f02cc51efb6f0743799dba9fea42,ParserATNSimulator
b0720b2f131cdad10d0232734d4de7eb928421cd,LexerATNSimulator type annotations
68ca3b77c807f8dd744d4ec5db2b5e4402e78992,A bit more work on LexerATNSimulator
56589c8029d91e4189a9831061a97e6b57aefadd,Woops
2df791a2661e0b4e0ba8e247d7e9680ee7119854,LexerATNSimulator
7c812fb3209062aece0888ba78cd370d8d6068aa,"Various minor fixes, update of runtime-testsuite for go"
4441b6f6731ae9ec4affac5f2047891305af5aa7,fix numerous compiler errors
ab8e52fb6a5b0ceb002ca4254833a2b924cdc0a8,more compiler errors
39a204325418727d9214542c1dfedff21dccaac1,"more, more compiler errors"
9f6ea082e85bb475f2a7066dcda4cdc69300e43a,antlr4 compiles YAYAYAYAYA
859df5231c8e75e71e08eb4015d931dc2bff3f36,And now all of the changes are commmitted
bd35305bc847ce8748e5907660e9af5c166812a3,gofmt all files
d6b1041224ea7ca182dda27812b4681408fb416b,Minor tweaks to template
ff70876ae8fd52bb7adf3f976648e1dfdc525fd8,Minor tweaks to template
f5cf1cbf688d36b82501db32f80b0bde31ec9d63,Various refactorings to properly support package export
78cf0048a5eeae0f8399c651393a21bba4d47289,More exporting
d1f4d3171fa8b289f31aaa2728352ba67779c544,"More refactoring to inject GrammarFileName, LiteralNames..."
6a7cae8ea91f31c021a34f352794324a4654cf22,Update contributors.txt
8eaea9105d048546f9d2a81eef681459df3de193,Fix merge conflict in contributors
a2e273c5f6c1d23a08b5396fa00e0f87cc57a814,Stub out runtime-testsuite test generator
0455e0a09f3a060544481355c87cc9d443139fc4,JS: Fix missing 'requires' statements
f40ce5a18861e25c0299dd466cec59ef77e9cfff,"JS: LL1Analyzer passing PredictionContext incorrectly to ATNConfig constructor

The PredictionContext should be passed to the ATNConfig constructor
in the first argument, the params object. Instead, it is being passed
as the second argument which is intended to be the config."
812794600de77ad54cc2beb4fed5844d59514da3,"JS: LexerActionExecutor cached hash string name clashes with function

LexerActionExecutor caches its hash string in a member called
'hashString'. However, the class also has a method with the
same name which leads to unexpected results.

The member has been renamed to '_hashString' to avoid the name
clash."
f77a8c913944b34d2a084159a371f0f9061cd4e5,Sign contributors list
4a1ec7df3828d2415680dfb6766c79caa3b449bb,"Remove Utils#waitForClose()

It is used nowhere but imports java.awt.*; Android runtime
has no java.awt.* so Android SDK build tools say ""it includes
invalid packages"". It's better if antlr4-runtime has no dependency
on java.awt.*, esp. it is not used anymore."
a1c63234e10c616b5437d23df7b2de882f3604ff,JS: Added 'require' statements are missing the class names
36ae2795f88bc05ac7eafbbdcc45eda7770500ca,Everything compiles and gens properly for Arithmetic example
694096d51787247a68433819e5c9f81058ae2d32,Init stuff correctly
8cba3ecc3a79af462c666f3ce38dadab60a1be55,Repair init methods
ce20f3ff3162357d4670ae044d8546a4af75df68,More cleanup to ensure embedded fields are initialized
1dfc764df7b580c22063d0da28543be6f2de12a3,Fix issues found while debugging 1
d239a6aa0e1ff1134f4b697cb31aa36274dcf8e8,"Fix a few things, add some debug code to js runtime"
aefd7c751d5cd6c842e83a4aab4144ec609f6621,Impl for toString
e6a0cce6db6273c8e753dd448601cdd70de4ae3d,Time to find more bugs
a2e6ee75706fff1d13078fdbc0dc211458f67013,Minor fixes
4ffb3f81b61d3d70314e7a08f5399e59685fa9fe,More minor fixes
c08a19233c63ba9645102e049309bf1f00cc0d49,More bug fixing and debugging
56e6e6c26f76a7558ff3e2d04e63d744fd14d280,More debugging
7798333f725cf61b8dd428c841eac1081d2428fa,More bugs
efa8676211f8a655eca0c72eead1093d7514ee73,Go impl emits exact same debug messages as JS impl. Yessss....
89427b7f4510745e58c188d16eef407fef410e9c,Allow disabling debug statements
0726f4c2bb9fd1c59ea52cceb8172208dffaecc4,Some refactoring and cleanup
ddb296cf01b17c857e64290c5f52cd50850dd202,More refactoring and cleanup
39c1321d40ea51be26c8f66ecba5f0e3c7512fb4,"More, more refactoring cleanup"
805f706f023084fa8bd38ecee1abc9490fc24323,go fmt the whole project
c432ce8889dc2782d7bc0fcb480fe1f6010f522f,Update ace-javascript-target.md
cceda58ed69316ceac9f23393b9b93cbf1be49c0,One  more
6bb241952a793587de8c132c3690e14766dc6445,Update ace-javascript-target.md
fa46c498affee1608fbf952d576c7cf9a554e314,"Export some additional interface methods, fix issues with ParseTreeWalker, generate base Listener with tool"
ddd706baf227e99248c9971e40fb6b3ad10804a9,Fix issue printing tokens from IntervalSet
b1ae693913831a9b0329a7fa5c8724af2286814e,Comment out dead code
f2852686a74c1fa274c6dcdde99f42a6badad606,Some of the runtime-testsuite tests now pass
977a1c3ae786642b6eb1907af805cc15daedc204,Fix issue with tests
960c59e3739d3d2819250d06179be31819e21fa5,Fix more issues in code generation
81b47eedd72ff234581fae0754f6e799aecf54f1,Various minor fixes
21999adb6eb34b1a12acba4eb149fbe6386485bc,Fix a bunch of compiler errors in Go runtime-testsuite
096f26d3ae2c6c8cb8326fba38193a8129b3b7d7,Minor fixes for left recursive rules
b53e85afd256c61bf5a8a38c535359834dc77bd9,Fix issue with code gen
857600be43fd5f7d7d2ebaf5082278c8038b80c5,Numerous test fixes
7473c21b1ebaaf0c2faed5698f6bf6fd196bdd8c,Even more test fixes yayaya
260ccd056b3e2871199ef7c5ae4e74123beb9231,Fixed a minor bug in Go runtime
20e3b385ab58c8b199d5133dba2f1acff34cf044,Some cleanup
7fc028409e369d28d43c9636c748baffa60bec63,Fix some more tests
8954c1a072cb69fbea1d049862141a5123affa0d,Delete testing code
da94e5295ed72a701837fa5e482e435d9e7c7616,Fix some tests
c8b73c99ea6bd249e0526524e894a2bef914421a,Fix issue where recovering tests returned nil by using named return value
8835b534f3d795641208923d799325c35efc2b82,Stub to prevent error with go get
7d478b18ae373cd43789593766effd5b116b2dea,Only run the maven plugin when needed.
8f70a6f553b9043c94fc9127f3e35ccaa29dfb85,Fix test and GetRuleInvocationStack
9c6e212bc994b0f3fb8adef00abab329ad786d68,Update creating-a-language-target.md
86d65cf7194cd43db55298a4707b38bac4603ea6,Fix lexer test failures
92b8f9f8911bd3c8662e84ff76257874f0aaa325,Various test fixes
89f1192cb64ad04c8b0992673683b437b18ecb19,"Fixes to Go runtime, tool"
f870566b258016b9a2c1c578c6c843eea685a58b,"Merge pull request #1085 from gfx/remove_awt_deps

Remove unused Utils#waitForClose() in antlr4-runtime"
5299d436aa78bf25192be8828a8ff7c9f153ac21,"Merge branch 'patch-1' of git://github.com/cooperra/antlr4 into cooperra-patch-1

# Conflicts:
#	contributors.txt"
3a733af5f7c011ba750822b2ead40fc4b9de25e9,"Merge branch 'patch-1' of git://github.com/cooperra/antlr4 into cooperra-patch-1

# Conflicts:
#	contributors.txt"
7b517f046ae46787035e75a04a810b83b109d1c5,Merge branch 'cooperra-patch-1'
7e6af55245db6fb95811be2cb400a165cbe2d5c9,Merge branch 'master' of github.com:antlr/antlr4
80b7d5a25cee9b89a1abeea1b4eece4b77a3f909,"Merge pull request #1099 from parrt/master

fix python bug"
49cc92aa35abbbe0276330aa8139c5c09964905c,"Merge pull request #1060 from ericvergnaud/missing-js-visitor-methods

fix #1058"
34787c0fd820055ede8e7c1be27d407ef192dec2,Merge branch 'patch-1' of git://github.com/cooperra/antlr4 into cooperra-patch-1  Fixes #1081
ca5f65c73168ce54e49c0450a73f58335fb5a60f,Merge branch 'patch-1' of git://github.com/cooperra/antlr4 into cooperra-patch-1  Fixes #1081
cfa017417255b6ea67fa8c240060b326e66367c4,Merge branch 'pboyer-patch-1'
121aba1bb87c4ba987ea37e08f1b32ebbb6049e9,pull in contrib
c0ebb3c23021e869cf6f57238c0359b9450b3e43,Merge branch 'dtymon-add-contrib'
da27381fc127403a23a0655090ddff3889d39699,"Merge pull request #1083 from dtymon/02_ll1analyzer-incorrect_atnconfig_ctor

JS: LL1Analyzer passing PredictionContext incorrectly to ATNConfig ctor"
9a053d63b1a89c351b9c010ead11017e004a9c71,"Merge pull request #1084 from dtymon/03_lexerActionExecutor_hash_string_clash

JS: LexerActionExecutor cached hash string name clashes with function"
2b9f5de4a912bb98ab84b92965303312ee836d18,"Merge pull request #1090 from pboyer/patch-3

Minor cleanup to docs/ace-javascript-target.md"
664d77842b9325960b38d331a2b97dc0e0300c18,"Merge pull request #1094 from Pursuit92/master

Only run the maven plugin when needed."
8fbf46b2f2bf4446197346d00c50f421634636bd,why oh why does intellij skip changes when i push?
7b4e5082e6346de650fba90dc7c358fbdc5b7245,tweak contrib
c15e159c8f3af0dcd7cfeee9079eb45e90af6d91,Merge branch 'dtymon-01_fix-missing-requires'
b2ee7fe5328e12ecf34a025e8497ab0e0cff0679,Allow customization of output file names from tool
e891d55f1b75f9bc93249f5e6de73cfc3e75db30,Cleanup
2d9f2b574b713f5b5d52430db8c48d76687f0bf6,add travis status
b446c50722e389b03fd7e5baea80b371a9717584,[maven-release-plugin] prepare release 4.5.2
6b3f9816cb7c8064fc398720769f4eb067296ac3,[maven-release-plugin] prepare for next development iteration
6b31ceaa9dc04912a456746c964f35b23d38d97f,[maven-release-plugin] rollback the release of 4.5.2
009f3cac3a1c5d615f00f534d0b5855717a98386,[maven-release-plugin] prepare release 4.5.2
fa6f674e33dbeeb3b33cb3abd877bebc9e6e5d5d,[maven-release-plugin] rollback the release of 4.5.2
c5a296596d78d15c452d4cac700916a0e4208ce6,[maven-release-plugin] prepare release 4.5.2
08f3ad798e245f334778a6ce232daae232e38a9b,[maven-release-plugin] prepare for next development iteration
29a875dccee11f160695d511b55a3adeec3420c6,tweak release doc
c92ddcbd06fd0298084f29026996c857e80c219b,update version to 4.5.2 in source / packaging stuff.
a0204f25fdaf19c8225e416463d9099cb5693e65,update doc
dcca95d4f0e7d6539b0dff21184e34a09829e46e,[maven-release-plugin] prepare release 4.5.2
184f71175366775ae9471dd6dea9921e1d14e4ea,[maven-release-plugin] prepare for next development iteration
b10827d91cd3ced11254c8e08c6f004abf1eca6f,Cleanup
1ccaad7ae15f3ae8086df964871e91f99d00589f,Fix incorrect assignment of stop token
7a59e92b8d86e3aa29a3897e03551a323c03c959,latest version of honey-require
b0196bc86e1fb41e6f5064b4738dd52900653afc,fixes #1108
7b4e85b11ae98b4f7b124c66f376223a75cfbbec,Merge branch 'master' of github.com:parrt/antlr4
ae8ea836fc8ca02a0bd6f6811f73f9f043d043b7,reopen PR #1081
832903a281192d8a97b08b827f81b05704774ede,"Merge pull request #1110 from parrt/pull-1081

reopen and fix PR #1081"
2d748d6e64c72cf10c55892eff7df104fe063dc8,latest version of honey-require
8b081a4637c23eeb1fdf0086922dd8f760d51ed4,fixes #1108
d0fb48c2b89128158950f4b32a61d50d52d981ea,"Merge pull request #1103 from ericvergnaud/master

latest version of honey-require"
4bb2779c43dcea123563eaf93502f0a2ea6e6475,Merge branch 'master' of https://github.com/antlr/antlr4
1fa0be9782eea7e780e3f0500f50a679d8cad2a0,Fixes Markdown table in targets.md
99b2d6616ff03d3b0e4751880ff652dd6641c586,added missing del keyword to Python targets
b1b257962147c71fc9a5b5cd336105803ffa4175,Add tests for alternative precedence in left-recursive transformation
59676745319b864fe3b8fd61710e730e760f5afd,"Track 'prefix' and 'other' alternatives together

These alternatives are not treated differently after they are created,
and we want to retain their alternative ordering."
1cec262cee4958b55812e05f385a6dadb31af9d3,Merge branch 'master' into feature/templates
72d6e3b400487dbed406857ba9fd22a6bee450e4,Add current C++ target runtime from antlr4cpp (Dan McLaughlin).
d0d7d23d6c2ee87a648392c82d6fab950ceab622,Removed binary build file from Visual Studio solution from repo.
fc1ae35963239f1e470edaef8d7ed1833a12dd0a,"Some fixes for readme.

Added myself there too."
fcdff98aa64596d5780669f5015b78245a1ae96f,Added my homepage to readme.
e6b4ea736dad6baf8a86700fe871338ef3694d43,"Moved CppTarget.java to the target subfolder where the other targets are.

Corrected .gitignore which excluded target folders too generously."
a524ca3232ca9df10b5f55419c0eb487b6fefba2,Corrected package and some imports in CppTarget.java.
eef470a707cb0ba19f9454efb1c6303a9f9836d0,Format feature parity table as markdown table
e3e3f2bca08b8cc8428884244f793d91351f4f45,"Set stop token in postamble

This ensures that the stop token has been set before the @after action gets
executed."
29ee73bd0aafe4f362c77db78538302b9541938f,"Separated top level file rules into an on ST group file.
Started formatting output and adding std::shared_ptr<> where needed."
ad6885eb752ed79dac07deb994fc844acf69c95e,"Merge pull request #1 from mike-lischke/master

Catch up to Mike's fork."
5eb58a7adb49a4114c878ea6b98f1acf7fc70e47,"Merge pull request #2 from mike-lischke/feature/templates

Feature/templates"
0262aac8f6ef2a65efd724448c9adae76c6d4ade,"JS: LexerActionExecutor equals() should do deep comparison of Actions array

- according to the corresponding Java implementation, the equals()
  method for LexerActionExecutor should be doing an equals() test
  on each of the actions rather than testing the Array reference
  is equal."
0dbb12ad1ac8e9b453121ba2796ed91df5fae001,"JS: Fix copy-and-paste error in OR SemanticContext toString() method

- the OR toString() method was incorrectly added to the AND prototype"
5e176e405f854ed29cbd5c5fa1628f8d821d89d1,"JS: SemanticPredicate should be SemanticContext

AND.evalPrecedence() method is attempting to invoke a method on a
non-existent class ""SemanticPredicate"". It should be using
""SemanticContext"" instead."
eb5af71a301fb6a388296cb2a00ceec82cf0429b,"JS: ATNConfig can incorrectly change ""alt"" of 0 to null

When an ATNConfig instance is created with an alt of 0, it is
possible for it to be incorrectly changed to null due to its
""falsey"" nature."
7e09002ebce45dc8c2bedc99dee5dac55bac9092,"First working version of a demo app that uses the new C++ target.

- Created a new command line target in the XCode project. Win + Linux yet outstanding.
- Reorganized the C++ runtime folder structure a bit
  * Put everything in a new folder ""runtime""
  * Added a ""demo"" folder for the demo grammar + app
  * Renamed Apple folder to Mac in demo folder
  * Added a script with some descriptions to run parser regeneration (via jar or classes). This is also used in the XCode project to regenerate the files.
  * Moved all C++ runtime files up in the folder hierarchy. No need to mimic the deep nesting from Java.
- Some adjustments here and there in the C++ runtime for consistency.
- Overhaul of the Cpp.stg file to produce compilable code. Extracted file level templates into a new template Files.stg. Experimented with new named actions (@parser::listenerheader) but the result is not satisfying yet. Need to investigate more.
- Extended ANTLR to produce header files if a target class returns true in the new function needsHeader().
- Added generated folder from demo to .gitignore
- Added myself to contributors file + maven xml."
815856bdf0410be1a101630b87247256f373a850,"Initial demo app setup + backend changes.

- The demo now uses a real setup to parse something and print output.
- Replaced empty UUID implementation by the guid implementation from Graeme Hill. Fixed uuid handling in a few places.
- Removed some obsolete (and mostly empty) lib files.
- Mac: the XCode project now does regenerate the files only after a grammar change, not always.
- Simplified ATNDeserializer + ATNSerializer and fixed a few things there (e.g. feature determination, duplicate copy op of the input).
- Removed some deprecated functions from ATNSimulator.h
- Fixed some bugs (e.g. uninitialized vars + leaks).
- Corrected a mistake I did in CppTarget which lead to wrong serialized ATN output.
- Cpp template:
  - Added proper static init code generation for Lexer + Parser classes.
  - Added some missing functions."
1672bc073983b7f4281ea7e2fab19406a3b29a2d,"Added all changes done so far. Since we are here on a very old revision I cannot simply merge, so all files have manually been copied and we have no history for these changes."
11571fa092616d4cb75ee68df23709547b68a4fd,A few more adjustments to make the merged changes work with this revision of antlr.
fec65477d89e7375a5db1ebb88acb3d1df36a8b7,"ATN deserialization + some initialization and memory leak fixes

- ATN deserialization finally works.
- Changed a number of pointer to STL classes to just the STL classes and pass them around by const & where necessary."
6df5d025bf66739cf6ca6637f9f17b4fce8fe604,"Complete formatting overhaul.

- Reformatted every single file to have a consistent indentation style using only space chars, with 2 chars per indentation. Reduced huge indentation due to deep namespace nesting by not indenting namespaces.
- Reduced #include usage to a minimum.
- Made copyright header the first entry in all files.
- Moved the previously mac-only prefix file (antlrcpp-Prefix.h) to the runtime. It can now be used by all platforms and includes all necessary standard headers.
- Removed a number of unused files."
9006d241fa48a72517ccd49828fc971ec4b5baeb,"Introduced the Any class (based on some public domain code).

The Any class is loosly modelled after boost::Any and allows us to use equals() and hashCode() functions to be used where we have no common base class (like Java's Object class). By introducing this class we can replace all void* occurances that would otherwise not work."
2aa40c779efa90c74a9bb3c3ff4f9aad6335eec4,"Removed the need for a separate VectorHelper class + other improvements.

Some cleanup too."
e97820a27e62fcb79462d76105ef535eca8dd000,"Reworked handling of ATN instances throught the code + definition of IRecognizer.

ATNs are top level structures, which are created and kept by parser/lexer classes (or their simulator equivalents). Hence there are now value types in their controlling class and passed around as const &.

IRecognizer was a template class without real need, which has been changed to make it a simple interface easily usable without having to find C++ hacks for fancy Java wildcard generics."
93b1fa53b450f9f55f6ef8191cc566a1037e69a5,"Fixing Issue #1148, Python Target Generates Invalid Code With Rule Named 'Return'"
bc81acba06d818ed7821f596b95189157f8ee800,"An attempt to cut the Gordian knot called Java generics, in C++.

- Reworked the ATNConfigSet + the config lookup implementation it uses. The new implementation no longer needs the hand written Array2DHashSet class but instead relies now on std::unordered_set with custom hasher and comparer classes.
- Fixed a bug where the ATNConfigSet was deriving from std::set while in the original Java code it only implements the Set interface (not the config set itself is a set but the config lookup is). As a consequence all iterations over ATNConfigSet now iterate over ATNConfigSet->configLookup.
- Removed the Any class as it didn't solve the problems we had mind.
- Removed the no longer necessary Array2DHashSet, AbstractEqualityComparer and ObjectEqualityComparer classes.
- Instead there is a new ConfigLookup implementation with a templated config lookup implementation.
- Removed ATNConfig::equals, as this is already implement in the == operator overloading. So the operator is used instead where needed."
3f7836745771edacd34d93adfd1727f8ed6e9948,"Next overhaul

- Added first real unit test set and enable code coverage collection in XCode (for ANTLRInputStream).
- Reworked ANTLRFileStream::load, which is now more flexible (supports Unicode BOM + 3 possible encodings), can load from Unicode file names and has almost no platform code.
- Enabled strict data size and sign checks in XCode (clang) and fixed a million places...
- Started converting int to size_t where it makes more sense.
- Started working on const correctness.
- Fixed a ton of memory leaks.
- The ATN and ATNConfigSet classes now entirely work as value types. Same for Interval(Set). These seem to be the most critical data structures (ATNConfig + ATNState are pending).
- The abstract IntSet class is gone now.
- Murmur hash code now works with size_t instead of int (need to add unit tests for that).
- Fixed a number of TODOs and other smaller things.

- The Cpp template now properly handles grammar rule return values."
ba64a1e001096b0b37bb454e2204b477bc365b2f,documentation typos
baef9b0b3296cec8ff084183c300d23068aa4873,"New unit tests for Interval + MurmurHash.

While testing Interval() and Interval::of() I found that the latter is twice as slow as the normal object creation. Seems caching single element intervals doesn't have the same impact as in Java (quite the opposite), so I removed Interval::off and the interval cache.

The MurmurHash implementation was actually for a 32bit platform, so I added a 64 bit version too (stripped down from 128 bit MurmurHash3). Tests cannot directly check the correctness of the algorithm, but duplicate checks over 300K hashs (for short input, which is more prone to duplicates than longer input) showed there are no duplicates. So I take it that the code is good.

Fixed a hash creation bug in PredictionContext.cpp."
67c0ff5d78ebd8a2d4cd9a8957d5f671c70b9cde,"Merge pull request #1151 from beardlybread/master

documentation typos"
fa10ca678f357e49100fa8e7461887825e7e8470,add method to RuleContext
6ca812e255beb09713f621460018e8fb8f8254c8,Add Vocabulary.getMaxTokenType()
420f4e02820a93d31a5f138fdd85a0ae1061d5f2,"Update contributors.txt

Added msteiger"
e4a425321960f0bf4af4f9df313b4fb6ae01254f,more impl of get/set alt num; update doc
2c71663a97cf928282031f06f2eff9ef69d2efe9,"Fix Javadoc errors

This fixes all errors (but not the numerous warnings) reported by
Oracle JDK 1.8.0_72 in a simple run of “mvn javadoc:javadoc”."
10756477cee33ffd31fbf3d3b6c8a34f090ba480,Signing contributors.txt
4bc708352342930a0c66bee9d1b15a8db45764e1,"Merge pull request #1130 from gagern/javadoc

Fix Javadoc errors"
cd9ed40ab0b31833477577a578f1bc50015909f9,Merge branch 'master' of github.com:antlr/antlr4
7b9a7b5ec5be0dc314fef372bff0322322b67e1b,Update contributors.txt
65341a3020f0e9137e8491f4a76f071405ab3357,"Merge pull request #1116 from reitzig/patch-1

Fixes Markdown table in targets.md"
c123a48de2dc8fc96fe90dda9f08c806dbbf058a,"Merge pull request #1153 from reitzig/patch-2

Update contributors.txt"
8725a8ac948abd2dba990ec7dd34082992f4b14d,"Merge pull request #1140 from dtymon/07_fix_falsey_alt

JS: ATNConfig can incorrectly change ""alt"" of 0 to null"
9655a92d5008dd490429fae9007dd6ab013e2bb9,"Merge pull request #1149 from Wingpad/master

Fixing Issue #1148"
41a196082d280e14e9099ed854f3d4380c78245c,Merge branch 'master' of github.com:antlr/antlr4
1beb8feb4f343c261b1d31c27c10e6540bc433e9,"add ""return"" to python3 keywords"
20ad4bce7dd21fdb285532aff583a50750137458,"Merge pull request #1127 from gagern/patch-1

Format feature parity table as markdown table"
f2cbc6eb7c0689943d7b1d4ec53c1a79b6c64f92,Merge branch 'left-recursive-prefix-alternatives' of git://github.com/michaelpj/antlr4 into michaelpj-left-recursive-prefix-alternatives
eeea98c00bb7aa3aa14c65d9d96cae537c186cdb,tweak to michaelpj's PR; alter name. Indicate this fixes #1048.
f36e77fc2a3c154f1e35ec27c38754374d6d73da,use latest python
bf6e807ef42f2b25db8ccd1414b55eaee86bede7,Merge branch 'michaelpj-left-recursive-prefix-alternatives'
d74e6f4f6a29b5b27b5041395be27872bf7b645a,Merge branch 'master' of github.com:antlr/antlr4
1356186f65a6b1f166b010dcb1e266523bffe2a8,add get max token type to vocab.
ac1637c0bdab1969c537a64b76687105541d06be,add get max token type to vocab.
5cdca22518158e264d83ddbda9bffb5ecc5ab203,Merge branch 'msteiger-fix-904'
d9272ed9796f16e1a38f53c543d41e1b773968e1,use python 3.5 not 3.4
90d753b08aa440ef1182525b5be81893ff692323,Add getMaxTokenType for C# vocab object like https://github.com/antlr/antlr4/pull/1146
3a48085f90566327688a0010eff30ecebd447816,a piece of another branch snuck in! del.
196c4d59132170a3e849e445da54cefc6ea2db45,argh! cutt out too much last push
69ff2669eec265e25721dbc27cb00f6c381d0b41,"Merge pull request #1117 from ericvergnaud/python-del-keyword

added missing del keyword to Python targets"
0c804f0a28c6b0653b2019d19c37beec32e68138,"Merge pull request #1137 from dtymon/04_lexerActionExecutor_equals

JS: Do deep Actions array comparison in LexerActionExecutor equals()"
4deb708cd8d1793d73383dde6a943e3acc5b3a22,"Merge pull request #1138 from dtymon/05_fix_OR_toString

JS: Fix copy-and-paste error in OR SemanticContext toString() method"
9c440c5b89c9534e52a23f5a0de0b5dd43fc378a,"Merge pull request #1139 from dtymon/06_fix_SemanticPredicate

JS: SemanticPredicate should be SemanticContext"
b05d86c150d990533543862981ccf3d982a320f7,"Merge pull request #1131 from gagern/setStopToken

Set stop token in postamble"
7d16438a195ee7d2b47a7e8480f8f413a0bd2333,"only gen ""set stop token"" if finally/after actions exist."
9e98714a1d955e2a8f588e304551c074651ce030,Add ability to set parse tree internal node super class with option contextSuperClass. Provide impl in Java target that has altNum backing field.  Add test across targets to set/get alt num. Fixes #1152.
cbef19c2b68fccdc83eb9807fe0b56f12825bddd,"Merge pull request #1154 from parrt/add-alt-num-to-trees

Add ability to set parse tree internal node super class with option c…"
29dedd17c444d6636c06eefc4183a093eb76b61c,"New unit tests + template enhancements + more memory handling work

- Added IntervalSet unit tests. Fixed a few bugs found by that.
- Enhanced the demo grammar so that we use as many as possible template rules from Cpp.stg. Still not fully done it seems.
- Fixed bugs in size determination for arrays (vectors now).
- Simplified PredictionContext and SemanticContext (one template parameter less).
- Removed no longer used Utils.h/cpp. Fixed CPPUtils.h/cpp.
- Extended LexerXXCommand template rules to take a new grammar parameter (code gen has been updated) as we need this context in the Cpp target. This change requires to update all existing templates! Cannot do here as this is an old revision.
- Some cleanup."
b78e0e9c1e3c64798cd23e4c5efcbe94139edef4,add test and a guard in action translator. minor. Relates to https://github.com/antlr/antlr4/issues/1143
0c971a1cd72a8dfbb8eaec00c85ce73e9f00645a,try specifying pythons in travis file
75da31b3b2f905d3f8bf1080a575da3f626752f7,spit out python versions
9352c9cf6dd6dd08e90073a1d76de60b59dbace3,force 3.5 python to see if we can get travis to work.
148aedc400636b84ec094c7a6c90adc228dc4232,back out change to python versions in travis
3d21617e304be8b40a524e0ea452715e5e85f0d9,need blank ctor
91560f7035578a3d1b5731f9066ea5c3aae905c8,tweak doc
cd0913712a86e6a10feeb01966225b293d201e10,set code string versions to 4.5.3
567fcc631129603e28a265adb9814d9dfb46d236,[maven-release-plugin] prepare release antlr4-master-4.5.3
b92f22769ef06e7d009fb13c20363c052ec29462,[maven-release-plugin] prepare for next development iteration
b9ed52ecd9dbbb17fa706cd400e9bc8cb06ab2f2,Update releasing-antlr.md
14f05bbcc6573dfe8c367df2cf051b79cc1332f6,Update releasing-antlr.md
1ca5b3886876e1cc3a21980731ed7f8fc91c1a94,"Fixed some TODOs + exceptions.

- Reworked the exception hierarchy to conform with the Java hierarchy (where we mimic that). Ultimative base class is std::exception, which uses std::string (char* actually) for messages, so all exceptions use std::string for that as well. Consider that as first step to rework the entire lib to use std::string instead of std::wstring (with utf-8 for full Unicode support).
- Removed ASSERTException + TODOException and fixed the places where they were used.
- Removed ANTLRException, which was only an intermediate layer without an equivalent on Java side.
- Replaced some equals() calls by == (with defined operator overloading).
- Enhanced Arrays::equals() to ensure it compiles only if the actual types being compared support the != operator (both value + reference types).
- Made the Recognizer class template free by using plain polymorphism. Some adjustments were need also in the Cpp template to support that. Could convert the .inl file to .cpp then."
d1b59ca5af3a5cd86514aa0971d9276b84935034,"Next overhaul (more TODOs fixed)

- Added an even simpler grammar to ease debugging while getting the lib into a working state.
- Added helper template is<> to ease frequent type checks (for value types, ref types and shared_ptr). Added some unit tests for that as well.
- Changed the MurmurHash::hashCode() function to take shared_ptr as this is the only variant we need. Had to change the MurmurHash unit tests for that.
- Removed conflicting IntStream::_EOF (and other variants). We use the C runtime EOF value instead.
- Changed all references to semantic contexts, prediction context and the prediction context cache to use shared_ptr<>. Created *Ref typedefs to simplify usage.
- Adjusted the C++ string templates for that.
- Fixed a number of memory leaks + some cleanup."
3d17066e0cb308fdb53fdcb50f3e46a8224188a0,Removed a few unnecessary pointer casts.
8f2e95516b272c0701e131d9dbbbfb65a6b5718e,"Removed StringBuilder + stringconverter code.

Both can easily be implement using STL code."
091c40899c28bc4ccbb93b15ad458d2ba6c2fa5f,"Finished fixing all C++ TODOs and Java to C++ converter warnings.

Fixed again a few mem leaks."
7f8ad7bd2d04648f53073f99878756e905936c15,"Applied consistent exception model and fixed is<> helper.

- Exceptions are now consistently thrown by value and captured by reference. C++11 exception_ptr and nested_exception are used when exception references are neeeded or when implementing the equivalent of Java's nesting.
- The is<> helper didn't handle properly (const) references, which is now explicitly handled. Added new unit tests for that.
- Fixed a number of places where a catch all was used to implement a ""finally"" (which hides exceptions).
- Changed exceptions to hold (temporary) raw pointers instead of shared pointers, as otherwise it is tried to free wrapped pointers which might just be references to static objects. Might later be updated again when we continue with removing raw pointers.
- Some smaller fixes.
- The generated simple parser now runs through without any error (yet, it doesn't do anything useful).

- ANTLR C++ target template:
  - Added getListener and genVisitor bool members to ANTLR's LexerFile + ParserFile classes, so can use them in the template.
  - Made addition of listener #include dependent on the new genListener member, which allows to run parser generation without listeners/visitors."
6f344b376b11b95455468205721b8582bfc7aa45,Fixed all ATNConfigSet memory leaks.
eb0241f76716bccef156ea77cb24ccc5bb9b7a1c,"Another refactoring round.

- Removed a few unused classes.
- More raw pointers to smart pointers conversion: RuleContext, ParserRuleContext, ParseTree, Token, ParseTreeWalker, Tree...
- BitSet is now used directly instead of all those dynamic allocations and is a derived class instead of a composite.
- Replced ATNState equals with == operator overload.
- Correct wrong iterator over ATNConfigsets.
- Added utilitiy function that mimics Java's generic toString()."
65a1f396de2e604f76c48ab5f196068c67c0dad6,"Remove unnecessary semicolons from Python targets.

The Python templates contained superfluous semicolons after
the sync call of errHandler. This patch removes them."
7562bb3b45ebe781b236d48a8bd8782ffc9ef7e8,"Add missing default pass statements to Python targets.

The default pass statements were missing from the LL1AltBlock's
template in case of Python targets, which generated conditional statements
without body in some cases and ended in syntax error. The patch fixes this."
f292d14abc6c5677666f23b9bf28086d422d40e7,"The parser is parsing for the first time.

- Removed ultra simple test grammar + parser. No longer needed.
- Removed long list of keywords from (regular) test grammar.
- Fixed a number of toString() methods to get better debug output.
- Moved Ref typedefs from Declarations.h to the individual classes as defining them on the forward declarations totally confuses the XCode debugger.
- Removed reference to the owning ATN in an ATNState. We cannot guarantee to have the correct address there due to the way the states are created. The reference is not needed anyway.
- ATNDeserializationOptions now has verifyATN set by default (as in the Java target).
- Had to add a workaround for a weird situation: static initialization in ATNDeseralizer stopped working for no apparent reason. Need to investigate this.
- Added a few support methods to the CPPUtils, mostly to ease debug output creation.
- Added console listener by default to the listeners list (as done in the Java target).
- Fixed translation mistakes in the CommonTokenStream class.
- Fixed some memory leaks and exception handling bugs."
e8325623d92938678f056d742cf2d0b537e741b9,"Finished checking all memory allocations.

- All allocations are now checked for proper deallocation.
- Ran LLVM analyzer over the runtime but it found mostly valid stuff and did not find non-freed allocations I left undeleted by intention. So it's not worth much.
- Added move and copy assignment operator overloading, as well as a copy c-tor to ATN class to avoid a copy (and to be able to free content properly) after deserialization.
- Some clean up."
e85385785eabcc711017a9a986d3cc9edc8544d4,"Simplified use of the demo project.

- The needed ANTLR jar is provided now, so it's not needed to build it yourself.
- The generate.sh script has been updated to use the new jar.
- Small update of the readme too."
b2daab9477e4ff8fd6645376d35ea559b07b143f,"antlr4cpp on Windows

- Solved all compilation issues. Updated the antlr4cpp library project. At the moment we only build a static lib. Need to add exports for a DLL. Since we want this library to be compatible with VS 2013 still, we cannot use std::rethrow_with_nested(), hence we do a simple unnested throw in such cases. Starting with VS 2015 this works fully then.
- Added demo application.
- Added parser generation script."
77d0a6c32a39d8170df67ab413da71b6d0cacfb9,"Serialized ATN generation changed.

Originally the serialized ATN was coded as a wide string literal with embeded Unicode escapes (where necessary). This might fail on Windows however, as VS is very strict when checking Unicode code points and rejects compilation if it finds undefined code points. Hence this generation has been changed to hex numbers instead of that string literal."
5ab89e38bd0ae477fd95f343544b665ec145e81c,"Demo app on Windows is working now.

- Class ATN is currently leaking states (delete disabled in d-tor) until I have found a solution for the failing return value optimization from ATNDeserializer::deserialize().
- Added member init in BlockEndState."
217bb23248a6e7e6fb1b1fe9c12ea80b0bfd0ab9,"Build fix for OSX.

- After enabling the OSX specific variant in the Guid class we have to link to CoreFoundation."
ac8384354cbee84ff84531a09bb2e688f4838982,Merge branch 'master-ter'
014d9fd59397ab6434ce29447ef8d27e558a38e5,Merge branch 'master' into feature/templates
0e5b501aa8e4a33ac049573941a58e7daf665573,Merge branch 'feature/templates' into feature/templates-org
e79f917437309c82318bc2c5fa557cb358919817,"Found a solution to make RVO in ATNDeserializer work.

Visual Studio needs a move constructor. The move assignment is not enough. No need for the copy constructor anymore, so it can go."
f8341c78202415fd34219ebd03038f0830dbbf9e,"Switching to current ANTLR revision, part 1.

- Removed rules no longer used in the Cpp.stg.
- Removed CppTarget.java in old place.
- Converted + added most new LexerAction* classes to XCode project.
- Added changes to a number of classes."
d430f495eafa7b0c727ac7d8bfe4e5421660311b,"add comments to ""dead"" code in serializer. text from Sam Harwell."
2a2b6acba1e3d291757686521630b7d089ea9f5f,links update
54168905b0d6fce9ad026f46ba7be0d9d087c45f,"Fix typo in the parser of the Python3 runtime.

The last parameter name of Parser::enterRule in the Python3 runtime
was mistakenly combined with its type. The patch fixes this."
8cd043a6de9cf82e805faac30b2c1a189454d529,"Switching to current ANTLR revision, part 2.

- Finished adding all new ATN related classes (e.g. profiling infos, lexer actions).
- Introduced a global Ref<X> alias for std::shared_ptr<X>. The previous approach (defining a type individually for each class led to cyclic #includes).
- Converted all ::Ref typedefs and uses to the new Ref template (+ a number of std::shared_ptr<> occurances). Work in progress still, all those occurences will be converted for 100% consistency."
99ada0550f8f2b6ee756a263ad6d477c173338e7,"We need recursive locks to synchronize access.

We can certainly revert to simple locks, but then have to do synchronization differently than the Java target does, which is not in the scope of the current work."
d4ebdfa138aa1f113213235ef65485c262a205d0,"Switching to current ANTLR revision, part 3.

- Everything from atn + dfa subfolders is updated now.
- IntervalSet changed behavior a bit which needed updated unit tests."
bfcb0a71cbf481baddca8027933d4c1f0e5422cc,"Switching to current ANTLR revision, final part."
886600ed558efe5bfd59247af2521b7a15cf1100,"Fixes to make ANTLR and it's tests fully compile.

- Fixed a few merge errors.
- Added grammar parameter to all target stg files that had been introduced for the C++ target."
89093f73178f13b7ee4c79cf321b9db229093a33,"Some finetuning in template files for C++.

Also checked parameters for all rules in the template files as there were changes too."
7b030d601fb4495fb428daf0dfc0e3d1d1e01f80,A C++ runtime fix that caused test parsing to fail with syntax error.
185e956f9e75adc0a7134a7ca46a092b9a535e70,VS solution update + compile fixes after latest changes.
c9c294a729c8ad7d055d210e8947915258c37ff5,"2 smaller changes

- Changed the empty return state PredictionContext to max int (instead fixing it on int 16), like it's done in the Java runtime.
- Converted 2 static init lambdas in the Cpp.stg to normal code, as VS doesn't allow us to access private class members in such lambdas."
6d9d52b45a2d578ff324d6d8034e5d42227b3478,"Solving a tricky issue with prematurely released prediction contexts.

Sometimes in the prediction process temporary ATNConfig instances are created which either share their prediction context with other configs or get a new context which receives the context of another config as parent. Later in the process such temporary configs are released, but the set parent prediction context should stay alive as it is used later. Since there is no top level structure that would keep them alive we need a way to make them stay. For this effect the SinglePredictionContext (which is the only prediction context that keeps a parent reference) uses a shared_ptr instead of a weak_ptr for the parent reference."
d98f3f79344b8ad740b238f6edee5020497b43d0,"Fixed a number of subtle bugs that broke parsing.

Things start looking very promising now. We are ready for runtime tests."
aa88e7bc30dc4cc0ebcfd4d693b0563f9cc139e8,"A bit more complex expression in demo parser.

Forgot to commit that with the last changeset."
5489ad2ac66ff22c99358088367be7896fb25336,A few changes in test files after running the test generator (mostly reordered tests).
8ff852640a7ec62d46330f71e274c591ada1fc70,"Updated Windows project to be compilable as both static and dynamic lib.

Removed a few unneeded cpp files on the way.

Note: building as DLL produces many of the well known compiler warnings C4251 (type needs to have a DLL interface ..) because the runtime uses many STL classes in exported classes. I tried exporting all those types via explicit template instantion, but once I hit unordered_map I gave up. Just crazy what you have to export just to make this map export properly (and I already had like 50 exports already in place). So at the end I disabled this warning on project level. So make sure you build this DLL and all binaries using it with exact the same compiler and linker settings (same C++ runtime etc.)."
0fada33cebfdb816e7b3d3dee54fd1588d970909,"Fix for a weird lambda execution problem in Windows.

One of the lambdas used in a ""finally"" expression executed already while defining the ""finally"" instance, which is way too early of course (others did not show this behavior), which happens only with the Visual Studio compiler, not clang. By changing the capture list to a general reference capture things started working as they should."
dd43278406e1ede4977775ed791258d66bae1d70,"Linux + Mac build fixes.

- Updated XCode project (removed obsolete cpp files refs).
- Set channel datatype in lexer + tokens to size_t.
- Removed one unit test that no longer works, now that we require all objects in a vector given to murmur hash code computation to support the hashCode() function."
6939b7f92cce6429dd6870e3d2c8d5c6da4df04e,"Split XCode demo + libraries into individual projects.

In order to allow building the OSX libraries without the demo project they have been split into 2."
9ca136a8b76edb9d41f07d17914b379bd944ffdb,"Ignore jar files in the repo.

Jar files are manually copied into the repository to generate files, but don't belong to it."
bfe3a7cc632ec4fedb8662e8fd602906a69d54bf,"Renamed XCode demo project and set install name for dylib.

The default install name is /usr/libs/antlrcpp.dylib which makes running the demo from command line not working (location and install name of the dylib differ). Since the probability that the lib is placed in an app bundle is much higher than that the lib is being installed in the system, the default has been changed to just the dylib name. This can be changed to anything else if needed in a concrete project."
a83849a0c4ce4905f29c81372e579b6d4542eabe,Missing parts from the previous commit.
5780755196566d444ad1d880c759552bf3631817,"Reorganized runtime folder structure + created ios target in XCode.

The runtime folder now contains the individual project files for each platform (and associated files/folders). The actual source code moved down one level to folder src."
a44741a73da5f5f4a1bd0c91580e44ad5c82b5c8,No need for public headers in an OSX dylib.
6ac56de5f1153e8d7d5d8808ec7055d99aa7ff59,Updated OSX demo project after structure changes.
f30aa125a551834d2a46cd2c58cd8f14c4d666fc,Updated VS solution after project restructuring.
04577d1377fdbd1e7a6b1e1da73879ea244462ae,Merge branch 'master' of https://github.com/davesisson/antlr4
6433481bc7c8cc33e25b25fc27f53eb233a3aef7,Added minimum set of files.
f018236ad7675ad0a170601caf2aaeecb369d6ff,Added minimum set of files.
6c08a6e72d6dfda64ed954e05f807008be641120,update docs
b69076ab7f7c50472037888972593ba47b12848c,update docs
43dc1df1f25402d41f5032e34140661eb9069b42,More needed files.
e4fd106948569b3882de1d59e0e9b5a84c0fa6f2,update packages
00083a77e83bf3fc335d0df01394ec6fb1056202,Adding missing file.
297f00350c4e4d548a0f74b8b004a517cc717a1a,"Added more supported grammar sections (named actions).

C++ target:
- More sections are now supported: pre + post include, declarations, definitions (in addition to header and members).
- Added specific variants of these sections for (base)listener + (base)visitor files (baselistenerpreinclude etc.).

Had to add named sections to VisitorFile.java + ListenerFile.java.
Also added the new namedActions parameter to all target stg files where needed."
4e3325c9da23b11606782bffada6429c71a4fb26,"Fix initialization of ATNConfig when computing SLL prediction
termination condition.

The PredictionMode::hasSLLConflictTerminatingPrediction method aims to
create ATNConfig objects from another ATNConfig and SemanticContext
objects. In case of the Python targets, the initialization
happened without keyword arguments. Since the called __init__
method had default values set for all the parameters, the parameter
substitution worked by indices. As a consequence, the first ATNConfig
parameter was wrongly interpreted as an ATNState and the SemanticContext as
an alternative. The patch fixes this by adding the missing keywords."
6c21223d2e4b15c580f3e0c1282316a396a9ef16,"Added cmake target (Linux + OSX) + fixed a number of warnings.

- Compiling with cmake brought up quite a number of new warnings. Some of them have to be disabled yet (dollar in identifier, four char constant, overloaded virtual). The others have all been fixed.
- Updated the README to include build instruction."
ce1e72b9a1be82d1936f6f1383e0b4fa298d0c36,Merge branch 'feature/templates-org'
303684dd34095f2f569b6b635ddb3f6f43d116e8,Removed jar that should not have been in the repository.
358bde88442a77391057050cce0245b2a80db396,Updated runtime tests with updated generation templates.
b976a4942d976a8ad16fdb7428e753752d838137,fix which tests to run for cpp
eddf2a1b36c7ac2971bc49f0af461b3876a309c2,updating BaseCppTest.java
cbe9c2f1f761a773f41b39fc2f5a068fca5df3b1,Returned other tests to active duty.
a212755734567ea3ce7abc111c0fc5697c54b52c,Cleaned up the test runner.
337f0467a87d7eff51559e6a8ce9cabda2fda20e,"Added yet another possible code section + EOF rework.

- @parser::context or @lexer::context are now also accepted for code that should be placed directly before the class declaration (e.g. additional types, like enums etc.)
- Reverted the removal of explicit EOF handling. Thought we can just live with the EOF macro, but that doesn't work out, so we go with the same approach as the ANTLR3 C target: #undef EOF and use EOF member constants as in the original Java code.
- Fixed a crash when trying to create a hash from a null parent in PredictionContext.cpp.
- Generated token and rule enums are now placed in the lexer/parser classes which allows to use them without qualfication within those classes, making so actions in a grammar more language independent. Outside code still has to use e.g. TParser::ID to access them.
- Made some lambda capture lists more explicit. Need to test yet if we can just use a default capture instead."
faddb83fe5e54b919539e144e45aca55c2dda8f6,"Enabled unused-parameter warning in XCode and fixed all occurences.

Some warnings in generated files cannot be fixed in a general way because usage of parameters depends on the grammar, hence we suppress unused-parameter warnings in the grammar (for lexer and parser files)."
13b135f4e8052e6e8c5745c4b82e950a3a6cde67,VS warns about /* */ comments if the are directly after a *.
0835c52a6790ad0b833155eeee4f8e7c7c75cf31,Moved Marcin to Other Contributors list.
5653be36fa180ff125705dc1d95b7d9a18659c63,"Runtime Cpp: disable warnings and remove unnecessary files

Signed-off-by: Mike Lischke <mike@lischke-online.de>"
db6f3c983dc6c0a03335ef01a4b2fa3f9d69d35e,Added the start of linker support.
9920efd3536ba859139642e5312abe37b9756fd6,More updates to the C++ test runner.
fda0210b50b051e0238e7959f19c8feeda172e9f,"Some updates to demo grammar, Cpp.stg and XCode projects.

- Reversed the meaning of grammar sections members + declarations to maintain the same meaning for members between C++ and Java target. Now members are placed in the public section of a class, while declarations use the private section. This change helps to minimize language specific parts in grammar actions.
- Removed deleted cpp files from XCode project.
- Cpp.stg:
  - Renamed all occurences of ""result"" back to ""_localctx"" as they appear in the Java.stg file. While the name ""result"" better fits the purpose the rename increases differences between targets, hence it was taken back, so we can use the same actions in all targets.
  - TokenPropertyRef_text is now complete."
d8442c0bf6eb5fab895d0753a9b89caebfff80de,Update VS solution (removed deleted file references).
23873b4a14a6e22f9681d5e7b5f4b3eff2d06ea3,Fixed one more warning in VS.
33ba47b6a585364a7779a46de29838b0dd9407f3,Merge commit '303684dd34095f2f569b6b635ddb3f6f43d116e8' into feature/addtests
eb5760b87233cb7ef8e1c75aedb505590ddf8292,Merge branch 'master' of https://github.com/DanMcLaughlin/antlr4 into feature/addtests
313c971caed1fe061741e28bc6c5395482b77368,"Bug fixes + update C++ template.

- Also the ArrayPredictionContext has parent references (like the SingletonPredictionContext) which need to be strong refs or we may lose some of the parent contexts if they are not held somewhere else.
- Don't use WCHAR_MIN as lower bounds for char input checks, it's not 0 as you would expect but -2G, making so EOF succeed even though it should fail this check.
- Don't resize the parents array when merging parents + return states in PredictionContext or we will try to access parents outside of the available range.
- Use an unordered set when merging parents in PredictionContext, so that the normal equality pattern kicks in when comparing contexts.
- Some parameters in AbstractParseTreeVisitor where wrongly outcommented where only the param name should.

C++ template:
- No longer include the DEFAULT_MODE in the generated lexer (it's defined elsewhere).
- Corrected formatting and finished some reference rules that were not done yet."
1cf3fafcde979e50bc5d8bf319dba834d1d7ad0a,Merge branch 'master' into feature/addtests
75bb33888258b7f49d046240f09a243661a892b1,"Added 2 newer support classes to the runtime.

With those 2 classes the port of the C++ runtime is essentially complete. We now do only bug fixing."
0eebbdd78cfdc7e103bb62adc57568f159f2e2fd,Updated VS solution with newly added files.
66a9ee53a05cdda36338c601a92adce7a72c056c,"The generation + runtime now uses std::string instead of std::wstring almost everywhere.

- In order to support UTF-8 the input streams now support loading data from UTF-8 strings and convert them internally to UTF32.
- Additionally, all the toString() functions that (unnecessarily) used wstring are now on string as well. Only some corner cases remain where we still have std::wstring (ATNSerializer).
- The transition classes use size_t instead of int now for vocabulary matching.
- The max char value in the lexer has been increased to 1FFFE, to allow matching the full Unicode range. This is also used in the Interval class to e.g. to negate sets.
- Renamed Strings.h to StringUtils.h, to avoid a conflict with an OSX header (used with Obj-C compilation, e.g. in a project that uses the runtime)."
2cbed815044156c6264f4270d7008b5f94a000f6,"Further work to have full Unicode support.

- The upper char limit in Lexer.h was wrong. Now correctly set to 10FFFF.
- The lexer ATN simulator now uses lower + upper limit of char32_t instead of hardcoded values.
- Added a little hack to Interval, where a range ending with 0xFFFF will automatically be extended to 0x10FFFF. This is necessary until ANTLR generates full Unicode intervals. This hack allows to include Unicode chars beyond the BMP in char classes in a lexer.
- Fixed an error display issue in Lexer."
d95a0b664b8daa5d5bf2782d8ca6e6e236f0e8ad,Merge branch 'master' of https://github.com/DanMcLaughlin/antlr4
03024cb4661d6e4d366c9354a922de6830072c7e,Merge branch 'master' of https://github.com/DanMcLaughlin/antlr4 into feature/addtests
33e3825dbab84df3a34d2ff8a9fbc9edaf2416ac,Merge branch 'feature/addtests' of https://github.com/DanMcLaughlin/antlr4 into feature/addtests
0617dfff5460a157071db477f51663c6085dff74,"Rework of the include structure.

In order to ease including the antlr runtime in other projects the include structure has been changed:

- Removed precompiled header usage (only OSX, VS + cmake still need updates).
- Created umbrella header antlr4-runtime.h that contains everything needed in a target application.
- Changed all includes to use relative paths, so it is enough to add the src folder to the header search path in an application.

- Also fixed a smaller issue in the C++ template wrt the serialized ATN storage for large grammars."
cc50675a663f1ead4857d713bf6c5e27d87408e4,Merge branch 'master' of https://github.com/DanMcLaughlin/antlr4
1d6c66ec45beff095fe7896a887d66e226dee5a5,Merge branch 'master' of https://github.com/DanMcLaughlin/antlr4 into feature/addtests
e2d545fb2e4e475048b90de9d7d6aaa5c9c53031,"Changed exception object back in error reporting + removed precompiled headers with cmake.

- Reverted the change from RecognitionException to exception_ptr (and removed the make_exception_ptr() call). This is not needed and only leads to object slicing. Instead we check directly the given exception object for the individual handling in reportError() and use std::current_exception() to get the exception pointer for our contexts.
- Removed precompiled header stuff from cmake file for the same reasons as I did in the XCode project (Visual Studio still pending)."
e572d178b84f63f8b73d1ed603bbf4f583cd94ef,Merge branch 'master' of https://github.com/DanMcLaughlin/antlr4 into feature/addtests
e6ebc5c36b49370de2cacd637e18d2eda7a32ad7,Fixed demo compilation for Visual Studio 2013.
3406acabe51e89c57fc26aca02aeb7cbc30119bd,Correct nil check in ParserATNSimulator
db5a5c5c171450f5b300227f800e761d5efdf0bf,Move runtime/Go/src/antlr4 to runtime/Go/antlr
4200fc7c14717addb305af1d473b434d18e5c883,Delete unneeded README.md
bff76c3e5a165e6df7765d1b76847807332a612b,Move runtime/Go/LICENSE.txt to antlr
519277f78f2da473e4d9a495f7ca8624e122a813,Rename package antlr4 to antlr
baaf1fe72f78c13e6b0290031cd9b3f64f86bb22,Rename files to snake case
21fa2d131086372063262a47f0e29f78263c8199,Format
5361aedc0b80ef9e22a16eed49f3a9d330f072aa,Vet
b0d5fed2cf03153302dc4a5a8104e0df70c62842,Merge branch 'master' of https://github.com/DanMcLaughlin/antlr4 into feature/addtests
6aa03ed9a2cc4c4e185a35368b6635f69843244c,attempts compilation
ae4dcbabbdf5ba73151b69f38a051bee185c8f2c,properly escape templates
3b742ed8cbe56122800428b3c48dc2168f46fd18,"Lint: Rename generic ""this"" var"
8a1b68feb4ce5bf578f8da403b47deb3923bb1db,Lint: Omit unused second range var
9ed1ed10038cad03908ea9727b4d633d80bfb41d,Lint: Use uniform receiver names
33fd68778e1542311c900f03230349abe8047324,Lint: Replace += 1 with ++
26df61753214613e6e7817d1e1dd8e9a9e58d799,Lint: Outdent else blocks for if blocks that return
056f3f62c1fd6dac1f555bf19b1f09a5152e95c1,Lint: Rename initialisms to uppercase
c81f2a79012f2be19e43d6bbf06493de9ca338ba,Lint: Drop nil declaration assignments
5c4e28487e4abc6fff20b150c7c4936aec2bc2fe,Lint: Replace -= 1 with --
29b6530a2b3a78ddea19f90a0af13ef1ff61b3aa,Lint: Omit redundant declaration types
71dba8cb91903dd246a8202ec053930e7b3f02e3,"Lint: Change all caps ""LOOK"" in names to camel case"
b4da149732b0e37ca54efcb20369c4df869e0690,Lint: Remove underscores from names
aafc76a7eb28ad847c5d2c1d901b82effae38b86,"Fixed big memory consumption problem.

- The ATN simular generated lots of duplicate DFAStates that consumed a lot of memory, due to missing hashing/== functionality. By using an own hasher/comparer for the unordered_map in the DFA this problem could be solved. Memory consumption is now 100% stable on a low level (e.g. 115MB for a fairly complex parser) and doesn't increase anymore after the warmup phase.
- Fixed also a number of things reported by the clang static analyzer.
- Fixed a bug in Parser.cpp where the stop token in the current context would be set twice overriding a previously set value.
- Optimized token range check via ATN::nextTokens, by not duplicating the stored interval set for a given state.
- Slightly improved IntervalSet::contains() by moving some tests out of the loop and not using intermediate variables."
c8e60b7fe054a0d543b2cdf260869bc31b89d40e,Down to one issue -- tree::ParseTree and tree:RuleNode aren't related as they are in some tests.  Need to find either the right relationship or come up with an alternative test.
90ac6c0f63b47a839319668a486e6c584c5c0ed6,"Change ""a"" back to ""this"" in comment"
be65ccd25c59d03802b3d27224d283173215e4c5,Moved the library build instructions to the library readme.
3da5b86000ba5152f6209a29d15a8a19d3b21e07,Merge branch 'master' into feature/addtests
7d69f24201e2f687a67d74af290bac426ea7763d,Small corrections to make the test module compile.
9e30f3f2654074906a44f2fe40ce688fdb9853ee,A few minor changes related to building via cmake.
b6f384bf3c4f1d8c0fcf95ec2bf439ca58162ede,runtime test/Go: Use $PATH and $GOROOT to find go executable.
7652b9af79af602b61823eb03b6dd7c64bc667ca,"Go runtime: Change misMatched to mismatched.

That seemed to be a find/replace accident. Apparently this change turns
the tests ...

 * testTokenMismatch
 * testTokenMismatch2
 * testNoViableAltAvoidance
 * testNoViableAlt
 * testExprAmbiguity_2

... to green. Although I am not sure about testExprAmbiguity_2 as that
one doesn't have mis[Mm]atched in its output AFAICS."
b3a17b00a20b7e5415efb65784ad93fb8df976e8,"Set up so we compile link all of the files in the test directory.  Does not run the binary afterwards, but that's because there's still a print being generated somewhere (and I have no idea where it's coming from)."
e9692993992b4b3936a594d6c506077eb8fa6182,remove accidentally checked-in library file
a3e89e56c5a7e38529fd1fdb42df68712ce07d29,Merge branch 'master' of https://github.com/DanMcLaughlin/antlr4 into feature/addtests
b920bb701100529e08a44ab8701a165a406f4014,Added run support to the test runner.
3e21e0b6e37b7b542b8a7870d24a805e069ed9cb,Regenerate all of the tests with the latest test generation template.
f103e05bc3401436b0a85713c10a9e058cbf70fc,"Some additions for better operation.

- Allow loading new input instead of setting up a new input stream.
- Made is<> template function inline, for hopefully faster execution.
- A few other fixes in stream + lexer classes.

- Reverted another rename from context to _localctx in the Cpp.stg file as this is used for certain actions."
89c01af247d0f01ca00e2d73e9209390171c7869,Merge branch 'master' into feature/addtests
bebb63a126d049a97562e8ce177a02c409d3af8e,Updated generation a bit.
bdc4f6a48f5ea8cfacf63a3916e7c19bb45ef1bc,Merge branch 'feature/addtests' of https://github.com/DanMcLaughlin/antlr4 into feature/addtests
b1b8de748a393f5461f1c027ad064ec207e5fd92,Fixed a number of issues in the generated tests.  Many more to go.
657be5f1ac63b7a7a25e7ef6e84639820e12d4a4,Fixed generation code for lexer tests.
220439ac72560398e109ec31368e8b6e20dea7b9,"Merge pull request #6 from wjkohnen/fix-misMatched

Go runtime: Change misMatched to mismatched."
b93bdc33a1416c67e64b04104796b7e80bb35eda,"Merge pull request #5 from wjkohnen/find-go

Use $PATH to find go executable."
99d6b812c148aa8d3a5353817637137009de4d22,Remove test code
ed5b4d14f7f4cab979d887602d8c50d216128472,antlr4 -> antlr
31d21ff4db8ddcf76bae1b865cd568621bfd5b4d,Update templates
a20b1abb9701ddc948133faea6c0c507995386d4,Change generated Go code to import Go runtime from github.com
7080d0466207c1ce3ea09dead6868b22ef2b60cf,Export LL1Analyzer.look
27b76b5a332e95e64f363f646bfde390a48d96e2,Fixed token toString() so it produces the output expected by the tests.
95b7f488a4ad8e62beec69955b30359d4e67bf37,Merge branch 'master' into feature/addtests
bf88d2747c91a4fcd718cd2aad98f6abb3bce616,Move runtime/Go/antlr to runtime/Go/src/antlr
08c17b850e81f05ee48dc32d2494ce39f45a1ba9,Rename Go files back to camel case
103dc662c4457d1f439b3f9d09ed1092bc344a7e,"Fix ""misMatched"""
fe1d61d9dba9f202982da85606cbb7493ce7bae8,Merging
b503116e1235d3497e9cde6abb491e7789a72baa,Move runtime/Go/src/antlr to runtime/Go/antlr
1208f97696c31bfb10c3ca6992e838b405438bd3,Rename Go files back to snake case
128ec07dd38e75abe5314f04f8f62aed114248f6,"Merge pull request #4 from willfaught/master

Simple clean up"
10eb1a197073550a74981d771dc591fb804f71ab,"Rename Lexer.mode to setMode

Also minor formatting."
92793a9dc84e9a0780377bb206513e2c1fa7e847,"Rename ""this"" receiver to ""t"""
34877767c128aa2f54d76a9926cced7e75021587,Change package alias antlr4 to antlr
3434e802be38f6e5e4473ab68b20677d9b758d50,"Fix test GOPATH env var to include current GOPATH

Also:

- Change ""antlr4"" imports to ""github.com/antlr/antlr4/runtime/Go/antlr""
- Remove parser prefix from Property and pred calls
- Change TParser.X tokens to TParserX"
8d863ea19c615f32210a7fd7d22a71cec10a4a64,Change antlr/antlr4 to willfaught/antlr4
9562d87d499fe2bb2c47294e6794e3dbd04548a5,Change willfaught/antlr4 to pboyer/antlr4
0b0d202c499935e6682632a876f5e8376f8623c3,"runtime/Go semantic context: NewAND, NewOR create empty operands"
7e8fb7a7f3ecc8ed3a54a670b5992e0ec0af9411,Handle empty current GOPATH when setting GOPATH
781aac7897bea27ead30b6c70c432aae1c7854e1,travis: install Go 1.6.2
a0314a89468722a3a0a00f958683824f9c244d45,Change File.separator to File.pathSeparator
6500b59e4289cc2701ef8926dad7a110f18a4459,"travis: Use gimme instead of curl, because we're netizens."
207d638274914ac6fa716d520228ff19aaaff73c,"Merge pull request #11 from wjkohnen/emptysctx

runtime/Go semantic context: NewAND, NewOR create empty operands"
6ddc7c9d4fe69ada5c4808670980350410b406e4,"Merge pull request #9 from willfaught/master

Test fixes"
439a3b78689d779da534e6d27f7427f5dfa71672,"Merge pull request #12 from wjkohnen/travis

travis: install Go 1.6.2"
a0665677c1fe993dd5f0f606faececa017c8575b,Lots of fine tuning to get more tests passing.
f2dc9f476b01f1ae0964f9bb6deb2153cc063e37,"runtime-testsuite/Go: timeout tests, honour GOROOT"
4fd4e518104ae7d2c3e6fef71c1fa6a668005a43,"runtime-testsuite/go: Make path construction slightly more robust.

* also piggy back a typo fix."
815bb959821168395029c15acb65d8ef86c21ecd,"TestLeftRecursion passes, but with some disabled tests.

There are a number of disabled tests that need extra work (all because of target specific action code)."
08f844af0e0916ccbb5f04368b5d24ba2762e2a6,"Fixed 2 problems found by runtime tests.

- TestLexerExce group passes now.
- Reverted wrong removal of action text output that prevent named actions from showing up properly."
814a1821beee549a1352f7877d1260890811c7f3,"TestParserErrors passes now.

Fixed a bug in the Cpp.stg file where more input was consumed than should be."
6abe69f6e2c41ab3f4b33a70bc5a3463767386f0,"Merge pull request #15 from wjkohnen/timeout2

runtime-testsuite/Go: timeout tests, honour GOROOT"
950acca7c0d24ec87fe7bfa278c222d73bc0a8b1,"Sort values of BitSet.

 * Fixes pboyer/antlr4#16"
a0fd4a76758be176d9037cd73349d254301d2e1a,"Merge pull request #17 from wjkohnen/issue16

Sort values of BitSet."
6515a84d63e1570ed12abc7aaaaf5c1bb9a1c2d0,Change generated file header to full sentence
52028c52cefb319fde0ec794b99ddb49ec8de1c8,Prevent generated file header from being package doc
86014ac3a694f28778c2aab8472eadff664d4bcc,"TestParserExec tests pass now.

- A few more adjustments to make this test group pass.
- Fixed a few issues in C++ runtime as well."
6bf11938397cb23e4e1fd330cea5e62d70c9662a,"All tests of TestLeftRecursion.java now pass.

- Fixed all disabled tests and enabled them.
- Some more adjustments of the test template + target template was needed.
- Worked on semicolon usage in Cpp.stg to avoid double semicolons. Might need more work, tho."
28ccc4962b518e5be423149944a9c10b339fbf02,TestParseTrees passes now.
44ee0a52ee872b838ed2e9da3d98004fb64b76d6,"Merge pull request #19 from willfaught/header

Minor header comment rewording and formatting"
be2e71130affea31e5580cecd583c676860a00b1,"TestListeners C++ tests pass now.

- Needed a few adjustments in the test templates for this, which required to change target test templates for all other languages too."
b7ade0ade1efbb9d063ec039614aa0bad83b159e,TestParseTrees + TestSemPredEvalLexer C++ test groups pass now.
ac664a91b869c7783ee311b2c355ae7f7b13f5d3,A few more fixes.
4f8951e5efa0c556f9b6d5a38c0cd5909ca22830,"tool/Go: enable -package option

see antlr/antlr4/issues/1204, pboyer/antlr4/issues/13"
4a6b68c6f6470d3653df416d1bc030efb27fedf7,"All C++ runtime tests pass now.

- A few remaining changes had to be done for the C++ runtime tests which now completely pass.
- Added a runtime testing overview document.
- Added a description of C++ target.
- Updated the ANTLR release document."
b8867c732d02c91d140922bc7e9871b489ee9c8c,Fixed warning in C++ code generation and remove obsolete file.
696820e2eada1ef8364210964228c0f08157bacf,tool/Go: Add predefined identifiers to list of keywords.
80ced92d552f6ef59272ee6b50bd9fbd6b810fbd,Added informations about C++ target specific stuff to the docs.
d6339f5cf4fa98395ca6cb60de4d316b918649ad,Added some notes about Unicode to the C++ target doc.
4cdc421ce746905bf84edcdbeb2551b75198aab9,Replace 4 spaces with a tab
d4d46b29301769eaf310563c34a58ae444b589fc,Combine multiple spaces around ::= into one
fc275721b8a54a2d4673fba67cd8838d96eba5c8,Add spaces around == and !=
6a89c4529eae0560064f5f36407492d49395786c,Remove line-ending semicolons
06e4bb1cd1da56ca49ae4f2a3a37d1aaec63ef4a,"Add spaces around template var binder ""|"""
a94377d2a5aa9f612c6ac0ed08eafb4314a2ce7d,Add space after commas separating two vars
94ded73cba3f16b559edf4a843fc03f7d172f4bc,Change multi-line template signatures into one line
73248ac2e39d5f905aeab743fc8410c6943474ba,"Some changes in the C++ target doc + a some template fixes.

- Avoiding double semicolons is tricky with the kind of rule nesting. Previous changes for that caused the tests to break as there were semicolons missing then.
- VS complained about the shift code generated using 1L as base, which is signed. Changed that to 1ULL, which is what is actually intended.
- Reverted the change to avoid a warning in RuleSempredFunction() in Cpp.stg as the fix didn't work 100%. We need a different solution."
55e9ca3479742bd0c3c4df41f9f99191d4519c02,"Merge pull request #20 from wjkohnen/tool-package2

tool/Go: enable -package option"
1bf006bd914fec2213818c7d0b82c30728f9f911,"Merge pull request #22 from wjkohnen/predef-idents

tool/Go: Add predefined identifiers to list of keywords."
bf7cc8ce806b793f5c3b279f81a8e2af54d39524,"runtime-testsuite/Go: Cache Go test environment and make it self-contained.

 * ""go install"" the Go runtime inside a temporary GOPATH directory.
 * Remove unnecessary GOPATH variable elements.
 * Change some instances of stringly typing to strongly typing.
 * Remove a few pointless indirections.
 * Cleanup erase helper methods, make eraseFiles (eraseDirectory)
   static and recursive (used by @AfterClass as well).
 * Other minor cleanups.
 * => this works on travis now and is about twice as fast! :)"
6d881c395d9d10e84136d495e7db6bebfd37a9c0,"Merge pull request #23 from willfaught/fmt

Fix whitespace in generated Go code"
cd30fe4613ffa8a0d472da6f718cb22045446da5,"Merge pull request #25 from wjkohnen/buildsys

Cache Go test environment and make it self-contained."
3c45483d334eb31e6f53acf032f1df2783f04413,Update README.md
53ffa6086c4a1f2e374ce43b5de789fac3494b25,Update README.md
ce4daca3a180a50f312d024a57bdae911c43adab,Update README.md
f8f872bfc91aa1a5a9bd877fafa9a4a794307af0,runtime-testsuite/Go: fix recursion
a4bc611fd5874d1c09ebb0bb91689b806631d8e0,"Changed namespaces + fixed runtime tests.

- Changed namespace chain (org::antlr::v4::runtime) to just antlr4 in all files.
- Fixed runtime tests for that.
- Added conversion of the xpath code, which compiles now (no tests, tho, as there are runtime tests for it).
- Removed TestRig stuff. That doesn't work in C++."
ff129beadfc840563a6d5f4bc410d502703c8ccd,Some smaller fixes for Windows.
b90398f8a64a3695811245f973666c62771a0f27,A few fixes for Visual Studio after added the xpath stuff.
963f4fc507fd0e1caebaf74418d42bb5ba8ee4ac,... and for Linux the same.
ce5fb52989459843c37c510b940cc498cb61c25e,"Merge pull request #27 from wjkohnen/buildsys

runtime-testsuite/Go: fix recursion"
3a95a36e3f04cc4084cf927cb0ca45c6020d7d7c,12% speed improvement for C++ runtime.
d18109eccfc8e6b62520432fd76b0dde42743ffc,Merge branch 'feature/addtests'
1cbbc1b7600970f6b8c6eb67ceb475c58ddc8465,Merge branch 'antlr-upstream'
bc5d6e9c4de1dd0f37e8a9421174144718bc7658,"tool/Go: gofmt generated code.

 * gofmt can be disabled with property -Dantlr.go.disable-gofmt=true or
   setting env ANTLR_GO_DISABLE_GOFMT=true"
b8fcb5f30dab2d2a4c5e22e752ab2249e843ce4f,"More performance increase for C++ target (25% now).

All shared_ptr<> now use const& for function parameters to avoid constant copies + locks. Ownership and lifetime control is still ensured by the owning containers. Code templates have been updated as well."
fec23ce98989ecc1d7d2d39266781f641b415197,Simplified equality check in ATNConfigSet.
e9d2a04be1b0320afe006107e0df70193bfda6d7,"Removed shared_ptr instances for ATNConfigSet.

ATNConfigSet instance follow a clear ownership (all owned by DFAState instances, which stay alive all time). Hence we can use a unique_ptr for memory management instead and pass raw pointers around where needed."
c3d6c20ee484a38b4f6b46664c5529b4914f79f0,"Fix the layout of some generated Go code

And some related fixes.

- Combined multiple blank lines between package decls into one
- Moved some doc comments to just above what they document
- Changed some doc comments to start with the documented thing's name
- Removed some redundant anchor and wrap ST options
- Changed an empty struct type containing just a newline to struct{}
- Added some missing doc comments to exported interface methods
- Removed unneeded parentheses around a single import
- Prevents generating empty const blocks
- Generates single-line package const decls if only one decl
- Indented switch case bodies
- Content checks for some template vars, e.g. if v defined then v else nothing
- Removed template redundancies, e.g. from <attrs:{a | <a>}> to <attrs>.
- Removed blank lines that group embedded types and fields separately
- Changed some trivial one-line func/method decls to mult-line
- Changed empty package slice decls to use nil, e.g. var foo []uint16
- Changed const int enums that used the ST <i> var to use iota instead
- Replaced separator in GoTarget.encodeIntAsCharEscape with a template separator"
81b464a37506e8971efc48a0c62c932374e8bc79,fixup! Fix the layout of some generated Go code
c920d57331e5fef0316fa8eb2d1a630febfd0026,DFA states member is now a set (instead of a map).
23eeae4b441b03b83c67c537400df35e79fe89df,"Simplification of the ATN config lookup handling.

No need for the ConfigLookup(Impl) class as we only need a way to determine if a config has been added to a set or not. This can be done much simpler by using individual hash codes produced by either ATNConfigSet or OrderedATNConfigSet (idea taken from C# runtime)."
b9c28d8c9c150190a55c8c045ebaa884f071b10e,"Signficantly simplified Token handling.

In order to lower the overhead when passing around Token instances via smart pointers and because the ownership is clear (token streams own them), these instances can be passed as raw pointers."
74886219839a5d403ff7fcb73e94b1db30e3db2f,Visual Studio build fix.
7ac5252fe9e594d29e4320e46c3c664d9ef78c79,"Explicitly delete copy c-tor + copy operator to for Visual Studio.

VS requires to have copy operations disabled on classes which hold vectors of unique pointers (clang is a bit more relaxed about this)."
0814d49cf6cea531c00b04071085322e9d8ff59d,Small alt check fix in LexerATNSimulator.
dcb0d4aa62babdd4a6f2c702440becd8df92f865,Some cleanup.
728af59528a46ab95d98919889f7a1386e19626c,A few more places that no longer pass a shared_ptr around.
e50b0ca8cda2c59f964034bfbffe606f1401065e,"Merge pull request #28 from willfaught/fmt-structure

Fix the layout of some generated Go code"
e86bc4efcaa1e765d91a52902394eb6d67d23ef3,Update README.md
e50bf8b4cf11b598334687d19ece7a72ab73bd4e,Update README.md
c8a9d75cfe19925d61a49ac93306fd3a538360fd,"Merge pull request #21 from wjkohnen/gofmt

tool/Go: gofmt generated code."
538455eae6929e917b473793e37679359ed61a20,"ATN runtime format, style, and comment cleanup"
4a8010b4ebef2595a75982c37c475516f6d04465,"Revert ""A few more places that no longer pass a shared_ptr around.""

This reverts commit 728af59528a46ab95d98919889f7a1386e19626c."
e68cdc3c0e32a1f70d55de6eae466604a165d7a4,A few of the previously reverted changes are still good.
dd48c0fbd5267973c434d3440906f2edb9344978,A few final touches to make runtime tests passing.
3e621970f5a518f9c7b242a664beee294a10ed71,"Clean up Go runtime char stream, common token, and dfa code"
c58b3a91895d2c061a109b57d3455a1b78231173,"Merge pull request #33 from willfaught/atn-runtime-cleanup

ATN runtime format, style, and comment cleanup"
29eaba44b049f63026bc8a65c1653cf58c735f9d,"Merge pull request #34 from willfaught/style-charstream-commontoken-dfa

Clean up Go runtime char stream, common token, and dfa code"
40b7e1bf1201fe571fdf472c109c883dcce75091,Fix parser tokens in generated Go tests
4e560db250682d56e30c8d3fd189b7050e11284d,Fix SetErrorHandler and NewBailErrorStrategy calls in generated Go tests
80f99b50da215998a60bd9b6201cd2d30e18d330,Fix Property calls in generated Go tests
c72ef6383ea51f46416102542a47cf564df4b4e2,Clean up Go test templates
c9ac8a6c61092e794c5eed9a835954dc038fde90,Generate Go tests
4a7ec859aa3b79e66129bc8145c2829e4e47528b,"Simplified parse tree listener handling.

No need to use shared_ptr for management. Listeners are, like the other main classes (parser, lexer, input stream etc.) provided by the application and hence managed there."
3b5b400d0356fc613ac57c7ec10a5648cdcdc40e,"A few fixes for the previous listener change.

Also fixed runtime tests again."
19dbd8e746ab74fb7a8c472fbd6e7b53e604839c,A fix for the Linux demo project.
e4498eca876b778a78a1aa182517910c164788e9,"delete js test code, unused license/readme"
7b1059ab6e8767ab96d83dab252ae459376cf862,Cleanup
c877bee8f10e2ccba3bda2554325c1197f4a0d6d,PORT_DEBUG fix
6c717889b25335b97eba335e5417b15f76a8d474,Make protected members package public
97bf8d63f8a03efcc4f46a7d4e2875ae37c71ee8,TODO
89442c6cb8905c243ec946f6656ae59e858fa596,"Changes for deployment.

- Settled on a final library name scheme: base part is ""libantlr4-runtime"" on MacOS + Linux. The extension determines the type (.a static lib, .dylib dynamic lib in MacOS, .so dynamic lib in Linux). No more mention of target language (cpp) or type (static) in the lib name. On Windows we omit the lib prefix, so the name becomes: antlr4-runtime.dll + antlr4-runtime.lib. We may later want to add version information there, but doing that automatically is difficult.
- Updated XCode project and CMakeLists.txt file for the new naming scheme.
- Added deployment scripts for source code (for Linux + iOS) and MacOS.
- Added C++ section in docs/releasing-antlr.md."
d718fa9f44e36894ffd2d9c05534e81e7f1bfa7f,"Windows runtime deployment.

- Created deployment script for Windows + updated doc/releasing-antlr.md.
- Created projects for both VS2013 and VS2015 to be used by the deployment script.
- Fixed trouble with a bug in VS2015 where std::codecvt_utf8<char32_t> is not properly supported.
- Fixed a few #include paths + a number of warnings."
8c62740f163a40c55f66d2a4f6d0abb9ae6ae4ba,Missed to commit an XCode project change.
a2f5cf12fd637505714bde6ceb260500ed18c73e,"Fixed + simplified loading text to parse from a file.

- The previous approach to load and convert UTF-8 data via a stream didn't work well, so I replaced that with a simple load-to-buffer + convert buffer from UTF-8 to UTF-32.
- Removed deleted Token.cpp file from XCode project."
1da7e8eea06e00193f50f2c7d1279dbe9f210232,Fixed #include.
f6515e5aaf6640fc8fb8a0c0a4611236ccbc8970,A few adjustments in doc + runtime tests for the changed library name + input stream handling.
01638eb246da7cc760f68362d4a842c9c8dda5ff,"Updated README.md.

Also need to mention that commit a2f5cf1 fixed issue #4."
a127f34a74cb6ecd57eb2a4bbf08035dfc4e3a8b,Changed Win deployment script to produce 2 smaller zips instead of a big one.
c8f80b167de5a0b8c3f16ee00f817a9e31ad9b80,Small naming fix.
c260ce75d13a20f016ea57fda0e1f347b79082ae,make it possible to add breakpoint
15430d4bf92f4aa187e5263467a2fa922f4589e4,remove unwanted semicolon in generated Python code
26c409103d3b21c2d400b571fb8f948fcdad34de,"Fix #1217
The root cause was that ATNConfigSet was not using he required custom hashing strategy for ParserATNSimulator.
The commit includes a number of additional fixes, related to code that was never executed before due to the root cause.
A similar issue is also likely to exist in the JavaScript runtime, I'll fix it later."
47e268dfeaaf0f08930c7d6428b57ee6a5f8c44d,"Merge pull request #1218 from ericvergnaud/python-performance-issue

Python performance issue"
a2d6b62a1a559366d4c8bee0b39aa362875f1ad4,"Update DefaultErrorStrategy.cpp

Property escape vocabulary reporting"
a6699eac3458245d9fed50f4c3289ebf29914d77,"Merge pull request #9 from nuuman/patch-1

Update DefaultErrorStrategy.cpp"
2352ff03e1b073185d1d1ea857fa311ce26a9148,getSerializedATN() wasn't properly overwritten.
c462e03126ab77c34f193493aeb54570bc3cbc6e,Merge branch 'master_upstream'
8046c28a5e3500cac269961dbe4cddd6fb487fd0,"A few more text escape calls in DefaultErrorStrategy.

And some cleanup."
c4785ab8becb6f1f2fc160a96de99ba9a5849fb6,"Document cmake minimum version. 

Document the minimum cmake version needed to build C++ target (if compiling with cmake).  Also, fix a missing space in cmake command between directory path and defining where the ANTLR .jar is located."
6de938dbf793a779588a044d8e1783dbf9c8fc32,"Merge pull request #11 from chrisheller/chrisheller-patch-1

Document cmake minimum version."
0fed0b0684935cd20df0c1b184c8cf508b79c221,"Following #1218, ensure consistency of ATNConfigSet hashing strategy in JavaScript"
53fab2c61ce06e315ff6098b7f23a735197f8ace,"Merge pull request #35 from willfaught/parser-token

Fix build breaks in generated tests"
a05dea54ec1564fa4280dc618bcc2a81846e6128,Fix test case build errors
edbf3225efbcffe9f16f28cbb42c5d95a5de9996,Fix LRWithLabelsListener to call EList.String
5feca3e33443cecc3d5b4e2b144a24699915c8ff,Fix ParserErrors.testContextListGetters to print strings
027dde5e3ebe7f4cfc95063610a7005cb17c39a9,LexerAction instances shared_ptr fix
1ceb6a45dd867882caa8ade626492aeac9e4591c,indent fix
22794aa2d870a71bf671a3f953a70217294b8729,fix liblib in library names
9fa56a4cd90f31d81c951c00396acfef7ce3f47a,Added lexer channels enum to match Java target
10270a8c779d5f67b60804b8c8bd1163d871e3dc,Created a new .NET Core project for the C# runtime of Antlr4.
de04c1c3912e0d7c2f3550492c647b37499630f4,Updated the .gitignore file to ignore some new Visual Studio configuration and user settings files.
cf258582f2937e1db213dd15c56a8b6efae8577b,correct spelling error
0d73b69d60932acabff59fa3e4ab14eb01e8eb5e,Created a new solution for .NET Core.
da6b0a4e1a80348927c80245d387b4a80e28e325,Updated the .gitignore file to ignore project.lock.json file.
4c0645d9c54244aaf95ad3a25170f4027131211f,"Reversed the changes to the Antlr4.vs2013 solution, so that it can opened using Visual Studio 2013 as before."
521eb4bbf0cf5104bd151f3f6dc30e76b7c5579c,Reintegrated the Serializable attribute into the .NET Core version of the runtime (there is a compatibility version in the Sharpen namespace).
76841da2704bda7a5b94c4cae4c50e218006a699,Added the the define constants NET40PLUS and NET45PLUS to the .NET Core runtime project.
53f2a67b9d00cf3eaa7a55e23da5707011ec1f8c,Add an iterative version of the ParseTreeWalker
ba5cf0060c4592909885d647b11de8bfde042f64,vector::erase invalidates any iterators at/after the erase position
95a93de83c4635241c5440d956e053659dcfaf8a,"Merge pull request #29 from willfaught/prod-name

Fix test case build errors"
faeb00a682f6fbf4ae9648d938e9d6957b456b5b,"Merge pull request #38 from willfaught/strings

Fix ParserErrors.testContextListGetters to print strings"
28e013e68764d727ce67ac93663489e652562788,"Merge pull request #37 from willfaught/elist

Fix LRWithLabelsListener to call EList.String"
7f42bc602b61319b302a8b205b576788b7a6c791,Add interface build checks for tree types and generated base listeners
24a26d90dfc32b8bed6bfdbc1d8d2da938f9b829,Sign CLA
d3027f18fb2c33f4251774cf79ca1ce88787548b,"Added code to detect and handle the UTF-8 BOM if present, otherwise the utfConverter leaves it in the stream"
78de1727909adfd2a5cb4cdc0ba93aafe4471256,Fix warnings with int to char cast
7ca7acd084cfd156316d1063920efededcf9cce5,Use two queues instead of a custom linked memory structure
ea316158047e08854f24ab4a87f04e1f8b5b9105,Use the iterative version of the ParseTreeWalker as default implementation
568c844d8595af6c86036b4c3541f9cf6d316790,Updated .gitignore for .vscode.
ef247f1939790222ecd8fcd76409e94def76ec24,"Merge pull request #16 from Nic30/master

issue  #15 fix"
91a7657d737da8b5b9f0cb8cce7e0fe5ec39765a,A few small corrections after the previous merge.
fb9d0678ec972aa2d9ba1b32970e85fe1aa50e8a,"Merge pull request #17 from nburles/add-lexer-channels

Added lexer channels enum to match Java target"
be2c98f64f7e00defa017142f932e3c023c7863b,"Merge pull request #18 from nburles/fix-intervalset-iterator

vector::erase invalidates any iterators at/after the erase position"
5e313471df87368d74542587c6e9263becde55d9,"Merge pull request #19 from nburles/fix-utf8-bom

Added code to detect and handle the UTF-8 BOM if present"
196e8ab53da7dd5cc61b0a11959bedd19c01afe3,Actually use a channel in the demo grammar.
d46ef90aa03066300752895d57fc57a1c5aa8ee6,"Fixed some cmake issues. Closes issue #13 and issue #8.

Additionally a warning was fixed (std::move prevents copy elision)"
ffd65e3ef4d99dc14eaaf07cfbba6bbe91448ef3,Added to contributors.txt
56b32a7b323df72153c5aa454e65db9c06bd054a,"Merge pull request #20 from nburles/master

Added to contributors.txt"
3a1c8035482057854d7879206c28ffd29b2dedff,"Add Chris Heller to contributors.txt

As requested for submitting contributions."
e8766953da357917b4d2fa21d25bf534fd92ec85,Added kosl90 to contributors list.
365e0f2df0f9127f5cfcd5ccb4764c8dd1742467,Fixed a few warnings.
bba03383d2b4273ce92781ee51dd56e30f218944,Bring chrisheller-patch-1 branch up to date
ef077b0b3cdf35defe0ec76f169c8379a880a229,"Merge pull request #21 from chrisheller/chrisheller-patch-1

Add Chris Heller to contributors.txt so patch can be accepted"
d6d50457ffbf1e22dbc3fbfed1aa4fb7b89017e2,"Updated CMake for demo to:
- Only require JRE
- Support out of tree build from antlr repostitory
- Support Superproject build with ExternalAntlr4Cpp cmake module

ExternalAntlr4Cpp module has quickstart documentation for people to be
able to start working quicly with antlr4cpp from the base demo sources
see source file for example."
7724dd2cd56aa063affca586227359a69db24732,"external project cmake example, needed set C++ 11"
4825417cf36cbb93fe8d12d61c574b8dabb56469,"Merge pull request #41 from willfaught/cla

Sign CLA"
6d33a6f19bdf80744211b35b15e97b494f964753,updated contributors list with my details
51b91f4d1b2e63d1efbf996f0536bff9288b12ac,"Merge pull request #24 from timoc/master

Updated CMake for quickly turning demo into project"
8a5f6815fe52a91ea219c6cf7dd231a76864d9c9,"Rework of the visitor implementation

The translation from Java generics to templates in C++ lead to the need of virtual template functions, which is not supported by C++. Instead we use now the Any class for results of visits and no longer need templates for that part."
eee86d8292e3fb4b9969ad8174cc83dfff17bdbe,"Small updates for VS 2013/2015.

Updated the demo project to also use static/dynamic libs like the runtime and fixed a few warnings in the Any class."
282e193e6a6da9cd7851fa82bf62b0d7e21307be,Corrected an include.
d089c8d864952050ccae7a5159c501cbf15feff3,Manually merged pull request #26.
3535830c98c1d77dd8dfc018267cdfd74bad3773,Fixes ATN serialization
3ee53a79db7388dccaf75b6c2777cee46fab1612,Fixes comparisons of IntervalSets
c60f1bb8f99dcf35f03c085aa1bbd2e740016f4d,"Fixed a bug + raised warning level in Visual Studio

- Fixed an endless recursion in Any, caused by the removal of one of the (apparently) unneeded copy constructors. As it turned out both are required. That leads to a warning in VS about a duplicate copy c-tor, which had to be suppressed therefore.
- Raised the warning level to W4 in both VS 2013 and VS 2015 and fixed all warnings resulting from that."
a025c9eefc60664bf18b8b4b5b5b1b83b2284d77,Compare contents in ATNConfig::operator==
903fa473c5ff7ebe6ec31541d87984e045282178,Compare contents in ATNConfigSet::operator==
739bf3a75622a303bf869de15b8dd0783adba804,Compare contents in LexerATNConfig::operator==
198da78c98b7826de19e4c8b01c79645506b4ebe,Compare contents in SemanticContext::*::operator==
3705e1b3fde089da2c74d5677f2abb2788f40971,Consistent formatting in Any.h + converted CPPUtils.cpp to utf-8.
64f1a654bd903ba8d0f2de50b1b3e125c56fe2f1,There is no need to call ->hashCode() explicitly
f3110fdd2212b92601f727c3316e047fedc0f934,"Merge pull request #27 from nburles/fix-ATN-serialization

Fixes ATN serialization"
8bbdbe0371cf61d39adf94f76a1f10bec442fe74,"Merge pull request #28 from nburles/fix-intervalset-comparisons

Fixes comparisons of IntervalSets"
63b5e61c15ce1975002d7ca7f5ad1e2bbbc9216d,"Merge pull request #31 from nburles/simpler-hash-calls

There is no need to call ->hashCode() explicitly"
183b7ce0a97556f2122074ca4c2ad591ca67dfcd,"Merge pull request #30 from nburles/compare-contents-not-just-addresses

Compare contents not just addresses"
a1d61541b747bf02ff6755df7b0654cb4f7971a7,Remove the std::operator== override in CPPUtils.h
db8339b4581996198cc381510822fc7a99b70b7f,Leave spaces alone unless escaped spaces requested
50d1f2c6ccdae608d9836c235962ebe6537b8cc0,"Merge pull request #32 from nburles/fix-whitespace-escape

Leave spaces alone unless escaped spaces requested"
8335d32b2d6521a38127dd37d736c37fc2ad8688,"Various smaller changes to fix compilation and other problems.

- Added new rule to test grammar to get code generation for wildcard capture.
- Updated the Cpp.stg template file for that.
- Made the Unicode hack (auto extend 0xFFFF to 0x10FFFF) dependent on a parameter, so we only use this hack when deserializing an ATN. This avoids trouble with intervals used in other contexts (like string offsets).
- Added a few operator != overloads, to fix compilation after recent changes.
- Simplified operands comparison in SemanticContext (uses the Arrays class now). Some cleanup in that class too.
- The abstract parse tree visitor now uses const& for Any references, to avoid reallocating new instances over and over again.
- The lexer counts syntax errors the same way as the parser does. So we can directly determine if there was any error by simply examining that (which avoids having to use a temporary listener)."
b05c8286b86dbb5de374bf82adbbb953d458358b,Corrected a warning suppression check.
fa0816d2439a261fdf9f0329a53b9743dbd7297b,"Without these tests, the demo crashes at PredictionContext.h:247 : k->hashCode()"
dc35da2a75516a2b90d4bf7b0519c2939ac1b5c6,"Only compare the addresses, as in Java"
a41774ef0da6002ef99660b3717fcf0cc23bca57,"Merge pull request #33 from nburles/remove-equality-override

Remove the std::operator== override in CPPUtils.h"
07ceea12451018d7859332e1d4588028b9f1f8f8,Some additional changes for removal of the == operator override.
78a12168bb31891f8ff5d52da46dbd177b6fd6ec,"Merge pull request #35 from nburles/fix-prediction-context

Without these tests, the demo crashes"
ccc1fc4939bac4d97f578b53ab398e941b189912,"Fix for merge problems in PredictionContext.

Apparently context references can disappear while such a ref is held in the (temporary) merge cache. Hence we need to do a full ref for the merge cache key pair.

Closes issue #12."
7abfbc60c6721cfa4af44424ac3baeb115da71e4,"Change deployment scripts location and updated doc.

In order to be able to build with cmake and to have a complete source package including the demo the deployment scripts were moved to the root Cpp folder and updated.
Also the releasing-antlr.md doc file has been updated."
b566551e77d8639b5f42d29e3d2faccf4e1fcec5,Levelize credits
6230fbe5d9babc51dc7fc388a9513e209dac1c7c,Add myself to contributor list
1869d9dac23f1c58af71c15fffc963a321285590,Reverting revision  [a2d6b62]
9371c7900ebcc2a15786592edb8ad6783277f22b,Sign CLA.
510e21d7cb442ad9ad01f29dd10e550866c8ff0a,"Fix eofToken access in ListTokenSource.nextToken() by Python targets.

At the end of the nextToken() function, setting the eofToken field was
attempted without the 'self' keyword, resulting in accessing
and setting a new local and unused variable. The patch supplements
the missing 'self' keywords for both targets."
543a06944075c3829bf4eb34e1ff181177db045e,"Fix comparisons in ATNConfigSet.__contains__ of Python targets.

The __contains__ method of ATNConfigSet used different hashing
function (hash) for indexing the config dictionary than the
getOrAdd method (hashCodeForConfigSet) which filled it.
Furthermore, they also used different methods for comparing
ATNConfig objects. The patch makes them consistent."
c15b0d9a363cc515899a11998c7b28d9601b237e,"Fix the initialization of conflictingAlts in execATN in Python targets.

The Java target initializes the conflictingAlt local variable
based on the conflictingAlts property of the target state.
However, the Python targets resets it to None. The patch makes the
initializations consistent."
ee2510e654cd1cbfa3145003e061c453e68d9d03,"Output formatting in DefaultErrorStrategy and init of generated member vars.

- Had to escape tabs + linebreaks in DefaultErrorStrategy when generating a text representation. Also removed a few explicit string instance creations on the way.
- Member vars in parser context classes that take (optional) Token references must be initialized.
- Fixed a warning that copyFrom() would hide a virtual function in a ParserRuleContext.
- Another attempt to limit genrating double semicolons."
a51b70995403cbb6ee26fc67759e56f2fa8c005a,"Fix .gitignore for target language directory

Also added .gitignore entries for Node.js & typescript dependency cache directories."
89987e35792809d2f5e76f9b60d28a64644a8049,+ comment in .gitignore
71a2a1295fb0b047dc1d23b50b15e09c38410e67,"update the runtime paths to work in windows
the old paths contained a / at the beginning of the path e.g. ""/C:/"" but the expected path is ""C:/"" and due to this all test for the targets javascript, python and c# failed on windows."
6e780c90bb7d453d76b87bb5ab1540d4cb4e4718,"update the runtime paths to work in windows
the old paths contained a / at the beginning of the path e.g. ""/C:/"" but the expected path is ""C:/"" and due to this all test for the targets javascript, python and c# failed on windows."
6f62821573bcf9a2234aea23838eed516670e3c0,"More optimizations of the runtime.

- Lesser use of shared_ptr, e.g. in listeners and some loops.
- Removed useless access methods for children in ParseRuleContext. The child list is public. Fixed initialization for start and stop nodes.
- Simplified parent + child organization in Tree and all derived classes. Instead of using overridable functions in various descendants we have now central parent + child fields in the base tree class (where they belong actually, considering this is about forming a tree). Users have to cast to the appropriate classes if necessary.
- Removed obsolete getChildren() function in Trees helper. We can just return the child vector.
- Changed edges member to an unordered_map, as this is a sparse container. This speeds up certain grammars by 1000% (e.g. highly recursive expression rules) and avoids wasting a lot of memory. This change also simplifies handling significantly."
982488f6cadd31c4d323eeef0e5680cd5fe9c470,"Merge pull request #44 from wjkohnen/clasign

Sign CLA."
c61735ea7e4ebf669fc2ce51f2439cb1f1443e75,"Merge pull request #39 from willfaught/interfaces

Add interface build checks for tree types and generated base listeners"
6638883d9d331549cc290c21c49a3853251affa3,"Second parameter is end pointer, not size"
6f31e94cb96e6bab89ee20612539d5ea481ae0b9,"Merge pull request #39 from nburles/fix-utf8-bom

Second parameter is end pointer, not size"
ae435d06c8786e04f8d683fe7475e81950fd09d2,add TokenStreamRewriter to Python2 runtime
5a0608be2eba18ee958217df1b1dba666087ba5e,fix op filter error when trying to replaceSingleToken
b0fc8ea0da110fce7fde04838125fe7c7db5cc82,"Added semicolon generation after some of the header decls.

Closes issue #40."
5afa240b97f1fad595a46fea647c5eeee6070575,Add Travis settings necessary for C++11 compilation.
82a22b51a47a6216b21cb4754134458451ad09e7,Trying to counter weird Travis error.
1df9d54e051047c22c270b00a4a0572801c93495,Reverted all Travis changes. Didn't do what I expected.
46df58d5d78d685b521fb9739941f8ca5771327f,The JavaScript ParseTreeVisitor now implements a depth-first traversal by default.
9766dff5d8ad8e157a6a1a170793b048629d286c,Javascript performance. Was add new string.hash function - murmurhash3_gc.js (https://github.com/garycourt/murmurhash-js/blob/master/murmurhash3_gc.js). Performance of the function increased in two times
d3ceee50430f77e2c3672f2ae925e29b28400186,Enhancing the doc
401f53fa3cec96b3ca48c84a0a33dd5a975f1be4,"Merge pull request #1289 from ericvergnaud/docs

Enhancing the doc"
5b461ddd772848cd6672b9b4cf75f260507288dd,"Merge pull request #1268 from andjo403/windowsPaths

update the runtime paths to work in windows"
2f92b475003e1dd4254a519a88bf10c3667de1c6,tweak links in doc
fdfe97c813f0dae3842f714f87fd98431312f2d6,Merge branch 'master' of https://github.com/antlr/antlr4
9a7e0b5e4e1c923bc6b3d03fb239fb0f1f75d648,"Merge branch 'master' into fixGitignore

These are changes from the upstream master."
8e44b19ec92dc4bfc47a7acae14bc326a6ebb970,"Update .gitignroe fules for VisualStudio etc.

Avoids temp and user-preference files from getting commited"
10f5ebe22a51cfdcc69b48e1a9a7de37a83afde5,Repair comment
683cbee2e7b2b1451690887da60d4dc37185c078,"Merge pull request #1261 from BurtHarris/fixGitignore

Fix .gitignore for codegen/target language directory"
19345919de32f48e3d16def5a810a04959ac0d1d,"Bug fixes + XCode 8 updates

- Recommended project updates from XCode 8 applied.
- Bug: ANTLRInputStream not fully initialized when constructing from a stream.
- Account for more than one temporary error token in DefaultErrorStrategy."
0b2d5304a5176531edd249d143dca14b099b6d0d,tweak links in doc
03d5fb1244268fff521df5c2e7d89c6d1361d5a7,"Make Python targets more pythonic.

The Python implementations are completely synchronous
with the Java version even if some of the constructs
can be expressed with simpler Python solutions. These are
typically the all, any, count, next builtins or the list
comprehensions, etc. Beside using them makes the code
clearer, they are also prefered by the standard and can
result in performance speedup. The patch contains such
equivalent transformations in the Python targets."
ee3e918e4ecc4edce0f93dc2ffa374bcadf4c7e5,Exclude also vscode project data when generating the source zip.
3b98c1136e0d1f73a497d81a1a40aa873db72757,Merge branch 'master_upstream'
28eb19f52e6731389f3d4bbf1c12182180fb72ce,"Explicitly delete copy c-tor and operator for DefaultErrorStrategy.

This class holds a vector of unique_ptr instances and hence cannot be copied."
5ea09b30f2094f3f488682d6fc513eba089265fe,"Merge pull request #1255 from renatahodovan/pythonic-python

Make Python targets more pythonic."
e9aa00e05b646f7d359717a6369d3f0aef6967b3,"Merge pull request #1172 from renatahodovan/default-pass

Add missing default pass statements to Python targets."
d9047112f5e23030aac0579f5185efe95f130acc,Appveyor w/ semantic version
7e2213dde70381a3fe4b6d163050b0c2378b969a,appveyor.yml cpaitialization
e71ebef3ec7ef8bbde6676e99a0f3e96ed5c12c3,Adding -q to mvn command line for appveyor
7ebfabc17500f72d86a4e2c25f41f5a979c92f1e,Addomg verbosity: minimal fpr appveyor
80a75894c8d15d8ebd1173366103c529b679fa07,"eliminte trailing whitespace

from last line of appvayor.yml"
f983fac7c73bb8d6e9aca9e7fbd8ec17bdbecf0d,"Added support for hidden symbols on Linux and OSX.

It's now possible to hide all symbols by default and publish only those marked with the ANTLR4CPP_PUBLIC macro (same as for Windows). The included XCode project makes use of this option now."
4394cd20b07227f4c615f7e87b9eba520373e63c,Merge branch 'master_upstream'
5c63bc9a07ef28447070b579e91befc2e6fa5d96,Some clean up and xcode unit test fixes.
1b2b9545005440e6a04f915e68390383b098f533,auto locate go path on the windows
de4df872fe584506211a49e78d7e6a19e2f39fc4,"Updates to get all tests green again.

- Had to take back some of the message beautifying, as this won't match expected runtime test output.
- Updated C++ test stg file for recent runtime changes. Regenerated tests (only one file changed actually).
- Reworked C++ test preparation. The C++ runtime is now built on first invocation of a test. This works only on Linux + OSX/macOS. Windows needs extra handling."
8280beb5646a1c271fabba9c061cc5c5b6a61e14,"Refactoring of further int values, mostly converting them to size_t.

- Switched most symbolic signed constants to unsigned variants. Redefined EOF in particular to become (size)-1, to avoid having to use signed token type values.
- Introduced INVALID_INDEX for all previous -1 values to indicate e.g. not found indexes etc.
- Added 2 helpers to convert between symbolic and numeric form (mostly for intervals and toString()).
- Removed many no longer needed type casts to size_t.
- Updated templates for these changes.
- Limited runtime tests to C++ tests only, to see how Travis CI copes with that."
70fd9527a4f0eea82f2437459fc98fe982ed960d,C++11 for Travis CI.
a7b9499230fc0c80aabf9d730f241d78e736181a,"Code generation + Travis CI fixes.

- Had to adjust a comparison <= 0 to the new unsigned EOF.
- For testing: extended the runtime tests to all C++ tests.
- Install uuid-dev in Travis CI in order to be able to build the C++ runtime."
0e0ecfafdeeae88dc921a99ba1f1bd2999129d08,Fixed a number of warnings for VS.
c968b5209e68e980ee5324f8d8f55e404a4ab0e8,"alts outer-context flag/counter in ATNConfig is now unsiged.

A few more removals of no longer necessary casts."
bb5d7ef0b6087627b5c5944d55fc60a3e6ef0301,Set minimum cmake version to 3.1 for C++ target.
fc5c1a29f90f1a1ee53bb64647cc6d19ef30cfc0,Next attempt to get the C++ runtime compiled in Travis CI.
e8f00f807420e668b2367cd8f47254d141333c36,Another attempt for Travis CI.
6c225337aef73d91ef79d05cbcbcac54b9380722,Trying a different compiler in Travis CI.
bb9a08b1580da5467be7c1ba71a81f9351369a2e,"Merge pull request #48 from runner-mei/patch-4

auto locate go path on the windows"
9b76bc6a719994b0cfdd70794b8ae2715beed4cb,Update Go.stg
499d9d3f89368592549f1ec3701f5a7616113a4c,"Print test arrays in java style (#50)

* Print string rule invocation stack array in java style

* regen runtime tests

* Another array print fix

* Fixes to print array of terminal nodes:

* regen tests"
2e92b38bf77a89afe2c1a75f5dd9eaf2bfeff0a7,Updated unit tests after last refactoring.
a5859fd54e69d113fdd7f7415bd4d1c0d9b7abd3,"Fix PredictionContext merge() typo (#61)

* Fix pred context typo

* Adjust array lengths"
10f15cabf8b8a8a5a182b89e84d6b96b1bbfb9d0,errorNode() impl (#59)
a90c9d666900f7f65ab0b34dcf590daa1d29653d,started work at the Visitors templates by making a copy of the Listener templates
0396561520690168ddfd87b4b1a1f0562b08c624,made visitAtom work for terminal nodes
eb292adb18a923cbcefd2296d998c58665b6ec47,implemented templates for the JavaScript visitors
cb590334bb3ad84f538f6d9508d9fea45a683897,the visit methods now return a value
4842e61a0615c7f1b8d883973047fce2d616ebe4,generated test sources
e5bab64e4bbeb2694636e3cee0aca4b21b02383e,"ignoring the visitors tests for Java, C# and Python

The template implementations for these languages is pending."
75dd652d7a83c9c9a6342c410be04e1aa0d89f8e,"fixed visitAtom implementation

This implementation somehow got lost in rebasing."
145bfca6923f599f8c4eb285c79ab34c0b88f956,Update lexer_action.go (#62)
4897bd857138e5ff2e4da2f611923f16c1e1bf07,"Simplified memory management for volatile parsing part.

There are 2 parts in an ANTLR genrated parser where memory is allocated: the actual parsing (with or w/o creating a parse tree) and the prediction part (via DFA/ATN etc.). The first part is highly volatile as it recreates parse tree instances (the class) on each parser run. In fact also lexer tokens belong to that part, but are already managed via unique pointers. This first part works without any smart pointer now. Instead there is a simple tracker class which holds all created references and frees them when the parser is reset or destroyed. This is a bit less optimal if the parser is set to create no parse tree, as created rule context objects are not freed immediately (like with smart pointers), but during reset. On the other hand this change gives (depending on the input) a nice speed up (0%-100%, after the warm up phase). Additionally memory consumption drops by a good amount.

Everything in the simulartors (and interpreters) remains unchanged. This is the shared prediction part."
a4e343806f8e91870cc75af4e093eca717b255e9,"Some small optimizations.

- No copy of a DFA state during ATN deserialization.
- Fixed memory leak of locally created s0 state in DFAState."
60662c4b70db721e2db6305d1ff00b1e2ca186dc,"Fix remaining tests (#64)

* Fix pred context typo

* Adjust array lengths

* PositionAdjustLexer test fix first steps

* allow virtual method calls from Lexer

* Hopefully fix issues with dup namedActions

* Make parser members

* Fix testParserProperty

* Fix LeftRecursion test failures"
42347c078b4bf45f9f8b16f6662016ee9e727905,Fix merge failure
29c1a9f2222a7fb28c70997e5b942c558dc37fbd,removed reference to local node installation
5cbc1b0ba87fb72d7f99128240d9fa4b240e5992,"Merge pull request #67 from pboyer/upstreamMerge

Merge with upstream antlr/antlr4"
57f2e0f00603479f13d9cffe0c0e80f6ddd3d997,Introduce EditorConfig for easier configuration of IDEs
07f57564ecfb1f911a76228b1e4bea2fea4c85d8,"Update contributors.txt

Added cgudrian"
5b8d262c8e0946e3db52b3736af6dc4f44e20fbd,Updated the editorconfig based on Sam's feedback.
3f103dab1ac14a4f2465388a7c640849d71bed40,Add default .gitattributes
b889c49bbe6cbbee0a3dead28d226e48593bbe91,"Merge pull request #1305 from sharwell/line-endings

Add default .gitattributes"
4312b37828e93836a8238a98824af5ffc1ed8f1c,pull test changes in
0bf739fa737555e923d777ae178c28b39f33026c,Added Niels Basjes to the contributers list
6d59acce4cd335d4a6d8bd64000b27a7b910908c,"Merge pull request #1304 from nielsbasjes/EditorConfig

Add .editorconfig"
8d0ae8599e755110c176b5462e10e768967b4174,"Merge pull request #1221 from ericvergnaud/javascript-consistency

Following #1218, ensure consistency of ATNConfigSet hashing strategy …"
24443860918b9c5c81552b8651dc1876e371690f,"Remove JavaScript PORT_DEBUG, re-enable runtime tests for other language targets (#69)

* Re-enable runtime tests for other language targets

* Fix typo in js code

* Remove PORT_DEBUG statements

* Fix missing

* Fix testAltNum"
285c7fca6c953092ec4b2af69d1747447fba85a8,resolve contribs conflict
aabd148bf47d25307b5d0f7efb22fbb6bc8ac066,Merge branch 'cgudrian-dfs'
52523024e043f4c5880073021f5e214efc1bdf01,"Merge pull request #1306 from parrt/master

Enhance JavaScript ParseTreeVisitor, add tests (other targets ignore this functionality)"
014070de66de68e943bb159779372e63da5e4849,"Converted smart pointer for the rule context in RecognitionException

Since we pass around raw pointer for volatile references now, we must not create smart pointers from them or we will get a double free."
aabf4baf607f5f48e26b84cbd88b2ee67726ac41,"Added default c-tor to ParseTree + improved createInstance.

createInstance now use move semantics for its parameters."
9e77edcb34bed01d755498aec33bd0978bfa0573,"ATNState::transactions improvements

The transaction field was access with trivial getters and setters which server no real purpose, so I made the vector public and remove all the obsolete accessor functions. This simplifies the API (e.g. use .size() instead of getNumberOfTransitions()).
This change required a few other changes in runtime.

Additionally, I radically cut down the ATN::toString method to return only what the Java runtime is doing instead of a full dump of the state and it's transitions."
191b8f9d585c6ef2f80a5e45cfe6f2faea28ad9d,Cleanup var statements
07f7dae78f450a83da381e5947aa68fd4e400723,Fix type decl
adef6f690a32c68f4bf47718597617d4a86a2403,"Cleanup var statements (#73)

* Cleanup var statements

* Fix type decl"
951d0f06d781d03dd21d711dee6433491cd90b3a,cpp runtime: updated the vs2013 project reflecting the last changes
c9f85f1d6aacaa2895468b03f515411b48734554,"Merge pull request #41 from FloorGoddijn/master

cpp runtime: updated the vs2013 project reflecting the last changes"
961f087d7ad5bf081c90089dc99a86b7036a04bd,Allow paths as tokenVocab option
0463e14e552f0a6f0566916e8e3ba197935b8fc6,http:// not allowed in go import path
48e1f060d7658bd2f6c9db1986e81c893623eb52,"Merge pull request #78 from pemcconnell/master

http:// not allowed in go import path"
f794820aafd56cdb1d6aaa448f71ecd00a24ce59,"Reworked mutex handling + updated C++ template for a var init

- Mutexes have been consolidated. Instead of one per DFA (which can easily get to hundreds of them) we only have one mutex in the Recognizer class and all other parties use this for serialization. It's only about protected the DFA anyway, which is stored in a recognizer (lexer/parser).
- ATNState::getStateType() returns a size_t value now (actually an enum).
- Replaced checks via RTTI for transitions by the (serialization) type of the transition, for simplicity.
- Added some missing initialization for fields in certain ATN state classes.
- Fixed mem leak in DFA by shadowing the s0 field. That way still have a ref to the self created instance, even is s0 was replaced later.
- Added variable init in code generation for a rule context declaration (e.g. for labels)."
1feef18e3eb0fb0b937d7b5f079d1278a1405151,ParserRuleContext init members
f3c55be33cd94e9bef43256bf3bffe165e374eb4,fix RulePropertyRef_stopHeaderHeader typo
af624e132116fbea1d09b03a998309eb924138e7,contributors.txt update
b9f81ab04edf72baf5fc5ccc6a2a67f1205352ce,"Merge pull request #45 from RYDB3RG/master

small rule attribute fixes"
8b16ff180a24b897c8195630613f2b538f6e5c17,Fix a few typos in Javadoc
6a8a93286fe22ed36f32544c6ebda2383dca26a9,"Move a @since tag to start of a new line

Javadoc requires block tags to appear at the start of lines."
2f628a1106054946b6e3bfc4a279a3203329f879,Fix another typo
f134ef930fd97444106c4c94730b56282e0c1f5a,Fix the expected error message in test
3e1c0282a2f3b26505f8d322d334cbe65c8d34c2,"Update contributors.txt

Add Sebastian Kürten"
d9c6ca4a35a0530755e893d06db4d06559d14985,Travix: Update to current stable Go version.
aa568711d93c54700f0b2fecb1a3c05fc718499f,Remove PortDebug
0541f34a7e602db8f74bf2b7a097f4c137062174,Merge with origin/master
8b67d2418ca1a923ec683916b8b22ab5ec97c927,Move go target docs
f553056a2b23c894541d379a6cd2d67a0730bb2e,Fix unused import error
95dbf7b44b68d5b0e8a9655424c525653e49fa98,look for go in path during tests
85f2a87840379d2dee785e076429a2be51368499,rm recognizerName field where possible
1b7fc4119d8da62aa8818776e3e2c3b5e5705dad,"sign cla

sign cla"
e0521400cbf47a078eafbf8581a7fac244df0cf9,rm need for isRuleContext in templates; refer to underlying grammar object.
8b8094c044448ce437c73ac0ab4b660625ffe933,appears to be an ST bug that doesn't see arrays of len 0 as missing; convert array to List.
e71e95080a2d1fa631ab13152f6651727d894779,"Merge branch 'master_upstream'

Also updated the list of ignored tests in the Cpp.test.stg file (lke it is done for the other targets)."
c0cedc424ba6dd6c39d442e21ac3b52534f59e61,track different types of StructDecl elements so Go can do setters/getters.
75794a588b02dcda824070744ebbb4f507c9523e,track different types of StructDecl elements so Go can do setters/getters.
40e19e5d3751872d83365ce1ac3ad1c9e245973d,"refactor so getRecognizerFileName() etc... delegate to Target; default is same behavior. adds ""is header"" arg as well in prep for C++"
5e9211b093f92b59368fbdf677ecdbabc67eff58,Re-enabled all tests again.
6d022379bcf9e8033f2ef9f67f7718f9f0662fc5,Pull in parrt's branch 'model-updates-for-new-targets' which appears to have freshened some non Go stuff as well.  Simplify Go filename construction.
7eb6aec61205a15413b0a0f8853c72a63949bf7c,Add runtime
2c98b5d325f5bac4d2cad18fc8662722c14f2fa9,incorporate in a single commit all changes needed to support generating header files. many fewer diffs with C++ target codegen now.
abdb0b6a46b0d278a0da6ea03c0236c3e319cf9a,Merge branch 'model-updates-for-new-targets' of github.com:parrt/antlr4 into reduce-model-changes
62badff2e8373ef4f5e97f6caba3c9b35a3a29f7,Pull again from parrt's branch 'model-updates-for-new-targets'. tests pass.
0799e838bbb9169d609fa04667a51ad6ae40a40f,weird. missed a few files. these are to simplify get filename functionality.
8ebd12918fc4d127876b85856e953ee7f40a0de4,Fix merge conflict
0bfeb80aa21335cdeb22662db5d65f3ccb8f179b,Merge branch 'runner-mei-patch-4'
9728fd59bac1412d40d78437ada1008abcd9641a,Merge remote-tracking branch 'origin/master'
451fe239c9efc2e2c59385103000d443c70b2c0d,"Merge pull request #79 from wjkohnen/go1.7.3

Travis: Update to current stable Go version."
646b35284eafe44479e76fd4ffa797325f80e8a5,"Merge pull request #84 from pboyer/runner-mei-merge

Runner mei merge"
b15c37fd022e69d10c189c6e26e87b78aa2f47b4,"Merge pull request #81 from pboyer/movedocs

Move go target docs"
08ecd5109ee3e6f72445850f6788f4b4616f7b90,"Merge pull request #1324 from parrt/model-updates-for-new-targets

Model updates for new targets"
6472f30d2f5f7f6b08cdae34e453f24f8424c491,"Merge pull request #80 from pboyer/removePortDebug

Remove PortDebug field"
b444d516488b8857437fd612e1668594e04a29e7,Fix contributors merge conflict
485465ee7a85724455e7748a8372f96438a7e913,"Merge pull request #83 from pboyer/reduce-model-changes

Reduce model changes from parrt"
37631d1197d1c3e43be1022db85236627066dd79,Regen runtime-testsuite
fc35818c5249dda6311d31845651a025a6386b45,Update import statements after merge
44a9c48ddb240b89229be938e8a77553ce83dd34,"Merge pull request #85 from pboyer/testVisitors

Disable TestVisitors suite for Go runtime"
028ef8e8e1e02e6600e9bbd3b7f78fcc5f2f2f36,"Merge pull request #1321 from pboyer/master

Add Go language target"
741407b2853c68009bd18f69cd5311b48849808d,"Merge pull request #1326 from pboyer/changeFork

Update import statements after merge"
cbbdbaac7598f34f677c037e23fa99db9e8878b9,add Go target links in doc
803e72ba388997b3648d61199115dba07765152c,tweak
bcfa70c4e8e152d843136b67d9d4d6df992f18fa,test templates were missing visitor-related templates. slight improvement to test generator.
95c850e5f8734c6ddb2acaf0fde4094a4f72c63c,set version in prep for 4.6
cd5744b83ff1269a0cc0cbfafc3446fe2cbe95cb,Fixed runtime tests after latest changes.
6d12b85e10dca5de2e4cccc5ee96747890ca52f9,Update contributors.txt
0c6ee8fa6243b0128ea6c3f01826da5e870864b0,Update actions.md
e5ec462e2239e788cb01c95db6eac41ed8ff8194,Fixes #1337. Add's sync() call back to LL(1) decisions; all targets updated (causing failed test in Go).  Altered test for new output of errors. regen'd tests.
bbfca7c99c8021659c3bca34530d0aa29af6f22e,"Merge pull request #1340 from parrt/fix-1337

Fixes #1337. Add's sync() call back to LL(1) decisions"
ffaedd209d95f1aeda0a32ff6905f4f3e73798cd,Set version in code to 4.6.
5337b4142b72c00c48c0f46393bfa29e97cd0df0,"Merge pull request #1341 from parrt/set-version-4.6-in-code

Set version in code to 4.6."
71c52eb0fa8dbf231a8f0a676b7ff8fe86698564,building 4.6 runtime requires 4.5 antlr mvn plugin
3b3fe3da579275b3a1bee91d0914a8b76b356615,"Merge branch 'master_upstream'

Had to resolve a number of conflicts + added code required for the C++ target to generate header files, after the recent changes in the main repo."
92b032820e66177f251a2bca46a974228b4e7893,Merge branch 'master_upstream'
1c3a5879e6a2617708272155c483713488419860,Set required runtime version to 4.6.
893ecf981bfbde2cc43c1a1c6d2502c4b713aab7,Update Go documentation
51d38110bed1f2f057d997b20d4f3a849d523d07,trying a refactoring to test if i can push back
3d0678508bd7b383ca8ddd5b42dfba184c4f831d,reuse code to builld named actions. all file model objects have it now.
f8bec27d6d1129bcd2a4dbc05d87c92e5a37e92d,bring Go target templates up to same args as others.
3ee3093f88a221e0af44f784e19b5e8282614159,fix some issues with tests after merge
b366a8405c6ce00b07ec5f300daf721f38bad0c0,fix some issues with tests after merge
aace3de3805ba2447c67abafc72519f3b6dcdaf9,Fix bug in interval set
9bb49842efb9dae956a3431b4934bf841f4131c4,cleanup
01e3ffa7e5b32cb9e0de8e667935fd626bfe1f3d,optimize imports.
5fc57fb0b2897a3aa376c3b6e0c35439eadd1b03,Go needs to mimic other tests; regenerated.
061177fab0f3b3ac2342e20d8cf6d7bf68e4339d,tweak doc
8fc8b6e56cfc849f910361e3dd4a8a917d6caadc,"Merge pull request #1346 from parrt/merge-cpp

Merge cpp"
f29a7940d88790677dfee4b7970cd78a699d0696,"Merge pull request #1345 from pboyer/intervalSetBug

Fix bug in IntervalSet"
b8ac1ebb3b4ea2a4f5bb6aff30a1750e7e3071f1,unignore 2 tests for Go
29fa9ba36e5d7ad29ff7bf022484e35b3331f874,"Merge pull request #1344 from pboyer/patch-4

Update Go documentation"
19e7e9ee5aaf6fd10072d9bf27af121c1cd3be13,Merge branch 'master' of github.com:antlr/antlr4
da342af01e0e67b2a57040e1256fab761a422e1d,added sync() per other targets to LL(1) decisions
7f16fe62018a07d5de1c325f123970990c5aa787,alter test so it works with all targets
2254369bb7bef6aa905cf8662c33923edf0731d0,Continuing effort to get Travis happy finally.
e62c267f7c417d936a819a2765b9b8266a34db92,Add a bit more logging so we can see what worked and what didn't.
5bcbea82e38bdb354d92bd95db9108b54357979f,Log compiler path and version for debugging.
5d783bf82ecf2351226aa2276dd81509c9c66b3e,Missed to catch exceptions for compiler version print.
dbaf5189bcbd0b61f8f5864a6843527b16630094,We need g++5 for C++11 with codecvt.
b9307b548f0f5c8d649fed5212df3420538a9a24,"g++5 couldn't be found, so try clang++ instead."
ca9ee65da978148023e69ce537e9c7dea66a7788,Enabled docker builds in Travis + require a more modern clang compiler.
6535df81c8a3b8e76a08d396df623146a6a78b4a,sudo is required
57f2a157ee1fe2d446b92f1092d43ae9127c6025,"Search explicitly for clang-3.6++

When installing a different clang version in Travis the original clang++ binary is no longer available."
490604b1021d81230154dde8cab6a904391b9e01,Focus on a single compiler to ease debugging.
0da507aa1d9c8f2efa80bc4d4b42956bc609bc7b,Let's try clang++.
e0090254aa7aac23ffa076863f67abd99547a052,"using new preprocessor macro ANTLR4CPP_DLL in stead of the windows defined _WINDLL to define ANTLR4CPP_PUBLIC and EXPIMP_TEMPLATE for dll configurations.
There was a problem when the static lib was used at a client dll ( which itself defines the _WINDLL)"
916d602561d0367a6f568595641bbc96e769b2a6,Merge remote-tracking branch 'refs/remotes/DanMcLaughlin/master'
2593b1a20dfea5f479f10f2befc0506eff298ceb,Trying to find linker error.
ea17830f32659d7c7fd5bfb2581e1a75f64e612f,"Link failed with sym-linked library in local dir, so link directly."
510a895a08e0f16513c6e9019a4cde58b7837d07,Need to see the lib folder.
dec5aae9ec4c7a9d4f297b406135f9052c24dadc,Bring back the sym-linked lib but use the correct one.
d3d51267746aa3002825dbf66af01aa984086b3a,Need the test folder content.
90b369815709bfdca019cc6ca12071e0a19ad049,Simplified running commands on command line from Java.
0a6717596fb9be96d526fcc824e6a96198f211fa,Preload the antlr runtime for tests on Linux (e.g. Travis).
da57be191af074a33a7c21492a12b8367d798a48,Avoid warnings when building on Linux.
e6703267d9acb6bcaf6baf5c922b53b9d9213fb7,"Don't let compiler warnings make the tests fail.

Added debug print for better error recognition."
bed38c6b08f4f25f4e19622226dd42338416ef94,"Cleaning up for production use. Tests succeed now.

Also re-enabled all tests, so we can merge upstream."
74d094bee797d8bf17df1294b5367ee815ebc975,Merge branch 'master_upstream'
8450599e7530d5f76b466af731dfadc79bc4d415,Enable tests for all targets.
be585f6a8fe3e44d6c3504e6a1fa6e6add448633,Make graph accessible to the outside
c5f73abb44a72fbb4ce0817478c34a819f15ee3b,Factor out helper method to make it reusable
7944fafcb24411b32b1cb6c4877d2e41733a409c,Adds grammar dependency management to have grammars processed when references change
5d8dcf019d5dd6343454f966ddccea224b0033b0,Adds unit tests for the dependency management
11daaf9333d6ea15d34fbc3a3926ef76cb088146,Use Java 7 compatible lifecycle plugin
068ff9d3d6ce7e43b9c36ecfe95c12bb04c3b683,Cleanup; explicitly handle checksum creation failure
ea7a61c483a570007384aeafbbf62e2d39bc3d05,"Fixes #1327, Fixes #1352"
ef29c1db7147e20decf7528d724f726ea2f016a3,travis updated to use jdk7 not 6
253cd172a442d60fef2df2f7d7f72ef140bb7d03,"Merge pull request #1351 from DanMcLaughlin/master

Fixes to make the C++ target run on Travis"
08e9776a4ac507d931e8f3e282b2778cd7640af0,"shift template-based runtime test to legacy, new mechanism uses annotation to get multi-line strings into java. all tests pass minus about 15 in C#"
ccad5bd9bcb8bd3df866d0d89ea4040b23beca77,merge in new runtime test mechanism
a7ecf0332f0b9ce0e7b5217a127eabba4e8f49e3,"rename the SingleTest class and and Java doc.  make errors="""" actually set to null to be more clear."
d534efdf9a744701e2926c2e2eb1843cb517130a,update doc on the runtime test mechanism. change the name of BaseDebugParserTestDescriptor to BaseDiagnosticParserTestDescriptor.
4290bdbaa0c9bd94c31f090e55647963dbc3c322,"Merge pull request #1357 from parrt/doc-runtimetests

Update doc on runtime tests"
35782f59adb70d54c339696f3a648de0db09b2c0,Adding hanjoes to contributors.txt.
56c5508a376978a0ffde7061bc6a1436857fa79d,"Merge pull request #1358 from hanjoes/master

Adding hanjoes to contributors.txt."
6e09f0834824f9b9e1e79266fa0e33f4dbe243cc,InvokeRule without Fix without Temporary variable
13fbdbb84097ebfc1c79877ffbf800e2b18ea208,Sign CLA
af0ac9e2bb94eb1536961c06fe85ed29e1940bb5,"Fixed a number of mem leaks in TokenStreamRewriter.

Also added a workaround for duplicate ATN state transitions. Looks there is a problem in the ATN generation by ANTLR which needs investigation."
e5aa03c0b03d48c0d778dee1a1ff2b7669d1be75,Merge branch 'master_upstream'
9ac9c1c79a2314dabe1a5bfeb0b4feeb551d79e4,"Overhaul of the TokenStreamRewriter class.

Fixes bug #49."
3062d09e92fac36fa1b089978d768a45feccd388,"Merge pull request #48 from FloorGoddijn/master

using new preprocessor macro ANTLR4CPP_DLL instead of _WINDLL"
c35aec6ffe7c75ac4725f420db26d03081f92221,"optionally delegate assertEquals to RuntimeTestSupport delegate, to enable target specific assertXxx behaviour"
04a34016553637db6df8c3f30dc737d9ad137734,disabling legacy tests because the overall build process is too long for travis
7efb6c240ac145336d4358c8b6734b6c2b7f4c25,"Merge pull request #1364 from ericvergnaud/fix-c#-tests

enable target specific assertXxx behaviour"
3abb19325747fdc6cfffc59397936f325db2138f,"Merge pull request #1363 from DanMcLaughlin/master

Some fixes in the C++ runtime"
03fa75efba1a494f2fd83c00d3685589156b4fe3,differentiate prefix/postfix type decl.
5aae2edb24899d37051642a1b250f20ea228d52a,"support x:T notation in rule arguments, update documentation, improve [...] scope parsing testing"
4f3c7738f307a515f9ab710c660ddee7f34a72bf,ignore :: in C++ arg declarations; add test.
30fbe07b2b05211b832b5e1e31b0a5627e5528fa,"Merge pull request #1365 from parrt/add-postfix-types-in-args

Add postfix types in args like x:T for Swift target"
9675c822a93f1cdb505ba15a3922646c214cc2fd,"update doc, add lock so antlr used atomically in unit tests so we can run in parallel."
c37848cfc58e8c1a75ab3f03af1b9a537e21b0df,"Merge pull request #1366 from parrt/multi-threaded-tests

update doc, add lock so antlr used atomically in unit tests so we can run in parallel"
3d8f81a63e1f2084dfbbbc73f7286f42e8a67d60,update contributors.txt
ab8d17472f6bbb9c8a8d82284a429f5059e0e52f,"ANTLR4 generated incorrect code to access return value of recursive rule

Incorrect code was generated for $e.v in a rule like this one:

    e returns [int v] ::=
           INT       {$v = $INT.int;}
        | '(' e ')'  {$v = $e.v;}
        ;

After parsing ""(99)"" the result would have v == 0 instead of 99."
ba4cf0677b7bae7fdd601207b0fd91c6663838b5,run tests in parallel on travis
cf5a79a5b234c41937dae28ac2976717168e964a,"Merge pull request #1362 from sridharxp/stgwotempvar

Stgwotempvar"
b4d8982e9503788abd30cc5389f704ac567965de,Merge branch 'master' of git://github.com/NoodleOfDeath/antlr4
5adf79121f3e81187a5426d1274c0355c15978d1,"revert Go ""fix"""
02a35589fe5b975c70b50d2017a33a362b411ecc,check errors before output value in tests
1aa3c957ebb6f7060decbd78a1be62c67da2619c,add test for extra atn issues. currently failing.
125a509e4e389d839a67254844c73d5a74f1e49e,Fixes #1369 by removing any redundant edges.
c5acec19dbf4b4874611957b4505cad591ac3cc9,Move what used to be AfterGrammar template from a test in legacy runtime tests to tool test and remove from runtime test functionality.
0ffb0310d296c6abb3018f858290c8a73be62eba,rm dead code
78155af499f821f91328ef68f7d6151bc43fd168,add test to verify https://github.com/antlr/antlr4/issues/1369 doesn't drop two empty alts.
5f5a8949f6e28bf7a9d82e72e047393bcc75f6d5,Handle removed dependency
00347217ed4e0dc467f6fdaee82de7fc7d5bd5ee,"More cleanup; use save Collection comparison, fix Javadoc"
7d83a3aa9ce1da8b7515f042be52c7bf97140ffa,More cleanup; use save Collection comparison
c8cb2fde730516a1d1daef8d2c02a8a7bab81305,add binary test case
1931ff72804583d744ea2055f8058990f8a7323a,"* Added a specialized ctor for Any for nullptr.
  There was an inconvenience that an Any created with a nullptr returned false for isNull()
* removed warning [forcing value to bool 'true' or 'false'] when calling is<>"
81efb0e366a6584fd5e3a98e986107f6af03d47c,Merge branch 'master' of https://github.com/antlr/antlr4 into fix_1233
a6a730405f3271c54f2338b1c93447aaac51ef1d,finish binary example and update documentation
31f3a57a6e8fd4bed0a03d18964f7508e80e70ed,Rewritten test to make it threadsafe (and Travis happy)
a736e4b9ee52344a30a13b9de3998f975d34d50e,tweak doc
5153154658593a0a6a58a7ca5692ee82d180df62,Merge branch 'fix_typos' of git://github.com/sebkur/antlr4 into sebkur-fix_typos
9a027e22971308161d4b4f08c4e23488136ca170,Merge branch 'sebkur-fix_typos'
19d956cfc2e28812e743423ccc43c08938e46397,tweak doc
0dcf626e8b458bb2174be4c4e27c862d35dad4b4,tweak doc
d0620a65f5b147a91ae408d62818f1f5dc3aca4b,Merge branch 'issue#1295' of git://github.com/harriman/antlr4-updates into harriman-issue#1295
ae1bc4cafe55f8397f949d96e4e102fdaa7cf77d,add new test for all runtimes for issue #1295
35c6babd4ad50f9171cecec374a29436b88242a2,Merge branch 'harriman-issue#1295'
201925b2da2548926131be763bd92bdab2d9710a,tweak doc
f5d3e4cfe6a520bc1a1e2c2a659b1c5e3f2fb280,Improve robustness and correctness of two functions used by intellij antlr4 plugin to show ambig and lookahead parse trees.
978851f7034bb882ac546d85bf925293cd3643ac,update doc
79dbb8be9628bcccfec5688a3a05965e609468b4,"small improvements to locating mono, node"
fc97a6a006e0a6ea559de0e00c5b3e437f75a416,"Merge pull request #1376 from parrt/improve-build-path-checks

small improvements to locating mono, node"
3db55f13479099b9544002076be34d3666ac4e96,pull in contrib sig from renatahodovan
1ba897ace41f9b8579d06aeb64c0d3f6f05b464c,"Merge pull request #1186 from renatahodovan/python-enterrule-typo

Fix typo in the parser of the Python3 runtime."
db5d306285b3e7c97fe269304d1b9e9aacba7dd4,"Merge pull request #1187 from renatahodovan/atnconfig_instantiate

Fix initialization of ATNConfig when computing SLL prediction termination condition."
e32799f0489cca620545e368771103704814f9a8,"Merge pull request #1371 from FloorGoddijn/master

CPP runtime :  Added a specialized ctor for Any for nullptr."
417aaf225c7a6dcfa960e6896d0c660578b177bf,update readme
48836372d06b68c8df781d04d14fcfaf1bb75037,update readme
69dbb3e33a7f1024b07e1e5a64ca2560c3abac1d,update readme
f72fe32e8c5447a0022173eada4c3b0a4d319db7,"Merge pull request #1228 from tobiasbueschel/patch-1

correct spelling error"
f0177c96f8cfe1378518b6059fa89de19d0ea282,"Merge pull request #1246 from renatahodovan/nextToken-self-fix

Fix eofToken access in ListTokenSource.nextToken() by Python targets."
c0b5a40bcf0927c472dc42bd90360b8c2ec51085,Python3 target filterPrecedencePredicates should take collection:set not list as hint. Manual implementation of https://github.com/antlr/antlr4/pull/1247/files
30e4ec29c8e31ae14553ec5817b105293b0bea69,"Merge pull request #1251 from renatahodovan/execATN-conflictingAlts

Fix the initialization of conflictingAlts in execATN in Python targets."
144baa9adece96039b65b8069883f7382232925a,cannot raise string exceptions
10ce5d262535addd05fc77b14aab2e25ee7c484d,"Merge pull request #1311 from sebkur/allow_path_in_token_vocab

Allow paths as tokenVocab option"
34f0c66a89abfa6d843c34d2f5ed9478a0ed7ef5,Fixes #1342.
883e013cc6a6202b34545f465e3ed80e24f2da04,Fixes #1318.
d9490e16daf48b15461bc27ba4685f23b710d5c7,undo damage done by intellij pulling out imports from python :(
771e8e9c6343018274b91dd11afc47716044591d,Sign the contributor's agreement.
5ad9e4dfcb3ee117a5e37fdb0b9c4223628c8079,Update contributors.txt
69d9cfe302274c12420aa6a94dd7ba3df487efd8,"Added a Swift runtime.

This comes from https://github.com/janyou/Antlr-Swift-Runtime and is
marked Copyright (c) 2015 janyou on top of the BSD license and Copyrights
for Terence Parr and Sam Harwell derived from the original ANTLR source."
c989064e3244116bfd0085d614d511ce711e7208,"Added (part of) a Swift backend.

This comes from https://github.com/janyou/ANTLR-Swift-Target and is
marked Copyright (c) 2016 janyou on top of the BSD license and Copyrights
for Terence Parr and Sam Harwell derived from the original ANTLR source."
6d5d1f1c23830b4c872da379c3fcf6b553d553e7,Add build system changes needed for Swift backend.
dbe832766d7528bc4671006f894d6c261ba2a0ba,"Wrap some values with <OptionalValue> declarations.

I don't know what this is for.

I also presume that this requires corresponding changes in the other targets
that aren't there yet (per the comment at the bottom).  Just committing this
for now.

This comes from https://github.com/janyou/ANTLR-Swift-Target and is
marked Copyright (c) 2016 janyou on top of the BSD license and Copyrights
for Terence Parr and Sam Harwell derived from the original ANTLR source."
5b37b3e236dda66d66fa5aaac51616773d1aaa94,"Add OptionalValue declarations to each of the non-Swift targets, so that
this can be used in the test templates.

It is a no-op for every target other than Swift.

This pairs with cset 8251422b."
76cebe470d65dbfd9a9363c2ed5c76a19b6c4a7f,"Update Swift.test.stg to include templates that were added on master since
the initial fork."
66ac63877ac3cfa4d41ac8cbe929ba3af0b547e4,Remove line that just looks completely bogus and which causes error messages.
cb1fcd9294506b25af885f80c3444d7b4dd9d378,"Implement TreeNodeWithAltNumField with a TODO.

I'm getting an error about this, but I don't know what it's supposed to do."
869bcfe42949cf9670d829ae58ff5e8d0f5d3638,"Mark matchWildcard call with a try, since it can throw."
6d6327aa9dc72fd554f894ba89e4d3c4827cf484,"Move the Token declarations into an enum.

This avoids the naming conflict in the tests between the use of ATN as a
token name and as a type name."
ee469ae6d86701cfca1530bb6e4b913567c0aa92,"Regenerate the tests using mvn -Pgen generate-test-sources.

This adds all the new Swift tests."
cf1487feb4cf5bb271c5884429612f10cbe419cb,"Replace init with init_ in DelegatorRuleOverridesLookaheadInDelegate.

init is the name of the instance initializer function in Swift, so generating
a grammar with that name causes problems, since it is generated into
function names on the parser.

I thought that renaming this would be a problem for other targets, but it
doesn't look like it, and actually the convention of using type_ rather than
type is already in use in this file.  Match this by adopting init_ as the
name, and regenerate the tests to match.

This was initially handled in https://github.com/janyou/ANTLR-Swift-Target
(using the name initIt instead of init)."
b52e8e46b2536f2284398f22064c560b58e93def,"Skip Swift tests on non-Mac platforms #1339

Swift tests depend on Xcode (via xcrun) so only run them on Macs.

This also bumps the maven-surefire-plugin version to 2.19.1, because
2.12.4 crashes when it sees an empty <include> block."
c611a64461ce8ed5983e9c8e84f977100afc4f45,Remove commented-out debug code.
017f6586d746684e55b31cb8fe9e5d99d11ee927,"Have both Linux and macOS tests on Travis.

The Swift tests will not work on Linux, because they depend on Xcode, so
we need a separate macOS run for them."
5ac3a792340189af93a6276f4d247a46b4a7be08,"Explicitly lay out the matrix for Travis.

This means that we only have one run on macOS, using the default JDK.
Travis does not support JDK-switching on macOS."
1c6f6c4aed7b4710e5757362ac46fbcae5df2185,"Ignore .xcuserdata, and remove those that were here already."
a641c69fc64d0920994178cb9bc766eaf3135c7f,Fix build script -- there is no readlink -f on macOS.
c024166dfabd371bd32cf1cf38861c07d9481a67,Fix path to Swift test files.
eadb6b21e678fba7fb6801693990b70def1bbac6,Use Homebrew to install python3 on the macOS build on Travis.
4d0718b6f1fbd5cca6c82d3df3a0adbdbb2e7c41,Install mono on the macOS Travis builds.
8bd4155878f7ce5a057957736d5298e9b247f303,"Use Xcode 8 on the Travis macOS builds, because we need Swift 3."
a3d37a082ed3339a37ed274addc4ceae0a838a96,Work around apparent rvm bug that is in Travis's Xcode image.
977daa67666ff846d3a0e3c91e3aab8fa66c230a,"Disable the JDK 6 and 7 builds on this branch -- no point loading up
Travis."
97c5ebd359516d4d8e148260e459598d849f6553,Update Parser.swift
e3cc81bc32a5d7f84be5910a99cab569f92aa38d,Update RuleContext.swift
033e5ed136737226b244d2ece5ca34071d24162c,Update Trees.swift
d1dbfccdd6e0941a4879e1f9a768b95fb0bd846d,Update Swift.test.stg
61248c8a4d87dd970799796f51a5f3925708bb20,Update Swift.stg
fc3fa24464195d95785d65ca77527ebde654b6d3,Update Swift.stg
abf2a1883c388ea1e991b8414834f9ee5cc410b8,"Update SwiftTarget.java

""4.5.1""->""4.5.3"""
281d624751377791c096d926cac51bf2bfc09b9b,Update RuntimeMetaData.swift
cddb8a6ff257d1ffffca8fada98c159f0097c643,"Update Swift.stg

add namedActions"
49d9a39a7965f450c4c3f2eaee9a7dc949ce4815,in the middle of transition.
e0b326677bb59d73aa15385184af4375698faee8,Migrating the current Swift tests to the new testing framework.
c50b10f86525b4c2a4e6260b3a440da76e27ff64,clarify javascript visitor code
9d926d6c2ad1c2db1837dbcdc521bdaa564abbf4,port from python 2 version
a077d3d0721ab9c99c1d2703ad1447c0791129c5,Merge branch 'master' of https://github.com/antlr/antlr4 into fix_1233
5612d1069e914e83117e4edb11dad1b02ce7b39b,Signed certificate of origin
bfc8bf0459b17648dae38a2073bdcfcf337354d9,Ensure valid output encoding
d9af7896a7c341ac1a8432a4eb219a8de8a2f234,Don't require imports directory
89e3f063c9f115403c1dbece55207ff561335a72,Remove path from grammar name when present
cb785d5d1e167ec704dbae4cd25f48cd0705d1e2,Use method to strip quotes. This could be factored out as it seems generally usefull
66be087c3895cefa5398a021c60bc4cb2748e048,merge old and new travis; improve so it runs C++ on osx; update BaseSwiftTest so it mirrors other targets; remove unneeded dep in pom to some json stuff
8e33fe49f52e247af97819103cb7aa16a31366e4,turn out stderr output from clang++ compiles
27a59988a2d9c362478312083f03e7b8c2a75ab8,take out flag for cmake as it doesn't work on linux. turn off C++ tests on mac
f4eb903d5d34d5186315dbb9b995b2fd94bda1f6,"Merge pull request #1382 from parrt/hanjoes-swift-target-new-test

swift target rebased on current master"
37ff8a316174ba0cccb822740adb7070364bc759,"Merge pull request #1248 from renatahodovan/configset-contains

Fix comparisons in ATNConfigSet.__contains__ of Python targets."
cfc538bfdc279e0c54b68dbfb5b3bd2655a4e679,"Merge branch 'master' of https://github.com/antlr/antlr4 into fix_1233 to solve

Conflicts:
	contributors.txt"
d580f2184f7ca7b8fd106a3fbc5a7bb12be97260,"Use JFrame instead of JDialog to get ""expand window"" buttons"
06285d16d72763d8f2367e5920a5d198d4f0a0a2,improve doc on runtime targets
df89ad6180d9fd57ffd7151fa7944d0cbfb7d0ef,don't require output encoding in antlr4 mvn plugin
8ed1105290d3008d7a55797c7a19101d09214dc7,"Merge pull request #1353 from marcohu/fix_1233

Grammar dependency management for Maven plugin"
5f41dd2fc9a354ece4eedb9a1ab0487341aa8ee3,"Merge pull request #1378 from ericvergnaud/javascript-visitor-clarification

clarify javascript visitor code"
f3be375c3a5c97a34fe397d73a2313c2f8afd632,"Merge pull request #1379 from ericvergnaud/python3-token-stream-rewriter

port from python 2 version"
39ddd0da3a503fe96e94f1a01558384b14c7a36e,improve doc on build
4e6e7edf0ddb06523391c3e644a5c6cfb507518d,Fixes #1317
c7a68514b571bbf49440972e4841817c749cdf52,"Merge pull request #1384 from parrt/fix-1317

Fixes #1317"
68180117d7a335e712491cbcde14d86506540ddc,"Merge pull request #1292 from BurtHarris/addAppveyor

Add AppVeyor.yml for Windows contious integration"
d6f95111fcefdfe6f014ef4c54e9595fa941635f,Update appveyor.yml
11bcd168fb9c229ea49dbfabc376bc41c838fb39,Update appveyor.yml
02055beb7e3e4dd542216150ac6f0fd2e4070e67,suppress swift test warnings
2cb02d9b4375f4d1752ec88070edd8acad5b7e91,"add UTF-8 encoding on all antlr runs during test, fix appveyor"
12e8bfb56130b7edfd164ae1ecd541b65af5ffdf,Merge branch 'master' of github.com:parrt/antlr4
83c1462b8eb4d4db763ed39412a2629e65bc2b3a,"Merge pull request #1389 from parrt/fix-appveyor

Fix appveyor"
93c04a193359fde33e6d06e21af244377d4952de,fix travis
21324a02d2dc2e636584bcf1d9b9f33471e110a6,fix travis
b5b69b60d03323f2acd8182535bce0f9349d1c77,"Merge pull request #1386 from parrt/fix-travis-osx

Fix travis osx"
007a445be445c402dbad5e045ad52f8dc594e5d6,factor antlr() out of target test files into single spot
0bb622e50d2b5b55bca38fd529027cbd1b374d4f,"Merge pull request #1391 from parrt/factor-antlr-tests

factor antlr() out of target test files into single spot"
10fb0a3049e1b2b90f5cf9f330dee4715916872f,add info on Swift target
aeaba48a0bc5351e0ee414f718dabf748ad36c6c,pull in lygav python impl of TokenStreamRewriter
ace7758f6e73f5d556f373445728bee6f0072f89,Fixes #1280
2211036472470e2132bf99e119357e4d77e4d1a5,Test only swift on os x
f3215d73d8900d45178c9d88c2aab2bb8c1ba680,add github templates
50a3455e2014fca4625af63489e4217a660723fb,tweak templates
d09276d9fd5f8493229f2f715c66a861c8767048,"Merge pull request #1395 from janyou/suppress-warnings

suppress swift test warnings"
dc2c9b039e1497ad924c852e07f3a8f981ed078b,Fixes #1188
a74b33339c6ed9783edb25eb046726fa25757c71,update swift-target.md
6c2d4e6225f4ee5fd2b197a794b4eb0e65e84cf1,Fixes #1211
04e9078dd98a90e3d6b93d22936dd4c1ef46c0fd,from master
0e091d1b08349dc2c48463284722cd9ea73aa55d,modify info on Swift target
f19697156574dc6e4c0da77751ea23b4276ac8fe,"Fix failure to identify prefix rules that also recurse

Fixes #1402"
178f956b1f3ca956b56b855e731c02c799fb7634,"Merge pull request #1403 from sharwell/fix-1402

Fix failure to identify prefix rules that also recurse"
fca5e458d3cbbc0d24fbefd2e6ac47569d479afa,"Implement dynamic disambiguation

Fixes #1398
Fixes #994"
c182e3d5bf012f0c5fd641e56f00c832abcd3cad,Fixes #994 poor performance in left-recursive expressions with very large expression input phrases; builds off of @sharwell solution that explicitly checks for key return states in expr rules
e1a18671499ba86e6f78d905fc1d17e73cc6dcf3,change name of switch that turns off new opt.
933cc6e63c5e19d12b1007037516500643ce6667,make the switch an ENV not property.
fdee94d52906985ffd93fe7bdf752dffb1272bbf,"Merge pull request #1404 from parrt/expr-performance-test

Fixes #994; poor left-recursive rule performance"
474c33e5dba3bac97ae36aea3e357ad910ac6d45,"Merge pull request #1396 from janyou/swift-target-readme

update swift-target.md"
df40db35a48d18db9cff6e59825294c9d895c0b5,"Merge pull request #1400 from janyou/readme

modify info on Swift target"
dc0e952fc2a637a6ec30766cf6a4d26b886d7d36,Removed an obsolete line.
a6161326e119a86bcb7d4fa0f6b1a66d0c342fba,Merge branch 'master_upstream'
cc59a699d4469d00be83370f3ee2b5b2700de60c,Add myself to the list of contributors using the date of my first commit.
d1bc0f5ca54b2735b48877c44ca17eac6ccae1bf,Merge remote-tracking branch 'origin/master' into iterative-tree-walker
3ed4348ab6e475d3b29efe01f34877d0f0d4029f,Update getting-started.md
8b8afbf16cf1a7f4004eb6fcf760194ce467f7b9,Update contributors.txt
cc59a359aedb3c99207b07346df85bda96b46244,contributor name was added
b4bf40e47ed12cf62c34315ea058677d099fa74b,Update getting-started.md
a20a87fad6e570cb5e6993d12a48789f8ae5ce5c,typo
d7996391f4da05eb072e776c94ff06d197d308c2,tweak issue template
14bc6c4a6838010b0b0fad304f182ede7c5026e5,add appveyor badge
ee614db2cdd637e74c082895295c4b2f89f280d1,"Merge pull request #1231 from twz123/iterative-tree-walker

Add an iterative version of the ParseTreeWalker"
9d3415ed8af2a58d5d8e4bc6f9eaefac4bafaac6,Merge branch 'master' of git://github.com/ghosthope/antlr4 into ghosthope-master
aac6c03dfdc506a003f5b42dc488c2863a0d94f5,"Merge pull request #1408 from parrt/ghosthope-master

Javascript performance improvement (hash function)"
41dd8f26811338aa87f868cb2a46750899937c98,Merge branch 'patch-2' of git://github.com/MrSampson/antlr4 into MrSampson-patch-2
b6eb4141cf6036786f9fece858b6c657f87de44d,update contributors
9a0a54f0e6c1434329f4517613b8c10f1f1e15a4,"Merge pull request #1405 from MrSampson/patch-1

Change jar file from 4.5 to 4.5.3"
3506dcef1d7bfb5389ae8de2a29fd94bfad9a489,add @Override to hush warnings. Manually did some of https://github.com/antlr/antlr4/pull/1066
c695ed25e9e716af0e33823a4e9d9b93a2b1bf02,Fixes #1238.  @antlr/antlr-targets might want to tweak their targets.
fa14b9aad8ceafbc5004598aa0b74afd423cc257,Merge branch 'master_upstream'
9eb2a311796716d875116001503efc161e815629,C++ target implementation for [c695ed2].
f9699efa2cd605ae8d6b17580c8f2906ea56b7b3,C++ runtime implemenation of  [ee614db]
c258fd2a5d0a7ca5755f52aea8908849a279a1e2,rm redundant init
4f48d533fa0e557856eb66267525397365037e97,divide and conquer
ab3bba906d3abfa4b4c4d858416d5dd1fbd05795,divide and conquer
48d3a458b595db455f6fd70482d251d9edf29429,divide and conquer
d1496ed76a2982e5b13a57ee3938f5e9cfd71030,divide and conquer
bebdeedada4156ef60a961fcfb44c044cb8c4b53,divide and conquer
dd7dcf089d6a114d0387d180f29fd10344185c2c,divide and conquer
228bcac063289578662bdfb311008e7e06203c9f,stick with existing not iterative walker by default.
874fea8cc61c81d798ee2beb979b2df10c23618e,reverting to global add ons for now
c3f9cb3cc7178164c5a982cc6b2763e5c73bca3e,divide and conquer
0cf3c2cf509f2d3b07eea55fe8807d4d48c8b9aa,divide and conquer
33401add2cf695dead0b3c0764df6dbee5240203,divide and conquer
069cf9354d3c332d041a43d4ac8a6651ef58622b,divide and conquer
bd7df071f99790f842150be51d54623d1ffb87ff,start with the slow builds
508a23c8f5b7d20fdd60b6d30eaca8a0e1f5ab81,"Merge pull request #1413 from ericvergnaud/split-travis-build

divide and conquer Travis CI"
30c7c437121993d03a3488a1c99ee971c80ed179,add tool tests but only when testing java target
643dc2a005b7bcc6b778adeb5ea3888efb4d06a9,move to script file
66ea9891aa830bd18c6bcf1a073e935003ffaa73,"Merge pull request #1414 from parrt/master

add tool tests but only when testing java target"
a1def965009a4be4e024d4a14b3eea1eec4d0896,"getConstantValue replaced with getModeConstantValue, getTokenConstantValue and getChannelConstantValue methods.

ErrorType simplified, tests fixed.
Fixes #1411, added unit-test."
3026c3cc9495f0568b2d6660fe6b44515962bcc5,start migrating
ec5f64a459e8c0f1dcb85322c5a1856c0e094368,"start migrating, but 2 tests are failing"
bd1111ffa3fd39d16acd20fc8542114883bc638b,Fixed issue with duplicated commands in lexer rule.
fa31d6f708c50b6b2a583e97ca567e9f98cbcea9,Update contributors.txt
3a8ec78de23022659081cfb98568dc813c8cb415,"Merge pull request #1422 from wxio/master

Update contributors.txt"
763669ffc7143389ed2f17dbb892682adcbd8492,Fix for redeclared error is generated Go code. Create block so _x and _m var are created in a local scope.
2b69dd7c1835443fc34c7b19fde78a2283c04645,Added GetTokenSourceCharStreamPair method to lexer. Needed when customising lexer eg. to create a python style block sensitive lexer.
ed7f6f70da9557fb66c0c926f9eced8c92679d39,pushMode and popMode commands are not duplicated.
8fe4def4edcc31fcbe5c3b2a59b1cd18527ea1d1,"Warnings for incompatible commands, added unit-test, fixes #1388.

Improved test for duplicated commands (added pushMode, popMode)."
f76ca2276301f4d404da2553625976e1cb5740bd,MODE_CONFLICTS_WITH_TOKEN error restored.
44aab113f3f9b69af9af0f24a14e3401b3b078bb,"Added method checkCommands.

commands check micro optimization and code clearing."
9aab3380219e94dd9b8b5aa57ce8a53c90b4c69a,Reverted old error types and numbers.
c8279a1d897e7fb801676c266f0dd7a473159194,Fix a dangerous c-cast in the cpp codegen
ccde4051bdb651756cf6c68bb8b5859293a75c90,fixed the 2 failing tests with left recursion optimisation
6e071f4950fea83deac6a8236e30793330d0009e,implement LR optimisation in Python3 + align naming + DFAState ctor bugs
f9d79dfcb208018985d699114ac40c007f2c613e,implement LR optimisation in JavaScript + align naming + DFAState ctor bugs
6e0d02a32d1c1323ebfec27144fe928954577d34,enable perf tests for python and javascript
595fb089b0b8789e59e3a49708605e865cb19ecd,"Merge pull request #1427 from ericvergnaud/poor-left-recursive-rule-performance

Fix poor left recursive rule performance in python + javascript"
eeeb43f9a07136e87fcfd7c4f370275ab33150ea,"Merge pull request #1426 from Naios/master

Fix a dangerous c-cast in the cpp codegen"
39c77ca20f3b85d6d341ddfbd0662091ed12fab0,Potential fix for antlr/antlr4 #1397
ced8fba5bc66fda5413c3cf75c32e3e7cd693744,Update Go.stg
238b55a0b67e0c0abfa09a0a007dfadfb833f0b2,"Extensive TokenStreamRewriter tests + many python2 runtime fixes.
Including fix for https://github.com/antlr/antlr4/issues/550"
377f2f5c8926946c1954b492bbca8e9a0307d278,Merge remote-tracking branch 'antlr4/master'
f50fb7df156bda289bd3b520df9cbc2ae344a986,Fix error when Interval is rewritten with a tuple
8b60373c43f94049f712e8a41b7f6c5ed294bf78,fix: enable to access interval as a list
f00e346ccdf3f36299e40a1b36c9649a211c9fc2,Add additional _alt decl
ca9628e1b1fd9b49d1d50f9181443880f7140138,"turn on new perf tests for node,python as they take too long."
cd4c9e87285a6d7db451407277f26046b1d287c5,"Add heartbeat thread to gen minimal output for travis, appveyor to avoid timeout."
aff8cba61ab89cbf5647bba63e706f2f14ae30be,"Merge pull request #1432 from parrt/add-testing-heartbeat

Add heartbeat thread to gen minimal output for travis, appveyor to avoid timeout."
20ef01c442fb0d6258406634c994f20b819db164,Update the Xcode project to match the recommended values in Xcode 8.1.
ee0babaa8f0ad1f343d67a212542f2d6df94f676,"Update the bundle identifiers.

This changes PRODUCT_BUNDLE_IDENTIFIER to read org.antlr.v4.swift.macos or
org.antlr.v4.swift.ios.  This is similar to the naming scheme used in the Java
code.

The previous identifier was jlabs.Antlr4.  I don't know what that refers to."
b0c38243578c540893efc4372e2381a8f32e0094,"Create a new Xcode playground for Swift.

This takes the example from
https://github.com/janyou/Antlr-Swift-Runtime/tree/master/Test and packages
it into an Xcode playground.  This allows the user to interact with the
grammar directly inside Xcode, and serves as a live demo of the Swift support.

Update the docs to match."
1aa9a41d01a77e5e14ee4d3e829a6493844c9b50,Removed comma and space appending in getText()
4000e6f68ea64a2c7fb2456e09a4ab839f291050,Signed contributors.txt
09db23160f87e6bbda6f0fa56c152bd4502d44fd,fix for #550
3cbc456355a23f131dd7acf499ad4e4f97a4d086,cleanup test files
682e0341c128e607cb00085015db6ea600e97309,fix a typo in optimisation code
d9f04b08ffa66b740af6d1545774e2b9286bc127,Merge branch 'poor-left-recursive-rule-performance' into optimize-javascript-runtime
3ccb8279bf977dea51cab3ff918fed1a4d6c6574,"Merge pull request #1436 from pboyer/patch-5

Fix for #1397"
8ead51d8ffea8d375a4b184404e5cee6460cca85,"Merge pull request #1423 from wxio/master

Fix for redeclared error is generated Go code."
e850b4d97fd7f73d3c1371d196545dfcdbb35c3f,use hashCode instead of hashString - Lexer seems to work but not Parser
1f953da0aca38e5a28518f02b97d68d344d8ae4a,"Merge pull request #1441 from ericvergnaud/poor-left-recursive-rule-performance

Poor left recursive rule performance"
95dc3f673facfaf133468d86d690fd0069c73ede,"Merge pull request #1440 from samtatasurya/cpp-get-text

Fix to Issue #1434"
53b6153060977e9c2889596682313ad0d3764f8f,"Merge pull request #1437 from ewanmellor/swift-xcode-project-tidyups

Swift Xcode project tidyups"
2dd96f32208bd0d943cb9115c66f6beb0c5da597,Merge branch 'master' of git://github.com/lygav/antlr4 into lygav-master
c959bf649b65d931ebe5ecd76a372eb3067ef52d,"Fixes #550 by @lygav, which tweaks and more tests by me."
30dddbb84d45b596d306bb66211460dca3edf0f9,"Merge pull request #1445 from parrt/fixes-550-java

Fixes #550 by @lygav, which tweaks and more tests by me."
814b0488eeb0a0182cd3ed890b908fc06969152b,Merge branch 'lygav-master' into fixes-550-python
c89bc8440af796c63dbdc880345d4062b1705003,"Merge pull request #1446 from parrt/fixes-550-python

Fixes 550 python"
2c63e953598bf3230e2b50d21fac3857cf697c1b,"Merge pull request #1438 from ewanmellor/swift-playground

Create a new Xcode playground for Swift."
21c528cd063e5af3f81480544107d51f64e5b467,Updated vs2015 project for cpp runtime
2f6421cfc1923fd8e5fd3ba5e7cf6f00f753d275,added redxdev to contributors.txt
b8585b7eb51ce7ba6cfeaa4eabc9a7a2494f30ca,Fixed some missed cases for checkCommands.
4e2f50aef8758135abb88d65ebcc8667fa122e70,"Added new error types for not recognized token, mode or channel name."
f11a380609fe7c05ed8f20ba12507f3f0a791f6b,"Merge pull request #1417 from KvanTTT/command_wrong_id_1411

ANTLR generates a wrong lexer code if type, channel or mode commands use inproper identifier"
0e1b5d9d7a6fbb6e19ca12a9b8c45365e3bb3f06,"Merge branch 'command_wrong_id_1411' into duplicated_and_nonsensical_commands_1388

# Conflicts:
#	tool/src/org/antlr/v4/tool/ErrorType.java"
cb16e369fe27b58d04c64e2b6c6c9c96a0f843dc,Misprint in comment.
7332c1eb0257b593b4057bba35146011f95551ed,fix various hashing issues
185f8e963568cfb8402f06fb6d87f826240789c6,Merge branch 'master' of https://github.com/antlr/antlr4 into optimize-javascript-runtime
67a93b3f36625cc743a9b0cac8bd69bac3ff7477,refine debug info
5ce735f56f786ca9743e6fcb082316072ef96479,cleanup
bf3bff16e449d7149ca804ae4944c65a8e311a6b,"Misprints fixed, code style improved (removed unnecessary else)."
e4c765aa27007d6957147997bda9d52ad1841dd3,Added comment.
838089fe581ac186d9143c028a5439b230c4c165,"Merge pull request #1447 from redxdev/master

Update VS2015 cpp runtime project"
abed9e733af59e26bb5016242c5d765869bc25f8,"Merge pull request #1449 from KvanTTT/duplicated_and_nonsensical_commands_1388

Duplicated and incompatible commands"
09dced91493c94e0d2f3573506791c9e2100445f,Correct link for AppVeyor build
7f4bb06adf5f422e49a05618040ebe1e7a0cd33a,"Merge pull request #1448 from ericvergnaud/optimize-javascript-runtime

Optimize javascript runtime"
50646a6da8598ed13edc71c30f1590d9de7ea266,"Merge pull request #1453 from KvanTTT/patch-1

Correct link for AppVeyor build"
1751fac49653c85dd11934863bdf28a4928cbcd5,Merge branch 'master_upstream'
d5dda9f99808d5e41060c61ab5df78ba41a04a2a,"Added check for labels with different token types.

Spaces -> Tabs."
4e4b902c204697755a049f795519dae360b61d72,Added test testLabelsForTokensWithMixedTypes.
bdc1911e6e384a7a72b931b293288c3f29bef840,Removed not used LabelType.
0cb32c0620edb7abef97f4d11de5376dc5226be1,Fix for repeat declaration of la_
a7227b449936b4018b4c2e801003c3153d79059c,"Fix AttributeError when trying to write an immutable variable in Python.

The `removeOne` function of IntervalSet tries to directly
rewrite the start field of an immutable range variable when
splitting an existing interval. This causes AttributeError which
is fixed by the patch."
9ce85d79eca1bb02ef56fd22df1f8c031b5c0141,Merge remote-tracking branch 'refs/remotes/antlr/master'
891915de846d39c17b8357a17a7a8626a2869dfc,"Update copyright on java, xml files. Make BSD license conform to standard."
cc6267557364c165baa5a9fb704a03c3d014b8bd,Update legacy test stuff too.
efc3f82f382f17853a93f295e0148f5a97c45711,rm redundant license files
2bad631ccead6086c43c6fd87fcfe56aeed3bf1c,fix typo in copyright
f597069728d5a9f3848d25401580b268d17da792,Update copyright on Python2
76d421a89ec458e16e562b219266cdb52f2050d5,add copyrights on Python2
06973a8ea9177566934a0de418c52971249a5d0b,fix typo in copyright
fed78dbd284095edca4c9b01c61ade96616f7a92,update copyrights on Python3
c0e4f076020531e72f5a735fa9366d924da60874,add copyrights on Python3
e6b2e1916b7cf36e9d1eb91ee7a73cbaa2f68708,update copyrights on Cpp
422ce9293116b3d5703be36981cf608db995f00a,add copyrights on Cpp
0b7c7f1333d608dd0326aeb660a3128856ace030,update copyrights on js
adadf567cc6d1327af71bc2639f8343250b1ad13,add copyrights on js
ca144945acc16a2a0f460ddb992cfa5e4f0990af,update copyrights on csharp
43370a6e1266acf52667c57d4cd71164915743b1,add copyrights on csharp
03c2426e9ce7189bf98edb8974640ff3c32737bc,"add/update copyrights on swift. @janyou, I removed your jlabs copyright notice, replacing with antlr project copyright per contributors.txt"
03925a27539d1969c6404a0d22cb817b68d85b38,add copyrights on go
61e8eba4fc382515f3407bdc741d1ec5aa275478,fix typo
1b1a9862c4da857737c8a06e3fd3f6ceb6b9534c,contributors->authors
2c99f187a0b1740eb48363d0881e39d8ce27b7e9,"make it read ""Copyright (c) 2012-2016 The ANTLR Project"""
9e2c0f76f913b48589da1319ee1edbd9a2cc1fe8,"Merge pull request #1450 from parrt/update-copyright

Update/add copyright notices on all files for all targets"
11117e02d4e01fd7a99fa54258d7d0abadfaf7db,"Merge pull request #1458 from KvanTTT/mixed_type_labels_1409

Check labels for tokens with different types"
edd5bdd0937917f32b9fdb6d1c8fd87d09810750,tweak PR template
2dddd007e456b2ddb3fe887f0c8160549759a0ee,"Merge pull request #1462 from pboyer/lafix

Fix for #1459"
e46db41bbdcd6bde01ca92a2508666991c21c756,move api lib test to runtime tests
3e97e64651179c6be207924e5c8ca072dd551bdd,"Merge pull request #1466 from parrt/move-api-test-to-runtime-testsuite

move api lib test to runtime tests"
9c70b3b4ac868988bc3c368f3d8bf1e546adc573,Fix compilation error
af950453625541c86c4432d677a3f546c012add9,Fix conflict lexer command in CppTarget demo
337adffa03edc81c33fa656a6c64ecb6bab51cf4,add expected token tests
ea53dac7b796062f336a256f77742edb18036769,Fix antlr4:: namespace pollution in Lexer/Parser headers
e9859bcd2f2c99c856c4469aba31309795995d09,Fix unnecessary cast
661c87b47ceca09488c047acb638362670e3ded0,update comment
53918ab41e78632e80bda8aadff5926a9c7ad4fd,add unit test for #1298
bd0902320933afab5b481724b4b6eb2a0f998d32,"Call visitErrorNodes properly in Python targets.

The consume method of the Parser class calls visitTerminal on both
TerminalNodes and ErrorNodes even if the comment above states that
ErrorNodes should be visited by visitErrorNodes. This behaviour
is also inconsitent with the Java target. The patch fixes this in
both Python targets."
eb8e2890c3eec1346b5e547f8269d1bcbef7a031,copyFrom copies error nodes over. Fixes #1298
258b1a4a382c9bbecc58aa438777dfbbc5710cc6,Redo dynamic cast
85b609a9515b20690fac39bd4b09c0825809c3dc,make non-Java targets ignore new test
3a6ffafec3300d9f511022bebc14fcde6538d4e3,"Merge pull request #1472 from parrt/fix-1298

Fix 1298"
7fcf8ab074e3174b9203e070c22d0e2034d64728,pull in pr1229 into branch: dotnetcore
82372aae2ce73abe5e087a159a517a0890224fb7,"Merge pull request #1460 from renatahodovan/intervalset-range-fix

Fix AttributeError when trying to write an immutable variable in Python."
58d51450d48becfb8fb77e98cb26955c25f9b4e1,"Implement the fix of #1298 for Python targets.

The patch adapts the fix in PR #1472 for Python targets."
0eb27279def5388a64abcc87a84ace067bb83dd4,fix LL1 analyzer
822e3762a0e804415d1d7c246c5a223f62362b5f,Fix special template for tests
e377b03506ef321385bedd6aecb339a5ba9e4bda,Fix special template for org.antlr.v4.test.runtime.cpp.TestParseTrees
9f51ec1e6b6d8b79c18bf4fdaa6ee190efcc1c6b,"Merge pull request #1477 from parrt/fix-1203

fix LL1 analyzer"
205314366575039ea8dd0ec1821635d50f88d1de,"fix test so it correctly illustrates bug 1480, which was fixed apparently by https://github.com/antlr/antlr4/pull/1477"
35e02997f2f3475ca974ab1d04c8b388ea17e59d,improve test
1de7d7e0d67b69ec7f1d7ca93255288f3ad11039,"Merge pull request #1481 from parrt/fix-1480

Fix 1480 (getExpectedTokens missing token from FOLLOW)"
9ef75603ce1edf335c198a6299fd86cdd8f48fcb,improve comment
0a7e90fe8e5edd548432677f8fbf3e6d1888961d,fix #1177 (LB(k) stops at index 0) @antlr/antlr-targets might care about this
e65154c1616f78b06fb81cb252b8a92508bf00e6,Fix #1073. Better token output.
a6e7a72ac767d73e6f760750b53b13e2e89d7261,"Merge pull request #1483 from parrt/fix-1073

Fix #1073. Better token output."
f13b09eb3d32265939dfa4233112a4655e0cedef,Fixes #1042
89bfd56a769e67a7392fa3acc57a79fa2cd5d931,"Merge pull request #1484 from parrt/fix-1042

Fixes #1042"
9b29cfe4e4f22e6964afb3fc3f51f5d01686021b,rm legacy tests
8ed3e1303d480ae0dbd838ff5ff586b2fbab072c,"Merge pull request #1485 from parrt/rm-legacy-tests

rm legacy tests"
f2f54f0fd59f2c6dea060b5810206c19838d747b,manually doing similar cleanup to https://github.com/antlr/antlr4/pull/1467
9cfb6890a53410c1cf91df84474b8b79edecd26d,add test scope to runtime test pom
9d06400ef02c7efd0f4d745bf0ef50ea5fc8a3fd,add test scope to tool test pom
0de8a9c41475e51cdfc44ecc3fc7e737f263c6a0,simplify tool pom
2021f5947790abf2748d191a8451515e53090366,clean up links
71e926e1438140064c78189d28572c5256ee6b2b,set version
87fbc682e396f5e3a120498991b670efa1e9484b,strip more stuff we don't need
3a4c8d8bc6fdb1f0ce95cc17f22d4c724de0f0ee,Implement the fix in #1471 for JavaScript target.
9b758cb66899f12d20fea3efdf3cd96d332728a6,update versions
33bce0d8a8ae0bf71e876c9a22b1e37ce6043253,oops. tool tests need actual tool jar
c0e7c49a9e0684c4906b4b249cfa1d0b2d571aa0,"update jar version, add implementation manifest entries. Fixes #1036"
731603b4893ad36fad2ea5088b1f1d927d0f7d19,maven shade and bundle don't work together so i dropped bundle for main complete jar.
b6b3895792e7b28ba436066869709950c34e42e8,"Merge pull request #1486 from parrt/tidy-poms

Tidy poms"
98900144b2be22d673df42b97830d1115724f6b6,attempting to get src/javadoc back.
52cecbe9e1c60db500e06427b491233c70183786,generates tool javadoc jar now
fc20027da34603889d9bb2a929fcd36d5cfb22b9,generates runtime javadoc jar now with dot generation for PredictionContext
0dae6359ec6787b28d23a451719ea7955ca3cfe3,Fixes #1007.
951bc0861bd7fd4180760c7c3ff533654e20cf45,"Merge pull request #1488 from parrt/add-src-javadoc-jars

Add src javadoc jars"
4aaa0bfb5ab5fa4debc3fe9eacb6f7ab10a7b5e4,"Better synchronization for multithreading - fixes issue #1435

- The shared mutexes were defined as normal instance variables in a simulator, so the locks didn't work (multiple instances of simulators active). By making them static (which is more appropriate anyway, since we are protecting static data) the synchroniation now works.
- For better performance an own class for multiple read/single write locks was added and used instead of the shared mutexes.
- Made the static wstring_covvert instance local variables in ws2s and s2ws. Otherwise we would also need a mutext to protect it.

- Some other minor changes."
31a6cc84a9525cbb81f81ef2296ce3f381f54621,Merge branch 'master_upstream'
10a15804481fb8aad397bb9eba0c5e78f4b15220,compiles
612e3399ff41376b42806c955122c46dcbe47f7f,Merge remote-tracking branch 'forked/master' into realign-csharp-runtime
19d70cd777a5b79c7d8a132f2228e33dc22fd630,TestLexerExec tests pass
aa5f782bdb2406bf50ea97cffa1ceebf629dfe89,update doc
bc62f9f3a72ec5d9b2f625143359f9a54bc3cbb8,get proper manifest into runtime jar
0170c9a064e872c5f089a20dc6e15fbe5d1f21cc,Good progress with parser
2b99487335091316cd7e65de429a84cde4d2cf13,"Merge pull request #1487 from renatahodovan/js-errornode

Implement the fix in #1471 for JavaScript target."
c7e27664c25ebeb3158b9b3ce355f774bd3b0c1b,"Merge pull request #1471 from renatahodovan/visit-error-node

Call visitErrorNodes properly in Python targets."
6a20919cb7dddb526d9215ccf740cc1678886fd8,"Merge pull request #1476 from renatahodovan/python-target-1472

Implement the fix of #1298 for Python targets."
42086eff6ed90afcc778e601d7f41765241e644d,Fix #980
de39b929e1b99a501ba0bb599f15a104fa6238da,tweak github templates
5ff27de71c8886b6b7553debb5c992626bf041af,Update contributors.txt
2d3377c94e44054bb2e5d51ee9fde7f99bd74aef,Update contributors.txt
fac04c8b79bcdd70dae3d606f279df9b24633d26,Update contributors.txt
7cf5688760b91be2e8682c8c060c7723c2109453,"Merge pull request #1468 from gaulouis/issue-1443

Fix compilation error for CppTarget demo on Linux"
2e59dc218449c13bbd6e98f813a16955789c674a,"Merge pull request #1469 from gaulouis/issue-1461

Fix conflict lexer command in CppTarget demo"
08a8e308643c14b168534a80547f4a376bd5177c,"Merge pull request #1470 from gaulouis/issue-1457

Issue 1457"
b2d67261f29ec87a3bde19d738b13840a693581d,fix contributor
2fc33d97cd4331042a530fee4e6ccf674dd6104b,all tests pass!
39de8896f81a90ce4cd9fa1b6ddb4a76d22a4723,Merge branch 'master' into realign-csharp-runtime
caa581a9e015540f969faa533084a362e2bbcec2,success!
9df5f3d5713f0e4b159e351d022c6806b3075b24,Fix VS2013 project
edaeaadf990aa933574e0c534f2315fe3a965426,Fixes #1042
e279cd699e2256bc6e715662148d51635bca97f0,"Merge pull request #1494 from ericvergnaud/fix-#1298-for-JavaScript

Fix #1298 for JavaScript"
aea034cb45379a31b8603398feb80e1104de3eb2,"Merge pull request #1493 from ericvergnaud/realign-csharp-runtime

Realign CSharp runtime with Java runtime, implements #1441"
2739a0c9efb3f74d10f4b23553c0b984fa07b1e1,Fixes #1492. only create javadoc if we use `mvn -DskipTests javadoc:jar install`
b11ff9636aacd028f87a15e75b3927a0b7c67d20,Fixes #1299. matching a set didn't properly notify error strategy of a successful match.
068a13e0f8e1ea3239f956b4c11cf6933f690624,Update all other targets
31b259e636c43f86c14319be5fe2f3cf8925970e,Merge branch 'master_upstream'
c1a5553afba32c578e54d4c712f5575af50d107f,"Build fix for new multi-threading lock.

In XCode it wasn't necessary to add the condition_variable header (probably included indirectly), while for other platforms that is necessary."
f003cce7d980a2aa94ccc1429884f249e83462ce,"Fixed a build problem on Windows.

The import and export declspecs were wrong and lead to missing symbols when using static class members.
Additionally I added a VS2015 solution for the demo, updated the generation script to use the new ANTLR4 jar and fixed a warning."
8bb522dd4ec03344fec7ae790f8b7f4bbd2562ad,"Unicode debug output works in VS 2015 intermediate window.

I updated the comments in the demo app about this."
e15e88a049c54cc6465069257b2de0d1e70df1ef,fix unicode issue
0ea8ede5b958731258c2db07870cc7e09c8f614d,"Changed cmake target install dir to an own subfolder for antlr.

Otherwise all headers end up in the include/ root, which is a pain and very unconventional."
a69299c507c336722b7ab5093b24957f724700e2,set javadoc to deploy phase.
ec5f2ecf311510bb21f973413f4d06368026965a,"Merge pull request #1498 from parrt/fix-1299

Fixes #1299. matching a set didn't properly notify error strategy of a successful match"
1eeaf20aa0d2154f277f7379976f8dff7f0bde5f,"Initial implementation of the LR loop optimization in the C++ target.

There is an issue with the tests. Some hang forever. Need to investigate yet."
7362152b7c41e821eb718a4cdf3d5bbb3e1de1bb,Merge branch 'master_upstream'
65982518eff5d5736df8633d58647eab55cb38e2,"Merge pull request #1499 from ericvergnaud/fix-#1496

fix unicode issue in Python 2"
a3aa610e3d0de82d90e5b49d7b367237c2381a9a,get recognizer name properly. Fixes #958
7c35979c2e69220b44f7459f3cb19f51435e7b74,"Merge pull request #1501 from parrt/fix-958

get recognizer name properly. Fixes #958"
dce402eb32175f3ae4346c804a3509ca77785a51,tweak
f35576a7f2570c7cd32f045e1ea5b32aba2092a6,"Merge pull request #1491 from mike-lischke/master

Fix for multithreading issues"
e1a330f540f735802f041d031c4c6ed3e26e275c,Update releasing-antlr.md
81aaeb199b1cf8efbc90a5a84d9c8eb1b2790aea,tweak
caa500094f554a2955641817d2396d0d392fdabb,tweak docs to show 4.6
57d8cc2e0cf51273bd39b0e0af4045fa24be4713,"Merge pull request #1503 from parrt/fix-some-version-numbers

tweak"
c9508b74a4e661fd07c96cc8e29dca8f1abfae24,"Fixes #1238, Fixes #994"
f964dd4af0e9eb215893b343626fa0a8a49340f3,Fixes #1042
be1b070a1acef2629876764d02c7df59afccc5d4,Fixes #1073
0c835a248aa1272e7cd79be588993fbf1583daf6,Fixes #1298
50df59fea82e76458a6228c5f3401ea902aecf80,Removed obsolete macros.
3b5c2a34d251f65fe3edf3fc9610cb4124f5a8e9,Implemented enhanced CommonToken::toString method. Fixes #1483.
76fcb6d37e373c3642ab9e7ef8f4949ff5e35c7c,C++ implementation for #1484.
f83d03a93e7d3721eacd86757d89e682d1da9db4,improve doc
e434560015d24a1c79f2b07a70628b1e399e8c7c,"simplify runtime test pom, add swift back in."
585c08b97d2656b289b400ef2f8615d57dbc77be,add donate button
b3e47672acd124ac61e331b51c3094f5f3b018c1,add donate button
6a52e3061d5c13aa802d3077094703d9c0984a5d,add donate button
30acda080def4cb81505e5561240e92378c35849,"Added Go, and keep target order in sync with above."
3f00594313f45a085a3aaefff62ae5b32add96ec,add debugging to C++
7430b74d983cc374c29dd8cc94286f7aea7eec15,update doc; move testing info to single file. rename doc file.
f38ccba94a15b3f9a4f3a1a68e4f35e8d29a7ad1,Fixes #1514
5cc106562f7584136a27137b7b6c387018f5ef21,update doc
8af4c38991c7a99f3ac92189c234b62803e309a3,try appveyor with tweak to cmake config.
8918d0f9536c83e4db0f6c4453fcca631cd4b017,more C++ debugging
3db68a7ea0a8faa70260a6543444853be0385a51,"Merge pull request #1513 from ericvergnaud/typos

Added Go in features table, and keep target order in sync with above."
17bad8ae690fcee9b97ef61156d1629df30ac6fa,"Merge pull request #1512 from mike-lischke/master

C++ implementation for #1484"
64a8c32138b47c76745fc555d1fb6a02ef91126d,"Merge pull request #1506 from janyou/Fixes-1042

Fixes #1042 Swift target"
8b75e3fc5bd28e5ee45fb30531c4ee762250c02e,"Merge pull request #1505 from janyou/Fixes-1238-994

Swift target Fixes #1238, Fixes #994"
fd3bd918287b6d2b6cc740d3839ecb09d825c351,"Merge pull request #1508 from janyou/Fixes-1298

Fixes #1298 for Swift target"
dd2f0a964f438ee020238fdb53579a37245015d8,"Merge pull request #1509 from janyou/Fixes-1073

Fixes #1073 for Swift target"
a68fb3a1831408ef58c14ce7cd96b1e8164b696d,convert runtime URL properly to file path.
484dd62a392431ece1f669cc5d2e89aee75155cc,Merge branch 'master' of github.com:antlr/antlr4
e13b0086261117b4cad1edb23c23d2b1476b90b9,ah. cpp should not be in main list of tests. we'll test individually.
81cb4367bb6c1338fd7b3e54e52fb1d872ac4e45,tweak doc
86ea75dcea75da8bcd7e8bd5a6c9e6f322112949,More doc for Swift target.
bf37edf0395c516bf466b1cb5df1a5216471779d,Tweak Swift target doc.
c7e291e77b456a1dca47976928f9767715934c78,Tweak Swift target doc.
03709dc8792bc9f72df2f1eeae40d33433c8bff5,Tweak picture size.
12744d40ada61bc923ce4cb17eadc977080d1d94,Update swift-target.md
50afb22068e7a883c60972ca04c00853eeca8dc0,Merge branch 'master_upstream'
428ff28f354cb6da8acbe623aec989f757e9bd83,"Added a new setting required by the C++ runtime.

In order to export generated classes in DLLs we need a way to specify the __declspec setting. This is is usually done via a macro that takes the import or export value. The new parameter (`-export-macro`) allows to specify this, which increases the flexibility of the generated classes.

The C++ target documentation has been extended to describe build specific things, includig this new parameter."
05e39fab8e420c369ea0cc95e3061d7b88768985,"Merge pull request #1516 from hanjoes/master

Update Swift Target Doc"
37148ff7fa1aee7ce97bd9d6350c6ba6f89b6e92,"Added CHARACTERS_COLLISION_IN_SET warning.

EMPTY_STRINGS_NOT_ALLOWED rename to EMPTY_STRINGS_AND_SETS_NOT_ALLOWED."
75d5db594160744844b16a71fb2247b989bceea3,"Implemented CHARACTERS_COLLISION_IN_SET handling.

Implemented EMPTY_STRINGS_AND_SETS_NOT_ALLOWED for empty sets.
Improved INVALID_ESCAPE_SEQUENCE, fixes #1077"
1d53b416eebbc75c93c6236cb327af055d2a6654,Added tests for CHARACTERS_COLLISION_IN_SET.
49cec3a610636091fe1328eb4cbeea3703c6dadb,Added and improved tests for INVALID_LITERAL_IN_LEXER_SET and EMPTY_STRINGS_AND_SETS_NOT_ALLOWED.
bc7678011d7503ea769e406e7689e0a0404e2e49,Removed CharSetWithReversedRange from runtime testsuite.
5d3b99b2ee5639dc5baaf6d49f76d70c9f3901a2,Fixed error message for EMPTY_STRINGS_AND_SETS_NOT_ALLOWED.
642d06ebb2f3dda64bcfe0e73787d1f4bf812241,fix typo
b503838a592a5c84ae2d8735af37f24355548079,simplify
e0460f103b6a7fe8c57474a78f06eb760f907b66,simplify; reduce indentation.
160825a86f34368fcbc2c481bb23c469dc466679,minor reformatting.
9f948c545309f7a8d51bc630b9998b81870a596b,"Merge pull request #1521 from parrt/KvanTTT-character_issues

Kvan ttt character issues"
c78d42657e9f8104b1229e95cd9944a00c94820f,added link to the C# page
d4e1f80cabf015909bb4da0014d4b376b18eb9a7,updated the page
cf87c2371edf552747e88b3e64ac26c8e8cf4820,cleanup
07f6e3a681667c490c4bca5be8482a02ac4c4d53,modify output paths
321a6f28440ecb7c8afff988801111ed19d580e1,create and document NuGet packaging process
3c1a34d0055b6a356dabf8c715cf61eb5c92627c,add this to 'building a release doc'
586b36fe94d8b1710fc5a66c720c42d82e013ecf,tweak doc. update assembly name to Antlr4.Runtime.Standard
7f957813212152b5e51aa2d9ccd93231a90a600b,update doc with more detail on building c#
0c332f704cdb6b96b7fcdb7c51f233d686ae6fbe,tweak to doc
d1b429d94c68d44034027ba38291ba0c3bb1e887,"Added a new setting required by the C++ runtime.

In order to export generated classes in DLLs we need a way to specify the __declspec setting. This is is usually done via a macro that takes the import or export value. The new parameter (`-export-macro`) allows to specify this, which increases the flexibility of the generated classes.

The C++ target documentation has been extended to describe build specific things, includig this new parameter."
31726311a8c1647b8a375b0978f71de0759cceed,add exportMacro to list of valid grammar options. verified it works in grammar and -D on command line.
8a483987c4c1e162b484998ce11f1a6cd4340c3d,"Merge pull request #1523 from parrt/new-cpp-option

New cpp option"
d388e6b86751bda78de2b0bf3334c01b4b71f17f,"Merge pull request #1522 from parrt/ericvergnaud-publish-to-nuget

Ericvergnaud publish to nuget"
aacd2a2c95816d8dc1c05814051d631bfec4cf3e,[maven-release-plugin] prepare release 4.6
23313ee44ee26b8614961a6e0a04b7f7661cdb79,[maven-release-plugin] prepare for next development iteration
b94ecc0fa5edeced4734f657890c28eeeeeb79f2,update doc for new C# build
c4c2966dbdcda35bbd8d82e28fd435f570d47d21,update doc
14f0c7a66307107df1fef350b9bf6325dc7a315e,also published to npm
a87df6f28a59059a669c7e33396bf840dff9ca36,more js docs
8df5550857ed478b1a0608c60cb32bb7b06f6feb,"Merge pull request #1511 from mike-lischke/issue-1483

Issue 1483"
fed8c97bda1a80ce62828c25083a45e8070d7108,"Merge pull request #1524 from ericvergnaud/improve-javascript-doc

Update npm related docs"
a9dc3ebd86ea737fb9210b0a9f8e6ab45c592560,Merge branch 'master_upstream'
d324e9a46b011e004a0df0ff179b3f250fc992b5,Merge branch 'master' into LR-loop-fix
56d1e2f2cc7feaebfb6ca7136d8d1b742d61dd3c,Added new file to VS 2013 ANTLR project for correct building.
7c4027118ca0254d6cbd0d4af94db8e29c7c4c6b,Re-added changed exportMacro documentation (got lost on revert).
4458950fd83a14148270348cde3bd4433347eca7,Re-added changed exportMacro documentation (got lost on revert).
6398a06fba40af51fcd2a9357843ac66775ca7f7,fixes #1530 and #1531
3cd5e746debb7b45ccecc1a4f952765b53d5fecd,"Merge pull request #1536 from ericvergnaud/missing-python-imports

fixes #1530 and #1531"
bc9e89ec701e369d43b02c5def07c31e4eedf65c,"Removed command line option for exportMacro.

This is now handled via a grammar option."
4dd4a676a9451d6a69a1fecbae3669d56794a6c8,Merge branch 'master_upstream'
367f09dcbe77a53ae58924da4efe787f490cf101,"Removed command line option for exportMacro.

This is now handled via a grammar option."
e1fb0b68c7c474b7c2429141e09ecc96aa747493,C++ implementation of the LR-loop optimization.
5e936de6d4d8c139954ab51e01481e4baaf69af1,Merge branch 'LR-loop-fix' into optimizations
218ae7360858163826c53c0bce73e13c8bb131b3,"Make return states the same size as the parent array.

Both arrays have always the same size and after reducing common parents in a prediction context optimization we also have to update the states array."
4125fbad8a6c40c664b0d85a3d652cd3ff301297,grr...
cbac45e6ed6b62ef2ada930c98b017cc251a2c14,Fix documentation of getHiddenTokensToRight in BufferedTokenStream
de9e032f1b7c71c94b472adbd9001b14042dc159,Update contributors.txt
0123d874e69d99c5bc0ac1a199ed66e70f54c5f1,Merge remote-tracking branch 'upstream/master' into dotnetcore
bec0c36a328d7773c8a6b00953403a451d887216,"Merge pull request #1528 from mike-lischke/master

Fix for VS 2013 runtime builds (C++)"
abf16b08b901d4a7bb3217ddcf3f9ca9e141c849,"Merge pull request #1541 from ericvergnaud/fix-#1538

Fix a Python 2 typo"
58600d29b873728eb859f59eb7c5b14f083b00c9,"Merge pull request #1542 from akosthekiss/fix-doc-hidden-tokens-right

Fix documentation of getHiddenTokensToRight in BufferedTokenStream"
3ce00ec933f7dcada51e2b3440c71f21237254d9,fix some typos Sam noticed.
ab00880c05331bbf9e4285b7c2446e93d53122a4,"Merge pull request #1544 from parrt/minor-internal-codegen-tweaks

fix some typos Sam noticed."
df142794f601959e4f107417dd4b1082cee9f503,add blank line after copyright. Fixes #1539
33613657a59b19bb47c6e71f43e579a19c33bea9,Add regression tests for #1545
7a83cd49105dc9c600fdf2e4c99d7a20f84683cd,"Fix code generation for LL1OptionalBlock bypass alternative

See #1545"
8b21cc3dfb12b666d26816a4e77c1504e1a87cbd,"Fix DefaultErrorStrategy.sync handling of end of rule

This change updates the default sync() strategy to match the strategy used
for selecting an alternative when prediction leaves the decision rule prior
to reaching a syntax error.

Closes #1545"
8ab5f02f7d23412e412207e9b8edc242919111f6,"adapt code to compile with msys2 mingw compiler
- add required extra flags to the C++ compiler in CMakeLists.txt
- guard some code with _MSC_VER instead of WIN32"
03a75a5ce6ee2ee0e0baa531d91b32f245f8cc52,"fix error ""'CommonToken' object has no attribute 'stopIndex' in Python{2|3}"" #1529."
0774117889c02fb5a9aa79a5b787ac1e7d6be7d2,"Merge pull request #1551 from KvanTTT/master

fix 'CommonToken' object has no attribute 'stopIndex' in Python{2|3}"
1c987e77eaa2baf786023cfff437a409f4623221,"Merge pull request #1548 from adrpo/FixMsys2MinGWBuild

adapt code to compile with msys2 mingw compiler"
1d066e0a6be25c01f5c25760c34d81c46636e12f,"Fix test cases affected by recent changes

See #1545"
ad31b4400951190b468e861febf9a4b0f07e9617,"Removed static libraries from deployment script (Windows).

Static libs are huge, so they put quite some burden on download management. They are easy to create from source, however."
189d3904818e6583538337b6cbe4b084543852b0,Merge branch 'master_upstream'
f79a34aa3ab947603330680019cab43a23a29b17,"Merge pull request #1557 from mike-lischke/LR-loop-fix

Lr loop fix"
644478a01515e19aec5a1410c8ddb34d039fd7f4,"Merge pull request #1558 from mike-lischke/master

No static libs anymore for Windows C++ runtime."
24b20e236f8eba5c8ad8df9e2b656f3b94c0ab63,"Remove redundant isExpectedToken check

We know by the time this check was reached that neither EPSILON nor the LL(1)
symbol are in the lookahead set from the current state. Since EPSILON is not
included, the state cannot see to the end of the rule and thus nextTokens
contains the complete set of valid LL(1) symbols from the current state. It is
therefore impossible for the LL(1) symbol to be ""expected"" when considering
lookahead with full context."
b57843d983cae8c5faa1008412d2391c2bdf4f5b,"Merge pull request #1546 from sharwell/fix-1545

Fix multiple problems with optional block bypass at end of rule"
36ee17449fcc1a41b97022f6367187ce673dfdf7,"Fixes #1556.

```
beast:/tmp $ a4.6 T.g4
org/antlr/v4/parse/GrammarTreeVisitor.g: node from line 2:7 no viable alternative at input '..'
org/antlr/v4/parse/GrammarTreeVisitor.g: node from line 2:7 no viable alternative at input '..'
org/antlr/v4/parse/GrammarTreeVisitor.g: node from line 2:7 no viable alternative at input '..'
org/antlr/v4/parse/GrammarTreeVisitor.g: node from line 2:7 no viable alternative at input '..'
org/antlr/v4/parse/GrammarTreeVisitor.g: node from line 2:7 no viable alternative at input '..'
context [/report INTERNAL_ERROR] 1:17 attribute arg isn't defined
error(20):  internal error:
beast:/tmp $ a4.6.1 T.g4
error(181): T.g4:2:4: token ranges not allowed in parser: 'A'..'Z'
```"
64fd96d0452df3d3deac6af78c0581f0715dec25,Update releasing-antlr.md
75784e0b8fbecbbde7931ad0540e63dfb4d34569,update file list needed version bump
2629433830ffb89ee1dcea6381e3163892902e6e,bump version to 4.6.1 in all files.
c2a0ed7272fe207037327aae898b7a07c4e7e3bc,"Merge pull request #1562 from parrt/fix-1556

Fixes #1556."
aa909ddcb16ed74f571f5468380076675e730117,"Merge pull request #1563 from parrt/bump-to-4.6.1

bump version to 4.6.1 in all files."
5bc40faebb25ad357ce41c425a9bd23d8e5ba08a,fix typo
a60fcfed0ff356306c54c9f4c30598e827e3af2d,Removed the need of a shadow s0 copy in the DFA class.
c874ab68fbf82febaf9b403315b29df41efc9365,Merge branch 'master' into optimizations
6b007b445cb0d36e8f891d11236ffefc1a0d90d3,"Disable label checks for left recursive rules

See #1543"
d5dcfc42c4824a370d09400fe5d9f9893f850aca,fix an issue where loading antlr from an IE web worker would fail
81f52adf8224ef27174e6a89ad90dce40c4a26fc,"Merge pull request #1570 from sharwell/fix-1543

Disable label checks for left recursive rules"
0dfcc1822f7f8d9fb26ec874280106218bdb40af,"Merge pull request #1572 from ericvergnaud/fix-require-issue-in-IE-web-worker

fix an issue where loading antlr from an IE web worker would fail"
040e40ec581f19f1b82d79094ab961ab30241bc5,"Merge pull request #1565 from ericvergnaud/fix-javascript-typo

fix typo in javascript visitor"
eb53e70e397b24731ad28a0b547d36fbfefe4c6a,"Implement support for optional getters

This analysis is required for proper code generation in the TypeScript target
when strict null checks are enabled. It also applies to targets intending to
differentiate optional values from required values."
9009a1b98901553aafcfb70e3b8d93c0bcbc1f30,Simplify logic leaving a subrule in ElementFrequenciesVisitor
a17b299cd35c5133f05077c6efb8fdf439df5cf2,"Merge pull request #1576 from sharwell/optional-getters

Implement support for optional getters"
4cd6156e6b446f745c06fb0faefa93d4039b1bd4,Add first visitor test for Java runtime API
8becb01b06534fd999d525250f8b3793ea9768d0,Add remaining visitor tests for the Java runtime API
722212acfd666050738486b585ddf1d054dc30f5,"Merge pull request #1578 from sharwell/java-visitor-tests

Add visitor tests for Java runtime API"
8d7a9e19e2343a924544bf181410f4a2a0e2ec24,Use MurmurHash in TestPerformance so results are comparable across targets
c7a9fe364a5ab1a0423fa3a3f4012d9131b64189,"Merge pull request #1580 from sharwell/portable-hash

Use MurmurHash in TestPerformance so results are comparable across targets"
d0cd25063450b5a60249eeba57061705f7898bd2,"Remove the shared visitor tests

These tests were modeled after the listener tests, but were not implemented
against the standard visitor API semantics. The tests only execute in the
Node.js target, and there is no straightforward way to implement these tests
across multiple targets. New tests which cover both the traversal behavior
and the runtime semantics are now available and should be implemented by
each target."
204c2817728f3fab3cc9d48e8a06486396fe9772,"Fix optional element analysis

* Properly handle elements that are optional in some alts but not others
* Properly handle block sets (a group of terminals producing a SetTransition)
* Properly handle OPTIONAL subrule"
587ea3646c17e36f37f1bd3a1ab32609f4dc3ef2,Don't use list labels for elements that appear twice in a block set
8adfb56d53a45e4ea77baea5c9dd25a10f5b1697,"Merge pull request #1581 from sharwell/rm-shared-visitor-tests

Remove the ""shared"" visitor tests"
33ac0c3611bf78d5dc880a52ba5eadd3a5ec6aa5,"Merge pull request #1582 from sharwell/optional-analysis

Fix multiple bugs with the new optional element analysis"
e093d410ebaaf90d9682b3d9e2d2087213a1c3cc,Use single-line comments for copyright
385e96784db04a18cb7c8ff7edb6ea85a29cdbaf,Initial fix for labels in left recursive rules: https://github.com/antlr/antlr4/pull/1570 & https://github.com/antlr/antlr4/issues/1543
a46db4b0b7d129907c8880e96a4e7e193d170b52,"Updated testLabelsForTokensWithMixedTypes.

Removed excess testLabelsForTokensWithMixedTypesLRWithLabels and testLabelsForTokensWithMixedTypesLRWithoutLabels."
a558334a010a527d452feab0a28dc53743db1444,"Code cleared, added comments."
bcde6f923a891d08a3308f4a37acaf90c46b878c,"Reset BufferedTokenStream.fetchedEOF when calling setTokenSource

Fixes #1584"
4a5717162e64c776498223f29e627a1ad49a11bc,"Fixed indents for else statements.

Fixed correct token in checkForTypeMismatch."
ff2b2b8ba67c23d3d37dd257e56d6b40db698486,"Document the value shifting used in the serialized ATN

Fixes #1270"
c929469c5f36fb2094ab2f494fbba7f29f24242b,Restored old testLabelsForTokensWithMixedTypesLRWithLabels & testLabelsForTokensWithMixedTypesLRWithoutLabels tests.
633a2df710d733e5721fbf3e4a743047e4920700,"Mark BufferedTokenStream.reset as deprecated to avoid confusion

See #895"
5d4efafe8e1e93529069b6576076995c541bb9c3,"Support using the Maven plugin to generate test sources

Fixes #1579"
73cfd0592fa030fc2de7cd3d4e521fedd399c302,Add missing copyright header
7f352618a0dffa9a7fe2ef1241c9d8f82bf63d0a,"Merge pull request #1586 from sharwell/reset-fetchedeof

Reset BufferedTokenStream.fetchedEOF when calling setTokenSource"
01ff377d25d18b60576b895528df166592d17228,"Merge pull request #1587 from sharwell/document-shift

Document the value shifting used in the serialized ATN"
b8e0d543e3d61e444e840641c9a5381e16d127e1,"Merge pull request #1588 from sharwell/test-sources

Support using the Maven plugin to generate test sources"
9446f5f4b1b1f1e385fb6e9ddab316e46392f465,"Merge pull request #1589 from sharwell/missing-header

Add missing copyright header"
d71c2157cec0245df8a2ec0a3c29e3a7188d4a05,Fixed @sharwell note about comment.
58b7b717310c360d402c2fe9e57c9c58db1168e2,"Merge pull request #1583 from willfaught/copyright

Use single-line comments for copyright"
2dd7eb1164a11e6c05d6ee880b1af8acd4716ca6,Format
810000c23eef25b67fc204b7f5b25d4cf7d88ca2,removed superClass import
7cbef5617cd6e2ee530c2b4d30ff31553a807cba,"removed lower case formatting on types. Case has meaning in Go, needs preserving."
5e9ecae28128fd28390680575e1f9588dbda59af,"Change StringType to lower case for Go target.

*  See antlr/antlr4#1594"
2fe1d8333f318b47e5a48af56e68e82b1b1034b0,sign contributors.txt
a053d908fb9559fd607f1d3223275ef2443ec4e8,fix missing variable declarations
d53e4f248d39f5bc3046069c401dd394caf778d5,fix incorrect std::map API
23fd4a00f200dac1383ca84d21a76889ed369fff,sign contributors.txt
ee82046201890a30acd9c3b72977beab5daba4a8,Reorg Swift runtime file structure.
139225f76c29776bbac1c9f458ca1f57bedb1973,convert documentation to Swift style
8fd99fe8d931dcc8cb9075353aeeaf22d92462c6,Adding Package.swift for SPM integration
893ed8449b9125424ffecc4cb09dc9cfcffde160,Tweak xcodeproj
7c24680e3c70d0a08e12580607e7ec493aedc54a,Reset fetchedEOF in BufferedTokenStream after setTokenSource is called. Fixes #1584.
8b43f3f7e00dc198b9c602294fb9f9f1b469339b,Some deployment changes because of license file changes.
82d0e8f86a99e3106c66f3794b1e7556fafaa5cf,Merge branch 'master_upstream'
d733016fd49e00ce3880bbbf2f4948d104a8671d,fix wrong antlr4cpp runtime include path
91d8d13b058d6098615e96b96ba0cf87c69dde8a,Fix travis build.
f02d8c1a4b5521bbfe3ac239ebaf033564ca599d,fix #1584
5d03880079984160f78e976e2fc8dbecd1055eb3,Merge remote-tracking branch 'upstream/master' into dotnetcore
9e590c08b7f7c4b5dc861c5ff2e75f57c7c4eddf,"[csharp] able to compile with dotnet cli under Linux
1, moved xproj file into Antlr4.Runtime sub-folder to keep convention
2, removed two cs files that no longer needed
3, fill in missing using directives"
7f0c990645b57e464faa76013a33c4fe3a37961f,"Merge pull request #1616 from ericvergnaud/fix-#1584-other-targets

fix #1584 for C#, JavaScript and Python targets"
e1c51d367e1768aba8e8815ced50ae07a2570d90,"Merge pull request #1607 from mike-lischke/master

Some deployment changes because of license file changes."
7f8890bc3ce37e7e1ae14e1ba422d7e93162634d,"Merge pull request #1596 from willfaught/format

Format Go runtime files"
449a32d4aee73cff97d28221561c367b8eaf08e4,"Merge pull request #1603 from marcelo-rocha/fix-parse-tree-property

Fix parse tree property"
4f3785a29e53962302e2d2fda993ee849250f867,Merge branch 'master' into master
3a2d4e49f169ebe43bda8716f50390db696c775b,Add bhamiltoncx to contributors.txt
cf8fba07158631511bed48ef88b66f75601dc890,Look in /usr/local/bin before /usr/bin for mono
8a08a6ed564c2d53a0f9ef582320943ad9f210fd,"[csharp] dotnet test files added, test passing"
4c4fdc0f83ddff06f1d99694f6ba4b1b9310ab79,Merge remote-tracking branch 'upstream/master' into dotnetcore
8d9e8f2d20dd72a16cfe3e6ea674f4429c739375,"Merge pull request #1612 from mshockwave/master

Fix wrong include path of antlr4cpp runtime in cmake/ExternalAntlr4Cpp.cmake"
5b495bfb484cc4de251892b54c3108e285811a36,Merge branch 'master' into update-contributors
304b8eb02d06f8c859aecc9a6594b62d4965d598,"Merge pull request #1621 from bhamiltoncx/update-contributors

Add bhamiltoncx to contributors.txt"
c3711dfcbcaee06e9918ffb4c6556de50524e0ca,"Merge pull request #1622 from bhamiltoncx/mono-in-usr-local-bin

Look in /usr/local/bin before /usr/bin for mono"
97aaddc0068cc04def5649142d6991f616e8396a,Merge branch 'master' into fix-missing-variable-declarations
93f916745d6737933eeda2ad1ebb08fc216d231f,"Merge pull request #1599 from robertbrignull/fix-missing-variable-declarations

Fix missing variable declarations"
379013bf351f6be15313d315a715cf5dff246f08,New doc 'Contributing to ANTLR'
242eb44cd0da28384581701fd42de0f557e7a1a7,Move doc/contributing.md to /CONTRIBUTING.md
6840f57e250567281fa9e94f2461d7efa25c7072,Fix doc-relative paths
bbf8476c8e4869ab8d71be3afc683d064f7d57ab,New method IntegerList.toCharArray()
3b25e076fc9fac51ff067504c3e49502fe8daff1,Restore null check
212a948656d3464b43cd82fd7a7457dc62d233a3,CodePointCharStream
558aa7b011621f1f792d4fd0a68643d7a6fdfcce,UTF8CodePointDecoder
09d45f5d6e10d8959393045f2543842afe3f4331,[csharp] update travis for dotnet
77067674b92c2573628d87f3a474cfb434c85ac4,Fix writing Unicode values in runtime tests
3017de10bcbca3ca05d27845c3541a55a03cbd35,Fix tool-testsuite
5391d2a8306b1637b910cb6ce0d9689c72a4e980,Remove unused C# runtime method Utils.ToCharArray
52e5bcd7833c0de37765aec53f36778450ddc08e,Unicode code point support for C# runtime
95db50d540db529649b1f517284278432e604c5e,[dotnet] target: use project reference in json instead of nupkg; fix for tests
64b29cc82c9d0f3c311511c6b4f224007bd91060,"Merge pull request #1624 from bhamiltoncx/contributing-doc

New doc 'Contributing to ANTLR'"
f5a2b5b50985aaa61427d36204b004d63970c135,"Merge pull request #1594 from wxio/master

Remove lower case formatting on Go types & super import"
bf4fa40ff91afbaad1a33f9623cd27abde22e097,"Merge pull request #1606 from hanjoes/spm

Tweak Repo to use SwiftPackageManager."
37adfd4e30979ce4e0a0e90d0b33bfca5f391a54,"Merge pull request #1625 from bhamiltoncx/integer-list-unicode

New method IntegerList.toCharArray()"
03470b0083f48296570f5576b4a539c5921dfba4,add comment
508d2f988fb7dedcff3dff13a3e6575473b6a9c9,"Merge pull request #1626 from bhamiltoncx/new-code-point-char-stream

New class CodePointCharStream (alternative to ANTLRInputStream)"
3c924384ebabd1e67471c936d96dc3084ad2cdea,add comment
bd8a367398f85a761bedac8b481f5417e6238dd3,"Merge pull request #1627 from bhamiltoncx/utf8-code-point-decoder

New class UTF8CodePointDecoder"
2fbd297063d28e36f1e787b03f44bf7deacc4060,open visibility slightly so we can override to fix bugs etc...
b4508d26b2ba3f31d5ce356667f0352d9abf50c3,"Merge pull request #1629 from bhamiltoncx/fix-writing-unicode-in-tests

Fix writing Unicode values in runtime tests"
e7d6331632946184c8912563c0a1cf6191bc82b3,"Merge pull request #1631 from bhamiltoncx/remove-unused-csharp-method

Remove unused C# runtime method Utils.ToCharArray"
0901851719a8324851e086566e3a43fce27b1eaf,"Merge pull request #1585 from KvanTTT/left-recursive-rule-labels

The final fix (hopefully) for alternative labels check in left recursive rules"
99ed4b6de662d7b9f647bf5c95cb34dbcabe8bd6,Python StdinStream/FileStream -> UTF-8
2defcc3e1f21a5767c14823b55a409473fe00e61,Change default encoding back to 'ascii'. Specify encoding=utf-8 and errors=replace in Python2/Python3 test templates.
d9d4d8c6c4756f1d59c7dfbea078cdd2645ec5dd,Restore Python3 FileStream to ascii/strict
eb54507e429df9d2f333f105958b25591c8cb67c,"Consolidate multiple copies of StreamVacuum, make use UTF-8"
f0947f4365d908cdbc63578ad65faf53cbc808ca,Update copyright in StreamVacuum.java
ce6ce0f45d0f6d39c6d8c58ed31104aeb2c4e255,Polyfill for String.codePointAt for ECMAScript 5.1 browsers
e0104885e827fc5e3307ba3c57de3472ec69f537,Use polyfill for JS unicode code point reading
0f52b7c0d9e5ad9da07828e0c963ac2ebe3c9402,CharStreams
d5b88cda71efc55c497f0527ae5402315604ff93,missing js export
444d35ecdef3b40477a5fd7f2cebb39cfbb681bf,"Merge pull request #1632 from bhamiltoncx/csharp-runtime-unicode

New C# runtime class CodePointCharStream"
e8f45783cd5740c7332a563aaccf328211d97d26,"Merge pull request #1630 from bhamiltoncx/python-runtime-test-utf-8

Use UTF-8 for Python runtime tests, allow specifying error handling"
fb22b1dbcb3ffe9b31c8333228962345f1b33449,"Merge pull request #1639 from ericvergnaud/missing-js-export

missing js export"
3e61421e594c09fa010b2775b0bbc6ce91b1c2ef,"Merge pull request #1636 from bhamiltoncx/stream-vacuum-utf8

Consolidate multiple copies of StreamVacuum, make use UTF-8"
c3d96eb5d7b85d0511c201d682b36d34c87bfefc,Added channelNames to all runtimes.
def7e6afc8a62ad7d8435b4bb3982d356f605ab0,"Added channel constants to JavaScript runtime.

Improved indentation."
e9e83a69e7947f4a0f8ac8bea99bc052ab1bd73d,"Added channel constants to Python 2 & 3 runtimes.

Improved indentation."
00d0ba129b7b6170f080a64ed77d8f42475d917b,"Mode constants written to file as tokens and channels.

I mean:

```Java
public static final int M1=1, M2=2;
```

instead of

```Java
public static final int M1=1;
public static final int M2=2;
```"
1fe1216e262071a23e0b42957c57f8dc93daec91,C#: mode constants written to file as tokens and channels.
956dc0547f1dcfec3113bf65fa6b59cd9b186365,C++: mode constants written to file as tokens and channels.
f9fa84213cda46ca8d7221ecee9b29aa992a971e,Swift: mode constants written to file as tokens and channels.
9998db82ce93b9041127a7aeae3c830b2df1a85b,Added channel constants to Go runtime.
ccb325db421b43ae6c3632dc3cc8debdc6e6a80a,Removed trailing comma in channel names.
8359a998b60ba38d1e67b30ab735adf22867238f,Updated generated files.
7b8ba3550bbcb41addd5436faaaf20eda8eb214b,"channelNames support in LexerInterpreter (C#, C++, Java, Swift)."
23f59ad99df0167843c2e6fb5fb37cf4b3857489,"Removed trailing comma in channelNames for Python 2 & 3, JavaScript."
38ba75e96ee840738a98e2b363ef9af188de4e11,Inline test instead of using anonymous function
499e44b03ac2db0c7524a4d7af422452bd3ffcfd,Pass through source name
b1a9daa6b0ecba82080afd4234ee5cc180d8edcc,"C# runtime: LexerInterpreter ctor without channelNames argument marked as Obsolete.

LexerInterpreter.cs reformatted."
e5867ee58feac5bf0538a802c78bdb26ab5040aa,Java: LexerInterpreter ctor without channelNames argument marked as Deprecated.
17b36bdbd4bdf126e71edd88352a44236c21061e,"Merge pull request #1591 from KvanTTT/channel-names

Channel names & constants in lexer, improved modes record format."
182f3c464784c241313caac500229772dcdc2dcc,"Merge pull request #1628 from bhamiltoncx/js-string-codepointat-polyfill

JavaScript runtime: Optionally support decoding UTF-16 sequences to Unicode code points"
2d24fa745737d6719110e5d819eb315d71ac30e4,Fix C# CodePointInputStream to actually work with SMP code points
2e99293345ad585c38b3bd2071ebd637c2a2e907,"Merge pull request #1 from xied75/dotnetcore

Dotnetcore build target with full runtime-testsuite and travis"
d3dd87db3e9ab9e0643d64ff6347767617f5c9ab,[dotnet] target: fix travis.yaml once again
895681044e7575c8b6d22a3d49a4c6b3fcbcc1a3,Fix #1298 for CSharp
11aa20c5e75180771c636ea7897e8d1f895411be,Ensure tests are run with file.encoding=UTF-8
cf3b513a5845272e365386804968661a274ec382,New TestOutputReading runtime-testsuite class
32a3a95da1862b74bd1966746bea0cfc7970055f,Import fromcodepoint.js
51edf3cece13b42b8419c7d2587a4e2beeb05fd9,Fix InputStream.getText() when input contains Unicode values > U+FFFF
2c447a2b7533926d200f3650f57847f316bae5ef,Python 2 and Python 3 support for lexer and parser output to a file instead of stdout
6611c1ae27d1ad990184d35aa1d5c265d24ab6c9,C# runtime and test harness support for writing test output to file
ae5250685d1162357564bdab2a0165775413127b,"Merge pull request #1637 from bhamiltoncx/char-streams

Make BaseJavaTest and TestRig work with Unicode values > U+FFFF"
0049d6d9ae42c746d18947617ac20fb967c29b10,Emit language-specific Unicode escapes when generating code containing non-ASCII Unicode values
22869148b35e1a1eac6f4150675e8322db8f8d8f,"Merge pull request #2 from xied75/dotnetcore

[dotnet] target: fix travis.yaml once again"
c7e7550a127a24cfdf0f798549a5b7b6bbae13b7,Fix CSharpTarget.java
3cbc2af0cc1f1c97f518b11b74294fa9cce05078,"Merge pull request #1655 from lionelplessis/fix-#1298-for-csharp

Fix #1298 for CSharp"
aa58ba5a2ebb5f4996335860401178d426c76e56,"Merge pull request #1648 from bhamiltoncx/file-encoding-utf-8

Ensure unit tests are run with file.encoding=UTF-8"
51f6ad69b6ef95bff3ef3b6a7a508e9ed9e0489e,"Merge pull request #1649 from bhamiltoncx/test-output-reading

New class TestOutputReading to mimic StreamVacuum for tests which write to a file"
565f6299c0c14788cd26f535685f9f96a87890b3,"Merge pull request #1650 from bhamiltoncx/js-fromcodepoint-polyfill

Fix JavaScript InputStream.getText() when input contains Unicode values > U+FFFF"
9b7e2a81ceed22f5d6362f0f435ee9bceccd5825,"Merge pull request #1651 from bhamiltoncx/python-lexer-parser-output-file

Python 2 and Python 3 support for lexer and parser output to a file"
287f17b79630975495c37307956d0fd9769b02a0,"Merge pull request #1652 from bhamiltoncx/csharp-lexer-parser-output-file

C# support for lexer and parser output to a file"
fb805a589b389ae9707a088077b8dc6bdb543479,"Merge pull request #1643 from bhamiltoncx/fix-csharp-code-point-input-stream

Easy: Fix C# CodePointCharStream to actually work with code points > U+FFFF"
f0b865eea8873a8f87cedf82573dcf16367c7c4f,Updated the contributors list.
3d9f07e5fe730ed9d313c580dc14cac383ecdf5a,update the contributors.txt file
426be8592ce509df8d142faa307e377446a654e8,Merge branch 'master' into dotnetcore
29514fca0bc7979754059fc816b36b4018e1b052,"Merge pull request #3 from xied75/dotnetcore

update the contributors.txt file"
e967463e9110b669a56f2c5e6f3fe7ce4434e703,Merge branch 'master' into master
cd922eb74c4917bec03502214b28223cee6da396,Python 2/3 runtime and test harness support for writing test output to file
cd7700939c0b0d35720cd2182dd98070a444a55d,Use code points for JS tests
3188d6a883e49931c633262136095d7cf6de6d69,Allow setting source name when creating CodePointCharStream from string
aa0b17695ea0922f5cd7c8de72a11b84b1151819,"Merge pull request #1660 from bhamiltoncx/char-streams-source-name

Easy: Allow setting source name when creating CodePointCharStream from string"
6c878b07096b3092dcee644481c95e3d06bf193c,"Merge pull request #1653 from bhamiltoncx/codegen-unicode-escapes

Emit language-specific Unicode escapes in codegen"
c35bbabc165a076f53ec6908b1731a3fc1040006,PR #1658: Also write stderr to file
b190b6eca69e84d799d28d7e98b25acd23516af1,MAX_CHAR_VALUE to 0x10FFFF
429f3015bdc67eb425934ad801646cbce3bcfc5a,"Merge pull request #1657 from bhamiltoncx/python-use-output-file

Python 2/3 tests: Write test output to a file"
b3f5d1e3d129245933f6b7b5fefc4712a54a3a9f,"Merge pull request #1658 from bhamiltoncx/csharp-use-output-file

C#: Write test output to a file"
877f6a396b44887ad1d79067670be7aac1873c4b,"Merge pull request #1659 from bhamiltoncx/js-use-code-points-for-tests

JavaScript: Allow Unicode code points > U+FFFF in tests"
88ecb3d9fae70280af8b21944ea834b777f24124,Get rid of all (char) casts
1df5cd6206446734e3dc5d4a39cf0759600f7b58,"Merge pull request #1661 from bhamiltoncx/lexer-max-unicode

Change MAX_CHAR_VALUE to 0x10FFFF"
f88e0cbfe08143b70903c820297c1dafb9bea4a2,Unicode SMP support for C# runtime error messages
e200f2a56b88be0c70d6d926bb2b4de87143b5b2,factor out the creation of error nodes and terminal nodes in the parser so that they act like a built-in factory during parse tree construction.
628aa8ff02a1d2cff673ce28ca3da6114112eba8,"Merge pull request #1665 from parrt/factor-create-leaves

 factor out the creation of error nodes and terminal nodes in the parser"
f8e7a2cf089f8bb3e3b8384361ac96f81bdad2c2,merge in dotnet stuff
e1101caffa26c446b538f5492515eb2d6a954821,resolve conflict
fab6172749c4bb1572474234338ecc31b26494d1,"Added ""action"" to badWords set for Go runtime.

Some spaced replaced with tabs."
a7a6ea74ffc03b8f95c242eb18c337346ee76e6e,"Merge pull request #1669 from KvanTTT/master

Added ""action"" to badWords set for Go runtime."
f5bbcaab515650729d3738a0d900815813f97046,"Merge pull request #1664 from bhamiltoncx/csharp-error-message-unicode

Support Unicode values > U+FFFF in C# runtime error messages"
2b3508d57efe38cbc37ecd87322a87fc95d67629,"Merge pull request #1662 from bhamiltoncx/no-more-char-casts

Get rid of all (char) casts"
291638ca2dcff8de38619cd20f3f1f31468d76bd,CodePointTransitions
81681abfb3900e4b59c54b50793be9d44ac01490,"augment TerminalNode with setParent(). Technically, this is not backward compatible as it changes the interface but no one was able to create custom TerminalNodes anyway so I'm adding as it improves internal code quality. addChild now sets the parent rather than create. MUCH better."
f594c6f74a371553efb6ac50a68c204e90da0b11,"Merge pull request #1674 from parrt/factor-create-leaves-continued

augment TerminalNode with setParent()"
7b9b0835b8ba614d2ab6788acb635de123cc27eb,Python 2.7 InputStream: Properly support Unicode code points
760d3eff825815c2a336525e2be7e1ffa107173f,Use generator expressions instead of list comprehensions
f68fac900b78f5fccf21df20a340bcf129e62a15,"Merge pull request #1663 from bhamiltoncx/python2-code-points

Python 2.7 InputStream: Properly support Unicode code points on Windows and macOS"
9e6703885520f20075c41ac14a93321c0d0e8be6,remove unnecessary calls
b0f067e522ff1e4eb9d247df09d3aeae23376b68,"rwky ppa no longer available, trying chris-lea"
5827c151835d07917de383f3ee320c3c8ce0df1b,try different nodejs install method
414533e6ac23b67335a6bae4641ba304138473e2,print node version
9cc527b9258c6678ea61d8770b2d5fd943669830,force-rebuild
cd72d7ddf85a2d65c9c3a219931b9126924fb8e0,"Merge pull request #1676 from ericvergnaud/fix-travis-build

remove unnecessary installs in travis"
44942bc5fc7ab2bda036419c77ab9361bf408283,Merge branch 'master' into lecode-official-master
c3785ce89daaeb2dca143351a85d585d96484bb5,Merge branch 'lecode-official-master'
528f675dd6e7ed556d14399bfa5538f85f01afcc,Some compilers need the functional include.
7a0f4e716a93b11318e841c82caa136a90030592,try generic python 3.5
0c45ada6555890ac510560dd0ae92a7a2206356b,fix formatting
49de9e8f9509c8a804610876c2522d757b821798,clean up per travis weblint
e968fe271a638f84e2ab49f0ff4fc3238329f2a7,"Revert ""clean up per travis weblint""

This reverts commit 49de9e8f9509c8a804610876c2522d757b821798."
df0cd343c14c56775e60aee0d861690de09ef3cf,Fix https://github.com/antlr/antlr4/issues/1666
d8ef0cb09b428b1e098cb2e463544d8108250cc4,Add contributor list
fc7a68d16db5aacc01ff0904a1b34905be72558a,"Merge pull request #1678 from parrt/node-deadsnakes-setup

node, deadsnakes setup simplification"
a6117de1bef9c7691e9e5dd2a071986d69822922,"Merge pull request #1677 from mike-lischke/master

Some compilers need the functional include."
1341d35f3760123d7e86e0ca77187e95a174b607,Merge branch 'master' into Issue_1666
91df265278c29fab39636e6d8b2246e35b63989e,"Merge pull request #1672 from bhamiltoncx/code-point-transitions

New class CodePointTransitions to create SetTransitions for Unicode code points > U+FFFF"
912342b01fd45bfd1ec7e103121d13d999d6ae30,tweak to C++ runtime; nullptr not 0
f384ef5fb49ad5e7d6b9b5f4d44e70021fd2c3d4,New utility class Unicode
96e7904167a1394e3677f8e82fba8db488afac40,"Merge pull request #1683 from bhamiltoncx/unicode-tool

New tool utility class Unicode"
78a20b72a3c2f4018dd8afdeeee39b03078fb6e1,Clean fix
160f893922d6071260476df320375c7f911f4931,"Fix C# Pair.cs, #1634."
f24b19ff8a1596a05d24b75a621cc2ca6737ab49,Right arrow escaping in XML Comments.
4a940aeeda6a5840812a29b27556217b1bdc5afa,"Fix for issue #1608 (runtime build failure with gcc 6.3.1)

Additionally, a warning has been removed."
14991143d401cd720818d649f7612de46c90127c,Merge branch 'master_upstream'
0101770e5feb8aa6e3fbbc4d95fc5a5764edd7c4,"Fixed a number of data type + signedness issues.

The UnbufferedCharStream had a few invalid casts which could lead to wrong numbers. This patch also fixes issue #1619."
5c5f52ab8335aa24b7c7137d0c227337e5bc007a,Use code generation in new tool-codegen build step instead of making tool depend on ICU at runtime
cb177712f6a82fe79e9d7bb084912caee05bd127,Use reference instead of pointer
698d6db2abd4533cbae6ce1928cb0691c5bdd3ba,"Merge pull request #1687 from bhamiltoncx/unicode-codegen

Use code generation in new tool-codegen build step instead of making tool depend on ICU"
780262a1c880bb04ba3aebe8d174df5f7f0e046a,"Merge pull request #1686 from mike-lischke/master

Fix for issue #1608"
1dc70310a3a550f7054522c68b784e2f67544d45,"Merge pull request #1685 from KvanTTT/master

Fix C# Pair.cs, Right arrow escaping in XML Comments"
ce09abb480e82c1701f3df91a3f824fbe01cf454,"Merge pull request #1679 from Thomasb81/Issue_1666

Issue 1666"
cd6bb1f2a07482d4407e17280e1bfec1aa7e7751,Merge branch 'master_upstream'
fd4246cf3f90f0e4ee961b8254a8c2220baf0c16,Implement new extended Unicode escape \u{10ABCD}. Bump UUID. Add lots more tests.
4589ff56eac0b4a78fcea657c8f6b9c697df1bb1,"Add test for ""binary"" grammar"
4ec294faffa14290e51e3574bad2ed4af186948d,"Merge pull request #1633 from bhamiltoncx/unicode

New extended Unicode escape \u{10ABCD} to support Unicode literals > U+FFFF"
05dad185f36552d452022c47f98845469791ff80,"Merge pull request #1690 from mike-lischke/master

Fixed a number of data type + signedness issues in the C++ target"
6215f18ec3518472abb2e592895b7a291d74ca2f,rename 4.6.1 to 4.7 everywhere
ec428d112403b10b3c066217e19e9b1c8fea1dd2,"Merge pull request #1691 from parrt/4.6.1-to-4.7

rename 4.6.1 to 4.7 everywhere"
e8bb58f7b984137e440d34fc5ba1c0a5dd477d15,Also support Unicode blocks
126112fbbc5a4544bc3f81f05f2bec2bee50a8fc,C++ implementation of issue #1665 and issue #1674
a4e0948600b067ecc6712999bbe4fa9a029c12a6,Updated version number.
392c637565743b8a85a050971c2de1cc7c9319bd,Implements #1665 for Swift target. Slightly different because #899 was not addressed in Swift target.
a55baba44cd1bd1c63ca95c6f8b2c4438246a05a,More versions updated.
382d8f1e924d572d472aada7f78b7c352bd5eebe,Merge branch 'master_upstream'
38c3aaae8ff5ac4ea11af42e9ce5c5c4774d64f6,"Implements #1674 ""augment TerminalNode with setParent()"" for Swift target."
2d390b7a71aa1eedc2e4fcbf2e6f1ab88870988c,"TokenStreamRewriter::replace(const std::string &programName, size_t from, size_t to, const std::string& text) expect a valid reference on std::string object. Not a null pointer."
10fdcaa432d5cd4eb1d2f51e8b1933373cb60b71,"Fix minor typo: possessive ""its"""
524a78ab326b752c82c71b35420e415dad3bfb18,Add signoff to the contributors list
c668c931fd7c810df97bf3363d53227ac058f6e4,Fix syntaxError prototype in order to use Recognizer instead of IRecognizer.
5c9f174f283235ab2f45f2868d365aea3f0edbc1,Fix typo
39ba47554a6a05ce5b3b977d3c81031c4159bff1,shift setParent up one level
b2012d90543cc14000ed06725bc75f41ca8d6959,"Merge pull request #1704 from parrt/move-setparent-to-parsetree

shift setParent up one level"
4b71f501a3d97b5dee61889d1b5625be3490cc6e,"Merge pull request #1 from antlr/master

re-integrate"
e368fb30ea3d801e78d89fcb0a0c50d4c5438e21,Using new Unicode syntax for C++ demo project.
3557f4838647245435ca44a249cd0620d5fd52e3,EscapeSequenceParsing
26249918f5b69867ce93b4a183d4e765fb68eb64,"Merge pull request #1694 from mike-lischke/master

C++ implementation of issue #1665 and issue #1674"
0539fb4b0da94083915e4dca669ebe6a550dd027,"Merge pull request #1699 from Thomasb81/fix_1698

Fix for #1698"
7f479fa5dc0c683df0cc7739152786cb8f405faa,"Merge pull request #1700 from jvasileff/patch-1

Fix minor typo: possessive ""its"""
4d8e8652955b7a0e0cbebca32af0c3f6696f5eab,"Merge pull request #1692 from bhamiltoncx/unicode-blocks

UnicodeData: Also support Unicode blocks"
d11968d993bfd2a8d96be1f6b6b79c0630c5f51a,"Merge pull request #1693 from bhamiltoncx/escape-parsing

New class EscapeSequenceParsing with \p{UnicodeProperty} support"
ca03e6ab5ed0833cce1bcc156a9a48ea28735aea,New \p{Letter} Unicode property escape
e04e7a40ccc14d46e5f3adb0bfda1aadd1f7b7af,"Merge pull request #1697 from hanjoes/master

Swift imple of #1665, #1674."
e353fa0484662546681dd168b23e24fbf20acc97,update comment @since tag to 4.7.1
070849698a954492e60fcff7fc04a606c62467a9,error-> warnings. Fixes #1537
ed4e3584513c7e5d5a8fbd5a5cf893b6ef337e2c,"Merge pull request #1709 from parrt/fix-1537

error-> warnings. Fixes #1537"
8d1df4c9e4b0df19d80f0329045cc4d3f89c62d3,"Merge pull request #1688 from bhamiltoncx/unicode-property-escape

New \p{Letter} Unicode property escape"
d9ae13fc1afbfa31e0a669c28928afe4a3e38a7d,we left invalid escapes in string literals which was causing an error. This is related to #1537.  All tool errors pass now.
77f7fd135d3fc45b49715706de9948e388edf0e3,"Fixed incorrect ""used multiple times"" warning.

Improved warning output in ATNOptimizer."
c5f9d5e2a11b65ff8f9038723dbbe22fca3619f3,"More accurate escaping (different symbols for string literals (') and char sets(]-)).

Improved  testInvalidCharSetsAndStringLiterals test."
c209f2a51ee9297e06da6235ea3d60814276f9f0,Update docs for new Unicode literal and property escapes
61138aee0c2a952b3155394359d31e72edc78b61,"Merge pull request #1715 from KvanTTT/master

Fixed incorrect ""used multiple times"" warning."
3df19fbcc8a33974596f0b4560ca19e772dc0f1f,make format consistent with most of antlr project
7ebf911b73497d40ecb874f800b2160357faa5c9,"Merge pull request #1710 from bhamiltoncx/docs

Update docs for new Unicode literal and property escapes"
6245938be9378b920e760e6525b4ecbfb187c3af,"Merge pull request #1712 from mike-lischke/cpp-demo-fix

Using new Unicode syntax for C++ demo project."
37fdf66c13ab7164b0639d4210cddcbbcc8d5741,"Fixes #1703. Updated comments to ensure people test isNil() or size() before requesting min, max, any single element."
8dee8c774b94323dd30d0795231715e9f81bc7e7,"Merge pull request #1718 from parrt/fix-1703

Fixes #1703."
b2b799b425862e7b6961647a6c6973aeba0309cf,Merge remote-tracking branch 'upstream/master'
ef6058ba6f59a6a397925267bc98f0211ee75d51,Merge branch 'Fix_syntaxError_proto'
b681d76b4a2f998f340568d9511844871a57138e,Remove IRecognize class + rename rename to Recognize
6572b080951ac4eab8954020282085d5409138e4,Fixes #1703 properly this time. addendum to #1718
d9d21fe9b3ccbe62ff6afb5a9cd7d5640ed4830a,found 2 cases that called function on empty set.
94ac8d4b4c8000bf39b87d37989d5a8451486007,"Merge pull request #1720 from parrt/fix-1703-part-deux

Fix 1703 part deux"
ce40463986a4084578ff68407c1d4847119179aa,Remove IRecognizer reference from MSVCS project
f6b09429b686ecc37d19c1995547168223e3150c,Remove IRecognizer reference in xcode project
f6cda7f0eaf609a0ff3029c00e06b560ef23b873,Added new error INVALID_CHAR_SET.
9b5f039e46e974683cf82df1699350cac68362e2,Handle INVALID_CHAR_SET error.
a1c50de31fe1888e2f0e1106ee6c777bc69d5bbc,"Improved testInvalidCharSetsAndStringLiterals test with invalid char sets, fixed Java.g4 grammar: [+-] -> [+\-]"
b07528796ef0dda11f68d489eca88373f85f97d1,Removed runtime CharSetWithMissingEndRange test.
e1ec6a42223ab20647c9e87c8bb2f5f68ac61c6c,Fixed line break in test.
f4e955b528b8417d45b6ecdd02eaccef0883ee5b,Improve error message in exceptions
154194c78dc986b726f17c61c760345e085675bf,sign the contributors.txt certificate of origin
d59d1932521fff0564e84d9afebb780e6500ec6c,"CharSupport code improved and cleared.

Tests fixed."
b3e667c6197ea19acc749a6e94241f14fae9b499,Fixed escaped charactes in error messages.
d3ce604df1e7bfcc6390bfdeccfb3ff2ccc9e5db,"Merge pull request #1721 from KvanTTT/invalid-charset

Added invalid charset error (for ranges without start or end)"
fbc49f2f001cbbc9d2db148df69c284b5b6905b4,Moved and simplified getIntervalSetEscapedString to CharSupport.
924b3d137c7a3470dc430edd2525dc3a327f1d49,"Merge pull request #1724 from KvanTTT/more-accurate-error-messages

More accurate error messages"
f18ce14afe3bb4854e1b6516066d230cb5c59ef2,indicate where mono is under linux:dotnet
58249f4a323f4b563bca5bf9e53276d821c72717,indicate where mono is under linux:dotnet
e3f85774a4797c922824c38d3717336f653158ef,"Reverted unterminated ranges: [+-], [-+]."
26e41343a615ff36460435e58f42df431690755b,Remove IRecognizer reference in xcode project (reverted from commit f6b09429b686ecc37d19c1995547168223e3150c)
4a5e65c5e7667bdd2f6d74a2557f9ea7e71d8faa,"Merge pull request #1701 from Thomasb81/Fix_syntaxError_proto

[Cpp] Fix syntaxError prototype issue"
e49b0977f5056b89fca911d8bdf1928d8096fac5,fix #1725; get dotnet target test run
d8826368d4236a8793b2a57682ddb3a0f934a6d7,"Merge pull request #1727 from xied75/issue-1725

fix #1725; get dotnet target test run"
e002b177c6bbe17789584d03acf7e36a5020d7e2,"Fixed crash with multi threaded parsers warming up at the same time.

The lock for the shared DFA state needs to protect a few more operations than just the addDFAState stuff and had to move up one call level. This in turn requires now 2 places where the lock must be aquired."
1cf28851c2ec1b90c38a655f06663676d7088a3a,Merge branch 'master_upstream' into optimizations
62eb069ffcd678d16634d2eeee82f879504e4abe,"Merge pull request #1728 from mike-lischke/issue-1601

Fixed crash with multi threaded parsers warming up at the same time."
bf0a7a64b102c29befe40ebab339a9c6c2da7a01,"Merge pull request #1726 from KvanTTT/master

Reverted unterminated ranges: [+-], [-+], [-]."
b66ffe86f9f40dc0929a0030cd01927e10cb4030,"Remove generated parser files and added testRig.

Current version of swift package manager doesn't support shell command
or any mechanism that we can leverage to generate parser files. Adding
a python script to kick off the unit tests."
e1898324df9d73f89dc8f3326dc896b79628567f,"Run ""swift test"" in test."
0c71574c8e050e56039aca7daa0fb3e92aa44f8b,Specify output folder so generated files can be ignored correctly.
313ab9dccee3ed01615916b9bc9b8358f6da86d8,Merge branch 'master' into master
e810ca60845a8baa45163a696b74574d321682f9,Fixed regression introduced by wrong optimization. Fixes #1708.
a4d2fde2ce4f9aa063712aae7cdeb4d5446c5723,"Merge pull request #1733 from mike-lischke/issue-1708

Fixed regression introduced by wrong optimization. Fixes #1708."
b8c74be62855aac9b1beb534f273fbca28a78b0d,"Merge pull request #1731 from hanjoes/fixtest

Remove generated files from repository and add testRig for Swift target"
2a118e284fd69c226d36df64176f4f8cf65ba426,Fixed null pointer exception for JS
6007132e2eaf8edb0042aeee87faffb542fd55ec,Also support Unicode enumerated properties via \p{East_Asian_Width=Ambiguous} escape
e8657fad2256900aff70215c0c686c4b32aa64fe,"Merge pull request #1739 from bhamiltoncx/unicode-enum-property

Also support Unicode enumerated properties via \p{Foo=Bar} syntax"
3ae7aba765f0cad47027035ddc0a34601b7d74c7,"fix for compile error

Currently the project tool-codegen generates the file UnicodeData.java into the /target directory of the project tool.  Running “mvn clean package” in tool erases this file and generates a compile error since UnicodeData.java can’t be found.

This patch changes tool-codegen to generate UnicodeData.java into the /src directory of tool."
892a7493153029c44e77d97daab9711b92f488f2,"Merge pull request #1736 from harry-tallbelt/master

Fixed null pointer exception for JS target"
98f1d808c6fe62acbdb2623c46a9bc7cfba3ce92,update doc
2c0ef5529dffe717cb1f906e259a6d32be8d484c,"remove tool-codegen

tool-codegen is now part of tool"
cf422bb107c661530338b9e8694a95b31e17132a,exclude icu4j from the final jar
34329c3fc138d8768bde0d324604cb591d7272af,add to contributors
a1d76e33a292933061744b5c81bb521c677447f7,"Merge branch 'master' of https://github.com/antlr/antlr4

# Conflicts:
#	contributors.txt"
197ea6e4e4f137c9c99ed15c460a9f6c7cfca5e1,Merge branch 'master' into master
efc89fd73c511db4ba0eb801f3397455db7dc6a9,"Merge pull request #1723 from chund/master

	Improve error message in exceptions"
bd1054a57e62b5d1cab715849a59f3ce5cae0526,Merge branch 'master' into master
5e3045f798c33326b445ee5329f68ee7902b8581,"Merge pull request #1740 from teverett/master

fix for compile error"
3d945eed2ab5b9e249cc78d22f63cf4c3deb3291,Fixes #1620. Make handbuilt lexer to avoid cyclic dependence of tool and plugin.
8dd87d49660323d1cb817ba07db8dfe304b590ee,cleanup
b16cfd6edb1fe4bf0ec6594cb94ef38e4b150129,add copyright
9bf394651598a6fe87794aad3a3ce4e5c6d98115,"Merge pull request #1748 from parrt/rm-xpath-grammar

Fixes #1620. Make handbuilt lexer to avoid cyclic dependence of tool and plugin."
39b3a35b4861348a4e7b2e443613ae689beb3aa4,Initialize decisionToDFA in init
7ca8ecf632f22ff8c8cd6f735cae2e01f756776f,Use xml comments instead of [cut][/cut] for section clearing after rendering in TEMPLATE files.
760ed2796cec7792927d1f61ddd9b1fb7f778259,Borrow changes from wxio
60d03df245a8e7f04f21ae0fbfbb0ecc0a4be677,Cleanup
2132555b6b7a2214cf92a905d95d954af5cc01c5,Get old changes from ATN deserializer
e1bce5284a12ead5ad9dd75a7f85418e5f2d0f85,Checkout older lexer atn simulator
b5c5ce2188896bb2b36c4c5f1862914ce7a4b871,Get older recog
4254fb63c6310c18e4b885a2f398f3c25cffbc41,Get older token file
4f4a9c9d6681be01042ad95c8643cb2518a4eef2,Some cleanup
cdd38076114132649d5562c363d38c81daa6e5eb,ArrayPredictionContext hash
b49858faca123289c13e8aee01a15575068628b0,BaseSingletonContext HashCode
e9307171c75a3f5ecf5c06eb970388e43deadbd1,Cleanup
994e6a0c8d8bcbe251fdca59d28e3d7329f20720,NewSet cleanup
6482b0157b1f13293b1de7543587593ee04515c4,"Use murmurHash for AND, OR"
fe7eee84bda4de4805bd9677968c20b6278b52e7,Revert refactor
4b5fd91c1de957c49c739d970947b48f8659942d,Minor mod
b62aea3ce3c065adb1a0845d3bf775f808b0c7c3,ATNConfig HashCode
3bc902e2ff151e0dd519a483668d64d187083559,Change DoubleDict to use int
f4061adeb22b07ac27e864be605b67233ff6c79f,"Use HashCode for ATNConfigSet, DoubleDict"
9ea82bc47afa95b2bee753a6206a2a7402ac7af6,Cleanup
86bf2fe089930629a088224fb352c6f5ec2da19c,Delete more Hash implementations
6ff55d0bfecf2c25525ca14c160b19c081ffa1a4,Fix bug in BaseATNConfigSet HashCode
1a28a0429b6575de7a36a9359c569ea08bbd65f0,Cleanup LexerActionExecutor
e22d94a81760473e82a8789fb47f9b9fe1be8bd3,Remove dead Hash methods
d43e63c36203b2b73e12846550b8952d6af061d9,Remove another dead hash string impl
ff44cc5d2854dd6d6277011c676d5ab863583702,Imports
df08e69a7d1ea68f1838c20a5aeb86c2ba3c6afb,Cleanup
d8998ec00dca240fdc413abf4f18396488107365,Remove last vestiges of old hash string impl
db447513e523d6e3370332650632ef9807e07296,Refactor hash methods
e41db9a250dbee57077165aac9cf6aa9d0a4138e,Make Hasher package private
747efb8f0e87db718b666ab5805ee07586cc20d3,Private comparable
9a13551424faea5f7a0ad0a664aedc07e3fc69f0,Fix performance issue in PredicitionMode
3219f1c77d60c98c2ca2dd7e76bade291733ea5a,Extended Pictographic
29b33bccc677628737b793968a18e2835110651c,"Merge pull request #1750 from pboyer/pkgInit

Initialize decisionToDFA in init in Go.stg"
e2a19e5a85ca9f25408cc7e8973d36446f651ff4,"Merge pull request #1754 from bhamiltoncx/extended-pictographic

Add new \p{Extended_Pictographic} and related Unicode property escapes"
fa1af05e4ce6144cfd83c86e2cfceef04a722809,"Merge pull request #1755 from pboyer/murmur7

Go Runtime: Murmur Hash and various optimizations"
02c4e59f928408a9a7204a2e8871d9b277d67606,"Merge pull request #1751 from KvanTTT/master

Use xml comments instead of [cut][/cut] for section clearing in TEMPLATE files"
c150d1bda51b178aef9727363f57f870984c24c4,tweak issue template
1af6657f84f4eef34ccb265f0fe4218a727e0be8,tweak issue template
1b0a8aa2e88ff20f6bd88376dd421a6daa677a58,Fixes #1747
60f70e778cc83acfebd7e444f0c129f47d3aa6b9,Fixes #1604
b467dc8015b395a111020e24c67e75722d048ca2,"remove outdated testing document, small update regarding API testing"
c71b7d2f1813c61844a8ccab4a08b542a25ead20,EmojiDefault and TextDefault
17054985aa7cc9deb7fa27f76659328607119622,"Merge pull request #1757 from bhamiltoncx/emoji-default

A few last escapes: \p{EmojiPresentation=EmojiDefault} and \p{EmojiPresentation=TextDefault}"
ef49021c8b5e84e409b2a52b7cf7de59fda18348,Fixed portability problems in C# target.  Also cleaned up some XML doc comments
4c1dc90064a73d7b57513c63c8fd68a418a9b212,tweak wildcard. Fixes #1213
6d5de2418d0f4fab349550c763b0c2ea96d27605,"Merge pull request #1758 from RobertvanderHulst/master

Fixed portability problems in C# target.  Also cleaned up some XML do…"
d966702d63b1819d57d56b83c5233d9449f84bc2,add wildcard test.
a8723234747fcd6049eca0c6b4dac72d9fc1770d,"Merge pull request #1760 from parrt/fix-1213

tweak wildcard"
e7979dcf635818a9154ca4c3bbfa825d9191c18b,rollback #1740. Useful stuff but breaks C++ unit tests.
4994ff540ddcb05663cac9a3ba76db9bb500252c,"Merge pull request #1761 from parrt/rollback-1740

rollback #1740. Useful stuff but breaks C++ unit tests."
ae3aadce3f2a0574db264fc4566d176ef7234d21,change whitespace for new wildcard test; messed up in python.
11b4ee61f0178a6b329e156998561cf87ea9c6ae,Protect shared DFA state with mutexes
b2e51e20b72ac552e6a26fe46fe236290a8d202e,add C# keyword
4f2168600d114ca7f36a83da6f9014f4bdd07b49,Tidy up CharStreams API. Add new doc/unicode.md
1f6a3296926f79cf31a52c15cd72d3ff6f4cd623,"Merge pull request #1765 from bhamiltoncx/unicode-cleanup-and-doc

Tidy up CharStreams and add new doc/unicode.md"
549d657ba4cea6f76ba36778b0a93c5a98547822,"rm dead code, tweak spaces, style."
53641c552c4b9a5120aa40ecc085b31465f857d0,fix build issue in C#. some weird changes snuck in.
251d27493e7594171dede1cd8696b3f92027e00d,add lexer speed tests for new unicode streams
553742e149b60291c41d7d46db652fc735b353ba,rm deadcode
aa177cf4156490ec1adb18d6480b8eb316628576,Forgot to add UTF-8 encoding to legacy.
b961c861434c0eb9cfa5ca62eaad8b21e3a4c8e5,add load times
648f517da0bb407f63a6610201112a5ba7f1e91f,add more load times
54601f7128da03adc713dc63fa5b6cf8c9c44088,"A few updates to the Unicode documentation.

It should be made clear that the recommended use of CharStreams.fromPath() is a Java-only solution. The other targets just have their ANTLRInputStream class extended to support full Unicode."
e68bedb2b21da80d2990ba6356f886e3159c5096,"Merge pull request #1768 from parrt/perf-testing

Lexer performance testing with new streams"
eee59b9f7fadf24216a402f099ea91f5446f1153,Merge remote-tracking branch 'upstream/master' into racefix2
0ad7e7947bc0ad67e92a73459367efb6535d8ee1,"Merge pull request #1766 from pboyer/racefix2

Go runtime: Protect shared DFA state with mutexes"
307df9c68dd964a5ba130502dbb66ff00213431b,New C# CharStreams static factory class
6de2f3f335c0203d32059c3b8fa29d5ae42d92ca,"Merge pull request #1771 from mike-lischke/master

A few updates to the Unicode documentation."
e0ea43ccb86b253bb0b30756a5190de4f9057db9,fix antlr notation
f72e22550ca0826c69158a940607bedaecf0c258,charstreams-js
0713128d04e42c9a23faf944f5513370664cb4ab,add size information to the load for streams
b2869ee0d747760468619a75322574a7fc747038,Fix TimeLexerSpeed when run from jar
6d2b5b67905fe9f99bd27ec8bc79e4070178900f,"Added ""run script"" build phase that can generate parser files."
cefd2c6528f770ee846d665c705801a7b97c022c,Adding TokenStreamRewriterTests.
cb396a5047847805ce6ac2e7682dd32d5194283e,Fixes #550 by separate op for insertAfter.
2dab85ce2b38a778e18a366b157995553f1b6b5d,"Fixed printing of RewriteOps, now tests are passing."
c3dc1b0d68a28151b3e691dbfd303da5b36c40a2,Update grammar name to align with JAVA tests.
91ce56c7fd5af16a49f0c873e44b809570426f57,Tweak Run Script phase.
e334b0df862ed42b86eca3a1187f6bee63ded635,Adding visitor tests.
850abe1c8143d7c28edb8377220572d596b0fd84,IntervalSet perf: Use binary search for IntervalSet.contains(el)
da71ea375fd538d7637e7ec459981974f7846b62,add legacy ascii *load* back. separate out stream locate time / mem overhead from load tests.
5a93f099a309f5f60edadb4a5902ca4a7fe31dc5,Merge branch 'bhamiltoncx-fix-time-test-resources-2'
9cf26d0163c961b01dddf68c5dd8820150e6ba9c,"add my results to Ben's, small cleanup."
39cf969fd91dace41f7bbc2d264963763d51c298,"Merge pull request #1784 from hanjoes/testing

Adding more API tests to Swift runtime."
b1360c4e28ca10c0c229e5ddb20b51c29f66ed4f,"Merge pull request #1789 from bhamiltoncx/interval-set-binary-search

IntervalSet perf: Use binary search for IntervalSet.contains(el)"
00d5781bee53df06188554663b6edaddff51df3e,update sample lexer timing numbers after IntervalSet binary search update.
4ca382c9b0a415760f0d8bec2215ff6f787cfcdb,add dependence on JOL http://hg.openjdk.java.net/code-tools/jol to compute buffer sizes. Dumps footprint now too.
eb490807203141de22da7cd9a474c11bcb9cded2,add test showing cost to load from a file where we know the size.  Add test of small file to load as well.
de4d1299215a426ad2dc838e8b30fc9a84dd1f33,"Merge pull request #1791 from parrt/use-jol-for-object-size

use JOL to compute buffer sizes. Dumps footprint now too."
ab0655598ed4ddeff075fafe301ef4d57bd0017d,"Improve memory usage of CodePointCharStream: Use 8-bit, 16-bit, or 32-bit buffer"
79eb3721e4a4618e16604cf79d49e423a17670a8,"Obsolete String.contains(_:) of Swift runtime
Starting with iOS 10, macOS 10.12, tvOS 10.0 and watchOS 3.0, Foundation contains
its own definition of String.contains(_:), which conflicts with the extension
provided by antlr."
3e06a04594b694ca19cb838b20a04086599ae10f,Sign contributors.txt
9764ff7c509c5f82efb520e23fab382ee0fd9ea9,"Merge pull request #1781 from bhamiltoncx/char-streams-memory-usage

Improve memory usage and perf of CodePointCharStream: Use 8-bit, 16-bit, or 32-bit buffer"
200379802aa69d9ec4d1c42377a25cea35f2fe6c,Tidy comments and add tests to ensure UTF-16 and UTF-32 support Unicode code points > U+FFF
1f0db00cd05b0d75bb714872ca255171436b1afd,"Merge pull request #1794 from bhamiltoncx/char-streams-tidy

Tidy comments and add tests to ensure UTF-16 and UTF-32 support Unicode code points > U+FFFF"
8108b342ad688e4ccffe509b23de82fdd624dfd5,Change UnbufferedCharStream to use 32-bit Unicode code points and 32-bit buffer
802f4c4e71327c567a18c31a102507a2b2409b05,"Merge pull request #1796 from bhamiltoncx/unbuffered-char-stream-code-points

Change UnbufferedCharStream to use code points"
366dbac8d1332eea009e714586369956e7fc7da1,C#: Change UnbufferedCharStream to use 32-bit Unicode code points and 32-bit buffer
496f9c398d71f2a98ab861b85d34607215887f76,"update unicode doc, code comments"
ef0ff3275faf5995344f6324a67b413b06fbda8e,Merge branch 'master' into deprecate-old-streams
9c61db36b0412c3669b133b01e6de80a306d28ad,Small tidy for Java UnbufferedCharStream
04972c2676d12cb57670f9e33181479787f14505,"Merge pull request #1798 from bhamiltoncx/csharp-unbuffered-char-stream-code-points

C#: Change UnbufferedCharStream to use 32-bit Unicode code points and 32-bit buffer"
0c3866213464786b9658179e10a10c168740e42a,"Merge pull request #1799 from bhamiltoncx/tidy-java-unbuffered-char-stream

Small tidy-up for Java UnbufferedCharStream"
0b36aca0e64ae8e5c458f507b64fa30955609bef,Merge branch 'master' into deprecate-old-streams
c3ed9a992db2ca63927bd77769097d38ff277af3,Add more about unbuffered streams. tweak style of code
1fcb5951c6c178cf0913be888d4781dd5f24d2e2,change the example to use the new stream interface
6dd9a3fbe3b3bd32be0e0bc0111dfdc78767c546,respond to @bhamiltoncx comments
cd2b6936cf4f07857c9841cb95c849acb1e2c31d,fix another reference to previous streams
a7b2f3f12db752d98305d96b8386b7a3cca343f4,more tweaks about the status of UTF-8 in previous and current defaults.
4a1e2c2fa5b550c702899be7d42f72d9d9d61d1f,"Merge pull request #1797 from parrt/deprecate-old-streams

Deprecate old streams"
828461337fdf7b93fa4965ce03ad894017f82bf3,"Merge pull request #1775 from bhamiltoncx/csharp-char-streams

New C# CharStreams static factory class"
6e474eb43ea4512e3e9aa7f356ee9013e6bf675e,"Merge pull request #1776 from bhamiltoncx/js-char-streams

New JavaScript CharStreams functions"
039f43999c0c60303da156f0a1b1d263d59c5abe,tweak documentation about various targets
66d2d7455dd5fa887a4d436e274aaa2503fd2354,Merge branch 'master' of github.com:antlr/antlr4
a1c225dd23c3404192bad3476427942749bb7a75,Use UTF-8 by default in UnbufferedCharStream and allow specifying charset
40e1072e7e086a02e36b7c251f42c6ba7abbb6ec,update target docs that need alteration for new interface
ad3b43459d1e4e9a5a10d0118bcf5bae5d6ddbf7,rm new
440f4e3e5c593b401d01d9d1ad8db22c06c02f2e,"Merge pull request #1801 from parrt/tweak-target-doc

update target docs that need alteration for new interface"
b632a57dd8143da61adf0738894eebd9be587252,"Merge pull request #1800 from bhamiltoncx/unbuffered-utf8

Use UTF-8 by default in UnbufferedCharStream and allow specifying charset"
7595725dca95ad8c8fae10af212ee2bc23c63ed4,add Ben to readme
bb33217d1401fd1254c9ce6d0fcfd320b03322de,add Ben to readme
04507895bdeaa3d8eb978bc24ac4f4c19046f39a,add link to Unicode doc
b5648f405b746d87ec559132ad1939fb6d402053,tweak documentation about various targets
2ab9c8ab5128647640ab3ecc0704f2075b1972a0,add note about utf-16 code units in grammars. Fixes #1802
46b3aa98cc8d8b6908c2cabb64a9587b6b973e6c,"Merge pull request #1803 from parrt/update-copyright-2017

Update copyright notice from 2016 to 2017"
e6a9adf27670c1cf51734dccffe0f7b7898f6e25,update 4.6 -> 4.7 in files
930e31d4702ea663c8251b36ad6e1e0fbcf0b75d,Merge branch 'master' of github.com:antlr/antlr4
e95b74842e0a122c0519130c850a874be86215ef,update npm doc in releasing doc
d4d7e3d3bc3b65bb00579fe826834a9263fa45e6,[maven-release-plugin] prepare release 4.7
62baf4bd0afe89d722ef0f89214adc1a0a875d60,[maven-release-plugin] prepare for next development iteration
315c28af7c4186b085e58fcc71aee86720445490,Remove unused String.contains(_:) extension
acad3365cf61095889437708c3fe501451d5530e,Remove public modifier from String extension
7212b5d445d4b1deffe5a252f461c86b046b414f,Fix spelling of StringExtension.swift
531f9f85dc48ae95480cdb64ccdd66bbaf961d54,Merge remote-tracking branch 'upstream/master'
c8d9749be101aa24947aebc706ba8ee8300e84ae,update doc on cutting release to 4.7
a4622ec8dc8bf7e80847eff52e5ba9f90cad1199,set version to 4.7.0 for npm
1fd2d1b4341a4919e7bdca4e37996e86a12f0961,Python 3 codegen probably didn't mean to limit ATN segment size to 2 XOR 31
b4be1900bc982cc3532021659c14f248074fba91,"Merge pull request #1793 from cmd-johnson/master

Obsolete String.contains(_:) of Swift runtime"
e254f346a4fd66e210845f9d8844faac3b03e8cc,Fixing Xcode project setting.
9d236bef8496c9a1e155f0a4003952ba0538c3a1,"Merge pull request #1806 from hanjoes/xcode

Fixing Xcode project setting."
61f6df21bef8d9a445de02cb96f7a7337da9fae6,"Merge pull request #1805 from bhamiltoncx/fix-something-stupid

Python 3 codegen probably didn't mean to limit ATN segment size to 2 XOR 31"
b5caa8e945c52f1f5863cd9f4d3b27bc337d89bc,Migrating to Swift 3.1.
07048fe787052fc6e1903d176ccb1f2820e06054,Fixing unit tests.
df600054affbe389293964e96cf8b41c4cb5fc63,Merge remote-tracking branch 'refs/remotes/antlr/master'
8af00801037d3b8933f29d0903daac3e9c05349e,add link
da4987dc38eb8719a6ba124549a375adfa0d43b4,[dotnet] update to .netcore v1.0.1; add osx build
96cee174cedbba391ae35dde66b10cd1e1dd00c3,Merge remote-tracking branch 'refs/remotes/antlr/master'
ea3d9d8fb4ee2196a5190cb3525fd37e36e03efc,"fixed a memleak ( ""previous' was not deleted when one of the break statements was hit)"
80aa7907a4d96964d172c725e02a176c94875c06,Fixes #1815. Add info on what the invalid escape is. Match \x for any x but give error. This prevents \x from appearing like a sequence of 2 char.  Updated unit tests.
60a81577198c2e2b80af497e5fbffb9399ba6b52,"Merge pull request #1817 from parrt/fix-1815

Fixes #1815. Invalid escape error msgs kinda sucked. Prevent null ptr later in pipeline."
6d4e019b167a4d9367c1deec22d4276cce543dea,"Merge pull request #1808 from hanjoes/migration

Fixing Problems after Swift3.1 Release"
f858cd594898e9a42b50dedbc5588e2d2a362b61,Fixes #1815 (for real this time!). Fix text set for erroneous escapes so tool doesn't fail later. Remove some duplicate error messages. Add test for #1815.
9519bfc36fcab155a4c37fbb32e5e83e02d58a6f,"Merge pull request #1818 from parrt/fix-1815-again

Fixes #1815 (for real this time!)"
5616e370e4f728f8bf5d2f2d3731857d9c2442b0,add null check to findNodeSuchThat
42e6b09d54ad8855da895f9c8c4a89f06aa0e534,"Merge pull request #1813 from FloorGoddijn/master

CPP target runtime: fixed a memleak"
8a9f259f62d22ec4330fb3e691b142729e0401e4,"Update getting-started.md

Either that or say what is is useful to do with..."
b8e81d5814b226457e738cd5163efb0eca4569db,"Correct typo in lexicon.md

’\’' should be ’\’

Signed-off-by: Yishuang Lu <luyscmu@gmail.com>"
6222dbff449736345c6cb720d2743da064844a10,"Correct typo in lexicon.md

’\’' should be ’\’

Signed-off-by: Yishuang Lu <luyscmu@gmail.com>"
1503821fa6269f50d5513b9cf79fcd8ca53aa992,Small fix in cmake file. Fixes #1809.
8995f0559f078cc7a3e0d63a8add77e6ba38b925,"Adds a new option to allow ANTLR to generate interpreter data.

Especially when you want to use LexerInterpreter and/or ParserInterpreter in any of the non-Java targets you have to provide the ATN and other data. The classes to generate these values are not in the runtime, however. Hence we need a way to tell ANTLR to produce that in a way that can be consumed by all targets.

This patch adds a new command line parameter (-interpreter) which causes ANTLR to parse the given grammars as usual and then let it generated a file for each grammar with the required interpreter values. A new InterpreterDataReader class has been added to the Java + C++ runtimes. This class can load the data file (a plain text file) and generate the structures that can directly be fed to the interpreters."
d812528c894b918be3d5aa8b114171ca2fdafde5,"Added new InterpreterDataReader to VS solution.

Fixed a few warnings too."
efc0a1487977260c35fa00cb6f58ac41a03f22f8,"Merge pull request #1810 from xied75/dotnetcore

[dotnet] update to .netcore v1.0.1; add osx build"
9ee5690bd9cae2e9b82994265076cf1467f9521b,"Merge pull request #1821 from lys0716/master

Correct typo in lexicon.md"
43e73c548b9a65f06bda2c76c3db37601c954d1b,"Merge pull request #1822 from mike-lischke/master

Small fix in cmake file. Fixes #1809."
2f248353a3a6c7879114d3e2e76e886cb8cad8d8,"Merge pull request #1819 from bradh/patch-1

Update getting-started.md (trivial)"
47e43cc8d6b5d1dfe5ff494503e6d0eec63d4b39,"Simplify output path generation

The twisted way to create a javac like output path breaks many use cases, including very simple ones with lexer + parser grammar in a relative subdir (where parser generation doesn't find the lexer tokens). Additionally, not all projects prefer to have their generated files in an output folder which is comprised of the given output path and the subdir given for the grammar files. The check for absolute paths as decision criterion is a weak one anyway - it makes simple usage difficult and doesn't deal with path expansion on all platforms.

If a javac like output path is required it should be easy to construct this upfront and provide it as the output path parameter, instead of implicitely creating it. This patch simplifies things without any WTF moments because generated files end up and unexpected locations. It now can deal with simple cases (no output, no grammar subdir) up to complicated cases (nested and/or absolute output dir, multiple grammar subfolders)."
76394af71ad4f3dcef4df6e7451a2d5f8d5dd2fe,"Channel parameter in c-tor is now a size_t - fixes #1827.

A bit cleanup on the way."
1fdb7cd31d569d3c358ff8f4854561775982a4bc,Update C++ target doc for latest API changes - fixes #1824.
defad74649538a5eff872ee4af486a5ef88bd145,Extended tokenVocab search to the grammar subfolder.
3f7c67106b2d950b9961bb38eba157fc9dcb52c5,Interpreter is now always generated. Doc updated.
8d420e3d24abe3de221d153e3bd72ea5ce9c46ee,A few changes that slipped through.
3bffb070b2a1f58d06c5f6c0158d07b37e06dae4,Final touches on Java part.
126eec7092c56513fc9fa864d6ec925931308722,"2 corrections (C++ runtime and interpreter data writer)

- A wrong check for EOF has been corrected in the UnbufferedTokenStream (now using the correct data type for the cast to avoid warnings).
- The interpreter data write function no longer implicitly writes out imported grammars. Grammars are merged and hence contain everything from imported grammars already. If interpreter data for an imported grammar is required pass that grammar explicitly to the ANTLR tool."
d12e755c022ac5fef6a3db91ca00965544c139ad,"Properly sorted exceptions in the forward declaration list.

Removed some duplicate classes there too."
8c05696ed4c2ec77abb921b6c3c73e6589a3efc0,update js doc
5fffe4bb2eb8522a79e89850edb0acab55b24059,[dotnet] try to get test run faster; update from 1.0.1 to 1.0.3; fix test dir removal not recursive
32a8874a29d270a3df9b5d25dcb82006e40adff7,Add proper error handling semantics to FileStream.
e94b3acaed060f5bb936f0ee8106283a57008016,[dotnet] fix again for the test speed up
b404abb11e50e9f49d247c729a31e80fa50d5b98,"Merge pull request #1844 from davesisson/master

Add proper error handling semantics to FileStream."
f41ce7fed464e8ddbfe4c72786de327c93dfba99,Fix tests for PR #1844.
81b8078860fb5e61ac8d8848f321b63f0976bc9f,updated
fc8b14b1dc7f36a49242b935deaeba0b5ee334e3,io.Copy surprisingly returns the number of bytes it copies so we need to explicitly ignore that.
e9dd953cf1bb4bb96eed3294c9734961a8c38e0e,Fixed another occurrence of NewFileInputStream.
a53c49ff44f425b46354bf6a595f3fc1fb780c0f,Merge branch 'master-upstream'
25eeb94498787f1479e3ad8dbb9be312209e96e0,"Rule names are now always written to interpreter data file.

Updated loaders for Java and C++."
c13964868c028aeedeba7f98572f7c1d97287c87,Renaming test.py to boot.py and make it more general.
d5f37015abea516996fb485406191854b77c0493,Adding more commands and comments.
9f41e6fd9d62869cdd28bc4df2bfd2c08a17e7bf,Adding support for generating local ANTLR Swift repo.
55f9c0650958dd9e20c03c57fbfc09c38b285a4e,Now can generate xcode project.
c53bd27734a3f9607cd736453ff023c833861ea1,Get rid of xcodeproj file.
834f1ede277c0f6ef46b8b065d87b0fb4f3b37ea,Find antlr4 runtime instead of hardcoding.
5e648f0867720ded8a251c0a5c69b506986e159c,"Add `new` keyword to return proper InputStreams

Currently the JS runtime sometimes returns (and mangles) the global
`window` object instead of a proper InputStream. This is prevented by
using the `new` keyword in all cases."
892aa4a3769951a531c34f60320672224319c6d3,Fix other calls to InputStream constructor.
cf359a0e32e2912a5e29ccfa42fb814b08589f47,"Merge pull request #1867 from TreeViz/fix-broken-js-inputstreams

Add `new` keyword to return proper InputStreams"
c1663e7c0fbdeeff2869d94c92d5ce5aae56fc17,"Merge pull request #1845 from xied75/dotnetcore

[dotnet] speed up tests; rename runtime dll ready for nuget"
f2ee752a588adaea7ed29a62acf23be04aa37e2d,"Merge pull request #1848 from davesisson/master

Fix tests for PR #1844."
7dc17ace6e1624ba08e3e2e322b60aa6617f5666,"Distinct error codes, added unit-test. fixes #1865."
de6f04be0beebd17ea6232f554635c5262127aaa,Fix the utf8 convertor in VS2017
9220df2e3721ae8c8d1139ad7e12d9228d2db6ba,Merge branch 'master' into master
e88eba13fb9ac5662df282822e9c940dd968d4a2,"add dotnetcore dll to nuspec

as part of this, add OutputPath to the csproj so it matches the mono csproj OutputPath"
e39543a257ea3ddaa5b721e6712f680062870e04,add build script and update docs
efa8a1a9f8187e9ab5bb597fa86cd9db5e48b48a,sign the contributors.txt
d0eaf29e51f5aa951da68abc98d5080843248eb7,"Merge pull request #1884 from waf/dotnetcore-nuget-packaging

[dotnet] NuGet packaging for .NET Core"
44ab88c6f9ec546e9d421c48652851046b35106c,Set version to 4.7.1 because 4.7.0 already exists on Nuget
381fddebd5a5793c06654361b845df8968d37e44,"Make ParseTreeWalker::DEFAULT provide an IterativeParseTreeWalker
as intended.

The existing code intended for ParseTreeWalker::DEFAULT to provide a
IterativeParseTreeWalker. However, the implementation initialized
ParseTreeWalker::DEFAULT by doing a (value) copy of an
IterativeParseTreeWalker, which sliced the object and therefore,
unfortunately, transformed it back into a regular ParseTreeWalker.

This change implements the desired behavior. Furthermore by making DEFAULT
a reference, we are able to preserve the interface to existing code."
2c4a55c10af31dc7ff7218e1764faa80f164231f,"Merge pull request #1849 from shravanrn/master

Fix the utf8 convertor for VS2017"
745c88a7c9b36ab3ce8d32601c3dc0d789aaf426,"Merge pull request #1830 from mike-lischke/issue1827

Channel parameter in c-tor is now a size_t - fixes #1827."
c97abe5bc269d1e84a4c6c6700248fe9466f9d18,"Merge pull request #1831 from mike-lischke/issue1824

Update C++ target doc for latest API changes - fixes #1824."
7ce775dcaa0fef51bd497a708d357eddb37a5cef,"Merge pull request #1862 from hanjoes/swift-py-script

Supporting Script for Swift Runtime"
053c594fec8b36d64c8f97ba7bb41eada1c75002,"Merge pull request #1886 from ericvergnaud/nuget-version

Set version to 4.7.1 because 4.7.0 already exists on Nuget"
fd5efc250d2a1664336df7778fc571cdad0cb40d,"Merge pull request #1891 from kosak/master

Make ParseTreeWalker::DEFAULT provide an IterativeParseTreeWalker"
22034daf25e08d0db5a505fff6f1914b135e30bd,"Typo in the comments of IntStream.java

An extra word is in the comments.

Signed-off-by: Yishuang Lu luyscmu@gmail.com"
47d639e7b7123b8b2ea423700718a5374d75ca8f,Merge branch 'master-upstream'
1bb3eb1ebfb0ba29d5bb36a354ccda1838660b59,"Fix listener example in C++ documentation.

The listener example still refers to Ref<> and shared pointers, but in
reality the generated method does not pass a shared pointer. The actual
signature looks more like this:

  virtual void enterKey(ParserRuleContext * /*ctx*/) override { }

This change updates the example to match that signature, and removes a line
discussing Ref<>. It also adds the ""override"" keyword in order to make the
user's code a little more robust against typos/changes in the grammar."
fd1930e82b64b1251e80860874914fc586e43d3f,"Merge pull request #1895 from kosak/doc2

Fix listener example in C++ documentation."
8cc91c3d4f27a0e2388e7a33d039febf8134418d,"Merge pull request #1894 from lys0716/patch-1

Typo in the comments of IntStream.java"
67f683d0ac35019e76cdfac9cd71fe37b548c35d,Adding generation of dyanmically linked lib.
d66f89db527c3335852459063f43c529c93a66cf,Removed xcworkspace.
6acec92866552a46afea96d23352ebfcd26f6a0f,Refactoring swift test framework.
8cbd7c0693445c554ea3d65f5beda9cdc3e26799,Get parser tests working.
3095de982efe28ddd2d7dfb1578287bee8103561,All tests passing. But slow.
a879297bb5c3a47f390c6798c9e5cdd6f4d971c8,swift build & swift test support Linux platform
a64ec12e739cec51c200e5578bc95000e2345756,"fixing tests, and some cleanups."
10a3ee3f49bce0563475cfb7aaea981eaf61b49c,adding travis configuration for swift under linux
e8962dad7e0c1db2a58a1e565518a4b7fd33d6c5,reads SWIFT_HOME from environment variables.
77eddc8e764a40b8da4dde0b82beab649c7e4e57,fix linker issue on travis ubuntu
13769268c96a47e2ca0425cbe5611f1102f65772,fixing string issue.
f15d9a31a338846bc14f419ce9ae6c82cae9763e,revert one trivial change in go test.
53b83d7184f9e1d5cf12c518405e88e7ca70d2b3,Refactored synchronization by using mutex.
4c0bbfd768711955eb25109321e7475c17bffb60,Marking Mutex.synchronized with rethrow.
4fdcff6f051cf9190c96767b1877a8a58b175aa8,Merge branch 'master-upstream'
19f584da05bcc277f9804a596765acfc3c8172c5,"Fixed build after UTF32 string convesion patch.

Also made converter local vars in conversion routines, instead of static global vars."
cec714f7454c2736c5508f6e12fbd8399914dc26,Corrections for VS 2015.
9845382e860454820f4b228d9083c56e1083c7a8,"Implement IntervalSet::operator=() using the same semantics as the copy
constructor, put the destructor into the .cpp file so the vtable doesn't
get generated everywhere."
092afb283ea7c206905e9f0923d1cdd93b544657,"C++ runtime changes for high warning levels

These changes are for compiling with high warning levels and -Werror.
There are no functional changes in this commit. Compiled with gcc 5.4
and clang 3.8.

Summary:

- Put virtual destructors into the appropriate .cpp file instead
  of the inline version in the header to avoid many vtables.
- Change C-style casts to modern C++ casts.
- Add explicit casts in some signed to/from unsigned conversions.
- Remove unreached code in BufferedTokenStream.cpp and
  LexerATNSimulator.cpp.
- Remove shadowed variables by qualifying constructor arguments with
  the name name as a member variable.
- Add explicitly defined copy constructors and assignment operators
  where required by gcc's -Weff-c++.
- Use std::numeric_limits<size_t>::max() instead of assigning a negative
  number.
- Remove semi-colons after function definitions.
- Remove unneccessary casts.
- In preprocessor statements ""#if label > value"" change to
  ""#if defined(label) && label > value"" to avoid warnings about the
  undefined symbol being seen as zero.
- Remove ANTLR4CPP_PUBLIC from ""enum class"" definitions.
- Change the FinalAction move constructor to move instead of copy the
  _cleanUp std::function object. (A side-effect of explicitly
  initialising member variables as required by gcc's -Weff-c++. I turned
  this one off because most constructors needed to be touched,
  especially the classes implemented with InitializeInstanceFields()).
- Mark hex digit conversion functions as file static in guid.cpp."
e0301636f068eb8e3ce74d9da9896c3111665039,Add myself to contributors.txt.
2d011c8e3a76f69779ac857143239c27d2a138d1,"Remove C++14 auto return type on utf8_to_utf32

- Also remove static instance of std::wstring_convert. Access to
  std::wstring_convert<>::{from,to}_bytes() is not guaranteed to be thread
  safe."
eb02a05efb3e7348c7c8b9db67b08441bf43c517,"Possible fix for max_align_t breakage in Travis CI

The Travis CI build is failing after an include of <cstddef> -- This is
an attempt to work around that by including <stddef.h> instead. Problem
not apparent in my FreeBSD environment."
4a359c18310c8666a1b357cd0c1d3593de342257,"ATN: Handle empty, read-only, nextTokenWithinRule

ATN::nextTokens(ATNState* s) updates s->nextTokenWithinRule if the
IntervalSet is empty, and then sets it to be read only. However, if the
updated IntervalSet value was also empty, it becomes a read-only empty
set, causing an exception on a second call on the same state.

This was exposed a change I made to make IntervalSet::operator=()
respect the _readonly flag. (Which in turn was found by compiling with a
high warningly level.)

The approach in this update is to perform the update if the updated
value is not empty or if the current value is not read only. This
preserves the previous behaviour of creating a read-only empty set and
working on subsequent calls. It will throw on an attempt to update a
read-only value, where previously the read-only value would be silently
discarded and set to updatable."
70402f8efffcc89dcb0b1a41c2f0c606ce70a0ec,"ATN: Remove race condition in addState(ATNState*)

This is a proposed fix to bug #1826 which removes a race condition where
multiple threads could update ATNState::nextTokenWithinRule, leading to
corrupted std::vector instances in an InstanceSet."
aad5faf8196c1eb0b2ac2530f963756993b02788,"Revert ""Extended tokenVocab search to the grammar subfolder.""

This reverts commit defad74649538a5eff872ee4af486a5ef88bd145."
bcb0a8f1503a673d480404d69b0460b6108032b6,"Revert ""Simplify output path generation""

This reverts commit 47e43cc8d6b5d1dfe5ff494503e6d0eec63d4b39."
ef49f61819e06bd6633e9a7193c88348cbf7b8e0,Formatting
ddfdcb5e778ee413d4f4668757422b5dd2131b2e,"Merge pull request #1897 from hanjoes/travis-linux

Swift Target Linux Support"
35cf1ba4ff50e7420330aae8f00802bc4804ed53,"Merge pull request #1907 from mike-lischke/optimizations

[C++] Small optimizations"
e9155ef9cb67279eb1c7e3c5c56c0f266de6dd5e,"Merge pull request #1908 from mike-lischke/master-build-fix

[C++] Build fix/correction for UTF32 conversion."
85154d06ee0a96c2a8d4ef29f8e7e16c6fe57198,Changed  incorrect .js file endings to .cs in doc/charp-target.md
2ff746493e5d8ffd2d33f8a0fb055a753fe13528,Charstreams.fromString -> Charstreams.fromstring
dde893d365c95dfb5bd6f3b2cde3cb8996d5593d,Merge https://github.com/antlr/antlr4
6e46b168f526680fa3c11506680d1de462b0f15a,"Naming convention fix for qualifing shadowed args

- Change qualifying suffix from ""_in"" to ""_"" to confirm with
  conventions."
274e3c2d3b97d9d9f5a5d4ec11c5c283ed0ecc80,"Change Lexer::{MORE,SKIP} def back to negative

- Explicitly cast negative values to size_t instead of using an offset
  from std::numeric_limts<size_t>::max()."
8fd4bcfa337663daab8327987786e8e923933f69,"Add defined() before #if SYM > val evaluations

- Change ""#if SYM > x"" to ""#if defined(SYM) && SYM > x"" as a pattern. In
  StringUtils.h this follows the pattern used earlier in the file."
577b1d61bbadf8ba2af143fb3f58c153327a8399,Comply with curly brace conventions.
8c45d71673a6a84b380740e7d98675e170cc9cfa,Undo remove cast to same type in generated code
aab2c043f0b4c700bf233316656f9b520259a418,Fix missed curly brace convention fix.
2b3dd222bdf7cac624253355904a204491dda6b4,Reverted removal of namespace.
63fc7cb7a7b830ff2991b3c9fb554d4c646c2b9d,LexerActionType.h: Use antlr4-common.h for size_t
fad048897e02388ddb58027aadb4a80c31dad85c,SemanticContext::Operator: explicit virtual dtor
fdcfefa0a90d44ff5b56504610d7459898fe7721,Convention: Change virtual dtor to empty bodies
cdfe310c5d84639e51876d8c56e190e66f4c38b2,Merge branch 'optimizations' of https://github.com/mike-lischke/antlr4
30836a47c5fc984b9f9db39e710ae9e59f616eb8,CharStreams is deprecated in 4.7
952b971728a7a4fc56ad07a882f421c5f9c7c198,Update .Net NuGet package name to 4.7 with .NET Core target
96d42d833a0b9bc825713165e1eacb72d6a083e5,Use spaces consistently to indent the generated Python code.
f0d1a093ed0d704527d4cb63b70f69ae90180a64,Python: fix reported input alternatives are not in par with Java version
405dc20488e551b36611d84faed728f4961f077d,add parser error test case to replicate the Python formatting issue
94ca69b727fe91b6581011dd4c2fc6e13fd67f09,add test for #1925
ff4ffa613be04ca5a238834ee3851809da40d77c,Fix ATN deserialisation for unicode chars FFFE and FFFF
0166ba95acdb9f792f02d0af77ba79c5ae3df789,fix JavaScript too
2e56ccfe1964a4ad6a099dfbd8835eb745adf750,simplify test
dbff375c54498d3164bf257634d7ebc7ff050075,fix failing test
c3b742e0904f3a4c5a5edd511cb414036445d027,also fix in go
3a7c6a662a4a6a88fe61761ea53380a2540815da,"Merge pull request #1910 from mike-lischke/optimizations

Reverted removal of namespace."
e6a77c86da2a39dd87934266a73dd0d5efd21bf4,"Merge pull request #1915 from danielkatz/patch-2

Update .Net NuGet package name to 4.7 with .NET Core target"
645855a65abafb0864fcdbaf142e5bf50ef40b20,"Merge pull request #1926 from ericvergnaud/fix-unicode-lexer

Fix #1925"
77f3c767b79c6da4d9aac1ff70b6ad8f064e946b,"Merge pull request #1912 from danielkatz/patch-1

Update the example in JavaScript readme doc to 4.7"
60cce436c2a2441fe5a8994266dcdcfbab5def0f,Merge branch 'master' of https://github.com/antlr/antlr4 into py-input-mismatch-error
4b21583e2bd61c923f923d56b2369cfb8d4531e3,signing in contributors.txt
ff13553a2bcd4cd8a903c29bc2a51166706cd265,"Merge pull request #1921 from alimg/py-input-mismatch-error

Fix input mismatch errors not reported the same way as Java in Python"
0c4473ea1ae6186a2205d94d3b16eef0b63377d3,Merge https://github.com/antlr/antlr4
ceaf085dc559fbe3c05e7409fb006fd2085b65c4,"[dotnet] for linux target, bring up to jdk8 since jdk7 no longer available for Trusty; for linux and osx targets, bring up dotnet from 1.0.3 to 1.0.4; Trusty image now has mvn 3.3.9 builtin, removed install code"
990d4848b265b28af4243ce37734d1bd0d424393,"Merge pull request #1902 from jm-mikkelsen/master

C++ runtime changes for high warning levels"
0e573fb0a5d8e5a3ce8a01837dfa313ad4664d00,categorise tests to fix Travis timeout
5faa889c8a06671c0cce261dcdcb70240b5134bb,"categorise tests to fix Travis timeout, fix script"
32fc5001025cded554dd8c56676fed3432bbeb27,Fix typo and rebalance
d7f5e1834bfcee98661889cf70a5eb6824e09c1e,"Rework C++ Interval, IntervalSet, ATN and ATNState

- Remove the readonly status from IntervalSet.
- Remove virtual functions from IntervalSet and Interval. These are
  passed by value throughout the C++ runtime; meaningful inheritance is
  not possible anyway.
- Moving the atomic flag into ATNState as a ""now cached"" flag.
- Return a const reference from ATN::nextStates(ATNState*) so the readonly
  status is enforced by the compiler not at runtime in the code.
- Use value semantics using std::move to reduce the number of copies performed,
  constent with how these classes are used in the C++ runtime source.
- Remove type-unsafe varargs constructor in IntervalSet, replace with
  type-safe varadic templates implementation."
21a53c2a17880f568efc1e828701cd69db432264,Merge https://github.com/antlr/antlr4
b7538b6eb945ebcd156afb669f12369f99f912e5,fix failing build
916a8725299a112d4430cae21785a273f247053c,"Merge pull request #1918 from renatahodovan/indent-with-spaces

Use spaces consistently to indent the generated Python code."
e6a6e6bb4a8eae9c903e7ecd446981f1139d947e,"Merge pull request #1927 from xied75/dotnetcore

[dotnet] for linux target, bring up to jdk8 since jdk7 no longer available for Trusty; for linux and osx targets, bring up dotnet from 1.0.3 to 1.0.4; Trusty image now has mvn 3.3.9 builtin, removed install code"
49b462f9607a08dd98e37e672990afacf04f9136,Go file header complies with standardised Go 'generated code' header
03e9a012bc38a01ced69871709965ed38c77cf84,fix failing build
c5eb9cbeef548c6ae6645c1f608845f7f0c9004f,Merge branch 'master' into fix-travis-timeouts
936a396c81c2618130bab94a491309769da09e2c,clarify intent
c15aa4336a4d9ea77c5e420c22ff239252480767,dotent also times out
5e0eee056d79f35a726cd1f86f99858b316296f7,"oops, forgot to flag the dotnet tests"
738ce4c401fbea8769443c54236fa889815534e4,"Merge pull request #1929 from ericvergnaud/fix-travis-timeouts

Fix travis timeouts"
62a2d5c9dff1de07eedcedd60e2a2891971463e1,Merge branch 'master' into patch-1
c41426c87eef8766adcfea4bd1fef2ba8a7ca24a,"Merge pull request #1909 from erikbra/patch-1

Corrected `.js` file endings to `.cs` in doc/chsharp-target.md"
0c0a929252e1129369410b7f4eac41557421860b,Merge https://github.com/antlr/antlr4
d4b18697f2983632533f66589d80047f700479fc,"Fix unsafe usage on _edgeLock

Iterators on an unordered_map were being dereferenced after dropping a
read lock, leading to races where iterators could be invalidated before
they were used."
aa2d34bdfdd720c5be7ab06f15fcc86e16deb966,Merge branch 'master' into interpreter2
85fcb7567af8842adad99ef00ea03304695f5161,Merge branch 'master' into master
f33fca678923dbb4999fa6cbb0eb729395d6203d,XCode build fixes for previous C++ patch.
b7060ba1f5f306247d1e05dc1c97f3ec27796eef,"Visual Studio build fixes for previous C++ patch.

VS 2013 doesn't accept certain C++11 constants like std::numeric_limits, so we have to return to the code used before that mentioned patch."
6319d62409b846a4f4912c127fcb39c0a575e416,"Don't create VS 2013 packages anymore by default.

Can be enabled on demand."
749fa81993d2d215d0175f7779d0d495cc528cdc,[Go] Add exported getter method to Interval.
9eb7edbf30addf8c39c5cf21636e7e5e7d21ca31,add to contributors.txt
1054e658b2c968ad5d00e35a63a79c7f037e4985,[Go] change Interval.contains to public instead of add wrapper function.
1ce5f91573b8d67d4b1cbd058d44ab8f73c4505e,"[Go] Implemented TokenStreamRewriter

TokenStreamRewriter implementation was missing
Ported code from Java version; however, there are couple of deviations due to difference between composition (Go) and inheritance (Java) concepts
Ported tests from Swift for LexerA"
f641f6a72265a27312c3fbcd6590d04e3f19b180,Merged upstream/master
3b4cab046ac8a716dd53845224a9c433f22d3ae3,Merge branch 'master' of github.com:jBugman/antlr4
b36044108a6f106ffeabfd05d3d682d8c174e48a,[Go] Expose Start and Stop of Interval.
41889939d6be9e964f20dffbc9cac06536d89af3,"Make the Antlr4MojoTest restore state between tests

Otherwise, we could pick up stale changes from prior tests."
b09e30c6caf8e44dbddf6c0598480b0c43eb78fb,"Make the lexer test possible to pass

Adding a newline should actually not change the generated lexer."
a9dfca3666bdcd74476ca5aa6f3baa1e396ce6ce,"isDependencyChanged: consider equal timestamps as out of date

Some systems have low-granularity timestamps, so that file modification
dates are rounded to seconds. This causes false negatives when detecting
if a grammar needs to be recompiled if it changes a second after producing
its tokens.

This likely only causes an issue for tests that frequently mutate files;
real humans are unlikely to compile within 1s of changing a grammar.
Still, this seems a cleaner solution that hacking the failing test to use
force a different modification time, as there will almost never be false
positives.

This fixes the failing test after making the test correct."
d58e7e31bfcefe41840bc3b86c8eaf06eb9f19eb,"GrammarDependencies: include all imports

For some reason, the grammar import dependency analysis only included
the first import on a line. This does not work so well..."
7a882f7d5b8b6b6ccb124d68395986104c969a09,Add test for multiple imports
9cb52345399eaaefa7035624d1de468706f7cdd8,Sign the contributors.txt
093009520751d5f4982bb050645703060a678f1e,fix inconsistent naming in target stg
162e2657b80d3fffb57c1cee9d12eedbdca9d5fa,Fix two issues found by coverity
8b3da13259024bf4fd9913ebcc7c950339687779,fix to the ATN deserialiser issue on big endian architecture
2bce3a74d4c4c1fcc33611c63dd6afe195dc4f25,"Remove the useless visibility attribute from this ""enum class"" declaration.

When compiling under gcc, ANTLR4CPP_PUBLIC macro expands to the following
gcc visibility attribute:
 __attribute__((visibility (""default"")))

(when compiling under Windows it expands to the corresponding __declspec
attribute)

This change was introduced in commit 8ff852640a7ec62d46330f71e274c591ada1fc70

Although the attribute makes perfect sense when applied to a ""class""
declaration, it makes no sense (has no effect) when applied to an
""enum class"" declaration. I assume that doing so was unintentional; that
when the change was introduced it was it was added mechanically to all
""class XXX"" instances in the source code, a process which accidentally
picked up one ""enum class XXX"" instance.

Although it has no effect on the object code, it leads to the following
warning when compiling under gcc:
/usr/local/include/antlr4-runtime/atn/PredictionMode.h:18:31: error: type attributes ignored after type is already defined [-Werror=attributes]
   enum class ANTLR4CPP_PUBLIC PredictionMode {

This is a problem for people who would like their builds to be warning-free.

Happily, this declaration can be safely removed. The ""enum class"" construct
(just like with regular enum) does not cause any linker symbols to be
emitted. So having a linker attribute on the type does not actually have any
effect. It can therefore be safely removed."
c8805ab584908e214d05d55f0f28b760d1ec17cf,"Avoid adding to closureBusy before all ATNConfig properties are set

Setting ATNConfig properties can change the hash code of the instance, leading
to cases where the closureBusy set places objects in the wrong buckets. While
this has not led to known cases of stack overflow, it has led to cases where
one or more buckets contains a large number of duplicate objects, and the set's
add operation goes from O(1) to O(n)."
6e02088e6abb687f4752b3d0bfcf9fe56e8b3992,"Python: add public getter to parsers to access syntax error count.

ANTLR parsers in Java are allowed to access the number of encountered
syntax errors via the getNumberOfSyntaxErrors method. However, the
Python variants must use the protected _syntaxErrors member to get this
value. The patch defines the same getter for Python targets too."
8149ff77fadec08fe4b8fb800bd87b0968b8c66d,"Consequently use static_cast for (s)size_t casts.

Also fixed XCode tests."
62184c38eb60e8f65ae01c5a9ba02423a64cf5ed,"Always refresh grammars with changed dependencies

The buildContext.hasDelta function is ignorant of importants. Since we have more advanced
dependency analysis, stop relying on hasDelta and instead just refresh grammars where we
know the dependencies have changed."
2d6a4945a5b33230f5a38b1481afe485095d3c48,"Merge pull request #1935 from mike-lischke/master

Build fixes after previous C++ patch"
e01af374d2d725e236be8ea5c0e12d7d0b1dab10,"'requires' SUPERclass for Lexers in split mode, symbols/modes/channels available on Lexer prototype for use in lexer actions (this.SOME_MODE) like in Java actions, Utils.escapeWhiteSpace uses regex for global replace (was replacing only first occurnce of \n etc)."
61edb0204dff4e35840d8a35e82e937268d02bb5,signed contributors.txt
caa5e46def0cdd0a48fd0e2bee64bf2bc90b84ec,removed proto level stuff
e123bb8cea642577b4291285aca7c1cf44f2f192,removed proto level stuff (one more)
56f5190cd04925ed68312ed0b538b511bb27cbde,"Merge pull request #1945 from dhalperi/all-imports-count

Many fixes to antlr4-maven-plugin dependency analysis"
1b11cbed18de9a9e4d03553b5fdd725fe21e6332,Merge remote-tracking branch 'upstream/master'
0ff5ad6f4cfb59c45dea72f1c284f23ba7c517c0,"Merge pull request #1938 from shirou/master

[Go] Add getter method to Interval."
0803c74eb255fe5e6fe5a6f11d879198d305e715,"Report InputMismatchException with original context information

Fixes #1922"
95338f710ecd201f2a5fe5f451c610aba7c64ae7,Ignore Cmake policy CMP0054
f12a71306200160bc5b7af99ade1ae11f0f50510,sign contributors.txt
b41782964b8b0d0fd9652ec2bbf876296cd699e0,Add MSVC support to c++ cmake build
11d185f744793046d04837355cadce899c041d86,add some missing flags; fix debug build
a2fcad61f021f5e3d24480015b5bf7b7cdca1dc9,"Differentiate windows static lib suffix to avoid being clobbered

Since the install target install static and shared libs into same
folder, and because on windows a shared lib also outputs a shared
.lib file to link against, need to make sure the static/shared
.lib files do not clobber each other."
ca9409c7bc656833e269ef758398624977363307,Remove duplicate comments
c1c069cf5e73c684c614de571768a161bea717e2,Merge branch 'master' into master
dced604c7cfe337a6370b83e3bd25a8f173a1b00,Corrected Start/Stop spelling
0137218930d4f2b67a7b7b74a25c5417c34fa5bf,"Removing dead code, malformed documentations, etc."
82b2480fe5b6617db0292f4ddbea24b589673f4e,Tweak HTML comments.
22caddc12f9995b3aef98702b314fb52c3c8a7c4,Autopass for doc conversion.
752d4d525acde7758dd26a27dd9f0cc4f56b2c71,"Merge pull request #1976 from hanjoes/doc

Swift Documentations"
a0421807db969e696ac55a3c01569ef348ff5e17,"Merge pull request #1969 from sharwell/propagate-error-sets

Report InputMismatchException with original context information"
590fa8394c67840ac62ed6089a71a2517616478e,"Merge pull request #1942 from neatnerd/master

[Go] Implemented TokenStreamRewriter"
ac9f75303e215dbc12937eba68089151aef6f874,Fixed empty CodePointCharStream throwing exception on getText. Fixes #1949
ba75dc95501c75414f787e60cb03acfdd99b28c2,Added additional interval math functionality
7d36c5f6b81901e8f7a47d4f4a9b5d8a3b36daea,Merge https://github.com/antlr/antlr4
e70e41282cb14194cef14c2964abf823dfbd009e,Style changes as requested
b106f8ee088098b8bf9a67210acb0b6816cc63a5,Remove byte order mark on utf8 files.
5fd7a6eadb13ea72c7214474344c4143e780000d,Merge branch 'master' of https://github.com/jm-mikkelsen/antlr4
4c93b71983f93a87e5cf8c6ed7fbc798af262b90,Updated swift-target.md.
1203794259adf03e140dfd4698de8e9e91f5c985,"Merge pull request #1979 from hanjoes/swift-wiki

Updated swift-target.md."
bfd7a20e99073d47bcb1a920de3728b92b9b4c7c,"[Go] Add CommonTokenStream test.

This test is run by `go test`.
and also add test and testing utils.

Note: `github.com/stretchr/testify/assert` is required.
This assert library is almost same functionality for Java assert."
5f2f7981b75f6223f5cf59e7a93f13c36539e692,Set the tab width in .editorconfig so GitHub shows source properly
06f2dfebdf5c593b71a87fd06caa4de9506ca599,[Go] remove assert lib and re-implement in this package.
715bfccb8033106663adb73ce319bf9a6bef868e,Update contributors.txt
3beb771882b816e9238c15ee9e6caf5d0ffe7c84,"Fixed #1858: replacing implicit type with uint

This fix allows compilation and execution under ARM architecture, since default type couldn't handle all possible values"
d97400bb1e9d94cde5e6e69c49703eb1adf03705,Update contributors.txt
2423359b285455cdae90490a23164073af793ead,"Export Lexer methods

- They can be called in target-specific grammar actions, therefore must
  be exported.
- Their Java analogues are public methods."
982dc545f2844f7c137a08a047cf715af04aca44,Add Eddy Reyes to the list of contributors
168ac02b2248be2022f2062db1f3f708164d15e2,Export lexer method GetAllTokens
dc77aacfcd2fc0a068185e06d2356502d97e1a5b,"Fix codegen error (Java) when a lexer has only fragment tokens

Solves issue #1999."
7ed8fe6d295c818c3b62fa6ea457d7a0327e77d3,"Minor formatting

Introduced newlines to have better view of steps."
efd985f4c32dd1144e8d465f9152c431159b02a3,Adding mention to contributor.txt
50d2d3ef5541bf3c3a143e58fc0207de8d290d92,"CMake build fixes for Visual Studio

Remove unsupported cmd line options (gcc).
Disable warning for DLL."
8f30ae661050b4dbf9cdcc1e9473087547a2655c,Import RuleContext into the antlr4 module namespace. See Issue #2012.
4fc18d91c8bea5a28ee9a1f05e27bbbab5350cac,"Merge pull request #2013 from rljacobson/master

Import RuleContext into the antlr4 module namespace. See Issue #2012."
8f50bd0df612926905a4e7d388588f83cdcb0e80,Merge branch 'master' into master
a7b0afbd2f94ad357c6aa14aa78349df6dae2eef,"Merge pull request #1966 from venkatperi/master

Require superClass for Lexer in split mode for JavaScript target"
f8b272a721a87c60f6bdfbd94dc16fde59f977e2,"Merge pull request #1950 from ericvergnaud/fix-naming-issue

fix inconsistent naming in target stg"
f86835928fd92d902ab7f0d76825615fedd59be7,Merge branch 'master' into master
106c413e963201843941e506cbb184b8a623cc40,"Merge pull request #1958 from linux-on-ibm-z/master

fix to the ATN deserialiser issue on big endian architecture"
e6d60007e7f7a15af5347ae68da5fa431be67467,"Merge pull request #1956 from renatahodovan/syntax-errors

Python: add public getter to parsers to access syntax error count."
41cd0309a7920477ec2357f852fd8e31bcc249c4,"correct the version of the antlr jar package

version of the antlr jar package is different from other place of this doc，and it make mistake."
d95fb2ec46f41abf30d413cde95271f3e674baa0,"Replace oraclejdk7 with openjdk7 in .travis.yml.

Oracle JDK 7 support has been withdrawn.

https://github.com/travis-ci/travis-ci/issues/7964
http://www.webupd8.org/2017/06/why-oracle-java-7-and-6-installers-no.html"
99d32dc86189a1e25eaded875504167f0309f0bd,"Add some version numbers to pom.xml.

This silences warnings from Maven."
44031b544dccb9b07dda44b821a14cfdc8337439,fix #2031
6d337f9cce64ba9987751dbc62eba74634d17b95,seems jdk7 is no longer supported
cca57c9af2447088ce75026f0787509291845cf0,Merge remote-tracking branch 'antlr/master'
7d6189beea7c9029e15ff88884005d92042adb9c,bramp signed the contributors.txt
9f90d5144292a040412e1fcf5cc328848e6f6ac8,"Placed the CommonSetStuff code inside a scope, this is to avoid two _lt variables in the same scope. This happens with the mysql grammar: `build: previous declaration at mysql/mysql_parser.go:12215:6`"
200b0fa806ef033d9181a6db2794f58c6bffba60,"Merge pull request #2009 from sachinjain024/patch-1

Minor formatting"
51c743c80ee743248309d42e3ff81f135b5989ea,"Merge pull request #2017 from moon-fall/master

correct the version of the antlr jar package"
f1838a055349f3eaab6380abdf3c60273db06998,"Merge pull request #1984 from sharwell/set-tab-width

Set the tab width in .editorconfig so GitHub shows source properly"
e78b0df51a4ae12d396c775037aa59b38a186fe5,"Merge pull request #2035 from ewanmellor/fix-mvn-plugin-versions

Add some version numbers to pom.xml."
a308cd5d8d540a286d6640884abdd97ba15b44fc,Merge branch 'master' into ignore-cmake-policy-0054
8b6f2975782e3ae680cb947eeb9a0f7ec3e8dcaf,"Merge pull request #1973 from matthauck/ignore-cmake-policy-0054

Ignore cmake policy 0054"
f6b3571e97d0d9c07fb664f24b618b78004464e8,Merge branch 'master' into master
c329e38775b180afee6d1da0ba535138572e4cc7,"Merge pull request #1932 from jBugman/master

Go file header complies with standardised Go 'generated code' header"
cb558ccb483c6d326dcd478c57d6cd29bb3dbede,"Merge pull request #1954 from kosak/no-attribute-on-enum-class

Remove the useless visibility attribute from this ""enum class"" declaration"
2938e7a3ab04a786a5710c9797eaac4cbce0b00e,"Merge pull request #1870 from KvanTTT/master

All error codes distinct"
526b3f95d8ee93a7778098a5c89a20509f787646,Merge branch 'master' into patch-1
76885181162270883875dd4c36f27041f5b17b97,"Merge pull request #1989 from tiagomazzutti/patch-1

Update contributors.txt"
ed5f07575d7513d25c1fd9305a77cebe2e2c7882,Merge branch 'master' into patch-2
2fabbdb589ba1af265aeb60480e3f6693f6e159b,"Merge pull request #2010 from sachinjain024/patch-2

Adding mention to contributor.txt"
6911cb45b58bb48d57b3af33120395335a5c58b5,Merge branch 'master' into patch-1
2905b8cdda4f6aa5cf84a8eca19d194bb8eab2a2,"Merge pull request #2045 from bramp/patch-1

bramp signed the contributors.txt"
c861e09d3911cfa5ccedfa31e96dde066b98ca18,"Merge pull request #1977 from nielsbasjes/EmptyGetText

Fixed empty CodePointCharStream throwing exception on getText."
2b529d85297ae9aabdbd5e573b3f95018efa9244,Merge branch 'master' into fragment_only_grammar
c4cbcb5b5825ae999ef0c59ce5e4406f082a67ff,"Merge pull request #2007 from brauliobz/fragment_only_grammar

Fix codegen error (Java) when a lexer has only fragment tokens"
afeb2e9b88d595ecdc5dcb197ddaa7c9b77d9ca7,"Merge pull request #2034 from ewanmellor/jdk7

Replace oraclejdk7 with openjdk7 in .travis.yml."
5df3b2bbdfc02ca460340ab18d1935a4bd3c3c39,"Remove ANTLRError.nullPointer from the Swift runtime.

This was copied from the API of the equivalent code in Java when
the runtime was ported to Swift.  It is meaningless in Swift, and
was unused."
7d2a0978b53c6af74a759514748bdd0f9cb7e00d,Merge branch 'master' into fix-unicode-2031
e35988ddc89aceed0f2461eae8b0e1a6124325d5,Merge branch 'master' into fix-unicode-2031
28a81b85689e76b28ce963aa9798f820e6715a77,"Merge pull request #2038 from ericvergnaud/fix-unicode-2031

fix #2031"
8778ad65c4f207153ce20c915d47323b94e33050,"Merge pull request #2047 from bramp/commonsetstuff

[Go] Placed the CommonSetStuff code inside a scope"
0097838b8a170ad0875b7a7124713584fdbf9418,Update AppVeyor version number to 4.7.1-SNAPSHOT.
242dbe095d7dea9d6688f0ac0c8f64af61483a60,"Add cache entries to .travis.yml.

This is recommended by the Travis docs to speed up the parts of the
tests where unpack / install has a significant cost, as opposed to the
download.

This changeset adds entries for ~/.m2 (for Maven) and
~/Library/Caches/Homebrew for (brew on macOS)."
7bd52e5518fb2d61c897d633bdef250d5d090ad1,"Wrap the run-tests-$TARGET.sh with a travis_wait call.

This means that it will write a line to the log each minute while the
tests are running, up to the specified timeout.  This works around the
fact that one of Maven / Surefire / JUnit are buffering our test output
until a whole test class has run.

This is a problem in particular with the TestLeftRecursion tests because
they are taking over 9 minutes on their own.  After 10 minutes of silence
Travis assumes that a job is broken and kills it.  We've been hitting
that timeout regularly."
5f28a5b3131985a452bdc55114303eaa038d09b9,"Split Travis tests into three phases.

This gives a ""smoke-test"" phase which just runs the Java tests, to get a
quick check that compilation is working.  It is followed by the
""main-test"" phase that tests each target on their preferred platform
(e.g. Swift on macOS, Python on Linux) followed by ""test-extended""
which runs all the remaining tests (all the other Java variants, and
any other platforms supported by each target).

This means that those tests in the later phases won't run unless the
earlier phases have passed.  This should vastly improve our Travis
turnaround.

This changeset also changes the matrix so that we get some coverage across
all of openjdk7,8 and oraclejdk7,8 and moves the Go and Javascript tests
to Trusty just so that they are more up-to-date.  This adds one additional
Java test run, so now we compare oraclejdk8 and openjdk8 in case of
problems in that regard.

Note that the test matrix has not been extended to cover oraclejdk9.  This
currently fails for us with a build issue, so it is not included in this
changeset.

This changeset also removes the meaningless custom apt configuration in the
section for macOS .NET tests."
d297c9dddac4d4df3824003d540d54d3d4fa48f7,added initial tests for interval set
5297bf2697687dc1fc3f7732d0597d8963f12b13,"Modified open interval logic
Added tests"
51fc50dbcbdd43ab002694c9fed13d7b3f2e7139,"Update getting-started.md

change all mentions of 4.5.3 to 4.7 since that's what the quickstart on http://www.antlr.org/ homepage is already showing"
3def33fdd59b2a5e5bc6d52bc25472910d835146,Update contributors.txt
7df0c2f47886c78de66bf7931e5ba87888a4d6c4,"Split the C++ tests into three groups.

Running these as a single test still intermittently times out after 40
minutes, even with the other recent csets."
4d628174df4e8c287961e87eb0e9fbaa56dfd507,"Update Swift runtime documentation.

We now use boot.py and Swift Package Manager to generate the .xcodeproj
rather than having those committed in the source repo."
8ba2c0ba4f70eeb98f995716e569696231699e68,"Add entries to .gitignore for the files that are generated by
Swift Package Manager."
4bafc74e6c99316c381eb5fb13e9cfbc9907c78e,"Remove unused functions from StringExtension.

Some of these are subject to change for Swift 4, but since they are unused
we should remove them anyway."
365d4f40bbf7c57dbe31de8b806f52dddfdb635c,Refactor to avoid forced casts.
8a292c0f4f8f7a4705330d0015762383dab00744,"Migrate the Swift runtime to Swift 4.

Remove a number of generic type constraints, since these can now
be inferred by the compiler.

Match the syntax change when passing a tuple into a function (adding
an extra set of parens).

Change filterPrecedencePredicates to avoid a now-illegal cast.

Match the renames truncatingBitPattern -> truncatingIfNeeded,
multiplyWithOverflow -> multipliedReportingOverflow, etc.  In
some cases the multiplyWithOverflow calls are replaced by
overflowing operators (e.g. &*) instead."
7aa6b544d973b4929b7123ef79cf014a7d236ab9,Redo Package.swift for Swift Package Manager 4.0.
39c01f6da7a1ff66814d5bcbe4c0c4aa4068e171,"Update the Swift tests for Swift Package Manager 4.0.

SwiftPM has changed its default layout for new packages (i.e. when we
use ""swift package init --type executable"" during the test).  It now is
<projectName>/Sources/<projectName>/main.swift, so we need to adjust the
paths appropriately.

This includes a small change to print stdout as well as stderr if a
unit test fails to build.  swift-build-tool takes the compiler subprocess's
stderr and puts it on stdout.  *sheesh*  This meant that we were losing
critical error messages."
cfb00413287795039ac069e3755fc48130213bbf,"Switch all the macOS Travis jobs to use the Xcode 9 image.

We require Xcode 9 for the Swift target, and the C++ and .NET tests
shouldn't care either way.

We no longer need to install cmake: this is already in the Travis
Xcode 9.0 image (and it barfs if we try to install it again).

We no longer need the rvm bug workarounds; a newer version of rvm is
in the Xcode 9.0 image so this is no longer a problem.

The openssl package is already installed and up-to-date now, so there is
no need to install that.

These changes mean that we don't need before-install-osx-cpp.sh
or before-install-os-swift.sh at all, and before-install-osx-dotnet.sh
gets a bit shorter.  .travis.yml gets a small change to handle the
fact that some platform / target combos don't need before-install any more."
897b4339a38e3072c567c5e6a77a3853e8694844,"Switch the Linux Swift tests to Trusty and Swift 4.0.

This uses Travis's new(ish) Ubuntu Trusty image, and changes the
version number of the Swift binaries that we download.

We now install clang-3.6.  This is not the default on Trusty, but
it's required by the Swift 4.0 toolchain.

This also removes the lines to upgrade libicu-dev and sqlite3.  These
are sufficiently up-to-date in the Trusty image."
1985fede5d9ce75a94dfdcddf340a5dcfea84a5d,"Merge pull request #2052 from ewanmellor/swift-remove-nullPointer

Remove ANTLRError.nullPointer from the Swift runtime."
33066e2ab12b200753b4a19159c50b3fb66e1a0c,"Merge pull request #2058 from simkimsia/patch-1

Change all mentions of 4.5.3 in getting-started to 4.7"
daecc851d64d3c2a4d7e2b57e48641fcd9a73a12,"Merge pull request #2055 from ewanmellor/appveyor-version-4.7.1

Update AppVeyor version number to 4.7.1-SNAPSHOT."
24c149603df9b7253b8980329dab40624222f15a,"Merge pull request #1978 from neatnerd/go-target

[Go] Interval"
38aaf8809702c3c60335ba85f79cad51fe72e4db,"Revert ""[Go] Interval"""
ae0f139dc4aa4d60b77ca5f0a99b6be24896be8f,"Merge pull request #2062 from antlr/revert-1978-go-target

Revert ""[Go] Interval"""
c9c7561701d4f8eed4af15376b5c98165832464b,"Merge pull request #2032 from ewanmellor/swift-4

Migrate the Swift runtime to Swift 4."
0dce38109cfef0931ac254fa02da67d6a13e46ff,Update boot.py and swift-target.md to reflect Swift 4 migration changes.
f8ae3e8cad443ccce1764572ad4a2d2148caaa4f,"Merge pull request #2063 from hanjoes/hanjoes-updates

Update boot.py and swift-target.md to reflect Swift 4 migration changes."
fa72e72de06dc5efe2cce3da4356e6f9d8ecc96d,"Merge pull request #2011 from gendalph/master

CMake build fixes for Visual Studio"
0839970e008df9ba7080fbdec80cd1803bd3538a,"Revert ""CMake build fixes for Visual Studio"""
eacbe23ea1e255564df2929bc6f62d84e2ca6acc,"Merge pull request #2064 from antlr/revert-2011-master

Revert ""CMake build fixes for Visual Studio"""
8a551095dc433b7d242d88697da36a2c59af4eef,Merge branch 'master' into export-lexer-methods
5fe98b17fdd3bdf90664336d0d0f934103341ff8,"Merge pull request #1996 from ereyes01/export-lexer-methods

Export Go lexer methods"
593b49fa3d87cfe1a27c71bbb97582c7e2458763,"Merge pull request #1983 from shirou/master

[Go] Add CommonTokenStream test."
db5a0aeaf2cc0bc6d825dfbb9843b8528640e920,"Merge pull request #1955 from sharwell/fix-closurebusy

Avoid adding to closureBusy before all ATNConfig properties are set"
b8fd54780ac36eebc53f856b7142accae597c175,"Merge pull request #1974 from matthauck/cmake-windows

Add MSVC support to c++ cmake build"
98745bbdf830a62607414d3a95c917a9dbc6ece1,Merge branch 'master' into master
70db334a58b1391b3395bd3ddbc4c16a91b11e0d,"Improve MurmurHash in a number of ways:

Use Swift's overflowing operators rather than multipliedReportingOverflow
etc.

Use UInt32 for the hash values.  This matches how MurmurHash3 is generally
defined (e.g. on Wikipedia).

Add support for decoding Strings (UTF-8, then little-endian) and hashing
the resultant UInt32 values.

Add a test set, using test patterns from Ian Boyd (public domain)."
593da3df5ef09d708174f9ac63025faca4ef8e66,Reapplied changes that got lost during merge.
16242e43c02600a8509e63e848e43c1d2588fe48,Merge branch 'master' into interpreter2
639a6995f19cb6f3a2f1a058cd4500873a8ab728,added SVG export to the TestRig
0bd748d8f1a3e18ebb97657f4f855518ec4309ef,"Merge pull request #1917 from rlfnb/master

added SVG export of parse tree"
d00b7333d82dde4359e030a8b35a11e8b03d9466,"Update getting-started.md

Introduction to install on Unix based systems version mismatch."
222e762c10c8b5313ddffa85b733edbbccbe2b5d,"getting-started.md

Introduction to install on Unix based systems version mismatch."
babf0bfa16d11c81d526ce75db68b991459a9359,"Merge pull request #2033 from ewanmellor/improve-murmurhash

Improve MurmurHash"
aaa4250328248ab1bbc32f4ded610ee47049627e,Fixes #2069 to catch env var security exception
d432f94d3b01e713acce655c04a98524e405b3df,"Merge pull request #2070 from parrt/fix-2069

Fixes #2069 to catch env var security exception"
e90662ba10182f67517b293ea1a23266867f5c52,"Fix the AppVeyor tests.

For some reason, possibly the new images that AppVeyor rolled out on Oct 22,
our AppVeyor tests now fail immediately, with msbuild complaining that there
are multiple solutions in the repository.

Address this by not using the default AppVeyor build section, but calling
msbuild ourselves explicitly in the build_script section.  This way, we can
specify which .slns we want to build.  I have specified the runtime and
runtime-testsuite Antlr4.vs2013.slns; the other ones didn't work for me in
this configuration.

Also, these builds were previously running with low / zero logging.  As
far as I can tell, this gave AppVeyor no way to know whether the build has
succeeded or not.  It certainly gives no way to diagnose any failures that do
occur.  I have dialed the logging up on everything.

Also, remove the os declaration.  That appears to be well out of date, and
isn't on AppVeyor's list of images any more.  I presume that we've been
using their default image for some time."
d248d386e3799ef829351580bd09f23bad67ecc0,"Merge pull request #2077 from ewanmellor/fix-appveyor

Fix the AppVeyor tests."
5a99f1f7a8ff7f3c506ff8077158fda72d4caa04,Remove unused generic type parameter on UnbufferedTokenStream.
8c03ef31384a0c53a00097a7a39eddd21cec98a2,"Remove unused Utils.{readFile2String,readFile2StringByPath,writeFile}."
f41316f934cd30e934468d21013ab94b2a6bc779,"Remove some stub functions from ATNSimulator.

These were ported over from the Java runtime, but they were all deprecated
there, and were commented as such here.  There is no point having them in
the Swift runtime because we don't have legacy code to support."
23f532ddbd252077b46fdfec8d01a8bbf7e6a036,"Minor tidyups in the Swift runtime.

This fixes some hangovers from the port from Java:
* unnecessary type annotations;
* failure to use ""if let"" for nil checks;
* comments with Java code in them;
* a couple of fields that should have been declared private;
* some whitespace issues.

No semantic change."
6c11160b510b216d10d51f47e19f2693d65f8841,"Remove tokenNames / getTokenNames from the Recognizer interface.

This has been ported over from the Java code, but it was deprecated there.
There's no point having it in the Swift runtime because we don't have the
legacy code to support.  Also, it wasn't implemented properly, so it
never worked.

Remove {DFA,IntervalSet}.toString(_:[String?]?)
and the inits in ParserInterpreter and DFASerializer for the same reason.
Switch the unit tests to use the alternate toString(_:Vocabulary)."
7e03b0857a84abdd053c38b4b951fc84fed344b9,"Remove Utils.RuntimeException.

This was doing nothing for us that we couldn't already get with fatalError,
so it was just cluttering things."
fbe8c0d2a6fd8199374f7cecc4de38710721aa75,"Tidy up the exception handling around RecognitionException.

This removes the generic parameter on RecognitionException, to make it
easier to handle them.  This means that we no longer need to store them as
AnyObject and cast them back again.  To do this, we add RecognizerProtocol,
which is a non-generic equivalent of the Recognizer interface (at least, the
parts of it that we need for error handling).

Remove all paths where the RecognitionException subclasses were throwing
exceptions in their initializers.  This is just insane."
7dd4017f4121d26e1dacba91e9095118b1da2d21,"Tidy up the exception behavior around IntervalSet and ATNConfigSet.

These classes throw exceptions if the instance is read-only, and only in
that case.  This means that there is no need for us to propagate exception
declarations in the cases where we have guaranteed by construction
that the instance is writable.  In particular, this means that IntervalSet
and ATNConfigSet's constructors won't throw exceptions(!)  The set options
that return a new set (e.g. complement) no longer throw either.

To help with this, this cset adds BitSet.firstSetBit().  This is equivalent
to BitSet.nextSetBit(0), but is guaranteed not to throw an exception.

As a consequence, ANTLRErrorListener / DiagnosticErrorListener no longer
throw exceptions through any of their functions (syntaxError and report*),
and DefaultErrorStrategy can no longer throw exceptions as part of its
internal operations (though of course it can still throw exceptions if
recovery fails and a real parsing error needs to be reported).
Also, LL1Analyzer no longer throws exceptions at all, and so ATN.nextTokens
doesn't throw either."
64048caf12a6998524a0eb6bb8e82a6130e7a3d6,"Implement UnbufferedCharStream in the Swift runtime.

This is a port of the equivalent code in the Java runtime.

This required a change to the CharStream interface: getText was documented
as throwing exceptions, but it wasn't actually declared as such.  The
UnbufferedCharStream.getText implementation throws exceptions (in order to
match the semantics of the Java implementation), so this declaration is now
needed, and callsites need to be adjusted appropriately."
5885d54c251179e525dd536d1fff1b56be425ee2,"Fix a retain cycle through RuleContext.parent.

This refers back up the tree of RuleContext instances, and meant that the
whole tree was leaked.  Fix this by making the parent field weak."
d0c974430500c54f6eeab74406a8912cc8a457e2,"Fix a retain cycle through TerminalNodeImpl.parent.

This refers back up the parse tree, and meant that the
whole tree was leaked.  Fix this by making the parent field weak."
555c14956a3a67398ecb6ea756936db36cb17c40,"Fix retain cycle between Parser and ParserATNSimulator.

This was causing the entire parser to be retained, resulting in a large
memory leak.

This fix simply changes the reference from ParserATNSimulator to Parser
to be unowned.

Ditto between Lexer and LexerATNSimulator, except this reference is made
weak because LexerATNSimulator.recog is nullable.  (That difference is
dubious IMHO, but I'm leaving it intact for now.)"
cf011b57ee94c395eac92ddc4db91d452d8808e8,"Fix a retain cycle between a Token and the TokenSource that it came from.

This was causing all the tokens, streams, and lexers to be retained.  The
primary cycle was because of the backreference at CommonToken.source, and
the fact that the token streams buffer the tokens that they create.

Fix this by replacing the use of a (TokenSource?, CharStream?) pair with
TokenSourceAndStream, which does the same job but references its fields
weakly.  This means that Token.getTokenSource() and Token.getInputStream()
will return valid values as long as you retain the lexer / stream elsewhere,
but a Token won't itself retain those things."
bb3f7e2c1469f850c49696156a8b7ac070b64593,"Make it possible for RecognitionException to release the parser and
token stream that triggered the error.

These are useful for error diagnostics, but if client code wants to throw
the RecognitionException but discard the parser and token stream, then
the fields in RecognitionException need to be cleared.

This adds RecognitionException.{clearRecognizer,clearInputStream} so that
client code can clear those fields if desired.  It also makes
RecognitionException.ctx weak, so it will go nil at the same time as
the parser is discarded."
82854da434fa4d118a2c196b7cf50821abf61589,"Merge pull request #2072 from ewanmellor/swift-tidyups

Tidyups inside the Swift runtime"
20baa32b5a8c39257a557984a2009644257c827e,"Merge pull request #2073 from ewanmellor/swift-RecognitionException-remove-generic

Tidy up the exception handling around RecognitionException."
5f4b9b49da9846c1fd8920b76ded50975a2735c5,"Merge pull request #2074 from ewanmellor/swift-intervalset-exceptions

 Tidy up the exception behavior around IntervalSet and ATNConfigSet."
2bfaec72ee203c7dd3f1f63d74318b872f6a4228,"Merge pull request #2075 from ewanmellor/swift-unbufferedcharstream

Implement UnbufferedCharStream in the Swift runtime."
bce47ca74443154b7feb98ade51c1cb146112e79,"Merge pull request #2076 from ewanmellor/swift-retain-cycles

Fix retain cycles in the Swift runtime"
2c3f0c9f0c0a9f2b90339f394c3fc1bf38f59829,"Merge pull request #2067 from JavaDDD/patch-1

Update getting-started.md"
0ff8c60a1f8145ec1d336d350f8f7b62c2741ad7,"Merge pull request #2068 from JavaDDD/patch-2

getting-started.md"
73c17ffbd2eea4f9e75b29967d838b0b3fe3b9cd,Updated contributors.txt
1230aa08ef935be9bbc80ca7568d5d9db3f22aac,Merge branch 'master' into coverity_fixes
5008c320844942d914bc5c7d1808710d34d36f39,Merge branch 'master' into coverity_fixes
1f8c5bdf6a1d1b56130c4ac89ce656b18e3b893d,"Merge pull request #1951 from Griffon26/coverity_fixes

C++ runtime: Fix two issues found by coverity"
089550df8e458d6e731f37aad74c2a344b18eb46,"Merge pull request #1990 from milanaleksic/master

Allowing Go runtime compilation to succeed under ARM"
156ecb6c58438e164e3aabe64b40f0f39c538e8f,"Revert ""Remove byte order mark on utf8 files.""

This reverts commit b106f8ee088098b8bf9a67210acb0b6816cc63a5."
0f6082eb15a335c0642f3d5c87daae9c50f74e86,Merge https://github.com/antlr/antlr4
6b504fee438ffafeebe84528f0ef41f28e932d4e,"Remove ~/.m2/repository/org/antlr from the Travis cache.

Caching ~/.m2 is useful; caching org/antlr inside there is not.  It causes
unnecessary re-submission of the cache every build."
026c6736dce4423a457f0310183c1d0a4804fb01,"Add Travis-side caching of the dotnet package that we download from Microsoft.

This avoids hitting the Microsoft server every time.  The download isn't
super-reliable, so this should help with build reliability.

This extends the cache timeout, because the package is large and the
upload was timing out."
bd5620381cce818e5560340de0ab88047e83d9f3,Updating contributors file.
6693ba73a5ada245f9d9f6d92489ea2563f7f89f,"Merge pull request #2083 from gendalph/master

Updating contributors file."
c8c577c3329f17f1542ab269b7fcfd08cdf28f46,"Very minor fix in error handling path for the -o command line option.

If the specified output path was a file and not a directory, the error
handling intended to invalidate outputDirectory, but due to an apparent
copy-paste error, it invalidated libDirectory instead."
a465f777ea4e8b19e7d401f496109f55dd5e8261,"Add cache entries to appveyor.yml.

These cache the Maven and nuget package directories."
f2638b290d741a74a369f88b224675e60d822401,"Fix the -message-format command line option.

ErrorManager.setFormat was being called before the command line options
were parsed in handleArgs.  This meant that setFormat was always called
with the default, and so the command line option never took effect.

This option apparently only worked for 2.5 hours on Sep 6 2012 ;-)

Closes #992."
8f639f28ddc39cd4ae8474a8e3a91c77078c224a,"Put full filepaths in error messages when not using the default message format.

When the default ""antlr"" message format is used, ErrorManager deliberately
only includes the filename in any error message, not the full path, to
keep the messages short.  However, if the error message is intended to be
parsed by an IDE, this is no good.

Address this by printing the full path when using alternate message formats.
There are two formats available today -- ""gnu"" and ""vs2005"".  I think it's
reasonable to assume that people would use these for IDE compatibility, and
so using the full path for these is appropriate.  Also, they didn't work
until very recently, so this isn't breaking any existing behavior."
4729fe828537a09e4370fff3d5dc31abe29e5444,"Change the ""gnu"" message format.

Add the column to the location; this is something that GCC and other
GNU tools do, and is obviously useful for IDEs.

Move the message ID so that it reads e.g. ""... [error 50]"". This mimics
GCC's [-Wformat] kind of thing and is more obvious than the (50) that we
were using before."
63d83a8bccfc7ce66415faa9759c65ea85ed8c0f,"Add a note to the documentation regarding -message-format gnu's suitability
for Xcode.

Mention use of -o while we're here."
3041b8e0127a479c5cb19284bd1d7bd9f1c68d52,"Style changes for main antlr4 codebase

- Add ""explicit"" to Interval(size_t, size_t) constructor.
- Change an IntervalSet constructor to delegate part of the construction

- Add ""explicit"" to Interval(size_t, size_t) constructor.
- Change an IntervalSet constructor to delegate part of the construction"
d8996c74e36e51522f8ba36ba3734dd381d72dde,"Merge pull request #1930 from jm-mikkelsen/master

Rework C++ Runtime Interval, IntervalSet, ATN and ATNState"
886e6b0ed273a46cbbc61afe40857125b5405fb7,"CMake build fixes for Visual Studio

Remove unsupported cmd line options (gcc).
Disable warning for DLL."
1a4f5770dd0d3aba3ad3891b4345fd16285ef171,update CMAKE_POLICY CMP0026 NEW
aa143175c901f833dfde3b48601dbdcdf62e6f95,Fix destructor
64ae36b3e8a8fe326c38d8739ed44ff728f626d5,"Merge pull request #2090 from gendalph/master

CMake build fixes for Visual Studio"
5bb93813a02cd1ad08456d652e2fcacd59e7002a,"Make CharStream.init(CharStream) required (in the Swift runtime).

This makes it possible for client code to use CharStream as a generic type
constraint and construct Lexer subclasses generically."
afd4e0bc3fc67d197f5c5c95b08a7597597ea441,"Fix UnbufferedCharStream.

The call to stream.read needs to use buffer.count, not buffer.capacity,
as the maxLength.  Otherwise, some bytes get dropped on the floor and the
stream is corrupted.

Remove the code to pad self.data back to up to its previous capacity when
copying data at the end of release.  This came over from the Java port, but
I don't think it makes sense in Swift, given the copy-on-write Array
value semantics.  Instead, just copy the tail of the buffer if there is
anything left to read (i.e. self.data gets smaller) and when there is nothing
in the buffer to read, reset to the specified bufferSize (i.e. self.data
goes back to the specified self.bufferSize.

Remove debug print statement that was accidentally left in."
0e0ad04f01d7255facfdc22a2f6ce30aa67f9603,"Include the Swift runtime in ""mvn clean"".

Add an entry to pom.xml so that the runtime/Swift subdirectories that contain
build output are removed when ""mvn clean"" is used."
ff2b6344b5e6ba255c77c37a3a9af65f0fd72550,Exclude RuleContext interface methods from parse rule names to avoid rule/method name collision. Fixes #2080.
dadc96c2ee43d3e561f57464b84789b7339c118a,Sign contributors.txt
1701d769d327e2d4d6f44d79d6c38bae94c66620,Update antlr-project-testing.md
5665502bf966191e0dc922a46c556e5b751aa666,Merge branch 'output-path' of git://github.com/mike-lischke/antlr4 into mike-lischke-output-path
121e7674094ba61eda7f8118080a84500b13c00e,"fold in Mike Lischke's PR https://github.com/antlr/antlr4/pull/2065 to make the output directory exact if you use a new option `-Xexact-output-dir`. Fixes #1087, Fixes #753, Fixes #638."
56b01f309c6991fbf531195d20d96a30f14a8955,Merge branch 'mike-lischke-output-path'
1813da0166df043c9c3166467580a1244781c77d,"Merge pull request #2079 from ewanmellor/travis-dont-cache-antlr

Remove ~/.m2/repository/org/antlr from the Travis cache."
4bff0085272e5a8604923cff2d3dfeb4ffc0de16,"Merge pull request #2082 from ewanmellor/appveyor-cache

Add cache entries to appveyor.yml."
fe992fa69dd155ed3a98c0848026d0fd35aa6e57,"Merge pull request #2084 from ewanmellor/fix-outputdirectory-error-handling

Very minor fix in error handling path for the -o command line option."
22842da4cbfa0b9180072fc186a9ac41f894f12e,"Merge pull request #2085 from ewanmellor/fix-message-format-cmdline-option

Fix the -message-format command line option."
21a38b3cea4148573490f177928710714974057a,"Merge pull request #2086 from ewanmellor/message-output

Improve the ""gnu"" message format"
5809f71d0e56821303d48ec7f23d0cbbd6ae559a,"Merge pull request #2091 from ewanmellor/travis-cache-dotnet-osx

Add Travis-side caching of the dotnet package that we download from Microsoft"
85aaf1b0d9a1c0d2f81937dbc6cf4a05be2493da,"Merge pull request #2092 from ewanmellor/swift-fix-unbufferedcharstream

Fix UnbufferedCharStream in the Swift runtime."
58ddf07905f240e9bc4a51055f85647e86a87f3d,"Merge pull request #2093 from ewanmellor/swift-lexer-init-required

Make CharStream.init(CharStream) required (in the Swift runtime)."
0fd2098b6c58f452112af2f61ca81d2359c2a55a,"Merge pull request #2096 from ewanmellor/mvn-clean-swift

Include the Swift runtime in ""mvn clean""."
376f7384c323295ec6d050547a5feb006bacc247,"Run the Swift runtime unit tests during the Travis run.

These are the unit tests that are written in Swift, not the more
in-depth runtime-testsuite tests (we were always running those).

I don't know why JAVA_HOME isn't set during run-tests-swift.sh, but it
isn't.  Set it, since runtime/Swift/boot.py expects it as part of the
parser generation."
c1b7bf94f671d4ba0ade9cada693264f849c47fb,"Merge pull request #2098 from jasonmoo/rule_context_methods_fix

Add RuleContext interface methods to reserved words"
676e6f48103c244439ca77aa4a1b9901741b0a3a,"Merge pull request #2099 from ewanmellor/travis-swift-runtime-tests

Run the Swift runtime unit tests during the Travis run."
f36a1558caa8618ecfa3b84796866dde30af8860,"Implement UUID.init(mostSigBits, leastSigBits).

The implementation here before just tried to make a UUID from the empty
string.

Remove the unused UUID.toUUID.  It was broken too.

Rename the file that this was in, since NSUUID and Foundation.UUID are not
the same thing."
fd58a8c4fdead3d11a6c18aef9a94b2c4b27ad75,"Tidy ATNDeserializer.

Remove lots of unnecessary type annotations, replace unnecessarily
complicated static initializers, and use ""if let"" and ""guard let"" to remove
lots of casting.

Bring together a couple of hundred lines of copy-paste code between
the deserialize and deserializeFromJson paths.

Fix some obvious bugs in the deserialize path.  This code is entirely unused;
we use deserializeFromJson in the autogenerated parsers.  I'm inclined to
remove deserialize since it was so broken, but I'm leaving it for now, in
case someone needs compatibility with ATNs from different language targets
and wants to fix it."
b4c34da1f0e2fde321a18861a63ac88a671835cc,Merge branch 'master' of github.com:antlr/antlr4
e8a2fbe524d7ff995c641682b3422e29fe222625,Support building ANTLR Cpp Runtime with Intel compilers
154585cffd01d4da26d96db52d57fea56b29fc22,Update contributors.txt
e1e6ce5c0384c4a2677c0fad0c6b556b9319a267,"The correction for cmake depends on the demo,
the minimal rebuilding by the generated part.

Only if the grammar files (*.g4) have been changed"
4edb37d136dc977657e2cf31461fced3bf937092,"Open the error strategies to subclasses.

Mark every method in BailErrorStrategy and DefaultErrorStrategy as ""open"",
so that they can be extended by subclasses in user code."
fd8fd175a6496881299cad85c3e08609c79b24e8,"Fix ParseTreePatternMatcher.split in the Swift runtime.

Fix the parsing inside ParseTreePatternMatcher.split.  It was trivially
broken in a number of ways, with bugs that aren't in the Java version
that it was ported from, so it's obviously never been run before.

This adds unit tests for ParseTreePatternMatcher.split, and makes Chunk
implement Equatable, so that it we can compare Chunk instances in the
tests.

Tidy up the description implementations at the same time."
08ba9379d811e0b111bacfd7461acad9016c8ed0,Added tests for RuntimeMetaData.getMajorMinorVersion.
e2b94c783a5a61c27b4f58e6607ebffcb45d59ee,"Rewrite RuntimeMetaData.getMajorMinorVersion to use standard library
String functions and avoid our custom String extensions."
7933999fa67c053cd34ab457476e756c5750ab1f,"Remove uses of StringBuilder.

Remove the uses of StringBuilder where it is simply accumulating a String
for us.  In Swift we can use a var String for this; there is no need for
a StringBuilder class like in Java."
7cfdd9d124e5d19d5ea190e4b4dc5c7681abf243,"Change TokenStreamRewriter to use an inout String as the execute(buf:)
parameter rather than StringBuilder.

Tidy up the rest of the class on the way through.

This is the last use of StringBuilder, so we can remove that class entirely."
775040e1866d9447b27722a5b726d1bb4114a179,"Remove the toString implementations.

In Swift, we use description for the same thing.  All these just stubbed-over
or replicated the description implementation, except for PredicateTransition
which now implements CustomStringConvertible."
73d90ec18b26937aee5c75f1f7e81618d5c99821,"Tidy up some uses of String.characters and integer indexing into Strings.

In Swift 4, Strings have a set of sequence operations that we can use, so
that we don't need our String extensions.  Tidy up a bunch of places where
the code has been converted from Java through Swift 3 and Swift 4, and
become a mess."
15a7b3be24b8c1bb7503fc67a60637ba3abb7ea2,"Rewrite ParseTreePatternMatcher to use standard library
String functions and avoid our custom String extensions."
ba392be1afb2eb15c2ca65554afdac96050a6938,"Remove use of deprecated String functions in StringExtension.

Remove some functions that are no longer used, and update the
rest to Swift 4's String API.  lastIndexOf changes to lastIndex(of: ),
matching the standard library naming conventions, and returns a
String.Index? instead of an Int.

Add an implementation of Substring.hasPrefix for Linux; this
is in the Apple standard library but not the Linux one.
https://bugs.swift.org/browse/SR-5627

Add unit tests for StringExtension.

Bump the Swift download for the Travis Linux tests from 4.0
to 4.0.2.  There is a bug in Substring.range(of:) in 4.0.0
(https://bugs.swift.org/browse/SR-5663) that we need to avoid."
5dd835f0a16dc4355a9e304938c8ecb867b920a2,Merge branch 'swift-fix-uuid-extension' into swift-fix-deprecated-string-methods
8c2f80f1c7ca3ee1269a04dd24feaf49b7e0a91e,"Tidy-ups inside the Swift runtime.

Change ParserRuleContext.exception to be RecognitionException?
rather than AnyObject!.  I don't know why it was declared that
way because the Java code uses RecognitionException.

Remove ParserRuleContext.addChild(Token) and addErrorNode(Token).
These are deprecated in the Java code and there was no need to
bring them over to the Swift runtime.

Fix ParserRuleContext.toInfoString, which was mangled when it was
ported from Java.

Various other tidyups: removal of useless type annotations, use of
if let, etc."
00753dd8c9670bab78ee224cd4c13003307e20bf,"Simplify ParseTree and ParserRuleContext.

Make ParseTree, RuleNode, and TerminalNode be protocols rather than
classes.  These had no useful functionality (which is not surprising,
since they are interfaces in the Java implementation) so there is
no need for them to be classes.  This reduces the depth of the inheritance
tree.

Add a subscript getter to ParseTree (and corresponding implementations in
the concrete classes).  This has two advantages over Tree.getChild(_: Int):
it can be declared to return ParseTree rather than Tree, and it can fault
on index-out-of-range rather than returning nil.  Note that covariant
specialization of the return type is not supported through protocols in Swift
yet (https://bugs.swift.org/browse/SR-522).  This means that ParseTree
cannot specialize Tree.getChild()'s return type in the way that the Java
implementation does.

Remove the return value from addChild / addErrorNode / addAnyChild.
This kind of chaining where a function returns its parameter does not fit
well with Swift's generics / protocols model."
06300e82bc6c47e0ad3e25891b1765ec5bf651a0,"[Swift] Make all the mutexes ""let"" rather than ""var"".

Make all the mutexes in the Swift runtime use ""let"" rather than ""var"".

They are never changed, and they wouldn't make good mutexes if they were."
afdfb56b59c88949cbdc8035fa4201e9b6f8527f,"[Swift] Replace IntervalSet.setReadonly with makeReadonly.

Replace IntervalSet.setReadonly(Bool) with makeReadonly().  This
operation only ever works in one direction, and would throw an exception
if a caller attempted to make a read-only IntervalSet read-write again.
By changing the interface we remove the need to check this, and so we
don't need to declare the exception.  Unlike in the Java runtime, we
need to declare the possibility of the exception at the callsite, so this
was pointlessly cluttering."
b548999b160d56554d7d524c6d733b629512bb33,"[Swift] Make DFA.precedenceDfa be a ""let"" rather than a ""var"".

Make DFA.precedenceDfa be a ""let"" rather than a ""var"", and remove
setPrecedenceDfa.  This field never varies after construction.  The
code in setPrecedenceDfa was carried over from the Java runtime, but
it only threw an exception, and was deprecated.  There's no need for
that in the Swift runtime."
4baedb5e7b7fb29870a458f4e29364ade5f5ecaa,"[Swift] Make ATNSimulator.sharedContextCache non-optional.

Make ATNSimulator.sharedContextCache declared as non-optional.  It
was used this way anyway, so it was just being pointlessly forced
at the use-sites."
19c0ecaedfcb9c67f916bc14e528a5f78298562a,"[Swift] Remove Triple.swift.

This is not in use.  It never has been, as far as I can see."
167a3b8808c9fb6c1bad4e47016b517105ab0b54,"[Swift] Remove Recognizer.tokenTypeMapCache and .ruleIndexMapCache.

Remove Recognizer.tokenTypeMapCache and .ruleIndexMapCache.  These
were easily replaced in Swift with lazy vars.  The input to these
two caches are fixed fields on the Recognizer (the Vocabulary and
rule names respectively) so a lazy var suffices.

Note that these differed compared with the Java runtime -- they are
declared as static in Java and therefore the caches are shared across
all recognizer instances, but the Swift runtime had them as Recognizer
instance variables, which meant that at most we had a cache with one
entry which got destroyed along with the parser.  Regardless, using
lazy vars is still simpler.

This removes the only usage of ArrayWrapper in the Swift runtime, so
delete that too."
b2a55d1becf53720a4591c214b2d9bc5ed6e138c,"[Swift] Remove unused ATN.modeNameToStartState.

Remove unused ATN.modeNameToStartState.  In the Java runtime this is
only used by LexerATNFactory (i.e. during lexer generation) and we don't
have the equivalent in the Swift runtime at all."
2b00ca06aa073ad76f6865080bfe5500afb10042,"[Swift] Fix initialization of {Lexer,Parser}Interpreter.decisionToDFA.

Fix initialization of {Lexer,Parser}Interpreter.decisionToDFA.  These
were always being created as empty arrays, which would never work.

I don't know if anyone's using this code; presumably not."
e77d690e36af83f4efbff742a6687ef666896173,"Report errors in ANTLRFileStream.

Change the initializer to ANTLRFileStream so that it throws any errors that
occur while reading the file.  Previously, it was just dropping any errors on
the floor (inside Utils.readFile).

Remove Utils.readFile, it's not used anywhere else."
e2f4cdc68dcdc2a21e0303ea5d5607b11be54956,"[Swift] Some minor tidyups.

Minor tidyups in the Swift runtime.  No semantic change."
6cc35ad6777d4ebc04df42ef100de5b6eabfa3a9,"[Swift] Remove pointless do block from LexerATNSimulator.

Remove pointless do block from LexerATNSimulator.  This is a translation
from Java of a try/finally block, but we have the finally clause in a
defer block so we don't need the do block."
7cf8ef7bc5f2b093a79eed9ce6fd542330fb3aae,"[Swift] Remove ArrayList.

This was only used in some commented-out debugging code.  Swift has
perfectly good array types, we don't need to implement our own."
eaed562cb30658057109d1aa6bf11961b4c3d0de,Merge branch 'master' into interpreter2
eb9124fff8ea8f1c31733dd4898d71d4804fc029,"[Swift] Fix parse-cancellation in BailErrorStrategy.

BailErrorStrategy is supposed to throw an error that's different from
the ordinary recognition error, specifically so that it can be handled
differently by client code.  This was not ported over from Java correctly.

Fix this by moving parseCancellation from ANTLRError to ANTLRException,
adding its RecognitionException argument, and throwing it from the
two handlers in BailErrorStrategy.

Also remove ANTLRException.cannotInvokeStartRule, which is unused.
(The Java runtime uses it when ParseTreePatternMatcher throws a generic
exception, but we don't have that.)"
2e0ed500dc9178f5b95f6749c0f16a56b14c64e4,[CSharp] Print the stack trace if compilation fails.
5b5f195b12f8c4bed275dc7256963e1201b2a747,#2021 fixes nuget packaging options to avoid missing dll exceptions in transitive dependencies
0e895afb04e55979e78b52b4206da5cf6287d837,don't generate interp data if there are errors (it needs to serialize ATN which can fail upon error).
e158824ca8e442071e2004c08dfc1734e162b92f,Merge branch 'mike-lischke-interpreter2'
9ec6c665d5a1e11ff2283604f04319313e0397a1,#2021 nuget artifact in appveyor
0ba9808982a6c303b9a1b36dea4d67da3fcf4dd4,"[CSharp] Assert that test compilation succeeded.

Assert that the dotnet restore / build commands succeeded.  If we
get a failure at this point, the test is obviously going to fail, and
we're masking the error by trying to push on with other commands."
cbb10279ab634b228a86832ec914e6de2c1512cc,"[CSharp] Add extra diagnostics to the C# runtime tests.

Log the command / stdout / stderr / exit status at three places
during the C# runtime tests.

At these places we are executing subprocesses, but if those fail we
weren't logging the info that we may need to diagnose the problem."
84eca87da283687460edc93ea9344b736bd77581,"[CSharp] Switch Travis / macOS to .NET Core 1.1.4.

Switch to .NET Core SDK 1.1.4 for the Travis macOS tests.  This is
the LTS release at the moment.

Issue #2078 is starting to look like a crash (SIGILL) inside the dotnet
runtime, so this upgrade may help with that."
22337f35c0f6c1bf96886a1e8a2b4d5e8a8d8520,"[CSharp] Add a retry if we get SIGILL when running dotnet.

Issue #2078 is a crash (SIGILL) inside the dotnet runtime when running on
macOS on Travis.  This is intermittent, so a retry may help.  Retry this
specific exit status inside runProcess."
ed52b5a0536eca1b894a33172a55c6071290fc7b,"Add an accessLevel parser option.

Add an accessLevel parser option.  Use this to specify the access level
(public, etc) used on the classes and protocols in the generated
parser / lexer / listeners.  This required adding the option to
tool.Grammar.parserOptions so that it was known as a valid option, and
to codegen.model.{Recognizer,ListenerFile,VisitorFile} so that it was
available to the template in all the necessary contexts.

The Swift template has been extended to recognize this option, and generate
classes and members using ""open"", ""public"" or ""internal"" as appropriate.

This is only fully implemented for Swift.  The option is generic, but
the language-specific templates will need to be updated for any language
that would like similar support.

Closes #1597."
88a7580b78ed09c2d31bc182cb760efe9ac15334,"Fix interval usage

For JavaScript runtime, Interval class constructor assume start and stop
to be number."
c360a059190b97dc45a4e936596e76bb508114ea,update contributors.txt
da57241c1d66762e7fcb612f660d45c33868611a,"Added checkForUnreachableTokens method, added new TOKEN_UNREACHABLE error type.

tabs normalized."
585325fe12c201010c530b4c62dc7ab468680c06,Added testUnreachableTokens unit-test.
328cdf35838b027f85d2c57d027c63bd4fa4ceb8,Fixed TOKEN_UNREACHABLE warning checks.
9324d0716b0ff889f9acdbfbdf7633e3970faff7,Extend and fix unit tests.
58349e5ad33f626391673bb75d11f97f432c06f6,} on line by themselves.
f4c4e8b4a7f9567cd788589c9c0cb41d014eec98,Added comments to checkForUnreachableTokens and getSingleTokenValues methods.
64b2ced763ee36eb490cb91785c141a1cbffe263,Added check for fragment rules.
5b11aed48d4398f0131e3d19d317d8613e9220d6,Restored formatting.
763eccc2a4f7c346700f5c520d5f4136769d1077,Added tests with escaped characters.
07a0a809925ee1bb2005152ca3674cb834f8edca,Yes another formatting fixes.
1318db6d153ab4a4390b03cc510368a1172de4ec,"Merge pull request #2133 from zqlu/js-interval-fix

[JavaScript] Fix Interval usage in ErrorStrategy.js"
b7da445d851b834d140f58073e0cc8ffe14e43bb,"Merge pull request #2124 from ewanmellor/csharp-test-diagnostics

[CSharp] Add extra diagnostics and a retry to the C# runtime tests and upgrade the macOS runtime"
963d44f930e6c74085bcb063923a6354661e9b6f,"Merge pull request #2024 from kaedvann/master

[CSharp] #2021 fixes nuget packaging options to avoid missing dll exceptions"
d02844c8135aae0b935c8f9b17927fd77b0c2fdc,"This is one implementation addressing issue 160.

Change to support import of lexer grammars containing modes into other
lexer grammars. The semantics for this are,
   * sets of channels from all grammars are merged
   * rules of modes found in an imported grammar which are in the root
     grammar are merged into the root grammar mode.
   * modes which are not in the root grammar are added to the root
     grammar, excluding modes which become empty due to a re-definition of
     rules in the root grammar."
d397b9a65a27797dd53584a2f781d131e8ba9584,Add my name to contributions file.
6239a640ce44336b6c295662eb042087dd5eee06,"Merge branch 'master' into Issue160_import_lexer_grammars

Conflicts:
	contributors.txt"
afa257486255edd7bb884a216492c60bcd1c4ccf,"Merge pull request #2100 from ewanmellor/swift-fix-parsetreepatternmatcher

Fix ParseTreePatternMatcher.split in the Swift runtime."
a7af99b17fd726f0238951d45d4a93fe992e34a5,"Merge pull request #2101 from ewanmellor/swift-fix-uuid-extension

Implement UUID.init(mostSigBits, leastSigBits) in the Swift runtime."
8b86af66541255300ff5456e360755521c23e73d,"Merge pull request #2102 from ewanmellor/swift-antlrfilestream-report-errors

Report errors in ANTLRFileStream."
9a701ef57f27095954f02a20cff5c138e3b625fd,"Merge pull request #2103 from ewanmellor/swift-tidy-atndeserializer

Tidy ATNDeserializer."
14880cb3b43c2335f30fd41eab02a82140a839fe,Merge branch 'master' into support_intel_compiler
c6a8141890f3174bad4cf2b8e2a8a1c1db513f3f,Merge branch 'master' into support_intel_compiler
d7a97543abced38bff9ba34fc3fc9b9902ca523c,"Merge pull request #2104 from ajaypanyala/support_intel_compiler

Support building C++ Runtime with Intel compilers"
e11e707a380d2c515971263c99268a8d17c2090e,"Merge pull request #2105 from gendalph/cmake

The correction for cmake depends on the demo"
6bcde64abfe5a0e0166373863e1911d002c9be6a,"Merge pull request #2106 from ewanmellor/swift-open-error-strategy

Open the error strategies to subclasses."
84e9a469323e3bff50612566be4b57527ec3dc7b,"Merge pull request #2107 from ewanmellor/swift-fix-deprecated-string-methods

Remove use of deprecated String functions"
d691f4d0868a7e912ec9f9347b4557ec693d49b4,"Merge pull request #2108 from ewanmellor/swift-tidyups-parser

Tidy-ups inside the Swift runtime around ParseTree, ParserRuleContext"
8c1a46d87a1203f86f08a6b84e3ffb143c4cb66e,"Merge pull request #2112 from ewanmellor/swift-mutexes-let

[Swift] Make all the mutexes ""let"" rather than ""var""."
aaca1b9f3c2f7a5a05756a77bb00dcd5f13cef19,"Merge pull request #2113 from ewanmellor/swift-makereadonly

[Swift] Replace IntervalSet.setReadonly with makeReadonly."
3536a84b5239847299c7842091a249b9742556b4,"Merge pull request #2114 from ewanmellor/swift-let-precedencedfa

[Swift] Make DFA.precedenceDfa be a ""let"" rather than a ""var""."
ed37fa23e6698aed1a363dc43514bc619b10b00d,"Merge pull request #2115 from ewanmellor/swift-minor-tidups

[Swift] Some minor tidyups."
aec23acb2484a1a97ac66dd01aabc0c0b46e9e86,"Merge pull request #2117 from ewanmellor/swift-remove-modeNameToStartState

[Swift] Remove unused ATN.modeNameToStartState."
633de4aeab786eb60d20bd38a7ca2404b023807c,"Merge pull request #2118 from ewanmellor/swift-let-sharedcontextcache

[Swift] Make ATNSimulator.sharedContextCache non-optional."
406b1816c8b1e128a554025c8cede79d01a2da39,"Merge pull request #2119 from ewanmellor/swift-remove-triple

[Swift] Remove Triple.swift."
c586a592ce61c14a1db42344bc75308345bb2ebb,"Merge pull request #2120 from ewanmellor/swift-remove-arraylist

[Swift] Remove ArrayList."
756fcdd5ec1b3769b21746d41c5048692d62bd89,"Merge pull request #2121 from ewanmellor/swift-fix-interpreter-dfas

[Swift] Fix initialization of {Lexer,Parser}Interpreter.decisionToDFA."
bd4f1a93652440a49738f56b6adea6d61caadee3,"Merge pull request #2122 from ewanmellor/swift-remove-recognizer-caches

[Swift] Remove Recognizer.tokenTypeMapCache and .ruleIndexMapCache."
b5e6147cd53c5cdc2fa0f5b40a4a5f9a2319bae2,"Merge pull request #2123 from ewanmellor/swift-fix-parse-cancellation

[Swift] Fix parse-cancellation in BailErrorStrategy."
e8dd80523ef8a16b5c1a83f93c54bb6222d249a5,"Merge pull request #2126 from ewanmellor/generator-access-levels

Add an accessLevel parser option."
edcf275a3cdbc0949321e3344bd23b1d04acfb88,Merge branch 'master' into Issue160_import_lexer_grammars
fa7868002e15607f7940e6d49cf5858eb99e0859,Merge branch 'master' into Issue160_import_lexer_grammars
0301bb946cc783b9386d2e9998574ef3c75a09bf,"Add a test case for importing modal lexers into a composite grammar. The
test case demonstrates an error is produced (due to importing modes into a
composite grammar)."
83e29ed9cae0e37882131dc493cd1b5eb408cbbd,Merge branch 'Issue160_import_lexer_grammars' of https://github.com/niccroad/antlr4 into Issue160_import_lexer_grammars
e22fbbcce8d6096d025616e9bc656cf3db06b8f4,"[JavaScript] Added atn property to generated lexers, similarly to generated parsers."
490cd7068cf9a80fa5cb9d00e530fa479d1d9047,"Make some changes to the docs for grammars to describe support for lexers
containing modes."
d2685bf37ffdfa23bcacaf494af25473e8a0f4a9,Add a test case for merging clashing channel names during import.
91951c16651a158b4a1365467211a3fc2c50814e,"Merge pull request #2135 from niccroad/Issue160_import_lexer_grammars

This is one implementation addressing issue 160."
b9adef5878c5b84eb9b70bad2df56334fb7e1b9e,set version for C# dotnet to 4.7.1.1 for publishing
4c3ce098119b6dd1c441ff67955c4df9b6833b9b,start on doc for Case insensitive lexing
a5f47c8c55a455e92d7bcdfc82a27419b057a994,start on doc for Case insensitive lexing
529903a7f6583409947fdf82ef337aae822367f7,start on doc for Case insensitive lexing
57151fec982aaa889442d7a02c6ec07b8f3839bd,[Java] Add a new CharStream that converts the symbols to upper or lower case.
ce8b4ae523d887aba276fb8ed7e0e55444e25fdc,add in java case insensitive stream from bramp
21de2317fa2d8466f3434d2436ff208788c91d2e,"[Go] Add a new CharStream that converts the symbols to upper or lower case.

This is useful for many of the case insensitive grammars found at https://github.com/antlr/grammars-v4/
which assume the input would be all upper or lower case. Related discussion can be
found at https://github.com/antlr/antlr4test-maven-plugin/issues/1"
d3a7fe37ff3639daa53d8953b45f11c2eea4bc42,add in Go case insensitive stream from bramp
8d2975fc9994e24621ff0cfd5fbd6c5c4fc3564f,[Javascript] Add a case insensitive input stream.
634b75acb94e6a369bb749a67a78cbb77b3c0e40,add in JavaScript case insensitive stream from bramp
2fd1f9a11c74eac79735869ca9fb7f01cedb6617,add links to new source code
c099d919809cd821cb757b325745f9f9a6457e60,fix js syntax error
a9e6d0c15d91c4cdd2b48f1b4afeb4daf45ae6e3,Merge branch 'master' of https://github.com/antlr/antlr4
7e39515dfef46a26d2af245a7d42a949efc09f80,Changed rotation to support 32 and 64-bit architectures as noted in issue #2060.
2d71d943863f13a48acdeb24740e23dddb611734,Updated formatting.
1e1e132a912a96ada4ce738c2b1b0e827ef11d11,Fix issue with tree finding when the underlying slice needs to be resized.
b66cc174b96e723336756c6d2fc96197ae3fdfc1,Export GetHiddenTokens routines.
a2bfeeb760b5492df8fbe22448bc1167a424cb07,update tests too
134d48567607707c75aa95060f8bfc88474488b8,fix js syntax error
dd4a1c8709c539ef23dda4ebf46e9d90ae1705bd,Merge branch 'master' into lexer-atn-prop
864f8fc49a58e168497e5da7c1cfe588f135f12d,"Merge pull request #2141 from oranoran/lexer-atn-prop

[JavaScript] enable auto-suggest engines by exposing the lexer ATN as a property, similar to the parser ATN"
55d1a94afb0e258b488363ffd8cbbfd1225ae73a,Merge branch 'master' into case-insensitivity-doc
87ea4c4862b755c5be14a643778c451ba07bee53,pull in contrib
1af14fb2873f9bebdb11dc05015c13e02f2c3306,Add CaseChangingCharStream that converts symbols to upper or lower case
846c7dafdad14d8f743db8a69e35e705d3abdcdf,pull in additions by Sebastian Lang
4763949d423f6f5ea727634a9d2761b2d0c0460a,pull in additions by Sebastian Lang
489a11b7a2f20dcbb3cc2b77c30a851557ef3692,"Merge pull request #2066 from KvanTTT/unreachable-tokens

New unreachable token value warning"
ab623a1867637c64286ad9eb2adc1d67d8151aac,Merge branch 'master' into case-insensitivity-doc
a4a14213f97489daf8037539b3fff93070f9e483,"Merge pull request #2146 from parrt/case-insensitivity-doc

Case insensitivity doc"
c349ba3c8a7261cd049ba6ebd758e1412ecfcb58,"Merge pull request #2149 from davesisson/master

Changed rotation to support 32 and 64-bit architectures as noted in issue #2060."
5987936a8683d506d07d912b3a4472820f7ed5d0,"Merge pull request #2150 from davesisson/trees

Fix issue with tree finding when the underlying slice needs to be resized."
7259baaf8a462ac6e516903ba3a75e0011b915c3,"Merge pull request #2151 from davesisson/hidden-tokens

Export GetHiddenTokens routines"
baf8b95b1c3365772b950edd76b5dd2864d5a95a,Updated XCode project + fixed a gotcha in ATNState::removeTransition.
f113891e0679c01f4302950f90e585492750988b,add script to gen release doc
763a1242b7f5fca2c7a06f671ebe757580dacfb2,update version number and tweak doc
5c112be2abf6c37fe0a796d2b1b468e8f0a93b20,update release notes auto generator
f8e63d53c522456be4731a30b2ee5a25dec03786,"[Swift] Remove HashMap and fix Parser caches.

Remove HashMap, and replace all uses of it with dictionaries.  There's
no need for us to have a custom HashMap implementation (mirroring the Java
standard library) when Swift's standard dictionaries work just fine.

Fix Parser.bypassAltsAtnCache.  This was declared as a Parser instance
variable, when in the Java runtime it is static (and therefore the cache
outlives the Parser instances).  It was also being handled in a
thread-unsafe manner, because the cache was being read outside of the
mutex that was supposed to be protecting it.  Fix both issues by moving
the cache and the mutex so that they are static to the Parser module and
rewriting getATNWithBypassAlts.

Remove Parser.decisionToDFAMutex.  The Java code uses a synchronized block
on ParserATNSimulator.decisionToDFA, but the translation to Swift had put
a mutex in Parser.  The decisionToDFA value is shared between Parser,
ParserATNSimulator, and the generated parser, so a mutex in
ParserATNSimulator isn't blocking all possible accesses, so it's useless.
Since this is only code for debugging anyway, just remove the useless mutex
and simplify getDFAStrings and dumpDFA."
b4f3a619fdfcb1be4d80555dad91c8e5cc0c47a1,"[Swift] Make ATNDeserializationOptions a simple struct.

The previous code was ported from Java, which resulted in 70 lines of code
to hold two bools.  Use a struct instead."
35b9bbfe176c82a3e162cadaa4ffb1d901793b72,"[Swift] Minor tidyups in the stream code.

No semantic change."
c5cec0397a99fb471c959ed927c4324c3e9d9241,tweak cutting release doc
bdc05c87be2ad981744223df0fd745e8345baba9,[maven-release-plugin] prepare release 4.7.1
17b6277502b144eb77f8dd8d05b6f2e2e7bb6921,[maven-release-plugin] prepare for next development iteration
398c018612950fe9fce5b6ace2c347f025758f6c,tweak doc
e0aa81792971a2f789b35b9642694507a214738b,tweak cutting release doc
d674274f99b6620d0dda46becb684e0a618b7c14,update setup.py to use setuptools not distutils
ba47b092e90853876a16cbc451d33f2d953e29ca,update setup.py to use setuptools not distutils (Python 3)
0668b530832c4fa57f6a237bca30b0b98c72dea9,update license string
366533cd8abe07084e58a0c92ef8ea7448c7d31a,sign contributors certificate
2634246b0788b8a4b97350c09e1049aa5ef431d8,"Add missing override keyword to virtual functions

Add missing override markers to the following functions of the C++
runtime:

  - TokensStartState::getStateType()
  - TagChunk::toString()
  - TextChunk::toString()

The missing markers made builds against the API with -Wsuggest-override
choke."
4e3c5ddffb7a813bf42340e62d155008470af4c9,"Make C++ Parser::exitRule() non-virtual

Parser::exitRule() in the C++ runtime is a virtual function which is not
reimplemented anywhere. OTOH, it is invoked during the execution of
every rule, which can cause a noticeable performance hit. This commit
removes its virtual qualifier. It should make a difference particularly
for large grammars, because the number of rules corresponds to the
number of the Parser object's virtual functions, and, consequently, its
vtable lookup time.

Tested with a VHDL grammar of 436 rules, where it brings down parsing
time from 75 to 44 seconds on unoptimized compilation, i.e. a 40% speed
gain.  Still a lot slower than an equivalent java parser, though, which
takes 2.64 seconds for the same input."
cf9d70dc028cfe54b5ad1aef81fd527e7cea2d86,Sign contributors.txt
f17319a9a57d25176f7efb005fe4614fc8cfc42f,"Fixed multi-threading issue in C++ runtime.

The shared s0 state in a DFA was deleted when setting a new one (from the DFA entries possibly). That could led to a situation where a valid reference was deleted, even though it's still needed.

Additionally fixed some formattings and updated the XCode projects in the demo."
ceb4ca7ce7a3b8e7a041fbb9a0c401dfa207d50d,Merge branch 'master-upstream'
f3f8cb877fa4b947a5d4664b2bb13c45f497d4fe,Add visual studio 2017 version of cpp runtime projects.
26d0d3143e64e4ab074fe046062953e81ddab478,"Update projects to the static library configurations define
ANTLR4CPP_STATIC rather than ANTLR4CPP_EXPORT."
e7b65214319e85b7066ce4be7115bdf63db8ebbc,Merge branch 'master' into vs2017projects
07d7bd1f36378cf0b206eb1754a4b784ff73c293,Add missing -std=c++11 flag when using non-appleclang compiler on macosx
18bdbb5a229c3fb64a03cdca7cf58ff5afb6116d,suggest alternative fix
505f672ca1baf4c6688779a9a8792c74631a24bf,Remove suggested fix comment
468e9262244c396e3b7f557891705bb4cfa6d3de,"Rewrite this function to make no un-necessary allocations and not leak the
allocations."
fa5a4ea0ae975f19a74cd10d90b59514bb544787,Actually this phrasing is simpler.
1e22396948af72efc498cfabeaa66a9ba5659ba6,Fix up the function according to review feedback.
4ea90b597690dca44fee4e816a731c314438ef36,Fixes #2175 (mem-leak)
4c8fd4e4bb5dffa853c86980e788ed4a7b401e7e,Reference can be const.
d7f29ef7e5f5c9bb2fb87adb2bb109913883b811,Duplicate assert to ensure to pick up nullptr in refactored method.
74779f334a59083873120d9fce8dfe71c6b0db24,tweak comment to be consistent with code. Fixes #2172
a7f3efb7eb3eda93c8eb63c66815ef6e6101c836,"Remove unused parameter in `_loadString`

The usage of this method was removed in commit 51edf3cece13b42b8419c7d2587a4e2beeb05fd9, but the parameter remained."
8fadd61f438ab055857565fcbabd0f5ecde6c10b,Sign contributers.txt
dfba8c68dbc31d95f916b085bad1da8ae5221d92,[Python3] return result instead of None in visitor
8629d46bbe004f039133655f075d39e8b19d06c2,fixes #2188
bfd5e5d8188740175b21c893372d9f3cb860edba,more python 2 to main test stage since it’s a standalone target
b594b24b15b87c6da6fafe42a49f708dd6b74a9e,csharp target builds faster so use it for main test
63267252707469b39b88a576ec9ec5fe648161fa,[Python2] return result instead of None in visitor
4cca8cd68d57f0bfd68800c6527b2e7cecd0928b,"Merge pull request #2184 from jkmar/return_result_in_visitor

[Python3] return result instead of None in visitor"
99a30816c4ec6aa0f651694690346c0d8014e3c7,"Merge branch 'issue-2175' of http://github.com/mike-lischke/antlr4 into atnsimulator_memleak

Conflicts:
	runtime/Cpp/runtime/src/atn/ParserATNSimulator.cpp"
dd3af945fda571db6025a0b1ad334c24eb1c4a1b,Only visit is ctx.children is non-null
87725e65c951099249c42e512061fc9bca465167,Add an explicit return statement
dadd466cbd8840356994976a4364b5e0733cb04f,fix indentation in javascript target examples
cbf65226c72a898bb41d905110b4dd3c1364ae77,sign contributors.txt
040ca0cee315e275178c1968c54546ef60da0223,add require statements to javascript target example
10d7878ed1d686cde7dcb3d713b5ee1aa98a4443,"Add code to optionaly generate two cmake package during install when 'ANTLR4_INSTALL' is set:
'antlr4-runtime' which imports the required runtime targets and
'antlr4-generator' which provides a convenient function to use the generator.
Only the latter one has a dependency to the Java package."
0218f5454a8eb8e66c71ee860abbc98fc552c3d6,Changed the compiler detection code for Clang so that FreeBSD is supported too
8e2126a9e560e5e74bb7b7b33e2986358d12182f,Change/Add documentation of the CMake package feature
e6a05ef60f7494ce7db9a08f644393b1999fd2b2,Merge branch 'master' of https://github.com/xgcssch/antlr4
6bd439959b8e0a007f89fcad773371d0ef058a32,Update Antlr4Package.md
a39f120a33038abfeb13f4ceac98c50c6efc5fbd,Signed the contributers list
be8b865276618d97f43fc438dd073b5734b6c457,"It turned out that the implemented CMake function generating the runtime files didn't work for combined lexer/parser files.
Added a third required parameter which specifies the type of input file."
3dd8a1fe20d0ad575c7db2906800cdb0c235b95a,Changed travis repo badge to svg
2c8542b5149cbd0264fe1e4829097921b4b7d12b,let Any::Derived<T>::clone depend on whether T is copy-constructible
940e174b5e0825b39bcda4a370f2b658278a0306,fix typos
d027f00aca19962b2de98a428a9a1b8b98707721,add patch to std::vector
6b8e9824a670fe81601805e6ebce24446ca3aacf,fix #2211
6e5155c943aaf36469af0aea9260a3d63124ac07,Merge branch 'master' into remove-unused-_loadString-parameter
7a2b95ab53f488b9e26d4af7409be6d5ca1f9eb9,"Merge pull request #2181 from kbsletten/remove-unused-_loadString-parameter

Remove unused  `_loadString` parameter"
c0cfcdf23c44d8a0d6a0a2ef6839082eee2ba048,"Update README.md

Make the NuGet package name more visible and add a link to the official package"
acc2d037351cc7fa5aaf9f3bdf8a5dc0a101c21d,Update contributors.txt
a73d5e21af169579e5c93dcebfb8f8e300eebda0,"Merge pull request #1 from razfriman/razfriman-contributors

Make C# NuGet package name more visible and add link to the package"
6ce1b1a0ebd436123a50d900f22c3ca136930163,"Merge pull request #2 from razfriman/razfriman-readme-cs

Make C# NuGet package name more visible and add link to the package"
b5b3a3c5fc826381cdc618f7f333148d1773c02f,"Add an Automatic-Module-Name

This adds an Automatic-Module-Name entry to the runtime jar in order to
provide a stable name upon which other modules can depend. The module
name chosen was ""org.antlr.antlr4.runtime"". This closely matches the
Maven artifact name with the obviously change that the module name
doesn't contain a hyphen (hyphens can't be used in module names at
the language level in Java).

Fix #2163"
08fd9111fa93e977cfab702137269e7aa7765d40,Sign contributor agreement
9551d12f7c989010fed8af51880e9e0d50f471e4,Signed contributors.txt
afb85ea34ef795d8ac63ca239249d886de60d3ea,"Fixed warning from MingGW and error from Clang Windows

This commit fixes:
- In MingGW
  warning: declaration 'class std::exception' does not declare anything
- In Clang (I tested with clang-tidy on Windows specifically)
  error: forward declaration of class cannot have a nested name
    specifier [clang-diagnostic-error]"
3fd8931d9dd0efc24258f78c55e97b84d557d34e,"Avoid forward declare std::exception on clang-cl

It will prevent clang-cl to output the warning [ignored-attributes]."
54297cd329c4e784ae4ce28e0d5598926693571c,rewrite + add patch to all stl containers
b4a43a886d17a01acee9e6e8c496bbe7bf2a2a1e,fix typos
d83536ffbc331475923355f71edc99b67bf02366,Fixed indentation
f296b75473c88c6e0d6f6d75fd0db893c35d0736,"Improved ExternalAntlr4Cpp (Fixes #1872)

Removed the old macro antlr4cpp_process_grammar as it has a lot of
parameters which may not be what the user needs."
526e6cdb9d32b02b3ef945021969f1415e0e14c8,"(Visual C++) Added CMake option to link CRT

Previously Visual C++ users were forced to link CRT statically,
i.e. use /MT flag whenever they want to use the static library.
Linker have an error if user tries to link a /MT static library
to a /MD executable.

This commit defaults the build to statically link with CRT, but
may be turned off if needed."
2ee1a19654c29d80786d37008db583ccc3d4305b,Updated README.md formatting
c1365684c34442021b50810b025878124e8ee6d6,Added support for OSX
e4d64579999e75fcda3f72e73b41dbd63413532c,Added support to Xcode
e455af199e98a0d208420bb01f2aadacbda50ed0,Fixed indentation
30ef969e76f6151c3acb4e85fc09b829880e5f31,"Merge pull request #2177 from mike-lischke/threading-fix

Patch for multi-threaded parsing with the C++ runtime"
6e213a09c58c354b26a4982c99effd09cf88e2ca,Changes to cpp runtime to make antlr work with Chromium build
bb516f0e91b300e11efbbbb65e71b12e6bfe2790,add note android build
0ef96334c7b896e708ced43c7720deed8781cecd,Added line breaks on README
8f11c738d34ce9e87915fe39b72a82bb3b9f9563,add to contributor list
6ffc59d63c147419296a62e836a0d65dde301b88,"Merge pull request #2223 from io7m/master

Add an Automatic-Module-Name"
8fb3b42ded91adebd8cf4ce0339b122f1d297c37,rewrite with std::is_nothrow_copy_constructible
2d08b9f4149d839d8e962fb61eaa820f06de3aba,Merge branch 'master' into master
8ce79eec81a63b4e618941e5a14e80f3521922ce,"Ensure file paths passed to STGroup[File] are absolute

- gracefully handle grammars without source fileNames"
6469934441b6554dfbe9f5542034c1192d53fad5,revert groupId change
7e93bf3e0911654ced03aa4ec21171081dca67d5,sign contributors agreement
7e89f26e9bc4ab3c03c6c589e236a3c9ef40c33e,"Initialize STGroupFile with url, not file path

- absolute file paths not reliable way to find resources on classpath
- requires changes to ST4 in this PR:
https://github.com/antlr/stringtemplate4/pull/199"
2daa261772870bceb3cf7a616469659da8719948,Don't generate interpreter data files if gencode is false
d076768dfff14d2c24686c6c192b82b76e92677e,fixed spelling mistake in js docs
cb70d10a78289cccb516117d475bc4738c0c6076,added name to contibuters.txt
8005cfd090d709856a42d78547aec75a4a7bdbc1,"Merge pull request #2288 from johnvanderholt/master

 fixed spelling mistake in js docs"
58ef6bbc96e6ba67c7692e2a2a9139c895d3c858,"Enable running debug mode of ParserATNSimulator

This is to have appropriate logs during debug and avoid crashing in some occasions when startIndex=stopIndex

range(startIndex, stopIndex) is equivalent to an array of values from startIndex to stopIndex-1 thus when startIndex=stopIndex range(startIndex, stopIndex+1) = [startIndex] which is not exactly an interval and would break getText that is expecting an interval as a Tuple."
83273c5e7ce92def5594e651e309ad904e5d667b,Signed contributors.txt
2971f3732335a37af3c12e9842156515a2857c31,Update icu4j version to address CVEs
e05a6a6f53c8339581523850c089f2030da68179,Sign contributors.txt
2a6a107b499617426b056afbe5ebe7325f6408f5,Java.stg: use static functions instead of inline arrays
61acb35f0cb9ec0743cb6edba6973c33bd56cc30,"Merge pull request #2299 from dhalperi/streamline-java-statics

Java.stg: use static functions instead of inline arrays"
d134b6a12d7b2141350fdfac75bd4fafd06c47dc,Fixes #2301
804353e21776d76c763a4810d55ff04ccc3be530,"Avoid StringIndexOutOfBoundException

This fixes https://github.com/antlr/antlr4/issues/2138#issuecomment-397271786. Clearly it's been an oversight, since the same code has been fixed for CodePoint8Bit in this commit: https://github.com/antlr/antlr4/commit/ac9f75303e215dbc12937eba68089151aef6f874"
2e4280944d1d942114f4aebbbafdf54a07ad6397,add my entry to contributors
7ca6d525e6beec44c8751cd1b325a0027b6b0c5f,"Updated csharp-target doc

Added a 'using' statement for namespace using Antlr4.Runtime.Tree, so that IParseTree can be found without fully qualified name.
Fixed typo in property Parser.BuildParseTree"
8dfcf32cfc43f20caf50ff6f587e7f28ee9ebc4f,Merge branch 'master' into master
98dc2c0f0249a67b797b151da3adf4ffbc1fd6a1,"Merge pull request #2213 from EternalPhane/master

Fix #1855, #2211"
cfd6b7430a4597bd0c153621c34ef250a5ce866a,Merge branch 'master' into master
788fd9a1b4681cda31f4189724a217ddd1f0b8bb,Merge branch 'master' into patch-1
0728fd05afd98dc7399d47a02b81b965f77bf923,"Update getting-started.md

Make grun alias as same as antlr4."
65991784ca6f05a8733c11605257b7207f272dae,"Update contributors.txt

Sign contributors.txt"
ee92d8caf122a1c7438784750666b2426efd5ab9,Add support for cpack.
f09f0ffbc2c70fc6e3ff0a12a13977b7110d5a6a,Sign contributors.
7c4806bb0bf417dbadc16c2fbb26b156356a08c8,Update releasing-antlr.md
171ef99e047f65f1358713c315a20451a8defb4b,Merge branch 'master' into master
400f4bd4d65a6bfa2a02d65ffc7a6e2f7ab54fd2,"Merge pull request #2295 from srvance/master

Update icu4j to resolve CVEs"
04f69242997d40273c3157c1a436eebed5ebef8a,Merge branch 'master' into master
4f75699eeb92b06e519e4f5305e7b0d6dc61b408,"Merge pull request #2311 from alecont/master

Updated csharp-target doc"
c9df334af85496b11b2e98e50b4c93d10705befb,"Merge pull request #2302 from ericvergnaud/python-3-fix-2301

Fixes #2301"
73170a2076203b1f85ea5b4f381f366d1e658cc3,Merge branch 'master' into master
4618842cd591779f85e9f32de1db87e7678d51bb,"Merge pull request #2292 from sinopsysHK/master

Enable ParserATNSimulator debug mode in Python3 target"
7dbc5ddc15cef8b98ac1f0de786863fdacb3074f,Merge branch 'master' into master
9ec01b8551e4c099b8330d1a64553cdbbcb551b1,"Merge pull request #2216 from razfriman/master

Make C# NuGet package name more visible in runtime docs"
7bd2c3fbe17516fa1a7a25ab621b3ab05697ec51,Merge branch 'master' into fix-js-examples
0d6aebbb8ef44067b8d9e28bfa94daf23cab68ae,"Merge pull request #2198 from kasbah/fix-js-examples

fix indentation in javascript target examples"
fc01366f35e3b2adc51a2cf8e96314afe3995827,"Merge pull request #2196 from robertbrignull/visit_null_children

JavaScript parse tree visitor: check if ctx.children is non-null in visitChildren"
ad9007664be1749e6cae6f133a97b5c9f83dc9ce,"Merge pull request #2192 from ericvergnaud/use-csharp-as-main-test-target

Use csharp as main test target"
1375995edbe869e0eabcef316d2388ca7881f581,"Merge pull request #2190 from ericvergnaud/fix-#2188

fixes #2188"
ad603efe9147652b5aa41c92f6b5fd12a94954f8,Add StdninStream for python3 runtime. Closes: #2271
7d0787e29ca89b298ecf68db41cdf31f3d9276ab,"Merge pull request #2336 from m-novikov/stdin-stream

Add StdninStream for python3 runtime. Closes: #2271"
c956fbbbc6e4dbd713728c1feda6bce2956a0894,Allow importing StdinStream from antlr4 package
95f8c4b768f54594f8e8010d666b1ec2eff1b722,"Fixing the link to the Eclipse plugin

The link to the Eclipse plugin was pointing to the a YouTube video about the Intellij plugin"
3893557fa1db798a688c67b03c7b599294d8c3dc,Signing the the contributors.txt file
411960b1878f12912f5c330086a79eb07345a3d8,"remove double dots in the filename

some tools are can not handling files that have double dots in the filename"
d49f95fb68d4da51b0aa06d7091bd7a9a84aa8d7,"Merge pull request #2341 from michilu/remove-double-dots-in-the-filename

Remove double dots in the filename"
d86365d0d615e391febc5d8c0fd5da93f1eea1bd,Merge branch 'master' into cpack
432022fc1ca098f2ab419d6e26a09124a518c345,"Merge pull request #2322 from jgoppert/cpack

Add support for cpack."
b748545707d580cac345e728a05f7b54450862ca,"[Python3] Fix the import of parser superclasses.

Until now, the generated Python3 code imported the custom parser
superclasses relatively. However, this only worked in Python3 if
the module was inside a package, since relative imports rely on
__name__ to determine the current module's position in the package
hierarchy. In case of a standalone script, this was always __main__
and hence these relative imports failed.
The patch handles this issue them same way as it is handled by
listener imports."
301ac82631e4c78bad34c2ea45a1a2b7632cff7e,"[Python] Add missing lexer super class imports.

Although, both lexer and parser grammars can have a custom super
class set, but only the generated parser sources were prepared to
import these classes. The patch makes custom lexer ancestor
classes imported, too."
3ed96431b3ed6d7c37d768d4329d88ef795a9313,"Merge pull request #2374 from renatahodovan/lexer-super

[Python] Add missing lexer super class imports."
03a0a40835014ba2f68e6ba9f9d390edb5a67270,"Merge pull request #2373 from renatahodovan/parser-import

[Python3] Fix the import of parser superclasses."
10f8cac7f4b7accd7a647e1096c85241f0687805,"Update runtime/CSharp/runtime/CSharp/Antlr4.Runtime/Atn/SingletonPredictionContext.cs

NullReferenceException in CSharp target #2304"
8b458f85c02fa93e9e216c7899a28776f00185c9,"Update contributors.txt

sign of contributors.txt"
0af96112158a0c05159d4de527dfebeb519131fe,Properly build and pass in decisionToDFA
9a42ff33f4d87eb16eaa742f1cf59d002028d7ca,Use proper spacing formatting for this repo
696f9b93df1ffb2067572202e5d9f9c37bca4866,Merge branch 'master' into master
0a1b3c7df6c5f66ad6a40054e6b752a3469a9bae,Improved ExternalAntlr4Cpp and added CMake option for static CRT (Fixes #1872)
4285979cad1780cdb41aa925fc11fe058d5e47eb,Fixed file name managling and added ability to list zip file
5a7912abde8a2aa1ee7954c4e44862cb28ea6ef1,Parenthetical spacing in CMake files is more consistent
73836edf1f840aa5734f9ea26eacb1a8016ddddc,"Merge pull request #2388 from chrisaycock/cmake-update

Improved ExternalAntlr4Cpp and added CMake option for static CRT (Fixes #1872)"
25f178b844e32a3b946177bea2a17c6cc747f87d,Merge branch 'master' into master
1eca79ec3ab84eb083b4292c8eed778ca6ffe336,update python from 3.5 to 3.6
e37c9fb7ed30c1beec21e9864c07c17d6917beef,add anaconda3 to search path.
ab86780b6449e831f767d7d4a7c313cac874c9d2,"Merge pull request #2394 from parrt/update-so-it-builds

Update to python 3.6"
7591bf1705417f7a0d7f73c9208a8dcc22e0eea7,updated ST version
de876866744195b6956fab76bd890bb922a092f2,add note about 1.7 in doc
52c5c2144e5acb5df58eb04f3f41389ea3eb4e43,tweak
cabee7a964169b62b59c7eedc370a61eaac6befa,tweak
a9eb18c9211cc5abe5b5c6d84585ef6bf4651553,Merge branch 'master' into master
e159b5dd419f1dba2b3b7b5d6812fa690dd359eb,"Merge pull request #2339 from LucasHMS/master

Fixing the link to the Eclipse plugin on the Java documentation"
941ae184add25048fc39a83a5bc1aa8c9c326687,Merge branch 'master' into patch-2
47d1ca04bb94ef983081f61707ab13e251982f18,"Merge pull request #2315 from wu-sheng/patch-2

Sign contributors.txt"
d9a061d6d744985b1a65e9e96c24a2a74172a773,"Merge pull request #2316 from wu-sheng/patch-1

Make grun alias as same as antlr4."
e25ff7105c850826bebb838d73b5e07508754f29,"Merge pull request #2338 from m-novikov/stdin-stream

Allow importing StdinStream from antlr4 package"
609e1a70b140e1596770471554798e6ee37ea044,"Merge pull request #2208 from amilajack/patch-1

Changed travis repo badge to svg"
756e4da0087137bfc4a747bf5adf589118cdd1b7,tweak
a57732ce745a0b1dd868d1c70dc9039bb4c44eca,Merge branch 'master' of github.com:antlr/antlr4
f45e36509c478415bda6fae171a270fbb2f9a82c,Merge branch 'master' into cppruntime-non-appleclang-macosx
441c4076a4ea8fc01269c7f577fd9121f7b5d1c1,"Merge pull request #2168 from ajaypanyala/cppruntime-non-appleclang-macosx

Add missing -std=c++11 flag when using non-appleclang compiler on macosx"
f1b195765a5b6332dd2fa9218b414188402279cf,"Merge pull request #2165 from niccroad/vs2017projects

Add Visual Studio 2017 project to Cpp runtime. Also change define for static library setting to be ANTLR4CPP_STATIC, in all projects."
0c63b68e18ed070b8b8fb6cf278ff018a9dc2dbd,"Merge pull request #2154 from ewanmellor/swift-remove-hashmap

[Swift] Remove HashMap and fix Parser caches."
54131a074e3d772b657f54d6061248f82d3d2064,"Merge pull request #2155 from ewanmellor/swift-ATNDeserializationOptions-struct

[Swift] Make ATNDeserializationOptions a simple struct."
39a1aa5c0fce1905e98dbca80419c15df2ce3ed1,"Merge pull request #2156 from ewanmellor/swift-stream-tidyups

[Swift] Minor tidyups in the stream code."
25b30623c060105568510f9aab11954b764b841a,Merge branch 'master' into master
4fed9349480d90db5802abd19b8c6f9ce01333ea,"Merge pull request #2159 from enessoylu/master

[Javascript] Update license string for the NPM package."
3039dc2411c7420011f8bdd136233d402e1b08f8,update jetty server to avoid security risk
488375df5a7137b72e73776af763c0564f13bd82,Merge branch 'master' of github.com:antlr/antlr4
3d764a39fd6fde5535b1e782601668f2d38041dd,"Applied C++ changes for PR #1955.

Also applied recommended XCode settings."
27d5cc7163ed9166b0e6e5648e55794dc4a3dfb0,"Merge pull request #2396 from mike-lischke/master

Applied C++ changes for PR #1955."
5aa0df9c456f57fb8de5d9b590da5adc0b4c463e,Fixes #2350
f6c6217804189b406a2daca718e3b4464e25e302,Force usage of previousContext in Cpp
2471d7ec71ad47bd66c95a18dd9e0c958308281a,"Merge pull request #2232 from ChaseOxide/master

 Fixed warning from MingGW and error from Clang Windows"
07cb53b0ff874fe477e1ac237ce1b16840158001,Merge branch 'master' into make-exit-rule-non-virtual
40e883a0aaa7667fe61f0b1723a313546d16cddd,"Merge pull request #2162 from janlinde/make-exit-rule-non-virtual

C++ runtime: Make Parser::exitRule() non-virtual"
8047283de7e0af2e394a9be858227d81ecc14867,use latest ST4
a02c2fa5a6c7aab263cda632edf910ed9608840e,Merge branch 'master' of github.com:antlr/antlr4
95fecce8edfeedf4444e107eaa4f173054a436b9,Fix for memory leak in function `ParserATNSimulator::execATNWithFullContext`
444fe24bb025a848396c2bfd5c4354ebbf3aaaa1,Merge branch 'master' into master
42275a6de2af1a2c89fed12dc623a317d54a6cf9,"Merge pull request #2398 from mike-lischke/issue-2164

Fix for antlr#2164."
e230ae7d6901683386ad136a95ee827f9e40ea97,"Merge pull request #2203 from xgcssch/master

Support for CMake Packages in the Cpp Runtime"
7ef7770db13d50e55ce7cc07036a452e0cdf3027,Merge branch 'master' into master
2159d15da7e0f9934202f10ad0795b89ed5f43de,"Merge pull request #2248 from uvguy/master

Add support c++ target on android"
b06169c785a16f345cbc84b0fafbef373ba23a34,Merge branch 'master' into antlr_clang_patches
dc3b43376cab99f239d176245d280c9611315e2d,"Merge pull request #2244 from dannoc/antlr_clang_patches

Changes to cpp runtime to make antlr work with Chromium build"
a3e7099dacaa39d36d244940f1401947304e7192,Merge branch 'master' into patch-1
9321b6bb97b9d1a9d6644817da9ca3ba99af39b4,Update contributors.txt
875aa034d2c4265a1da4afd1bfca2aef0c6f6d82,"Add const accessors to antlrcpp::Any C++ class

To make it easier to work with the const antlrcpp::Any arguments to
the AbstractParseTreeVisitor class aggregateResult and
shouldVisitNextChild functions, add a public const overload for the
antlrcpp::Any::as member function to return a const StorageType&, and
add a public const overloaded conversion operator returning a const
instance of the type contained within the Any.

Add the private antlrcpp::Any::getDerived function to avoid
duplicating the dynamic_cast of the internal pointer, and call it from
the overloaded Any::as functions and also the Any::is function."
6899cc5c76fe0f33d4bf98ce11d3e0fae61bfd2e,update st4 dep
61d8aea398aecc85682fdb042b670e49c34e11be,Merge branch 'master' into master
7983e25ff68681359b9fafdb2f5a583057260942,"Merge pull request #2399 from vinoski/cpp-any-const-accessors

Add const accessors to antlrcpp::Any C++ class"
7fcadaa9f7b1fca5bb4857aa8b468072d95b711d,Use release version of st4
6f057dbc59af404187bc2d60da90013ad785f7b3,"Use STGroupFile filename constructor

- URL constructor unnecessary"
11d601348eda16248e204992cf4cfabb12dc80b4,"Merge pull request #2280 from solussd/master

File path handling fixes"
36621bda6d31ba79f022bdec64882ae9a1fd92c4,Fix ST4 Snapshot dependency
842d3d759706b7b4e779907218d6c32a0a003ab5,"[Swift] Report InputMismatchException with original context information

Port 0803c74 from the Java runtime to Swift.  This was issue #1922.
Enable the corresponding tests for Swift."
e6feaeb4896c84110e51ca38772aa85c05ee8da7,"Enable some performance tests on Swift.

These were skipped for the Javascript backends because they're still
too slow, but Swift is fine.  (Go is also excluded from these, maybe
that's a mistake, but I don't know.)"
c88fe835786b95db1bf32d72a6ce0659a69170dc,"[Swift] Remove repeated epsilon transitions in ATN.

Port the cset 125a509e from the Java runtime.  This adds checks to ATNState
to remove any repeated edges.  This was PR #1369 for the Java runtime."
562eab817cafc51cd857c9bf384fd0b74ea7aa11,"Do not throw std::bad_cast from antlrcpp::Any::is

The antlrcpp::Any::is function should not throw a std::bad_cast
exception if the contained type can't be cast to the requested type,
but should instead just return a boolean result. Add a boolean
parameter to the private getDerived helper function to allow callers
to specify whether or not they want the cast results checked. In the
is() function, pass false for this parameter; in the as() functions,
pass true."
66e5b3bfbb7ad0ed21c67087c69b0515480ef179,"Merge pull request #2402 from ewanmellor/swift-1922

[Swift] Report InputMismatchException with original context information"
d87a55576af817d158e5529e9b2b2b1f4c6da4fe,"Merge pull request #2403 from ewanmellor/swift-perf-tests

Enable some performance tests on Swift."
dc15fe91335d5dbad89f3c11d3ac1f2615a47d01,"Merge pull request #2404 from ewanmellor/swift-repeated-epsilon-transitions

[Swift] Remove repeated epsilon transitions in ATN."
f261c36bc4a3ba025e77c4afeeeb5676795e093d,"Merge pull request #2400 from nxtstep/fix/st4-dependency

Fix ST4 Snapshot dependency"
8e9b6f1147eac57ed70ec694e01eee7e3490f8a6,"Switch to using maven-jdk-tools-wrapper to find tools.jar.

This is in different locations on JDK 9 and up.  maven-jdk-tools-wrapper
does the right thing on all JDK releases.

This was mentioned in a side comment on PR #2280."
23bc4232596170863c40def26b1182bf722e7020,"Move Travis tests to Swift 4.2 and Xcode 10.1.

Move Travis Swift, .NET, and C++ macOS tests from Xcode 9 to Xcode 10.1.
Move Travis Linux Swift tests from Trusty to Xenial and to Swift 4.2.1.

Remove the dirname call when setting JAVA_HOME, it seems to be incorrect.
Print the JAVA_HOME that Travis ends up with.

Moving to Xcode 10.1 / Swift 4.2 exposes the issue discussed in #2372
so this cset will fail automated tests without the relevant fixes."
e327e4a13e333e4fab9b48eedb05c7cd73322589,"Change uses of functions deprecated in Swift 4.2.

This is three instances of flatMap changing to compactMap, and
one instance of UnsafeMutablePointer.deallocate(capacity:) changing
to UnsafeMutablePointer.deallocate()."
938883d516c33699dcee00bb7532309d1f1a3bf3,"[Swift] Fix MurmurHash calculations under Swift 4.2.

This was working before because calling hashValue on a boxed UInt32 gave
back the value itself.  This is apparently no longer true.

It's not something we should have been doing anyway.  We were needlessly
boxing the intermediate hash values, and passing them into a generic
method, just to unbox them again.

Fix this by creating a helper method, and calling that directly when
updating intermediate hash values."
75d4d867ef99979f47b48baa6e4b2f96cbc740f2,"[Swift] Suppress ""Optional"" in the output when printing a value.

Suppress ""Optional"" in the output when printing a value in the tests and
some debugging messages.

This is a change in behavior in Swift 4.2 (SE-0054) that implicitly
unwrapped optionals are now seen as plain Optional at runtime, and so
print doesn't implicitly unwrap them any more."
1184c67f72e1e7978159bcbb09da5f8bf0d78fa9,"[Swift] Swift-Runtime error after XCode 10 / iOS 12 update

Avoid adding to closureBusy before all ATNConfig properties are set.

This fixes #2372.

This is a port of c8805ab from the Java runtime.  That was PR #1955."
8cd798431d80fd5f2363a715e04b3c57cfcf4815,"[Swift] Change getStateToAltMap to use Int as the dictionary key, not ATNState.

The ATNState hashValue and == override are just using the stateNumber field, so
using the Int directly is equivalent, and saves bouncing through those methods.

This also seems to be a correctness issue with the new Hashable protocol changes in
Swift 4.2 (though I admit that I don't know why).

Remove PredictionMode.getStateToAltMap, which was just a stub onto
ATNConfigSet.getStateToAltMap and didn't seem to be doing anything useful."
19ac1450815bca2f8aa41c4cbbb849013f626013,"[Swift] Add version info to the documentation.

Add a documention note about which versions of Antlr require which versions
of Swift."
19ebc9da671ff265df1aab47b4bb5dee83e5a41b,"Merge pull request #2407 from ewanmellor/swift-4.2

Move the Swift runtime to Swift 4.2"
237ba0f9e1657b48b0da1897fa0ebd1e02118278,"Merge pull request #2406 from vinoski/cpp-any-fix-is

Do not throw std::bad_cast from antlrcpp::Any::is"
d275a8c97f812b5550c9cef243e6be0d7e0c24ca,"[Swift] Make ParserATNSimulator.precedenceTransition return a nullable value.

This was always clearly a possibility, looking at the body of the method.
The newly-enabled performance tests expose this bug (and I don't know how
we've gotten away with it otherwise for so long).

The Java runtime also returns null at this point."
0f6581e480ded8541b052042b6cc6ea4a863de20,"Fix mvn clean's deleting of the Swift .build directory.

Thanks, Maven."
c2d69af6db1cef2e77798dad6561ad0e19d359bd,"Write any dumpstream files into the Travis logs.

This means that we will see the errors if Surefire is bailing for any
reason."
3699ea5412792087cb7653aefb97dbcf69551ef6,"Exclude intermediate build products from the runtime-testsuite jar.

This means that if you build in an unclean source tree, you don't end up with
intermediate classes in the jar.  (This hasn't broken anything that I noticed,
but it bloats the jar and I wanted to make sure it wasn't messing anything up.)

This excludes .build (the Swift runtime's build directory), target (the Java
runtime's build directory) and Swift/*.xcodeproj (which is not in the source tree
but can be created by devs who are using Xcode)."
e54607d2ae2134234b7f88cceeff710269d05f77,"Change the test asserts so that we can see all the values.

Change the unit test asserts so that we can see all the values in the
event of a failure.  When debugging an error, it's useful to see both
the stdout and stderr for the failure.  Previously we would only see
one or the other (whichever one failed the assert).

This adds a helper function BaseRuntimeTest.assertCorrectOutput.

This also removes SpecialRuntimeTestAssert, which has not been used for
2 years."
4201dd9cf33c92dff0ccebbf48a5fe46eff3f9d1,"[Swift] Don't catch exceptions inside the test apps.

We get much more info if we let the exception rise to the top level."
768a0a66e6881165a64c76cc4f62c61fb2bde0af,"[Swift] Build and test error checking.

Change all the subprocess calls in boot.py to check whether they succeeded,
and set the script status appropriately.

In particular, when our unit tests fail, we need the script to exit
with a failure code so that we actually notice on Travis."
481f517fecccc0b7ce29133c7e0738f6fe5476be,"[.NET] Make the .NET Travis tests use netstandard1.3.

Add -f netstandard1.3 to the dotnet build command used on Travis.

This has been necessary since PR #2024, and the build has been silently failing
all this time."
443a1d245455acbbae54d381381aec148a7a4580,"Make all the Travis test scripts exit in the event of error.

Test scripts that ignore errors aren't very helpful."
9611faaf5bef86de694864349a63a159d9d43bcc,"Merge pull request #2408 from ewanmellor/swift-fix-perf-tests

[Swift] Make ParserATNSimulator.precedenceTransition return a nullable value."
f08de818050fd59389af4e9895a1bbec3f67eb27,"Merge pull request #2405 from ewanmellor/testability-and-build-improvements

Testability and build improvements"
2a3530f513346f497fae13d603d162d1bc829c32,"Fix install dependency for python3.4

Add install dependency for ""typing"" backport if using anything older than Python3.5"
657ab4b3b45640bdb77d70230ff33a1a767fb244,"[Swift] Remove OrderedATNConfig.

This is unused."
3deb4d91e6e8d33a5645e2d8c067162dcfbe0d40,"[Swift] Remove OrderedATNConfigSet.

This is a subclass that only exists to have a different constructor.  There
is no need for this construction in Swift, since we have named parameters,
so we can remove the entire subclass and make ATNConfigSet final instead."
8a34dcdcf92df0d2a150f57e39bb51978ddc8b2c,"[Swift] Move doc-comment.

This was attached to the incorrect method in the initial port from Java."
9ca1a9e1587602100995d79d7e8115b155ed0b32,"[Swift] Remove ATNState.INITIAL_NUM_TRANSITIONS.

This was brought over from the Java runtime in the initial port, but there
it was used as an array capacity hint.  We're not using it in Swift so
this is useless."
e01d0be92c81bf01c5cdd3b3966b92da704910f7,"[Swift] Remove implicitly unwrapped optional from ATN.grammarType.

This is set in the constructor and is never nil, so this wasn't doing
anything."
623fe00fb74886d63123b0637ed18d006723ed47,"[Swift] Change a whole bunch of ""final var"" to ""let"".

I think that there was some confusion when the original port from Java
was done, because ""final"" in Java is not the same as ""final"" in Swift."
176d92d37361eac3a10237b652706a28cdd63fb9,"[Swift] Tighten up the permissions on lots of fields

Tighten up the permissions on lots of fields, for debuggability."
8f424399439e4ed8b38669d739e0511b5d6ce398,"[Swift] Remove unused constructors.

Remove unused constructors from ATNConfig and DFAState, and merge two
by using a default parameter instead."
0f1614dd99e5c9910eb3f672906efdf370c99892,"[Swift] Tidy-ups around addDFAEdge.

Do some tidy-ups around addDFAEdge, improving the handling of nils so that
we're not forcing or nil-checking so much."
9d29f116cba7109269c26797b670faeac0278374,"[Swift] Syntax error in antlr4/runtime/Swift/boot.py

Make boot.py work under both Python 2 and 3.  This fixes #2369.

Add an extra exception handler, for neater error messages."
4e744043a35eeb77da8125308b416abcc8668263,Make sure mutexes are being freed accordingly
46a5f29fc89ac7ee2b9d7eeb51136378ff03f056,"Merge pull request #2410 from ewanmellor/swift-tidyups

Swift tidyups"
6080a0639c1d92902ea5c521b8b2cf3c4745f9b4,"Merge pull request #2411 from ewanmellor/swift-fix-2369

[Swift] Syntax error in antlr4/runtime/Swift/boot.py"
d714d7ba9cad550bd94d6e5284608c7a8856f78d,"Merge pull request #2409 from amykyta3/master

Fix install dependency for 'typing' library in python3.4"
f6537bf4ac8617a732a5f384bd1535ed0b85f303,fix #1955 for Chsarp
43e529ca73cecfcbcbd1e8a4a64b0b2763761c66,fix #1955 for Python
77c830e6e1954ac98ac7d37dd8a300ae61d1d913,fix #1955 for Javascript
0a6dbc37b736871f779c5eef9a32d6decd3838f5,Grammar.java: add getTokenName(String literal) method
d3745c7b9399e88fcd9561c21fa17b3b3816f94a,RuleFunction: process STRING_LITERAL along with RULE_REF and TOKEN_REF. Add getRuleTokens method
70e3e5de70bbcd46fe41e17ad161cc5362a62842,ElementFrequenciesVisitor: override stringRef(TerminalAST ref) for correct processing of arrays of string literals
2f7c5bfe4a314e606803fd2c1df36b2b27bed69c,Add AssignTokenNamesToStringLiteralsInGeneratedParserRuleContexts and AssignTokenNamesToStringLiteralArraysInGeneratedParserRuleContexts unit-tests
be4914190380bbae780772d59dd3285800b3858e,"Merge pull request #2417 from ericvergnaud/fix-#1955-python

Fix #1955 python"
eaa7e32001566eaacf54a516716a7dfd1109f8a4,"Merge pull request #2418 from ericvergnaud/fix-#1955-javascript

Fix #1955 javascript"
0308999f06288ef24c01ab03b0077f444ea1fb31,"Merge pull request #2413 from nxtstep/fix/mutex-free

[Swift-runtime] Make sure mutexes are being freed accordingly"
5fc056d1d1997c4f8f4ab98540b17aeea4f992d9,"Merge pull request #2358 from KvanTTT/AssignTokenNamesToStringLiteralsInParseRuleContexts

Assign token names to string literals in parse rule contexts"
1d6f03aecfe72f8ad1ef302e27d75b95ef3b0c9d,Updated antlr version for windows
180f1af9689e02666bccbe5886ec1661c2a531e4,"Merge pull request #2420 from prateekgulati/patch-1

Updated antlr version for windows"
aa503dfafb01e351d96fbe330b19e88ab2182f17,"Updating current directory in classpath

Otherwise it throws ""Can't load Hello as lexer or parser"" error"
62b1cf8a4fa3b6d62eb3d3a12f8d588119ec9ffb,"Merge pull request #2421 from prateekgulati/patch-2

Updating current directory in classpath"
5faa48a645bb3a6073c6369cfa42a182e51133ed,fix https link issue; fixes #2422
56186d9e9f59e00ef4eb8876fca01376b2725e3c,fix NPE
8268fdd957c469a69e07adacb8a29785dc16e377,"Merge pull request #2423 from ericvergnaud/fix-illegal-dict-key

fix NPE"
7fdec95d15a1ca44928a8f146fc7c49ed51bf527,added virtual dtor to polymorphic class template ParseTreeProperty
80230131ac2784e90554f80510ef5d4df1a0174f,added virtual dtor to polymorphic class template ParseTreeProperty and added myself as contributor
b3f00ca72aaafd1ee01a6440bd67bf9aded5bfc0,"Merge pull request #2426 from hannemann-tamas/master

virtual dtor for ParseTreeProperty"
38a95da3976344019d2cdf2d4c106966166a781d,manual edits of 4.7.1 -> 4.7.2
96890a3505edb26f0c43aaa5db0580d785363fcb,Merge branch 'master' into patch-1
d7e0f4b3fca45bb3bfe2e5afca81198e894e4bf4,"Merge pull request #2309 from scadgek/patch-1

Avoid StringIndexOutOfBoundException"
4ccf715bc42e8bdbea582a4aaf3126a6c39fac88,tweak script
9f6dfb18096a9bba28adc23f464578401477c437,Merge branch 'master' of github.com:antlr/antlr4
ab08f437466a3504ecfe549f9cee47f2125130d6,"Merge pull request #2443 from parrt/master

prep for 4.7.2"
573cb86705cca7a4cb94027dec4a388d6ffe7924,[maven-release-plugin] prepare release 4.7.2
5e5476a61a7caa79bd044d79d339bd02fc76cd34,Merge branch 'master' of github.com:antlr/antlr4
8fab6b98b3d364971436c46908b1b4b8b9d668a1,[maven-release-plugin] rollback the release of 4.7.2
be58ebffde8e29c154192c019608f0a5b8e6a064,[maven-release-plugin] prepare release 4.7.2
70d9ddcd0a589b722d925e1a2eb4ce8a4d2f174d,[maven-release-plugin] prepare for next development iteration
27c8eb5c6a673abf77310a7ceffd979d5d31d33a,"C++: fix bug in PredictionContext::mergeArrays

In the orignal PredictionContext::mergeArrays there was a bug on Line 281 where the logic differs from java: It currently is:
bool both$ = payload == EMPTY_RETURN_STATE && a_parent && b_parent;
and should instead match java as:
bool both$ = payload == EMPTY_RETURN_STATE && !a_parent && !b_parent;"
936db23a40944a55d74c5d28ed449ed0369a9f1d,"C++ runtime version of previousTokenOnChannel doesn't handle edge case correctly #2343

<!--
Before submitting an issue to ANTLR, please check off these boxes:

- [x] I am not submitting a question on how to use ANTLR; instead, go to [antlr4-discussion google group](https://groups.google.com/forum/#!forum/antlr-discussion) or ask at [stackoverflow](http://stackoverflow.com/questions/tagged/antlr4)
- [ x] I have done a search of the existing issues to make sure I'm not sending in a duplicate

Please include information about the expected behavior, actual behavior, and the smallest grammar or code that reproduces the behavior. If appropriate, please indicate the code generation targets such as Java, C#, ...  Pointers into offending code regions are also very welcome.
-->
As documented previousTokenOnChannel, should ""return -1 if there are no tokens on channel between i and 0.""  but the C++ version of the runtime returns 0 not -1 as can be seen below:

```
while (true) {
    Token *token = _tokens[i].get();
    if (token->getType() == Token::EOF || token->getChannel() == channel) {
      return i;
    }

    if (i == 0)
      break;
    i--;
  }
```

Looking at the Java implementation, it would seem the C++ code should instead be:
```
while (true) {
    Token *token = _tokens[i].get();
    if (token->getType() == Token::EOF || token->getChannel() == channel) {
      return i;
    }

    if (i == 0)
      return -1;
    i--;
  }
```
This bug causes getHiddenTokensToLeft() to miss hidden tokens that come before the first non-hidden token.  There would also be a potential bug in CommonTokenStream::LB as the ""< 0"" case would never happen."
2d284002344faf6ccf2f145eade4b793c6c193b3,"C++ avoid warning in visual studio build due to clang specific directive

The revently added clang directive cause a new warning for Visual Studio build. Need to include the new code with a directive checking for visual studio"
6195ec749b6f3884d6831051c762bf21bfe862d9,"Change bitset upperbound to another higher arbitrary value to allow for larger number of rules

We had a complex grammar file hit past this upperbound.  One solution is to put this up higher, another is to refactor into a container that can grow."
ce3b5a4cb4feb3cf0b276ddc2b4bcebab1c8e568,"Merge pull request #2176 from niccroad/atnsimulator_memleak

This resolves the recently opened issue 2175 (a memory leak)."
fa466c42a17236aadcfb0a41b2a90cb112df4e1d,"Merge pull request #2445 from WalterCouto/master

C++: fix bug in PredictionContext::mergeArrays"
fa19ded83749a4834322fce9f0a742cf7584c40e,"Merge pull request #2446 from WalterCouto/test

C++ avoid warning in visual studio build due to clang specific directive"
6808f9c4b435abdebb48f3254db699109910aa0c,"Merge pull request #2447 from WalterCouto/test2

Change bitset upperbound to another higher arbitrary value to allow f…"
f73ae702f27aa99400f3e74f52082c560666e63a,"LexerATNSimulator: avoid repeatable import of Lexer

Importing module is quite expensive operation for using it
in a lexer during normal operations.

The patch avoids it by caching the required properties
in LexerATNSimulator object.

Signed-off-by: Alexey Khoroshilov <khoroshilov@ispras.ru>"
108854f98610a1e1e3f632a6bbbbb69687e15f86,remove misleading API
cccf6e87da1bb2efb065d69bb299cb85ed1289bb,"Fix API inconsistency, where getText would expect a tuple named interval, leading to lots of confusion"
3ad118f87e99a07a3c02dc9a19d26085b186c4f3,fix invalid test sequence
90854967ca13bdf6374ab87a1a926d4397a8aa01,fix broken API calls
81f7aee6ea6ea1762662bda1c7e25700542b2d09,fix failing tests
e06b7a8b5d769b5c11e0edd3dd170f1161de009a,restore full build
9f422d87b857835a01f56f60f80a131bd8cf2c63,"Merge pull request #2458 from ericvergnaud/fix-python-getText-api

Fix python get text api"
157afd1a8d574a4dd87349464276afc707a0a906,update code on updated master
e924e262053b8dad18f43eadbd5775e327776569,"Merge pull request #2452 from youkaichao/bugfix/python

bugfix for python-runtime/TokenStreamRewriter.getText"
ec665c1b905ee2a1287a0f3e069f4fe46ed53a16,A small fix in the C++ documentation.
18e2a605c10dce11a49d95eeba403f24de798a66,update python runtime doc
07735085bd95e227e07fe8dfc23824b3540253f2,"Merge pull request #2461 from youkaichao/python/doc

update python runtime doc"
3cd2878b28cae0a04b3fa251d1af3c7155bbbd33,Fix code generation for catch statements in python
ecacfa09dea3b298f7a018c221ee37fb29fd1c07,Merge branch 'master' into catch-codegen-error-python
45a4cdc67bf15247bd9d0db189bb66b7bebac43f,update test script
4fec5f9f7cd60b11a28892ab9ec82c7cb314024f,"fix cpp cmake for emscripten

Emscripten can do C++11. added it to the compilercheck in CMakeLists"
de316ff5ce3fa7c05ad706335ae274e382c92709,tweak doc
de58c28a243b22244dd290ed67689d4ca0acd402,Fix off by one error in getChild
510e3f7ed91b6d1a650de511469a5cb071f5731c,Update contributors.txt
1c6c62afc7cbef464ba71d332c8c1ae50d54e8d5,"Merge pull request #2486 from ralucado/master

Fix Index Error in Python3 GetChild"
dade65a895c25c47d865d426603eaacce6e11e0b,"Merge pull request #2463 from youkaichao/python/test

update test script"
d69e7c4d0fed284c720e09f326a8332837cb1729,"Avoid double deletion when NoViableAltException is thrown

When ownership of the configurations set is passed to a NoViableAltException,
it get deleted more than once if the exception happens to get copied."
6160aa6101fead4b23f71c9f92d5c4b3174b9ddf,Added visitor example.
6ee94ed5b939d61d6c9b094a81b436fbe0bf085d,Adding base698 to contributors.txt
28fc84874d7fea95c6dbeeae6802f93fbddecfd9,"Merge pull request #2510 from base698/master

Added visitor example."
572bc7eb6fe27af67646a83af673b8e02dcb21f0,do not use python built-in as variable name
ad2ea7a68cadc87fbd3dad2b9ea9e983b2f1b914,Update contributors.txt
c7ee16fc72caaa60a2342f407c09a5eb0fc0cde9,"Merge pull request #2514 from carlodri/patch-1

DOCS: do not use python built-in as variable name"
3c21a640cc630b1d506d2448a51a7116c96bdbcb,"Fix imports in the Python2 sources.

Contrary to Python3, the lexers and parser generated for Python2 target
support only relative imports which causes a failure in case of
standalone scripts. The patch adapts these imports to work in both
cases."
f7022ebb02e1ce45b375ad8b7a12b89064e7eba1,"Merge pull request #2517 from renatahodovan/py27_import

Fix imports in the Python2 sources."
acbd58267841f6e4cc0272e687d97736b9bdc8aa,"Clean up namespace of generated Python3 listeners

Added `del <file.parserName>` to the end of the `ListenerFile`
template the same way it is used in `VisitorFile`."
837aa60e2c4736e242432c2ac93ed2de3b9eff3b,"Merge pull request #2520 from akosthekiss/py3stg-listenerfile-del

Clean up namespace of generated Python3 listeners"
4cf4883514bcea58053baa10386a70ed39fd5068,Fixed -Wreorder warning
d0f0ef12fd99e430ccb75f7685ca6882ff89f57d,Signed contributors.txt
31f4dcc7cfe44e81ef00c6ee0aafb1581f30cadc,"don't unnecessary fetch all tokens when grabbing an interval of text (match C# logic)

When an exception is thrown, it calls getText to get the text of the tokens invloved but the current C++ and Java implemention first fetches the rest of the tokens instead of  just using the tokens it already has.  C#'s version is correct (fill() is called only when asking for the entire stream's text)."
8217e543eb4b119512b6842d83a05b6f8f3c7748,"Update tree-matching.md

Deleted redundant and misplaced sample code."
be993de7d951f2274bf91be121b50da6ddf29097,syntax highlighting for csharp language target doc
7c334b114c20b5d0718fb5db7334c3ca0c462fe0,"Merge pull request #2542 from askingalot/csharp-target-syntax-highlighting

syntax highlighting for csharp language target doc"
8d48f1a8519998ac0879823712592ae5806446d1,Fix overlaping condition
d9c51b1525d5f72c965919f2da59f54c0bee6c78,Typo fix in XPath #2464
3740b2899529da7fc25ef81c919e4d6ee6a71726,"Added a missing quote.

Added a closing quote."
f6f265408ae69d8b482750cd382a968dd9d75243,"Adding myself

Added my info as per pull request #2552 (I did just because it was requested, feel free to remove my info if you think is more appropriate due to the minimal patch I'm submitting)."
f3184e9c8d262b22c1cf831291698edb233cd0c4,Align overlap condition on java implementation
17d626bc73461a6eab8b101021f66b59a9aa40be,Align overlap condition on java implementation
0b0e521a8d806a585fa537fda296806b92783ed5,Align overlap condition on java implementation
9a6b4e8fe8407e3ab5102e7eceae3e65bee8e020,Align overlap condition on java implementation
6fbc156f6c59c0cb1c6ce598dd96da4b7a7fd12a,Align overlap condition on java implementation
e7660d6cfaf0991b8744d561a1f5b86f6546ed7d,Align overlap condition on java implementation
264db10290fb8fd0706be37bd5284b1870944994,"Revert ""Typo fix in XPath #2464""

This reverts commit d9c51b1525d5f72c965919f2da59f54c0bee6c78."
c57996e5892b488c8dce782a9f0064b6826f4864,Fix formating
409b207bf1df4021139c5ec2b33a81aa3fc0a1d2,Fix formating
3534089ddfbc93dee45584519a82cf834e25b76c,Fix formating
edae2a1c9b4b31b24def8cdf10621bd6e6f94c13,"Merge pull request #2548 from Thomasb81/fix2547

Fix overlaping condition"
aa51ef297af2bcd4bdf2c21a999920cc432e5ac7,Merge branch 'master' into master
a770ff26ccc4be89aeccf6d52d60081a70cca7b1,"Merge pull request #2382 from edirgarcia/master

Properly build decisionToDFA"
d47538d0383ad9968e21059e0afcdad50751dad0,Update contributors.txt
a92600936c8dfa30fa14679f3124a7d2e6304061,"Update getting-started.md

To resolve some confusion on readme"
f3157d94d1dfc219962bd598bb5cb80f482bb594,Made converters thread_local instead of local to function for performance
06cee866d2cfb506ba0b160f2f78092168a59eba,Made converters thread_local instead of local to function for performance
399e1e7d335c0b50802a5478341d095a40189024,Merge branch 'master' of https://github.com/olowo726/antlr4
bda96a0081c06126b55b1569cc1586ffd3cb3ce8,"Merge pull request #2596 from olowo726/master

getText performance improvement by making UTF32Converter thread_local instead of local."
91f8862a36a3230ef3acf837e9be50c171c065b2,cleanup
eac9b0b0efce5cf4828a144d12de008a7cbd5c38,drop EOL's oraclejdk8 in favor of openjdk8
9b32885e21957ab65926a60789d6999acd86c79f,"only use openjdk7 for java extended test, use openjdk8 for all others"
72a33f87881e92ccf2b7b65c14d61d1672be7050,fix class format issue with jetty 10
11a70d56cfd4728f5d7767a2dc8105d1f6af046d,restore dotnet as part of main test
264495b40422d44d50e09cb3cc3d56a88a7e4a99,"Revert ""restore dotnet as part of main test""

This reverts commit 11a70d56cfd4728f5d7767a2dc8105d1f6af046d."
6aa90a2c1d9fa49ba884327136995b3cda6f3009,"Fixes the mono build, thanks @ewanmellor"
69cc73d345a88b120dea7501fd05450cd3c96dce,use trusty for cpp
9830f156d778f0eb04f4d38ea5469d28fd16caa0,replace hidden tab in travis yml
21069fb2c6c6658f1d90f369c3ef0c54452a9569,try using trusty for jdk7
71a69227764fbd4719ac1831a7b9471660219238,"jdk7 builds on trusty, move it back to extended tests"
b627fffdd1e8ef49f2e29c977e828614e8894739,"Merge pull request #2598 from ericvergnaud/use-openjdk

Use openjdk instead of oraclejdk"
115274e77124e88a011fe68ebe91a91dad94f088,"Remove unnecessary Travis files.

Remove .travis/before-install-linux-{cpp,java,python2,python3}.sh, and
remove some lines from before-install-linux-{javascript,go}.sh.

These contained apt commands for configuring the Mono project's GPG key,
which is not used in any of these builds, and pointless apt-get update
calls."
d2b087f90a666c217b2b23a7a2c72c7de856e3c5,"Add unit tests for org.antlr.v4.misc.Utils

These tests were written using Diffblue Cover."
851f02b5da62c058fa4edb74633088aa721987df,Update contributors.txt
4e2afda7407acd203332c9a340f0b1dec988214a,"Merge pull request #2601 from abhijithneilabraham/patch-3

Update contributors.txt"
128983ff903e3acd16cf9882312b010134a5a39b,"Merge pull request #2593 from abhijithneilabraham/patch-2

Update getting-started.md"
66d8bed980d3a3b8173ef75fe944ff3cb60f4cf0,"Add unit tests for org.antlr.v4.misc.CharSupport

These tests were written using Diffblue Cover."
c3c52bb2b5752147ea4bfb830fa6daa7535693cd,"Test cases

https://github.com/antlr/antlr4/pull/2571"
c7ec183453c978e209a4381c5056b088b82e0d69,"Merge pull request #2608 from Braavos96/patch-1

Test cases"
07ab6bcba9d38388f72416c14d66f8106ec03989,"Merge pull request #2571 from Diffblue-benchmarks/add-diffblue-tests

Add unit tests for org.antlr.v4.misc.CharSupport"
e4737db19f4fe630b4638c923780fa87f828db77,"Merge pull request #2582 from Diffblue-benchmarks/add-diffblue-tests2

Add unit tests for org.antlr.v4.misc.Utils"
d667b90bc9d30dee7940014c52740b4c5d73d0b9,"Fixed TextIO compatibility with 3.6+

Fixing this issue: https://github.com/antlr/antlr4/issues/2611 (and probably https://github.com/antlr/antlr4/issues/2193)
TextIO has moved since Python 3.6 so it should be imported considering the change for new versions."
925408d08b928071b1fec133e3dce026cd9bbf14,(minor) word slip
ca5b581c1f218ce3dbd63041734b59be0c4c22de,Update contributors.txt
e2ee6e86dfc385247b6efcaaff87dc6e8485af98,[Golang] enable syntax highlighting
0fa34a9621989985ef1002468f15843e75f60e1f,sign contributors.txt
8651498f418197213905e401e3b91aff058400c6,Merge branch 'master-upstream'
d93857c8febaf9687be4b150817d0b8b276eb6e2,Applied recommended settings after XCode upgrade.
2ce2ef89d3aae0daf56052036984bcf46d951f86,"Merge pull request #2460 from mike-lischke/master

Some non-code changes in C++ runtime"
b50635625e8fcf7b8f4fde703f1bdfddd19f1cc0,add cmd line option
c4d319d11aeb37c95dcb1912ef40c12638329ee0,temporarily disable other builds
7fa06602b9434017f771d29e5dfe9c2e6a4e6d6e,@parrt fixed
b43a4c3a8015cc39888b438c7068bf11138d0738,"Merge pull request #2627 from ericvergnaud/fix-#2625

Fix #2625"
91a50749f99d7a5844f3ff3f25c79ebd65439bca,Added cmake build informations as reported in antlr4/#2606
6b170d647e334ef90bd62f8832c4dd4a1c1545af,Merge branch 'master-upstream'
32470dbab48dbe70e035e61cebee54f4df611b33,align on other runtimes
badee1ffe11673f72d091b55275a324e9920c80c,fix minor issue in deserializer
165dfa2b705d173ed833acaf5413295990c0d721,use same hash code whether readOnly or not
3e258c5d9d3ed66bd52303ec5f18933f1b76769a,avoid hashCode == 0
56eb0a3fab8f40741d25ca426d10e4899318292b,"fix 2 erroneous calls, thanks @akaJes"
0de9612e5dc78874b5a6aa8183714a48d52fa70b,adding original contributor
5a711ac79ce635b890cec3bb557166ec157ad7d3,Fix escaping of angle brackets
97e61c07cad52efff8feecc74e2fb2f5733f633a,Update contributors file
f0ef1f4433c0a0a74c309687bb3cfcc7da7db440,"Remove unused macros from test templates.

Remove unused DeclareLocal and PlusMember macros from *.test.stg.
DeclareLocal was last used in 5c5228 (June 2015) and PlusMember was
last used in 7f16fe6 (Nov 2016)."
ff1283affb4df5d5192aa53aee395643b874a57a,General XPath fixes for the Python3 runtime
4c2f091e8c9f8e1d40686d7e84453027cc55fff1,Style touch-ups on Python3 XPath implementation
ae2a689a68408b2f76e7c1c7c3f51731fc293ffa,Fixed missing XPathLexer.STRING case
f15a9f76287ea3083488672b17535ea63470f2ea,Prevent XPath from returning the same node multiple times in Python3
8da2ce3044cf9411b83e04812d0bd76da0b2680c,Added XPath test on Python3 target
b0eb1825fb943ffee8d92af6ef09d1b858ad1b00,Spaces/Tabs mishap
ae282133430c326e4523f075f19a61c549e8d9a0,Python3 XPath: Use Token.INVALID_TYPE instead of -1 on getXPathElement
05f8aaca98ab17d31ac340a5122a9bb08d42daa0,"Merge pull request #2638 from JohnnyonFlame/master

General XPath fixes for the Python3 runtime"
3c1231738e7dd00330fd79f8ef1159e1e116f8d0,Update contributors.txt
e38762e892c2a93b03ffb573887e1b48f7d0c8a4,Merge branch 'master' into patch-1
cd81586d3d6a05161b8750cf9c45d032efee8a16,"Merge pull request #2613 from ImanHosseini/patch-1

Fixed TextIO compatibility with 3.6+"
e2b1ae7c79b4c04f1f9edd2a36523faf34e56515,"Fix data race in LexerATNSimulator

There is a potential memory consistency problem."
f11ce46ddf244bc61be90775ade6fa3ca2e7833e,Update contributors.txt
db0a57c6ee4629b02c32abfb12fc2d325eaa5d57,"Increment match_calls atomically

This ensures the correctness of the counter value, i.e. the value is the number of calls to the match() method."
f88f763983e4b48c48646bd233f80d17f56d949d,"Remove the match_calls counter

This fixes the potential data race caused by unsynchronized concurrent access."
789d746636dd9fd84862f4950922feaeb3f9f4b8,PHP Target
06705edafd6b77d455f403c6297e25f9e718406b,"Merge pull request #2645 from marcospassos/php-target

PHP Target"
e8d7e0943dfd424c118fb0dd1ea6de972f7a850e,"maven-compiler-plugin 3.8.1

(latest version)"
144f9eaff88cf1a04c4c152460c5649cfd1a48ad,"maven-plugin-plugin 3.6.0

(latest version)"
bc7690f4497dcc0818d924672ba0959f0aee83e3,add [sullis] to contributors.txt
bc5586d7087ec08348d4fe2e933c1b7e3d9009a8,case-insensitive-lexing: update doc: fix link to implementations
91f4b89ee666d6499a9974e2c92b8bf3ea9ec2a9,case-insensitive-lexing: FIX javascript implementation does not work
013dca5d7d83f3e6c42f0ec5aa274f2cd1fe4a0a,case-insensitive-lexing: Golang: make direct-importing possible
c097636a9b6f7f5519480b84a687f9d125e4266b,case-insensitive-lexing: add implementation for Python2/Python3
b8ca3d0b1487d83d623ec5549c336bad51ab5d9d,Update contributors.txt
24870012f5ce2ac031eced5a260fa9e2b1c7308e,"Remove redundant assignment, optimize autoloading and tweak code style"
8bcbea425b110f2fd6524aabd4ef7d823bb5c5c9,"Merge pull request #2615 from kaz/case-insensitive-lexing

Improve case insensitive lexing code"
818c6be691061f88c987dc81347f914bf9de715c,Merge branch 'master' into fix-javascript-hashing-bug
7982187134a6776d13cf8b1f9725f137d08adaec,"Merge pull request #2633 from ericvergnaud/fix-javascript-hashing-bug

Fix javascript hashing bug"
5d4c1e2b3b65a01ae1e215445e716bf4f7e4b95a,fix cache issue
294d460aae823fc653b8eb83fefd28d106004a0f,add to contributor list
033bb7f8c5ced83133a368b9903aa99fb2e9050b,fix toString()
16ce0848fec706dca4db6eb4613020d2fd075975,"Revert ""fix cache issue""

This reverts commit 5d4c1e2b3b65a01ae1e215445e716bf4f7e4b95a."
1736cdd3a18d631639113d9d2765343475c49294,Merge branch 'miliu/fixbyhashcode' into miliu/fixjscache
4a8eca579e835a0c4cd80bdc61a567e3fa9d5423,resolve comments
35fcde7d6929e2209797d4d55259ef296543c12b,add missed change
d82697db1ed30ec3882bdbf4cf1aa3c73fb7e411,"Merge pull request #2657 from lmy269/miliu/fixjscache

Fix javascript parser cache performance issue"
ae06984751e38c7df24f5c066b68069544a4e001,"Merge pull request #2652 from marcospassos/master

Remove redundant assignment, optimize autoloading and tweak code style"
25fa9b0de8347be724ef5f7b6da1ec65e17fdc1a,Fix codestyle and bugs in PHP.stg
c81b4e69b6c37ed675a58d3cf634611ad6736f78,"Merge pull request #2665 from amorimjuliana/master

Fix codestyle and bugs in PHP.stg"
15e6619ddc3dd586132056aa6ae6cf5e3ce7a185,Merge branch 'master' into patch-1
dda171b1183b5a6126f375f3fb1a33f32100201d,"Merge pull request #2644 from neko1235/patch-1

Fix data race in LexerATNSimulator"
e208be701ddcebe4f3924d9d7ef3e4fa5f79fe7a,Merge branch 'master-upstream'
9723e4b9c92731598d32a87f64070d77d0e25b23,"C++ code cleanup

Converted back all TO_DO items to TODO (they were renamed ANTLR4 TODO items, but I had some for C++ which I all wanted to fix).
Also removed some default copy assignment operators which clang warned about."
4d649fbf71b9bbf064a33678e2c3a04f90f2be8b,"Another attempt at solving this issue

There was already a patch to fix this issue, but it had some problems and was closed by the author after a while."
76c0a65d19ab5c594879efbca4fdddcf4cad2c0a,Merge branch 'master' into master
ad2bd05285ca4ec6bdeb10b5d0d09d6eb42513ec,"Merge pull request #2631 from mike-lischke/master

C++ code cleanup"
3b7872e8104009e5418a75a6dfbfd9db7108c215,Merge branch 'master-upstream'
64cd1c15f1e87eb0d859b647549fa07ab587c603,Merge branch 'master' into issue-2037
c37ef7e0ea1277d1f900a8bda9784bf45a1f2207,Fix main entry point for JavaScript runtime npm package
1304e1b8d4dd7094fee50d05cbde29fb955af583,"Fix placement of members in JS target.

The location of <namedActions.members> was moved be in the lexer 
constructor, like it is for the parser constructor."
87a99e558aca4cc884c08fda8f44d05d7da10980,Signed contributers.txt
3ae5d90296aa099373544a71995551fb73826db0,"Fixed an error regarding wrong unique_ptr usage

Also added VS 2019 project files."
0424981f4e797cab3b86526c66e399eef138cd51,"Merge pull request #2667 from mike-lischke/issue-2037

Another attempt at solving this issue"
4f86ad5c17b39b578573eac9eb4ec63f8c229550,Merge branch 'master' into master
3fcb6da1f6909f1e12279fcc3bc4ac34647ccf28,"Merge pull request #2529 from a-square/master

Fixed -Wreorder warning"
2758f0ba020e9b88c1ccf599e52c955fec51bc22,Missing lexer/parermodifier clarification in example
9d29a1aa1e42d36b1b4747c49da2793624c2ff7a,Signed contributors.txt
fa4b498fc27f467b4310a612a63eee757d78dfcc,Add pretty print AST
cf0658a6ab377307ee2a304c6c0352c83fb4c64c,update date
f7ffbdeea9b4570cb670051e3cdb8fa586411231,"Merge pull request #2505 from foxever/ast-pretty-print

Feature: Add pretty print AST to CPP runtime"
a06009d72e524bb4c6f888cb9a5d033dfd309b42,Merge branch 'master' into patch-1
437c5a7b9afd1ca9ad4f85c899390d566da7c127,Merge branch 'master' into master
54daca92f7b041d7ec86cc569e2f319560b2e07d,"Merge pull request #2501 from gedimitr/master

Avoid double deletion when NoViableAltException is thrown"
9029af3ef4fe61e74cc6d280050293453045bc16,Fix for CMake 3.14
275184175343ffc49d65d8be4ace49c2803102f3,"Sign contributors.txty

Signed-off-by: Felix Nieuwenhuizen <felix@tdlrali.com>"
97c5057f6128734348040dfab5f50d17ad62f703,"[Swift] Check process exit status during tests.

Check the exit status of the processes run during the runtime-testsuite
for Swift.  This means that we'll catch low-level issues earlier.

This changeset also changes the exception handling so that exceptions
throw as far up as possible so that we don't proceed with a test when
something has already broken."
509eeefa4afa8c04e6f29bf18f95ab5aed022a6f,"[Swift] Migrate Swift runtime to Swift 5.

This switches from using the deprecated hashValue to hash(into:).
It also switches from using index to firstIndex (matching the change in
the standard library).

In the test template, we switch to using String directly instead of
String.characters.

This also switches all the Travis macOS tests to use the Xcode 10.2 / Mojave
image and changes the Linux Swift tests to download Swift 5.0.1."
10d182cf6634504560e0c019aa53f5de4061fad4,"[Swift] Change the generation of the copyFrom method to work around SR-10260.

This bug in Swift 5's compiler causes a SIL verification error when calling
super.foo without overriding foo in the subclass.  In our case, we are
generating a copyFrom implementation in the subclass, and calling
super.copyFrom.  Crucially, the subclass implementation uses the context
subtype for the argument, which means that it doesn't actually override the
superclass's implementation.  This then tickles the SIL verification bug.

Work around this by changing our autogenerated copyFrom definition to use
ParserRuleContext as the argument type.  This means that it actually
overrides the implementation in ParserRuleContext, and so the super.copyFrom
call is generated correctly."
a701f2b099cd126206bb72e48ea6f4143f0ef469,"[Swift] Replace all uses of NSStringFromClass.

Bridging from NSString to String in Swift 5 is a transcoding operation, so
it is expensive.  Use String(describing:) instead of NSStringFromClass
to avoid this cost."
3bd5465881f52681909b193978f753fad94c77b1,[Swift] fixed compiler warnings about using var instead of let
1ae00bed84878652214c0e84c07191e2974bd6e4,"Merge pull request #2599 from ewanmellor/remove-unnecessary-travis-files

Remove unnecessary Travis files."
b248d486f77f316de827aea7c180c5d72ccae12c,"Merge pull request #2604 from ewanmellor/swift-test-robustness

[Swift] Check process exit status during tests."
4bf2733ad67250ee8c1735d3cc7f85f842482840,"Merge pull request #2637 from ewanmellor/tidy-test-templates

Remove unused macros from test templates."
a75c3e93188dd60c37663a2b437dba463f19c344,"Merge pull request #2686 from ewanmellor/swift-5

[Swift] Migrate Swift runtime to Swift 5."
5be29fd61d58ec74e79dd64c9fa975d16c75a390,Merge branch 'master' into master
242d900ba6310526c4cae4d2b9a174d2f76c6092,"Merge pull request #2685 from felixn/master

Fix ExternalAntlr4Cpp.cmake to work with CMake 3.14"
f650a0be67e9957041a80cc19f65b315226fbb6b,Separate bug fix to Java runtimes
8be60804abf67d73d6c2ccd27883097ac083ac5b,"Merge pull request #2532 from WalterCouto/test2

don't unnecessary fetch all tokens when grabbing an interval of text …"
1565143529c51808b126d7379733343f9a7732b8,Merge branch 'master' into fix/CppEmscripten
8ae756a0257495b8be75c2eb30fc0ed1f48f28d6,"Merge pull request #2472 from Roomle/fix/CppEmscripten

fix cpp cmake for emscripten"
340b95bdeded519bb911f117292cf529657173af,Merge branch 'master' into master
b8e65bfca9f5c141824d00492c46b27473c3bcf8,"Merge pull request #2679 from tehbone/master

Fix placement of @members in Javascript target lexers"
4da24a261fa63343a00b6f45dee065ecb6912336,"Merge pull request #2673 from zqlu/fix-javascript-pkg-main

Fix main entry point for JavaScript runtime npm package"
ce59e171cb5c8d57471dae8ca893fff0d974011c,"[PHP] Fix AppVeyor tests

Install PHP to C:\tools\php.  This fixes the AppVeyor tests, because
they were looking in C:\tools\php73, but the Chocolatey package has
recently moved to 7.4."
cc0882c8cb389943c387a0bd648f78f995200ec5,Add the submodule update step to the release docs
1c7ccb933c8226d100e91e3074f0f0696617fbf1,"Merge pull request #2705 from marcospassos/patch-1

Add the submodule update step to the release docs"
ff67971f8580b142c56be70c0d6113b51d58f930,"Merge pull request #2704 from ewanmellor/appveyor-php-74

[PHP] Fix AppVeyor tests"
334e8801c3391b62dab95605581e4f28b62ed65c,Merge branch 'master' into easonlin404-patch-1
8c9803481dc75d568d8bc5688a346d58d4f76624,Merge branch 'master-upstream'
c487b1a58012247ff5490fc1d4689d5de361cdf3,Create pre-built binaries for VS 2017/19 instead of older VS versions
d295462e2e8558e1945742b925f1bdee47887039,Doc update for C++ target and fixes for VS 2019 builds
e47fd9d918d897c0b1096f9947bee80f9c6bc225,Brought back a lost comment and fixed a description.
691acdc23f1f093b011ad788282fc722106d3de5,"Merge pull request #2711 from mike-lischke/master

C++ VS project updates for next ANTLR4 release"
441fea52b1f66eed7d4c99df80e58ebb12507c60,update to 4.3 version
74c92f2e64b082107e8371fcf708c96897afd030,update doc to 4.3
6ad9646382d3d6fc022f58ca7acb18f1bfb328e7,update version in code to 4.8
d569f917954406e599d780c009224aa14f1920de,[maven-release-plugin] prepare release 4.8
666131841c83c250abd5d4d95763de2cee583f2c,[maven-release-plugin] prepare for next development iteration
42512526f97181f00c96debbf6934cb22a4ee10c,update javascript target to 4.3
68fd66dd4973891bb125aab39078091fe4f0b02a,add doc for releasing
6c4b491d1bc2a69cb1210717f5290c57dfb2a717,set version to 4.8-1 to fix release
a872114f6165fb2c731f22cbb97fd4bc3bf8b87b,trying to get 4.8-1 to fix release
f9cb658daab2c90a2b53a2e6a79e46cb9db8d364,Update PHP Runtime to latest version
54cb3f20183e8ddf8d0a006fe4963a62c5b99a76,trying to get 4.8-1 to fix release (all say 4.8-1-SNAPSHOT now)
fa499e421528300fac54c795078dacae5ef5fe69,update travis to python 3.7
3f41f283d123731380ad549d0e3e89317d6bc3ae,[maven-release-plugin] prepare release antlr4-master-4.8-1
f1ffc017232455eb14f90b9d8cf13d2723fb9407,[maven-release-plugin] prepare for next development iteration
26ab547f1c9f803e32e608ed27fb94e8f89ddac7,bump dev version
fc2e6636d6821aff13bc6617b501b05790a8159a,tweak doc
46bd9e55690e5607d5cbe94df988d97c384ed4f3,add dart target
29961e2bff3a53d67d059adf87047671a5640467,fix travis.yml format
c43965ff034d1535926acf7d00cc2bf1634c24b8,fix travis.yml format
7cb0d427d432859348ddcb53ea5682f937d13781,dart test performance with aot compilation
1614c683e3eb69464ec0de2169f0142af0ff47c1,revert target documentation
2a15af7579b907109583a8291c570d2433a9b623,fix appveyor
7a3f40bc341ddfb463d6e0aa1a6265064d020cb6,update doc for releasing
37d4336035118790a944288a3c372d9e8d0f69c8,fix appveyor
6fb586b62c58ad9fdb8fa8a79efdba6aec261879,fix windows test
e4f312c869138a9b3e6d1cb4393adaf36bbd4af5,aot compile large lexer test
5b785e8c997e161edff47d8d56e6805818556b7c,"fixing a typo, was role instead of rule

fixing a typo, was role instead of rule"
38200b6e31b0e4afe9e2d23e3a78942f0582a0ac,"Fix #2727: improve setTokenFactory in Cpp target

Change the setTokenFactory template functions and the getTokenFactory
functions to use a plain pointer rather than a Ref. This makes the
caller of setTokenFactory responsible for managing the lifetime and
memory of the token factory instance they pass in. Change
CommonTokenFactory::DEFAULT to be a unique_ptr, and correct all places
using it as a Ref."
2d7f727a00b70554df172c9048b91712f5dceeb0,"Merge pull request #2733 from vinoski/cpp-set-token-factory

Fix #2727: improve setTokenFactory in Cpp target"
fdff788689f64b4b7ccf21a00f20760231be02e8,ignore large lexer test for dart
19458051c067a4a0cca1ca32082faf7136c2af98,"refactored error directoryto use classes, const and let"
a7017d1a4995677ac70f6993be6cfc8865ac558a,missing const
aeebc0bb0b5bb1cdea444c7dcc1b09324dfda7e2,"fix: use module.exports instead of exports to follow node best practices
cosmetic changes"
18f5f3cd27661e5f549abf7eae5d120fcceb2ce5,fix: bump nodejs test version to support classes
7fc2180166caec08eb508a85fcc2fd4f85d8a959,contributors.txt signed [skip ci]
c2180d2d5c48cbafeade2597d3a76dd542c0a395,"adapted antlr4 js to use webpack for browser publishing
lib/require.js custom require removed in favour of webpack bundle
documentation updated
package-lock.json added"
d8435e13c3508e80d85a43a64e960ea429dc285f,"removed conditional nodejs import in favour of webpack bundle
use const/let instead of var
use object destructuring
fix: missing new statement for DOM file reader"
07aaf5fc63b903f0ff9618b8c0039ee4947ea8aa,more documentation updated [skip ci]
4b4aa68be3310d38c4fb866e2bb800c727be22eb,fix: npm build is not a valid command
1177c0b58d07b01bc3eaddaf2cad3780c821e2e1,"Merge pull request #2742 from carocad/error-classes

Javascript: migrate prototypical error object to es6 classes"
b37d2e381569f516d0ffcfe73aa3b241eba6cd65,Fix CMake packaging.
4a4fc3015391d52e94ea79316c4e310f5dced87f,Update contributor.txt
a8e8402b773d6315930e7517af39b83ccd01ac8a,refactor DFA function prototype into es6 classes
e5910c3019cace6867d6a41caeb4a3a53e16bb22,use object destructuring
772286cf000e0213f552e80be37c2b7fc6199416,refactor DFASerializer and LexerDFASerializer to ES6 classes
82d51aee9955d8692009843d4b7673f5ee0f8327,"use const/let
use module exports instead of exports"
116dbca78a80a64aa02042315e954aa1421b9073,refactor PredPrediction and DFAState to es6 classes
8c1730f687b4986657a9b331a2c34823e6adf4d8,use const/let and module.exports
68730a8288b215ef5218c62c9454803ad7e708bd,refactored DFA docs to JsDoc compatible
2a294b8a601e024d1b71c8a4c458161ed386841b,fix DFA serializer doc position
2d8e1b60d1ed6477f463a2c65fdf5eaad2af68f3,refactored PredPrediction and DFAState to JsDoc
d6975d60b1de065470a4aabf672a829c8f9cae5d,fix: second export was overwriting the first one
6dd86eb960d4e3b39b08f975da372c0e2ae27687,fix: cannot reasign a const var
530c5facc792ff95f1a6fc0c4cb91d90902bb598,"Merge pull request #2746 from carocad/dfa-classes

Javascript: migrate prototypical DFA objects to es6 classes"
db1c09c6d286becf5d5d182a0ef37bb6070953b4,"Merge pull request #2744 from julibert/master

Fix CMake packaging"
a1b89b7d9322f47c2aeb65e0b72aca8a791741b1,add optional encoding
3b76f1d61f1299a493c80acf9c85e11ca9a5972c,Update cpp-target.md code
f2830be501b5ff7872316aff0652e108a07fdb08,Update contributors.txt
653cb54bb9f1f0e244890c37a2c7d82d152df63d,"drop obsolete browser tests, selenium is flaky, these tests cannot run in our CI, everybody uses some packaging, next official js runtime will be pre-packaged
overall not worth the maintenance effort anymore"
95521b7553d1f11b82a51a0710f2d59f7c737c24,Move node tests up to simplify
ddf38ec88fa3df7564cb4da7a8a1087ff013c578,fix failing tests
ccc79bb883c14d55580fcd77dc427c2fb7650c9f,Add myself to the contributors.
0d73fc28e98c1a83f5cc637c3d41f3834c9d0b47,replace gramamr with grammar
2eb728eafb765ec546e76ed58b7a6e9ce0ae2936,drop selenium and jetty dependencies
bff9629414f49dacd0f4adb5b3dcd2466dafed36,add missing tests
2d9f45d9bf3e7ce49612c706cb53a7e9ad1d46df,"Merge pull request #2755 from ericvergnaud/drop-browser-tests

Drop browser tests"
9d997438f909dfe8e548f5c85ff119d234b34788,refactored interfaces to be es6 classes
32baf109447fabc8a565c6a96a6f6db84963294a,refactored Tree implementations to be es6 classes
e790ddb4badcff7063f8ad1458e2cf911d1d8cfc,"use const/let for better scoping
removed unused Utils import"
6cc2f082fbdfd5da0091cf1bf0cb362fdc58589d,"use destructuring for imports
use module.exports with object literal for exports"
4a7820aa4bfe8bfa37ea90b23dbe38f63336d8be,refactored comments to be jsdoc compatible
79d2c1c1634e2061dd4636c9c8a964b2da0f012b,"use const/let for better scoping
use object destructuring on import"
edf24eab3ff80961c82f12142c7ea1235d9b53d2,"fix: incorrect import of invalid_alt_number
removed unused RuleNode import"
af45a02d1e9e0c6d8d28dea4eeff99889e9c6c40,refactored comments to be jsdoc compatible
66c652142c4ad1eb0e0e98e26662d84a5507b89e,"refactored Trees to be a plain object to avoid ""this"" invocation"
1eafbf9286e890c7f6c09795d62cd3da5b5ee461,fix: dont destructure so early to avoid circular dependency problems
5e42c49ced27727467f5a6ba4f497674c33cb76a,fix: export ATN directly to avoid getting an empty object on (circular) imports
577a9b82bcc37b56b8d58d857a2745387d6498f8,fix: no need to call RuleNode class as prototype chain is enough
a3d2ca7ef52535ec381b1c11e66ff4e165dc2c89,"fix: removed unnecessary ""interface"" initialization on test suite"
96c2eb6a51799c8e9eeb0dce0e278fca5d068387,export Trees directly instead of wrapping it on an anonymous object
20cbfc5a0aec9ef50588e241c93389e39e74f918,export DFA and DiagnosticErrorListener directly instead of wrapping it on an anonymous object
6764f53024cefd8c4f60ff73b2c4e206d4ace15d,export RuleContext directly instead of wrapping it on an anonymous object
1c946ce605f1cde406bad1ea1f4080508efc08f0,refactored antlr/tree exports to use es6 destructuring
46ceb654f7a8369316699da44fcf04eec795dfeb,removed commented out call
5885aa4705fdaa824904099ca27cbdae2700f60f,fix: RuleContext no longer needs object destructuring import
c8ae1a89a2de695b224ac8b4a8d0c405401f8389,refactored BaseNodeTest to use es6 classes and const/let
d95b3270c40c6bee4f2b21140e53e83c92a64a43,workaround current cyclic dependency on nodejs
bb664446229cbf2654ae3938667d8cc081e0c780,"Merge pull request #2754 from StochasticTinkr/fix-gramamr-typo

replace gramamr with grammar"
10bbcb90335919f3b0f1ffb292522b7d516d1452,browser support increased with babel transformation
38b1b9ac7f602ee5b0013edb0cc589b10019c318,"Merge pull request #2749 from carocad/tree-classes

 Javascript: migrate prototypical Tree objects to es6 classes"
225249fdaef5a1d6bdc3694ab0e1fc936cf7f527,"Merge pull request #2761 from carocad/browser-support

Javascript: browser support increased with babel transformation"
e7b935e7e2c4a1c6a16868eb3f3869a28e210044,refactored ATN to be an es6 class
15720d1e33d7e03b2ca22f65f9260cfefae46505,use jsdoc and const/let
8f1b2e5eb9cf09fb71b4c90a8653c0ab53fc1d6f,use jsdoc and const/let
1b440d364afd3498ad0d78a38b7596880703f259,use jsdoc and const/let
2246528ca68fd0666a0aa1a171b64548fec7d784,"use module.exports
fix: put the documentation on the method, not on the import
fix: move Token import to the top"
7324e094b1a8dfe4e3d5113a3596583db0a29c42,"refactored ATNConfigSet.js to use es 6 classes
use module.exports
use const/let
use jsdoc"
430b7c1917e3653821b34642503bcc03ea6bcfd9,"refactored ATNDeserializationOptions.js to es 6 classes
fix: dont wrap class in an object
refactored imports accordingly"
78afe57b7d649dbdf4fe76215fc1f34d1b0e26a3,"refactored ATNState.js to es 6 classes
use module.exports
use jsdoc"
44331c067e79bfdac60af3efa1ec825ea4deb07a,refactored ATNType.js to be a simple object with static definitions
d61e4d50497a62d620031c291112517ea6e311ab,"refactored LexerAction.js to use es 6 classes
use jsdoc
use module.exports"
4f8527e9ee2d0cd290ca809fc1b8983f188f233e,"refactored ATNDeserializer.js to use es6 classes
fix: dont wrap the class in an object for export"
43f896d6dcc6c51c0b0711bd1af2facffb202df2,use const/let for better variable scoping
01c5dca26a3d7f5e5d58c252ce413d3531aa5a5d,"refactored ATNSimulator.js to use es6 classes
use const for better scoping
fix: dont wrap class in object for export"
9aeac6d4f4c6c79a7c74b6601995abace67d985f,"refactored LexerActionExecutor.js to use es6 classes
use const for better scoping
fix: dont wrap class in object for export"
d1dce9e700dfa08238f8381e145b6d724756d0c4,"refactored LexerATNSimulator.js to use es6 classes
use const/let for better scoping
fix: dont wrap class in object for export"
7f271a1fc09c7a0dbd96ec22d28f28fa40d6b929,"refactored ParserATNSimulator.js to use es6 classes
use const/let for better scoping
use object destructuring
fix: dont wrap class in object for export"
21538ebb59f8963ed0d2a52561bc031326b1980f,"refactored PredictionMode.js to use es6 classes
use const/let for better scoping
use object destructuring
fix: dont wrap class in object for export"
6ebe0d13170d2a09abda0765372b45ebb00530cb,"refactored SemanticContext.js.js to use es6 classes
use const/let for better scoping
use object destructuring
use jsdoc"
6a38ae5e3d75b8d80d66377e6d784260e49d6c78,fix: no need for return on constructor
ae8602a463a288f27894e4f45c75d477268135bd,"refactored Transition.js to use es6 classes
use const for better scoping"
51bcf5ffad05e455862b9109bdabcd6c40f45f13,refactored import statements to use object destructuring and avoid repetition
2988f32c3c4a5fd741f9c273fa45a5f59c105743,fix: invalid object destructuring
1284814c2112c7ffe275a4831511b4a0f21dd44c,"Merge pull request #2771 from carocad/atn-es6

Javascript: migrate prototypical ATN objects to ES6"
c33d4b29f78a18baf2efebb1d362ecf716f44656,Update contributors.txt
c6f89648a2a9e8128867d27db53fdeb00393e01c,"fix: compiler warnings in cpp runtime

GCC generates a warning when forward-declaring a class if that class has
already declared with using __attributes__:

    warning: type attributes ignored after type is already defined [-Wattributes]

This is a bug in GCC: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=39159

This works around that bug by only forward-declaring the class if it hasn't
already been declared."
4752ecf52160cb86f0f446a4d7d66e95e62ca87a,"refactored BufferedTokenStream.js to use es6 classes
fix: dont wrap class in an object for export
use const/let for better scoping
use jsdoc"
2e139f8d08e14f713256d7b95a6b43178afe9ed0,"fix: dont wrap class in an object for export
use jsdoc"
b2473f7564573e7d5a5eb06fb62d9f5fd07adfb6,"refactored CommonTokenFactory.js to use es6 classes
fix: dont wrap class in an object for export
use const for better scoping
use jsdoc"
5f6b7de72df861e90dbd98ede6b8cee1e24408d4,fix: remove unnecessary return statements
181c44fb110330752122e6b85b3b3d148e30ab4b,"refactored CommonTokenStream.js to use es6 classes
fix: dont wrap class in an object for export
fix: annotate adjustSeekIndex with Number type to avoid warning
use const for better scoping
use jsdoc"
23351cadc49435ec926fd8d956b063582bea6d90,"refactored InputStream.js to use es6 classes
refactored FileStream.js to use es6 classes
fix: dont wrap class in an object for export
use const for better scoping
use jsdoc"
a3c380d7d464ba118ef55149c8efd42e2f72049a,"refactored IntervalSet.js to use es6 classes
use const/let for better scoping"
24ae4274a01d204baf5fe57aede9d115ca88b737,"refactored Recognizer.js to use es6 classes
refactored Lexer.js to use es6 classes
fix: dont wrap class in object for exporting
use const/let for better scoping
use jsdoc"
fd8548acab796bb35b229e74eb5e5c97185ea3ce,fix: dont return this on constructor
ba6b0807c99a2861993f548ff490e94c3400b4bd,todo added due to code warning
94ee7cfbf925e27c61d1db3f1e34df058adc8df7,"refactored LL1Analyzer.js to use es6 classes
fix: dont wrap export in object
use const/let for better scoping
use jsdoc"
4de9e80109530a72ccae8997bdb305c07dcbcd23,"refactored Parser.js to use es6 classes
fix: dont wrap export in object
use const/let for better scoping
use jsdoc"
ee9474b19471d637174e6402442335a9d8eb10e4,"refactored RuleContext.js to use es6 classes
refactored ParserRuleContext.js to use es6 classes
fix: dont wrap export in object
use const/let for better scoping
use jsdoc"
5baa2326adc2247f9a4e41a71ebe1ea994c0c92d,"refactored PredictionContext.js to use es6 classes
use const/let for better scoping
use jsdoc"
5b607b34baef1b802c1389e979e090b65af2bf19,"refactored Token.js to use es6 classes
use const/let for better scoping
use jsdoc"
dadd69ef979339c9b9e94ae5886d387e46929d3d,"refactored Utils.js to use es6 classes
use const/let for better scoping
use jsdoc"
aa9a51a334e0e72d651d1cbd7fa1d81d4f146d40,Add documentation to ParseTreeWalker
d832f90a70906fa5f9a624c0410a88f75d4c60cc,Correct doc on exitRule
719ecdce133ac8fb69f318e44c7b9a86a5baecfc,added throws declaration missing from generated swift code
575271020f208c0adffeb8947aad67250d5a9418,Copy documentation to all non-Java languages
bc79e22297b5728073a20bbaf58397051501a7cf,Sign contributors.txt
0b980e93b3c89ef6f6cfec8c7af1f745eff54fc0,Change to c++ block comments
297bde0926a0c796cf450c6d9346400beb68c895,refactored generated parser and lexer to be es6 classes
57b65a1c92047f4b6d41d6b5fd8f5338c2f89be0,fix: assignment to constant var
42b9d8630c1029068db258c186b5b15afc88bc29,"fix: no prototype use inside class definition
fix: no need to return this in constructor"
8b7ac991bf6f091d42e793b0ffd1e5a68293ca3d,refactored StructDel to use es6 class
176f852bf16cab52beaf96cd97e2457daf3c719f,refactored AltLabelStructDecl to use es6 class
1922a3744ee68c80f172c3c446205cbe7d2d5c54,refactored MyRuleNode to use es6 class
091976c497cd2d30ea920a129d9898acf51e8c54,fix: use prototype for lexer and method for parser
4779b8f6e45fb88261efb984cf9dbd2243e0cb2b,"Merge pull request #2782 from XsongyangX/master

Clarify and expand documentation for runtime ParseTreeWalker"
a4c66dc863bb6d5de1daf2ecac59bf5342d8dd98,"Merge pull request #2787 from carocad/root-es6

Javascript: migrate prototypical root modules to ES6"
26715ec6df8484b3cc0455653517a9f4df2bff48,"fix: cyclic dependency between RuleContext.js, Trees.js and ParserRuleContext.js
check for RuleNode instead of RuleContext since that it the only implementation (RuleNode -> RuleContext -> ParserRuleContext)"
db4e0252de65c821603908a822112a12ffe9e868,Signed contributors.md
83dcc58ae6584a2ddf414f0ef256d68d433d7f12,"cpp-target.md: fixed link to ""Antlr4 for C++ with CMake: A practical example"" blog post"
1cb069d10f8f5d67e00ec61c4fb0996f11ea5807,"refactored AntlrInputStream.cs by removing a redundand if-statement

signed contributors.txt"
6615eafeb81f17f4be5abd3b39b77adee6aa0f6b,"Make sample grammar for modes more readable

add a new line to the grammar used as an example for the mode changing operators to make the example more accessible"
48dff06b8ec057aa8f45dc0adf0c1945788d0198,Update contributors.txt
7a11432ede995e6171cd6945fcc4a4e7bddc8d89,"Merge pull request #2797 from deniskyashif/master

refactored AntlrInputStream.cs by removing a redundand if-statement"
f88aff05da2313ee3818613dfdca3c5b4a2649a8,Merge branch 'master' into patch-1
8c50731894e045be3e19799b84b39e9a60e2ab61,"Merge pull request #2772 from carocad/cyclic-import

Javascript: fix some cyclic dependencies"
71103fc6520e8a955f92cfd11377052371ea8858,"[Swift] Update codegen template

Update Swift codegen template to resolve warning:

> Variable '_localctx' was never mutated; consider changing to 'let' constant
> Variable '_parentState' was never mutated; consider changing to 'let' constant
> Variable '_startState' was never mutated; consider changing to 'let' constant

Since there is no path where they can be changed I would say its best to just generate without the warnings."
e3ccb3e850ef4f760f6f07f3b28bb7f5e827c3c1,Update contributors.txt
67c981621e11d1b1862bc05bd14921e9ad4a7b78,Fixed typo in error message.
cc0fe74f0b17fac41203e62b738b5a0c14db689a,Added support for Windows in BaseDartTest.
f0f21410a918468f3181b1d428ab761913c834f5,Re-enabled test LargeLexer for Dart.
187e5bb84941858e150bc244d62752c316b7272c,Escaped generic arguments <String> and <DFA>.
8962fb666a122ecd6e9a285659419b1e37a30477,Suppressed dart execParser debug message.
69ba58ecbe5f97f86443a556526a6b5ed8ccff88,Thread-safe ANTLR Go codegen
f17b6b43e33d277586550345568cfd6a725cb825,Remove extant variable
621b933c7a7f01c67ae9de15103151fa0f9d6d90,"Merge pull request #2816 from TristonianJones/export-lexer-set-stream

[Go] Thread-safe ANTLR codegen"
c67df82a189bc63d54906430f4d2aea1e90076ee,"Added a link to README.md

I thought adding this particular link would increase accessibility"
56c800f619b031d93b4caaba09b15d8ae435b4cf,Update contributors.txt
52f7b0063c26faa4385776d3d007db1c8d12e04f,Added missing swift version of the ParseTreeProperty class
ce84a9f940d8c64b1cba192f7a94c93cd6c1f89d,added gomerser to contributors.txt
b0f65ab5e046035fea2b9b1818e012ee0d2ea6fc,Merge branch 'master' into patch-1
35c1f1ca6ff3536162d09e05d2e316842c9446b8,"Update Swift.stg

A recent test/change seems to touch this var, made `_prevctx` a var instead of a let"
fde1b3a5806da407241dfe8ddcb38d3b499b7114,"Update Swift.stg

Marked `_startState` constant as suggested by validator instead of the incorrect: `_prevctx`"
37f3aae7cd8cf5776ea145a87f197c2819475916,"Update Swift.stg

_localctx is needed as var inside a test"
c40d68f92c48bc1599397e69fcb5c57a6c33b802,"fix composer command in documentation

see also https://github.com/antlr/antlr-php-runtime"
11775efabfd6f940277421cef3a0726f63018c8f,signing contributer agreement
818f6a995aac50b3cc78fffd88a50b184ee38141,Update contributors.txt
d6a188e4d4bb68324c33a587ead9777fccabdbfa,"Merge pull request #1 from graknol/dart-clean

LargeLexer and Windows support."
62d56d83ae87c2ef59666549797253c03b60074f,Merge branch 'master' of github.com:antlr/antlr4 into dart-clean
51a96913767ab01a571809f3652a576d17e167b1,fix: incorrect code generation when there are more than 65 tokens
2cb1618009049f751b83e1538ecc659da6a7e677,fix: run dart analyzer against google pedantic
150ecabfffbdc2b68b429349af64a8a3b66791fa,Add docs for Dart target
55e55a0d4b79b90ee0ad97a7493b2037d96bdf26,Update docs for creating a target
bcd88c719e3897262c2f6431d3373ecd89d1c12f,Register as a contribuor
4cfbe5bd78668a294206addd9b6a8aa10d68d7fc,Update CSharp.stg
2191c386190a7d57d457319dd2f6aec4f0231d4c,"Prefer ""DebuggerNonUserCode"""
88dffba62ea6063f5b094621e10f67256e7e44bf,Improve coding style of auto usages
e7a10a070a6a5a68d9dae07b18cb57384a35f6d6,Fixed deprecation warning for CPP targets > 17
3c0dbd83dd23eea2ae1dce8470015c25f25c3921,"[C++ runtime] Optimizations of Vocabulary::fromTokenNames

This commit doesn't change the behavior, it contains few small improvements:
- prevent useless copy when creating the variable tokenName
- avoid to check if tokenName is empty twice
- use std::string::empty() instead of creating an empty string to compare with
- use std::string::clear() instead of assigning an empty C string to clear a string"
0b35a76e9b0931465afe9021058cf4deb0328b4d,"Merge pull request #2833 from d-markey/master

Avoid stepping through ANTLR generated code when debugging (C#)"
739cb0b66825f66c492fbd8d8d26a0ba2fa2dada,Merge branch 'master' into master
a1d2d47da8c6fc2c4411f3d66550de18f109ac8f,"Avoid defining static const members in headers

Defining a static const member in a header breaks ODR, as the object will be
defined in every translation unit that includes the header.

Instead, the members should either be declared `inline` (which is
implicitly the case for `constexpr` members) or initialized in a cpp.
Alternatively, using an anonymous enum allows the definition to remain
inside the header meaning that the compiler can still choose to inline
values."
254b144bf2be35996747520d2babc4ee3a0b5b65,"Add AntlrInputStream(std::string_view) constructor

Guarded by the __cplusplus macro so it is only available in C++17 or
newer."
0daa97a5f0148a38166a99e6958a1879bcdbf1ea,Added templated move support for antlrcpp::Any
ae5efa8a30f55eeff63cceed65bcf36e44ab1920,tweak contrib
835bd709a8ebfe5dbe4d671a60a841a0f9a18879,Be more precise in documentation of char set when escaping is needed
c134dac863ea8f988eb3d7f38b3e7fd29a30e92f,"escape ? character in c++ codegen to prevent accidental trigraphs
(using an override of shouldUseUnicodeEscapeForCodePointInDoubleQuotedString in CppTarget)"
09eb905332c3abece6ade0d9a51b7cc3cbeac536,"Remove use of the u8"""" string literal prefix

Prior to C++20, the type of a ""UTF-8 encoded string literal"" is char
const * - i.e. it is exactly the same as a non-prefixed string literal
(they are semantically different, but technically the same).

Since C++20, the type of a UTF-8 encoded string literal is changed to
char8_t const * - which is not convertable to char const *.  Even in
C++20, there is no actual change to how characters are stored, only the
type is changed (they are now semantically different, and supposed to be
technically different - but nothing in the language actually uses the
semantics).

In short, removing the u8"""" prefix has no effect prior to C++20, and
simply allows compilation to succeed since c++20."
7a6db6a50abfcf5da09a31b451e1d27700ba163d,"Merge pull request #2805 from felixn/master

C++ target: escape ? character to prevent accidental trigraphs"
a62ca703272e18ad40052ea0a67fa3abea763452,Merge branch 'master' into patch-1
5f3654dea7c802b57d56d7b710ab754b605054ee,Sign contributors.txt
f780421da707beb81ec2f5b638abcb9cbb561239,Adds DefaultErrorStrategy to export list
795cd3b682bbc80adc6945d5ed2d3d41ad7fb968,adds IntervalSet to the export list
e74443546306c8a975964cb1cc0277fcb1fc8a13,Adds LL1Analyzer to exports list
3d9351f61e0f60d206264959115a3d881185a08a,"Merge pull request #2858 from sha-N/master

fix for issues in #1759"
1692ed2a17321d63cef5778b592542f793699c7d,"Add explicit keyword to constructors

To avoid unexpected implicit casts."
6e3d900c96c82ef9d0f80961cca6394f5b1db4ab,Resynced to master
2bfce77e9137de2b29bf84a8b9feac1142281f55,Fix a NPE
eb1adaa8a7a6993803f08f5ffa0350a45eb24a13,"Merge pull request #2864 from antlr/fix-javascript-NPE

Fix a NPE"
8b706e24272b6adc5f65b1fa5fd909715d66ed41,"Add default cases to AltBlock and OptionalBlock

All other switch statements have a default case (either ""break"" or
""<error>""), but these are missing.

Does not change functionality, simply fixes a warning - and allows a
project to build with -Werror."
dfc7ffc39c4a1cff2541bef4e18e5258e40a5c31,Merge branch 'master' into dart-clean
2ba38605b949a3208230d2c63d2896e035c36723,"Merge pull request #2728 from lingyv-li/dart-clean

Dart Target"
c8571060f03a588cf4f04c951981014eedc51156,pin dart version to 2.8.4 to get unit tests passing
1eb6c3ee5251107d93590fb9d6a44c12bd4b5125,pin dart version to 2.8.4
b173138a3bcf612ef9decdd299edb254080538f5,"Merge pull request #2882 from lingyv-li/pin-dart-version

Pin dart version to 2.8.4 to get unit tests passing"
d47db451808c6e7cf091cab64cc88effe30969a2,fix travis ci for pinned dart sdk version
0b34136a448fe063ee1f8f33546555a55ea0879e,fix dart sdk url
533f63382ac9a9925a161fabdc2bbd153e6dbd9a,"Merge pull request #2883 from lingyv-li/pin-dart-version

Fix travis ci for Dart pin version"
68e9a25bbef6a9ffa95b440973cab59b40bc97cd,don't generate extra/duplicate semicolons
be881fa6b91d1980936f8dcab902a9dc26ecd310,"Merge pull request #2806 from felixn/no-extra-semi

C++ target: don't generate extra/duplicate semicolons"
8270f329ad2e683deb0bc9928ed6cc5d6587c94d,"Fix C++ target README example

tree::ParseTreeWalker::DEFAULT is not a pointer"
3b3da29d458feb60e61ebb721755877c044a7013,Merge branch 'master' into master
f2007278bb1f66056db9d5958a8ee453c614e987,fix a typo
f68c47a9886c5180a85ef354e62f03f45e174fbd,"Fix clang compile error with --stdlib=libc++

On linux. Most users haven't installed libc++-dev, but ANTLR is passing
the ""--stdlib=libc++"" argument. As a result, this won't compile. Users
will see:
```
/tmp/antlr4/runtime/Cpp/runtime/src/antlr4-common.h:8:10: fatal error:
'algorithm' file not found
```

This is caused by the ""WITH_LIBCXX"" option.
It was introduced by:
https://github.com/antlr/antlr4/commit/d46ef90aa03066300752895d57fc57a1c5aa8ee6

It causes the option ""--stdlib=libc++"" to be appended by default.

I believe its default value should have been left as ""Off"".

With ""off"" by default, clang will use its default C++ library, which is
always available.

The WITH_LIBCXX option is kept, being able to change the C++ library
might be useful?

BUG=https://github.com/antlr/antlr4/issues/2898"
2a573927ea614b1a8254546abbfb5a9cdcdbf45f,add a missing space
af53acd2a22ef27b363e9d04c66549d7114974f7,Merge branch 'master' into cpp_vocabulary_cleanup
7d106694216a2019b79a98b5a41b4189430bf678,Merge branch 'master' into master
19adda3a584d98c000cef9676e9305339022f39d,Add thread_local again in StringUtils.h due to better performance
cdf67a5ed20f56a0d5f8921474b5bcba99721637,Merge branch 'master' into master
40df0c169f6f968baffd636c7694385cb2031c4e,"Merge pull request #2899 from ArthurSonzogni/bug-2898

Fix clang compile error with --stdlib=libc++"
a161845829171963cb8887ef3655152c4194164d,Merge branch 'master' into master
86b88f697b5ae605c26a68574b17a708c8dbb5d3,"Merge pull request #2887 from stevenjohnstone/master

Fix C++ target README example"
630e4c0b7d6720763556337542766ebb2bbd8c2b,"Merge pull request #2865 from nburles/fix_switch_missing_default_case

[C++ codegen] Add default cases to AltBlock and OptionalBlock"
2b119be55337d0f2bed0bb7dbe4c3cc945c268e5,"Merge pull request #2854 from nburles/fix_u8string_cpp20

[C++ codegen] Remove use of the u8"""" string literal prefix"
ffef8cb2784bb09b8d359ebd151d36bf57614150,"Merge pull request #2850 from nburles/use_explicit_constructor

[C++ codegen] Add explicit keyword to constructor"
9a646e0367ec335ebc20ea0b15a757f54aff4422,"Merge pull request #2847 from nburles/antlrinputstream_from_stringview

[C++ runtime] Add AntlrInputStream(std::string_view) constructor"
fb2a34d5be04a6ca323b7b9eaae38862179e99db,Merge branch 'master' into cpp_vocabulary_cleanup
49ac9d066aceeefe5ff40d1a13b14ed832f32f98,"Merge pull request #2839 from IohannRabeson/cpp_vocabulary_cleanup

[C++ runtime] Improvements of Vocabulary::fromTokenNames"
168882d94241eaa1048050c3449fed4ae9aedf5e,Merge branch 'master' into master
aa5a0d2891ef511483977b9d0ab6debc6740e10b,"Merge pull request #2835 from cohomology/master

[C++ runtime]: Improve coding style of auto usages"
a39b77f904ea6b268492c68d17d1ea487b6a3935,"Update getting started guide to use antlr4.8

Updating getting started to use antlr4.8 complete instead of 4.7.1 complete."
cc8d610a0811b1973aa3ef43250e89bd3e33ed3e,Trigger CI
2aafb7f143c00dee26634feb2bcb100b751aa75f,"Merge pull request #2836 from sigmasoldi3r/master

[C++ codegen] Fixed deprecation warning for CPP targets > 17"
1ac3593fc4e162cf830ce9167549a3f6788bcfff,"Merge pull request #2848 from nburles/fix_static_const_odr_violations

[C++ runtime] Fix static const ODR violations"
2dc9fb50bee8f9b2f95a2b3a61b486197a672f85,"1. remove wstring_convert and codecvt
2. let clang::fallthrough and throw_with_nested be compatible to gcc 4.9
3. downgrade gcc version from 5 to 4.9"
72d86f91edaf8c27a63537a0f80474014eb43d3f,"1. Revert change: downgrade gcc version from 5 to 4.9.
2. Add macro USE_UTF8_INSTEAD_OF_CODECVT to judge use codecvt or utf8."
2d86b34c4016b012a0a434be96e6be7693db4605,Compile with utf8 on macOS.
4bacd99255bb566b66ee8483717e397d9c6bc6fa,add prompt for USE_UTF8_INSTEAD_OF_CODECVT macro in CMakeLists.txt.
73f157fb91a69cef00388e38bedbedad69c58f2b,Add utfcpp include paths in project.pbxproj for macOS compilation.
ae0c7a31f83a4c2ee01bbfc1dc32a3500e415936,Implement USE_UTF8_INSTEAD_OF_CODECVT macro in CMakeLists.txt in another way.
734d18cb35b50ffb4c1b9a2f95efec0c727297a6,Add missing const in StringUtils.h
ef029cef40f019fbc0ced0050d72d5a357264d57,Fix #2902
c0bf19846c610a97117749d83d9597f2bd93389f,Fix #2745
e01df6b6a126d9d8160f23c6e3eb1a26cd442a84,"Merge pull request #2892 from Clcanny/charles-dev

[C++ runtime] Remove codecvt header (deprecated in C++17) in cpp runtime."
6fed4cd52274adcb8f11c068040c27de4597f656,Dummy commit to trigger build
c128f0659b5c8b9decf6e164730ff395eaec6fe6,"add missing semicolon to AltLabelStructDeclHeader

rules with alternative labels were generating Cpp header files with missing semicolons in declarations after PR#2806 removed duplicate semicolons.
StructDeclHeader and AltLabelStructDeclHeader differed in how attributes were declared"
d3246df2c30e43153df20d7c811982a9e209a2cf,"Merge pull request #2907 from felixn/fix-travis-cpp-regressions

Fix regressions in travis Cpp tests"
6f0657e5c984857ec70b9189166a2c05f3c6370f,separate py3 runtime tests from src tree + actually run said tests in CI
2e4bf8196a41cf6215592607cf6f486ea51d6a64,"Merge pull request #2905 from antlr/fix-javascript-perf-issue

Fix #2902"
da848154d81a1870eaf51ff7afa7322c2a09d6c8,"Merge pull request #2906 from antlr/fix-template-issue

Fix template issue"
f7af6c07d5a0e3b67f7d51e1385d1df21f76ccb1,added to contributors.txt
e73f72be7355aded374fa6b18fccb4569b449856,"Merge pull request #2911 from rmcgregor1990/separate-py3-tests

separate py3 runtime tests from src tree + actually run said tests in CI"
d735386bf27699b6b9c5c9b3840ecec8b279b355,Fix linker issue when compiling with CMake and MSVC on Windows by setting gtest_force_shared_crt=ON
6729847f653a14de912122ae4a7bbd7a8c180364,Update contributors.txt
4176289922f44943425796b56c2f9fd5ac75e724,Fix typo - our -> are
4aa1d59c1a3bf47c982b8eefc9859ec0e8f945ae,Update cpp-target.md
d3cc9ecc73a773dbc70d27f551961b047cceb501,Fix undefined value
3451dccd6c54da28d4658214736baacb7f23c577,formatting
48f22a9a1e43e8cb75e56796f78365bebe104d09,fix import issue leading to invalid algo
bec37fc0e51c48466d51de57d73d5bbfa4a8138a,updated by webpack
71cdf89eb330cb402a57de598badb11a0dcf56c8,generate es6 classes
0bd0a05f24a171d01d1d8220971e87425c20e9d5,remove unnecessary test template
eafb3d8ea67a2b830e3d4d26fd22b20bd45dbbe8,fix circular dependency
c709cfc38890264eb28c23c7167e14e4628901dc,use esm module semantics
6df2ec7c3b2eea26b5cf248667a9ad6fc64149a5,use node 14.12
8fa9282dc22acf519965f5e6b94565bacb238961,Fix failing tests
a12539651e97f609a4dd59d683c28751a90f0e37,Fix travis js build
a788b860c2f012556c89a2f71c095cb2f95e1639,try fix travis
ec5aff05e903c1a4769310dfad006e150a7685f5,try fix travis
66dbac738d166fb9ff7e9453ab60cca9e6d823b8,Fix failing tests
215d57abff6e2e232ca1c03f750b8dc65d324018,try fix travis
bdf33295810f972a568e12aab88cc01fd44bcd6f,try fix travis
8ae36fd0d4bf8ce25f51e955e418cb508a98328c,try fix travis
f71a1fd205aaa55fd0130876f318ab2b331c6334,try fix travis
fd89fccfa6fbb31bc658d8a6ce30e8448a816fb7,try fix travis
90e78a9cb562c523bac1c86e3208f6691f32e1d3,try fix travis
f9927c0a906d6d8e87a802fe8b6b56c80e45fd8f,try fix travis
596267d6a48cf1fc9eca3a3349ed68254fdd473c,try fix travis
d5e2e4b4f3c3f1f759bc608d98d1c6e41acfe75c,try fix travis
47d1332249cc68d1148f2bacb0f1349899638120,try fix travis
292811ce81103af7ccb19c961fa4cca15cdc6a4a,try fix travis
0536e72504171207ebb235cad413f9d6f6942d78,try fix travis
0df90f17bd50aed9d90d3b59554d6c3e30a7eb5e,only js
3d7b314a76f7d04c86d78141afaaf2ffd5ad5e57,rollback travis.sh changes
b8206366268708bf0ee70abfdbdb18b48c6ab7b0,try with node 14
3514946c635eb46c76537b820d7c9d4ae5799350,try with language
758536d581a3ac4d2b6a69e19602afd1c1dff234,try with plain nvm
32f4f04f85e6c539de1bef9d9d6f204b58369f48,re-activate other tests
41b96c8edc0a7b2657cd302af7f1f1c6cc5903b2,"Merge pull request #1 from carocad/javascript-es6-migration

fix: Javascript es6 migration"
c35b258c59e7332148d9e1c1f89f29464df498fc,more feedback
36663e0b64c84e6a1e8dc72c2deeede366c2c4a7,troubleshoot travis javascript build
2efc92f491192ee2ca31f0329eadefa1cda9d88f,cleanup
7ce8e98d5e09bdba4cb547e97f8f690059cdbb6b,improve stack trace
b94064811132d56e9df685b697d8f36a9fe45355,improve disaster scenario
7068d1bb0da13ea771f9118c6c00a010acff8daf,accelerate failure temporarily
263eb29a82a8146e8627e2cb9319da9ca4468916,run npm install and link once before tests
5c8ff2e5b13afccb448aa66088e6080cc3466975,restore 40mn timeout
2b2b84422bd72f4826ee12ca79c90d0bf6a4e1b9,reduce scope while troubleshooting
96c62ac24c3b970613bac883a492edf2d78465f1,detect need to install js runtime via npm
98ee666a66a1b085b7cdbc473d9591ba517b65b6,reenable tests
afa772e4fa659922d800fd68c97afe2c8eb29c4a,reenable tests
2bfbbb8c4f91b75716b552ec395cbf1da715c4c1,reenable tests
d1004f6be161cb45929397ad21ff9f68c3b9e809,back to java 7
7143fed7001031ebfe23540482fde6351087bbf2,reenable all targets
11ede0fc7726df8bc9eb17eca47e0be020c83933,Update the docs
50c9faeb11e10ff4129fa2a37360e614e0cf9e16,"Update csharp-target.md

Correct the spelling of 2 members: `Default` and `Walk`"
1145107684d8f92b0d8b2830ff99988d5a3f0c5d,"Merge pull request #2923 from cliid/patch-1

cpp-target.md link broken fix"
0ead01fb97c562ba757bb534cfed185d4e4771de,Made C# Trace Listener usable
53611158427ad0162c1a68436e76d6f8bb0b5c42,Add to contributors
79808cdcbd360fb12df800c3f77ed219ec9fef48,"Merge pull request #2934 from Marti2203/master

Made C# Trace Listener usable for most cases"
527118197f89b5fbd1fb938c6445ccd5063eee48,Merge branch 'master' into master
0fc0617bec2452e215d7bf4c9f6ff784186fbde3,"Merge pull request #2375 from xsIceman/master

NullReferenceException in CSharp target #2304"
e3243f74b21827812c068b4f83e32b773c1ce4ec,Merge branch 'master' into master
8b1fc9ba033989e5e77aa8ebaa0641139e5ce3c5,"Merge pull request #2913 from trenki2/master

Fix linker issue when compiling Cpp runtime with CMake and MSVC on Windows"
40b9d4503d3d135352e20f1f63e463c9a1711d97,fix appveyor build of es6
d622c53b04d8bdcfe8e35eab9d7ec372c1ee1796,fix appveyor for es6
12c4bcc4083384a823ced9d0109b3f6b2f0650f7,fix appveyor for es6
76355cebbffe767f4d1db7d8b71820d3e85efdee,fix appveyor build of es6
654b92779c67ee10478e233b95f1cf2f20910202,Disable Node tests in AppVeyor for now
f333c36fd0f4efa34468da70e0ce0bc6c882f03a,Disable Node tests in AppVeyor for now
518ec01c6912bd6044eedc6cb9b80a9102a68959,Disable Node tests in AppVeyor for now
d2ba4398e1a792afb6a7d9b88c84bdec84875f4c,speed-up AppVeyor
21cb5df94fd17e8916977fb570eeee81876ef7b8,fix appveyor build for es6
a741dba79f65c3eb64341d5f69c1bb19fc0972b5,fix appveyor build for es6
6ee7e0c21c5552677c8e1a81d4308cff4d92be3b,fix appveyor build for es6
8c4c47d999b951aeecbbad74edc4b98434f54f27,fix appveyor build for es6
7732a383ab7b654e389b44091ed2d5cae069ad28,fix appveyor build for es6
5b84a5c0319f04c5bf6465381ec3169063650acd,restore cpp build in appveyor
d957b1ed304327442320a326ba241b233fad7a01,"Merge pull request #2933 from RexJaeschke/patch-1

Correct the csharp-target example for invoking a custom listener"
69687b96bb96a4f1a0559f693c80f09df6c324f9,"Merge pull request #2927 from ericvergnaud/fix-python3-typo

Fix undefined value"
efcc9d10425daa9be56ed9f345aaa47c9d5b4c7f,"Merge pull request #2903 from tiansiyuan/master

add a missing space"
7b9dc371142fd9bfb4f0eac39c7530bb7351d32e,"Merge pull request #2891 from eric-buaa-cn/patch-1

fix a typo"
1bbb69ffc7bbbd4ff723929e2b71e89802e03ab4,Merge branch 'master' into patch-1
e515f42783f9635d104015666389ee4fa4d47691,"Merge pull request #2817 from iammosespaulr/patch-1

Added a link to README.md to increase accessibility"
72fc722cb359a1df57520b43553243da5048474e,Merge branch 'master' into catch-codegen-error-python
d7f50b414369c2ee226fcdc55c6f18bebe9cbed2,"Merge pull request #2462 from wkhemir/catch-codegen-error-python

Fix code generation for catch statements in python"
9e64dfc6e99f7dcf7cae492927d37290daf57734,"Merge pull request #2931 from ericvergnaud/javascript-es6-migration

Javascript es6 migration"
07ddf8de45e019061faf62ae9b043371c1f19dd3,fix failing Python2 tests with utf-8 encoding
fa0c0b665e7c195b572952b4865bfd94feabdd77,fix failing Python2 tests with utf-8 encoding
5ec39c2a65040ea3699a27b7a78ba42f62fd431e,"Changed Python runtime Lexer.py, Parser.py to support version > 5"
9a288bcb258ca28a63838e0c4e6c80916d6c68b4,fix failing Python2 tests with utf-8 encoding
4ba08c82dde37815baf1f3e44f45ebc46029fc8d,Corrected Webpack configuration in JavaScript documentation
44e47d191ca013b6b11ba1e3bc1fa3fc3834adfd,Signed contributors.txt
71b48abb31f199e8a332b52959f8281d721cf16b,"Merge pull request #2809 from martinvw/patch-1

[Swift] Update codegen template"
797f81d74ce60b9fb5b13c7786ebcba193e67f40,"Merge pull request #2781 from mlilback/master

added throws declaration missing from generated swift code"
eba93089744738ba27b6af12fad1a2f570e7ad0f,resolve
0a7eaede42b0e538e71789ec027f758405f3161e,Merge branch 'gomerser-swiftparsetreeproperty' into master
61490336019a3f872f4ff9366fa0c8dc5a4f5cca,Signed to contributors.txt
a057ebbd2e39cec0c6fdb34b2c2f632830ba9ea7,Added regression test for antlr/antlr4#2709
5d3452e5be37d546ca811de8d3c1b662b2b90031,[PHP] Escaped dollar signs in target string literals
67e49703c3b3bdfdaf5aac2a2e9ff1dd8865df28,"Merge pull request #2945 from adamwojs/escape_target_string_literal_in_php

[PHP] Escape dollar sign in target string literal"
08a4b345b60391daa4f998d4fc53a75b5f46d8f6,Merge branch 'master' into master
ac92c48a09df20d67e62d5d01d4750e659b3d50b,"Merge pull request #2935 from cliid/master

Changed Python runtime Lexer.py, Parser.py to support version >= 3.5"
df0e0204e08ea0ec56fb88100e645aca20a4f3ac,Version specific information for Webpack
381aede6fd7b59c985bb6a3e17f92df1e7ded0b2,Merge branch 'master' into fix-js-docs
9a95f0cc3d7c0ca02f6a17fed442de36a45700df,"Merge pull request #2942 from adarshbhat/fix-js-docs

Corrected Webpack configuration in JavaScript documentation"
e660b3589c2e85b59c8e3eea24641cdc855ff671,Fix links to faqs about translations
5c5d9cd0047bfa885023e1cad30439af5a830ee6,Sign contributors.txt
01a4ea3062faa8bf5d9f46c2dd45a7ea0cffd4f2,"Merge pull request #2952 from MichelHartmann/patch-1

Fix links to faqs about translations"
b5812a1e796488b0f35fc905e723e5d227d574ce,"Merge pull request #2919 from MuhammedZakir/patch-1

Fix typo - our -> are"
f3a8a7a4e1a9f17e7721b272ec29010a1aa3e3fe,Merge branch 'master' into patch-1
1ab7a8688c4ab40843f06fcfa17a6f5d8588cf34,"Merge pull request #2904 from Khalian/patch-1

Update getting started guide to use antlr4.8"
d0390e76207ac546da69e0fa5b05db28ab376e00,tweak 4.8->4.9
346e4c4bffcf3a530a5076c3b3b274b96f68616d,"Merge pull request #2851 from akosthekiss/doc-charset-hyphen-escape

Be more precise in documentation of char set when escaping is needed"
bb2a1ecbad64e2c9779d9f302b919c3af6b3dfa6,Merge branch 'master' into patch-1
bbf042619ea68dcc303a1d2d0662256fe2bfbb18,"Merge pull request #2800 from Agrabski/patch-1

Make sample grammar for lexer modes more readable"
0d2034f906f107aa9135b1c5560b60397fdf371b,Merge branch 'master' into patch-1
6e7ff02187d843432d0c6f33be0883846dfc83b7,"Merge pull request #2827 from keywan-ghadami-oxid/patch-1

fix composer command in documentation"
f7f1b253125a7dba8ffdc65bf7985b3b591adfc8,Merge branch 'master' into master
06a44e79d3d8eb0ee5aa91390db768c48645b776,tweak 1.6->1.7 java
9366718c116ebe504658f64ef5992218575fab6e,Merge branch 'master' of github.com:antlr/antlr4 into master
08b9e1c84bfbcdec97e16178ed9d3f95f5fc69c1,"Merge pull request #2799 from lwehmeier/master

Fixed link to CMake example in cpp-target.md"
e2a8e99650b119ee7f5d3680ee95ee71ad91602e,Merge branch 'master' into patch-1
6f5764c6088ab1b6cdcbe6f03c0168302a71565d,"Merge pull request #2748 from quantumsheep/patch-1

Update cpp-target.md doc (tree::ParseTreeWalker::DEFAULT is now a reference)"
8d25c16deea3a2020030878db4cc2ce574072f6d,"Merge pull request #2731 from praveen4463/patch-1

fixing a typo, was role instead of rule"
dce97a050d414eab38fede6ac4a9318ec2f25ec1,"Merge pull request #2680 from listba/patch-1

Documentation: Added Missing lexer/parermodifier clarification in example"
6c2d099517bc626cf62615b910b18b17b68a8198,"Merge pull request #2646 from sullis/maven-compiler-3.8.1

maven-compiler-plugin 3.8.1"
de28c29cdb8c061c706e0f7bc3e9a1312cdd4753,"Merge pull request #2647 from sullis/maven-plugin-plugin-3.6.0

maven-plugin-plugin 3.6.0"
118ad6be2bfe04e38a171ff1e721bcadb584ee38,Merge branch 'master' into contributors.txt-sullis
6fb84d8ce5a02f23d1b41e4ab3683864b35e9457,"Merge pull request #2648 from sullis/contributors.txt-sullis

add [sullis] to contributors.txt"
7f5848305c101720560bbbf0dfe600df17cc5b18,Merge branch 'master' into master
002a01c0107a1a08133e1fdc10a640222ada91e4,"Merge pull request #2636 from markus-franke/master

Fix escaping of angle brackets #2635"
a4f0cf122336c589d18823ac57a93d77551c75f5,"Merge pull request #2622 from easonlin404/easonlin404-patch-1

[Golang] enable syntax highlighting"
cc5e71cdebc99692537359fad21e609873bc5e0d,Merge branch 'master' into patch-1
abec1752532d0b2e8a84454ba6542a60ed3345f6,"Merge pull request #2616 from thron7/patch-1

(minor) word slip 'each'"
3af20740614539738520a6bd6d51b0a3cbdffae6,Merge branch 'master' into patch-1
a9e2eb4762072d0d3860e2496245ce4b2f2b3646,"Merge pull request #2589 from abhijithneilabraham/patch-1

Update contributors.txt"
a18b83d38f569b4ffb5fba25d5e826ba394e5e4f,Merge branch 'master' into patch-1
a8f0fb86160b670d88ca9e8de3048e94d1fd4a1b,"Merge pull request #2552 from mapio/patch-1

Added a missing quote."
cecb8ee0d5088da9c4725f2171e95f716f56d9dd,"Merge pull request #2538 from t-gergely/patch-1

Update tree-matching.md"
e2dadb5f6296568d2e90435c9c0489a4535c8771,tweak cpp doc
fc640c944af1a4cab1ff33641806c4948ea635a9,Merge branch 'master' of github.com:antlr/antlr4 into master
f8f2f8c38185da2810b3962d95703058ab7326b2,tweak script
a2db5e6743419f2019a1596fa2d1add1debea9a5,tweak 4.8->4.9 in doc
e07a6fa778366f0c172a238dcf427d1afe264218,Update PHP Runtime to latest version
d27e6cad09eaff171c37bfa04f246c7207834157,Update to version num 4.9 in code / projects
59c24696ae2a21f7561dc38de6894fa670d3b73b,tweak doc
f29018f9a5ebca12bc49ada6c062b543eb73a320,allow multiple versions when locating python tool
537eca39715eb02d3ca948f1a68c7e3400e952e1,tweak doc
9f3ebd166739d68f0b802c1a709f53067d503b33,"Merge pull request #2964 from parrt/multi-py-versions

allow multiple versions when locating python tool"
1364da5ed3475dcf0798ac1555a668074ea97f60,[maven-release-plugin] prepare release 4.9
69318d35fc3c069274f74efe0f09da68e67cf350,[maven-release-plugin] prepare for next development iteration
43f54f8719ea91768e458d0f1e4dda53996e68e9,tweak compose doc for php
954c5fab1c5abe4fa7c4241f7bfde48de7a9966b,update release doc
74d0d7991888b8132c933e9a61e4d812e58822bc,Update PHP Runtime to latest version
86610fd4b43ef173c42fb4346ffde8ff7b9b06eb,tweak appveyor to have correct version
4bcbbe23a175b68f1f8e2b8af9e7d0f89f73bdb3,"Include prerequisite to publish Dart target 

add link to download dart sdk"
c23cafd126b890c004155c18ae3c11475f5e5718,"Merge pull request #2747 from ericvergnaud/support-string-encoding

add optional encoding for string input in python 2"
91b00d2695f5ac981374f31dd5e9d9932c0c2f87,Update PHP Runtime to latest version
74aad515dcbe534b6d80307ff6e06bfa05dc1481,Merge branch 'master' of github.com:antlr/antlr4 into master
87515f2864de0bcda72e8177981e83ca33856516,update npm readme
44e5a2c8ea53579724eb760200e2ae215907d2de,Fix invalid import
d7742bf13bc65979dd240bc7d90b459e7a9ea438,Py3 Runtime: distribute the tests in the sdist
ceebca4a58d4d8005e6b4b39f6bbf62ecee0a2c4,"Merge pull request #2974 from antlr/fix-invalid-import

Fix invalid import"
82c8824147165e0e6d38672d15a7e40d0ca3419b,Upgrade JUnit to address dependabot security alert
36f1d07ca0062fa21baff2abdfb60a70299aa00e,Fix #2976
e2210e7debcb56895e88f4b2376963c6bbb7c89c,"Merge pull request #2977 from antlr/fix-junit-security-alert

Upgrade JUnit to address dependabot security alert"
7d8b6dfae3557af8a7c275f72992bc88114dde3d,Fix incorrect token string templates
eafcc9369e99badb0548cfb56da91ff20b0ab886,"Merge pull request #2978 from antlr/fix-python-token-templates

Fix incorrect python token string templates"
517f8ab90d3f66c6cad3b29989d9c514dce69895,travis: upgrade c++ build to focal & llvm 10
99c3589742ef8017332a4dd192bda977701a49c2,upgrade to java 11
8f7faab0eeeae2037060e59e4e24d4aecd90d2c4,revert change of Vocabulary constructor from PR #2839 to fix build error in Cpp runtime test
4fcec7348db8b3edacf5988af71996cdb6dde3b5,:ambulance: fix bad import
ec755822b09c5813f8dc70c9a6f6e1cb998c304e,Update contributors.txt
c278c1df5d22f597d932f25669ffc32e2aece8e5,"Merge pull request #2983 from felixn/travis-use-newer-versions-cpp

travis: upgrade c++ build to focal & llvm 10"
b87ef1d743aa8c900a77928a6ea50eda3c6a869f,Add trailing newline to contributors.txt
88a9e963e8aa46e48d156a574d617626c9c4bf9d,Sign contributors.txt
5eedc1e65a2967891921eec2310cdb64490fe7f2,Java: add newline to version mismatch messages
3bf3867054c6feee0dacc02ced134498c97686f7,"Fixed exception clauses in JS template.

The generated exception clause block was missing a leading '}' to terminate the try block."
19c64701e858428d7434cf07f335a93cf3424d5e,"Merge pull request #2995 from tehbone/master

Fixed exception clauses in JS template."
74b8bb780d258a5b68e81ece0834ee53d74381e4,rollback partially incorrect fix for #2902
1b947ee74a2eac4bc61fdb1643b85ad619250de8,"Merge pull request #2985 from maxence-lefebvre/patch-1

:ambulance: fix bad import"
0ad70569b2df4286a0624bdda6614256a220549e,"Merge pull request #2996 from ericvergnaud/fix-js-perf-issue-cause-by-incorrect-fix

rollback partially incorrect fix for #2902"
3ea6506bd447b63a49a7d946bfe2d96915349505,Potential fix to #2980
0833b2e46e9e1f9f670aa1830efa912b97ac7b91,Merge branch 'master' into version
69937f4448930edf4592511ab974d51b7fe11fd4,"Merge pull request #2989 from electrum/version

Java: add newline to version mismatch messages"
4ce826a67e50d820b06c80d9877ba6d1fdc618fa,Merge branch 'master' into master
43d7eff27b5038ca0a41794985bdc7b69347955a,"Merge pull request #2457 from khoroshilov/master

LexerATNSimulator: avoid repeatable import of Lexer"
c87e55b6111318ad173f505fe1b2cb722b1b9d42,"Merge pull request #2997 from ericvergnaud/fix-js-code-gen

Potential fix to #2980"
50ecb47a425a06a8b9b76fbff77598f45908bbc0,ensure 1 statement per line to help debug
c4d0ace5f3bb8c1887dd186709a828c10a7fbd3c,upgrade ini
441b0d60e71603b168f271358a942255d41b484f,Fix typo
f19bb97ed0bc72812c6a842d9a5645d5dcca46c0,"Merge pull request #3003 from ericvergnaud/improve-csharp-code-gen

ensure 1 statement per line to help debug"
3ec57ddb85a158f286a8d466d78135535ba456e3,"Merge pull request #3005 from ericvergnaud/fix-typo-in-csharp-api

Fix typo"
c79b0fd80c9d200f2eae5af224913a5617801185,"Merge pull request #3004 from antlr/fix-dependabot-issue

upgrade ini"
f33a0f3d13907739150eb2303618db71d907ee95,always generate static const array first for atn
249ecf328b026ae7aaca4cc9299a9dc0a02049f3,added myself to contributors
4884a0fecb19687b8d073bbb3ca7e4757079c4b4,"Drop support of outdated net35, remove mono and vs2013 .csproj and .sln files"
11077ac15cfbbe80c93584a968fea63c3e6eebfb,"Replace netstandard1.3 target with netstandard2.0;netstandard2.1; remove DOTNETCORE;NET40PLUS;NET45PLUS defined constants, add NETSTANDARD20"
573f71bf7d9397a39b954c7ef05889f935eded35,"Remove preprocessor directives that check COMPACT, PORTABLE, NET40PLUS, NET45PLUS from code"
047005044dc45e69c6625c8b7682112d7c32cb71,Remove Compact folder because it's not actual
30d2b87f6371a0aa978ce6a721b549927f821b10,Move SerializableAttribute from Compact to Sharpen folder
ab7265958b9e9a055d6995edfde3ae129dff7ef8,"Rename Antlr4.dotnet.sln ->Antlr4.sln, Antlr4.Runtime.dotnet.csproj -> Antlr4.Runtime.csproj"
b09a185890fd859216ffd7686afb99a644933baf,Update README.md
d3026a2e43f7a7594c787945779c2e918930704a,Update Visual Studio 2017 -> 2019 in appveyor.yml to support building under netstandard2.1
cc58bce43cf4f519b62296a3e8f00e05b10e879e,Remove not used .ps1 files from build directory
626192dd9b2bfb9a2c883c6ce47c935071e903e6,"Fix dotnet tests: use dotnet on all platforms, remove useless files"
22967d3ccd78e17f7dd4b6375a3070cce7af9e12,Remove tests/ dir from .gitignore (it skips files from runtime tests directory)
dc8fc4f94f8482be2e7a08d4f7bb82f2d70c48cd,"Fix dotnet build, remove not used code"
b4ceb2022a1484af13df30604de342772a4d935a,"Simplify structure of csharp runtime files, remove not used .sln file, use PackageIcon property instead of outdated PackageIcon in Antlr4.csproj"
925c0a6b8baf38d5419f07a974a9f73dfc292753,"Fix CI scripts; use dotnet everywhere for testing; remove before-install-linux-csharp.sh, run-tests-csharp.sh"
e4b3ae9be2870f5434a7c3055c99498d9bec555f,Remove not used AssebmblyInfo.cs
a001c2f67bb506130af370e5cb37eac9076a0847,"Replace PackageIcon with PackageIconUrl because it does not work fine, remove Antlr.png"
ca2bfedb2c1c92f6370a33b4e385a553cecdff54,Fix .stg templates to exclude generating of invalid code if lexer or parser rules are not exist
92bee7d92984d23bca71d343ba3cd27b41f48c03,Check parser.rules instead of parser.tokens in Cpp.stg (fix misprint)
67f608926137110cdc775c38f2f0e3abb7c66259,"Throw error if lexer does not contain non-fragment rules, extend TestToolSyntaxErrors testA, fix #3000"
6990edd4d418b60c36af7fba07a5a43883ece2ee,Improve python3 performance via addition of __slots__
47e973414cdf0fd3d597af3ba2be828c13e34935,"Merge pull request #3017 from amykyta3/master

Improve python3 performance by adding __slots__"
e613eaee366eae7eccd267c3176b99a64b72828e,"Merge pull request #2987 from KvanTTT/CSharpRuntimeUpgrade

C# runtime upgrade"
d050e386353d6025bf59f2c632a875ea03c419bf,Merge branch 'master' into py3runtime_test_dist
491cb7861390e8916e824424a9a6df979bec1c29,"Merge pull request #2971 from mr-c/py3runtime_test_dist

Py3 Runtime: distribute the tests"
d063120c8708632720de5308d401035b40ac52f3,"Merge pull request #3019 from KvanTTT/InvalidGeneratedCodeAndNoRulesErrorIfOnlyFragmentsAreUsed

Invalid generated code and no rules error if only fragments are used"
9c7b56361c9b87ca33d13d4188247a06fff378c5,tweak docs
e24f97dc0d8513c8d8e78e4b3035fb86f428d033,Merge branch 'master-upstream'
eaa976e42538efece796e16e6418590adcbd6025,Bump version to 4.9.1
dab70eae4d4342c846f2bf853539dd5ec36f8295,add to ignore
53f1ced58c57ed34b7d684df565dfeb7000b8829,tweak doc
897fe1f3e669dd6a200d010377c8f41003310de3,rm git submodule for PHP
5122e15ca9870fd5a6896b9c162964230e83aef1,tweak doc for php
57e747b4d33a092a14e85032030f858de7853ca6,rm php from appveyor
534d95bed25da7909ecb599cefa41ca2c8248246,rm php from travis
c5fbf63b55d00b600b38aaf3e5d33814e8971d3e,update doc
16b6e49c94a1f7f68398543acd46eef5e645358e,set compat in swift
41f3f4928dc0d8aa2ba4869f3c4fb6b1a988c38e,"rm submodule pull, clone instead"
3b90a43f40d8db4081d44dc5c42287c300ebaf6b,"Revert ""rm php from appveyor""

This reverts commit 57e747b4d33a092a14e85032030f858de7853ca6.

# Conflicts:
#	appveyor.yml"
615d76dcda2cada00ed009534c6bedc5c735e869,add clone for php to travis script
547fd7cc5eb08474940e2fa34b37e8b9473d12bb,add php to travis script again
82113bde9b3fb6ef2208677e3906846dcc56b35c,set runtime/PHP name properly
00b98ddc24c00569c70fa269cd0750bfa89e1993,fix another typo in appveyor.yml trying to get PHP to work.
5c2b686f95e1a42f302fefd99271863bf25b2e06,[maven-release-plugin] prepare release 4.9.1
19ec50f38aad26515a44ef9e06f409e144d381cf,[maven-release-plugin] prepare for next development iteration
464bcbc32de237db2be6823b9519be8f9faa6f3c,tweak doc
baae110725f4d1b7151b66dcc0d774851833e319,Add niw to contributors.
67ed43189657b5b4ca7b239db1b2286a53893ac1,Add unit tests.
65aacabdad99e98d359f4982b89c5e37da3e4d9a,Use `UnicodeScalarView` instead of array of `Character`.
a38cdb6d95e1bbba10c2789a36e18cb0605884ee,"Use `let` instead of `var` when it's possible.

These usage of `var` instead of `let` causes Swift compiler
warnings."
f54c0e7cae4f3d97791ca983f34591d383aa8581,"Use array of `UnicodeScalar` instead.

Turns out, using `UnicodeScalarView` is extremely slow."
f26c95ff13b9dfa459ec4c3c8353ae7890e09397,"horrible code, but solves the immediate problem with latest IntelliJ/Java9+"
d34d2e1c271a1393e80f359bf1492dd4631701dc,"Merge pull request #3039 from antlr/fix-annotation-processor-class-cast-issue

Potential fix to #3038"
680a42e023c6c915577de52182dbb732081b2c04,No building tests/samples for external utfcpp
d2bc3a5cde6221524979990fb7319623e52c8013,Update contributors.txt
5dce78c87a9e65b938f069d01f29a233605bd3c3,Fix typo
10958043880b0f36d6ef056770a16f0128162406,"Fix swift warnings (#3043)

* fix warnings when compiling swift runtime

* more warnings gone

* more warnings gone

* Revert ""more warnings gone""

This reverts commit a09e221c41417fca652a2225e80845c0b0cbb832."
107f40c63cad4dfc7972f89c886df0e643915f76,"Use self hosted GitHub CI for Swift (#3036)

* Create swift-lexer.yml

Exploring self-hosted GitHub CI

* Create run-tests-swift.sh

* Update swift-lexer.yml

* Update swift-lexer.yml

* Update swift-lexer.yml

* chmod script

* chmod script

* fix typo

* Update swift-lexer.yml

* chmod script

* Update swift-lexer.yml

* Update swift-lexer.yml

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* Update swift-lexer.yml

* Update swift-lexer.yml

* Update run-tests-swift.sh

* Update swift-lexer.yml

* Update swift-lexer.yml

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* try java tests

* Update java-all.yml

* Update java-all.yml

* only run heartbeat when necessary (otherwise build hangs)

* kill hung process

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* Update run-tests-swift.sh

* Create mac-action-runner-readme.txt

* try prefixing swift cmd with arch

* try again

* try locate generated binaries

* fix crash

* try from script

* keep trying

* keep trying

* in progress!

* let's see how it goes...

* fix failing build

* more logs

* more logs

* more logs

* finally ?

* grrrr

* let's see if maven is the culprit

* fix warnings when compiling swift runtime

* more warnings gone

* works with 1 class, how about many?

* more warnings gone

* less noise

* Revert ""more warnings gone""

This reverts commit a09e221c41417fca652a2225e80845c0b0cbb832.

* try matrix

* fix failing build

* don't fail fast"
53b65c015c9aa3c910c059334040aa6bf34fbd99,fix #3042 in C# runtime
7a9a26c7ecb9d30f48e18eb097440946f9dd084a,fix #3042 in Python 3 runtime
a9f11612dd24f1857d33227ab1671720df14618e,fix #3042 in Python 2 runtime
329f1301ea6f413a4038f701086c248e45ab734e,fix #3042 in JavaScript runtime
e8dfc30f910c708c83593283de6facdc52aa3568,fix typo
559d5266484c5565d8fe2b15a5a2ed359bd71b03,fix #3042 in Cpp runtime
43226724350f73066de4498ab5f06c1fc56c22ff,fix #3042 in Go runtime
58da376bef2813973cbfdf61f1ac8a25f1db7619,fix #3042 in Swift runtime
954649d5aabdc483a7b7de7e4ea033d908744a6a,Fix various javascript warnings and typos
b050ac43de30a244d10126a276d314220083e80d,"Merge pull request #3046 from ericvergnaud/update-LL1Analyzer

Update LL1 analyzer in C#, Python, JavaScript, Cpp and Swift runtimes, aligning on the Java runtime
Fixes #3042"
020333deffc0d5181b046a8edad9f47d95b77b6d,work around Swift crash where reading hashValue on SemanticContext.AND instance would call the empty constructor (possibly a Swift bug?)
8227df1c1ef0faefb1f5b8247dbfb4e720faa80f,"Merge pull request #3047 from antlr/fix-swift-crasher

work around Swift crash where reading hashValue on SemanticContext.AND
(merged by @ericvergnaud  since @ewanmellor is not able to look into it)"
4c2ccdb2c0f6a873b871beb99ec24f203fc4b703,Update and rename swift-macosx.yml to macosx.yml
5b34cc1ec3750f31aef34405489356d9ab51e536,Update macosx.yml
47fd7026b309be4967672350bc403cf7f7e7ca1f,Update macosx.yml
142a32ed5a72c6f4b11e86ab7999719fc2dee69f,enable self-hosted CI for cpp runtime
4d0bc718dfbdb0d1156ccb8ced9b7fbd6370bf3c,no message
d3e2fdae79937049d9ad60fb08e6bfd635684085,try self-hosted CI for dotnet on mac OS
daf633643003969bd921c6081baee6628d3363ff,add script
0caddd86342c3a8d98ae3bc506ee273997c34a13,add dotnet path
92f4c0707b98fac6c2dc462a0125bae835d12667,fix cd
a5589d0dabe0dac61834dc92046bcf2f71a8e405,fix cd
0fa457a36ea818cab2ce7736fb330fca3adcd6b0,avoid concurrency
b3542834a5309c154976478a208ea2484b3923cd,add Github action badge
6a7c3ad256e6f7486a4857c678b311d1d3f8a375,more feedback
4830925ab0021ba362920bdd0eacfb6b76db74f1,reinstate all builds
b2b17937000db15cf323671940112d4061b7d141,"Merge pull request #3048 from antlr/implement-dotnet-ci-omacosx

all MacOSX builds now work using self-hosted Github actions workflow"
05f422268a611949e1d809f335fb36acbf67ddc1,drop unused script
84d8348dc1633e50bbb78e681622627bdf52e845,fix disk space issue on MacOSX CI
ce479dc228cf474071e5cfdf933c1db7600c3e13,Fix for https://github.com/antlr/antlr4/issues/3049
cf16ec791ea32c1ccc7e2bace84c9d79f1788f84,"Fix missed version, https://github.com/antlr/antlr4/pull/2987#pullrequestreview-575417430"
bca2536f3fb689e6e06b8351c71571f8e837f71e,"Circleci project setup (#3055)

* Add .circleci/config.yml

* setup config

* use jdk8 image

* Updated config.yml

* Updated config.yml

* Updated config.yml

* more targets

* Updated config.yml

* update config

* update config

* update config

* update config

* update config

* Updated config.yml

* Updated config.yml

* Updated config.yml

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update runtime version

* update config

* update config

* python3 config

* update config

* align Python2 and Python3 test hierarchy

* update runtime version

* update config

* update config

* update config

* update config

* explore dart issue

* update dart installer

* update config

* update dart installer

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* use sudo on circle ci

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* Fix NPE

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* update config

* more consistent badges

* do not parallelize tests on circle-ci"
8b05471e6cd8cac5e64492cd1f465150a282daa1,Fix NPE (#3056)
5521eb2936f7c26fba3516a4bbdc98348f42cd27,update readme
f37dfef7e55147e6b6e37f1ae895595a936a86e5,"Merge pull request #3054 from KvanTTT/MissedVersionInCSharpRuntime

Fix missed version in C# runtime"
365a56f10f86608268243f99c070e2758aa9a2f9,"Merge pull request #3050 from kaby76/issue-3049

Fix for https://github.com/antlr/antlr4/issues/3049"
59f1f581de0075e9c8620868c7a8532b5ec5c1b0,reduce noise
2fbc00a8f0e6f01a7f3605a032572b357bc2446a,Merge branch 'master' of https://github.com/antlr/antlr4
68ea904826555a40d812167d014bbc6829e9b517,change action runner sequence
36bde45396444b15bb15e26590619201520f88ed,Update macosx.yml
be7bc5d81b91d40a1094ab794c3abf568bb806dc,Update macosx.yml
3c67a9d4eaa2ce31b5db0758efe5b393d45fc935,"Merge pull request #2967 from lingyv-li/patch-1

Include prerequisite documentation to publish Dart target"
8bcc12de28e4a8f5fb582683d0f6075621fc8ca2,Fix #3052
ac9d62a99459d75b8766aa88e6a4b71e0e158151,"Update contributors.txt

Fix #3052"
62a0b02bf4608a225f803068774f1aa3881dd4a0,"Merge pull request #3053 from l215884529/fix-3052

Fix 3052"
e50ecf49615887b1914e50a069a6f9c7eb92f7cd,"Sanitize test code base (#3061)

* sanitize test code base and factorize common code

* fix failing tests

* fix failing tests

* fix failing tests"
ed2631b2d0e612a66044e3c405bbe9dcda1cbf0b,Merge branch 'master' into patch-1
4b649103f31e0c0bc3bd0bb964efd0dea6b9f5a0,"Restructure C# runtime and fix Issue #2693 (#3057)

* Fixes for https://github.com/antlr/antlr4/issues/2693

* Adding script for comparing Java and C# profile output.

* Update lexer grammar.

Tightening up the grammar rules. Still Java9.

* Tighten up grammar.

* Adding in new base classes for C# runtime tests for profiling.

* Complete test for Profile = true.

Update ProfileDescriptor to now parse and output profile. The grammar is asm8080 from grammars-v4, tightened up. The input is the example provided there, truncated to included fewer lines as that causes a null-ptr crash with the older runtime. I verified by modifying the .csproj in /tmp.

* Restructuring the Antlr C# runtime so that it is consistent with all other runtimes, a source directory (now antlr4/runtime/CSharp/src), and a test directory (antlr4/runtime/CSharp). In the test area, I added a test for profiling in issue-2593. This test requires the Antlr tool and Antlr C# tool to be build. The path is assumed in a relative path to the test, ../../../../tool/target/antlr4-*-SNAPSHOT-complete.jar, with globbing performed. The test simply checks the return result, output not important. There are no changes to the runtime C# source files other than placing them under src/. Several other build files were changed to reflect the new location of the Antlr C# runtime. I updated the instructions for users on how to build the runtime, including information on checking the environment--now explicitly specified here so people know what to install!"
f7b4100fcc7da61044475bbd22fdf54052fe55e5,"Fix TextIO compatibility with Python 3.6+ in LexerFile (#3067)

* Fix TextIO compatibility with Python 3.6+ in LexerFile

* Sign contributors.txt"
a60c32d36933758b63662cdade0a2705ca460804,"Fix an issue where test files were not deleted on MacOSX/Swift, leading to disk space issues on further CI builds"
64d49cc4d80ff71b3e2938d45cacb13b01c2dbea,add jest for testing
25196001d743b8e8cfebd777a142dd3af09f8d2e,add test
e99363ac1a0880ac94bdf9643087d959d9d37d21,"fix typos, fixes #3075"
f0ca1140a7606384b05e196f5e50f389fc576a69,don't delete symlinks content
9668ce7dbbb2d898557d4c3ef4cc43950e3145a8,"Merge pull request #3077 from antlr/fix-javascript-intervalset

Fix javascript intervalset, fix #3075"
586721462c0a90198b2b0119f52812857d1a2852,Fix #3078
26291a11d8baab70ed946b56cb151a90fc34de8d,align debug output on java
94f9759d1436fd5bf32c1c08a738fe921bbf3f38,fix #2007
00fbf951835b664017462dc6490dc905eef110ee,"Merge pull request #3080 from antlr/fix-javascript-semantic-predicates

fix javascript semantic predicates"
c0cc0fd8a40f522253b18574275c5aff714f417a,reinstate PHP ci on circle-ci
6647c6bb0db32832ea2ac73a05ef2482c6043d4d,install php
f13debd8856cba2ff383fbb90c51ddea492cfff2,try hhvm
9f03a7f987bc2fdce45bae92a324db126181c6c8,try apt update
f670a3944dfe95e9745cb367df3fa10f1cf3da13,grrr
88b582a73ca54d97a60b90adfc9e686d65809fed,try again
2f12fa2688de219be5df21febfd6cc9805a82b63,add composer
a95897c3fa79f558ca843aa7e1aca200465f7fea,progressing
e56f8abf3b339709b6bf27fd4c03720778075ac5,getting there
e414c829cfb7857df922d22eab6441c5f37e8de0,try again
ce3700f3a076ebdf0bc10f3c0bbff2a0930b443f,change package
bb7e8bae42beb2cc4630691d8f914e50304f8287,reenable all targets
5719d3496c8293916d28a6ac4719d0705bd34131,"Merge pull request #3081 from ericvergnaud/reinstate-php-ci

reinstate PHP ci on circle-ci"
12be1d299d9e395c545f8ce6784ff567b7e9a563,"split appveyor ci (#3082)

* split appveyor ci

* use appveyor matrix

* fix config

* analyze failure

* fix java test job

* troubleshooting

* install node

* troubleshooting

* troubleshooting

* troubleshooting

* troubleshooting

* troubleshooting

* troubleshoot

* troubleshoot

* troubleshoot

* troubleshoot

* troubleshoot

* troubleshoot

* troubleshoot

* almost there!

* full build"
c0935e190bf045ddda68bd1692cd9934a32a8c75,Add missing single quote in lexicon.md (#2254)
1281fb770e3f63ffb8467679f0c1f2e7dbd7d132,update readme
84722e9fcc57157308d8a786f018ac2a0e04147a,"Fix javascript intervals (#3083)

* run jest tests in CI

* fix issue when merging sets of intervals

* fix CI config

* improve readability

* more tests"
66bf523beb72a9c44dd88eb80d74b528acf44d63,whitespace cleanup
98a3f7d6408f35641141ed445579d0a63e53bc61,allow override of CMAKE_CXX_STANDARD
03ee69bc3f9555ac4e96c0a6d6183a8a1c382b73,add example showing how to compile Cpp runtime with a different standard
a08edf89ce6733ef7f19394b214ed9dfc7d44cdb,add hints about C++ standard to readmes
83911369ad92dc6036210e30b0cbd9beb5bb02f4,Merge branch 'master-upstream'
fde0b28dfbd6f358e548b49b29769b52182e5be7,"Merge pull request #3071 from felixn/cxx-17

Cpp target: allow building runtime with newer C++ standards"
3074c7f10fcfca93eae0cf3fbaa5ec6440f34413,fix a typo of case sensitivity
c3ad8fca0adfd9a2d3159d14b5e16275ff6bd8f3,sign contributors certification
60fd27ff93a82e41ac4414eb6d5b17afe979d91f,"Merge pull request #3089 from namasikanam/master

fix a typo in the csharp-target doc"
ac10e7bb79a4b6628f6f1bf9c449145e751f9144,contributors.txt: sign it
5a808b470e1314b63b0a921178040ccabb357945,"Cpp/runtime: use utf8cpp from system if possible

Try to find system's utf8cpp first, instead of downloading it from
github. utf8cpp 3 defines a cmake package, so we can use find_package.
Older utf8cpps don't, so we try also find_path. If all that fails, we
still fall back to github download.

This is needed as distributions cannot download stuff from their build
systems. And people want to use libraries/headers from the distribution
anyway.

I had to reorder the file a bit, so that the libraries are defined
through the utf8cpp detection"
bef50a832f57155a850f54af9a003131aef943de,Fixes #3096 - antlr4-maven-plugin is using maven-project version 2.2.1 dependency
1b791a86947d0e6a28946903e10840d2cb8c7a1d,Fixes #3093 - The antlr4-maven-plugin is not marked as thread safe
947ca90f5bd260c199c6cbfb20bfce861d6ed255,Swift InterpreterDataReader and deserialize fixes
820a00e10892e367e1df6ecbd3edfd34aadef33e,Swift InterpreterDataReader and deserialize fixes
afc6759de81fd05a526e8141bd34408caa397977,Swift InterpreterDataReader and deserialize fixes
6b7d5a594496fac26012446ef4043a4a826f0710,optional unwrapping
f6d8f28cd7a1b1143f8f39adf372be250a838b60,sign contributors.txt
2bd6743e493b7d26641f7bf0cc613fdcb18a6593,undo incorrect change
31dd28630e8d91d1510b66fc93b45c1ec8e918fc,fix javascript import in example code
715acdb44a675f032da60139d29905b0c27e8558,"Merge pull request #3094 from khmarbaise/issue-3093

Fix #3093 - The antlr4-maven-plugin is not marked as thread safe"
ab2b71ce420babc79f2452b1976f7be902c5f218,sign to contributors
9af2480f486e463fcd922a12f2aa9e21c46beb43,Merge branch 'master' into patch-1
dc460a0514b717e6e27d795fdb13f1cbda95c854,"Merge pull request #3100 from hackeris/patch-1

fix javascript import in example code"
f3c66c2b5e45ba1cb3079406f93c438b7d6eb5c8,"arrays are not classes in Swift

unlike in java, where this was transliterated from."
9013a5c9c4e334575020407fb17b12e6482e6441,sign contributors.txt
76975c15ae4539c4d62d6134e8c8c7c847749602,Merge branch 'master' into bettercpp
d0a4eacea58ea7bf097a4e37f691e430a0c20249,Fix for #3079. Change ConsoleWriteLine() back to Console.WriteLine() because the debugging output is NOT a format string! Added a test in antlr4/runtime/CSharp/tests/issue-3079
12dcef6676a0d34c676899b2c3ed12bfbb6c6a82,Add check on valid parse.
0f8bddcbc14b3519d04fdda9bd8991fb16981214,"Merge pull request #3009 from xTachyon/bettercpp

Serialized ATN const array generates horrible machine code fix"
62a829fb659d3f421296d6b406b1bfbdf5f0903d,"Fixed ANTLRInputStream and ANTLRFileStream

A previous change to add std::string_view support to ANTLRInputStream for C++17 caused some trouble because of ABI changes. This has been changed to define 2 constructors, one for std::string_view (for C++17) and the original one for std::string.
This is turn caused an error in ANTLRFileStream, which also takes a string in the constructor (but handling it as file name instead of input). To make this clearer the c-tor taking a std::string has been deleted in ANTLRFileStream and the class now requires to load input via the loadFile() function. This might cause some trouble for those users who had used the std::string constructor of ANTLRFileStream, but I think the better error reporting outweighs the little annoyance."
faa64fdfa7be741326f14d328d8736d446cc12cd,Merge branch 'master-upstream'
93c06214a6fc0029fd1c8c32b7b6045e8cbc6be3,Fixed C++ tests and build warnings
f881e3ec3f85e4a23e683ec78f0a54872e74cf58,Wrong load call fixed.
84d4ce73defff2d30239510daf80974bb51bfa5b,"More changes to the ANTLRInputStream and ANTLRFileStream classes

- Added a default c-tor to the input stream to avoid an ambiquity.
- Changed the input stream API so that it can take a string pointer + length and use that for UTF conversion, avoiding so unnecessary copies. Convenience methods exist to use a std::string or a std::string_view.
- With that only a single load() method is necessary.
- In ANTLRFileStream the other c-tors are now also deleted, as they make no sense there."
5731e64e224ffcbc2fc556ae5670b9c4c6ff8ec9,Added a sanity check for input size.
9d1737f33b5fd9c86cd2b611a8d54419066af372,Build fix
ff629d543a7290bc6d76d0109f0b81c1ff9893ea,"Another build fix

C++ is not <any other language where you don't need a useless constructor>"
4431f1ff69f24c92ed45f9a00f0946a8830dd99d,Small improvement
d889ba86681c75035ccab44429bde2d79f6fd6b1,"Merge pull request #3113 from mike-lischke/master

Fixed ANTLRInputStream and ANTLRFileStream"
8d621b73b6af5954a412192c38c12f17e171ed3e,support new anaconda mac location.
cb4e59d420d5749d457a37b2652732b5969e5d67,bump version to 4.9.2
5e5b6d35b4183fd330102c40947b95c4b5c6abb5,[maven-release-plugin] prepare release 4.9.2
2b5bb2249e3b5f13f30f7cb87b2745879adef2db,[maven-release-plugin] prepare for next development iteration
c0e22b99d67d04572b0eba1930733e36ec21ae68,js build modified some files
c2f104cd0810fa2e09a44f8030d1e54c135a20c2,tweak doc
4207a50ce1dab98545be5f56b5539dc548627bf3,export recognizer class for dart target
20a4d9d138f33c69ab329a6a86700f38c71dab79,always trigger enter/exit rules (same as Java/C#)
d82e8921a6ce5782caddf4b726f02bc4dd382c33,Fix issue where original ATN would be damaged by IntervalSet operations. Foxes #3216
3590d4d5e18c4ad486058631a90d5131a3c157b4,"Merge pull request #3130 from antlr/fix-3216

Fix #3126"
e8490d8dbc7c37e2801d546304297476851a919d,fix for data race warning
02f6a0940675164c4801ac269b9de0c22cf90c67,adding contributors
e7bdb71a2863f5e9555d4539a32c03408669269b,c++ finally don't use std::function
4dfacf63e228d616232df90e4273e608d69a7f44,"Merge pull request #3144 from xTachyon/on_exit_opt

[C++] Performance improvement in finally"
0172e8661f97544627c74a65ae9f8cf8994e6afb,Update ExternalAntlr4Cpp.cmake
e6023b7555186594221e1c83c7cd2303f9ce0ba3,sign contributors.txt
32389612410740ee8ea3a979a92bdc9e8882d89a,Merge branch 'master' into patch-1
6a46c1dcb0533effd22d9e1723149fbdf9b97142,Update contributors.txt
c254f009214e0d92290f9859c7e2cbac5fb01907,"Merge pull request #3146 from b1f6c1c4/patch-1

Fix typo in ExternalAntlr4Cpp.cmake"
765de17f2a383a1b8ca83a48b0e2f0fba22f2290,"Merge pull request #3073 from jirislaby/master

Cpp/runtime: use utfcpp from system if possible"
eec33c52100fbc72db3287d20302050d6d375aac,Merge branch 'master' into patch-1
b71f6894c7cbfb7aeacf64fe792bcae77cb64cc4,"Merge pull request #3040 from bigerl/patch-1

Cpp target: No building tests/samples for external utfcpp"
697074c3e9a9733662095128572180777ea3f3b1,Merge branch 'master' into master
4b4ca4058a6b5bb46b3388ffefce1d621687b06c,"Revert ""Cpp target: No building tests/samples for external utfcpp"""
478e46409e82997aa31fdce8c9ca5bbd5e887e17,"Merge pull request #3149 from mike-lischke/revert-3040-patch-1

Revert ""Cpp target: No building tests/samples for external utfcpp"""
f901c8d39a49389c2889cbb68d4a382ca09e5a24,Merge branch 'master' of https://github.com/antlr/antlr4
e404d26f614291c0dbace9f42bf77cd435919271,"Merge pull request #2849 from mattpaletta/master

Added templated move support for antlrcpp::Any"
38b1dcf769dbf1fb250a7863db205657adaa357c,Update contributors.txt
11b9df6bf828785029c0c288cfdde33da2c3e512,"remove duplicate word ""support"""
49cf9d4fe2e5b462bd45b9ec162191cf761b6f94,C++ runtime: disable build of dep utf8cpp tests and samples
d5e8ada699d7382c17c2b08e75a7695339db54d3,add bigerl to contributors.txt
62554204404fc7636684ba457688b54191463996,"Merge pull request #3164 from bigerl/patch-utfcpp-build

Patch utfcpp build"
d61ff91fd85990192d2f55a8cacec820462fb4fe,Add Docker image for transparent calling of ANTLR4 from a command line.
d15244056e2bea80de34ec58b7ff9a5f40e99ba2,javascript performance optimization
acb65be4ce5b2c7c669aef97417f8092e72c48bc,sign contributors.txt
a22eab4f128dd03b3bb88c1fbbad9926845fc946,"Merge pull request #3172 from redexp/master

Javascript runtime: InputStream performance optimization"
bb70e6e6e47a05147175bac0a163d88c46233f75,Merge branch 'master' into master
a4a23e77cbd8b4272ef864d3d261f1c8934efb35,"Merge pull request #3154 from JaggerJo/master

Remove duplicate word ""support"""
727c330315323e52c01f40c3c9fcac03a4b5736d,Fix conflicting contributors.txt file after merge.
f72d3d9bab4de8a7f215417332ce284d73e001d4,Fix typo in documentation for alias
88ad58426b90bac1b2da629e6ec58c959b1e8178,"Merge pull request #3170 from michalharakal/master

Add Docker image for transparent calling of ANTLR4 from a command line."
c37cfeb7559dda1561b442a65b2e55622e8fa07f,Add go.mod file
361764a1ed177868b96830dca5975a2313ec53d0,Update contributors.txt
38ddc28e6e15d11e2de4b215ffbeb1f9dcd6b667,"Merge pull request #3176 from Joakker/go-mod

Add `go.mod` to go runtime module"
916f03366edf15bf8b50010b11d479c189bf9f96,"Add LICENSE to go runtime
For the docs page to show up in https://pkg.go.dev/github.com/antlr/antlr4/runtime/Go/antlr,
a LICENSE file or similar has to be present in the module directory.
This commit adds the same license that is at the top of the repo, so
there won't be any confusion."
c3c4646d6928e8d356263c1e640f2c5eb4477b90,mark1
a38822177252bcd2007106dc66d274d0a87556ed,mark2
2f5d65f0717dc1584c2a79453daae76f04130bf6,mark3
0311059566e8398296a7cc20d86d03a6b94770d4,mark5
88d9c25c52191c39af88e5475944657341a116ff,dart.stg
0c6f27490bf29597ad7629dd0309ff82543d09d6,fix AltLabelStructDecl
c42525f811d08e59ee91d3ba5743f0f74b128441,optional NoViableAltException
2fca64be4205b2e91d80b4e451451ba4a80f2270,try dart 2.12.1
0569282428a9eef4cdb5f0e1712ea294dae7cd75,fix dart version for testing
bc7e101e2f0e79ff63c16417f7775d8e71b1ec76,Fix warnings
0afdc5a7e93417be4d3591fff381884b2420ca7c,add dart sdk to generated pubspec
3d1c248946e131516a6a2db22c364db56148cf6c,before install linux dart
fd993c4a76b3bde830537bcc08d6e9bf94d0abfe,update nullability
6f38656987cf98093b812127ef620dd7f10f8624,trying to make tests work with the latest version of dart
367505e2bd7875c5d9ebf6e313ce86239441891d,add cacheDartPackageConfig
7c2f461d58027bb1d234324432f083e205efe272,fix some issues
c6b8c0b496b7edc17ba2fa48969f6dd55ddc7048,first few tests passing
54f611726787a40cfe9aa836e089aec2315bcbde,fix print error
866866302184445a7772723e600de662105bc75b,"a few more fixes, i think"
5cef0b52baf4bb263f57161d14a4345c115d26ff,remove unnecessary !
b4bc7be925167b2237402e6e8dcbb8911e6e452c,different approach
48a87f5c92772ead950793c37cfd1fb6a90523cb,"startIndex and stopIndex default to -1, to confirm"
a0b5c93debf504427f7d00b6f1efe9a953c4db56,Fix some tests
5deefa3ed59f557caeb597bd606ad77edb5ec6c0,set min sdk version in md
4ca673974948db3d2dcabe3c3a8d3c1fa6938a23,Rollback getchild
4dcd4ae2c3b8c6f135bf48209661742928f47abf,Grow list as we iterate
d5c901d7ab31115c0f22c69b52907c7fc1732030,Remove todo flags on decision info fields
2fd16d4fb0d03cac81198982da88843f9ba68076,remove todo flags and make ruleToTokenType late
7f69524295125074b4c5afb46ccafa7fc3a6d9bd,remove remaining todo flags
7a5a6f614a14508b780ac5bafdca4ed187f8ad69,review mergearrays
add83f111325d0cbba6ea3bf7ef1575d2db8dc9f,turn logs off
37393343ba22344a7d73ee90a7e46ae63bd90adb,remove optional from int
c20190505085b3b797d6d39f9c16ec7a1a79d0a8,add dart
0a1c3e3ce1ca2226a7de9833f906a307a1b0d9b7,"Merge pull request #3116 from renancaraujo/nnbd

Enable dart non nullable by default (NNBD)"
3601dcad5d177463f498a198e8302df77337509f,"Merge pull request #3177 from Joakker/go-mod

Runtime(Go): Add LICENSE to module"
4352807e715a94a620e37a6eecfc633cfc52509e,Indent JavaScript example code
5c8b0443eb47e155da3e8fae66ac5b6b928def34,Fix indentation in JavaScript example code
dc66788476a7e98755bdc45f26affecaba6d2b71,"Merge pull request #3181 from quantumsheep/patch-3

Indent JavaScript example code"
f560670b6bf467c994ef2855637d7db1f2467681,Fix tests for go runtime
f0d4d129b7f146c314101bd3c99e630dc433af50,"Merge pull request #3185 from Joakker/go-tests

Fix tests for go runtime"
b915242cd638fbb3ff5c14a05600abc3b2e2533c,Making compatibility with actions and predicates in Go better.
c5ad59b459ecca2713337b4c7b8c85ca0381371a,"Merge pull request #3174 from mitar/go-compatibility

Making compatibility with actions and predicates in Go better"
acab5ef3b6fc58f9b6f10e67312e69672d1fe296,"Update README.md

Corrected/clarified the Linux compilation instructions WRT how to frobnicate the ""cmake"" command."
4736bcb1e3bcdbe5d050e7a18bf423d59c21c1ba,Update contributors.txt
31f322f379fab07246c47a94a06181acb5c1aba6,"Merge pull request #1 from Abe149/Abe149-documentation-patch-1

Corrected/clarified the Linux compilation instructions WRT how to frobnicate the ""cmake"" command."
e476a9c6765f01243441209f626887508efe2d6d,"Revert ""Throw error if lexer does not contain non-fragment rules, extend TestToolSyntaxErrors testA, fix #3000"", fix #3147

This reverts commit 67f608926137110cdc775c38f2f0e3abb7c66259."
6fcd810023edb2bc664641ee32a580f7b3069128,Added .NET Framework 4.6.2 target.
baed2129cd8802a3b73e6942795c9ba3a670c53a,Update contributors.txt
8cca5c15b482a0c9a77de0e80d52e3dcf7463237,Target .NET Framework 4.5.
413943d51246e5b26bcdb546070eec703d525896,Fix typo in Go code generator
d4c9f1e2dcd3204af95af99fa607702c23f18c7f,improve debug messages
01b24c48b6f7a3933886613b5e5028c2544daa05,Fix dependabot warnings
95cacedfbacb7a55b75178bfd242e1630a92bda4,improve CircleCI resiliency
7f63f1dadb29c0c40118c7ddf232c6f8a445c7a4,also fix MacOSX CI
1512ef30bea0d1992cce8f26470908d48dc5de3c,improve CircleCI resiliency
04f47681efa7c8a0921519c4c1faa1bf2eb5462e,"Merge pull request #3214 from marcauberer/master

Fix typo in Go code generator (fixes #3204)"
a80295a60b3ec63dbdc2f28d5600eaf0017cb7f7,improve CircleCI resiliency
e1e5969e3154c456fcd85edf64114238681181f4,"Previously, in python2's runtime there was a typo where we used '.readonly' when the property was actually '.readOnly'.

Since the java runtime uses lowercase 'readonly' throughout, I have
changed all 'readOnly' properties to 'readonly' (lowercase) as suggested
by Eric."
a231a1a7f1cc9c8cf9bc97c65ccce61e0509f35a,Merge pull request #3228 from renzhentaxi/master
a5e2c865944c21bbf3844cb36463f1523d656a6e,Merge branch 'master' into issue3212
de16b7cfc31b45f888db993d8e27d44ce56e4d07,Clarify javascript docs for generating tree
a2d85c09f38efebb76cf1e942aed37a2248a8c11,Sign contributors.txt
531c74edd5b479f55adb7c574e59ffd2ad92b0d3,keep consistent with Java
c71fa7eae68e55f9dac82242792be0a43d3c54ec,Merge branch 'master' into fix-data-race
b358b509191a0e076193cee6685256f9df0c7fc0,"Merge pull request #3137 from minjoosur/fix-data-race

Fix for #2940: fix data race warning in Go"
88c2159aab9e5bf281b4680b62060b3b2c0dd23c,"fix: use 32bit murmur3 same with java, implement array2dhashset which copied from java and reduce hash problem"
0757d2c992f7b7ed5b219222395ea517cdd4574b,"Migrate from deprecated `dart2native` to `dart compile exe`.

*  `dart compile exe` is preferred since Dart v2.10 ."
7f4655c9c087fc4ad131c38feefe1c80e37ec137,Merge branch 'master' into dart-export-recognizer-class
4a87f45a28a07195abfcb28b0527e8036b862bad,add case changing char stream sample for Dart
aeadddcb23b1daf6e58547ea7f5f85ad5fcf243a,"Dart multi-platform builds through conditional imports and exports.

* Reorganize dart:io usages and support 'io', 'html'.
  * 'ui' and 'isolate' TBD.
* Rewrite bit operations with 32-bit version because Dart2JS does not support 64-bit integers."
0acf3a976d75f73b5282c97cb98d36fcecd05cef,Run `dartfmt -w .` on Dart runtime code.
0ae4e337728199332d49429e46f7b4206438a35b,"Dart multi-platform builds through conditional imports and exports.

* Reorganize dart:io usages and support 'io', 'html'.
  * 'ui' and 'isolate' TBD.
* Rewrite bit operations with 32-bit version because Dart2JS does not support 64-bit integers."
322ae840613de4cf40c25a83a940bc56adf9a57f,Run `dartfmt -w .` on Dart runtime code.
5af2520c0fb112dd1e522938cdeec8e5f66384de,Sign contributors.txt.
97593edc630ff1a39b0eb2532761a011813b5959,Merge branch 'multi-platform' of https://github.com/ansiemens/antlr4 into multi-platform
9e8cb26988f0d60b6684cdecece33da35a3090e2,make Python2 runtime keep consistent with Java
f22c2d31697f2718a60da22551391bbcfd793e61,Workaround for windows build issue #3248
3b9df9fce2559ed511ee72ee4d098e7e358bb73e,"Address comments from code reviews.

* Reorganize platform dependent files.
* Replace `pub` with `dart pub` in tests.
* Update runtime template to be platform dependent."
72959e2a24eb18bc73f414674e784c2731b356b8,Update tool/templates/codegen/Dart/Dart.stg to remove dart:io.
a2a661b38c7493e5de238521fe790aeb94470a4a,Add missing #readStream to platform_html.dart.
8b9315b7492a9c22e90c9dd87a84b7b1d7728d54,Add Dart runtime examples for both console/web.
1b7c88888d205f731441c7679cb5f2cfc0db4504,Remove examples and update CHANGELOG.
2fd67e8f0d42766305a4a962fa189c1d0bc2e10e,Merge remote-tracking branch 'antlr4/master'
e07593b0ee69c5705048097c517763d970434d28,"Merge pull request #3250 from ansiemens/multi-platform

[Dart] Support Dart multiple platforms."
5a428c4a9e53c797df329cef1685146ba01582e3,"Merge pull request #3239 from rachidlamouri/master

Clarify javascript docs for generating tree"
10b0a2e091a47ee2b1f1d3d5c935dbf0b419d4c3,"Merge pull request #3252 from Vladimir-Chan/master

make Python2 runtime keep consistent with Java"
b48c857c3a0ea4329686abe99276dddd991a7724,"Merge pull request #3241 from Vladimir-Chan/master

keep consistent with Java"
03e6a939fcc877e2934c2e51e13db7ad2bcc20bf,"fix dart target crash when parsing high index options
fixes 3198"
70b3a7e0b3ba0e0abeeba49ba720571b717ab926,Merge branch 'master' into dart-export-recognizer-class
ab9dc38bc623790e384ce09881d39c3c375b553c,"remove genPackage support and supports superClass
fixes #3141"
e56a706d3a5f66053e500a1626967058a88481f6,Merge remote-tracking branch 'antlr4/master' into fix-compiler-warning-cpp
4f80a5e09cd05dad978b89095a4346755f92bebd,"Merge pull request #2773 from jmcken8/fix-compiler-warning-cpp

Fix compiler warning cpp"
c88c9a4acf9f389c219e937f46b0d7c580773e2f,improve logs when debugging
711315c58edb2f186ec111ae2c0b56c7ceca31b9,fix issue where read-only Interval would get corrupted
98368eeefcb1feac924c2ac3441ceb14b268653a,remove redundant slash in getting-started.md
9f940fcd86db94f022b5afcd69ad93ac8458d815,Merge pull request #3237 from ksyx/patch-1
fc90190ddb8c93fd4bf1e580f77da3ba94e371bb,"Merge pull request #3275 from antlr/fix-bug-3270

Fix bug #3270"
ce3c483ec50592d8e265c644e31ec5e8261c87fb,fix JS dependabot alerts
00cf3575dc0ec0fdd04f98f784fe4ec5900582a3,"Changes to Mutex-es to guard the staticly shared [DFA]

By sharing the mutex in the same way as the DFA array it becomes possible to run in parallel

Added a test in ThreadingTests

Fixes: 3271
Signed-off-by: Martin van Wingerden <martin@martinvw.nl>"
f68ee17aa1147f5fa218adcb2d303f0436b7123f,Check length change for case changing char stream
860620a2f11631047fd5b60eef80a5ced72e71eb,Merge branch 'master' into fix_hashset_and_hash
1f7fee21596200a6de4f8bec34b3f37b603a7f86,"Merge pull request #3243 from jjeffcaii/fix_hashset_and_hash

fix: use 32bit murmur3 same with java, implement array2dhashset which…"
038c735f9042c62e64d1405067ff77babc3a2620,remove late from generated class label members
227c1511692f9b656b17f1efb3a16a289c6e58d7,signed contributors
9f07205cf7a4d28b91f8890fa1521d162a52dccb,"Made the test more complex to have different paths

Signed-off-by: Martin van Wingerden <martin@martinvw.nl>"
8f405789f9f42b00f7b069135b9879ca14ce651f,Merge branch 'master' into swift-optional-unwrapping
9db8c9bb709b3e67bad82c524e8ab2f7015b23ab,"Merge pull request #2901 from Dante-Broggi/swift-optional-unwrapping

[Swift] optional unwrapping"
7bd1d1676186bbbae5cf3d503d3616bf8b29b005,"Added on more part under the same mutex

Signed-off-by: Martin van Wingerden <martin@martinvw.nl>"
1a91833df5d973c115d1d4e7878c9821a2b97f61,"Fix count for test

Signed-off-by: Martin van Wingerden <martin@martinvw.nl>"
f61076ce325329880bbb28ec5afeffa38aa840eb,Fix dependabot alert
db0485fcd6bdd354d362e8747c7e226242fa775b,Fix dependabot alert
24cea2569c4a75c4b37dcea81de94304da8ded8a,remove yarn.lock to avoid confusion with package-lock
90e8b008d41d635fd03f15455ac52dc98d192649,add heartbeat to csharp/recursion
4611a705d3824433fd865ad0c5e2ee94ad10c032,"Merge pull request #3290 from ericvergnaud/fix-circle-ci-timeout

add heartbeat to csharp/recursion"
27e799df42636a1d5f281e030771c68ff4b5ee24,"Merge pull request #3289 from ericvergnaud/fix-dependabot-alerts

Fix dependabot alerts"
886d244c73ef875516ec41ac7199f8dd215cf3fe,"Merge pull request #3276 from martinvw/feature/issue-3271-fix-mutex

[Swift] Changes to Mutex-es to guard the staticly shared [DFA]"
e3e18de1e25ded292a04134a49b5d52e8af007ca,"Merge pull request #3213 from macrobond/issue3212

Added .NET Framework 4.6.2 target csharp runtime"
edd067e00ef7665f37886cd2b255c05add153be1,Fix dependabot alert
a63a4d79b71ce50e4aa4b01fe4ffb067d78a2908,"Merge pull request #3291 from ericvergnaud/master

Fix dependabot alert"
1f97858ede27ba6c6f19f2eb9a583f5e279ab2f3,"target is dotnet, not csharp"
885eca602255e1b00c74d74c2ea2211afb0fbb47,Merge pull request #3292 from ericvergnaud/fix-dotnet-timeout
e5df6ab3fc4f537e8affcb0184231b8584e0f9ac,"[Go] fix antlr.BaseLexer null pointer dereference

Fixes #3254; this is the exact fix recommended by @kaby76."
34aa551627c45b00a40c7a345432289a8014ef43,chore: sign contributors.txt
36b53ba5c42a4fa248a11dbc05d0fb1ded733587,Improve issue template
01de314d78835cc29ffe7c55edfecb76e2e84d58,"Merge pull request #3294 from ericvergnaud/master

Improve issue template"
119c163e4342e9d5c88f36af4a0f9f0ffd67fc95,Fix link in Docker README
95f9032f0304c229cf12fc2ab2d9bf58f2b48cb1,sign contributors.txt
47a98ef2457dcdc5c09b1852610e3687aa2e83c5,configure dart debug flags through environment variables
00754cd0851ce3d69c9b958a80219a409977213f,"Merge pull request #3128 from canastro/debug-env-flags

Configure dart debug flags through environment declaration"
e4d7f542a77914e9853328de6a7fae7961874122,"Merge pull request #3211 from KvanTTT/master

Revert ""Throw error if lexer does not contain non-fragment rules"""
00e5fae8c2462f6836c8501c8a5cc63b98b2ffa0,Merge branch 'master' into fix_swift_input_stream
c293e2307b1cba9911c0fb72c5998271125ce333,"Merge pull request #3025 from niw/fix_swift_input_stream

Fix Swift runtime ANTLRInputStream that can’t read Unicode scalars"
368d667517eae9f2ee38e72c99fcf3bf6b42e699,"Merge pull request #3026 from niw/silence_swift_compiler_warnings

Silence Swift compiler warnings in Swift runtime"
bdc4b000e44afab98d2dd4221b52c471ce453079,Merge branch 'master' into SwiftInterpreterData
7529b75a82fb13a7a71b2f9e06e4dd7d3b39b202,"Merge pull request #3098 from ahooper/SwiftInterpreterData

Swift InterpreterDataReader and deserialize fixes"
40c3221065c8ebe460e0051708ab67ada0280f2d,Merge branch 'master' into fix-multimap
b796a066e6cf10208281fcbadedf955e058ffa18,"Merge pull request #3099 from Dante-Broggi/fix-multimap

Arrays are not classes in Swift"
929708b14500aaf236c073288258212027a4e46e,SUPPRESS_PRECEDENCE_FILTER
3b85077b85a0564c69309485d9b60755fb312c0a,INVALID_STATE_NUMBER
79952f80ed2cdd24e656f9d1bc0765fbd2ac1639,INVALID_TYPE
c0f2ecc91da8685522ef8e445f43c37e1b9e287a,INVALID_ALT_NUMBER
b9a5fd3b3b5a43754c1322feec8c705cdb186784,"Merge pull request #3104 from kaby76/issue-3079

Fix for #3079"
3421a9699c40b59a7edd7d3961f4ee90f4f38000,"Merge pull request #3300 from tools4origins/fix_docker_link

Fix docker link"
fb374d53ae03eff6cee676cbd699c0e8ec4c11ba,Fix #3287
3e46cc799d3c1dea6b0d419cf6d93021abf5d1c8,"Merge pull request #3119 from lingyv-li/dart-export-recognizer-class

Export recognizer class for dart target"
d4bfacf21c1db25ebc1b985fe1722be6dcb0ec9d,"Merge pull request #3245 from lingyv-li/dart-3198-crash

[Dart] Fix crash when parsing high index options"
fbd275545679024c9cde63b8d59c63c9c470ce48,"Merge pull request #3246 from lingyv-li/dart-3140

[Dart] Add case changing char stream example"
f154991a72a8bec8994ab9f91d3537d4816a7083,"Merge pull request #3247 from lingyv-li/dart-3124-3141

[Dart] Remove genPackage support and supports superClass"
23f93e0d1b4254728e73fbf529babfde3caf72c3,"Merge pull request #3253 from lingyv-li/dart-3248-windows-build

[Dart] Workaround for windows build issue"
d73036477be0e4df8af2f753a03feea1eaf839d3,"Upgrade com.ibm.icu:icu4j to latest (69.1) to avoid potential vulnerabilities it brings
Also change the template to suite this upgrade, as this upgrade makes the java class larger than jvm can accept."
51bb288e92830fd6c39f0db6d872e0c0fcfa6947,Merge branch 'master' into fix-3254-go-null-ptr-dereference
03344ec2b69137cc7e8ce6f51edcaeba560e0492,"Throw EMPTY_STRINGS_AND_SETS_NOT_ALLOWED error instead of RuntimeException for empty set, fixes #2498"
920c5da2297d5ae52711fc81489778e78249cdbb,"Fix parsing of hyphen that goes after range, fixes #1943"
f93cb83069153b0d43189ccd8438aedb1241579e,Use atomic instead of mutex for DFA.s0
754200fd435247a136e7953d59c5bd43609a19c6,"Remove useless and incorrect equals check in checkCommands, fixes #2884"
0d0e7b44c4fd05e60618f1ce65ca694336cc26e3,Fix some thread sanitizer warnings in C++ runtime
4340382649e91191339fe605d349f016ecbb5a6f,"Merge pull request #3284 from SKalt/fix-3254-go-null-ptr-dereference

[Go] Fix null pointer dereference"
e8599bf0d1aee51b4aa54f52c7d2210faf4720a2,"Merge pull request #3310 from KvanTTT/tool-bugfixes

Some bugfixes to the tool"
9388c9aaec53e99007bbd35864a59545ed211cbc,fix compiler error
57bf2a80407f9d33f30480e0040d7ffa66397112,"Merge pull request #3305 from ericvergnaud/drop-ace-file

Fix #3287"
9cba6b5816ae73837b7f9eabdf4d4a41307ad9ab,"Merge pull request #3315 from ericvergnaud/fix-swift-on-travis

fix compiler error"
1662d2f186a9e7fa53ae7be620be620a77453ae6,[C++] Refactor Guid to use std::array instead of std::vector
dabdfd0c07fb218dc79864de15ca599a5cd1a1d0,[C++] Use faster alternative to dynamic_cast when not testing inheritance
cbad17d1894e8266ba4af183e266968d99f93e70,Fix for https://github.com/antlr/antlr4/issues/3319
7773a5e151117e45f78efd47f76ca2c688664ace,Add test for https://github.com/antlr/antlr4/issues/3319
7c7c91795522a9c18218960246b2f3ecffb72beb,"Merge pull request #3318 from jcking/cpp-static-cast

[C++] Use faster alternative to dynamic_cast when not testing inherit…"
66eeafb60f11f62c00ee62613001f2452bbe6c95,add note about 1.7 in doc
a686ffb3dd8ae7619b74044db67a597f9aa04749,Merge branch 'xenoamess-fork-upgrade_icu4j'
6af4c774c47b09dddd2c6f850cd084038f16989f,"Merge pull request #3322 from kaby76/issue-3319

Fix for Issue 3319"
4b72e6e2402594a308191bda9dceabdf2693d5df,remove emoji modifiers from graphemes.g4; see https://github.com/antlr/antlr4/pull/3261
e312c723ef099f47e5a5b0ae92b9dfd228ecc033,remove more unicode failures due to latest UnicodeData. see https://github.com/antlr/antlr4/pull/3261
9a272638c687d9951ce2c9ede4099ace6630126d,"Merge pull request #3323 from parrt/no-emoji-modifiers

No emoji modifiers"
4f231347091a8da398d974503dc3748eb7fb553b,Merge branch 'master' into cpp-guid-refactor
8a30c44b35a9c49a8ddfa86ca9e791ad64d79e31,"Merge pull request #3316 from jcking/cpp-guid-refactor

[C++] Refactor Guid to use std::array instead of std::vector"
bb3ded8edb49012cdf1bd22b646ae9c9f7a0119d,replicate Java implementation
c4c813efa463fae4cf4450aff4da65fb566409c5,"Merge pull request #3325 from ericvergnaud/fix-missing-accessors-in-javascript

Fix missing accessors in JavaScript"
7b32c9b169a2d9dd2375d4fc9c5e678f0ed0039c,update to 4.9.3 version number in the code
587d8a241385f9bc40f3a8ee5a2cf23a79626ae6,Fix stack overflow exception when using Lexer.type in JavaScript fixes #3328
a2a98201303a14bc22019844bf2bbfcab8e67aed,Merge pull request #3329 from KvanTTT/LexerTypeFixInJavaScript
93c18aa690504d7ce96c5862707c3b2ba33ac82d,"Add explanation about lifetime of parse tree to
  cpp-target.md#memory-management
Fix some typos"
9657ab37c3a57eec5b0b8c6d77eaea1cf169d243,Switch utfcpp git url to https for reliability
b132e2154cbddb5578e2a3ce07e3502cf31502e1,Add myself to contributors
5629af3f7b5797556da286819927996eced09c87,Merge branch 'master' into cpp-runtime-thread-safety
6ab9d0f94632613b3299e7111164cee3b90b62a8,"Merge pull request #3309 from jcking/cpp-runtime-thread-safety

Fix some thread sanitizer warnings in C++ runtime"
34e2a99d4d1c0b1864b54ba82f6e231bbe023fc6,Merge branch 'master' into lifetime
ee8c8b009902bb78f4cdda0dabb9d8e1145464b1,"Merge pull request #3169 from skef/lifetime

Add explanation about lifetime of parse tree to cpp-target.md#memory-management"
3bdb4f724a8413f6017a3a621954e743dfdecea8,Merge branch 'master' into utfcppgit
7373e892b01780ad6cacac5d150792377c91cfd4,"Merge pull request #3192 from skef/utfcppgit

Change utfcpp git url to use https"
18f24717c81cc48856d332e2c9492ceaaf17eb1a,"[C++] Upstream various performance, build, and best practice fixes"
0802afb9c160bcf0472718f5b355f3b0df144b95,mv to ST4 4.3.1
709dcfbe50c900756d607cf46dfda43bfa882212,Add .clang-format file to ensure consistent style of C++
a8d828016e54adfc403326d8e56d93e7c75c27fc,[C++] Bump minimum required version to C++17
a8e048ad9d4d1325e030ba394216877d24f16611,"ignore PHP runtime, copied over when releasing"
2d445f5466e096c39af315697fd4d5f531020281,update version
1d6cd2eedc81c4d2eb384f03598aefc339406b64,[maven-release-plugin] prepare release antlr4-master-4.9.3
5ef43e69769b087d92025d559bdb71cc17f224a6,[maven-release-plugin] prepare release antlr4-master-4.9.3
052b828ffc22e9e5bd061a5f70f98935d767107a,[maven-release-plugin] prepare release antlr4-master-4.9.3
fb661e891d2db191af4369695651906865c4959f,[maven-release-plugin] prepare release antlr4-master-4.9.3
fad484d3013f8f66d37ba1341fbca207fea3ed4f,[maven-release-plugin] prepare for next development iteration
e4c1a74c66bd5290364ea2b36c97cd724b247357,latest js npm run
f711e32a1c5bc4bab778454a695816621d20f74c,Fix TSAN warnings related to dfa::DFA::s0
8add69c2398df4ec150f4d16bdf527b6063803f7,Use `AnyObject` instead of `class`.
bd37cf044c01591e4ba98e75e5ebb5cb4dde6207,"Get rid of reflection in Go.stg, fixes #2278"
0129cd40b994c3422c94999015d9b1720c1a9cd1,"Merge pull request #3311 from jcking/cpp-go-runtime-thread-safety

Fix TSAN warnings related to dfa::DFA::s0"
ec144ca0d701a1d2fc0b9c9b39b3fdd688e5ecea,"Merge pull request #3327 from jcking/cpp-string-copy

[C++] Upstream various performance, build, and best practice fixes"
53acf567b705e9196b5b7bb1065ce9cf1f6d54cf,"Update case-insensitive-lexing.md

Fix quotation mark error"
aeaa445b4d4f1c143814af6ec7438f38e66b6441,"Merge pull request #3355 from tianshuang/patch-1

Update case-insensitive-lexing.md"
92be1baa1c35fdcedd6e08fd6223ffd6a8168b34,[C++] Cleanup ATNDeserializer interface
7fb7373ddf6090ffeb290baa18fb17aa70cb3ed7,Merge branch 'master' into cpp-guid-cache
992e68d5140d0d73e7c22209e84ffc91a6d1a8a1,Update Swift runtime doc
d3cd38123047275c4a5c28d27893652931d2d3c8,Improve C# runtime tests performance: compile C# runtime once per session and use .dll in test projects
469515155a94715ff95c69192fe269aa798e7252,Get rid of dealing with files during C# runtime test running
90093c8c4bd179378037de3996aa596b677ae70d,C# runtime tests: don't write useless output to console
eaed4571af332d7ac18dd5f69f9510407412668a,"JavaScript runtime tests: get rid of package installing using npm, use direct file path to runtime files

It has significantly improved performance"
67e34fbebb0326d06f04a745485b60843d1362fc,"Go runtime tests: get rid of useless copying of runtime files on every test run

It has significantly improved performance"
14938591d7dceba52457cf91b067d6de89025dc4,"Merge pull request #3326 from jcking/cpp-guid-cache

[C++] Cleanup ATNDeserializer interface"
7832bb278df59c12948c58688eab2d10f5956940,Merge branch 'master' into cpp17
7a87cdcb3d13d3cb5942da29ae537d99e1cbabba,"Go runtime tests: fix working with the latest version of GO, use GOROOT redirection instead of GOPATH"
d49facf3b22091b570d03f69a1263f14eb9e5a44,"Go runtime tests: cache go.mod file, don't run go mod command every test"
e81133002bd286447328d3f182e45424c9ee14c5,"Merge pull request #3365 from KvanTTT/csharp-runtime-tests-performance

C#, JavaScript, Go runtime tests performance improvements"
024e99e7b8f50bf1f1db9ff0d418aa1a421e129a,"Merge pull request #3335 from jcking/cpp17

[C++] Bump minimum required version to C++17"
12e362b3c82d9b600f65381e37b81835e8b2d8fd,C# runtime tests: fix running on non-Windows OS
0ee7f45bbdf67df7e8e32e0330d2920ce299580c,Fix reported memory leak
710f44ea6166d3b9fadfd1c9fa6e172457094688,[C++] Switch from NOEXCEPT to noexcept
652546f288d51dd1afc7b01c43170c2a9965c62f,Fix Dart linter errors under strict mode
0d6263a1f6c7b8659bc3cac04cb14a50c51a7810,[C++] Modernize Vocabulary using std::string_view
8ef157676473362c512344e3593c396cbd102820,"rename pygrun, add entry_point"
c4943c89b5751851a99680f81e83fe309c127467,contribute
24d9128d96b6dad1b7589ac63f698e1aac35720a,[Java] Fix complaints from ErrorProne static analysis
a5dfd61ba6fc58cf71abf7a651e9e7dc0e29c076,"Merge pull request #3380 from jcking/java-lint

[Java] Fix complaints from ErrorProne static analysis"
3a5f112c3295c1aeb9414919d0662232f4a97f6e,Update JavaScript like https://github.com/antlr/antlr4/pull/3380
1d52c9b7ce6d9ce681b2da23c358c804cffbf52d,[Java] Fix remaining complaints from ErrorProne static analysis
20c7ebfd998d036e58ff7f9fea9ed5e668910f7f,"Merge pull request #3383 from jcking/java-lint

[Java] Fix remaining complaints from ErrorProne static analysis"
7da07c73a3dc40d4ed24d90c6ac52702050295b1,"Merge pull request #3376 from jcking/dart-lint

Fix Dart linter errors under strict mode"
f0ebf53cf3b9ea893aa89244596fea32006d839c,"Go runtime tests: fix running on non-Windows OS

Correct support of symbolic links"
5a23e37f195fa5bab6fcc1245cce2ab2755c2019,Mark initializeRuntime methods with synchronized to make them multi-thread safe
ebb408b62c1ceea8a88f7e4aaa4209824bcfa7cc,Update Swift template to silence warnings about unmodified class reference
a30320f54603dc35f455cd37075bbb74260a3b94,Add myself to contributors.txt
65082a54bf5f95f38b4c0fd01876267f0d729e4d,Silence compiler warning by breaking statement into two
864c6af5465ed4a4dac9a43da3c98a7fd4b4d08a,Missed one instance
d3c2253c1e49cf1b689d74a16846bd6dbef4e2a5,"Merge pull request #3374 from jcking/cpp-memory-leak

Fix reported memory leak"
489de649cafbb6f9ede3e540f08773287c0ef61e,"Merge pull request #3377 from jcking/cpp-noexcept

[C++] Switch from NOEXCEPT to noexcept"
2f834a1d6fe5592847bb798c657f76e330377f8d,[C++] Partially undo commit a8d828016e54adfc403326d8e56d93e7c75c27fc
72e0627c1514470f902267fd9512396b74ec1245,"Merge pull request #3393 from jcking/cpp-implicit-capture

[C++] Partially undo commit a8d828016e54adfc403326d8e56d93e7c75c27fc"
7b2b378a0b7fe6ee1e67ab66196f090e00fbd217,[C++] Fix ambiguous ANTLRInputStream constructor overload
261769ffd170a89a289e4a3c53d659da0dd12f86,"Merge pull request #3394 from jcking/cpp-string-view

[C++] Fix ambiguous ANTLRInputStream constructor overload"
5a798eee2fdb1cd238fd470cba5610ad7fb7ef31,update maven plug-in versions for antlr4 maven plug-in
e603b73d3fabcc462e62eb94602f96df5514f698,update maven plug-in versions
34e445a404fe41cc79528cd3ded0da9117cbde49,update maven plug-in versions
38013586cbfdc9002c3569444390f4768eaea856,"Merge pull request #3386 from KvanTTT/csharp-go-runtime-tests-fixes

C# and Go runtime tests fixes on non-Windows OS"
196067ddeb9d4cccd12bbc8bb47bea4d1dd25a1d,Merge branch 'master' into update-maven-plugin-versions
f45e07c8b8ee9ff073dbf508141b51da526654d5,for some reason `java.*` had to become `java.**`  in the mvn build with the latest plugin versions.
3d819fae395b8f071b8c569b271beb1fe1873ef3,update scripts to also use python3.** meditation
7ae32c90c42606f23ee656a986af2423487493d0,tweak doc for testing individual targets.
66d66791dd994f51318b7fba0652379b1550b28d,"Merge pull request #3396 from parrt/update-maven-plugin-versions

Update maven plugin versions"
70b2edcf98eb612a92d3dbaedb2ce0b69533b0cb,[C++] Switch to std::any and deprecate antlrcpp::Any
3cf70fc2e55d36d86766224e4bd195307282d9c4,"Merge pull request #3395 from jcking/cpp-any

[C++] Switch to std::any and deprecate antlrcpp::Any"
431803772e8356feb0649bb396855c22ceb52a31,"Merge pull request #3337 from jcking/clang-format

Add .clang-format file to ensure consistent style of C++"
ceac269f1a1aab9810aeaf5afa34de4ab1384a32,"Merge pull request #3378 from jcking/cpp-vocab-string-view

[C++] Modernize Vocabulary using std::string_view"
e8122ca5a9437530ff719e29755b12426e2fff64,use java.** not java.* etc... in other test rigs.
afb0b90fae46eeeb31164195da39d5979b25924d,tweak antlr4 maven plugin takari thing to see if it builds
e63ecf6248289d354a62fa226b0ec11d33c09897,use maven 3.8 in github actions setup.
e472a97e5bd50344c875f075379911f32f98f43d,don't require maven 3.8 to use antlr4 maven plugin on grammars.  Wasn't building in intellij with openjdk 1.8.
14916ba2a2ce273352c8bce7eaee84a826f40964,ugh. be more specific with github actions for maven version.
82c4417269763119c1d3c95c9cea3073b46802f1,1.6 -> 1.7 in our test rig compilation. tweak doc.
7e50fcf41593cc4d4397e9691cac5463a7c7e24e,[C++] Cleanup EMPTY_VOCABULARY uses and remove SingleWriteMultipleReadLock abstraction
2349fb20199303eef2a742f9449d73c4902e83c9,[C++] Implement standalone Unicode encoding and decoding handling
bc61e31621f582ad6880ed60ce6a8851e0afd9dc,Fixed C++ runtime demo
0fd085b62db7b1760961f2b066a95682a702aa5e,"Merge pull request #3402 from mike-lischke/master

Fixed C++ runtime demo"
43fb4c2dbe288841627cc656bac25e5f542c0d72,"Merge pull request #3398 from jcking/cpp-cleanup

[C++] Implement standalone Unicode encoding and decoding handling"
27ed0e9bb29d26ff249ccd800ca78b1df0aebb7e,Merge branch 'master' into cpp-vocab-cleanup
6f8d6488525ca1594fd48b5762918a565ddd361f,[C++] Optimize ATN deserialization
01a32800a1349c6deabb5dee3731e3174f4acc87,"Merge pull request #3400 from jcking/cpp-vocab-cleanup

[C++] Cleanup EMPTY_VOCABULARY uses and remove SingleWriteMultipleRea…"
a850e968f4f72515ae3d178cda8e716781b1fc65,"Merge pull request #3401 from jcking/c-runtime

[C++] Optimize ATN deserialization"
5d6a78255383c1674c17bef1909a79a8a3c0bedf,"Merge pull request #3353 from KvanTTT/go-improvements

Get rid of reflection in Go.stg"
45ec8bdf78acb4097b2340bc0af6aa46b906b3b7,generates descriptors into /tmp
16ac027e091dbc6c01a36b76c87bca9c08be535d,start of file parsing.
5053c27d77e609b7d4f3dbfd4ace73370b71831c,more WIP. Almost reading in all descriptors. gotta figure out test type.
df65a6f0fa93d972eacbbd01ec717953d0200659,got a lot of tests passing!
f976cd1256360233dc8c3aedc10416dc9c20af03,all tests pass (python)!!
019388deeffd1bf4319c17acd9e883ca05f2a5eb,add descriptors
5575dafca10813f0528a53fa8440e987b2718ab6,load descriptors as resources
505c57a23e9bf6d329ea7bf60791d0b76959dbba,set java v11 source
a3e4f486f57f2e346313cc1011bc725acef93154,back to java 1.8 src/trg
24c6a30ee7e50ad3bd2da9eb421bc27b72458650,use openjdk 1.8
dc20e63763b3ddad230b0a08974eacedbf03b07b,ugh was using v11 in runtime tests
06ea28c6e8ea23377ae5826d0521c2a4bbe9b7da,rm java 11 method
371ec7f53ffa87f570baa6278a08a2947ed17243,[C++] Clean up antlr4::misc::Interval and antlr4::dfa
24f34658f7c5fdb7dc74f7b721306e56e444e21a,Add browser fs fallback
d82d1e46fb5bea4f69a556fba48769fd7dfd4d9e,add skip/ignore section to descriptor files
2397e808d13ec58a798a79689d5e05ececdd44ec,reorg descriptors to read flags and skip section. all tests pass now even go.
01f0c69dc2191448ffa031753272c2fa36ee63b8,split Parser test category into two batches to see if C++ target can finish before timeout.
c9bf3efbf58430eaf5867409cdd2268ee915224c,oops; only C++ is using new PARSER2 group.
a00d9f5d0338cd7bfd9b00b5e3ec6e562c041ac7,get group categories working
92fd9a552a58d9f9e8b47f7e146b9161a16b9d11,give it another try for continuous integration
16663be46fb59f1747272be4edd804a8ac5ddc98,typo in circleci spec
0663c5cb4a9b5fa2d74878a6dfa81d30c903c638,don't do swift on circleci
dd623ecc2f02f4fa051496466b80c138c0191ae9,"Merge pull request #3409 from jcking/cpp-optimize

[C++] Clean up antlr4::misc::Interval and antlr4::dfa"
27e007a95101e9eff3775cdd6893150118a5409e,rename Batch->Group
488127801b8b46e39c9a69416aef8e7e8e2968c1,forgot to rename something.
6760c0301507c298423b2fe775cde67f72f52a16,set release to 7
3e77f2b47659f2dfd2a14f1f8f20f53366781925,"Revert ""set release to 7""

This reverts commit 6760c0301507c298423b2fe775cde67f72f52a16."
dfc99b08ea3558ce2ad41b60aae183851c679f94,change to group name from descriptor class
3ec90c3157d269c72ed7ba002f90c0d1f6746da1,remove annotations and processors from runtime-testsuite; move descriptor classes out of src path so i can extract comments later. tests seem to pass locally (that I can test)
7714f6618688e45bdf2d484b31d6c37300df39b4,Merge branch 'master' of github.com:antlr/antlr4 into runtime-test-descriptor-files
871d07f48bbab34c082ed9ebeaf643ea67f11372,missed some Batch->Group. grrrr
6fafab250dcd9d63c9cc76df290b88a39f6ccda9,split some of C# parsing tests out into two groups like cpp and swift
106a40b715a22e1b5dcfa4b747cc25295eb24df0,copy notes from Java test descriptors to descriptor files. add a missing test.
153a357024272c8c6ee8bf4d586d25b403c252a0,"Merge pull request #2 from antlr/master

sync code"
215ebb48a7c7b7c339ae6edeac2f1792fa07ee63,fix bug 3375
22658d1be0198dc1b6027673b7dabab02dc5f4c0,add TestSuite for InterpreterDataReader.java
61af3304f3d9ce57e2542f897c67075e02c5c2a3,add demo interp file for TestInterpreterDataReader
0783936e58f9fc219f72438556dfe92a1f95590d,[C++] Remove support/StringUtils
215a188df73f4027c4bd35069620a4d01d298f77,[Go] Improve BitSet implementation
25c5c50cb5baf3e8a3930a4fc06d8e2c0062ca8c,i think runtime tests missed the api tests for java
6b83a20100f8cce468cf77f00770b9ffe831277f,"Merge pull request #3421 from jcking/bitset

[Go] Improve BitSet implementation"
227ebb23bc311b99d23f6150d793560c148c994d,Merge branch 'master' into runtime-test-descriptor-files
9e7d6656929295bf45dd92e5fcee2e9c091f650b,"Revert ""Merge branch 'master' into runtime-test-descriptor-files""

This reverts commit 227ebb23bc311b99d23f6150d793560c148c994d, reversing
changes made to 25c5c50cb5baf3e8a3930a4fc06d8e2c0062ca8c."
8e9c2d0bbecc8694e88fadbe3f467cad5171fffb,Update README.md
ebdf0db3d361544204a38380cfd03a8c519e2909,rename descriptors dir.
329a584fafbe3618d4aac73fa015da246e47863a,[Go] Make BaseGoTest::initializeRuntime static
ed31d62213aa9bfc1f58890563c81d830cbf07a5,"Merge pull request #3422 from jcking/go-test-speed

[Go] Make BaseGoTest::initializeRuntime static"
4daa73385cd9c220587293562a4b7cb0f427ebbe,add missing test
67e784e26d04de9db450e1e8674b67d4b936e792,clean up descriptors
df22fc5e62f6ca2d698f21e104ec4104fc04fac9,clean up doc for new mechanism.
513db4547d3b681523c51c022e04ad526bf55aa5,rm dead code
643d94fcab9626478a6266c5c0776aacbb4690c6,rm travis badge for now
ceb24ea9ee85407307c74d861c08948f0d8382ab,tweak doc again
de99bf604d39a5a44b556d63741ea6abf18e595d,Use release instead of debug build configuration for Swift runtime tests
11bf13b6429143f12e45cd94c2ee34d9f370b867,Add isDebugAntlrRuntime and isDebugTest flags for C# runtime tests (as well as for Swift)
84611109e19923cb34028f0934bc1ed00938e3d3,add test case to TestInterpreterDataReader
94fe9f275a13bbb735a84af5b9ec78c6dcd7cec3,add file for test case
ea23b1840cdea45dd55bf683935dfd9702f68551,Update TestInterpreterDataReader.java
a8b8f87b25a3c4868ce3d4ae6ce4554485d302d7,[Go] Fix BitSet OR operation
4e3f917959687c43b423ea5487bb72ac095eb95e,remove dead code
fd11a6b60065a39d8a7a4b60f01f5626e71ddef4,fix indent
8ca8804ff195fb2cb85468b36b1481bba5220212,clean suggested by intellij and a bit more.
69f51dd3e7aabdcd76f1bb00ec3f871108acad17,remove BaseRuntimeTestDescriptor. don't add descriptors ignored accorded to target name.
a03db240667d0d519aab5f6aed2cd166eea80670,"Merge pull request #3407 from parrt/runtime-test-descriptor-files

Reorg runtime tests (3rd generation); mostly to use descriptor files for tests not annotations in *Descriptor.java files (supports later versions of java)"
e3b190f2976f9e5256b2e44f3428de2162b2d28c,Resolve conflicts; grab @jcking latest
a6a1e1173105cd9d4c6ed305f0686b462794646b,Merge branch 'jcking-go-bitset-fix'
8b60f211eed26298268a539126a35e63e064fa54,[C++] Improve MurmurHash performance for Clang
afbd285bc91e6c0d96fcb5ed9ed390d3d3de89e9,"Merge pull request #3413 from jcking/cpp-string-utils

[C++] Improve whitespace escaping"
b783a74ef2566252ea55fde6284366565a4c3fab,"Drop isDebugAntlrRuntime, isDebugTest parameters from BaseCSharpTest, BaseSwiftTest (use release always)"
b6c9d4ed8463d30c884d46a15c9b1aa3901b6d66,"Merge pull request #3425 from KvanTTT/swift-runtime-tests-optimization

Use release build config instead of debug for Swift runtime tests (improve performance more than 50%)"
654c0f03815c916079f9e348fa936fbfa879d191,Add Ivan
51c38f4cf7e36aeb230cf475bf1aefd0d4b5416a,"Merge pull request #3431 from jcking/cpp-murmur3-perf

[C++] Improve MurmurHash performance for Clang"
74bf7af099300bbf90ec8ae7a7f7904bb9781982,Go handles some more of these tests.
ad419105565180c14c4d2c2289f3bdd077b33189,Add test missing during translation for 3rd gen test rig.
87cf554f0273a0925fa22bc7c41e592a2ac2df42,delete unused file
5b3693d87a7035f2e10f4f02e81eddc1f0fc81fa,Update contributors.txt
d0c14f4baa48eb290fee1512b8b3bf0b9c6c7264,Implement caseInsensitive option
8bf1039c9374b9411b1e8dd017ed364223d2c341,Remove caseInsensitive function argument where it's not necessary
c4bf6c50c6ba8a95ad4dde5ecf932d054a8338b5,"Merge pull request #3419 from Tinker1024/bugfix-3375

Bugfix 3375: Fix bug when pasing .interp file"
f0391eb79ed7c6db93a9827d17be6af499191d70,Python too slow for these tests
b0f6bf12ec1c64b2a2b29b69999ed71a4269ba9a,Merge branch 'master' of github.com:antlr/antlr4
ba876a21da65fe3b622f0c4d4308a83b33391c03,Node was too slow to run this test.
ff21648e410c95dc017385c1ddd73a6034f0364f,"don't use ""quiet"" option for mvn tests...hard to figure out what's wrong when failed."
7fa59a4f179c4fd0d8725641172ec98fa78284ef,"Add RANGE_PROBABLY_CONTAINS_NOT_IMPLIED_CHARACTERS warning, refactor code related to caseInsensitive option

fixes #3433"
a8ef690b5131ebae8170f197fced22dca790e74f,Allow \r\n for runtime test descriptor files (Windows)
2f15b9a794ea376ad6090151f797426d46638f1e,"Add ij_java_else_on_new_line = true to .editorconfig

Fix `else` formatting for current pull request"
7bc825776357a0e6e7fc399bb0841d570a7e824b,"Merge pull request #3399 from KvanTTT/case-insensitive-option

Implement caseInsensitive option"
886e9a31041b3684a119042fadef79a0ea8c7239,rm link to case insensitive doc; no longer relevant
c75ee4e3c4a32c8eb57e17826e3adc2c9cfda629,"Improve location for RANGE_PROBABLY_CONTAINS_NOT_IMPLIED_CHARACTERS, CHARACTERS_COLLISION_IN_SET warnings

Don't report twice similar CHARACTERS_COLLISION_IN_SET warnings if caseInsensitive option enabled"
4fb4edf0d248aafbc75ba6d7bf5b714175f5fd4c,"Consider length of lower and UPPER character ranges during case transformation

Length should be equal"
e6578798be7d20073d3eecbf5bfcd5b7dde07f46,Enable RANGE_PROBABLY_CONTAINS_NOT_IMPLIED_CHARACTERS only for ASCII characters
df62fba4b053f0255b80e4b06f904d31c658fb6a,"Don't report RANGE_PROBABLY_CONTAINS_NOT_IMPLIED_CHARACTERS twice

Add CharactersDataCheckStatus"
77be902e309a63df14d477d3ed92891e3ba964d1,update case insensitive documentation
faefc25e27a49a5a512a0d661635646884258c68,"Merge pull request #3435 from KvanTTT/case-insensitive-fixes

Fix case insensitive option with unicode, RANGE_PROBABLY_CONTAINS_NOT_IMPLIED_CHARACTERS fixes"
b5f8af6462ce468fb7141f9959d361ebcdec3cf1,Merge branch 'master' into master
13a0add2f55711a582994b1015d6d331dfb755e1,"Merge pull request #3387 from eneko/master

Update Swift template to silence warnings about unmodified class reference"
7b22bc5f8e123e3f6bcd0a6e25e720be09516d8a,"Fix weird error if rule has `tree` name, fixes #1960

Remove backward compatibility exception v3TreeGrammarException"
7f07af85374383d877080fd97056977521056697,"Convert INVALID_ESCAPE_SEQUENCE to error, clarify char set errors"
f792951f81259c4cce7fb9811c9e33ce840c2b07,"Throw EPSILON_CLOSURE error in lexer, fixes #2860, #1105"
f2b93e550cd912be3973743d09206db98f4092c9,"Fix special chars escaping in string literals, clarify error messages (display \r\n instead of empty line)

fixes #2281, #2885

Restored missed test PredFromAltTestedInLoopBack_1"
bab5a9e24924239e9bec039de70d15048bfc1769,"Throw EOF_CLOSURE error, fixes #3359

Remove EOFInClosure test since now it's not actual on runtime"
bf37d24dce54d4c301ea14db9cf752c0ebc6fb94,"Add TargetType enum, refactor and simplify code"
a103ec91cfffa92a98493c389a608fee38a8062c,Get rid of reflection in CodeGenerator
3b1eca916d2b406ed08bea53a2612e2eb103831b,Rename TargetType -> Language
6823a901a6df1bd21d1b6f501d1e2c1ec6101583,"Remove TargetType enum, use String instead as it was before

Create CodeGenerator only one time during grammar processing, refactor code"
9b5c5d49941a5c940570fa850cc0ec7183072c8b,Add default branch to appendEscapedCodePoint for unofficial targets (Kotlin)
d0e52c2ae18fdd0ba8372463056778f0b7f8eb7d,Remove getVersion() overrides from Targets since they return the same value
6da860e654b106dcff8e7db11296da2b0ea10e32,Remove getLanguage() overrides from Targets since common implementation returns correct value
8eadcab337915ec901c541e8eee62d96831051ff,"Merge pull request #3304 from Dante-Broggi/use-proper-constants

[Swift] Use proper constants"
5d5ee8423d760470a0698ff226fd73a8a5e0889f,"[again] don't use ""quiet"" option for mvn tests...hard to figure out what's wrong when failed."
3076640b5d798c8b13787e31eb65bd8f3991c563,"normalize targets to 80 char strings for ATN serialization, except Java which needs big strings for efficiency."
a16b5ef145f169c459f6804788cf9ada9ff09675,"Merge pull request #3438 from parrt/normalize-getSerializedATNSegmentLimit

normalize targets to 80 char strings for ATN serialization segments."
3d319c4076592f0aa280761f9f922df0c19366bf,"Update actions.md

fixed a small typo"
d5d00c2b9c207482897ac3b2c490d83a822a48c0,Rename `CodeGenerator.createCodeGenerator` to `CodeGenerator.create`
0da84d0fa745c5aa6dc1f8f31b23cfe013a57435,Replace constants on string literals in `appendEscapedCodePoint`
c26ce943093760ef074b0789c26b37698304e553,"Restore API of Target

getLanguage(): protected -> public as it was before

appendUnicodeEscapedCodePoint(int codePoint, StringBuilder sb, boolean escape): protected -> private (it's a new helper method, no need for API now)

Added comment for appendUnicodeEscapedCodePoint"
31ec821c2876f46d9e43ac91db72acdd83e907c0,"Merge pull request #3349 from KvanTTT/tool-bugfixes

Some tool bugfixes"
13ba87e9a26dca108982478138d46108ff14af65,"Merge pull request #3439 from Alex-Andrv/patch-1

Update actions.md"
8fabd8677a23e69e6b5ee14b6076bd4654a930b0,"Merge pull request #3313 from jcking/go-runtime-thread-safety

Use atomic instead of a shared mutex for DFA.s0"
e04a16c863eba362f9f808e618744b98e50e615e,Merge branch 'master' into master
6373bc43de42c730154644bc4e1ada9ebee86a5a,"Merge pull request #3358 from hlstwizard/master

Update Swift runtime doc"
a85335618c5818713861ef8f3167a3e921824af4,"Introduce caseInsensitive lexer rule option, fixes #3436"
8074723bee5dd7d853ee7edd9fbdf33756e0c041,Merge branch 'master' into Add_browser_fs_fallback
e8411fc9e1665e1c18058feb383ceb0aaf0a9cd4,Merge branch 'master' into gh-3350-py3-entry-point
5b2beba5fcd477bdd2c2b8f369cd447650a8724b,"Merge pull request #3379 from bollwyvl/gh-3350-py3-entry-point

[Python3] rename pygrun, add entry_point"
d8e152592fb4dbdd6c9fda2c169031cca17dfc4f,"Merge pull request #3437 from KvanTTT/caseInsensitiveLexerCommand

caseInsensitive lexer rule option"
5b8390bfdc26a11a978db454fa962e0ed758c98a,"Merge pull request #3414 from Ketler13/Add_browser_fs_fallback

Add browser fs fallback"
36e9459c569f2379c8f8ec09c719a6206afb0292,"Merge pull request #3207 from Abe149/master

Corrected/clarified the Linux C++ runtime compilation instructions"
0019a4b7c70505ad777ee00d37fde8d2ced204e8,Merge branch 'master' into issue-3096
516a28482b8defe8b467c9c22c2c3b452711c848,"Merge pull request #3097 from khmarbaise/issue-3096

Fix #3096 - antlr4-maven-plugin is using maven-project version 2.2.1 …"
667631bb651a2e625f39988f193d08eddccd1c4e,"Merge pull request #3351 from niw/use_any_object_instead_of_class

Use `AnyObject` instead of `class`."
233d009ac1b8363ab8da4abc8bfa74daa67fa2d2,Merge branch 'master' into Abe149-documentation-patch-001
33122ac442fdfd5884a5182dac559889de60c218,"Merge pull request #3206 from Abe149/Abe149-documentation-patch-001

Update contributors.txt to add Abe Skolnik"
345cc17bf36c67d7be8b7775e9f3693334232b28,don't ahead of time compile for DART. See https://github.com/antlr/antlr4/commit/8ca8804ff195fb2cb85468b36b1481bba5220212#commitcomment-62642779
2cf7b5403e4ac1d86187360312575291731334f3,Merge branch 'master' into master
5d72d8032ec2585338dadbf3f1876e909a3aac1a,"Merge pull request #3286 from idraper/master

Remove `late` modifier for Dart generated context classes"
48854d9831f040ef4a4d887206e2b70f6077433d,"Simplify test rig related to timeouts (#3445)

* remove all -q quiet mvn options to see output on CI servers.

* run the various unit test classes in parallel rather than each individual test method, all except for Swift at the moment: `-Dparallel=classes -DthreadCount=4`

* use bigger machine at circleci

* No more test groups like parser1, parser2."
b346aa560b74ab85430d2c6984afd7e3f983d9c2,simplify Swift like the other tests
61db59d26ca790e9230449682e3b30bce75cdf8f,fix whitespace issues
b342b6734fb87d0adbe9be0c495bff0ebdd0f58e,use 4.10 not 4.9.4
7135d1f0fd150bec746b04c06a83c4f960d3fc63,improve releasing antlr doc
d2539817249864c7f121a95240d7dc37561c4c79,"Add Support For Swift Package Manager (#3132)

* Add Swift Package Manager Support

* Swift Package Dynamic

* 【fix】【test】Fix run process path

Co-authored-by: Terence Parr <parrt@cs.usfca.edu>"
156cffb0b8e87a294093faef8ac48f4967a5de03,"use src 11 for tool, but 8 for plugin/runtime (#3450)

* use src 11 for tool, but 8 for plugin/runtime/runtime-tests.
* use 11 in CI builds"
726983d8159cf5e4e7ea4104c66093079a7bce83,"cpp/cmake: Fix library install directories (#3447)

This installs DLLs in bin directory instead of lib."
cf3ee42abbaa9368048cb3b06cc6cd2c135dd62e,"Python local import fixes (#3232)

* Fixed pygrun relative import issue

* Added name to contributors.txt

Co-authored-by: Terence Parr <parrt@cs.usfca.edu>"
4620acc2e56d666e1c2a48e1b2607f3a1a8a700c,"Update javadoc to 8 and 11 (#3454)

* no need for plugin in runtime, always gen svg from dot for javadoc, gen 1.8 not 1.7 doc for runtime. Gen 11 for tool.

* tweak doc for 1.8 runtime.  Test rig should gen 1.8 not 1.7"
89f7760263f1cde7464ac295298b677e70c928df,[Go] Fix (*BitSet).equals (#3455)
53c113998cdcb496115ab1491bf33260dca0bb64,set tool version for testing
7d3fb7b4dc33848311b26160722f52b1d5049188,oops reversion tool version as it's not sync'd with runtime and not time to release yet.
60a98e12bb569bc610ed51540c03b8350b081880,Remove unused variable from generated code (#3459)
9f6f9a3816196fee1ffb7060d4574f868ebba0ef,[C++] Fix bugs in UnbufferedCharStream (#3420)
09e917ea8b0939c835c38189031c93840f3c41cc,"Escape bad words during grammar generation (#3451)

* Escape reserved words during grammar generation, fixes #1070 (for -> for_ but RULE_for)

Deprecate USE_OF_BAD_WORD

* Make name and escapedName consistent across tool and codegen classes

Fix other pull request notes

* Rename NamedActionChunk to SymbolRefChunk"
4359ee8846174d205d079615c295821a7cdaeef4,try out windows runners
d552ca80052ec5b7b1d8df276d3109c8a7b20d8a,rename workflow
0d58a1de2dbf1f8b277edd117ac458c00e3d07fe,"Merge pull request #3463 from ericvergnaud/master

use self-hosted windows github action runners"
a26052d7c2fd6226bf2d35b7faee47b6476da3b7,"Update windows.yml

Fix cmd line issue"
2330e1dece9c3d41d2e84cc38d39a0eb237e1e17,fix maven issue on windows
42bae4227f4107e2502a2b4ac7e34cda6bbad533,Merge branch 'master' into github-windows-runner
533da59307a96c848b77a1843ad033f0528d4df7,use jdk 11
cf0ef3c1ff6994cb15d2da4cb7e9c6b322551362,remove arch arg
63a9354a50ca638875b18188bd7380fc9a331897,"Merge pull request #3464 from ericvergnaud/github-windows-runner

GitHub windows runner"
a3e85ed68e015dace08f11d7a7828cca026eba68,display Github status for windows
fa9b53348d1b16a34042d846666ea27317c0c229,"Merge pull request #3465 from ericvergnaud/master

display Github status for windows"
1c996ccefeafd5c4ed5bbff93770a98d3491a43a,try testing python3 on windows
6c45abcbc23069cd9a83ebdbf32e830a8dd3808c,try new run for python3 windows
c160e297ec3a09168605614e0e28cf1f0a83ddac,try new run for python3 windows (again)
e9c6200eda6969b0c8b743fb658127fe855a512b,try new run for python3 windows (again2)
c714a040fb306ccb36998ce70f6c7bdf83b7043f,try new run for python3 windows (again3)
92c165b631a33072e9fb7dcda75d7491f0807c1b,try new run for python3 windows (again4)
3bf4c810184269f4ff12de4cd80af89940dc1ed3,try new run for python3 windows (again5)
793f7365123bb441d1311aee07cd3cb4635a350d,try new run for python3 windows
44207dbcfdcaef0804acef6d2f1e930a56183810,try new run for python3 windows
b63d565eebdc7442493fc122acb7ab57e438f156,try new run for python3 windows
1658019d7cb6f44d3f74eeff759270fced86312d,ugh i give up. python won't install on github actions.
c3fe8e46c2821045ed9acb1a822b896a073aedbb,"Update windows.yml

try python 3"
e22fba9228565a1491abc5a3f5106d2618200614,Update windows.yml
e131509dd7dd81012e793889048daa5858f76ca2,Update run-tests-python3.cmd
7c05590ddea49db38c6de9d4d5021d3072ae61f6,Update run-tests-python3.cmd
b7e3a91db0a1f0976e286cb99a37576339814e71,Create run-tests-python2.cmd
39cf84733882f13ac8ad66b2b1416b74511f737a,Update windows.yml
668733632294c94f96ca284b79c0e7e0d0846b62,Update run-tests-python2.cmd
fae13799ebaacae03faa5546ec77e098e6c1eeb7,Update windows.yml
e756c9fc90b031e588256808e58dc80ac2ed2cd5,Update windows.yml
1983ce3a43174c0aa026ee64aac65aa9fc1f07e9,Update windows.yml
4740f9465ef2dcfb0d3c2598d444d13726beb10e,"Merge pull request #3468 from antlr/python-github-action

Python GitHub action"
2e8a38b068ec3605c41713035e2d094db15a5ce9,Create run-tests-javascript.cmd
3f403c8d18d49249254b5bfc1bd124e8e82cd340,Update run-tests-javascript.cmd
fa9c985baa2f1d6577da38e703e68814d91ee945,Update windows.yml
ccfe3a86df0616af644111b46863c925b09e47af,Update windows.yml
83089a233f4aa9be74b664600c945bedd7274322,Update windows.yml
009b6d72bbc96423c068cc492d2febe65faacc49,Update windows.yml
b12a50dd1070ab93f09827744dece88b70de44ce,Merge branch 'master' into github-javascript-action
3f9efd6cc36971dc1c1bff734615afd642f4c662,"Merge pull request #3469 from antlr/github-javascript-action

GitHub javascript action"
de7fbd6667b799b66d5a6ae344f002c26ff60dda,Update windows.yml
c83ffa90ea3e0c87d77bebcbb72c21001d930fe8,Update windows.yml
f9506de5c59c772bd6cd5a5ffc327e10fbe38d53,Create run-tests-csharp.cmd
e76dbfcb990b77cae7c8cabce6e98eba4ce51d4f,Update windows.yml
b386e9b880b08e9be5329d59e9afb3d6682aaefb,fix warnings in C# CI
764a37e79cfb1438cfc0c15fb08cddefd4659b79,Update windows.yml
2e113c731de1f158e8b92ec36730cc4065defc1d,"Merge pull request #3471 from ericvergnaud/fix-c#-warnings

fix warnings in C# CI"
a1b1e8e1dedc873eea0aa89922856ed90c0e4b10,Update windows.yml
6b46a8d7022cbc6547ecbb72b54cf766a01d32de,"Merge pull request #3470 from antlr/github-action-csharp

GitHub action csharp"
0b36b455fe2b651a522224e04bfb4cbbe060896a,Create run-tests-dart.cmd
9af69051cad6adf01e5b1f80606bf8497a3e59c1,Update windows.yml
612a480a4998ebb85d6da5c5cc8a175c5c4660ef,Update windows.yml
bba8d150c575587d434efc4c682ffd41f872fb03,Update windows.yml
9b345fdc9eb7b66804bd8716f8bbdbbd67a3c53b,Update windows.yml
b9537af6e59be43db3b5c6b76e42acb41a554296,Update run-tests-dart.cmd
ad1cbbac1c363f85356c214c6529035dcb43f652,Update run-tests-dart.cmd
666fa97248167618f6fed01429860f7d4c226656,Update run-tests-dart.cmd
97a4759ea29f43acaad6d72e3df10329d5de7b47,Update run-tests-dart.cmd
0a51f10c76e0c14acdb3b0ccb44b4a414c8973ab,Update windows.yml
5d9df660efa3bbb3f7e83aabb61734b66d4b1210,Merge branch 'master' into github-action-dart
2ba9cb90736c683e5ac66bc430c5750fd5e4cdaa,"Merge pull request #3472 from antlr/github-action-dart

GitHub action dart"
396f7b9272cc446882c7481b20a232e2984c9a3e,Update windows.yml
72f48abf4466bd71dcafbbe198815ff4e577ec24,Update windows.yml
582875db0a100ef4a1978a3b732a62b23a6a2b8a,Create run-tests-go.cmd
edabe0c0296dbdf3ed9a097c8bd520df185fe93d,Update windows.yml
4bc1bb16e5e32ecb84a5d98b58bba0f81655dd31,"Merge pull request #3473 from antlr/github-action-go

GitHub action go"
f7c5440eaa9aead918a2bdef134f45112357739a,Update windows.yml
2549c31d741344cf04036fd4cd38ee6fbc3e2ff5,Update windows.yml
9d19ad4a4abe41a5be964637dfdae4d756317576,"GitHub action php (#3474)

* Update windows.yml

* Create run-tests-php.cmd

* Update run-tests-php.cmd

* Update run-tests-php.cmd

* Update run-tests-php.cmd

* Update run-tests-php.cmd

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update run-tests-php.cmd

* Update windows.yml"
82ace5fb4516d79e18515e45102740f1bf516939,"Cleanup ci (#3476)

* Delete .appveyor directory

* Delete .travis directory"
c33994262e4448f41a744fe75dc1a6ff9429e8df,"Improve CI concurrency (#3477)

* Update windows.yml

* Update windows.yml

* Update windows.yml"
03a45a585f4959257c99d45ed0542b414716d311,"Optimize toArray

replace toArray(new T[size]) with toArray(new T[0]) for better performance

https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion"
1da60dac89d1cb85b56d9db69c87585e80e25394,add contributor
0cff8dc73f6aca93e290fc21d646a035ef44f8d2,resolve conflicts
7d2a37e68eacbaedade04903be802d9fc0e78ad1,Merge branch 're-thc-master'
96c053c6d2d9ae6c7449d175e36188ea754b1a3e,"fix-maven-concurrency (#3479)

* fix-maven-concurrency

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update run-tests-python2.cmd

* Update run-tests-python3.cmd

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update run-tests-php.cmd

* Update windows.yml

* Update run-tests-dart.cmd

* Update run-tests-csharp.cmd

* Update run-tests-go.cmd

* Update run-tests-java.cmd

* Update run-tests-javascript.cmd

* Update run-tests-php.cmd

* Update run-tests-python2.cmd

* Update run-tests-python3.cmd"
1e87a627549f35e0a073c753d5531523fd4cfa7f,increase Windows CI concurrency for all targets except Dart
2be5a44ba10760303fc8600b2816fce8e74fdaf5,"Merge pull request #3484 from ericvergnaud/master

increase Windows CI concurrency for all targets except Dart"
1b144fa7b40f6d1177c9e4f400a6a04f4103d02e,"Preserve line separators for input runtime tests data (#3483)

* Preserve line separators for input data in runtime tests, fix test data

Refactor and improve performance of BaseRuntimeTest

* Add LineSeparator (\n, \r\n) tests

* Set up .gitattributes for LineSeparator_LF.txt (eol=lf) and LineSeparator_CRLF.txt (eol=crlf)"
248cf84b13b5f48f36186a4a923f80e9f64182d5,"Restore `\n` for all input in runtime tests, add extra LexerExec tests (LineSeparatorLf, LineSeparatorCrLf)"
603452551e39c4c99753663175c07030ec885d88,"Add generated LargeLexer test, remove LargeLexer.txt descriptor"
828a68882e0ca27dc8111941bdfe264677975123,tweak name to be GeneratedLexerDescriptors
c973950d8274bcaebe0a2379c440050c0b0322b9,[JavaScript] Migrate from jest to jasmine
2f9102a8ed06977db763f3eacebb05a69462ad91,"Merge pull request #3501 from jcking/js-jasmine

[JavaScript] Migrate from jest to jasmine"
0782e213c74692ffeb06ac2a8f8aa108976b539b,[C++] Fix Windows min/max macro collision
896f90b22c485dfa5082c2e8fa8b2ec1326c726a,[C++] Update cmake README.md to C++17
0e920f56a175d64f1020fe22f354770028831052,remove unnecessary comparisons.
bd6790b9485351e5b7cbd7555e391581d0b1f0f9,Add useful function writeSerializedATNIntegerHistogram for writing out information concerning how many of each integer value appear in a serialized ATN.
57da2e49a6cef2f2296c7ff1aca52eb04d1fe2dc,fix  comment indicating what goes in the serialized ATN.
9e04c9faa74757e3cc42802fd7c4e95c82b20f78,move writeSerializedATNIntegerHistogram out of runtime.
b98d844db348d95c1ca9be8f9afdfedf777ec1ce,follow guidelines
1726ff61779b1be7eae32b7a325162dd864f410a,"Fix .interp file parsing test for the Java runtime.

Also includes separating the generation of the .interp file from writing it out so that we can use both independently."
ac55068133ca81dbba0f57ad83519af36e10343f,Delete files no longer needed. Should have been part of https://github.com/antlr/antlr4/pull/3520
c41663af04cbf6841ac5ee2de0a15cb68d2ceb47,"[C++] Optimizations and cleanups and const correctness, oh my"
79ec55f494562d669bbf0d1641677388b03cf6ca,[C++] Optimize LL1Analyzer
bccc5165bd7951b98bd945876eb56ab081f98772,[C++] Fix missing virtual destructors
0653d2581a4dc9c648f6f1ba6d3d7293aca67021,"Remove not used PROTECTED, PUBLIC, PRIVATE tokens from ANTLRLexer.g"
e19c0abea36409dbd1b89035a37f8145b517406d,"Remove ANTLR 3 stuff from ANTLR grammars, deprecate ANTLR 3 errors"
1785584b21784733fe15eea6828fffdc9606f8b7,Remove not used imaginary tokens from ANTLRParser.g
95f2ab0ddb6ed24989b26921258895d4962d993a,Fix misprints in grammars
54dbececd02474201139c421e5a27d5d7c722bba,"ATN serialized data: remove shifting by 2, remove UUID; fix #3515

Regenerate XPathLexer files"
2ed4948a433b0fa93ad1f39dcdb98b4b6d8ab8a2,Disable native runtime tests (see #3521)
6040190a3a17229334bd36fbcfb9e497adc00dfd,Implement Java-specific ATN data optimization (+-2 shift)
ea9837444dddca28488075269e1e9365b4ed0c54,[C++] Remove now unused antlrcpp::Guid
700c084221603b8de0e88195547140f17af28202,"add branch diagram, Notes on new branches"
aa3a11bb6dddbaa02e89dc7b9cc5a01b4e801df1,tweak
04508f24b9ec0f676c69c222cef3fcc1be01a141,pull new branch diagram from master
548986c5dcd18aa2a27d64265af05206bac22361,tweak
3aa4533dd3579817973bf8ea6be05c1c41f4edfd,use dev not master branch for CI github
23900d2f02303657045a3c719a7eeb48752635ae,master is the default again; update readme/doc
db8a48394a6e30a4bc0554f1eaee1ffbee311938,tweak image location
70bdcdff7ee1a8c6285fa647ffd65f499d442510,tweak image
0d2c9428cf81911b8cf76a9a5a47bb81a60488cb,update doc from master
ad29539cd2e94b2599e0281515f6cbb420d29f38,add back missing author
58eb36c044c69f53bf1d613eef722279164525a5,add back missing author
8f30d478650d1cd1e7d11be35ce28ae327ac91ec,[C++] Fix const correctness in ATN and DFA
c3f41976dc9bc8231c94b772c36b572ceb8dad8a,keep getSerializedATNSegmentLimit at max int
80b85e23e2e3e58930c809694661eee4d1aadd6a,Fixes #3259 make InErrorRecoveryMode public for go
912a305c9d61bb118042b8e7a75c31af494efbe0,Change code gen template to capitalize InErrorRecoveryMode
dc95a7d47e9aee49d748b173664b679aeda116c4,"[C++] Improve multithreaded performance, fix TSAN error, and fix profiling ATN simulator setup bug"
066ca0769156c21e70ba8ae6bea87c27d1cb5afc,Get rid of unnecessary allocations and calculations in SerializedATN
cf7e051d18234e0da4779cae06ea3e3805b7ec82,"Get rid of excess char escaping in generated files, decrease size of output files

Fix creation of excess fragments for Dart, Cpp, PHP runtimes"
03f10b40152b5581723fb5803ab1064d1e88d3f0,Swift: fix binary serialization and use instead of JSON
81202278c8baaccd37d961ea6f23b2b027c6c566,"Fix targetCharValueEscape, make them final and static"
f5f777d5af3a8e847465787e6112872065440014,[C++] Cleanup ATNDeserializer and remove related deprecated methods from ATNSimulator
3bb9ffecae55975cf24142f402bd218da1ea5534,"Fix for #3557 (getting ""go test"" to work again)."
b6dd64d13d3d6c271d9264c284c867e225786667,"Convert Python2/3 to use int arrays not strings for ATN encodings (#3561)

* Convert Python2/3 to use int arrays not strings for ATN encodings. Also make target indicate int vs string.

* rename and reverse ATNSerializedAsInts

* add override

* remove unneeded method"
1e350076eb25806d9552b9c42dac87e29e73c9ca,"[C++] Drastically improve multi-threaded performance (#3550)

Thanks guys. A major advancement."
cf6d90cc6e8dcf17a819f0a78278e56d977707ab,[C++] Remove duplicate includes and remove unused includes (#3563)
5f96e4f6649f4fc35d2d55571f940aa18e1c22b6,[C++] Lazily deserialize ATN in generated code (#3562)
58b802eb6493b86e8161229d45d1061dc35f22f7,"[Docs] Update Swift Docs (#3458)

* Add Swift Package Manager Support

* Swift Package Dynamic

* 【fix】【test】Fix run process path

* [Docs] [Swift] update link, remove expired descriptions

Co-authored-by: Terence Parr <parrt@cs.usfca.edu>"
80a6a564af301e64d03254d7f76f9aee21799f8b,"Ascii only ATN serialization (#3566)

* go back to generating pure ascii ATN serializations to avoid issues where target compilers might assume ascii vs utf-8.

* forgot I had to change php on previous ATN serialization tweak.

* change how we escapeChar() per target.

* oops; gotta use escapeChar method

* rm unneeded case

* add @override"
de4470bbf29c151c1435e2d22ff1df90d11b53e0,"use ints not chars for C# (#3567)

* use ints not chars for C#

* oops. remove 'quotes'

* regen from XPathLexer.g4

* simplify ATN with bypass alts mechanism in Java.

* Change string to int[] for serialized ATN for C#; removed unneeded `use System` from XPathLexer.g4; regen that grammar."
3afd89934426f4fc68acc6d0aa42f16907003ffa,[C++] Use camel case name in generated lexers and parsers (#3565)
219ab7e8ba9c2401d2af4a03a7c9ea57580554a3,Change string to int array for serialized ATN for JavaScript (#3568)
c6930107ee285e9ea5311c82d67dabeca1766160,"perf: Add default implementation for Visit in ParseTreeVisitor.  (#3569)

* perf: Add default implementation for Visit in ParseTreeVisitor.

Reference: https://github.com/antlr/antlr4/blob/ad29539cd2e94b2599e0281515f6cbb420d29f38/runtime/Java/src/org/antlr/v4/runtime/tree/AbstractParseTreeVisitor.java#L18

* doc: add contributor"
abac2af0932ea586062813109d9aa13c3d959c76,Don't use utf decoding...these are just ints (#3573)
d8e16444286343c6568b1b639686a132a260723f,[Go] Cleanup and fix ATN deserialization verification (#3574)
4b0b64290ac95afe728b435f09f33da2d576a88b,[C++] Force generated static data type name to titlecase (#3572)
ce8e2ce3d183375cf975a7e1ebc3f5eb50fbf68f,Use int array not string for ATN in Swift (#3575)
b544a6477860e34a409b9f974cc8502c0b649d2b,[C++] Fix generated Lexer static data constructor (#3576)
46a07148dc678688eed6b7b30c9e2573561949ef,Use int array not string for ATN in Dart (#3578)
1bb30ac332bc086575757d0f68b36b4782ca1ab6,Fix PHP codegen to support int ATN serialization (#3579)
c6d8aaa2f172517f83201618fd4264b074f2683b,Update listener documentation to satisfy the discussion about improving exception handling: https://github.com/antlr/antlr4/discussions/3162
d1e8dbef64e843e58c92c50fe450a6d9fc720986,tweak
e33ed11f35121b4e700356360d92527e3cb83666,"[C++] Remove unused LexerATNSimulator::match_calls (#3570)

* [C++] Remove unused LexerATNSimulator::match_calls

* Remove match_calls from other targets"
01bc811557adad0de63e8db85b78ca8885480378,[Java] Preserve serialized ATN version 3 compatibility (#3583)
3d00d4248d8390b24f96fc21b05c286c07abf996,add jcking to the contributors list
e4bea4d2da831a6d5a5d9da9fb2087a727ddf5ab,Merge branch 'dev' of github.com:antlr/antlr4 into dev
97c793e446ba70e4e63f84e6c2bffd5fffd961a5,add jcking to the contributors list
b8959136bf71ad8ca1809be9fd9e237dcda8eaf6,Update releasing-antlr.md
6d79c193b625a88d010a4ea7322a044697f4fbb1,[C++] Avoid using dynamic_cast where possible by using hand rolled RTTI (#3584)
c68e127a7cf14470565d6e6ae1eff06db3e56ea7,"Revert ""[Java] Preserve serialized ATN version 3 compatibility (#3583)""

This reverts commit 01bc811557adad0de63e8db85b78ca8885480378."
adec47c11a14d3963f4d421131b1d622cddf7b9d,[C++] Add ANTLR4CPP_PUBLIC attributes to various symbols (#3588)
b293f98208ae8afe22f777e26f7cfadd110762bb,"Update editorconfig for c++ (#3586)

* Make it easier to contribute: Add c++ configuration for .editorconfig.

Using the observed style with 2 indentation spaces.

Signed-off-by: Henner Zeller <hzeller@google.com>

* Add hzeller to contributors.txt

Signed-off-by: Henner Zeller <hzeller@google.com>"
69b02007812a206867fc088336b4d03520fecb69,Fix code style and typing to support PHP 8 (#3582)
02e5f66422fb6efb48c8fca2a83abe41d7da32f2,[Go] Port locking algorithm from C++ to Go (#3571)
b0f8551c9a674a0a1e045b9a710800df28e72c10,Use linux DCO not our old contributors certificate of origin
09d2c419ebe4597edffeca228e31aa2cee500ddb,[C++] Fix bugs in SemanticContext (#3595)
44387ad4b481e10d3687404b18eec00b94e2c40e,[Go] Do not export Array2DHashSet which is an implementation detail (#3597)
1c66fae35406ff430c75b25f76f174a43f756266,Merge branch 'dev' of github.com:antlr/antlr4 into dev
db76a479fb62a0a31d3884533e4e17f3be9c5c92,"Revert ""Use linux DCO not our old contributors certificate of origin""

This reverts commit b0f8551c9a674a0a1e045b9a710800df28e72c10."
374c361e3744dd2928db7f771bc7051e0125dcd4,"Use signed ints for ATN serialization not uint16, except for java (#3591)

* refactor serialize so we don't need comments

* more cleanup during refactor

* store language in serializer obj

* A lexer rule token type should never be -1 (EOF). 0 is fragment but then must be > 0.

* Go uses int not uint16 for ATN now. java/go/python3 pass

* remove checks for 0xFFFF in Go.

* C++ uint16_t to int for ATN.

* add mac php dir; fix type on accept() for generated code to be mixed.

* Add test from @kvanTTT. This PR fixes https://github.com/antlr/antlr4/issues/3555 for non-Java targets.

* cleanup and add big lexer from https://github.com/antlr/antlr4/pull/3546

* increase mvn mem size to 2G

* increase mvn mem size to 8G

* turn off the big ATN lexer test as we have memory issues during testing.

* Fixes #3592

* Revert ""C++ uint16_t to int for ATN.""

This reverts commit 4d2ebbf5671a5b373d2ca3b5a05464ccb8b71b52.

# Conflicts:
#	runtime/Cpp/runtime/src/atn/ATNSerializer.cpp
#	runtime/Cpp/runtime/src/tree/xpath/XPathLexer.cpp

* C++ uint16_t to int32_t for ATN.

* rm unnecessary include file, updating project file. get rid of the 0xFFFF does in the C++ deserialization

* rm refs to 0xFFFF in swift

* javascript tests were running as Node...added to ignore list.

* don't distinguish between 16 and 32 bit char sets in serialization; Python2/3  updated to work with this change.

* update C++ to deserialize only 32-bit sets

* 0xFFFF -> -1 for C++ target.

* get other targets to use 32-bit sets in serialization. tests pass locally.

* refactor to reduce code size

* add comment

* oops. comment out call to writeSerializedATNIntegerHistogram(). I wonder if this is why it ran out of memory during testing?

* all but Java, Node, PHP, Go work now for the huge lexer file; I have set them to ignore.  note that the swift target takes over a minute to lex it.  I've turned off Node but it does not seem to terminate but it could terminate eventually.

* all but Java, Node, PHP, Go work now for the huge lexer file; I have set them to ignore.  note that the swift target takes over a minute to lex it.  I've turned off Node but it does not seem to terminate but it could terminate eventually.

* Turn off this big lexer because we get memory errors during continuous integration

* Intermediate commit where I have shuffled around all of the -1 flipping and bumping by two.  work still needs to be done because the token stream rewriter stuff fails. and I assume the other decoding for human readability testing if doesn't work

* convert decode to use int[]; remove dead code. don't use serializeAsChar stuff. more tests pass.

* more tests passing. simplify. When copying atn, must run ATN through serializer to set some state flags.

* 0xFFFD+ are not valid char

* clean up. tests passing now

* huge clean up. Got Java working with 32-bit ATNs!Still working on cleanup but I want to run the tests

* Cleanup the hack I did earlier; everything still seems to work

* Use linux DCO not our old contributors certificate of origin

* remove bump-by-2 code

* clean up per @kvanTTT. Can't test locally on this box. Will see what CI says.

* tweak comment

* Revert ""Use linux DCO not our old contributors certificate of origin""

This reverts commit b0f8551c9a674a0a1e045b9a710800df28e72c10.

* see if C++ works in CI for huge ATN"
c236962d4ed50bdcc8733967e822de7db466ec7c,Merge branch 'dev' of github.com:antlr/antlr4 into dev
f894c664d06dc45dd3347fc4a0e344d5ef763786,"Use linux DCO not our old contributors certificate of origin (#3598)

* Use linux DCO not our old contributors certificate of origin

* Revert ""Use linux DCO not our old contributors certificate of origin""

This reverts commit b0f8551c9a674a0a1e045b9a710800df28e72c10.

* use linux DCO

* use linux DCO

* Use linux DCO not our old contributors certificate of origin

* update release documentation

Signed-off-by: Terence Parr <parrt@antlr.org>"
3cccfdb1a6e5e444365cde89e414a444c3b95988,Merge branch 'dev' of github.com:antlr/antlr4 into dev
ad21ee921505e6c40b90106d67ff9d7565cb5d6f,Equivalent of https://github.com/antlr/antlr4/pull/3537
b79044e1053c92f1edae43d9ee39a9f2da75700c,clean up setup
0822b0a4d624f490560e32728c81dfecc35ee95d,clean up doc version
c575cc3c09367af15bf586f0762f3867adecc775,"[Swift] improvements to equality functions (#3302)

* fix default equality

* equality cases

* optional unwrapping"
d2a2410bdb4cbfdc8b23ee4be01201c215928865,"[Swift] Use for in loops (#3303)

* common for in loops

* reversed loop

* drop first loop

* for in with default BitSet"
3ab65c4581f8a4f7e69d25f517af8caaf1e070a6,[Go] Fix symbol collision in generated lexers and parsers (#3603)
de8b934a1b1c122cf105959bbb6a5cca24d31a0b,[C++] Refactor and optimize SemanticContext (#3594)
7e4b48bac73f2e113f889010de4ae61ec67e1cdd,[C++] Devirtualize hand rolled RTTI for performance (#3609)
e962befe6dd6c42c875678f2aafddc1fae4c9d0f,[C++] Add T::is for type hierarchy checks and remove some dynamic_cast (#3612)
53b83e329b67e7095a37bc155e172aea79f41558,[C++] Avoid copying statically generated serialized ATNs (#3613)
4978f0d2545377edf556b7a01f25dbb51c5e4c14,[C++] Refactor PredictionContext and yet more performance improvements (#3608)
0037a11b248278e38a19fd7be42a5b0fcde236e1,"[C++] Cleanup DFA, DFAState, LexerAction, and yet more performance improvements (#3615)"
271684e38f86a49fe6abe21fe518575afb9562bc,fix dependabot issues
3242daeab3325008caabc96720d11acd9fe8e411,"Merge pull request #3618 from ericvergnaud/fix-dependabot-issues

fix dependabot issues"
9cfbecda0709550435f0e8c3b7a429941d2dac37,"[Swift] use stdlib (single pass) (#3602)

* this was added to the stdlib in Swift 5

* &>> is defined as lhs >> (rhs % lhs.bitwidth)

* the stdlib has these

* reduce loops

* use indices

* append(contentsOf:)

* Array literal init works for sets too!

* inline and remove bit query functions"
cd9f14f47119e9bffd9923d43ffc0bde4380ab89,more optional handling (#3605)
6cf8c0132bd1b57ed25adacf83c41bffc1f0c679,[C++] Minor improvements to PredictionContext (#3616)
696b08670c18aff997f220558b49c08712332c65,use php runtime dev branch to test dev
81e5ee617433200c8f8433c759e69208b294d61f,Merge branch 'dev' of github.com:antlr/antlr4 into dev
8e5f2ffabdd55100d33f9a70af0fdef6b9b0a943,"update doc to be more explicit about the interaction between lexer actions and semantic predicates; Fixes #3611. Fixes #3606.

Signed-off-by: Terence Parr <parrt@antlr.org>"
d26cb63ea13649b37d37389fb0404d505a9d378c,"Refactor js runtime in preparation of future improvements

* refactor, 1 file per class, use import, use module semantics, use webpack 5, use eslint

* all tests pass

* simplifications and alignment with standard js idioms

* simplifications and alignment with standard js idioms

* support reading legacy ATN

* support both module and non-module imports

* fix failing tests

* fix failing tests"
ffd3b0651c4db815bda7899dc8614bd76c702036,No longer necessary too generate sets or single atom transit that are bigger than 16bits. (#3620)
5341cb75452a6adcfdfdf5b6f4404c8606125ea2,"Updated getting started with Cpp documentation. (#3628)

Included specific examples of using ANTLR4_TAG and ANTLR4_ZIP_REPOSITORY in the sample CMakeLists file."
27f02a3b6638799d4f49c100a7b2cc016f540122,[C++] Free ATNConfig lookup set in readonly ATNConfigSet (#3630)
38de75ba2ae242b6eb652c419be44a03838d6787,[C++] Implement configurable PredictionContextMergeCache (#3627)
209544657c7b46f0812573f8bb8d99a328978288,"Allow to choose to switch off building tests in C++ (#3624)

The new option to cmake ANTLR_BUILD_CPP_TESTS is default
on (so the behavior is as before), but it provides a way to
switch off if not needed.

The C++ tests pull in an external dependency (googletests),
which might conflict if ANTLR is used as a subproject in
another cmake project.

Signed-off-by: Henner Zeller <h.zeller@acm.org>"
c58eb5bb5b2c20de2602b08819402551b5b537e7,"Fix NPE for undefined label, fix antlr#2788"
4e2bb5a0ccda044e50b15c3a176226dcea49296e,"An interval ought to be a value

Interval was a pointer to 2 Ints
it ought to be just 2 Ints, which is smaller and more semantically correct,
with no need for a cache.

However, this technically breaks metadata and AnyObject conformance but people shouldn't be relying on those for an Interval."
9e4037b6120cbb10aa94aff94e4edc47e70af38e,[C++] Remove more dynamic_cast usage
d49b9f882fbab9803fba227a03f8e81f658de2b3,[C++] Introduce version macros
4de285fc97bbcee6690be1e071ddde9b49969b58,add license prefix
61ca09ec27c80cf7e94f7d709c69e5dc28097de4,"Prep 4.10 (#3599)

* Tweak doc

* Swift was referring to hardcoded version

* Start version update script.

* add files to update

* clean up setup

* clean up setup

* clean up setup

* don't need file

* don't need file

* Fixes #3600.  add instructions and associated code necessary to build the xpath lexers.

* clean up version nums

* php8

* php8

* php8

* php8

* php8

* php8

* php8

* php8

* tweak doc

* ok, i give up. php won't  bump up too v8

* tweak doc

* version number bumped to 4.10 in runtime.

* Change the doc for releasing and update to use latest ST 4.3.2

* fix dart version to 4.10.0

* cmd files Cannot use export bash command.

* try fixing php ci again

* working on deploy

Signed-off-by: Terence Parr <parrt@antlr.org>

* php8 always install.

* set js to 4.10.0 not 4.10

* turn off apt update for php circleci

* try w/o cimg/php

* try setting branch

* ok i give up

* tweak

* update docs for release.

* php8 circleci

* use 3.5.3 antlr

* use 3.5.3-SNAPSHOT antlr"
37496e25d1d33ad8663a45c19e226c4131bf3655,use full 3.5.3 antlr
b5ccba03c8fa9108975bf13044ce10caed6f579c,"[Swift] reduce Optionals in APIs (#3621)

* ParserRuleContext.children

see comment in removeLastChild

* TokenStream.getText

* Parser._parseListeners

this might require changes to the code templates?

* ATN {various}

* make computeReachSet return empty, not nil

* overrides refine optionality

* BufferedTokenStream getHiddenTokensTo{Left, Right} return empty not nil

* Update Swift.stg

* avoid breakage by adding overload of `getText` in extension"
4621da141db013ec0435f59e6a01c15bf95038ad,"tweak to kick off build

Signed-off-by: Terence Parr <parrt@antlr.org>"
bbee41b627eb1a625a593045ba1d99d09da9b574,try     parallelism: 4 circleci
b554604ac7d37e48017ebad97d704753ac7c247b,"Revert ""[Swift] reduce Optionals in APIs (#3621)""

This reverts commit b5ccba03c8fa9108975bf13044ce10caed6f579c."
917751c435f2fc52da715f0ef49f092601e69d3e,tweaks to doc
5ae27bf74e9392ce557533839df79c19eaa8101d,Improve the deploy  script and tweak the released doc.
6dc3eb7faaf488cdfc82f9869c7569938c98e358,use 4.10 not Snapshot for scripts
8979184c64f7c037e45e125322f9f2c18a070eea,Merge branch 'master' into dev
e1455c06f0b330a49a67361c8df9f242aa877059,"Merge dev into master (#3642)

* Get rid of reflection in CodeGenerator

* Rename TargetType -> Language

* Remove TargetType enum, use String instead as it was before

Create CodeGenerator only one time during grammar processing, refactor code

* Add default branch to appendEscapedCodePoint for unofficial targets (Kotlin)

* Remove getVersion() overrides from Targets since they return the same value

* Remove getLanguage() overrides from Targets since common implementation returns correct value

* [again] don't use ""quiet"" option for mvn tests...hard to figure out what's wrong when failed.

* normalize targets to 80 char strings for ATN serialization, except Java which needs big strings for efficiency.

* Update actions.md

fixed a small typo

* Rename `CodeGenerator.createCodeGenerator` to `CodeGenerator.create`

* Replace constants on string literals in `appendEscapedCodePoint`

* Restore API of Target

getLanguage(): protected -> public as it was before

appendUnicodeEscapedCodePoint(int codePoint, StringBuilder sb, boolean escape): protected -> private (it's a new helper method, no need for API now)

Added comment for appendUnicodeEscapedCodePoint

* Introduce caseInsensitive lexer rule option, fixes #3436

* don't ahead of time compile for DART. See https://github.com/antlr/antlr4/commit/8ca8804ff195fb2cb85468b36b1481bba5220212#commitcomment-62642779

* Simplify test rig related to timeouts (#3445)

* remove all -q quiet mvn options to see output on CI servers.

* run the various unit test classes in parallel rather than each individual test method, all except for Swift at the moment: `-Dparallel=classes -DthreadCount=4`

* use bigger machine at circleci

* No more test groups like parser1, parser2.

* simplify Swift like the other tests

* fix whitespace issues

* use 4.10 not 4.9.4

* improve releasing antlr doc

* Add Support For Swift Package Manager (#3132)

* Add Swift Package Manager Support

* Swift Package Dynamic

* 【fix】【test】Fix run process path

Co-authored-by: Terence Parr <parrt@cs.usfca.edu>

* use src 11 for tool, but 8 for plugin/runtime (#3450)

* use src 11 for tool, but 8 for plugin/runtime/runtime-tests.
* use 11 in CI builds

* cpp/cmake: Fix library install directories (#3447)

This installs DLLs in bin directory instead of lib.

* Python local import fixes (#3232)

* Fixed pygrun relative import issue

* Added name to contributors.txt

Co-authored-by: Terence Parr <parrt@cs.usfca.edu>

* Update javadoc to 8 and 11 (#3454)

* no need for plugin in runtime, always gen svg from dot for javadoc, gen 1.8 not 1.7 doc for runtime. Gen 11 for tool.

* tweak doc for 1.8 runtime.  Test rig should gen 1.8 not 1.7

* [Go] Fix (*BitSet).equals (#3455)

* set tool version for testing

* oops reversion tool version as it's not sync'd with runtime and not time to release yet.

* Remove unused variable from generated code (#3459)

* [C++] Fix bugs in UnbufferedCharStream (#3420)

* Escape bad words during grammar generation (#3451)

* Escape reserved words during grammar generation, fixes #1070 (for -> for_ but RULE_for)

Deprecate USE_OF_BAD_WORD

* Make name and escapedName consistent across tool and codegen classes

Fix other pull request notes

* Rename NamedActionChunk to SymbolRefChunk

* try out windows runners

* rename workflow

* Update windows.yml

Fix cmd line issue

* fix maven issue on windows

* use jdk 11

* remove arch arg

* display Github status for windows

* try testing python3 on windows

* try new run for python3 windows

* try new run for python3 windows (again)

* try new run for python3 windows (again2)

* try new run for python3 windows (again3)

* try new run for python3 windows (again4)

* try new run for python3 windows (again5)

* try new run for python3 windows

* try new run for python3 windows

* try new run for python3 windows

* ugh i give up. python won't install on github actions.

* Update windows.yml

try python 3

* Update windows.yml

* Update run-tests-python3.cmd

* Update run-tests-python3.cmd

* Create run-tests-python2.cmd

* Update windows.yml

* Update run-tests-python2.cmd

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Create run-tests-javascript.cmd

* Update run-tests-javascript.cmd

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Create run-tests-csharp.cmd

* Update windows.yml

* fix warnings in C# CI

* Update windows.yml

* Update windows.yml

* Create run-tests-dart.cmd

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update run-tests-dart.cmd

* Update run-tests-dart.cmd

* Update run-tests-dart.cmd

* Update run-tests-dart.cmd

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Create run-tests-go.cmd

* Update windows.yml

* Update windows.yml

* Update windows.yml

* GitHub action php (#3474)

* Update windows.yml

* Create run-tests-php.cmd

* Update run-tests-php.cmd

* Update run-tests-php.cmd

* Update run-tests-php.cmd

* Update run-tests-php.cmd

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update run-tests-php.cmd

* Update windows.yml

* Cleanup ci (#3476)

* Delete .appveyor directory

* Delete .travis directory

* Improve CI concurrency (#3477)

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Optimize toArray

replace toArray(new T[size]) with toArray(new T[0]) for better performance

https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion

* add contributor

* resolve conflicts

* fix-maven-concurrency (#3479)

* fix-maven-concurrency

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update run-tests-python2.cmd

* Update run-tests-python3.cmd

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update windows.yml

* Update run-tests-php.cmd

* Update windows.yml

* Update run-tests-dart.cmd

* Update run-tests-csharp.cmd

* Update run-tests-go.cmd

* Update run-tests-java.cmd

* Update run-tests-javascript.cmd

* Update run-tests-php.cmd

* Update run-tests-python2.cmd

* Update run-tests-python3.cmd

* increase Windows CI concurrency for all targets except Dart

* Preserve line separators for input runtime tests data (#3483)

* Preserve line separators for input data in runtime tests, fix test data

Refactor and improve performance of BaseRuntimeTest

* Add LineSeparator (\n, \r\n) tests

* Set up .gitattributes for LineSeparator_LF.txt (eol=lf) and LineSeparator_CRLF.txt (eol=crlf)

* Restore `\n` for all input in runtime tests, add extra LexerExec tests (LineSeparatorLf, LineSeparatorCrLf)

* Add generated LargeLexer test, remove LargeLexer.txt descriptor

* tweak name to be GeneratedLexerDescriptors

* [JavaScript] Migrate from jest to jasmine

* [C++] Fix Windows min/max macro collision

* [C++] Update cmake README.md to C++17

* remove unnecessary comparisons.

* Add useful function writeSerializedATNIntegerHistogram for writing out information concerning how many of each integer value appear in a serialized ATN.

* fix  comment indicating what goes in the serialized ATN.

* move writeSerializedATNIntegerHistogram out of runtime.

* follow guidelines

* Fix .interp file parsing test for the Java runtime.

Also includes separating the generation of the .interp file from writing it out so that we can use both independently.

* Delete files no longer needed. Should have been part of https://github.com/antlr/antlr4/pull/3520

* [C++] Optimizations and cleanups and const correctness, oh my

* [C++] Optimize LL1Analyzer

* [C++] Fix missing virtual destructors

* Remove not used PROTECTED, PUBLIC, PRIVATE tokens from ANTLRLexer.g

* Remove ANTLR 3 stuff from ANTLR grammars, deprecate ANTLR 3 errors

* Remove not used imaginary tokens from ANTLRParser.g

* Fix misprints in grammars

* ATN serialized data: remove shifting by 2, remove UUID; fix #3515

Regenerate XPathLexer files

* Disable native runtime tests (see #3521)

* Implement Java-specific ATN data optimization (+-2 shift)

* [C++] Remove now unused antlrcpp::Guid

* pull new branch diagram from master

* use dev not master branch for CI github

* update doc from master

* add back missing author

* [C++] Fix const correctness in ATN and DFA

* keep getSerializedATNSegmentLimit at max int

* Fixes #3259 make InErrorRecoveryMode public for go

* Change code gen template to capitalize InErrorRecoveryMode

* [C++] Improve multithreaded performance, fix TSAN error, and fix profiling ATN simulator setup bug

* Get rid of unnecessary allocations and calculations in SerializedATN

* Get rid of excess char escaping in generated files, decrease size of output files

Fix creation of excess fragments for Dart, Cpp, PHP runtimes

* Swift: fix binary serialization and use instead of JSON

* Fix targetCharValueEscape, make them final and static

* [C++] Cleanup ATNDeserializer and remove related deprecated methods from ATNSimulator

* Fix for #3557 (getting ""go test"" to work again).

* Convert Python2/3 to use int arrays not strings for ATN encodings (#3561)

* Convert Python2/3 to use int arrays not strings for ATN encodings. Also make target indicate int vs string.

* rename and reverse ATNSerializedAsInts

* add override

* remove unneeded method

* [C++] Drastically improve multi-threaded performance (#3550)

Thanks guys. A major advancement.

* [C++] Remove duplicate includes and remove unused includes (#3563)

* [C++] Lazily deserialize ATN in generated code (#3562)

* [Docs] Update Swift Docs (#3458)

* Add Swift Package Manager Support

* Swift Package Dynamic

* 【fix】【test】Fix run process path

* [Docs] [Swift] update link, remove expired descriptions

Co-authored-by: Terence Parr <parrt@cs.usfca.edu>

* Ascii only ATN serialization (#3566)

* go back to generating pure ascii ATN serializations to avoid issues where target compilers might assume ascii vs utf-8.

* forgot I had to change php on previous ATN serialization tweak.

* change how we escapeChar() per target.

* oops; gotta use escapeChar method

* rm unneeded case

* add @override

* use ints not chars for C# (#3567)

* use ints not chars for C#

* oops. remove 'quotes'

* regen from XPathLexer.g4

* simplify ATN with bypass alts mechanism in Java.

* Change string to int[] for serialized ATN for C#; removed unneeded `use System` from XPathLexer.g4; regen that grammar.

* [C++] Use camel case name in generated lexers and parsers (#3565)

* Change string to int array for serialized ATN for JavaScript (#3568)

* perf: Add default implementation for Visit in ParseTreeVisitor.  (#3569)

* perf: Add default implementation for Visit in ParseTreeVisitor.

Reference: https://github.com/antlr/antlr4/blob/ad29539cd2e94b2599e0281515f6cbb420d29f38/runtime/Java/src/org/antlr/v4/runtime/tree/AbstractParseTreeVisitor.java#L18

* doc: add contributor

* Don't use utf decoding...these are just ints (#3573)

* [Go] Cleanup and fix ATN deserialization verification (#3574)

* [C++] Force generated static data type name to titlecase (#3572)

* Use int array not string for ATN in Swift (#3575)

* [C++] Fix generated Lexer static data constructor (#3576)

* Use int array not string for ATN in Dart (#3578)

* Fix PHP codegen to support int ATN serialization (#3579)

* Update listener documentation to satisfy the discussion about improving exception handling: https://github.com/antlr/antlr4/discussions/3162

* tweak

* [C++] Remove unused LexerATNSimulator::match_calls (#3570)

* [C++] Remove unused LexerATNSimulator::match_calls

* Remove match_calls from other targets

* [Java] Preserve serialized ATN version 3 compatibility (#3583)

* add jcking to the contributors list

* Update releasing-antlr.md

* [C++] Avoid using dynamic_cast where possible by using hand rolled RTTI (#3584)

* Revert ""[Java] Preserve serialized ATN version 3 compatibility (#3583)""

This reverts commit 01bc811557adad0de63e8db85b78ca8885480378.

* [C++] Add ANTLR4CPP_PUBLIC attributes to various symbols (#3588)

* Update editorconfig for c++ (#3586)

* Make it easier to contribute: Add c++ configuration for .editorconfig.

Using the observed style with 2 indentation spaces.

Signed-off-by: Henner Zeller <hzeller@google.com>

* Add hzeller to contributors.txt

Signed-off-by: Henner Zeller <hzeller@google.com>

* Fix code style and typing to support PHP 8 (#3582)

* [Go] Port locking algorithm from C++ to Go (#3571)

* Use linux DCO not our old contributors certificate of origin

* [C++] Fix bugs in SemanticContext (#3595)

* [Go] Do not export Array2DHashSet which is an implementation detail (#3597)

* Revert ""Use linux DCO not our old contributors certificate of origin""

This reverts commit b0f8551c9a674a0a1e045b9a710800df28e72c10.

* Use signed ints for ATN serialization not uint16, except for java (#3591)

* refactor serialize so we don't need comments

* more cleanup during refactor

* store language in serializer obj

* A lexer rule token type should never be -1 (EOF). 0 is fragment but then must be > 0.

* Go uses int not uint16 for ATN now. java/go/python3 pass

* remove checks for 0xFFFF in Go.

* C++ uint16_t to int for ATN.

* add mac php dir; fix type on accept() for generated code to be mixed.

* Add test from @kvanTTT. This PR fixes https://github.com/antlr/antlr4/issues/3555 for non-Java targets.

* cleanup and add big lexer from https://github.com/antlr/antlr4/pull/3546

* increase mvn mem size to 2G

* increase mvn mem size to 8G

* turn off the big ATN lexer test as we have memory issues during testing.

* Fixes #3592

* Revert ""C++ uint16_t to int for ATN.""

This reverts commit 4d2ebbf5671a5b373d2ca3b5a05464ccb8b71b52.

# Conflicts:
#	runtime/Cpp/runtime/src/atn/ATNSerializer.cpp
#	runtime/Cpp/runtime/src/tree/xpath/XPathLexer.cpp

* C++ uint16_t to int32_t for ATN.

* rm unnecessary include file, updating project file. get rid of the 0xFFFF does in the C++ deserialization

* rm refs to 0xFFFF in swift

* javascript tests were running as Node...added to ignore list.

* don't distinguish between 16 and 32 bit char sets in serialization; Python2/3  updated to work with this change.

* update C++ to deserialize only 32-bit sets

* 0xFFFF -> -1 for C++ target.

* get other targets to use 32-bit sets in serialization. tests pass locally.

* refactor to reduce code size

* add comment

* oops. comment out call to writeSerializedATNIntegerHistogram(). I wonder if this is why it ran out of memory during testing?

* all but Java, Node, PHP, Go work now for the huge lexer file; I have set them to ignore.  note that the swift target takes over a minute to lex it.  I've turned off Node but it does not seem to terminate but it could terminate eventually.

* all but Java, Node, PHP, Go work now for the huge lexer file; I have set them to ignore.  note that the swift target takes over a minute to lex it.  I've turned off Node but it does not seem to terminate but it could terminate eventually.

* Turn off this big lexer because we get memory errors during continuous integration

* Intermediate commit where I have shuffled around all of the -1 flipping and bumping by two.  work still needs to be done because the token stream rewriter stuff fails. and I assume the other decoding for human readability testing if doesn't work

* convert decode to use int[]; remove dead code. don't use serializeAsChar stuff. more tests pass.

* more tests passing. simplify. When copying atn, must run ATN through serializer to set some state flags.

* 0xFFFD+ are not valid char

* clean up. tests passing now

* huge clean up. Got Java working with 32-bit ATNs!Still working on cleanup but I want to run the tests

* Cleanup the hack I did earlier; everything still seems to work

* Use linux DCO not our old contributors certificate of origin

* remove bump-by-2 code

* clean up per @kvanTTT. Can't test locally on this box. Will see what CI says.

* tweak comment

* Revert ""Use linux DCO not our old contributors certificate of origin""

This reverts commit b0f8551c9a674a0a1e045b9a710800df28e72c10.

* see if C++ works in CI for huge ATN

* Use linux DCO not our old contributors certificate of origin (#3598)

* Use linux DCO not our old contributors certificate of origin

* Revert ""Use linux DCO not our old contributors certificate of origin""

This reverts commit b0f8551c9a674a0a1e045b9a710800df28e72c10.

* use linux DCO

* use linux DCO

* Use linux DCO not our old contributors certificate of origin

* update release documentation

Signed-off-by: Terence Parr <parrt@antlr.org>

* Equivalent of https://github.com/antlr/antlr4/pull/3537

* clean up setup

* clean up doc version

* [Swift] improvements to equality functions (#3302)

* fix default equality

* equality cases

* optional unwrapping

* [Swift] Use for in loops (#3303)

* common for in loops

* reversed loop

* drop first loop

* for in with default BitSet

* [Go] Fix symbol collision in generated lexers and parsers (#3603)

* [C++] Refactor and optimize SemanticContext (#3594)

* [C++] Devirtualize hand rolled RTTI for performance (#3609)

* [C++] Add T::is for type hierarchy checks and remove some dynamic_cast (#3612)

* [C++] Avoid copying statically generated serialized ATNs (#3613)

* [C++] Refactor PredictionContext and yet more performance improvements (#3608)

* [C++] Cleanup DFA, DFAState, LexerAction, and yet more performance improvements (#3615)

* fix dependabot issues

* [Swift] use stdlib (single pass) (#3602)

* this was added to the stdlib in Swift 5

* &>> is defined as lhs >> (rhs % lhs.bitwidth)

* the stdlib has these

* reduce loops

* use indices

* append(contentsOf:)

* Array literal init works for sets too!

* inline and remove bit query functions

* more optional handling (#3605)

* [C++] Minor improvements to PredictionContext (#3616)

* use php runtime dev branch to test dev

* update doc to be more explicit about the interaction between lexer actions and semantic predicates; Fixes #3611. Fixes #3606.

Signed-off-by: Terence Parr <parrt@antlr.org>

* Refactor js runtime in preparation of future improvements

* refactor, 1 file per class, use import, use module semantics, use webpack 5, use eslint

* all tests pass

* simplifications and alignment with standard js idioms

* simplifications and alignment with standard js idioms

* support reading legacy ATN

* support both module and non-module imports

* fix failing tests

* fix failing tests

* No longer necessary too generate sets or single atom transit that are bigger than 16bits. (#3620)

* Updated getting started with Cpp documentation. (#3628)

Included specific examples of using ANTLR4_TAG and ANTLR4_ZIP_REPOSITORY in the sample CMakeLists file.

* [C++] Free ATNConfig lookup set in readonly ATNConfigSet (#3630)

* [C++] Implement configurable PredictionContextMergeCache (#3627)

* Allow to choose to switch off building tests in C++ (#3624)

The new option to cmake ANTLR_BUILD_CPP_TESTS is default
on (so the behavior is as before), but it provides a way to
switch off if not needed.

The C++ tests pull in an external dependency (googletests),
which might conflict if ANTLR is used as a subproject in
another cmake project.

Signed-off-by: Henner Zeller <h.zeller@acm.org>

* Fix NPE for undefined label, fix antlr#2788

* An interval ought to be a value

Interval was a pointer to 2 Ints
it ought to be just 2 Ints, which is smaller and more semantically correct,
with no need for a cache.

However, this technically breaks metadata and AnyObject conformance but people shouldn't be relying on those for an Interval.

* [C++] Remove more dynamic_cast usage

* [C++] Introduce version macros

* add license prefix

* Prep 4.10 (#3599)

* Tweak doc

* Swift was referring to hardcoded version

* Start version update script.

* add files to update

* clean up setup

* clean up setup

* clean up setup

* don't need file

* don't need file

* Fixes #3600.  add instructions and associated code necessary to build the xpath lexers.

* clean up version nums

* php8

* php8

* php8

* php8

* php8

* php8

* php8

* php8

* tweak doc

* ok, i give up. php won't  bump up too v8

* tweak doc

* version number bumped to 4.10 in runtime.

* Change the doc for releasing and update to use latest ST 4.3.2

* fix dart version to 4.10.0

* cmd files Cannot use export bash command.

* try fixing php ci again

* working on deploy

Signed-off-by: Terence Parr <parrt@antlr.org>

* php8 always install.

* set js to 4.10.0 not 4.10

* turn off apt update for php circleci

* try w/o cimg/php

* try setting branch

* ok i give up

* tweak

* update docs for release.

* php8 circleci

* use 3.5.3 antlr

* use 3.5.3-SNAPSHOT antlr

* use full 3.5.3 antlr

* [Swift] reduce Optionals in APIs (#3621)

* ParserRuleContext.children

see comment in removeLastChild

* TokenStream.getText

* Parser._parseListeners

this might require changes to the code templates?

* ATN {various}

* make computeReachSet return empty, not nil

* overrides refine optionality

* BufferedTokenStream getHiddenTokensTo{Left, Right} return empty not nil

* Update Swift.stg

* avoid breakage by adding overload of `getText` in extension

* tweak to kick off build

Signed-off-by: Terence Parr <parrt@antlr.org>

* try     parallelism: 4 circleci

* Revert ""[Swift] reduce Optionals in APIs (#3621)""

This reverts commit b5ccba03c8fa9108975bf13044ce10caed6f579c.

* tweaks to doc

* Improve the deploy  script and tweak the released doc.

* use 4.10 not Snapshot for scripts

Co-authored-by: Ivan Kochurkin <kvanttt@gmail.com>
Co-authored-by: Alexandr <60813335+Alex-Andrv@users.noreply.github.com>
Co-authored-by: 100mango <100mango@users.noreply.github.com>
Co-authored-by: Biswapriyo Nath <nathbappai@gmail.com>
Co-authored-by: Benjamin Spiegel <bspiegel11@gmail.com>
Co-authored-by: Justin King <jcking@google.com>
Co-authored-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>
Co-authored-by: Harry Chan <harry.chan@codersatlas.com>
Co-authored-by: Ken Domino <kenneth.domino@domemtech.com>
Co-authored-by: chenquan <chenquan.dev@gmail.com>
Co-authored-by: Marcos Passos <marcospassos@users.noreply.github.com>
Co-authored-by: Henner Zeller <h.zeller@acm.org>
Co-authored-by: Dante Broggi <34220985+Dante-Broggi@users.noreply.github.com>
Co-authored-by: chris-miner <94078897+chris-miner@users.noreply.github.com>"
77cb13b7d757be4ff93f7d3458d28610a69bdbeb,"more doc tweaks, update js json"
80edad927c7f48bec615ec95305f4af2416f6f81,Merge branch 'master' into dev
f8713490b9c0d96e8337296793a4426b862f692f,Merge branch 'dev' of github.com:antlr/antlr4 into dev
b9fd3d501983587d8e270d2be881857d0f7dc380,"tweak readme

Signed-off-by: Terence Parr <parrt@antlr.org>"
c0e877c2cc8c86c193cf99cd261212262cae9cd6,"tweak release doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
20abdb563e80a52ae4a6f08ac5b6256742222e39,Merge branch 'master' into dev
1684238b9a36d83867d4ded0615171114ac49a47,"[C++] Fix bugs in ParserATNSimulator and PredictionContextMergeCache (#3644)

* [C++] Fix bug in ParserATNSimulator

Signed-off-by: Justin King <jcking@google.com>

* [C++] Fix bug in PredictionContextMergeCache

Signed-off-by: Justin King <jcking@google.com>

* [C++] Enable asserts during tests and use parallelism based on available resources

Signed-off-by: Justin King <jcking@google.com>"
4b909532e936123cff025be989fc9b4284864944,"change c++ version file for script

Signed-off-by: Terence Parr <parrt@antlr.org>"
74be2b69863cb1e0b9f0ddf4e2806bd106684296,"[C++] Update version to 4.10

Signed-off-by: Justin King <jcking@google.com>"
728c7cbd50aa558e0c852eec392004d9d1cb0c69,"Merge pull request #3646 from jcking/cpp-update-version

[C++] Update version to 4.10"
ade6181c3b4493d7d2cc46eb5b49b2294206cbd9,"[C++] Update version to 4.10 (#3647)

Signed-off-by: Justin King <jcking@google.com>"
3e182e934a88e890796f20a36c988f7d63cb5125,"update script to have warning

Signed-off-by: Terence Parr <parrt@antlr.org>"
0d4f6c951ca1b201d65162dcacf6817d3813f3a1,Merge branch 'master' of github.com:antlr/antlr4
e56dff62ec06748da070b0de6b8a5c34367a2bcc,Merge branch 'dev' of github.com:antlr/antlr4 into dev
d11a10e630d23bb1b2f0e833e9eaf1764e31320f,"tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
c7567ba9bb40c361dda60e60e2bc932a16d2adf8,[maven-release-plugin] prepare release 4.10
2471728f29691215aa3d3097e8eb2c95972c3de4,[maven-release-plugin] prepare for next development iteration
e37fea125e83dd2c73813c3febaaa21897d14cf0,"tweak doc, scripts for release

Signed-off-by: Terence Parr <parrt@antlr.org>"
661d8ec470c1167035a13956bd32b5eb6b1ff224,"deploy script copied wrong jar file

Signed-off-by: Terence Parr <parrt@antlr.org>"
3e3fecf106726dae582a4e8deef156efee31b7e5,"fix badges

Signed-off-by: Terence Parr <parrt@antlr.org>"
3adf4fd3d2abcd62660ee659a9d549f7c6e918e7,"use to 4.3.3 ST4, tweak status badge

Signed-off-by: Terence Parr <parrt@antlr.org>"
ae1bf405f0071ad06dc7fc3105d074aad1130135,"use to 4.3.3 ST4 not snapshot

Signed-off-by: Terence Parr <parrt@antlr.org>"
ec0ca73446aee709cc958ffd4cf2d55ecdf77300,"[C++] Remove reference to antlrcpp:s2ws (#3656)

Signed-off-by: Justin King <jcking@google.com>"
3724b19e25df671856680fddd3999d54a4823bb9,"[C++] Remove reference to antlrcpp:s2ws (#3656) (#3657)

Signed-off-by: Justin King <jcking@google.com>"
57e7fb2bb6eeda85d979e490b9a8a4bd8d6d1ec6,"Fix build to set the release to Java 8 (#3648)

Signed-off-by: Tyler Van Gorder <tkvangorder@users.noreply.github.com>

Co-authored-by: Tyler Van Gorder <tkvangorder@users.noreply.github.com>"
f6b202279c0c76fbe0224983f4c75651087ca5e3,"update instruction for dart (#3655)

Signed-off-by: Larry Li <me@lingyu.li>"
6b2e35e13ff9b478951f6ec43fccae0927c6b280,Merge branch 'master' into dev
03c47f766ef0eeb292e4a1df60dae4ffe63400a3,"Prep 4.10.1 (#3660)

* [C++] Remove reference to antlrcpp:s2ws (#3656)

Signed-off-by: Justin King <jcking@google.com>

* Fix build to set the release to Java 8 (#3648)

Signed-off-by: Tyler Van Gorder <tkvangorder@users.noreply.github.com>

Co-authored-by: Tyler Van Gorder <tkvangorder@users.noreply.github.com>

* prep for 4.10.1

Signed-off-by: Terence Parr <parrt@antlr.org>

* fix v numbers

Signed-off-by: Terence Parr <parrt@antlr.org>

Co-authored-by: Justin King <jcking@google.com>
Co-authored-by: Tyler Van Gorder <1878529+tkvangorder@users.noreply.github.com>
Co-authored-by: Tyler Van Gorder <tkvangorder@users.noreply.github.com>"
944e11e3b5d6859129e02e087840cb33038b9efd,"rm python3 dependence in setup.py for py2

Signed-off-by: Terence Parr <parrt@antlr.org>"
6d3c2e059db67be71cfcc33c74241ca0dc0539c1,Merge branch 'master' into dev
44d87bc1d130c88aa452894aa5f7e2f710f68253,[maven-release-plugin] prepare release 4.10.1
3009c9243d72982652a27e31b4fa88e0c1085178,[maven-release-plugin] prepare for next development iteration
2c5d74e36d78180503bed2a465e52adadf181467,Merge branch 'master' into dev
79c36419192d7784b61d59f26305d2e10075d9f3,"tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
2b32706b5782a62de1e1314675c0a800e1f36b3b,Merge branch 'master' into dev
f25a4f6275ed259c6a155eafcd0cb1a5252dde13,"fix description for Python3

Signed-off-by: Terence Parr <terence@parr.us>"
c85447993ffedad7c2469e1f508d98c7aaa80d0c,Merge branch 'master' into dev
b973b42982fc7525bb5069ce3327cd2dd663c709,"Modernize CMakeLists.txt and a few Windows specific fixes (#3663)

* Upgraded to minimum version 3.15 (was 3.14)
* Use CMAKE_MSVC_RUNTIME_LIBRARY to configure CRT
* Use target_compile_definitions to configure definitions so they can
selectively be propagated upward (ANTLR4CPP_EXPORTS & ANTLR4CPP_STATIC
needed to be propagated upwards)
* Handle CRT requirement for test correctly (gtest configuration should
depend on WITH_STATIC_CRT)
* Don't change the default CMake output directory. With multiple
configurations CMake doesn't trigger a build when the configuration is
switched resulting in link errors (debug linking against release or
vice-versa).
* Rename the static pdb file the same as the library (this was a
conflict with both static and shared attempting to write to the same pdb
file)
* Fixed x86 targets (definition of MurmurHash::update was missing)
* Updated CMakeSettings.json to build within project directory hierarchy
rather than in user profile directory (the latter used to be VS default)

Signed-off-by: HS <hs@apotell.com>"
ae1f3f182a2095b0f1607a8e8e0653cdb5b5f2e2,"Remove use of f-string in setup.py #3650 (#3662)

Signed-off-by: Alex Mykyta <amykyta3@users.noreply.github.com>"
ae666e6865a9ffb454a2f99f084c0a2727e8f4fc,[C++] Introduce synchronization and container abstractions (#3694)
1650f0ed8ca5199ff4e91ea36e1acb1dc9290440,[C++] Fix synchronization abstraction includes for Abseil (#3695)
a9e0ccf1106c4e9da959810d44a6af8c526f5613,[C++] Fix synchronization abstraction for Abseil (#3696)
7e8a8b52cab6a253c08969db36b0f278e7a9affb,"Improve ExternalProject cmake file (#3697)

* Set cmake CMP0144, if available

Signed-off-by: Robert Adam <dev@robert-adam.de>

* Add include dirs directly to defined targets

By directly associating the defined antlr_* targets with the respective
include directories, we make sure that any user that links against one
of these targets, automatically has the necessary directories in their
include path as well (without the need to explicitly specify them) as
cmake will transitively propagate the interface include dirs to the
linked-to target.

Signed-off-by: Robert Adam <dev@robert-adam.de>"
79530984d41e1fa5ed081e9156de9bec6df591f5,"Fix golang tests by regenerating test lexers (#3719)

Signed-off-by: Tristan Swadell <tswadell@google.com>"
ee62e23da9669c20509984e0013664a851565e8f,"update issue template

Signed-off-by: Terence Parr <parrt@antlr.org>"
88255f594a4cf1627d1684973938ad1c6026d06c,Merge branch 'master' into dev
07cb815d935556a4807c704eaebbd5059e8584d1,Merge branch 'dev' of github.com:antlr/antlr4 into dev
0baf290af54348a48591aa7fa365574411994917,"Ensure that only the tokens needed are fetched (#3722)

Signed-off-by: Tristan Swadell <tswadell@google.com>"
5bc2325e5069d428d4dc8f9d53ad7643726bbd34,"Add interp tool like TestRig (#3727)

* initial wack at interp tool

Signed-off-by: Terence Parr <parrt@antlr.org>

* support split grammars.

Signed-off-by: Terence Parr <parrt@antlr.org>

* cleanup

Signed-off-by: Terence Parr <parrt@antlr.org>

* cleanup

Signed-off-by: Terence Parr <parrt@antlr.org>

* improve interp options; save csv to file.

Signed-off-by: Terence Parr <parrt@antlr.org>

* typo in Interpreter

Signed-off-by: Terence Parr <parrt@antlr.org>

* do nothing if no grammars

Signed-off-by: Terence Parr <parrt@antlr.org>"
52d3747c82c13e5d7117b213267a799e711a7895,"set tool to 4.10.2-SNAPSHOT for deploying prior to release

Signed-off-by: Terence Parr <parrt@antlr.org>"
1a56291407f29078015bdb99ea6c079526e138ac,"Fixing bug identified by https://github.com/antlr/antlr4/discussions/3712 (#3726)

Signed-off-by: Terence Parr <parrt@antlr.org>"
9cb5c489c96fb6f10cfb554bb5f02f0f1a189528,"Fix python tests running from IntelliJ

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
6a9a984872c846f807639268ce1cf09d716a025d,"Fix php tests running from IntelliJ

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
d480b66e7cafe40a3fd74abdc26d337772d563e7,"Drop compiling C# runtime using scripts since it's managed by tests infrastructure

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
d761b558886282f389b3e231a628b8e1f2f08264,"Set up C++ runtime tests on Windows using msbuild, fixes #3389

Drop old version of Visual Studio C++ (2013, 2015, 2017), fixes #3723

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
54cfc46576d849a31307d2359f8fab32632e098c,"Update ANTLR C++ windows demo (vs2022) and deploy-windows.cmd

Remove outdated projects (2013, 2015)"
d561cf7200f4c2a81bbe21fc15e204295e548d2d,C++ runtime tests: use Release config instead of Debug during building ANTLR runtime (at least much less size of binary)
b9cd120e2d4beeab52c4830756fac395501f21b3,"Add scripts for testing C++ on Windows

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
2fd9ae46a4c0a7444f24c20ff8494ca6df187760,"Temporary disable CI for C++ on Windows

Since it looks like MSBuild installing requires admin privileges"
72f274d513cc3110a3e9320b6f3bfc689ecab142,"Update LICENSE.TXT to give automated GitHub Match

* Adjust text of BSD license so that it is now recognised as  BSD-3-Clause license  by GitHub auto-detection.  This includes necessary removal of text [The ""BSD 3-clause license""].
* Update copyright year to include current year 2022
* Remove MIT license.  This should be included in THIRD-PARTY-NOTICES.txt.

Signed-off-by: msymons <bliksim99@yahoo.com>"
8c9b14731d40b3179fa51c3f7ddecf408993cc29,"License Name and URLs

* Update license name to BSD-3-Clause (Official SPDX short identifier for the license).  This helps ensure that SCA tooling can correctly identify the license.
* Update URLs to use https where https is used.

Signed-off-by: msymons <bliksim99@yahoo.com>"
9bf143f45af809ded5362c942057fa8ed68195e0,"Create THIRD-PARTY-NOTICES.txt

THIRD-PARTY-NOTICES.txt contains the MIT license for String.prototype.codePointAt.   This was originally included in antlr4 LICENSE.txt, breaking the GitHub auomatic license recognition.

The file is structured so that additional Third Party notices can easily be added.

Signed-off-by: msymons <bliksim99@yahoo.com>"
9cf7e96a2adbf71021bc2c1ccf2917a574040b08,"update my author webpage

Signed-off-by: Terence Parr <parrt@antlr.org>"
98bfc3a21e3a891bdf08946fe08b75fac3e636ef,"Refactor runtime tests: move stg templates to .stg files

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
4fa37bc1bd3b9ae324dc09093668dafe1eaf6d9d,"Refactor runtime tests: unify getGeneratedFiles() code

Introduce getLexerSuffix(), getParserSuffix(), getBaseListenerSuffix(), getListenerSuffix(), getBaseVisitorSuffix(), getVisitorSuffix() methods

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
3f34d25304550d4c25864b3e73d5ba89a7ee38cd,"Refactor runtime tests: introduce Processor and use it everywhere in tests

Print output to console instead of file for Python runtimes

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
35794ef08c24e6693669eec8540413c9ddab2132,"Introduce universal workflow that used for all runtimes (`BaseRuntimeTestSupport`).

It contains the following stages:
  * Generate
  * Compile
  * Execute
  After completion of every stage, corresponding state is being created.
  Every state contains exception (if a error occurred) and reference to the previous
  state.
  Java execution state is special because it contains java objects that are used
  in some tests.
  It's not necessary to run the workflow until the last stages, some test require
  only generation or compilation.

* Clarify API of `BaseRuntimeTestSupport`. Now almost all methods have
  basic implementation
* Extract `stg` templates and other resource to separate files and simplify them
* Clear CI build and run scripts
* Extract `FileUtils`, `Generator`, clarify other util classes
* Improve performance:
    * Use cache for resources (do not load resource twice)
    * Extract static code parts

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
6681c9cdf19b9b52c4dff9f6e80ba204d64a6207,"Remove stuff related to heartbeat since it looks like it doesn't affect anything

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
4d5a6bf3c208582aafe3aeb4d106b4bc10254112,"Simplify runtime and tool tests, make tests fully concurrent

Use dynamic tests, remove duplicated code

Update jUnit: 4.13.2 -> 5.8.2

Update maven-surefire-plugin to 2.22.2

Make immutable RuntimeTestDescriptor

Simplify CI run scripts, set up parallelization via config

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
0e4b8fcfba780290af5fa44675ee62e8efab2e09,"Remove outdated .test.stg and .gunit files

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
f8aa1f8d07792b8b8d05f0077f834155b776240b,"Introduce OSType (Windows, Linux, Mac, Unknown)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
858a9f986933132e5b15b38bc4fb8b421f0d8709,"Unify output for all runtimes

Simplify StreamVacuum and rename it to StreamReader

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
c61959fa666a2a23620fa87895d889290be52927,"Add missing Copyright comments to the new files

Remove useless getGrammar() method, update RuntimeTests description

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
1c2dc79d5b33a333e9f95f96e25e8a3902acdec7,"Remove inheritance on BaseJavaToolTest

Rename BaseJavaToolTest to ToolTestUtils

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
f5843abaf5e7e2d763941417b04698e4b5d86b84,"Update antlr-project-testing.md

Use relative links instead of absolute

Add line breaks to paragraphs for better UX

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
1a5045d4c6fc0d0636edbd164adeb74b1bd08907,"Increment runtime tests generation (3 -> 4)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
02479659fe990e868ae2d9fbba9491b46e5fdbbe,"Ignore service directories during collecting of runtime test descriptors  (like .DS_Store)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
419ab117fe189a54079246357acb68031ad1563e,"FindANTLR: Fix version RegEx

The currently used RegEx only allowed for single-digit version components for
everything but the major version. Thus, when parsing e.g. the version 4.10.1,
only the part 4.1 would be matched and thus, the determined ANTLR version
would be wrong.

Signed-off-by: Robert Adam <dev@robert-adam.de>"
e4cec2039bfbcf4bddf722aa13b10b654ab3724e,"update getting-started doc

Signed-off-by: nicksxs <nicksxs@hotmail.com>"
9d344f1d44ce2f5d9b92c3f6e7a09a50de487ffc,"Issue 3720: Java 2 Security issue

Signed-off-by: Will <dazeydev.3@gmail.com>"
a2de55858f28a3872b6ce05d7b57f1d052368241,"Fix OSGi imports

org.antlr.v4.gui is only used for backwards compatibility, but the
manifest generated by upgraded maven-bundle-plugin generates an
Import-Package requirement. This breaks the ability to load
antlr4-runtime in an OSGi enviroment, when nothing provides
org.antlr.v4.gui.

Fix this by specifying resultion as optional.

Signed-off-by: Robert Varga <robert.varga@pantheon.tech>"
ff130df07ceba6beffee77f876d6a3188ce6042d,"Update README.md for arm

Signed-off-by: uji <ujiprog@gmail.com>"
67f51da024e7b998cd0644d81a3793185d062438,"Cpp: Disable warnings for external project

When adding ANTLR as an external project, the downstream users will
(generally) not be interested in compiler warnings emitted for ANTLR
itself, as they won't be able to do anything about them anyway (in their
project).

Thus, this commit adds a new cmake option DISABLE_WARNINGS that can be
used to suppress compiler warnings. This flag is then subsequently set
whenever ANTLR is used as an ExternalProject.

Signed-off-by: Robert Adam <dev@robert-adam.de>"
db2952531a395c05d068d70962cb7899163e2124,"fix URL to download page.

Signed-off-by: GCer-Hidenori <gcer.hidenori+github@gmail.com>"
ec547fe794e0eb0c58fbb7d7fed1b17d219ef746,"tweak url

Signed-off-by: Terence Parr <parrt@antlr.org>"
9abda183db8e241cb216308652bf76d2938d1f47,Merge branch 'master' of github.com:antlr/antlr4
16362428a3119c294b3401e305c2f0528c052e3f,"tweak url

Signed-off-by: Terence Parr <parrt@antlr.org>"
1d57bdf7a02fcd3c36d0eac27e2b4d0e14c272de,Merge branch 'dev' of github.com:antlr/antlr4 into dev
c43982e0c59cbf09815001fc168f2e8c3729299b,"Implement fast parallel lock-free in-process testing for Java

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
ded070bb461f03d790e09ca169161da37496b861,"Add final modifier to all static fields where it's possible

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
a400163f23b29eb0b164ebc933c9201f7641a499,"Remove doubtful and not used static fields

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
875911c2b2e6e50317e75ff2b5e80f4014a75954,"Fix potential deadlocks in Java runtime

Referencing subclass ParserRuleContext from superclass RuleContext initializer might lead to class loading deadlock

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
67baf7b9487a18a8b25daaf16d44e545ee24cf1d,"Unify C#, C++, Dart, Go, Python runtimes

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
9b9d2c7c283a4a6a427f1e58fd2328cfe1ce065b,"Use AtomicInteger instead of int for static PredictionContext.globalNodeCount

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
70d0a7a84d909f6f45b826699030e6831fa4dd0f,"Remove lock in Generator (now ANTLR tool is thread-safe)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
6a7e651c76215633a71af1fbcd9e0b9190de4e06,"Cache templates for codegen to static field, load only one time

Remove useless loadTemplates overloads

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
fab788b4bad467071c85cb034c6a350373f692d5,"Cache LeftRecursiveRules.stg to static field

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
7a9ca9997a38b2586b1bdd8124691b062554adea,"Cache ANTLR error message templates to static field

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
578d8f4d6cc6d7ac8ad5803ea7608366b46733c9,"Cache runtime test templates to static field

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
05f403abccb5c16f7a59c0996b5e200a5ff783c5,"Clarify message of failed runtime tests

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
260433164ce32073c7ae827bc75c983f4fe783a1,"Pass testSourceUri to dynamicTest and to dynamicContainer for convenient navigation to tests data in IntelliJ

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
8ab4e0c58de8ef59fb3caca7962e637fdd952d2e,"Extract prepareGrammars method

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
6a6d9300381a9a12f88b663d476614ae2d325d2e,"Remove useless and outdated files

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
473b1f4db8d534bb95bc9f6b98a5e8be954cbf00,"Update pom.xml in runtime-testsuite

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
7d292d11f19aba57fee68d4d1b7f5069aa55d253,"Use runtimePath instead of targetClassesPath for runtimes' sources

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
a7c558b8b8fdd90169c1cc218921439c16e19211,"Update doc

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
7e8c4f4d9b5659673f00289c1ee60c7a74007042,"Fix potential problems with concurrent access to hash maps

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
ff2acb19f399c882ab038bd944af1a3797b5c636,"Restore info about `mvn -Dtest=java.** test` in antlr-project-testing.md

Fix misprint

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
fdc5aedb136e61ac6d348b74184d7b3425c94250,"Fix warning in Swift runtime

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
a81ec05babdcc625466492aa22ba4a06b8ed1448,"Use crossplatform semaphore instead of unsafe raw pthread_mutex_t

Also, it seems faster: https://stackoverflow.com/a/46174300/1046374

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
741a51a9b11d25272ccb162bb80a547b2f498764,"Swift runtime test works on Windows!

Add Swift binaries to .gitignore

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
033d7b3b50db24e0d0152f5cf5278f65ca61d353,"Soft fail test if its directory can not be removed

Print exception info to console

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
ab8b22d0f0470f142613ee214cea1895c9ecc3b9,"Unify Swift API

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
62312c14dc98896a991af197c079a58055210802,"Simplify Swift test project compilation

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
c1b448f738dbc193977c5e17885640e6b1c10e13,"Move Package.swift to Swift runtime directory

Fix build warnings

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
376922820f53531d611e328342428e69c1f4b26d,"Remove outdated .travis.yml

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
1ab5671861701b1df81dfaa8f1fb7fb3e66e93c2,"Fix unsafe concurrent access in RuntimeRunner

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
3939bfb9189baad5075040a90fecb38a2eabb45a,"Introduce getCompilerPath() method (actual for C++ and Swift)

antlr-exec property is actual for all runtimes, not only Python

Simplify C++ runtime tester (use MSBuild value from PATH for Windows)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
711116285e93aecf0c6a2a5d90463e460b635b3c,"Fix linux swift scripts for CircleCI

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
0dffe20bbc30fc45530bfff60af64cee1c8bd8fc,"Simplify and clarify CircleCI scripts

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
395b7db6859b516755b447803f1ae5c62657f587,"Add the extra tests group

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
a51424df5b8247ea4bc75a59b493d5e095779d9f,"Update dotnet in tests (3.1 -> 6.0)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
b61b57208663dd0e50873dd2bc541362172ed7c3,"Clean up pom.xml files, update dependencies

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
003bd3499f853401a26f146c2118cc299d7f0483,"new nuget directory for building ANTLR4 C++ runtime as 3 Nuget packages (#3741)

* new nuget directory for building ANTLR4 C++ runtime as 3 Nuget packages

Signed-off-by: Francis ANDRE <francis.andre.kampbell@orange.fr>

* Ignore Nuget packages

Signed-off-by: Francis ANDRE <francis.andre.kampbell@orange.fr>

* Remove vs2015, vs2017. Add vs2022

Signed-off-by: Francis ANDRE <francis.andre.kampbell@orange.fr>

* Fix Configuration name. Fix Copyright ending year

Signed-off-by: Francis ANDRE <francis.andre.kampbell@orange.fr>"
2349068a3fd0b9905585f291a615853d359402b1,"Fixed #2296

Visited set is now passed across internal invocations of Grammar#loadImportedGrammars of each imported grammar, to retain the knowledge if imported sets.

Signed-off-by: aermicioi <alexandru.ermicioi@gmail.com>"
d5c5e6fbaac2ac121c5704fc7478f7adb4d77de6,"Add testCircularGrammarInclusion

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
f608b9bbf26c87de2efbf534ae5081d4b96868e8,"Windows specific fixes

* Set the MSVC runtime library configuration AFTER the option to select
CRT is set.
* Add the post build steps only if building tests

Signed-off-by: HS <hs@apotell.com>"
82b0af72ebc40708f73885365d767e628a703619,"Build using clang (not clang-cl)

Signed-off-by: HS <hs@apotell.com>"
68ceefb0cf10da9fdd8d6241356a47592891bd9b,"Don't make class SementicContext::Empty final.

The class does not implement the pure virtual methods so can
not be considered 'final'. Clang 10 and 11 complain about this.

Context: https://github.com/chipsalliance/Surelog/issues/3081
Signed-off-by: Henner Zeller <h.zeller@acm.org>"
f6c29b61c5d5c34117945d9a6f50054518b5b3f5,"Fix CMake syntax for variable expansion

When using variables to compare (like in if clause) the variable
shouldn't be quoted. More details can be found at the link below:

https://cmake.org/cmake/help/latest/command/if.html#variable-expansion

Signed-off-by: HS <hs@apotell.com>"
f1df3164ca2c2b143b83ff535082ec6f846165c2,"add blank github action file for hosted CI

Signed-off-by: Terence Parr <parrt@antlr.org>"
88b8e7638c7ba9a3fec1350c90749f2d57a7a39d,"Issue #3783: CI Check Builds

Adding workflow for Github hosted CI check builds. Supports all three
supported platforms with all runtime languages except swift.

Also, includes cpp native builds across all supported platforms i.e.
independent on the test run builds.

Every congiguration build generates an artifact (archive of the entire
repository) and is uploaded as a result of the build (regardless of
success or failure).

Signed-off-by: HS <hs@apotell.com>"
3591ee0b51c6bb914f7ef0749182306fefe9cc18,"update getting started document to say java 11

Signed-off-by: Terence Parr <parrt@antlr.org>"
1df58f77820b5feb747d34cc6aff26276db8b6dd,"update getting started document to say java 11

Signed-off-by: Terence Parr <parrt@antlr.org>"
b1f5bde19997e5da0c2cf12e48cc8792dd2641d3,"Revert ""update getting started document to say java 11""

This reverts commit 1df58f77820b5feb747d34cc6aff26276db8b6dd."
3ba5fc4f6aeadebcc5d2e2e527dd64c44579f4a4,"Revert ""update getting started document to say java 11""

This reverts commit 3591ee0b51c6bb914f7ef0749182306fefe9cc18."
8dc015657b55c3a8e0669e8b53dd586f69601f0f,"update getting-started doc

Signed-off-by: nicksxs <nicksxs@hotmail.com>"
14703f21b5802e880da8c3afe80824ab651aee07,"add C# book code links

Signed-off-by: Terence Parr <parrt@antlr.org>"
592ccc4e48db2b862523fd022b954231b8609fe0,"add C# book code links

Signed-off-by: Terence Parr <parrt@antlr.org>"
9d3238c17cf310015a06220832ab82ff983d1f03,"Include swift & tool verification in CI workflow

Signed-off-by: HS <hs@apotell.com>"
587234954684089ca8316d5b58344e5b1aa43b5c,"make getValue visible to external profiler tools.

Signed-off-by: Terence Parr <parrt@antlr.org>"
92a3a0c1900be94e1b70d9d282030ecb67e22a83,"Fix #3508: Document the $parser attribute and its use in target-agnostic grammars.

Signed-off-by: Ross Patterson <ross.patterson@gmail.com>"
c257b367ab4997243093e868e24b79666996da57,"Update Swift Package to support static library

Add static library distribution in SPM

Signed-off-by: Hell_Ghost <dev.hellghost@gmail.com>"
15c70a8861a84905b13544f6c2544a372c606a5b,"Update Package.swift

Signed-off-by: Hell_Ghost <dev.hellghost@gmail.com>"
c211210f63b61534cd2416a4aaf07a84d467a5b7,"Update Package.swift

Signed-off-by: Vladyslav Yerofieiev <v.yerofieiev@gmail.com>
Signed-off-by: Hell_Ghost <dev.hellghost@gmail.com>"
8b0cc382067fcb7e011215b8e231535a09c041e2,"Update Package.swift

Signed-off-by: Hell_Ghost dev.hellghost@gmail.com
Signed-off-by: Hell_Ghost <dev.hellghost@gmail.com>"
2e23faa8e9679588567354429ce567c1c58f680d,"Add accessor to IntervalSet for intervals

Signed-off-by: James Taylor <jamestaylor@apache.org>"
0b8ed202e38137553364bfd84236c488c9460334,"Remove libuuid dependency from C++ runtime

libuuid and its headers are not referenced anywhere, so remove it.

Signed-off-by: Bryan Tan <bryantan@technius.net>"
952aada158657cc24488bbb80b14ec3b14318bea,"Add `@SuppressWarnings(""CheckReturnValue"")` to prevent error_prone lib errors.

Signed-off-by: Terence Parr <parrt@antlr.org>"
d06b80227e404bd0ad36e6fd9d382c247e570ca9,"[py2] Fix SyntaxError due to F string

Signed-off-by: Travis Thieman <travis.thieman@gmail.com>"
833b198e17000e9c6a69fb2610baa5e0392a9f13,"fix: Fixes for https://github.com/antlr/antlr4/issues/3718

  o Implement collections with generics to solve hash collisions
  o Fix type casting in LL start parser simulation optimization
  o General minor tidy ups

Acknowledgements to @kaby76 for help with tracing errors

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
00269bddd6b41ed31a8fcad792c7ca415b94e8bb,"Add Jim/Ken to readme

Signed-off-by: Terence Parr <parrt@antlr.org>"
617d55f50263ee46529b9ea627cce09746b7c2cb,Merge branch 'master' of github.com:antlr/antlr4
66f512872c34971526c111dc00e883617067ecb6,"Add Jim/Ken to readme

Signed-off-by: Terence Parr <parrt@antlr.org>"
7e4613fee2a67735f9db64f389634d87e5cfd283,"Use latest Go 1.19

Signed-off-by: Terence Parr <parrt@antlr.org>"
a2b84eec75702d1cf3f4dda0f88b05915f6eee2f,"Rm remote github actions; hosted seems to work

Signed-off-by: Terence Parr <parrt@antlr.org>"
6e611a7022bc402208258d0136e700bbe9de206c,"fix: #3718 Revert accidental keyboard error in Java target

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
f832f0f1170bec1f2846ef24af949701a8e3df25,"Rm remote github actions; hosted seems to work

Signed-off-by: Terence Parr <parrt@antlr.org>"
432aff8b6127c14b60b76885757ff8a7aba3799a,"Add caching support for maven & dependencies. Also, include caching for
cpp builds using actions/ccache.

Builds are more reliable (avoids the archive.apache server which
intermittently reports timeouts) and also significantly improves the
overall builds times (down from 46 mins to 28 mins).

The slowest part of the build now is the Windows+cpp builds because
there is no reliable cache implementation yet. MacOS+cpp (65% cache hit) is
also relatively slow compared to Ubuntu+cpp (99% cache hit).

Signed-off-by: HS <hs@apotell.com>"
34457184fc577e04f936382dc3c23e0bbc19be5a,"Add caching support for maven & dependencies. Also, include caching for
cpp builds using actions/ccache.

Builds are more reliable (avoids the archive.apache server which
intermittently reports timeouts) and also significantly improves the
overall builds times (down from 46 mins to 28 mins).

The slowest part of the build now is the Windows+cpp builds because
there is no reliable cache implementation yet. MacOS+cpp (65% cache hit) is
also relatively slow compared to Ubuntu+cpp (99% cache hit).

Signed-off-by: HS <hs@apotell.com>
Signed-off-by: Terence Parr <parrt@antlr.org>

# Conflicts:
#	.github/workflows/hosted.yml"
f19dc0ea3ede67483b6aec6128d5dd44053778f9,"fix: #3718 Correct DFAState index in Lexer ATN Simulator

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
0f226113d50ae7b7f225fa88aeda22e3cf8a0313,"fix: #3718 Fix go runtime test runners

With older versions of go, there was no good way to tell the compiler to use your local
development copy of a particular package instead of the one installed in GOPATH/src/...

However, we are now using modules, which allows us to tell the compiler that instead of
a module downloaded to GOPATH/pkg, to use a local copy on disk.

Hence this change removes the need to copy the whole of the go installation to a
tempoorary location, then put the antlr go runtime in to the go installation as if it was
part of the compiler. Hence the execution time for the go tests is now faster than before.

This works because when the generated code is placed in the temporary location, we create
a go.mod file for it, tell the module to replace the online module for the go runtime with
the local copy on disk, then ro a go mod tidy to add the dependencies from the code (which
avoids network access, so it is instant), which adds the ANTLR dependency itself (which is
then replaced at compile time).

All go runtime tests now pass.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
604ff8bddbae3965baa2f87954a81ba42976dbea,"use snap to install go 1.19

Signed-off-by: Terence Parr <parrt@antlr.org>"
e3fcc80b79db94e83c4b0d78baef43a427960680,"use snap to install go 1.19

Signed-off-by: Terence Parr <parrt@antlr.org>"
e23fdf9856294a2a4d2369348238c8f70de012c9,"grr...install snap

Signed-off-by: Terence Parr <parrt@antlr.org>"
d0223777888ee47ff086f80fae15d9fef09b8a32,"grr...install snap

Signed-off-by: Terence Parr <parrt@antlr.org>"
113a1218c641031e7319e7764003a75c8e8d13dd,"ugh. start snap

Signed-off-by: Terence Parr <parrt@antlr.org>"
6c295e384fbbf0c1c0554685384e9b88e72eb322,"ugh. start snap

Signed-off-by: Terence Parr <parrt@antlr.org>"
cac3f517c7912f59e433f6157c2e4099192a8ddf,"ugh. cant get snap to install go

Signed-off-by: Terence Parr <parrt@antlr.org>"
6b4b618ceea6cd799b3eb8d3f7922fe78c9490ca,"try downloading golang with curl

Signed-off-by: Terence Parr <parrt@antlr.org>"
f3ddb55b252fe8257456fe2d49c41cf9ae0abe72,"try downloading golang with curl

Signed-off-by: Terence Parr <parrt@antlr.org>"
be4785982d8b1dec9f16d4bc03d1a1ecfbc1a503,"try downloading golang with curl

Signed-off-by: Terence Parr <parrt@antlr.org>"
5074363a0e8b053e4622448a63a1ce2d72b843aa,"try downloading golang with curl

Signed-off-by: Terence Parr <parrt@antlr.org>"
4dee89b25a6cd24ebd35a0c2f9eaab11c1f05dbf,"install golang with curl

Signed-off-by: Terence Parr <parrt@antlr.org>"
c4ab1711a202cc1545fc840f6b03b7a71af48463,"install golang with curl; go was missing from dev

Signed-off-by: Terence Parr <parrt@antlr.org>"
1814d27114c941dabc049c54d80ecfc45843734f,"fix: Fixes for https://github.com/antlr/antlr4/issues/3718

  o Implement collections with generics to solve hash collisions
  o Fix type casting in LL start parser simulation optimization
  o General minor tidy ups

Acknowledgements to @kaby76 for help with tracing errors

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
4c54ee14307bead995cf839c5e3a4fe1e6859f42,"fix: #3718 Revert accidental keyboard error in Java target

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
e99022e05359e5426de0288cc7a07f9882e3a1e0,"fix: #3718 Correct DFAState index in Lexer ATN Simulator

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
ef659519ac9cf09c5edcf89d514593b1b3693f45,"fix: #3718 Fix go runtime test runners

With older versions of go, there was no good way to tell the compiler to use your local
development copy of a particular package instead of the one installed in GOPATH/src/...

However, we are now using modules, which allows us to tell the compiler that instead of
a module downloaded to GOPATH/pkg, to use a local copy on disk.

Hence this change removes the need to copy the whole of the go installation to a
tempoorary location, then put the antlr go runtime in to the go installation as if it was
part of the compiler. Hence the execution time for the go tests is now faster than before.

This works because when the generated code is placed in the temporary location, we create
a go.mod file for it, tell the module to replace the online module for the go runtime with
the local copy on disk, then ro a go mod tidy to add the dependencies from the code (which
avoids network access, so it is instant), which adds the ANTLR dependency itself (which is
then replaced at compile time).

All go runtime tests now pass.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
bc8df83d7b9dd75f9cb6b711b090d639aaf4cb74,"Issue #3823: Temporarily disable a few tests on CI

The tests are currently failing. The underlying issues have been fixed
on dev and so the builds will be turned back with the next release.

Signed-off-by: HS <hs@apotell.com>"
85ec8743658f483e74fab29a82b39924592db5ef,"Add Jim/Ken to readme

Signed-off-by: Terence Parr <parrt@antlr.org>"
f4d3a5cee65e167c1679505c4813147c2bdbfd47,"Use latest Go 1.19

Signed-off-by: Terence Parr <parrt@antlr.org>"
0e46bfbf2e01993cf1569222ede34e7f9d952679,"Rm remote github actions; hosted seems to work

Signed-off-by: Terence Parr <parrt@antlr.org>"
f403c8168067d9b294bc947b22885b8e0027e755,"Add caching support for maven & dependencies. Also, include caching for
cpp builds using actions/ccache.

Builds are more reliable (avoids the archive.apache server which
intermittently reports timeouts) and also significantly improves the
overall builds times (down from 46 mins to 28 mins).

The slowest part of the build now is the Windows+cpp builds because
there is no reliable cache implementation yet. MacOS+cpp (65% cache hit) is
also relatively slow compared to Ubuntu+cpp (99% cache hit).

Signed-off-by: HS <hs@apotell.com>"
4c7c69ba9b8c0f5c3a4b44805c5e114f12c7e08b,"use snap to install go 1.19

Signed-off-by: Terence Parr <parrt@antlr.org>"
881ac271fc6470f5aebab12dfe5a3fb889545b9e,"grr...install snap

Signed-off-by: Terence Parr <parrt@antlr.org>"
8e3f6cd77adc2609bb39a5d7f08d724c8d91ed0e,"install golang with curl

Signed-off-by: Terence Parr <parrt@antlr.org>"
ec01c11af7de338cd5f6820526a9d1d400cd81e1,"install golang with curl; go was missing from dev

Signed-off-by: Terence Parr <parrt@antlr.org>"
56df72ca6742dc03570bcc902d76b3bee8279ef1,"fix: Rework of all Hash() and Equals() methods - implement generic collections

 - Implement new collections using generics that implement the functionality
   required by the Java runtime in a more idiomatic Go way.
 - Fix Hash() and Equals() for all objects in the runtime
 - Fix getConflictingAlts so that it behaves the same way as Java, using a
   new generic collection
 - Replaces the use of the array2DHashSet, which was causing unneeded memory
   allocations. Replaced with generic collection that allocates minimally
   (though, I think I can improve on that with a little analysis).

Jim Idle - jimi@idle.ws

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
ca77cbe218465dd5e62a7951b8af20f51af2ca23,Merge branch 'dev' into feature/newhash
54ee81fbf5d14d275e964b77d53e93f6ee584d58,"fix: #3718 Fix clash between dev and feature/newhash branch

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
36e546961942747864590d3c07eab6c8d993c5b9,"Merge pull request #3829 from jimidle/feature/newhash

Feature/newhash"
0867505aa3ce879c7c9256a6e15f03e3cb6f6b8f,"feat: Reduce initial memory allocations for collections

  - Many small collections are created at runtime, the default allocation for
    maps, even though small, still requires memory. Specifying a very small
    initial allocation prevents unnecesary allocations and has no measurable
    effect on performance. A small incremental change.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
a5da0354f200dc2e8b916efd095354498592e157,"fix: #3758 Allow for string being a keyword and fix go template to use escapedName

  - The go template was ignoring the use of escapedName in many places and was
    not consistenet with the Java version.
  - Added 'string' to the list of reserved words for the Go target

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
4e9377b60d276c66e9dc71862ee2b7b514bbe2b5,"fix: #2826  Go template is incorrect for dynamic scopes

closes #2826
obviates PR #3101

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
8ece8b33d2c8478382823984c1f97ae29b4a22ec,"fix: #3758 Add go.sum to the repo

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
39c3cca8b5ebbcddfffb01941a4af4921dfc0254,"fix: #3758 Ensure that standard runtime extensions are included in go.mod

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
ecde640d8b02f0d057054d889f8d231af18692ee,"fix: #2016 - Generate correct iGo code for lists in a grammar, such as `label+=arg+`

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
23393083e3c358ed38beb53924a47af4545bd23d,"Merge pull request #3830 from jimidle/feature/collection

feat: Reduce initial memory allocations for collections"
e51cfcca6f5b3890fe462e6a0f734ef4a5b53d72,"Merge pull request #3831 from jimidle/feature/3758

fix: #3758 Allow for string being a keyword and fix go template to us…"
ceca1ad130d371eca2853f7b24e4022626bca4a8,"Merge pull request #3832 from jimidle/feature/antlr3101

fix: #2826  Go template is incorrect for dynamic scopes"
a9b301ba15b6a6b9c6a7fa4f8ad0688ea0fcfb0f,"Merge pull request #3834 from jimidle/feature/2016

fix: #2016 - Generate correct iGo code for lists in a grammar, such a…"
27a705134f52e9943fe1b0b758f4326f87b615be,"doc: Start improving docs for #1374

  - Correct Package docs and provided docs on how to structure a go
    project that uses ANTLR.
  - Update Copyright notices.
  - Add a little documentation to some structs - this will be a long process.
  - Update some of the docs on exported types and methods

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
a72e9060a5f5b3ae25b4714a4b989122999e77c3,Merge branch 'dev' into feature/1374
108b2bf237c14001f4106dff6b7a577e4d76229f,"feat: Bump poms to use 4.11 Snapshot

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
28466600edf459c58096c8c66e20c6e85a5a7845,"Merge pull request #3836 from jimidle/feature/bumpto4.11

feat: Bump poms to use 4.11 Snapshot"
b2e889bf8099941b353289daaeadfa8c961a42eb,"Replace smart-quote with single-quote in code examples

Signed-off-by: Tim McCormack <cortex@brainonfire.net>"
f5e9f9515bdf45e8bce1a246c91736e3c65c5d37,"turn off Golang test at circleci for now

Signed-off-by: Terence Parr <parrt@antlr.org>"
273bfebde766b8a4ff5a50627ead193b865a1784,"Merge pull request #3835 from jimidle/feature/1374

doc: Start improving docs for #1374"
9cc2d8d12fe4d78da7894eb64f1456366a54727e,"Merge pull request #3838 from timmc/lexicon-quotes

Replace smart-quote with single-quote in code examples"
cd8f367ca010eb59defadf3df622793bc3a8afe2,"Merge pull request #3762 from GCer-Hidenori/master

fix URL to download page."
459f93fedee943fffc1a2e307be93da14dd71317,"Augment error message during testing to include full cause of problem.

Signed-off-by: Terence Parr <parrt@antlr.org>"
34ca29ad800d795a622b817112730ec0798656b4,"Merge pull request #3843 from parrt/augment-error-msgs

Augment error message during testing to include full cause of problem."
3942198c05ec8a981d659dcd1aae5e8e5c72bda5,"Augment error message during testing to include full cause of problem. (round 2 to avoid null ptr)

Signed-off-by: Terence Parr <parrt@antlr.org>"
1cb4669f84cea5b59661fd44b0f80509fdacd3f9,"Merge pull request #3844 from parrt/augment-error-msgs-round-2

Augment error message during testing to include full cause of problem (round 2)"
f55d2513181d60aeef46aab61fc8ebf50281a733,"Cpp: Link to threads library

As detailed in #3708, it is necessary to link against the (p)threads
library in order to be able to use std::call_once without producing
linker errors.

Since this function is frequently used in ANTLR's cpp version, this
commit ensures that the respective library is always linked against in
order to avoid this error, even if downstream users are not explicitly
linking against an appropriate threads library.

Fixes #3708

Signed-off-by: Robert Adam <dev@robert-adam.de>

Co-authored-by: Bryan Tan <Technius@users.noreply.github.com>"
e1ff5bde25df359190f2ea5f3a9983290dc8ef7c,"Merge pull request #3794 from Krzmbrzl/cpp-link-pthreads

Cpp: Link to threads library"
23ae7dff2a7e4d9e8326ae97e7561102fc2c94a4,"add test for #2016 and fix java.

Signed-off-by: Terence Parr <parrt@antlr.org>"
50d0edc752557b2c58db56a2c32ee26e2f25241c,"ensure all targets have the appropriate argument list for the template causing the problem.

Signed-off-by: Terence Parr <parrt@antlr.org>"
ca0540b88788ae67897e53609c7e505c68f9d250,"Fix other targets

Signed-off-by: Terence Parr <parrt@antlr.org>"
ddbe1727b3c2a6176d14a270bdc643b9cf498091,"fix format

Signed-off-by: Terence Parr <parrt@antlr.org>"
ff345a634380cd075f7e570c93c89387fdf9a7fd,"add check that $args is a list

Signed-off-by: Terence Parr <parrt@antlr.org>"
891b0f4914bbacfb69e93993769322310ed3d9de,"change made by @lingyv-li to fix bug in DART exposed by this test.

Signed-off-by: Terence Parr <parrt@antlr.org>"
2bcfe155f3a24a05a5bbbf2507cfba13074963bd,"fix AssertIsList in multiple targets. Go doesn't pass test and has no AssertIsList so I'm dropping that test from the Go test suite.

How did a comment to the C++ runnerFor my future reference as to how to build things from the command line.

Signed-off-by: Terence Parr <parrt@antlr.org>"
6a3b44bae408be60d73a3376f8118537d2d82d0d,"C++ gets an exception with this test so I'm turning it off. See https://github.com/antlr/antlr4/issues/3845

Signed-off-by: Terence Parr <parrt@antlr.org>"
51150ab296be1b08fb7326d69c5fa5d7d68a06bd,"Merge pull request #3841 from parrt/fix-2016-round-2

Fixes #2016"
1609ed08c3314dbf33221608aa886b42176b98b7,"Update hosted.yml

Signed-off-by: sashashura <93376818+sashashura@users.noreply.github.com>"
a3c24d43b07aef16787ac25e049af8581e4cb264,"Optimize GoRunner

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
7f47013c7c0dbcdccf95f6de5f0ff91cdee1f7ba,"Reenable go tests on CircleCI

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
ac8854f6a2077bcc01e7210b515634573d54949b,"feat: #3840 Move Go to version v4.11.0

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
69fdc2f84f16c5a8d8cbc82aa7ccf7de5806898d,"feat: #3840 Create the v4 version of the Go runtime

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
b9d975a73fef4c6c9a59607274ea998a85799c3d,"feat: Create the v4 runtime layout for the Go runtime, ready for release tagging

Note that the vast majority of the changes here are just copying the runtime file in to
the /v4 subdirectory so that we can support legacy projects that use GOPATH only, as well
as users that can use go modules. At a later release, we will delete the default path, and move
the v4 subdirectory back to the top level. But, we cannot do that on this release.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
51ad5aee8ac7a5534c00e3b2a8221a753a1cce7b,"Merge pull request #3850 from KvanTTT/fix-go-runner-and-tests

Optimize go tests runner and renable CircleCI go tests"
186c6c5a7d7c39b187ba9bb82c32dafd864a8bea,"Fold constants in generated code for all runtimes

Go: getInlineTestSetWordSize 32 -> 64
Dart: get rid of BigInt
Swift: optimize TestSetInline
Python: fixes #3698
JavaScript: fixes #3699

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
6a2cd79aa9ce049e074b3a7d26f40dc13cb5897e,"Use int literals instead of refs for Python and JavaScript

Update getMultiTokenAlternativeDescriptor test

fixes #3703

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
ca2539a6a76ff48c63471a65a5cc98931c069e7d,Merge branch 'dev' into feature/gomod4110
39e1719064f0b842884fa6afbe6848f027598b8e,Merge branch 'jimidle-feature/gomod4110' into dev
690cf56669ff63f2cafe5fc33616d0f6697f14dd,"doc: quote ** in test invocation example

The `**` gets expanded in some shells (zsh), so protect it from that, else the
invocation may fail, e.g.:

```
$ mvn -Dtest=javascript.** test
zsh: no matches found: -Dtest=javascript.**
```

... and a hasty person such as myself might miss the `zsh` in that output line
and think the “no matches” is from Maven meaning that there are no tests
identified by `javascript.**`, but there are."
0e1385545affc17f1882c24579c46b00a6707fb5,"update release doc for Go version numbers

Signed-off-by: Terence Parr <parrt@antlr.org>"
5592e639e1961d6aae08ec8d8c69bc406a3762bf,"fix: #2016 Fix Go template list reference, go runtime and got test template for list labels

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
33d970dc4242be003307cd700e2eb821b3e3e1f5,"feat: Add a deprecation message to the existing v1 module

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
0e45e2837584dff20c764d5e4eb09c4aebcf2933,"Split tool and runtime tests for GitHub workflow

Build only necessary modules for tests

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
b018c4460a652e60f78d0c8150c59be756dfeffd,"Remove not used methods from FileUtils (runtime tests)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
eb2ebc12ac8fe4e22c7339525508160627bf57d0,"Update dependencies of antlr4-maven-plugin

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
fe3f0752b4896741e54102a4e57f7fa8661d623b,"Update jUnit: 5.8.2 -> 5.9.0

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
78191d0474ad85d1b301aa9d08c404b8f66661e9,"Remove CircleCI config and scripts

GitHub CI covers every runtime on every OS

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
3eee290f219845ffd80d0c29014af8a2ac20c48a,"update actions status badge

Signed-off-by: Terence Parr <parrt@antlr.org>"
60b2c2ad6295d60679dfe04c715149aff87fed1b,"pull in readme tweak

Signed-off-by: Terence Parr <parrt@antlr.org>"
da1549950e74cd51ef894bbd24a01545736b7549,"Fixes #3733; update ST4 so it uses proper ANTLR 3

Signed-off-by: Terence Parr <parrt@antlr.org>"
08535e2feb7678bfdfd61710af28027de8cd04b7,"set version in code/doc to 4.11.0

Signed-off-by: Terence Parr <parrt@antlr.org>"
6cc5b791b78ab3626acd28644debd95d5ac4c8b8,"tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
e26b522c8310954b77cc749b440169b70466de0c,Set to 4.11.0 not 4.11 in poms
49b69bb31aa34654676a864b229a369680122470,Merge dev into master
46d42dcf9b50fa03cfe0c78fab1cbc683f4f21af,[maven-release-plugin] prepare release 4.11.0
2c6717512383099ab0367eb97d569700bdd34f6e,[maven-release-plugin] prepare for next development iteration
9a45323edf058e362a03dd4694cecbe6ab2f105d,"Damn. java target said 4.10.2 not 4.11.0

Signed-off-by: Terence Parr <parrt@antlr.org>"
49596cedb9ed856921a2e9cee7684606be2743f3,"roll back to 4.11.0; made mistake

Signed-off-by: Terence Parr <parrt@antlr.org>"
f20b9b17fd32bfb44f9e85b62e4bbb967b782c63,"roll back to 4.11.0; made mistake

Signed-off-by: Terence Parr <parrt@antlr.org>"
3a36245ee69313f5b5fb84d48695bbc1cb7c2863,[maven-release-plugin] prepare release antlr4-master-4.11.0
67f63fa7f03326305cb0b0175784b08304787831,[maven-release-plugin] prepare for next development iteration
a79d26e28671dc088a1dd3faeef36e66a4e69f5e,"tweak js and doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
0a94a38b0f61420363c8238bf6e80d6a505c9b0b,"use build and twine to publish source and wheel

Signed-off-by: Qijia Liu <liumeo@pku.edu.cn>"
10e7f2af3b215991e168e443225d1eb70bc618db,Merge branch 'dev'
3a2053ee650a5c252a088bb80bca055f6df3abcb,"tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
40e96baccf8f67c2b7d226203b53d4cd3e6dba35,"tweak c++ build script to make Mac binaries with cmake/make

Signed-off-by: Terence Parr <parrt@antlr.org>"
d23f010a3642a650076caea5a03b586cba37d7a0,"tweak release doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
722993303a398c1be34ed405d2f6fb6ba3d0a7f8,"tweak code / doc related to bad previous release

Signed-off-by: Terence Parr <parrt@antlr.org>"
d5dd253104c5c5e3c63f4a434f9310ffd38635a8,"update to 4.11.1

Signed-off-by: Terence Parr <parrt@antlr.org>"
9239e6ff444420516b44b7621e8dc7691fcf0e16,[maven-release-plugin] prepare release 4.11.1
ec6ae3fd55f31ea8bc9ac4b159c6568f0505d9bb,[maven-release-plugin] prepare for next development iteration
3f7ebcdc591691f3d144389840ae3c21fc8ec144,"update javascript to 4.11.1

Signed-off-by: Terence Parr <parrt@antlr.org>"
36a49e85cdcd91d554b02b548d58a29050d0d52f,"update release doc to 4.11.1

Signed-off-by: Terence Parr <parrt@antlr.org>"
5bd7f9ea4822b231a93f8b34e8c91a2387a0e208,"clean up deploy c++ source script

Signed-off-by: Terence Parr <parrt@antlr.org>"
707f14815b8d4a9ac91ad4494322f8d290f19801,"set tool runtime version to 4.11.2-SNAPSHOT

Signed-off-by: Terence Parr <parrt@antlr.org>"
8f9ec1f31235f60e70285da5ee9d9e9a5e463e6e,Update C# release instructions
fd4f5fb6762346582066ca2d413d54b25d8b7edf,"fix: #3758 Extrememly poor performance on poorly written grammars

The problem was once again a poorly written hash function, which caused ATN config sets to
hash poorly. The poor grammar caused many thousands of DFA states to hash to the same
bucket. In your average grammar, this situation would not arise.

For now, I have changed that hash function to use the memory address of the slice that
contains the configs, though i think that this is sub-optimal.  I will revist this as part of a
general attack at further performance gains.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
95d932300d0acdc1fb598abed55089553857a6f2,"Add code of conduct but with a different name since I do not like that name

Signed-off-by: Terence Parr <parrt@antlr.org>"
c90276625d93d90e28c24f5689fafe4afc87c388,Merge branch 'master' of github.com:antlr/antlr4
f93f5141b6d44928d7a223523bf62fce03070806,"Add code of conduct but with a different name since I do not like that name

Signed-off-by: Terence Parr <parrt@antlr.org>"
0b6ad68554ea8f51bef8fec4ec2529687fcf66e5,"Tweak code of conduct

Signed-off-by: Terence Parr <parrt@antlr.org>"
395a0cb15449be1329e61c620e57fe4446efc655,"Tweak code of conduct

Signed-off-by: Terence Parr <parrt@antlr.org>"
289ea358be9a7a446a3227bbda61c87e467937e1,"fix: Restore missing changes to v4 of go runtime

I had not though about this, but I guess some of the fix PRs did not have one fix
that was in the legacy version of the runtime, copied in to the v4 branch. This
commit fixes that.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
e96de77feb9e383c5f81dc50ed3e240c979af128,"Bring back the Package.swift in the project's root

Signed-off-by: Nikolay Edigaryev <edigaryev@gmail.com>"
af9d33b2ab8a1ac60efb33b7395ac13eb43786f8,"swift-target.md: fix SPM installation instructions

Signed-off-by: Nikolay Edigaryev <edigaryev@gmail.com>"
44bcc14eb6dd7470bc8d3ef11e22dfb5aac99b7a,"tweak spelling errors in Interpreter

Signed-off-by: Terence Parr <parrt@antlr.org>"
dafe48ceea6af32631692440e0b7c54a1bb8e6cc,"the scope (parser or lexer) in @parser::header was dropped, so keep track of it and only include @header in Listener and Visitor code

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
b1a96db1e4919d3086576917b246d2f42c030d09,"Describe using antlr4-tools in getting started documentation

Signed-off-by: Terence Parr <parrt@antlr.org>"
eaed29badf8ec4078b70e4831b9838f0f54598b0,"Tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
483a431ad32a177127cd26183a64670c83961339,Merge branch 'master' of github.com:antlr/antlr4
29496cee139ed49a3092c1d065c7f584ad1841b9,"Describe using antlr4-tools in getting started documentation

Signed-off-by: Terence Parr <parrt@antlr.org>"
9c15186e51cb1f47ea291c8923d7ec7236315c54,"Tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
f94a4844bd47a7d31b20e63e9b90b25fc22c0561,"Describe using antlr4-tools in getting started documentation

Signed-off-by: Terence Parr <parrt@antlr.org>"
b979bbb070352bc7feed789a75319f8c12b4887a,"Tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
535dba9b22b27884e77aee4635938aca3a6e5483,Update C# release instructions
995e202396cf17b7c07efdc6826dfd53aa777941,"Add Windows doc for antlr4-tool usage

Signed-off-by: Terence Parr <parrt@antlr.org>"
aa1f1f12a846846fcb78544bdb2ad135471376db,"Add Windows doc for antlr4-tool usage

Signed-off-by: Terence Parr <parrt@antlr.org>"
aaab9501789f2cdc85f9181865de732a1c78e203,"FlatHashSet: Revise the default template parameters to fix the compiler errors reported by GCC 7.

Signed-off-by: FireWolf <austere.j@gmail.com>"
9d7741d3fb1e0befe1ca32502a42a2809741053c,"FlatHashMap: Revise the default template parameters to fix the compiler errors reported by GCC 7.

Signed-off-by: FireWolf <austere.j@gmail.com>"
8b7984c77905d273365bc4adc09c315e35d84893,"Fixing minimum CXX standard required

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
0007cecf8a6ffcd85dfb98b8d94c121781e76c6a,Merge branch 'master' into dev
252e202d5dabf363fff828f6ff1c85290679347f,"add iterative tree walker in go

Signed-off-by: Rishabh Arya <rishabh.aryain@gmail.com>"
26b06f9ef588013c5e44790e99fdfaafdab427ed,"add new line

Signed-off-by: Rishabh Arya <rishabh.aryain@gmail.com>"
4b5d9804506164072c89ed5fee148691b21088dc,"fix: Hash and Equals now work so that sharing config sets is now working

Signed-off-by: Jim.Idle <jimi@gatherstars.com>"
3d1de9c0a6a85395434dca240fa57ad3e38bb166,"Remedied takari.maven.plugins build warning.
Explicitly set version to: 2.0.7

Signed-off-by: chris-miner <94078897+chris-miner@users.noreply.github.com>"
531654ed47955a68c85c4feddf045176a97ac48c,"fix: Restore missing changes to v4 of go runtime

I had not though about this, but I guess some of the fix PRs did not have one fix
that was in the legacy version of the runtime, copied in to the v4 branch. This
commit fixes that.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
9e96de873106c8f607e05dfc0b392742409ebd24,"tweak spelling errors in Interpreter

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
3dacdff458e541e4b9eea9c173eccfbbb169b83b,"Describe using antlr4-tools in getting started documentation

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
7a06e1f069b75dc2a255aa24e4a0ee205b43bb4b,"Tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
253ef6b7819cff80f3b4672b90bd9a0ee92811a8,"Update C# release instructions

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
871cf52c7800649ba7ce88a48e024995cfd286a1,"Add Windows doc for antlr4-tool usage

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
e20088f527f7d6bae88d81b1c8ed6abeea34434c,"Fixing minimum CXX standard required

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
6ed94f8495685b81b2251d9079326bd11714edef,"Fixing Reserve word NULL handling for Cpp targets

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
82becedeb69668745ec65a307213b0023717cf3a,"Adding testcase for reserve word NULL for Cpp targets

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
e347ffe925a8604d17ea0718648adbc361ae1d10,"Update ReservedWordsEscaping_NULL.txt

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
57cb224225a0bbe4258eb950a441d4cc7574e338,"Fixing Reserve word NULL handling for Cpp targets

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
61f6aeabea91cb49f05b1408973cb3799c9c07ca,"Adding testcase for reserve word NULL for Cpp targets

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
d26c06461322a37b6eebf1f56abbbfa4745eb901,"Removing unecessary escape

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
62b1967c48fe98f63960b2a247703b201fac1368,"Fixing Reserve word NULL handling for Cpp targets

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
f3e3d8a75753f9044198cb622d52262d33ba8273,"Adding testcase for reserve word NULL for Cpp targets

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
1eb5603f32ed755a9b1c23c77e6d0c4a8ecb531d,"Update ReservedWordsEscaping_NULL.txt

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
d08446e019c7621db47e16006947c744e85cfbe3,"Fixing Reserve word NULL handling for Cpp targets

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
8b60b0726993d5739f2ef1f855203344c44298f9,"Adding testcase for reserve word NULL for Cpp targets

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
bdb9d46efa52d759038dbad90b1f030d3a012a00,"Removing unecessary escape

Signed-off-by: 1sand0s <1sand0sardpi@gmail.com>"
8951b56fe1218c745dcd63c30e12cfaa8b1123f9,Merge branch 'Fixing_Reserve_Word_NULL_for_Cpp_Targets' of https://github.com/1sand0s/antlr4 into Fixing_Reserve_Word_NULL_for_Cpp_Targets
530347377aed3c2d84c8b8af53573b7cf361fee9,"init Reproducible Builds

Signed-off-by: Hervé Boutemy <hboutemy@apache.org>"
5951bfbeadc98a663255fe67b9279f1a9c958f02,"workaround non-reproducible antlr3 output

Signed-off-by: Hervé Boutemy <hboutemy@apache.org>"
2703a8516c0fb7fe92db6b9c40e0113f577646d2,"Package.swift: provide an option to link against ANTLR 4 statically

Signed-off-by: Nikolay Edigaryev <edigaryev@gmail.com>"
1fb1e0df42654db8962511a09289909be12f0247,"Go target: Add getter signatures to interfaces

Signed-off-by: Jeremiah Boyle <jeremiah.boyle@gmail.com>"
9b2137f8694c613fde20f3081c4837d1e3e7ddb8,"Fix doc typo

Signed-off-by: Jeremiah Boyle <jeremiah.boyle@gmail.com>"
d685f7bae22351a17cd23dc28575a25eda87d490,"Merge pull request #3889 from 1sand0s/Fixing_Reserve_Word_NULL_for_Cpp_Targets

Fixing reserve word NULL for cpp targets"
09e51c1a4457df2c1a5b86870eb60de9d15a2165,"Fix platform typo and double space character

Signed-off-by: acetousk <acetousk@gmail.com>"
0a8741944c9d34b7292453d970f32f60fd19a30d,"Add parens to all target bitsetBitfieldComparison templates to avoid issues where compilers complain about not having parens around higher-precedence && vs || operators.  A tweak to https://github.com/antlr/antlr4/pull/3701

Signed-off-by: Terence Parr <parrt@antlr.org>"
3d43e38302b6d7d666ae098a3c4f5d87e917c096,"Merge pull request #3936 from parrt/tweak-folding

Tweak folding to wrap && operations in parentheses"
263cd10d6ee0f4e41098b8f56479ea4fe233b8b7,"Fixes #3937; `java-escape` format was not recognized and so grammarFileName was not generated properly.
Output is now proper: // Generated from org/antlr/v4/test/runtime/java/api/Java.g4 by ANTLR 4.11.2-SNAPSHOT

Signed-off-by: Terence Parr <parrt@antlr.org>"
ca0357a9385a0688156f8f07d687893588615c0e,"Fix typos in listeners.md

Signed-off-by: Eric Mutta <eric.mutta@gmail.com>"
5a68af0109d911e3bcd2e2c0eaaaecf25dbee66c,"Merge pull request #3927 from j3r3miah/no_go_type_assertions

[Go target] Fix for #3926: Add accessors for tree navigation to interfaces in generated parser"
abde72f8d155887cea69fcd189b0483d3ed8795a,"Updating the files in the Xcode project for ANTLR4 Cpp runtime. The project had gotten out of sync with updates to the underlying code files.

Signed-off-by: Brad Bambara <brad.bambara@gmail.com>"
023a48836f9f8e1a5767315d55d4b462fe24f478,"Remove unnecessary getter

Signed-off-by: Jeremiah Boyle <jeremiah.boyle@gmail.com>"
16cfc6b122b184d1e412c7e175d4e12370b0b99d,"Merge pull request #3947 from j3r3miah/no_go_type_assertions-followup

Remove unnecessary getter"
44761bc78ba1199f8d9de293b3bce10e92242293,"Don’t specify a default type for the exported Swift package library

Signed-off-by: Tony Arnold <tony@thecocoabots.com>"
5166407d3f32c0ebfc0ffd83bb07828e0b38d9a6,"Fix Swift ProfilingATNSimulator init crash

The initialiser creates an empty array. This means that indexed subscripts will be out of range.

The Swift compiler amortises `.append` to effectively O(1).

Signed-off-by: Chris Kolbu <chris.kolbu@ittybittyapps.com>"
6f7bfc3aa06d4436b7a559e578276e97cb5b1f08,"Fix Swift ProfilingATNSimulator `timeInPrediction` calculation

The current implementation using date object did not actually work (e.g the `timeInPrediction` was always zero). This has now been replaced by the preferred way to measure time in Swift.

See discussion: https://forums.swift.org/t/recommended-way-to-measure-time-in-swift/33326

Signed-off-by: Chris Kolbu <chris.kolbu@ittybittyapps.com>"
bbd428f58495a8acdae9d2ab5cb94098b795702f,"Fixes #3845; C++ target was deref'ing nullptr when examining array of parent contexts, last one of which is nullptr.

Signed-off-by: Terence Parr <parrt@antlr.org>"
fa7aad7bfb6d74995ee4710d4383cf0a36998cb9,"Drop a test that exposes another bug.

Signed-off-by: Terence Parr <parrt@antlr.org>"
9d830ab6ea1c7ef78b9c427bed2eec3f99b62054,"Merge pull request #3958 from parrt/fix-3845-nullptr-cpp

Fix 3845 nullptr cpp"
3f20db36ed06ff9da4d78f92fa1eadeaba1169da,"Remove final keyword from debug_list_atn_decisions and dfa_debug in Java target.

Signed-off-by: Terence Parr <parrt@antlr.org>"
ae62a390ce98cf100397a91cf81684a7268976be,"no such thing as CompositeLexer

Signed-off-by: Terence Parr <parrt@antlr.org>"
b3ef89694d83973f3d5eb455cfbc8d4f5ef2dd61,"Oops. Misunderstood Composite term.

Signed-off-by: Terence Parr <parrt@antlr.org>"
6559425afe75f9d48ef63feffe1e2916ccd5726b,"rename debug to be showDiagnosticErrors for test generation

Signed-off-by: Terence Parr <parrt@antlr.org>"
1f3b9d65479f51822669f6d40546901389a072fb,"add traceATN flag to test descriptors.

Signed-off-by: Terence Parr <parrt@antlr.org>"
7210a4c26d0bd6ecfd1d3ce3e01a037eb5343558,"turn on debug and debug_list_atn_decisions for java.

Signed-off-by: Terence Parr <parrt@antlr.org>"
1e7f25616d03e83b4334198e55b4182a463ba95f,"add some baseline tests that get no traceATN output.

Signed-off-by: Terence Parr <parrt@antlr.org>"
a273e7663a1c1c8915e3771380d7d62f8e4ae658,"Add command line tool TraceATN to process grammar and run in any target to get ATN output to stdout.

Signed-off-by: Terence Parr <parrt@antlr.org>"
c38fa36317a6373fdf4427dcf4c17d2862fe97dd,"fix compile error

Signed-off-by: Terence Parr <parrt@antlr.org>"
2825deeec46e77a783a4dd888be2c30a56753436,"add simple LL(2) rule with ATN debug output.

Signed-off-by: Terence Parr <parrt@antlr.org>"
e8ce09aa1825bbbd93546e6451e2e6523f9451ac,"Revert ""add simple LL(2) rule with ATN debug output.""

This reverts commit bca48be6e89758fbf49a7a2bce0d4bc129612480."
384bff01a23d304cc21a02920e2ffb80b18c08f2,"Revert ""add some baseline tests that get no traceATN output.""

This reverts commit a3197e10467af20bd3d5e4f573c050d7518d967a."
7d70eb1a8a4c797163fa2fb7168cc59905169df9,"make retry_debug also nonfinal.

Signed-off-by: Terence Parr <parrt@antlr.org>"
cc307d7bf0d023ecf188f562063e3ef7b8f3589b,"add script to run TraceATN

Signed-off-by: Terence Parr <parrt@antlr.org>"
9786278df4b63d20465628a16a30c56ab0114baa,"update javadoc

Signed-off-by: Terence Parr <parrt@antlr.org>"
fccaa32a613720e2b08cc43cff2d8445be605258,"include command and test dir when compilation fails during runtime testing.

Signed-off-by: Terence Parr <parrt@antlr.org>"
84d5086e24fe43872f4124169a276b0cc345feb0,"update doc on target testing, added needed jars to script.

Signed-off-by: Terence Parr <parrt@antlr.org>"
14648bf2d8a167593dc72c92ff9808941974e2c0,"Include exit code if non-zero during command exec.

Signed-off-by: Terence Parr <parrt@antlr.org>"
e4c7e36f66f8bb9cfb4890007bbe1159eacf45af,"Allow debug flags to be set from command line

Signed-off-by: Terence Parr <parrt@antlr.org>"
3a2dbe6f93b5d5f78636693aca73e9aa27fce9f1,"1. add option to dump commands exec'd during testing.
2. Pass RunOptions to all the runners during init
3. Make C++ set a cmake file if traceATN is set.

Signed-off-by: Terence Parr <parrt@antlr.org>"
fb139a71559f72e78e7f02843deaf96c03eecfe1,"separate lexer from parser ATN tracing.

Signed-off-by: Terence Parr <parrt@antlr.org>"
e100f0424b80eebcbc7e38b80fa0ba5a1a476d9a,"get C++ and Java trace output more similar.

Signed-off-by: Terence Parr <parrt@antlr.org>"
7da167cd877cfe199c93a4afb5efa91e875a9f7b,"remove ref to specific user in script.

Signed-off-by: Terence Parr <parrt@antlr.org>"
51c3d65173dbf464606c1c3905b886fa4dc0d52b,"* rename debug_list_atn_decisions to be trace_atn_sim
* rename DEBUG_DFA to DFA_DEBUG to be consistent

Signed-off-by: Terence Parr <parrt@antlr.org>"
f55a6486b7da093ec62c41c2370c54ebf91effbc,"increase amount/quality of ATN sim debugging

Signed-off-by: Terence Parr <parrt@antlr.org>"
9fc3935cd839da17b7200ab42fd57e51f5f3072a,"C++ target printed too much stuff with ATNConfigSet string.

Signed-off-by: Terence Parr <parrt@antlr.org>"
cc53b88cf2bbd9648345ad6428972e71d2f40795,"bring C++ ATN trace up to Java

Signed-off-by: Terence Parr <parrt@antlr.org>"
367816d436c82c31e5e6a8e588044b8012ad373c,"Add trace info for mergeArrays

Signed-off-by: Terence Parr <parrt@antlr.org>"
32ea6398b27f0e441fefc9b2ad2ec0b9c95717e6,"rm extra print in C++

Signed-off-by: Terence Parr <parrt@antlr.org>"
7519413f0ebbbec7231b511e167f694e5fed49b9,"Fix an error I made in https://github.com/antlr/antlr4/issues/3845

Signed-off-by: Terence Parr <parrt@antlr.org>"
2911e947916d21075fe77cd470c78d633113f389,"Fix an error I made in https://github.com/antlr/antlr4/issues/3845

Signed-off-by: Terence Parr <parrt@antlr.org>"
03231e3a681e32dccbc97895d06005ed7a77e377,Merge branch 'dev' into compare-ATN-sim-output
25874c419929d114b4d0efaade612d30437c9887,"Turn off a test that fails; see https://github.com/antlr/antlr4/issues/3959

Signed-off-by: Terence Parr <parrt@antlr.org>"
1b21fb6bd6af18dd6e8951f74e8350561fd5f17a,Merge branch 'dev' into compare-ATN-sim-output
ade581204e691d4b98769c6d8bbc105d9fa58b2c,"another small tweak to C++ trace output

Signed-off-by: Terence Parr <parrt@antlr.org>"
7cef1c34f9ca550be9cb052c327a5945f4c0b98e,"Add more mergeArrays output for Java/C++

Signed-off-by: Terence Parr <parrt@antlr.org>"
44abee7b59087bafc23c0f7cbec8b4fc68283822,"Make Python[2|3] trace output look just like java's

Signed-off-by: Terence Parr <parrt@antlr.org>"
488b00bde6d5859b4e6caac7de59c82e8e929326,"Make Go trace output look just like java's

Signed-off-by: Terence Parr <parrt@antlr.org>"
40ce34b8d5ba36baa833bedee5b2cff035cc2388,"make NodeRunner sit under `node` package for consistency else we got `java.lang.ClassNotFoundException: org.antlr.v4.test.runtime.node.NodeRunner` error.

Signed-off-by: Terence Parr <parrt@antlr.org>"
1796af4dbe157f3fedff106cc50baaf5780b60de,"Make javascript trace sim like java.

Signed-off-by: Terence Parr <parrt@antlr.org>"
2077a5d4ddf395559252be9eb0c2b9a51aa7ca20,pre-fill result array
af0d59a5c249a36efb88539c8b469e26e7ddffa3,"Merge pull request #3954 from nesevis/fix/swift-profiling-bugs

Fix two Swift profiling bugs"
13759c4cc6e28c29393421245fbca311c7354179,"Merge pull request #3953 from tonyarnold/swift-pm-no-default-type

Don’t specify a default type for the exported Swift package library"
af528d893cc8a692ad435b95416c526dc013ff5a,Merge branch 'dev' into compare-ATN-sim-output
387bc2bd4cfb947e39d2f2b825d952426571cfe8,"Merge pull request #3942 from ericmutta/patch-2

Fix typos in listeners.md"
1289ea5496f0a190eacb6c58a90c422f2286c3bf,"Merge pull request #3945 from BradB132/fix-cpp-xcode-proj

Updating the files in the Xcode project for ANTLR4 Cpp runtime."
3be21265ed56bbd2c01ea95967eedc45a3d338fb,"Merge pull request #3931 from acetousk/dev-fix-typo-docker-readme

Fix typo of platfort to platform and weird double space to a single space character"
b1e14328016c3b23edc80be9c9a7a1bdfc73d424,"Merge pull request #3909 from chris-miner/issue-3902

setting takari-lifecycle-plugin version explicitly to 2.0.7"
249dc8f66f4d386dd8316ac6c8d3e0f3da652132,"Merge pull request #3885 from 0xFireWolf/master

[C++] Fix the compiler errors reported by GCC 7"
2ff60cc75dce06fd22a704714f1075cef0371f5e,"Merge pull request #3856 from gthb/patch-1

doc: quote ** in test invocation example"
d26c42953ea9663f0d9d222b257118d654cbed49,Merge branch 'dev' into compare-ATN-sim-output
19344b82af1313c100173c1ec126417e08fe9205,"Make C# trace ATN sim look like Java.

Signed-off-by: Terence Parr <parrt@antlr.org>"
1cfb9627a768d4437482aa1c8b7049f153aba42a,"Damn forgot to add this to the javascript update.

Signed-off-by: Terence Parr <parrt@antlr.org>"
fe386151ce2183fa109d6ee73cd17b5dcb2e32c0,"Merge pull request #3957 from parrt/compare-ATN-sim-output

Generate identical atn simulation output across targets to compare parsing functionality"
92adbf6c510d8f2f0f660737412ef9b5f2044f42,"Remove dependency of tool on javax.json (not used)

Signed-off-by: Terence Parr <parrt@antlr.org>"
1e377b46b9636a5e0670093eee61122afbe46411,Merge branch 'feature/fix3875' of github.com:jimidle/antlr4 into jimidle-feature/fix3875
ba2e8a1b24471065e28c4acbe6ca0b6d61b345b3,Merge branch 'jimidle-feature/fix3875' into dev
c445f84aec783e75649aabb9459f1279d1ed24c1,"Fixes for Go target make these tests pass (or at least they now pass):
https://github.com/antlr/antlr4/pull/3880

Signed-off-by: Terence Parr <parrt@antlr.org>"
df8d4c33491ec36a96f0f28c85842da77a3c1213,Merge commit 'c445f84aec783e75649aabb9459f1279d1ed24c1' into fix-issue-3965
106bfb3276e2fc5ab224df32ab9b4930ceaf3ad0,Fix incorrect comparison
5e395df079f5a2e3ff091a2f4ea466fc6b66c6cd,no message
ebb3ff72539ca7db818387266460b2badbd930cf,"Fix wording

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
3732920a6f3c7c6cc9eae8d35c84becfa5db478d,"Merge pull request #3972 from ericvergnaud/fix-issue-3965

Fix issue 3965"
26d3a324d4607506ec2e8e46864fea0372eb4edf,"Merge pull request #3973 from ericvergnaud/document-versioning-strategy

no message"
47415e33c366cd9695d5c7e2586424692492deed,"tweak versioning doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
e24081dcdd78b6dbca65d5765dc55642a904c171,"Merge pull request #3973 from ericvergnaud/document-versioning-strategy

no message"
2b5e0dddf56ef991869142138c8eb89f01e8f662,"tweak versioning doc

Signed-off-by: Terence Parr <parrt@antlr.org>"
31f5d1ffa3974c0cb3c8140e577e57bf4f85c40e,Add ATN tracing support for PHP target
6a251b7c3b54d5775cfe7f83e8ad8b18cb595c9d,"Merge pull request #3974 from marcospassos/atn-tracing-php-target

Add ATN tracing support for PHP target"
fc95da5f2f3d5c8f3850b68b341d33f98830141e,Fix PHP test template and improve docs
ffb96b95dd86be23428d767364e85c08f490e71b,"Merge pull request #3975 from marcospassos/atn-tracing-php-target-fixes

Fix PHP test template and improve docs about debugging"
bd8af73382e470c10ca91054300c3f4de1a7228c,Merge branch 'dev' of github.com:antlr/antlr4 into dev
ac03e01f3b485d132bb9d9bd8ba9f411c319993d,"Fixes #3959 Was comparing C++ arrays with different lengths.

Signed-off-by: Terence Parr <parrt@antlr.org>"
870615ed62016309f9a9106d08b0a75ed1370fa4,"Merge pull request #3978 from parrt/fix-Cpp-equals-bug

Fix cpp equals bug #3959"
443c409bd433766b58f0171340724ff866e62dba,"cleanup C++ code

Signed-off-by: Terence Parr <parrt@antlr.org>"
71287b992f8d479754c4e1fb1349e0e59034c812,"gcc-9 does not exist in github actions for ubuntu

Signed-off-by: Terence Parr <parrt@antlr.org>"
3e7bf1d65c3446baa1d5b03ebc2be9b34bad7608,"Merge pull request #3979 from parrt/gcc-version-fix

Gcc version fix"
466b799ebb33149c5e8fb05fb54333d953999f85,"php composer install

Signed-off-by: Terence Parr <parrt@antlr.org>"
63754374e0d139d1a642491ba3577306737abd42,"add cd runtime/PHP

Signed-off-by: Terence Parr <parrt@antlr.org>"
ed3208ccaf3d09f2b1bcd16129947b8c900f3633,"restrict php stuff to php

Signed-off-by: Terence Parr <parrt@antlr.org>"
2ec87e9c993c93b3173536d31bd983ab2b20b4d8,"Merge pull request #3980 from parrt/fix-php-composer-install

php composer install"
87bb95ff93614a5d985b6986439d1df6f74e7aff,"show all exec'd commands, move WATCH_COMMANDS_EXEC var location

Signed-off-by: Terence Parr <parrt@antlr.org>"
91d9fd60118b499f96b9e667e3f323affec20182,"turn off command dumping

Signed-off-by: Terence Parr <parrt@antlr.org>"
40e05181c0275e69e7fe518f9289bbdf7cf77b37,"Issue #3988: Builds failing on Ubuntu

The workflow is setup to work on Ubuntu-20.04 and the default 'latest'
is migrating to Ubuntu-22.04 which isn't supported yet (all the
dependent actions needs to support the platform before the workflow can
use it).

Switching all platforms to use explicit versions rather than the
'-latest' tag so the transition is more voluntary than something that
just happens behind the scene.

Also, upgraded all setup-xx actions to latest versions to remove some of
the deprecation warnings on dashboard.

Setup concurrency as well (kill any existing build running on the same
branch branch and using the same workflow).

Signed-off-by: HS <hs@apotell.com>"
7511da0a4df3c203dde6e719ef706cfb65d8d1de,"Merge pull request #3989 from hs-apotell/hostedci

Issue #3988: Builds failing on Ubuntu"
76fa05c21b12b96a6c12a0a82e611ed9d87d5af4,"Merge pull request #3847 from sashashura/patch-1

GitHub Workflows security hardening"
539ffaf63d312d38c98eb57099a4b6a735233fb8,"turn off swift tests; takes 3 hours as it tries to constantly rebuild the runtime for each unit test.

Signed-off-by: Terence Parr <parrt@antlr.org>"
8a8141f59e666b83d2dee744b452d0321ff6946b,"Extract unit test updates by @ericvergnaud in https://github.com/antlr/antlr4/pull/4027 then he can rebase after we merge this into dev.  All tests pass locally (didn't check python2 actually but python3 works).

Signed-off-by: Terence Parr <parrt@antlr.org>"
d98378c3fb5bb5a95b3cc2b0dbf6338dab3b5fbb,"Extract FileUtils updates by @ericvergnaud in https://github.com/antlr/antlr4/pull/4027 then he can rebase after we merge this into dev.  All tests pass locally (didn't check python2 actually but python3 works).

Signed-off-by: Terence Parr <parrt@antlr.org>"
a77a4748bfc2d59fd74093254714dcf26adf7dee,"Merge pull request #4029 from parrt/eric-test-updates

Extract unit test updates by @ericvergnaud needed for TypeScript"
0828d53ffcdc2e1aa73261b819cd0eabe616b189,"Merge pull request #4030 from parrt/eric-fileutils-update

Extract FileUtils updates by @ericvergnaud"
985b9d691c33b576fa716053866c0630e6e1bc27,"Bug #3878 was missing some scenarios regarding scope of header actions.

Signed-off-by: Terence Parr <parrt@antlr.org>"
31bdd52de45f17fa157765c29012c777e3160281,"Merge pull request #4034 from parrt/eric-File-objs-update

Eric file objs update"
2c75e642796718273fd215b03a310d4958319bad,"Typescript target (#4027)

* Fix CMake syntax for variable expansion

When using variables to compare (like in if clause) the variable
shouldn't be quoted. More details can be found at the link below:

https://cmake.org/cmake/help/latest/command/if.html#variable-expansion

Signed-off-by: HS <hs@apotell.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* initial commit

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* renamed for clarity

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* renamed for clarity

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* able to locate antlr4 runtime using ts-node, missing types

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* progressing

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* able to 'run' a test. It fails but it compiles and resolves!

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* reflect refactored runtime

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* able to run RecursiveLexerRuleRefWithWildcardPlus_1 test locally

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* passes LexerExec tests in IntelliJ

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* make ATN private

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* ignore same tests as JavaScript

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* compiles Parser and Lexer bu local run fails

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* ParserExec.TokenOffset test successful in IntelliJ !

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Progressing, passing 131 of 348 tests

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* pass 327 tests out of 348

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* more successful tests

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* 333 successful tests out of 348

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* all tests pass except 7 caused by #3868

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* update getting-started doc

Signed-off-by: nicksxs <nicksxs@hotmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* add blank github action file for hosted CI

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* update getting started document to say java 11

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Revert ""update getting started document to say java 11""

This reverts commit 1df58f77820b5feb747d34cc6aff26276db8b6dd.

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* add C# book code links

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Add Jim/Ken to readme

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Update Swift Package to support static library

Add static library distribution in SPM

Signed-off-by: Hell_Ghost <dev.hellghost@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Update Package.swift

Signed-off-by: Hell_Ghost dev.hellghost@gmail.com
Signed-off-by: Hell_Ghost <dev.hellghost@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Add caching support for maven & dependencies. Also, include caching for
cpp builds using actions/ccache.

Builds are more reliable (avoids the archive.apache server which
intermittently reports timeouts) and also significantly improves the
overall builds times (down from 46 mins to 28 mins).

The slowest part of the build now is the Windows+cpp builds because
there is no reliable cache implementation yet. MacOS+cpp (65% cache hit) is
also relatively slow compared to Ubuntu+cpp (99% cache hit).

Signed-off-by: HS <hs@apotell.com>
Signed-off-by: Terence Parr <parrt@antlr.org>

# Conflicts:
#	.github/workflows/hosted.yml
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* use snap to install go 1.19

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* grr...install snap

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* ugh. start snap

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* ugh. start snap

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* ugh. cant get snap to install go

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* try downloading golang with curl

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Issue #3823: Temporarily disable a few tests on CI

The tests are currently failing. The underlying issues have been fixed
on dev and so the builds will be turned back with the next release.

Signed-off-by: HS <hs@apotell.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* update actions status badge

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* update getting started document to say java 11

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Revert ""update getting started document to say java 11""

This reverts commit 3591ee0b51c6bb914f7ef0749182306fefe9cc18.

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* update getting-started doc

Signed-off-by: nicksxs <nicksxs@hotmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* make getValue visible to external profiler tools.

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Fix #3508: Document the $parser attribute and its use in target-agnostic grammars.

Signed-off-by: Ross Patterson <ross.patterson@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Add accessor to IntervalSet for intervals

Signed-off-by: James Taylor <jamestaylor@apache.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Remove libuuid dependency from C++ runtime

libuuid and its headers are not referenced anywhere, so remove it.

Signed-off-by: Bryan Tan <bryantan@technius.net>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Add `@SuppressWarnings(""CheckReturnValue"")` to prevent error_prone lib errors.

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: Fixes for https://github.com/antlr/antlr4/issues/3718

  o Implement collections with generics to solve hash collisions
  o Fix type casting in LL start parser simulation optimization
  o General minor tidy ups

Acknowledgements to @kaby76 for help with tracing errors

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #3718 Revert accidental keyboard error in Java target

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #3718 Correct DFAState index in Lexer ATN Simulator

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #3718 Fix go runtime test runners

With older versions of go, there was no good way to tell the compiler to use your local
development copy of a particular package instead of the one installed in GOPATH/src/...

However, we are now using modules, which allows us to tell the compiler that instead of
a module downloaded to GOPATH/pkg, to use a local copy on disk.

Hence this change removes the need to copy the whole of the go installation to a
tempoorary location, then put the antlr go runtime in to the go installation as if it was
part of the compiler. Hence the execution time for the go tests is now faster than before.

This works because when the generated code is placed in the temporary location, we create
a go.mod file for it, tell the module to replace the online module for the go runtime with
the local copy on disk, then ro a go mod tidy to add the dependencies from the code (which
avoids network access, so it is instant), which adds the ANTLR dependency itself (which is
then replaced at compile time).

All go runtime tests now pass.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Rm remote github actions; hosted seems to work

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* install golang with curl; go was missing from dev

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: Rework of all Hash() and Equals() methods - implement generic collections

 - Implement new collections using generics that implement the functionality
   required by the Java runtime in a more idiomatic Go way.
 - Fix Hash() and Equals() for all objects in the runtime
 - Fix getConflictingAlts so that it behaves the same way as Java, using a
   new generic collection
 - Replaces the use of the array2DHashSet, which was causing unneeded memory
   allocations. Replaced with generic collection that allocates minimally
   (though, I think I can improve on that with a little analysis).

Jim Idle - jimi@idle.ws

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #3718 Correct DFAState index in Lexer ATN Simulator

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* feat: Reduce initial memory allocations for collections

  - Many small collections are created at runtime, the default allocation for
    maps, even though small, still requires memory. Specifying a very small
    initial allocation prevents unnecesary allocations and has no measurable
    effect on performance. A small incremental change.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #3758 Allow for string being a keyword and fix go template to use escapedName

  - The go template was ignoring the use of escapedName in many places and was
    not consistenet with the Java version.
  - Added 'string' to the list of reserved words for the Go target

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #3758 Add go.sum to the repo

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #3758 Ensure that standard runtime extensions are included in go.mod

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #2826  Go template is incorrect for dynamic scopes

closes #2826
obviates PR #3101

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #2016 - Generate correct iGo code for lists in a grammar, such as `label+=arg+`

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* feat: Bump poms to use 4.11 Snapshot

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* turn off Golang test at circleci for now

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Replace smart-quote with single-quote in code examples

Signed-off-by: Tim McCormack <cortex@brainonfire.net>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Augment error message during testing to include full cause of problem.

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Augment error message during testing to include full cause of problem. (round 2 to avoid null ptr)

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Cpp: Link to threads library

As detailed in #3708, it is necessary to link against the (p)threads
library in order to be able to use std::call_once without producing
linker errors.

Since this function is frequently used in ANTLR's cpp version, this
commit ensures that the respective library is always linked against in
order to avoid this error, even if downstream users are not explicitly
linking against an appropriate threads library.

Fixes #3708

Signed-off-by: Robert Adam <dev@robert-adam.de>

Co-authored-by: Bryan Tan <Technius@users.noreply.github.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* add test for #2016 and fix java.

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* ensure all targets have the appropriate argument list for the template causing the problem.

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Fix other targets

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix format

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* add check that $args is a list

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* change made by @lingyv-li to fix bug in DART exposed by this test.

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix AssertIsList in multiple targets. Go doesn't pass test and has no AssertIsList so I'm dropping that test from the Go test suite.

How did a comment to the C++ runnerFor my future reference as to how to build things from the command line.

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* C++ gets an exception with this test so I'm turning it off. See https://github.com/antlr/antlr4/issues/3845

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* feat: #3840 Move Go to version v4.11.0

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* feat: #3840 Create the v4 version of the Go runtime

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* feat: Create the v4 runtime layout for the Go runtime, ready for release tagging

Note that the vast majority of the changes here are just copying the runtime file in to
the /v4 subdirectory so that we can support legacy projects that use GOPATH only, as well
as users that can use go modules. At a later release, we will delete the default path, and move
the v4 subdirectory back to the top level. But, we cannot do that on this release.

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Reenable go tests on CircleCI

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Fold constants in generated code for all runtimes

Go: getInlineTestSetWordSize 32 -> 64
Dart: get rid of BigInt
Swift: optimize TestSetInline
Python: fixes #3698
JavaScript: fixes #3699

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Use int literals instead of refs for Python and JavaScript

Update getMultiTokenAlternativeDescriptor test

fixes #3703

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* update release doc for Go version numbers

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix: #2016 Fix Go template list reference, go runtime and got test template for list labels

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* feat: Add a deprecation message to the existing v1 module

Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Split tool and runtime tests for GitHub workflow

Build only necessary modules for tests

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Remove not used methods from FileUtils (runtime tests)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Update dependencies of antlr4-maven-plugin

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Update jUnit: 5.8.2 -> 5.9.0

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Fixes #3733; update ST4 so it uses proper ANTLR 3

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Set to 4.11.0 not 4.11 in poms

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* [maven-release-plugin] prepare release 4.11.0

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* [maven-release-plugin] prepare for next development iteration

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Damn. java target said 4.10.2 not 4.11.0

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* roll back to 4.11.0; made mistake

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* roll back to 4.11.0; made mistake

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* [maven-release-plugin] prepare release antlr4-master-4.11.0

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* [maven-release-plugin] prepare for next development iteration

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* use build and twine to publish source and wheel

Signed-off-by: Qijia Liu <liumeo@pku.edu.cn>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* tweak doc

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* tweak c++ build script to make Mac binaries with cmake/make

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* tweak release doc

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* tweak code / doc related to bad previous release

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* [maven-release-plugin] prepare release 4.11.1

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* [maven-release-plugin] prepare for next development iteration

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* clean up deploy c++ source script

Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* cleanup code generation

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* don't initialize default param values twice

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* add missing field

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* update codegen template for 4.11.1

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* support new param: Parser

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix template for 4.11

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* default export Listener and Visitor

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* also default export parser and lexer

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* all tests pass except 7 caused by #3868

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix issues

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* make it easy to break

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix #3868

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* ALL TESTS PASS!!!!

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* cross fingers with CI

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* try fixing broken go tests

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Try fix typescript CI

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* disable cpp for now

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix broken config

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* try fix macos gh build

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* improve speed by caching node_modules

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* no longer using ts-node

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix all tsc warnings

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* try fix MacOS CI

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* CI errors seem random, reactivate ubuntu

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Disable node_modules caching, which seems to randomly fail in CI

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* don't delete symlink contents on windows (java bug with is SymbolicLink ?)

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* fix broken windows CI

Signed-off-by: ERIC-WINDOWS\ericv <eric.vergnaud@wanadoo.fr>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* verify windows ci

Signed-off-by: ERIC-WINDOWS\ericv <eric.vergnaud@wanadoo.fr>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Revert ""verify windows ci""

This reverts commit 770d8218ecbc1a94d60854d5b00cc3c761c3469c.

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* reinstate full CI

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* manually merged

* manually merge

* fix merge

* fix broken template

* add template for invoking context list

* fix typo

* fix test templates

* Add code of conduct but with a different name since I do not like that name

Signed-off-by: Terence Parr <parrt@antlr.org>

* Update C# release instructions

* Tweak code of conduct

Signed-off-by: Terence Parr <parrt@antlr.org>

* Bring back the Package.swift in the project's root

Signed-off-by: Nikolay Edigaryev <edigaryev@gmail.com>

* swift-target.md: fix SPM installation instructions

Signed-off-by: Nikolay Edigaryev <edigaryev@gmail.com>

* the scope (parser or lexer) in @parser::header was dropped, so keep track of it and only include @header in Listener and Visitor code

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* drop workaround in favor of #3878

* drop cache usage since it fails in CI

* #3878 was missing some scenarios

* fix issue when deleting test folder

* fix warnings

* drop duplicate behavior

* drop alien 'abstractRecognizer' property

* drop alien property 'channels'

* fix various codegen issues

* change import

* restore js extensions, see https://github.com/microsoft/TypeScript/issues/50501

* use consistent inheritance

* more API

* more API stuff

* fix typo

* fix typescript exports

* use ts-node to run typescript tests

* webpack runtime before linking

* fix exec paths on windows

Signed-off-by: ERIC-WINDOWS\ericv <eric.vergnaud@wanadoo.fr>

* fix failing tests

* fix a few import issues

* merge typescript-target with latest dev

* runs Java and JavaScript tests after merging typescript-target

* merge test template

* skip unsupported test

* fix template prototype

* fix missing merge

* bump typescript beta version after rebase

* update docs

* rollback unwanted changes

Signed-off-by: HS <hs@apotell.com>
Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: nicksxs <nicksxs@hotmail.com>
Signed-off-by: Terence Parr <parrt@antlr.org>
Signed-off-by: Hell_Ghost <dev.hellghost@gmail.com>
Signed-off-by: Hell_Ghost dev.hellghost@gmail.com
Signed-off-by: Ross Patterson <ross.patterson@gmail.com>
Signed-off-by: James Taylor <jamestaylor@apache.org>
Signed-off-by: Bryan Tan <bryantan@technius.net>
Signed-off-by: Jim.Idle <jimi@gatherstars.com>
Signed-off-by: Tim McCormack <cortex@brainonfire.net>
Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>
Signed-off-by: Qijia Liu <liumeo@pku.edu.cn>
Signed-off-by: ERIC-WINDOWS\ericv <eric.vergnaud@wanadoo.fr>
Signed-off-by: Nikolay Edigaryev <edigaryev@gmail.com>
Co-authored-by: HS <hs@apotell.com>
Co-authored-by: nicksxs <nicksxs@hotmail.com>
Co-authored-by: Terence Parr <parrt@antlr.org>
Co-authored-by: Hell_Ghost <dev.hellghost@gmail.com>
Co-authored-by: Ross Patterson <ross.patterson@gmail.com>
Co-authored-by: James Taylor <jamestaylor@apache.org>
Co-authored-by: Bryan Tan <bryantan@technius.net>
Co-authored-by: Jim.Idle <jimi@gatherstars.com>
Co-authored-by: Tim McCormack <cortex@brainonfire.net>
Co-authored-by: Robert Adam <dev@robert-adam.de>
Co-authored-by: Bryan Tan <Technius@users.noreply.github.com>
Co-authored-by: Ivan Kochurkin <kvanttt@gmail.com>
Co-authored-by: Qijia Liu <liumeo@pku.edu.cn>
Co-authored-by: Nikolay Edigaryev <edigaryev@gmail.com>"
5fad975659330c725770f0f8b10f3d1683e3a5f4,"Typescript target fix missing apis (#4051)

* fix missing APIs

* more missing APIs

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* bump beta number

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
17fa1af9af77b0682907ce854da6b187f80c9752,Fixes 10 year old bug that nobody ever encountered in prod... (#4038)
cc54283042a972b4793707ff88e0bcf0ec20e90c,"Javascript fix missing export (#4076)

* fix missing APIs

* more missing APIs

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* bump beta number

* add missing export

* bump package version

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
af75ac4aad16b797f92629ecc61b202ed4b919e2,"Python LexerNoViableAltException is created with messages (#4095) (#4097)

- Added a message to LexerNoViableAltException (python2 & 3)
- Corrected the ErrorStrategy (Python2) :
notifyErrorListeners first argument should be the message, and second the Offending Token
Exception does not have getMessage method

Signed-off-by: SU Sofyan <sofyan.su@airbus.com>"
bd5a263e933599760abed24162237b92278eb3c2,"Fully qualify std::move invocations to fix -Wunqualified-std-cast-call (#4101)

Clang implemented a warning last year to detect bare `move` and `forward` calls, as they have the potential to be error prone: https://github.com/llvm/llvm-project/commit/70b1f6de539867353940d3dcb8b25786d5082d63. This warning should be available in clang-15.

Signed-off-by: Jordan Rupprecht <rupprecht@google.com>"
1d22a53075ed0e3eabb268f0004ca3e96968dafe,"webpack for the web whilst keeping FileStream working when running in node

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
dcf953eedfc220a9ef4682a53cf8b777e59b996c,bump git action
f89c4d7cdb72455208963028682ad3f50e04bda1,remove unresolved dependency
5ddaad7277276564f0e55c4745a734a016deeb49,fix beta version number
6b212dbd36196f298938c7682aa4efc4e71cd68a,fix documentation typos
c2bfa34a66e6449ff6fb2e388e17e2ff4b7e8e82,"fix missing union type

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
fbd4452fff79c6dab1dcb3e2cdc88f19e82d2b5c,"Js support encoding in file stream + packaging issues (#4112)

* export Recognizer

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>

* Fix packaging issue

* Bump beta version

* support encoding in FileStream sync

* fix prototype

* fix prototype

* more exports

* bump beta version number

* fix packaging issues

* fix failing tests

---------

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
823ac47fc1ee3c1b2a574b1d0b38e1d3085f42a5,"For the TypeScript target, make sure to export CommonToken, and the methods from Lexer. These are needed for TypeScript ports of various grammars in grammars-v4. Issue #4110. (#4119)"
3655c87d0d9b394b08d7d4877181d3ad3a38778a,"Add missing space to actions.md (#4105)

Signed-off-by: Daniel Snider <danielsnider12@gmail.com>"
b028de2d9d2bc724d40fc5746766b953a2493a25,"Cpp: Remove redundant cmake version checks

In the top-level CMakeLists.txt, a minimum cmake version of 3.15 is
required. Therefore, all checks that were checking whether the cmake
version is >= 3.0 or 3.1 (etc.) are redundant as those will always be
true due to above requirement.

Signed-off-by: Robert Adam <dev@robert-adam.de>"
1bd8bbe30d665c988c4091e25b74e83a03001099,"Cpp: Remove deprecated policy settings

Setting any policy to the OLD behavior is almost always a bad idea in
the long run as the OLD behavior of cmake policies are deprecated by
definition and may be completely removed in a future cmake version.

The changes in cmake behavior introduced by this are
- Only auto-expand variables in if-expressions, if they are unquoted.
  Doing this differently just opens you up for hell to break loose.
  As far as I can tell, we don't make use of this behavior anyway.
- If referring to a non-existing target with get_target_properties,
  cmake will now produce an error. This is what one usually wants as
  referencing non-existing targets is simply a bug in your setup.
- cmake won't recognize ""DEFINITIONS"" as a built-in directory property.
  Instead, one has to use the (proper) ""COMPILE_DEFINITIONS"". Again,
  I was unable to find a location in which we use ""DEFINITIONS"", so the
  change should have no effect on us.
- ""@rpath"" can now be used in a target's install name on macOS. With the
  OLD behavior, this had to explicitly be enabled, while the new
  behavior is to enable this by default. In order to still remain at the
  old behavior, without depending on deprecated functionality, we now
  instead set CMAKE_MACOSX_RPATH to OFF, which should have the same
  effect.

Besides removing deprecated behavior, this has the nice side effect of
removing the warnings that were emitted when building the cpp runtime
with cmake.

Signed-off-by: Robert Adam <dev@robert-adam.de>"
b6cb1cc8cfbae6a926d761012c587b75ef73c656,"Cpp: Add cmake options to selectively disable shared/static build

The default behavior is left unchanged (build both) but now users can
choose to optionally only build one of the two variants.
Due to macro-magic, both variants had to be compiled separately and
therefore building both variants really does compile everything twice.
Therefore, disabling the version that one is not interested in can cut
down compilation time significantly.

Fixes #3993

Signed-off-by: Robert Adam <dev@robert-adam.de>"
207314792d851bcb11a409ce46ca34f37fd22fbd,"cpp runtime: Remove pthread dependency. (#4086)

ANTLR doesn't use threads, and it used not to depend on pthread library
either.

It changed recently in 2022: https://github.com/antlr/antlr4/issues/3708
The patch linked against pthread, because the GNU libstdc++ used to
depend on it in their implementation of `std::call_once`.

By the way, the libstdc++ stopped it in 2020:
https://gcc.gnu.org/git/gitweb.cgi?p=gcc.git;h=93e79ed391b9c636f087e6eb7e70f14963cd10ad
So this is not more needed.

I would like to stop depending on pthread. I am using ANTLR in C++
WebAssembly for the website:
https://arthursonzogni.com/Diagon/

It doesn't compile with emscripten anymore, because by default pthread
is not enabled. It could be enabled, but it would force me to deploy
cross-origin-isolation:
https://web.dev/cross-origin-isolation-guide/

Solutions:
1. Stop linking against pthread, because the libstdc++ stopped depending
   on it for std::call_once.
2. Implement std::call_once ourself using std::atomic_flag
3. Implement std::call_once ourself using a boolean flag, assuming we
   don't need to support threads.

I chose to do (2) in this patch.

Signed-off-by: ArthurSonzogni <sonzogniarthur@gmail.com>"
d7ae9c15b96c87b980ba3da2608d32f0dcc76777,"Small tweaks to Swift.stg to allow throwing operations in actions

Signed-off-by: Mykola Pokhylets <mykola.pokhylets@gmail.com>"
a156a06a5f0daac684e22febf9b80c2f583bc7ab,"Revert ""cpp runtime: Remove pthread dependency. (#4086)""

This reverts commit 207314792d851bcb11a409ce46ca34f37fd22fbd."
46445ea40c676b27e25cf244dfd643f08470d694,"bump version to 4.12.0

Signed-off-by: Terence Parr <parrt@antlr.org>"
6763f58a43d820c2024fe3f6891313a24dcc4c1d,Merge branch 'dev'
a2c349f9bf268cf75aaf8cddff90a767e703d489,[maven-release-plugin] prepare release 4.12.0
bf0bbff4bff0c7fb33704ef7c4699314715efb2c,[maven-release-plugin] prepare for next development iteration
1f9a474cc2dca0ec2ab3ce42d2dc2468205647c7,Tweak release doc
422c2779ab99e4f4749cc7286db9e7e646671fd5,Tweak release doc
b0bfff577eb3dbafcc1af56cf74c16d5b44e5053,Update release docs (#4136)
38c85b61d37a71d1dd14b85d957e1bc7a5df8906,"Provide JavaScript port of TokenStreamRewriter (#3560)

undefined"
62bb96f40dbb3a264c8d4cafad3e7456990db5fc,"export token channel (#4143)

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
90c44335bffcb879397d0730bced3087e3bb49cb,"added null | string union type (#4147)

Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>"
d641b6b5e79bb425ba2cee14c0df35110262c3a1,"Limit use of Posix threads to Unix (#4140)

Posix threads are available only on Unix (and unix like) platforms.
Wrap the dependency accordingly so builds don't fail on other platforms.

Signed-off-by: HS <hs@apotell.com>"
40554bddd4de36d52ca8a684a1574d63f04482b0,"fix: Some code that should have been destined for /v4 was instead put in to the root (pre v4) files (#4154)

- Incorporate an interative tree walker
 - Expose Reset() and String() in lexer/token and add test

Signed-off-by: Jim.Idle <jimi@idle.ws>"
7cd68d5bfe9986fffea10018f3188b60a301ad84,"Remove redundant source code from go runtime (#4155)

* feat: Remove the old version of the source code, as at v4.x.y the source must be under /v4 for modules

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: tidy up old version of go.mod (non v4 version), which is now deprecated

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>"
8188dc5388dfe9246deb9b6ae507c3693fd55c3f,"README: Update required Java version (#4129)

The badge in the README suggests that ANTLR requires Java 7 or higher,
whereas since ANTLR v4.10 Java 11 or higher is required.

Signed-off-by: Robert Adam <dev@robert-adam.de>"
009f92516c917ecad64caeb9bdeda187dfac7bda,"README: Update required Java version (#4129)

The badge in the README suggests that ANTLR requires Java 7 or higher,
whereas since ANTLR v4.10 Java 11 or higher is required.

Signed-off-by: Robert Adam <dev@robert-adam.de>
(cherry picked from commit 8188dc5388dfe9246deb9b6ae507c3693fd55c3f)"
e7f0eb932a03d2fe5b43e978e5167971cdc230f3,"cmake: Fix output dir for Visual Studio generator and for when ANTLR_BUILD_CPP_TESTS is not set (#4121)

Signed-off-by: Leonardo Sarmiento <leonardo@moduleworks.com>
Co-authored-by: Leonardo Sarmiento <leonardo@moduleworks.com>"
3143e88441364d3a9d47e0012713aa02461987c6,"Cpp: Remove code duplication (#3995)

* Cpp: Remove code duplication

The same function was defined inside multiple different source files (in
an anonymous namespace).
Not only is this generally bad practice from a maintenance point of
view, but it also break unity builds (which can speed up compilation
times A LOT).

The fix simply consists in introducing a new Utils file that contains
the single implementation and every source file that uses this function
simply has to be linked against that new file (and include the
corresponding header).

Signed-off-by: Robert Adam <dev@robert-adam.de>

* CI: Enable unity builds for cpp targets

This should reduce the build time for those steps significantly

Note: Unity builds are enabled only for cmake-based CI builds

Signed-off-by: Robert Adam <dev@robert-adam.de>

* CI: Perform unity and non-unity cpp builds

Signed-off-by: Robert Adam <dev@robert-adam.de>

---------

Signed-off-by: Robert Adam <dev@robert-adam.de>"
480a7a217e27f97cee55ff7093390180f79d3b33,"Changed Parser typings (#4149)

Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>"
0470c673bd6d5941e7616b3f1555667238c1c3a7,"fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file (#4163)

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>"
8c1c482b2858c60a504a8fec7e20f9bd544beb39,present antlr before versioning (#4156)
1fb3e5bd2b8f12f8a3585e2cb313c9556ecd50d8,"fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>"
c0f90d8d442bfc1a57d9c975fa49933c2f10a1fd,"Feature/gotestfix (#4168)

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Cater for the fact that some test rules use start as a label or rule name

As a fix for other cvode gen errors when start, end, or exception are used as
label names, they are now translated to have a suffix of `_` at code gen time.
However, the runtime tests sometimes use start as a rule name and so we must now
cater for this in the tests.

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>"
95fd266931b8eafa5fddf513f9852b32dd82b845,"Feature/docclean Greatly improve the godoc comments in the runtime (#4169)

* doc: Updates to some of the Go doc comments to start a ful ldocumentation cleanup

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More documentation fixes.

Using this as a method of forcing myself to read every line of code in the runtime, and therefore
discover mistakes in the original implementation. And, of course, actually working docs for the
Go runtime, can only be a good thing.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More documentation fixes

Also changes the exporet level of a some variables and funcs that were not correct,
even though no user has currently needed them it would seem.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Many updates to document exported fuctions correctly and reformat the ingerited Java code

It looks like a massive amount of changes, but it is almost all doc or changing exports or renaming
unused paramters etc to make the Go linter happy.

No actual code changes yet.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More additions and corrections to the Go documentation for the runtime

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Final clean of exported func and type documentation

There will be more to do here as there are a lot of things that are hidden internal to the antlr
package that probably should not be. There are also a lot of exported funcs and types without
any documentation, that will eventually need to be cleaned up.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Changed Parser typings (#4149)

Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file (#4163)

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Feature/gotestfix (#4168)

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Cater for the fact that some test rules use start as a label or rule name

As a fix for other cvode gen errors when start, end, or exception are used as
label names, they are now translated to have a suffix of `_` at code gen time.
However, the runtime tests sometimes use start as a rule name and so we must now
cater for this in the tests.

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <frank.josua@gmail.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>"
4a30b9a0c8815bc1b352819b005847f215b76494,"Feature/fixembedding (#4176)

* feat: Createa n Init routine for BaseATNConfig so we can embed sructs rather than allocate to pointers

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Change BaseATNConfig to be properly embedded in other structs such as LexerATNConfig instead of by pointer

This is the first of many changes that switches the embedded class structure that was copying
Java class hieracrchy from allocations/new to proper embedding such that any struct is
allocated with one allocation not two or more. Main PR will cover what this means.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Change embedding for ATNBaseSimulator to true embedding instaed of pointer

Saves an extra allocation and helps the GC

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Switch the use of pointers to embedded ATN states to true embeddding

Saves many allocations and grbage collections

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Correct the way that PredictionContext is compared for merge

Should reduce allocation count by tons.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Feature/docclean Greatly improve the godoc comments in the runtime (#4169)

* doc: Updates to some of the Go doc comments to start a ful ldocumentation cleanup

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More documentation fixes.

Using this as a method of forcing myself to read every line of code in the runtime, and therefore
discover mistakes in the original implementation. And, of course, actually working docs for the
Go runtime, can only be a good thing.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More documentation fixes

Also changes the exporet level of a some variables and funcs that were not correct,
even though no user has currently needed them it would seem.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Many updates to document exported fuctions correctly and reformat the ingerited Java code

It looks like a massive amount of changes, but it is almost all doc or changing exports or renaming
unused paramters etc to make the Go linter happy.

No actual code changes yet.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More additions and corrections to the Go documentation for the runtime

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Final clean of exported func and type documentation

There will be more to do here as there are a lot of things that are hidden internal to the antlr
package that probably should not be. There are also a lot of exported funcs and types without
any documentation, that will eventually need to be cleaned up.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Changed Parser typings (#4149)

Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file (#4163)

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Feature/gotestfix (#4168)

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Cater for the fact that some test rules use start as a label or rule name

As a fix for other cvode gen errors when start, end, or exception are used as
label names, they are now translated to have a suffix of `_` at code gen time.
However, the runtime tests sometimes use start as a rule name and so we must now
cater for this in the tests.

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <frank.josua@gmail.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>

* feat: Change BaseATNConfig to be properly embedded in other structs such as LexerATNConfig instead of by pointer

This is the first of many changes that switches the embedded class structure that was copying
Java class hieracrchy from allocations/new to proper embedding such that any struct is
allocated with one allocation not two or more. Main PR will cover what this means.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Change embedding for ATNBaseSimulator to true embedding instaed of pointer

Saves an extra allocation and helps the GC

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Correct the way that PredictionContext is compared for merge

Should reduce allocation count by tons.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Merge documentation updates

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Rework predictions tructs to use emedding instead of pointers

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: more reworking of PredictionContext for embedding

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Ensure that EmptyPredictionContext is correctly initialized

Rework of the variaous PredictionContexts has reduced memory allocations to between
30% and 50% of previous version.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Change from use of type casting to using stored type

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Convert CommonToken to true emedding rather than pointers

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <frank.josua@gmail.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>"
1bfddadd3b9f152d0db081041a149a876b118106,"fix incorrect prototype (#4184)

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
06028efb5c480b2e64fb66a45f9492fb178d755a,"fix: Fixes merge arrays to perform an actual comparison rather than comparing two pointers!
Fixes: #3967
Closes #3967

 - A small error was made whereby the comparison with a newly created merge `M` of two prediction contexts
  `a` and `b`, was comparing the pointers of `a` and `M` and not using the internal Equals() method.
  The ATN output trace is now equal.

 - Also adds a new testrig internal project (so it won't be used by `go get`) that allows quick setup
   and testing of ATN tracing for a test grammar and test input.

 - Excludes go performance profiles from git

 - Corrects a small error in one of the ATN tracing scripts.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
2bd5d139437e0598f8da638e5ecaf99e16b88672,"doc: Update TODO comment in prediction_context now that #3967 is fixed

Signed-off-by: Jim.Idle <jimi@idle.ws>"
62fe420258e68086978830fcece34e1d37a5fb29,"fix: Unbeliveably, the PredictionContext cache did not work!

 - I missed this on my first evaluation of all the collections used
   by the code I inherited. The PredictionCache was implemented as a
   map using PredictionContext pointers as the key. This meant that
   there would never be a cache hit and the cache woudl just accumulate massive
   numbers of PredictionContext 'objects'!

Bloody hell. Sometimes it is difficult to spot such glaring errors. This change
vastly reduces memory usage. The next commit will fix the visited context look up
which also suffers from the same problem.

Fixes: #3934
It probably also fixes a ton of performance and memory usage problems, which
I have yet to test.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
7c7285086c9bd097a8d437657c0c26c55e3ab470,"feat: Fix up the parsing cache

 - Note, I think that this still needs work, but it is a lot better memory wise.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
748cefbc1c8411b1b1aa01adaf849df05620173b,"fix: Massive performance improvement by fixing comparison functions

Some of the legacy code that tried to implement comparisons and hashing like Java was
just plain wrong. That stuff is buried deep in there and took a massive effort to
work out what was going wrong.

In the end, while the hash codes were OK for DFAState, the comparisons inherited from
the old code were just plain wrong for certain objects. With those corrected, there
is a massive improvement in performance all around.

I will push a PR for this stuff now, but I already see some massive potential gains
by getting rid of interfaces where we don't need them stopping the use of pointers everywhere
indiscrimiately.

Next task is going to be pure performance improvements until the Go runtime takes
its rightful place as the fastest implementation ;)

Signed-off-by: Jim.Idle <jimi@idle.ws>"
7ab4cdb3296e4c1c69a7918f223f8e5a65f8de29,"fix: delete commented out code

Signed-off-by: Jim.Idle <jimi@idle.ws>"
1b5514f78ec264b461846f77900f7c734e8a975f,"test: Tewmporarilly disable one of the tests programs for the go runtime

 - I will of course fix this in a follow up PR, but the test DropLoopEntryBranchInLRRule_4
   currently hangs. It is also disabled for many other runtimes, so I think it is fine to get
   this PR in and then follow up with a fix for this test.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
ea780b7dc87c828738daf9cded6d37504aeb0203,"feat: Improve the runtime performance of the go test suite

 - Removes the need to perform a `go mod tidy` for every test. This change
   causes `go mod tidy` to be run once, after which it caches the go.mod and
   go.sum files for use by the remaining tests.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
75dfe18e90d6b6c30ea3615d19c68ce2b17d738c,"fix: Minor updates to address Ivan's PR review

Signed-off-by: Jim.Idle <jimi@idle.ws>"
4780bf85ed7d59d4f2f704ac7657782d7671457b,"fix: reverse accidental IntelliJ formatting

Signed-off-by: Jim.Idle <jimi@idle.ws>"
c0f6ecef0dbf927829a7de41fb90ae7f9ee22833,"fix: Change codegen and runtime to eliminate panic() and recover() as flowcontrol - 50% performance improvement

  - Prior to this change, a recognition error was tracked by performing a panic(),
    which the generated code for rules would then use recover() to discover. However,
    recover() is not like catch(){} in Java and is expensive to run even if there is
    no panic() to find on the execution stack. Eliminating this and doing a simple check
    at the end of rule execution brings with it a massive performance improvement up to
    50% of CPU execution time. Now that collections and context caching is working correctly
    this is a significant improvement in execution time.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
adbe946416f5f6d794ff4c3322739c3c5c20a90c,"feat: Another 50%+ performance improvement

Prior to this change, the runtime and generated code was using panic() and recover()
to perform error checking and reporting. This is extremely expensive and just not the
way to do it.

This change now uses goto, and explicit checking for error state after selected calls
into the runtime. This has greatly improved parser performance. Using the test code
provided by a recent performance issue report, the parse is now twoice as fast as the
issue raised was hoping for.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
8dcc6526cfb154d688497f31cf1e0904801c6df2,"Update LexerATNSimulator.cs with virutal Consume

Allow user to subclass and consume differently. Useful for CR handling as suggested in https://github.com/antlr/antlr4/pull/2519

Signed-off-by: Alberto Simões <Alberto.Simoes@checkmarx.com>"
2baa1eef9d186f781b6e4b9388a8805bb0dd471f,"[Typescript] Add missing methods typing declaration (#4145)

* Add missing methods typing

Signed-off-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>

* Fix PR comments

Signed-off-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>

---------

Signed-off-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>
Co-authored-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>"
1bc7a45f59fb46ed5f5aa082bcb368e4272a9560,"do not modify String.prototype in js package (#4200)

* do not modify String.prototype in js package

Signed-off-by: Jon Harris <harris.jb@gmail.com>

* remove notice file that is no longer relevant

Signed-off-by: Jon Harris <harris.jb@gmail.com>

---------

Signed-off-by: Jon Harris <harris.jb@gmail.com>"
499786239ecccdf2ae97874e297136a028d78e38,"Issue #4185: Too many artifacts fail to upload (#4186)

Github action for upload was upgraded to v3 recently and the release is
unstable causing too many uploads to fail. Downgrading back to previous
version hasn't made significant improvement either.

Since the artifacts aren't exactly used by any chained job, failures for
uploading the artifact can be ignored. The artifacts are used mostly for
the purpose for debugging and so if needed the user can trigger specific
build again to get the artifact.

Signed-off-by: HS <hs@apotell.com>"
c96c9ccea0be86f5dbc473052893674759dcc881,"feat: Stop using pointers for INterval class

Signed-off-by: Jim.Idle <jimi@idle.ws>"
63c946b7be716f7df7f5ad9d76629af89d334b9f,"feat: Refactor PredictionContexts so that it does not use an interface

Interfaces require two pointer lookups for functions and when used as
Generic, they require three. This change therefore yields a small
performance upgrade.

This change also corrects one or two copmarisons that were using pointer
comparison instead of Equals() and were bugs in the code I inherited.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
cfe238d20894272c9f626a87032de1394d63a459,"feat: Remove ocde and structs that are now replaced

Signed-off-by: Jim.Idle <jimi@idle.ws>"
15670af7ab5d05dddca570b1b2ef8c82efb9e3ed,"feat: Incorporate predefined variables for empty cache into the one place

Signed-off-by: Jim.Idle <jimi@idle.ws>"
7141cf4acb25f5909b5916fdb196689df9691631,"fix: Tiny correct to parent check for singleton context

Signed-off-by: Jim.Idle <jimi@idle.ws>"
d8f00073b247cf0341720496cc7102812f762000,"Tweak release doc

Signed-off-by: Jim.Idle <jimi@idle.ws>"
681d46af883e80e55654b9ef2c72134319a30b8d,"Update release docs (#4136)

Signed-off-by: Jim.Idle <jimi@idle.ws>"
89de6114dd08b165941f65544bd46164a5cf6630,"Provide JavaScript port of TokenStreamRewriter (#3560)

undefined

Signed-off-by: Jim.Idle <jimi@idle.ws>"
bc5a76f47221476ecc97253381b30d22c5b58918,"export token channel (#4143)

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
60b4e27de9eccfd06f51718eb85411351273808a,"added null | string union type (#4147)

Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
29de023723f0f82ccbcd2d9b44f8d9146133525c,"Limit use of Posix threads to Unix (#4140)

Posix threads are available only on Unix (and unix like) platforms.
Wrap the dependency accordingly so builds don't fail on other platforms.

Signed-off-by: HS <hs@apotell.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
c455b7f3b193893ac0a045948a34f970f562e518,"fix: Some code that should have been destined for /v4 was instead put in to the root (pre v4) files (#4154)

- Incorporate an interative tree walker
 - Expose Reset() and String() in lexer/token and add test

Signed-off-by: Jim.Idle <jimi@idle.ws>"
e25d4992863394b5ea9fd4ef757b14c1e1270a4d,"Remove redundant source code from go runtime (#4155)

* feat: Remove the old version of the source code, as at v4.x.y the source must be under /v4 for modules

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: tidy up old version of go.mod (non v4 version), which is now deprecated

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>"
8ac9c4bc79196ecf82d5787506fc2410fcb127bf,"README: Update required Java version (#4129)

The badge in the README suggests that ANTLR requires Java 7 or higher,
whereas since ANTLR v4.10 Java 11 or higher is required.

Signed-off-by: Robert Adam <dev@robert-adam.de>
(cherry picked from commit 8188dc5388dfe9246deb9b6ae507c3693fd55c3f)
Signed-off-by: Jim.Idle <jimi@idle.ws>"
60a8a6d85cbb3a3be2fba108c4aaf08f1b5c9b0c,"cmake: Fix output dir for Visual Studio generator and for when ANTLR_BUILD_CPP_TESTS is not set (#4121)

Signed-off-by: Leonardo Sarmiento <leonardo@moduleworks.com>
Co-authored-by: Leonardo Sarmiento <leonardo@moduleworks.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
2f4f85b8f48ffba7d7b8d289b5633cf4bd624f65,"Cpp: Remove code duplication (#3995)

* Cpp: Remove code duplication

The same function was defined inside multiple different source files (in
an anonymous namespace).
Not only is this generally bad practice from a maintenance point of
view, but it also break unity builds (which can speed up compilation
times A LOT).

The fix simply consists in introducing a new Utils file that contains
the single implementation and every source file that uses this function
simply has to be linked against that new file (and include the
corresponding header).

Signed-off-by: Robert Adam <dev@robert-adam.de>

* CI: Enable unity builds for cpp targets

This should reduce the build time for those steps significantly

Note: Unity builds are enabled only for cmake-based CI builds

Signed-off-by: Robert Adam <dev@robert-adam.de>

* CI: Perform unity and non-unity cpp builds

Signed-off-by: Robert Adam <dev@robert-adam.de>

---------

Signed-off-by: Robert Adam <dev@robert-adam.de>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
21b27dfa446b10be003c520ee46ad8ceb3f7d031,"Changed Parser typings (#4149)

Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
d77766b60696e06d78596b1a566888de0ca6221c,"fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file (#4163)

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>"
4ab43ac7b906813d057676379ca52605b85686cd,"present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>"
b0713e2f78bece6861accabc59d45a2640e469db,"fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>"
223c8aee7894d99f813879b63def5b92213d4cb7,"Feature/gotestfix (#4168)

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Cater for the fact that some test rules use start as a label or rule name

As a fix for other cvode gen errors when start, end, or exception are used as
label names, they are now translated to have a suffix of `_` at code gen time.
However, the runtime tests sometimes use start as a rule name and so we must now
cater for this in the tests.

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
c46604596c5c787dbbfe4d2fa2b4641237b87f78,"Feature/docclean Greatly improve the godoc comments in the runtime (#4169)

* doc: Updates to some of the Go doc comments to start a ful ldocumentation cleanup

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More documentation fixes.

Using this as a method of forcing myself to read every line of code in the runtime, and therefore
discover mistakes in the original implementation. And, of course, actually working docs for the
Go runtime, can only be a good thing.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More documentation fixes

Also changes the exporet level of a some variables and funcs that were not correct,
even though no user has currently needed them it would seem.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Many updates to document exported fuctions correctly and reformat the ingerited Java code

It looks like a massive amount of changes, but it is almost all doc or changing exports or renaming
unused paramters etc to make the Go linter happy.

No actual code changes yet.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More additions and corrections to the Go documentation for the runtime

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Final clean of exported func and type documentation

There will be more to do here as there are a lot of things that are hidden internal to the antlr
package that probably should not be. There are also a lot of exported funcs and types without
any documentation, that will eventually need to be cleaned up.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Changed Parser typings (#4149)

Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file (#4163)

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Feature/gotestfix (#4168)

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Cater for the fact that some test rules use start as a label or rule name

As a fix for other cvode gen errors when start, end, or exception are used as
label names, they are now translated to have a suffix of `_` at code gen time.
However, the runtime tests sometimes use start as a rule name and so we must now
cater for this in the tests.

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <frank.josua@gmail.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
ccd0ed48a1687f8187894d82eca76b1d80d37ef5,"Feature/fixembedding (#4176)

* feat: Createa n Init routine for BaseATNConfig so we can embed sructs rather than allocate to pointers

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Change BaseATNConfig to be properly embedded in other structs such as LexerATNConfig instead of by pointer

This is the first of many changes that switches the embedded class structure that was copying
Java class hieracrchy from allocations/new to proper embedding such that any struct is
allocated with one allocation not two or more. Main PR will cover what this means.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Change embedding for ATNBaseSimulator to true embedding instaed of pointer

Saves an extra allocation and helps the GC

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Switch the use of pointers to embedded ATN states to true embeddding

Saves many allocations and grbage collections

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Correct the way that PredictionContext is compared for merge

Should reduce allocation count by tons.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Feature/docclean Greatly improve the godoc comments in the runtime (#4169)

* doc: Updates to some of the Go doc comments to start a ful ldocumentation cleanup

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More documentation fixes.

Using this as a method of forcing myself to read every line of code in the runtime, and therefore
discover mistakes in the original implementation. And, of course, actually working docs for the
Go runtime, can only be a good thing.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More documentation fixes

Also changes the exporet level of a some variables and funcs that were not correct,
even though no user has currently needed them it would seem.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Many updates to document exported fuctions correctly and reformat the ingerited Java code

It looks like a massive amount of changes, but it is almost all doc or changing exports or renaming
unused paramters etc to make the Go linter happy.

No actual code changes yet.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: More additions and corrections to the Go documentation for the runtime

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Final clean of exported func and type documentation

There will be more to do here as there are a lot of things that are hidden internal to the antlr
package that probably should not be. There are also a lot of exported funcs and types without
any documentation, that will eventually need to be cleaned up.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Changed Parser typings (#4149)

Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file (#4163)

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* Feature/gotestfix (#4168)

* fix: Fixes the failing go runtime test suite which was missing the /v4 off the replace option on the go.mod file

Arrrgh!

Signed-off-by: Jim.Idle <jimi@idle.ws>

* present antlr before versioning (#4156)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Prevent use of labels such as start= from generating code that clashes with builtin funcs (#4161)

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Cater for the fact that some test rules use start as a label or rule name

As a fix for other cvode gen errors when start, end, or exception are used as
label names, they are now translated to have a suffix of `_` at code gen time.
However, the runtime tests sometimes use start as a rule name and so we must now
cater for this in the tests.

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <frank.josua@gmail.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>

* feat: Change BaseATNConfig to be properly embedded in other structs such as LexerATNConfig instead of by pointer

This is the first of many changes that switches the embedded class structure that was copying
Java class hieracrchy from allocations/new to proper embedding such that any struct is
allocated with one allocation not two or more. Main PR will cover what this means.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Change embedding for ATNBaseSimulator to true embedding instaed of pointer

Saves an extra allocation and helps the GC

Signed-off-by: Jim.Idle <jimi@idle.ws>

* fix: Correct the way that PredictionContext is compared for merge

Should reduce allocation count by tons.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* doc: Merge documentation updates

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Rework predictions tructs to use emedding instead of pointers

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: more reworking of PredictionContext for embedding

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Ensure that EmptyPredictionContext is correctly initialized

Rework of the variaous PredictionContexts has reduced memory allocations to between
30% and 50% of previous version.

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Change from use of type casting to using stored type

Signed-off-by: Jim.Idle <jimi@idle.ws>

* feat: Convert CommonToken to true emedding rather than pointers

Signed-off-by: Jim.Idle <jimi@idle.ws>

---------

Signed-off-by: Jim.Idle <jimi@idle.ws>
Signed-off-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: Josua Frank <frank.josua@gmail.com>
Co-authored-by: Josua Frank <josua.frank@daimlertruck.com>
Co-authored-by: ericvergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
7fb762e400ce95dda104845318cd25cb338dc112,"fix incorrect prototype (#4184)

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
2ad9ef966b9a611e7f1caa8e67273180714c1c41,"fix: Fixes merge arrays to perform an actual comparison rather than comparing two pointers!
Fixes: #3967
Closes #3967

 - A small error was made whereby the comparison with a newly created merge `M` of two prediction contexts
  `a` and `b`, was comparing the pointers of `a` and `M` and not using the internal Equals() method.
  The ATN output trace is now equal.

 - Also adds a new testrig internal project (so it won't be used by `go get`) that allows quick setup
   and testing of ATN tracing for a test grammar and test input.

 - Excludes go performance profiles from git

 - Corrects a small error in one of the ATN tracing scripts.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
f91b21e02fdb812edaf6d3872e9fea9867cda4cc,"doc: Update TODO comment in prediction_context now that #3967 is fixed

Signed-off-by: Jim.Idle <jimi@idle.ws>"
4a364b2561c1aada79b142b661b8da23426da053,"fix: Unbeliveably, the PredictionContext cache did not work!

 - I missed this on my first evaluation of all the collections used
   by the code I inherited. The PredictionCache was implemented as a
   map using PredictionContext pointers as the key. This meant that
   there would never be a cache hit and the cache woudl just accumulate massive
   numbers of PredictionContext 'objects'!

Bloody hell. Sometimes it is difficult to spot such glaring errors. This change
vastly reduces memory usage. The next commit will fix the visited context look up
which also suffers from the same problem.

Fixes: #3934
It probably also fixes a ton of performance and memory usage problems, which
I have yet to test.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
58121d50f807376daa0016edc7d14e0abb1731aa,"feat: Fix up the parsing cache

 - Note, I think that this still needs work, but it is a lot better memory wise.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
28ef5b26d3358bef61590645bda81c02e355f2c4,"fix: Massive performance improvement by fixing comparison functions

Some of the legacy code that tried to implement comparisons and hashing like Java was
just plain wrong. That stuff is buried deep in there and took a massive effort to
work out what was going wrong.

In the end, while the hash codes were OK for DFAState, the comparisons inherited from
the old code were just plain wrong for certain objects. With those corrected, there
is a massive improvement in performance all around.

I will push a PR for this stuff now, but I already see some massive potential gains
by getting rid of interfaces where we don't need them stopping the use of pointers everywhere
indiscrimiately.

Next task is going to be pure performance improvements until the Go runtime takes
its rightful place as the fastest implementation ;)

Signed-off-by: Jim.Idle <jimi@idle.ws>"
d0e8f2b77d379b8953939681122ba0ed6d528417,"fix: delete commented out code

Signed-off-by: Jim.Idle <jimi@idle.ws>"
c98ffad0c31da6e53c5e3d48c5576df9b3a3cecb,"test: Tewmporarilly disable one of the tests programs for the go runtime

 - I will of course fix this in a follow up PR, but the test DropLoopEntryBranchInLRRule_4
   currently hangs. It is also disabled for many other runtimes, so I think it is fine to get
   this PR in and then follow up with a fix for this test.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
bf37980e976de65b410a584afd19823c85a59078,"feat: Improve the runtime performance of the go test suite

 - Removes the need to perform a `go mod tidy` for every test. This change
   causes `go mod tidy` to be run once, after which it caches the go.mod and
   go.sum files for use by the remaining tests.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
a597aecb1f9bd2ff04af37c0108fa18306478983,"fix: Minor updates to address Ivan's PR review

Signed-off-by: Jim.Idle <jimi@idle.ws>"
76972cb940f655c32255d29a999302c7ffc9bdcd,"fix: reverse accidental IntelliJ formatting

Signed-off-by: Jim.Idle <jimi@idle.ws>"
c4a4442412aa89936e808ff327f53d06c0bc3c6a,"fix: Change codegen and runtime to eliminate panic() and recover() as flowcontrol - 50% performance improvement

  - Prior to this change, a recognition error was tracked by performing a panic(),
    which the generated code for rules would then use recover() to discover. However,
    recover() is not like catch(){} in Java and is expensive to run even if there is
    no panic() to find on the execution stack. Eliminating this and doing a simple check
    at the end of rule execution brings with it a massive performance improvement up to
    50% of CPU execution time. Now that collections and context caching is working correctly
    this is a significant improvement in execution time.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
c6bbbd3db8c2b08775f245c952ce0fe00fddafac,"feat: Another 50%+ performance improvement

Prior to this change, the runtime and generated code was using panic() and recover()
to perform error checking and reporting. This is extremely expensive and just not the
way to do it.

This change now uses goto, and explicit checking for error state after selected calls
into the runtime. This has greatly improved parser performance. Using the test code
provided by a recent performance issue report, the parse is now twoice as fast as the
issue raised was hoping for.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
76bb3e14b6f6a10c449d5b9de5add7a0042a4b66,"[Typescript] Add missing methods typing declaration (#4145)

* Add missing methods typing

Signed-off-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>

* Fix PR comments

Signed-off-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>

---------

Signed-off-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>
Co-authored-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
91e2909e02949bbb712840a2b12d9309bdfc7615,"do not modify String.prototype in js package (#4200)

* do not modify String.prototype in js package

Signed-off-by: Jon Harris <harris.jb@gmail.com>

* remove notice file that is no longer relevant

Signed-off-by: Jon Harris <harris.jb@gmail.com>

---------

Signed-off-by: Jon Harris <harris.jb@gmail.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
f1b8982ddfffab22a1bb42cb808c1b465d00ac0e,"Issue #4185: Too many artifacts fail to upload (#4186)

Github action for upload was upgraded to v3 recently and the release is
unstable causing too many uploads to fail. Downgrading back to previous
version hasn't made significant improvement either.

Since the artifacts aren't exactly used by any chained job, failures for
uploading the artifact can be ignored. The artifacts are used mostly for
the purpose for debugging and so if needed the user can trigger specific
build again to get the artifact.

Signed-off-by: HS <hs@apotell.com>
Signed-off-by: Jim.Idle <jimi@idle.ws>"
3a6224811aa410912540bb80ed6ddbebe5e78d34,"feat: Stop using pointers for INterval class

Signed-off-by: Jim.Idle <jimi@idle.ws>"
fc381277c06c035543dc17c91b0733dbbab4190c,"feat: Refactor PredictionContexts so that it does not use an interface

Interfaces require two pointer lookups for functions and when used as
Generic, they require three. This change therefore yields a small
performance upgrade.

This change also corrects one or two copmarisons that were using pointer
comparison instead of Equals() and were bugs in the code I inherited.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
bb5d674f4194e519363f078a5a2cd88afae41a47,"feat: Remove ocde and structs that are now replaced

Signed-off-by: Jim.Idle <jimi@idle.ws>"
4196a078fb5dd48d86295570bcded91d028c8fae,"feat: Incorporate predefined variables for empty cache into the one place

Signed-off-by: Jim.Idle <jimi@idle.ws>"
7e60bb97d3ad2f98b694b3c8b857b3cebcf5f124,"fix: Tiny correct to parent check for singleton context

Signed-off-by: Jim.Idle <jimi@idle.ws>"
2f396b37606134821c5ff3fed5d4cad19a3bd262,"fix: Correct config cache comparators improvie performance

Signed-off-by: Jim.Idle <jimi@idle.ws>"
84c22a8b2d91c41119220ad1558c95ba809c26db,"fix: Correct comparison functions for PredictionContexts not they are a single type and therefore a pointer

Signed-off-by: Jim.Idle <jimi@idle.ws>"
7a2c3c3c834dda5bbe23ddf3b924fe23c578db2a,"fix: Properly fix the context caching so that it exactly relfects Java

Signed-off-by: Jim.Idle <jimi@idle.ws>"
62d8439870447f067d9cf1a394801ae8d7abd1a1,"feat: Stop using interfaces for ATNConfigSets

Too much emulation of the Java runtime structure means that many structs
are being called via interfaces, which introduces and extra look up. When
you add that lookup to call via a pointer and then even an extra lookup for
generics, then it becomes significant. This seems like a big commit but
it is all just changing the one type declaration.

This now allows us to get rid of the stupid getters and setters that just
clutter the code and are not idiomatic of Go anyway.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
4476b9bd6849f589c1d4f3bdd13fd663a00e0fc0,"fix: Remove useless Getters and Setters

Go does not use Getters and Setters unless there is some very good reason such
as copy on read or write. They can stop the compiler from inlining things so they
are now gone from ANTConfigSet, whihc is no longer an interface.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
18b5bbfe6d8c06b960caa792e1d5c11bc525bb6c,"fix: Get rid of interface for ATNConfig

Like other struct implementations, this was hidden by an
interface that did not need to be there. the only difference between
a lexer and parser config is the Hash/Equals and extra methods that only
the lexer calls.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
2e93c77bdf4eb8d41b0be73e49ee59fbf061a693,Merge branch 'dev' into feature/performance
3b923faa72cc2b2629e65e691e76ca1210e258a7,"fix: As suspected, merging on GitHub went slightly wrong.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
86bc5cb585a80c65f9a00d939357837dfd9df758,"fix: remove new memory handler from this brnach

Signed-off-by: Jim.Idle <jimi@idle.ws>"
ce241de812fbf3dd118987ed851f187e30fa3d3d,Merge branch 'jimidle-feature/performance' into dev
421ab7ef876f9dca4969607d2f6f7a796d301247,"feat: Clean out redundant code and stupid code, implement lazy init of DFA collections

Signed-off-by: Jim.Idle <jimi@idle.ws>"
bec4ec6bb2eff8708556dfe2f5d1cbcee28bf13e,"feat: Adds memory optimizations and compile time optional statistics

Also corrects the formatting of some of the files as this can create false
compares in git.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
cce6eb80c2d4f21515ca8a240a8664d622813e71,"feat: back out of lazy initilization for config sets - it needs another look

Signed-off-by: Jim.Idle <jimi@idle.ws>"
d2db753af3a501dd30404853c694667be996f75a,"feat: Used dedicated map for visit cache - improves memory and speed in some cases

Signed-off-by: Jim.Idle <jimi@idle.ws>"
dc0ae0e189b738312ef77dbef7fec8a48afd4b88,"fix: ensure Statistics.Reset() zeros out top collections by usage on each run

Signed-off-by: Jim.Idle <jimi@idle.ws>"
449ee33a06455b004a37c57a49be2cf273dd5af7,"feat: Remove pointer embedding of parser rule context

Another small gain, but for one good parser this goes from 90ms to 64ms (for 16 large files)
so it won't make a lot of difference for poor parser, but good ones will see a nice kick here

Signed-off-by: Jim.Idle <jimi@idle.ws>"
dd31a0430a9c97826dd7a8eb35200258b7464209,"feat: Corrects the test template when looking at parse tree correctness

  o Uses reflection to check that the tree structure is all correct
  o Disables test that uses superClass as this basically doesn't work/isn't a concept in Go.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
da1c39a260976c14807830e92bf329ab6b448e26,"Remove redundant __name__ check in multiple files

Signed-off-by: Ahmad Tameem <ahmad.tameem97@gmail.com>"
4b5a7e372f6718713b93eed5d69e6382d4cce677,"Added support for commonjs

Signed-off-by: Adrian Jutrowski <adrian.jutrowski@gmail.com>"
a9e697813c2dc1f182aea9d9c00691d05ab6f5fe,"Added tests for commonjs and esm imports, made webpack config more compacted

Signed-off-by: Adrian Jutrowski <adrian.jutrowski@gmail.com>"
d34aa41704a5e2219c45ed29571fdf07927d41e0,"Fixed typo in webpack config, shortened commonjs test, to use solely require

Signed-off-by: Adrian Jutrowski <adrian.jutrowski@gmail.com>"
c9cf8912d28a87c4f59a36b894f6e54690151054,"feat: Spruce up the internal testrig for Go runtime maintainers

Signed-off-by: Jim.Idle <jimi@idle.ws>"
f17f3b1f78b7267096cbe981803cf8434609bc8b,"fix: Modify gitignore to exclude stuff in Go tesetrig that shoudl not be in the repo

Signed-off-by: Jim.Idle <jimi@idle.ws>"
237d4efed31b4b1b9c49d9f96c000f94c75ac5c2,"fix: Ensure that all versions of the antlr tool jar are ignored

Signed-off-by: Jim.Idle <jimi@idle.ws>"
a10669a4969604ec9ff9f5f5f45aef4463292cf4,"feat: Remove internal test rig from the go runtime source

  - I will store this in my own repo and direct any future maintainers to there
    this will avoid any confusion.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
6e89287582c0c86407688aabbffda9f63bc7dc41,"feat: revert .gitignore to pre go internal directory

Signed-off-by: Jim.Idle <jimi@idle.ws>"
5995022c4c749c564e847a049c85a626aff3184e,"Add support to Golang codegen for booleans

Signed-off-by: Michael de Hoog <michael.dehoog@coinbase.com>"
9cf07c18ce20ce9e70aaf84f4cafd3a4110f8374,"feat: Clean up input streams and add an IO stream

  - FileStream reader was reading in to bytes, then converting to string, then converting to runes
  - Created a stream that can initialize directly from an io.Reader, which is more idiomatic go
  - Cleaned up InputStream creation

Signed-off-by: Jim.Idle <jimi@idle.ws>"
518121fa2f054e23c8c446ef47ed768e8429d9f8,"fix: Ensure that file input stream is size in runes

Signed-off-by: Jim.Idle <jimi@idle.ws>"
3aff09a030f63d23adaaf4bfeb2b01f1cc369c0f,"feat: Adds actual usable @ actions to the go templates

Signed-off-by: Jim.Idle <jimi@idle.ws>"
2406774ad4898930ce25347f96ec58ade005b7a6,"fix: Allow CommonTokenStream to reset properly

  - There is a flag in CommonTokenStream that indicates whether EOF has
    already been fetched/seen. This was not being reset when a new TokenSource
    was given to an existing CommonTokenStream and there was no Reset() function
    which was unfortunately not exported and not part of the interface for TokenStream.
  - Reset the flag when a new source is provided
  - Export the Reset() function so that a TokenStream can be rewound

Signed-off-by: Jim.Idle <jimi@idle.ws>"
57ba1e43df66b2e44459ea84598ef8d735542af6,"feat: Make static data available outside the generated parser code

  - Allows Go code to access things like RuleNames outside the generated code
    instead of non-idiomatic and non-existent Getxxx() funcs

Signed-off-by: Jim.Idle <jimi@idle.ws>"
8943efa6118b72c8f31eb85e3889cd1df3180e2d,"feat: Make closureCheckingStopState iterative rather than recursive

Signed-off-by: Jim.Idle <jimi@idle.ws>"
59ae02957c6a57941be0629a4e9276c0c44b959e,"modify cpp codegen template to generate lock-free cpp lexer&parser

Signed-off-by: wangtao9 <wangtaofighting@163.com>"
e0b448ec7cb9d3fa90c4e3458ccd208f314d76ae,"add lockFreeCppTarget option to generate lock-free Cpp lexer
 and/or parser (default OFF)

Signed-off-by: wangtao9 <wangtaofighting@163.com>"
c7bc152fdacabec2d8871675ef2ec5686effd536,"fix boolean option -lock-free-cpp-target

Signed-off-by: wangtao9 <wangtaofighting@163.com>"
b7666046cd57a9e1e6efffa6e5600ee79a0cdcdb,"remove string option lockFreeCppTarget of grammar

Signed-off-by: wangtao9 <wangtaofighting@163.com>"
afe52126d706bdefae694d05bbcd2776f1bca0f6,"use compile-time macro instead of generate-time option

Signed-off-by: wangtao9 <wangtaofighting@163.com>"
8b53ac1f65135a0451d2cf74f9f52c658f75761e,"remove useless codegen option

Signed-off-by: wangtao9 <wangtaofighting@163.com>"
5f27febfa76216c8b5cb0b040adfe0e26f8fc897,"update doc cpp-target.md

Signed-off-by: wangtao9 <wangtaofighting@163.com>"
76a63cd37bf019c947e1303907f80f09c07f644f,"minor fix doc

Signed-off-by: wangtao9 <wangtaofighting@163.com>"
4d19010f6aa87645f4407231086dc498a6701c10,"fix review comments

Signed-off-by: wangtao9 <wangtaofighting@163.com>"
aed321c16821adc525020e6ad3cc4c86e151a820,"update doc/cpp-target.md

Co-authored-by: Ivan Kochurkin <kvanttt@gmail.com>
Signed-off-by: Tao Wang <wangtaofighting@163.com>"
bd09a4680a9cd153707807c4e14e77d978a195f6,"Exporting syntaxErrorsCount

Signed-off-by: Rodrigo Antonio Godinho da Silva <rodrigo.antonio@totvs.com.br>"
2c07aa87b2dd5fb1fe9dd44782ce9e5a0496dc3b,"Update base image to add multi-arch support

Signed-off-by: Prashant-Jagtap <Prashant.Jagtap@ibm.com>"
5d1fd1a340c97a01caec6386437ce5e92a26b7a7,"Update releasing-antlr.md

Signed-off-by: Terence Parr <parrt@antlr.org>"
aa40c19dbd1ae96042bed11e26b1a9537a5854d1,"fix warnings

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
cae2b22550b4c677a6c087898a076beb46c7b9b9,Fix type hint
4ad724f9f3bfec14550b388236b3f4898ee99c38,"Get rid of static class generation for properties

Now it doesn't cause ""Code too big"" compiler error

Use raw int arrays instead of intervals in UnicodeData.java

It significantly decreases the size of the output jar artifact

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
8fe211b0a1354376be600409aa83e05d05e7e4c4,"Get rid of static class generation for property aliases

Now it doesn't cause ""Code too big"" compiler error

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
4ee259e44138b1bf9874adcf6a9edbd26e314178,"Fix indents in unicodedata.st

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
e65f0abf26ed1b043998d26dc182916a2fa78fcd,"Update icu dependency (71.1 -> 72.1)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
188bfd4fcbfe68fa73006bf5f4c756bd3c791812,"Move the metadata from `setup.py` into `setup.cfg`

Signed-off-by: KOLANICH <KOLANICH@users.noreply.github.com>"
da4968a8b8087562a733be05c5206e12af096624,"Add `pyproject.toml` according to `PEP 517` & `PEP 518`

Signed-off-by: KOLANICH <KOLANICH@users.noreply.github.com>"
f6040f072517c8b5c74cb9a0fbb6bdae40ebb914,"Remove `setup.py`. Building should be done using `python3 -m build`

Signed-off-by: KOLANICH <KOLANICH@users.noreply.github.com>"
d06a6d5979f802b6f7f59f8b414f68dea6c83835,"Move the metadata into `PEP 621`-compliant `pyproject.toml`.

Signed-off-by: KOLANICH <KOLANICH@users.noreply.github.com>"
c9952afa5e4213d1594b30f16ee8760dfa399f08,"Started collecting submodules automatically

Signed-off-by: KOLANICH <KOLANICH@users.noreply.github.com>"
a69935a08678c4db18c9b98640ad524bcf827a1e,"doc: Update the readme at the root of the Go Runtime

  - Prevent people from trying to use the module in the non-v4 directory
  - Redirect people to github.com/antlr4-go/antlr

Signed-off-by: Jim.Idle <jimi@idle.ws>"
4af8a2b55852b928bb18369aae427fbd1046c3df,"doc: Update the main package docs for the upcoming release

  - Point to the new release only Go repo
  - Modify and clarify project layout suggestions

Signed-off-by: Jim.Idle <jimi@idle.ws>"
a553fb718bc3a94babe0a7d232d0688f6aef46a0,"docs: Small tweak to represent generated code location in a neater fashion

Signed-off-by: Jim.Idle <jimi@idle.ws>"
4bf93cc3d0d512faa81342640032bde60a0dbb75,"doc: Bump version of the ANTLR tool specified in the docs

Signed-off-by: Jim.Idle <jimi@idle.ws>"
8a2a1b80c6b72dffab32833bb870ea8789fd5435,"docs: Write release notes and new instrcutions for using the Go target.

Signed-off-by: Jim.Idle <jimi@idle.ws>"
f8535b366bdea1aaebf77acac713c43cf76a116d,"doc: Correct the name of the new ANTLR go repo

Signed-off-by: Jim.Idle <jimi@idle.ws>"
d35ffa716c89ba001c2fbc007781206eb5d683d6,"feat: Switch code generation over to the new antlr4-go/antlr repo, update main README.md

Signed-off-by: Jim.Idle <jimi@idle.ws>"
7d393013ba21718dbc480caec13dd40bbdba8c79,"feat: Move to new Go repo

Signed-off-by: Jim.Idle <jimi@idle.ws>"
bb631058a322f11ab1aaadb6b833cd55544dc394,"fix: Remove go.mod from v1 tree - it wasn't being found anyway

Signed-off-by: Jim.Idle <jimi@idle.ws>"
29cf908cbba396db4616cce48bb554952cbd67ee,"feat: Use the latest version of x/exp

Signed-off-by: Jim.Idle <jimi@idle.ws>"
6e03105934cceea1e5a27729a0a78f28b970a72b,"doc: Make sure that we are using the latest LICENSE file inthe go module

Signed-off-by: Jim.Idle <jimi@idle.ws>"
134eda9f1a815bc2b9b863773a17fe08951cae86,"bump version to 4.13.0-SNAPSHOT in poms, regen XPath lexers.

Signed-off-by: Terence Parr <parrt@antlr.org>"
a9639d06de6e3272d2dc228a35fa316cc7e7396f,Merge branch 'dev'
c630cb6bce7af9c71f4d10320da9fa8392ec1855,Update version in many files to 4.13.0
ffe0eef3922eb2a9a7b23b786fde3a7f585e74d5,Merge branch 'master' of github.com:antlr/antlr4
5dc2a2956f433021126aa2095923df1915cf8d7d,Update version in more files to 4.13.0
37585e4e0f7aaefaa246436baa6e2a5167ab385e,Update js package-lock.json
0ae86c2d69b6c438154e263a8b41195ed3c7377f,[maven-release-plugin] prepare release 4.13.0
4770a236f1e0c8050abae09191ec32e7df4d1f7f,[maven-release-plugin] prepare for next development iteration
873a01ca2939e623f396d356f9e903b9afd4ca32,Update py build release doc
628602d5e0cf59061b7e427eb82d61edc96fb77d,"Update dotnet to the latest version (6 -> 7)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
b7b8135ff9f409c19fc24ee962600c56ec3467db,"fix go-target.md, remove duplicate get

Signed-off-by: 朱少飞 <42376488+css521@users.noreply.github.com>"
5d7b514bb6b0111ad937673aa4a627a17b8f9df9,"fix: #4128 - Prevent generating escape sequences when Windows directories start with a u

Signed-off-by: Jim.Idle <jimi@idle.ws>"
7ed901d03785ae917065155f98d9a60f1bab8b4e,"Add test with grammar name that starts with u

fixes #4128

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
e85d3e28b89408baca4fb850959e3a17c78c1867,"Simplify Java testing infrastructure

Move code from template to Java files

Remove returnObject option from RunOptions since it's not needed anymore

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
69bcc2172a327c8d170d99cf74fe30e468fb0af2,"Remove setting buildParseTree=true because it's default value

Clarify doc and runtime test templates

fixes #4195

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
8fbce6668ebcc3410f906d1670a89df48653a2ec,"Remove duplicated lines from Test.dart.stg

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
3f91870c1fdf11b168b176baeb6312f8c6df0fb2,"Introduce PredictionMode testing (SLL and LL)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
f0b9e223ff992113931a8be865dc5e1cbf253728,"Introduce `buildParseTree` testing (true and false)

Signed-off-by: Ivan Kochurkin <kvanttt@gmail.com>"
a004a76aa1fe3935a7243901811b03733f009d91,"Fixed file paths used in `package.json#exports.types`

Signed-off-by: Mateusz Burzyński <mateuszburzynski@gmail.com>"
96f97704a107db99d90ea9503d637104c3bb7afe,"fixed paths to use actually existing files

Signed-off-by: Mateusz Burzyński <mateuszburzynski@gmail.com>"
d2e25842dfa1a7daadfce6fdf2197df5f2b7589e,"Remove stray type annotations from Python2 runtime

Signed-off-by: Alessandro Gatti <a.gatti@frob.it>"
f024ec15c06d657fe850e68e603fed3b46bca200,"Removed Python2 target.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
b6ea82f1d3826bd697875423f1bd69c021ffa052,"Add ""writing target-agnostic grammars"".

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
84a6fa85865674af3b84d922842430a6f3a70e6c,"Remove conflicts that somehow got inserted in the text.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
f7bea2a01675678914d99d74185e168db3242b4f,"Renamed ""index.md"" into ""README.md"" to fit into Github to display the page when pointing to the directory. Naming the document as ""index.md"" is not a standard practice.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
ec008370b84a322823d3ccda491adeb778b6ef66,"Improvement to the text.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
0ea2bdb34e0d7353cd88d778131c99d44b211dab,"Add symbolic linked ""index.md"" files for backward compatibility.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
5e3da1a108e1afb6383d914abd47dcd11792bdcf,"Delete first symbolic linked files.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
c4e676bf09c58f193f633151e13e139489fa7780,"Add in hard linked files index.md (aka README.md).

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
3002f02da7e558666647a67d5faaa9662075dd35,"Rollback renaming of ""index.md"" to ""README.md"". There are websites outside this repo that depend on the existence of index.md. The files are renamed back, including content but for links only.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
b7268ddd08cffd2760320326b75e13c680c40179,"Undo add of index.md.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
d4d4bea54eee30692c8f5f59df8d0c4747a57d33,"Fix indented code blocks to line up with bullet items. Add note to ""Useful Information"" section of Python2. Fix count of number of targets. Enumerate targets nearby the count number so that it may be updated more easily in the future.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
140410084520ff508d121657d82e51ef83674ef3,"Tone down emphasis in readme.md. Fix grammar in python-target.md. Fix grammar, style, spelling in target-agnostic-grammars.md.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
75700f98206a06d46cf150c67a7bbacee98115f8,"Improve discussion of target-agnostic format.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
ad708f9ac443c5c9e2771bfa731014cc04a06ca7,"More wordsmithing.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
29659540f931eea0dbaa0c31ffcb339ff559a576,"Wordsmithing.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
58d5d5587257c752fb8de82e309412a1b5a623a2,"Wordsmithing parse tree traversal section.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
ce7f5e73cd4787c5aebdc05c29d4d898d6f2d123,"Wordsmithing.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
832b202476a199028f50eb5517349090ed627166,"Adds default targets for babel configuration

Co-authored-by: angrykoala <angrykoala@outlook.es>
Signed-off-by: ncordon <nacho.cordon.castillo@gmail.com>"
a27cf84839c4f794e43b83b9b922d9342367fe45,"[SWIFT] Add Antlr4Dynamic product

Signed-off-by: Grzegorz Spryszyński <grzegorz.spryszynski@tomtom.com>"
9bd489a921d6ce7695ff5aadc5aa518ee7ad7a5f,"fix: suppress `this-escape` warning introduced in JDK 21.

Signed-off-by: Yichen Yan <oraluben@outlook.com>"
e0df58f5185cb3c9148eab724a11394050c565ca,"Restore ""Obtained from string"" source name.

This causes a fair number of diffs when importing into Google. If a way of setting the source name for string input streams was provided, then we could have the default be the empty string.

Signed-off-by: Jerry Berg <107155935+googleberg@users.noreply.github.com>"
ff4cfaef1604e96b8514cf05f0fe61033b786380,"Change signatures for ReportAttemptingFullContext() and ReportContextSensitivity() to be identical to all other targets

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
d02ea0b5b1f91fd4f19d63304e9bbbffcbf6438c,"Fix for #4320--export additional types of the Dart runtime.

Signed-off-by: Ken Domino <kenneth.domino@domemtech.com>"
d13d47c6fb27833aa52da53ee4e6086672356751,"Fix typing

Signed-off-by: Eric Vergnaud <eric.vergnaud@wanadoo.fr>"
73b0dba387eeed74a1e4e0c010ec9e9f81ab7710,"fix last Reproducible Builds issue

Signed-off-by: Hervé Boutemy <hboutemy@apache.org>"
940a704120abbb9e13a30ef8d9845846b1e33bb1,"fix: Fix very minor code issues spotted by goreportcard.com

Signed-off-by: Jim.Idle <jimi@idle.ws>"
a5602db605ccc52e0507d5c11ff84eed5a71b5b9,"fix: Trivial format corrections

Signed-off-by: Jim.Idle <jimi@idle.ws>"
dae2d2744001815070fc7a8964514b7208c256ef,"Move GetText(), SetText(), and String() from CommonToken to BaseToken

This change means that BaseToken satisfies the Token interface.

Signed-off-by: Jerry Berg <107155935+googleberg@users.noreply.github.com>"
1a96b1c2e03efd76fcfffc3c8479e037d3cec509,"Cleanup duplicate SwiftTarget code

Signed-off-by: tison <wander4096@gmail.com>"
a658835c1f4d57dc14d27e2f3bc1d5acb8d39c41,Merge dev into master for 4.13.1
e9df4649845e55393306603a4dd42cecc5af6bfc,Update 4.13.0 strings to 4.13.1
5a7b4d40dd4c8419b22973de839b7589d95d5e13,"Merge branch 'dev' into fix-dependabot-warnings

Signed-off-by: ericvergnaud <eric.vergnaud@wanadoo.fr>"
734bd758d1811b945de044e73725689e0e7fe6e3,Merge branch 'ericvergnaud-fix-dependabot-warnings' into dev
8a008b518720870d6c39463d3335ebd91795e218,Merge branch 'dev'
80773cf0493953917f897f748adc4be116e4e4da,Update more 4.13.0 strings to 4.13.1
b0dd6daefcb4ed3ed9fbfc7e8ea0d40b2b9ea374,Update javascript with npm
ca6301c23dbd09639ceb972d55d6e7048beaab23,Tweak javascript release doc
7ed420ff2c78d62883875c442d75f32e73bc86c8,[maven-release-plugin] prepare release 4.13.1
1855d9aa4c5ebb15284b95a07048b6260304629c,[maven-release-plugin] prepare for next development iteration
475d790c518e08da44335869c2688663033d4c33,"[JavaScript] Document Node.JS v16 requirement (#4355)

* docs(js): document Node >= 16 requirement

Document that the ANTLR 4 JavaScript target requires
Node >= 16.

This has been the case since ANTLR 4.12.0

Fixes: 2c75e642796718273fd215b03a310d4958319bad

Signed-off-by: Alois Klink <alois@aloisklink.com>

* docs(js): add badges to README

Add some open-source badges to the README.md,
taken from https://shields.io/.

The most important one shows which versions of Node.JS
are supported by the latest version of `antlr4`.

Signed-off-by: Alois Klink <alois@aloisklink.com>

---------

Signed-off-by: Alois Klink <alois@aloisklink.com>"
200e10c469ea37fa1696b75f00dd6ffecfce8930,"Export DefaultErrorStrategy (#4278)

Signed-off-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>
Co-authored-by: hdpnguyen <hieu.dac.phuong.nguyen@mgm-tp.com>"
65dfe0d23e1ff9fe61bf4731250b0633c4105085,Merge branch 'master' into dev
98d6fabfbcf5ca0803b9c9a231dc8b75d00e2957,"Add ""override"" before EOF in TS

Signed-off-by: GP4cK <gautier.bayzelon@gmail.com>"
9043b8ad462caeebc9b8f6b2df3536dfb8efaf0f,"fix: package.json entrypoints

Signed-off-by: Alex Miller <codex.nz@gmail.com>"
0eb38a02d7aa67147bdba23287501d4e5540dfc1,"Update python-target.md (#4417)

Signed-off-by: eleveyuan <85916131+eleveyuan@users.noreply.github.com>"
487cb28bd359587e67794b25b144b7df83ddf1a2,"fix: TypeScript: incorrect type in CommonTokenStream

Signed-off-by: Johannes Heesterman <johannes@elfsquad.io>"
2e718ebd3f968a675dfbc36bb4a126e13186eddf,"fix: tweak word antrl to antlr (#4459)

Signed-off-by: h3n4l <oysterdays@gmail.com>"
d25d421780286e3de0714831a5f82eca59234249,"docs: fix wrong way to import in go

Signed-off-by: KevinZonda <33132228+KevinZonda@users.noreply.github.com>"
28eb03612f6fff900d240e51b90c251e4357d4e3,Implement consistent file extensions for Typescript imports (#4492)
ebb511a04a60ae5a605aba65471c07dd854e9303,"Update README.md

Signed-off-by: ericvergnaud <eric.vergnaud@wanadoo.fr>"
