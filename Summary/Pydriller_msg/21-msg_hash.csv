commit_id,msg
20d9cee957c322cb5382eab53abe95d4ab37521a,"create the trees under the derby svn modules.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@36257 13f79535-47bb-0310-9956-ffa450edef68"
95e7b46943f64284752472e55efb29f9715c3986,"Initial code import

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@37083 13f79535-47bb-0310-9956-ffa450edef68"
c7d0ecf0d4bc9066446b870bdc828ddbb4c8213c,"Added apache license file

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@37135 13f79535-47bb-0310-9956-ffa450edef68"
42261f87b218cdd63d8e8b311d528e5efe326c5b,"Test to set the eol-style to native for BUILDING.txt


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47110 13f79535-47bb-0310-9956-ffa450edef68"
d2a30a0737187e912c1baf7e640ceca94180838f,"Revert change 47110, changes were checked in by mistake.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47111 13f79535-47bb-0310-9956-ffa450edef68"
eac036999fab0e9f9509022d833a1c99cad1b415,"Set eol-style to native for all text files.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47119 13f79535-47bb-0310-9956-ffa450edef68"
fe77ca5f4828833a331cc4890854c08ff51b03f9,"Set svn:eol-style to native on remaining text files.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47170 13f79535-47bb-0310-9956-ffa450edef68"
0a7339d4d276596583e6bb921186627ae5a6795d,"Set Derby's build number to be the output of svnversion.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47314 13f79535-47bb-0310-9956-ffa450edef68"
8a59b6cb1e686b828ca27226e400278f4509a0f0,"Removed unnecessary &'s (these are done automatically by conversion to byte).
Saves 32 bytecode instructions as well as several long constants in the classfile,
and should run a bit faster.

Patch from Jan Hlavat√Ω <hlavac@code.cz>.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47319 13f79535-47bb-0310-9956-ffa450edef68"
92b00e00875f2c710b45c009a0b78a3108c88c19,"Add initial KEYS file for public keys of committers.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47328 13f79535-47bb-0310-9956-ffa450edef68"
d78740a18630ddfb9743cee73677ed8f1a1170c1,"Working engine javadoc target provided by Jan Hlavaty (hlavac@code.cz)

Also, miscellaneous cleanup of javadoc related targets and properties.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47604 13f79535-47bb-0310-9956-ffa450edef68"
d5c9f28c5e353dc79ff116bcddbcf7b930b68dd6,"Remove non-existant 'testManager' module from modules.properties to prevent
unnecessary error message in log upon startup.

Patch by Jonas S Karlsson (jsk@yesco.org) and Jack Klebanoff 
(klebanof@mutagen.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47605 13f79535-47bb-0310-9956-ffa450edef68"
70c561e546f5fb11991085c6142fa546716fb281,"Fix Servlet Messages. Committed for lynhnn@Remulak.Net



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47607 13f79535-47bb-0310-9956-ffa450edef68"
d97ef5532c1d4b77b16c8d378c2e889528094824,"Change Network Server Messages to use Derby instead of Cloudscape


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47610 13f79535-47bb-0310-9956-ffa450edef68"
35cfb617856199e82d2992d5da048f3bed8d0b38,"Add derby war file build



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@47613 13f79535-47bb-0310-9956-ffa450edef68"
8507462dc67fea43649306419bd06edaec62d7d3,"Replace csnet.jar references with derbynet.jar


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@51761 13f79535-47bb-0310-9956-ffa450edef68"
44ccfc1336ecf05effdc771f619ba16a2864abec,"Remove all generated parser files when running cleanparser or clobber targets.

Patch by Jalud Abdulmenan (tendi@rogers.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@51789 13f79535-47bb-0310-9956-ffa450edef68"
92ee7b233f4daae7b061b9dd72eb2583e2235851,"Fix Derby-24, method calls on a closed Connection from a PooledConnection no longer
cause connection closed events to be sent to any listeners.
Minor clean up of BrokeredConnection as well, remove an unused constructor, make the control
field final and remove incorrect comment and unused imports.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53730 13f79535-47bb-0310-9956-ffa450edef68"
bff3c2ee9fcfbd72a6363793bce0dffa310519ed,"Remove unused imports of classes not supported in J2ME/CDC/Foundation & JSR169


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53748 13f79535-47bb-0310-9956-ffa450edef68"
0641e2fe571ab1df326f2cd5bf293609fbfdd879,"Removing an unused variable as reported by the code quality report
at http://infoether.com/~tom/ . Using this first simple checkin to test
my commit access.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53815 13f79535-47bb-0310-9956-ffa450edef68"
482b71033cda0be425ecbae359652ad8a0ac7844,"Fix derby-30, Connection.close() on a closed connection is defined by JDBC javadoc to be a no-op.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53822 13f79535-47bb-0310-9956-ffa450edef68"
99bc32ad6f7b82a741b922f956c2add346f12fab,"Apply Trigger fix from Jack to enable use of functions in triggers

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53829 13f79535-47bb-0310-9956-ffa450edef68"
688dd0bdfdc49a33812b2316e929ead73348ef3f,"committed for tsuresh@Source-Zone.org

problem :  In multi-threaded application when lot of threads are executing 
commits in parallel, empty log files might be created. Recovery log scan
does not expect  empty log files while scanning log records to undo incomplete 
transactions..

Fix:
a)  prevent empty log switches by  rechecking the conditions that triggers the 
    log switches inside synchronized blocks.
b)  Make backward scans skip the empty log files.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53832 13f79535-47bb-0310-9956-ffa450edef68"
276fd5179b4207f3be6a4e9f611f93b2d95e5587,"committing for klebanof@Mutagen.Net

Class org.apache.derby.impl.store.access.sort.ExternalSortFactory has a latent 
bug. Its canSupport method throws an exception if it is called with a null 
startParams argument.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53834 13f79535-47bb-0310-9956-ffa450edef68"
89cd70bb00e2c7cbb8968053e433ef0baded0d5c,"Commit two dblook patches. First patch enables localizations of dblook messages. The second patch from Jalud fixes some minor argument passing issue

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53895 13f79535-47bb-0310-9956-ffa450edef68"
24e1c65bee93b77e02a2cd7019f8921656bd9d03,"Build the EmbeddedDriver under JDK1.3 classpath


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53897 13f79535-47bb-0310-9956-ffa450edef68"
1461ebe991543a909170cd94a11c413bb8437484,"Commit Jalud's dblook argument handling fix

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53903 13f79535-47bb-0310-9956-ffa450edef68"
cfa2a959a704c18d66500a3dd597349f69f847ae,"Derby-34: Allow default to be specified for CHAR FOR BIT DATA columns

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53974 13f79535-47bb-0310-9956-ffa450edef68"
77dcad8d2b5d6de4481bc0d7ad4b49e8951a5976,"Move methods using BigDecimal from EmbedResultSet to EmbedResultSet20
as preparation for EmbedResultSet being the JSR169 version.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@53993 13f79535-47bb-0310-9956-ffa450edef68"
e1e80ad81d82c748de3029b92ba8e3599c3e20ce,"Faster create database by moving DatabaseMetaData SPS creation into the DataDictionary.
MEans creation of these statements is not logged and compilation is delayed until the
matching DatabaseMetaData method is first called.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@54001 13f79535-47bb-0310-9956-ffa450edef68"
f10bebc5967b9973a3b2be2788d8426933bef4c2,"Adding instructions to and updating format of KEYS. Adding keys for the rest of
the current Derby committers, with their permission.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@54011 13f79535-47bb-0310-9956-ffa450edef68"
f8e635809999cdf76b84a02deeaf6c77cb5adc3f,"Add LICENSE to individual jar files. Anticipates a possible NOTICE(S) file being
added as well.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@54012 13f79535-47bb-0310-9956-ffa450edef68"
d1918165729d5a4c257639391ab27b4ede29e87a,"committing patch from  tsuresh@Source-Zone.org

Patch to fix following two issues reported in Derby-32:
1)   Exclusive file lock on dbex.lck  is  getting released before the
database is shutdown, allowing  multiple jvm's to boot the same database
in parallel
2)  Exclusive file lock on dbex.lck  is not released even when database
is shutdown.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@54681 13f79535-47bb-0310-9956-ffa450edef68"
80a2c53569e764b908e33d4631943ff6708be60f,"Fix Derby-38 - LOCKS should not be a reserved keyword
Patch from Mamta Satoor mamta@Remulak.Net


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@54695 13f79535-47bb-0310-9956-ffa450edef68"
a52b2645fbe6bcc5c4e73dbf6bced269067fff39,"Apply [PATCH] Extension Packaging
This patch makes three changes.

   1. The monitor is changed to read multiple module.properties files,
      using method ClassLoader.getSystemResources.
   2. The monitor reads sub-sub-protocol properties from the
      modules.properties files, instead of just the system properties.
   3. Sub-sub-protocol property values can name either a StorageFactory
      or a PersistentService implementation. Previously it could only
      name a StorageFactory implementation.

http://nagoya.apache.org/eyebrowse/ReadMsg?listId=270&msgNo=435
From : Jack Klebanoff <klebanof@Mutagen.Net>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@54750 13f79535-47bb-0310-9956-ffa450edef68"
7de53826222b0135d1477ed946024d33be5c2989,"Change version to 10.0.2.1 so that any forthcoming release will be
distinguished from the original code drop, which was versioned 10.0.2.0.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@54760 13f79535-47bb-0310-9956-ffa450edef68"
def12a1ea3c422b7922e008db2a8eff391524c05,"Add STATUS and CHANGES



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@54885 13f79535-47bb-0310-9956-ffa450edef68"
217667e9210977809342788a43cbdbbbc631961b,"Separate some JDBC 2 code from the JSR169 classes.

1) BrokeredConnections are only used for pooling connections,
   thus should not be referenced by the Driver169 class.

2) Simple fix to stop the BasicDatabase referencing XA classes
through an import of ResourceAdapter.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55075 13f79535-47bb-0310-9956-ffa450edef68"
844190ccc54ce30757e221641539b4fefd9297af,"Derby-40: Allow BIGINT default values in create table

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55161 13f79535-47bb-0310-9956-ffa450edef68"
abd7bc1f54c70ed669317bacb12f2a337c80286f,"Fix Derby 42

1)The encryption key length is used only for error checking and the fix to not store this information is OK and simple. 

Patch from Sunitha Kambhampati skambha@Yngvi.Org


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55231 13f79535-47bb-0310-9956-ffa450edef68"
e23c6afa88aa3c46e9f93d96ef44efb9355ff261,"Remove use of the copyrightNotice field in two classes,
as the copyrightNotice fields will be removed.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55235 13f79535-47bb-0310-9956-ffa450edef68"
7827676292a44b697edcc7811f832dbf93bf6198,"Ensure BrokeredStatement and PreparedStatement always throw
a Statement is closed exception if the statement is closed.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55251 13f79535-47bb-0310-9956-ffa450edef68"
4cf8dda2cb85dc4d5e622048ada8e92e84724f49,"Add initial NOTICE file.
May need changing if the ASF board has any resolution to the
general copyright issues.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55253 13f79535-47bb-0310-9956-ffa450edef68"
b201557c34876a1578a66f75a47c63c0cb66e38c,"Remove IBM's binary copyright in Java files under
trunk/java/build.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55284 13f79535-47bb-0310-9956-ffa450edef68"
a2ecb05df8302afebc5e2e84b0d15dc38142a4b0,"Set keepAlive on by default add static property derby.drda.keepAlive to 
allow keepAlive to be turned off.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55537 13f79535-47bb-0310-9956-ffa450edef68"
3730fe6510f6ff1266709dec4f2334a861e33387,"Bug: Database Metadata needs to return correct size for maximum column name length, maximum schema name length etc

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55630 13f79535-47bb-0310-9956-ffa450edef68"
a5bdbd4a57d93495228282dd1ecfc5417e446b4f,"committing patch from tsuresh@Source-Zone.org

Cleaned up some calls that are not being used in log facttory. Attached 
is the diff file. I am  not sure how
patch  command handles deleted files.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55723 13f79535-47bb-0310-9956-ffa450edef68"
24e020498f0ebbe569eefcc52ea59b1ec8eb3bc9,"Derby may fail to start when it is loaded through a custom ClassLoader.
The reason is that the static java.lang.ClassLoader.getSystemResources method may not
find the resources loaded by a custom ClassLoader.
The patch fixes that by getting the current ClassLoader and calling its getResources method.

Patch from Jack Klebanoff <klebanof@Mutagen.Net>



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55852 13f79535-47bb-0310-9956-ffa450edef68"
d79abcf32a77e90643667b3a117c7e00356e920f,"Derby35 - Fix dss chaining problems for network server.
Checked in for Army Brown army@golux.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@55942 13f79535-47bb-0310-9956-ffa450edef68"
a54b65775aeeab5f4359d67fa38ea8027c4293e2,"Fix for derby-5. Instead of clearing buffer, just clear back to appropriate point if query fails. Sumbitting for Army Brown (army@golux.com)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@56215 13f79535-47bb-0310-9956-ffa450edef68"
95dfbea6a7102420bee7d70d7ec08442a2427db8,"Modify SQLDecimal.writeExternal() to use BigDecimal.unscaledValue() that
could not be used while Derby (Cloudscape) supported JDK1.1. This makes
storing DECIMAL values more efficient due to less object creation.

Remove some dead code.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@56617 13f79535-47bb-0310-9956-ffa450edef68"
5f7e18fe70194732c42e9b82250cc226e14d7cf5,"Cleanup one line of code to get the current context from the current language connection
and not through the static ContextService method.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@56618 13f79535-47bb-0310-9956-ffa450edef68"
fa1a0cc4c32d6e2b59ae58c08bbeafcd2e68aa6b,"Remove dead code (unused private method) in Driver169.java


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@56619 13f79535-47bb-0310-9956-ffa450edef68"
ffe8f709bd1b4974f4963fce3473cc4459f43552,"Derby-54: Make RETAIN a non-reserved keyword

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@56620 13f79535-47bb-0310-9956-ffa450edef68"
1c535394f69395ea7d61053c78d4a57aa31a687d,"Derby-44: Enable LIKE ? ESCAPE ? syntax that was disabled before

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@56961 13f79535-47bb-0310-9956-ffa450edef68"
f91d2d5125f246ba45d7e355035520fac1939033,"Add COPYRIGHT file and fix NOTICE file to reflect ASF policy.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57416 13f79535-47bb-0310-9956-ffa450edef68"
50d75f34e88eaa19d534f49626f13a958d0ca51f,"Remove IBM's binary copyright in java files under java/build


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57418 13f79535-47bb-0310-9956-ffa450edef68"
141cd3115a43bf3e1858a7dbfe1b64a7b0e2346b,"Remove IBM's binary copyright in java files under java/drda


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57420 13f79535-47bb-0310-9956-ffa450edef68"
a8ff4fd07fd054c8ea0b636a97dfec54485e6b21,"Remove IBM's binary copyright in java files under java/tools


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57451 13f79535-47bb-0310-9956-ffa450edef68"
76addbc44a809b8f777229035b381a07f420e04d,"Remove IBM's binary copyright in java files under java/engine/org/apache/derby/iapi

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57456 13f79535-47bb-0310-9956-ffa450edef68"
5d24b1a934ab3c2bc98dc2938dfe44ccf96a185c,"Remove IBM's binary copyright in java files under java/engine/org/apache/derby/iapi

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57457 13f79535-47bb-0310-9956-ffa450edef68"
dc1300e1e2fef95e5d654575879e41d8c6772537,"Remove IBM's binary copyright in java files under java/engine/org/apache/derby/iapi

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57458 13f79535-47bb-0310-9956-ffa450edef68"
61070a6d0ff752b4d41eb750cb3dfcfc9a839f40,"Remove IBM's binary copyright in java files under java/engine/org/apache/derby/impl

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57463 13f79535-47bb-0310-9956-ffa450edef68"
9e5097f00312725345052deab728b332d5fd0c7d,"Remove IBM's binary copyright in java files under java/engine/org/apache/derby/impl

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57465 13f79535-47bb-0310-9956-ffa450edef68"
1f9b9c45b15f81f5ad7c8eb342f9104c74714189,"Remove IBM's binary copyright in java files under java/engine/org/apache/derby/impl

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57466 13f79535-47bb-0310-9956-ffa450edef68"
c6ad5341a9998bd8a0fe4684207c90c7d8c65893,"Remove IBM's binary copyright in java files under java/engine/org/apache/derby/impl

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57467 13f79535-47bb-0310-9956-ffa450edef68"
4dede3b95c72cc209824e677470b7081728af43d,"Remove IBM's binary copyright in remaining java files under java/engine/org/apache/derby

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57468 13f79535-47bb-0310-9956-ffa450edef68"
9411e5147730094d9713df694a4a9b715553417c,"Change the copyright statement to the ASF approved version for the
javadoc targets.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57479 13f79535-47bb-0310-9956-ffa450edef68"
356149711e25d1be454840080a902915ab2865de,"Derby-45: Allow expressions that result in string types as arguments to a LIKE expression

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57487 13f79535-47bb-0310-9956-ffa450edef68"
67614ad90f3f950d98e7be6d2fb4713a634eb8c7,"Contribute first set of Cloudscape tests, framework scripts, basic network
server and embedded demos, and translated message files to Derby.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57503 13f79535-47bb-0310-9956-ffa450edef68"
d85b4955a650247ec791103528cd05003aa7ba8f,"Fix reference to javacc.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57507 13f79535-47bb-0310-9956-ffa450edef68"
75b69971e1129484e8490ec601c9fbf669b63ae5,"Compile ExternalTable.java with java13compile.classpath to avoid
compilation errors.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57508 13f79535-47bb-0310-9956-ffa450edef68"
cd3749bf86ef95cdb503a31eeea78b74c237162d,"Update file header to ASF copyright and Apache Licence notice - java/build files


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57532 13f79535-47bb-0310-9956-ffa450edef68"
d7258ed34662ba357c99d7672bb8dcd921a7f94e,"Update file header to ASF copyright and Apache Licence notice - java/drda files


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57533 13f79535-47bb-0310-9956-ffa450edef68"
985fc85d1fc337aecb734d51d9b28c8e045fba65,"Update file header to ASF copyright and Apache Licence notice - java/tools files


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57534 13f79535-47bb-0310-9956-ffa450edef68"
7ecc1f2c8fd1130be940a20dc7b4b2d664d9f64f,"Update file header to ASF copyright and Apache Licence notice - java/engine/org/apache/derby/iapi files


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57535 13f79535-47bb-0310-9956-ffa450edef68"
345de35b861751e6e8e38f8bc1012e726d06a2f0,"Update file header to ASF copyright and Apache Licence notice - java/engine/org/apache/derby/impl files.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57538 13f79535-47bb-0310-9956-ffa450edef68"
cb1ca128610c809b9d0520c2b36e7bb41aa498ab,"Remove IBM's binary copyright from java/testing files.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57541 13f79535-47bb-0310-9956-ffa450edef68"
7954fd7194c34cc26fba7a8b76c05c299b8ffbb4,"Add a section concerning the need for Jakarta-ORO classes to BUILDING.txt



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57547 13f79535-47bb-0310-9956-ffa450edef68"
c1c71ef3ed98fc40b9a50c895f8d465830994572,"Update file header to ASF copyright and Apache Licence notice - java/testing files.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@57548 13f79535-47bb-0310-9956-ffa450edef68"
be1a275099c2adb53a6fa7575020765ae8ac5675,"Test modifications for Derby-45

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@76009 13f79535-47bb-0310-9956-ffa450edef68"
2db7e0246e1fca3934a65381027f489dfdda6efb,"Add SimpleApp to the build


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@76066 13f79535-47bb-0310-9956-ffa450edef68"
3356a30fbfc5c14d852f3b02a5f45a0b2f7b697c,"Minor Test updates


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@76068 13f79535-47bb-0310-9956-ffa450edef68"
d868cef2d8b501455f18ff35cfd04e0634a5506d,"make sure UpdatableVTITemplate is included in derby.jar



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@76093 13f79535-47bb-0310-9956-ffa450edef68"
3abc7d4e26a8d4ebf87c163ecd290e5a3edcab9c,"Remove copyright notice from ij startup message. Cleanup other IBM/Cloudscape
references in tools, including moving impl/tools/cslook to impl/tools/dblook.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@76095 13f79535-47bb-0310-9956-ffa450edef68"
dda3bab9e8f1cf5d0dbcf50ca44debaf0f4da7d5,"test cleanup


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@76180 13f79535-47bb-0310-9956-ffa450edef68"
3d777756ef1f1b3a682ba634997972c30393962e,"Remove unused imports of java.math.BigDecimal


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@76267 13f79535-47bb-0310-9956-ffa450edef68"
d27d2b739e14cc409ccfa4cc0e126daa8b72c214,"Derby-59: Enable dblook to use a driver provided by the caller, instead of assuming JCC or EmbeddedDriver

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@105887 13f79535-47bb-0310-9956-ffa450edef68"
c21248021933ea7b3920d0e3722dea10ec2b9464,"Add COPYRIGHT file to derby.jar, derbynet.jar, derbytools.jar. Update CHANGES.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106165 13f79535-47bb-0310-9956-ffa450edef68"
2204041e1171995df9a0f8973d402f9a20456239,"Apply patch from Derby-72 attachement, fix copyright in release.properties.
Patch modified to have copyright statement as recomended by ASF board.

Patch originally from Jeremy Boynes


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106210 13f79535-47bb-0310-9956-ffa450edef68"
fcf8c76e8337d1b20d3d2aae5b296e15dfd2e8ef,"Remove (now) unused class with IBM copyright constants.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106253 13f79535-47bb-0310-9956-ffa450edef68"
e7c5a464e0b52434390e6dea6ecff6a955e84465,"Fix Derby-74, new format of BigDecimal.toString() in J2SE 5.0
causes incorrect count of number of whole digits.

Fix contributed by Jeremy Boynes


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106329 13f79535-47bb-0310-9956-ffa450edef68"
225ade357cb8c7aa25ae22fc2b5c67c1b164e300,"Derby-21: ResultsetMetaData.getColumnClassName() for CLOB and BLOB is incorrect

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106336 13f79535-47bb-0310-9956-ffa450edef68"
a298f3185a2f51e03636669ec8c3df2cd12123dd,"Fix for intermittent hang with database shutdown.
Contributed by Army Brown



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106436 13f79535-47bb-0310-9956-ffa450edef68"
bd4b50befadd8ff398be3659543e64b9c69a2d21,"Minor correction to previous checkin (106336)

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106533 13f79535-47bb-0310-9956-ffa450edef68"
1f62016f2cc44afc2b3ff1692f00f022208e8580,"Fix for Derby-33 - not implemented exception when passing in empty type map to JBDC calls.

Handling the map conditions the following way

  null Map      --> throw a SQLException
  empty Map     --> no-op
  non-empty Map --> throw notImplemented.

Patch contributed by Shreyas Kaushik (Shreyas.Kaushik@Sun.COM)




git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106787 13f79535-47bb-0310-9956-ffa450edef68"
8bf08328b0e389d75989878f6b1d47da47b8d018,"Fix Derby 83

Patch which makes SQLDecimal use BigDecimal.toPlainString() on JDK1.5 so that generated text is the same as in prior versions.

This uses reflection to invoke toPlainString() allowing the code to be compiled on earlier VMs.

Fix contributed by Jeremy Boynes <jboynes@apache.org>
Test case contributed by Dan Debrunner djd@debrunners.com



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106931 13f79535-47bb-0310-9956-ffa450edef68"
119f9723040919921f2ebed625a0290ab6bbe0f5,"Fix for Derby - 67 .  Network Server on a 64 bit JVM failes with Distributed Protocol Error



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106935 13f79535-47bb-0310-9956-ffa450edef68"
5c9e1deb2eaf2e92f2dcad616568b6f07662c9fa,"Add license and copyright files to the locale jars.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@106977 13f79535-47bb-0310-9956-ffa450edef68"
f758cbacb070dfb9eeaea2ec7c7e6f67593d60f2,"update STATUS, add README


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@109245 13f79535-47bb-0310-9956-ffa450edef68"
3f895c683c11f9e8de7ec1139b8a64944e01c6ed,"Adding store .sql tests & suite, xa suite; remove some cloudscape references.
contributed by myrna@golux.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@109265 13f79535-47bb-0310-9956-ffa450edef68"
a8c805596c3e717676fb475d8ec6eed7c3effc4e,"Cleanup Cloudscape/IBM references in frameworks scripts.

Committing for Scott Hutinger <s-hutinger@wiu.edu>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@109462 13f79535-47bb-0310-9956-ffa450edef68"
19c10b53afbede6fccbcbff66fc0f454aa5446dc,"Fix message names in dblook


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@109470 13f79535-47bb-0310-9956-ffa450edef68"
8beb7db2d629084675a1c6a7f37162b2417d94ac,"fix dblook message key names in tools/dblook.java


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@109527 13f79535-47bb-0310-9956-ffa450edef68"
7acc1e06c4f94dae5a33dd89490efeb3749525cc,"Test master update and removal of tests that do not exist from suites.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@109565 13f79535-47bb-0310-9956-ffa450edef68"
58d8884420c35eef5c0f7ffd813c6cc0bbb95e6d,"Adding 2 tests to suites.
Contributed by myrna@Golux.Com
 


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@109604 13f79535-47bb-0310-9956-ffa450edef68"
44d55151d0cf9e9da74b71747c4f2abbc87b65fd,"Updates to testing README. how about: added description of store *.sql tests; added requirement of derbyLocale_*.jar(jira-derby 77)

Contributed by myrna@Golux.Com



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@110042 13f79535-47bb-0310-9956-ffa450edef68"
1a19f2c7b6344d4539d4111b5925d2497a7503f7,"Change version of Derby trunk to 10.1.0.0 alpha.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@110054 13f79535-47bb-0310-9956-ffa450edef68"
36f8c0102c79da81445bb7f7ab6dc4f45dc2f0b4,"Fix Derby-62, serialization of SQLExcepton thrown by Derby throws error due to
references to non-serializable objects.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@110114 13f79535-47bb-0310-9956-ffa450edef68"
de9edbba85444d227ead58f279c5b3cb852036c1,"Update test masters due to version change.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@110143 13f79535-47bb-0310-9956-ffa450edef68"
97cb351eeb1641673e8e0dd5e31915a06ec2e076,"Last part of fix for Derby-90. Update dblook_test to include a test of the 
message files.

Committed for Army Brown <army@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@111185 13f79535-47bb-0310-9956-ffa450edef68"
fd4679441ae354aec0bb111febbf24d270f48c28,"Change IBM Confidential file headings to standard Apache Derby ones.
Script error left IBM Confidential errors in files by mistake.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@111212 13f79535-47bb-0310-9956-ffa450edef68"
29140526a1adc312eb8a3ec1af43cc3cfee2a774,"Fix Derby-91, xa tests fail due to missing classes in derbytools.jar.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@111300 13f79535-47bb-0310-9956-ffa450edef68"
4153b27291cc2b93ee56633d8ae5bfabdaa2a535,"Add some comments to JDBC implementation classes for the
embedded driver, as to which JDBC levels they support.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@111329 13f79535-47bb-0310-9956-ffa450edef68"
6d698f7a2db8ab685d4b39fe5ca638b4e307a512,"Clean up some old replication code, remove ListOfRowLists and DependableList.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@116300 13f79535-47bb-0310-9956-ffa450edef68"
f68f62fd81539c77a456631fbb47970ef33bc4fa,"Set svn:eol-style native on all text files under java/testing.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@122528 13f79535-47bb-0310-9956-ffa450edef68"
df9af89bf2ed4abcf2312a06b58d4a0c2fca86fe,"Partial commit of patch for Derby-73 (from attachment).
Changes all enum variable names to avoid use of it since
it is a reserved word in J2SE 5.0.

Patch contributed by Jeremy Boynes <jboynes@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@122617 13f79535-47bb-0310-9956-ffa450edef68"
09e2e72b7baa2724d8a90e44884f9575a779c8c2,"Submit some minor test changes.

Submitting the patch for Myrna (myrna@Golux.com)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@122988 13f79535-47bb-0310-9956-ffa450edef68"
966d860030637c7a96953f4b152b0052119358a6,"committing patch to fix DERBY-94 submitted by Suresh Thalamati (tsuresh@Source-Zone.org)
Problem:
Container group level locks were not getting released when lock is
escalated to table level exclusive lock. Locks were not getting released
even on commit/close of cursor   because once escalation process
acquires table level X lock successfully, container group lock policy is
set as NO-LOCKING state.

Fix:
Attached Fix releases the container group level locks before setting
lock policy to  NO LOCKING mode when a table level X lock is acquired
because of escalation.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@123267 13f79535-47bb-0310-9956-ffa450edef68"
438349641994471097b4da6748b86a9e5c757054,"Initial check in of XA for Network Server.
Tests will be added when the client driver (IBM Universal JDBC Driver ) becomes avaialable.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@123827 13f79535-47bb-0310-9956-ffa450edef68"
bc617837832f30aa62baef6ad96bc009ee80e1cd,"Set eol-style native on new Network Server XA files



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@123831 13f79535-47bb-0310-9956-ffa450edef68"
5e9d262bcfd4a4a2d44d63521d995b7c8dbc9cb2,"Remove creation of integer array representing all the columns' JDBC data types.
Array object was created for every ResultSet creation and used infrequently.
Creation thus impacted performance and garbage collection.




git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124165 13f79535-47bb-0310-9956-ffa450edef68"
fd8a779db6f72b9972534c8e69a2018f60c7ee47,"Fix Method not found error for Network Server j9 tests 


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124273 13f79535-47bb-0310-9956-ffa450edef68"
509ccb9d87c05fa40ba41d2e5061c9b194643f88,"Incremental step to isolating SQLDecimal and BigDecimal from
the majority of the code, for J2ME/CDC/Foundation/JSR169.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124455 13f79535-47bb-0310-9956-ffa450edef68"
6200b382c4d5bcd8f240308f5bd4051f94cb64cd,"Enhance Derby to support INTERSECT and EXCEPT clauses.

Submitted by Jack Klebanoff (klebanof@Mutagen.Net)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124467 13f79535-47bb-0310-9956-ffa450edef68"
47f9d0a6f068de0dfb99049c41cbe496febe726b,"Submit new files that are part of enhancing Derby by adding INTERSECT and EXCEPT.

Submitted by Submitted by Jack Klebanoff (klebanof@Mutagen.Net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124468 13f79535-47bb-0310-9956-ffa450edef68"
fdb2debba0dc16f144bfb51ab7f8fa43c4e9936c,"Fix compile error in AvGAggregator.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124500 13f79535-47bb-0310-9956-ffa450edef68"
11014621be39a6a233620b00a09288d72cdaf259,"Build target for building an Eclipse plugin with the Derby jars.

Committed for Rajesh Kartha (kartha@Source-Zone.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124561 13f79535-47bb-0310-9956-ffa450edef68"
7e51ee486cb533a236f450c0d416515687f02db4,"Add IntersectOrExceptNode to list of query nodes for derby.jar.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124571 13f79535-47bb-0310-9956-ffa450edef68"
1260b9440b0f937b629b7d99e05070018e7a63cf,"Cleanup of SPS (stored prepared statement) code that is no longer
required or used. SPS were a non-standard mechanism for pre-compiled
statements in Cloudscape. Internally triggers and the network server use
SPS's thus some of the runtime infrastructure remains.

- - Remove support for DROP STATEMENT
- - Remove support for ALTER STATEMENT
- - Remove support for USING clause of EXECUTE STATEMENT.
  EXECUTE STATEMENT is still used by the network server


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124762 13f79535-47bb-0310-9956-ffa450edef68"
f52a50f7aac29c0363128e6ad714721b2d3c71b3,"Initial step for Derby-89 - support of explicit Java method signature in
function and procedure defintions.

Contributed by Jeremy Boynes.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124819 13f79535-47bb-0310-9956-ffa450edef68"
34affcbefa8e281e2433bfb2927e5eee7c5920b9,"Fix procedure test output for Derby-89 commit when running with network server.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124825 13f79535-47bb-0310-9956-ffa450edef68"
867a530d4b70550b30f1f3cc196d22b03740b1fe,"Remove the RowList class, replacing its use with simple ExecRow[] (arrays).

Clean up some code related to ProviderList, remove handling of
dependencies for defaults since defaults are constants.

This is a step towards removing ProviderList class, which can be simply
replaced with java.util.List. First I'm checking to see how it is used,
since some of its use is left over from the old Cloudsync product.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124847 13f79535-47bb-0310-9956-ffa450edef68"
fbf21f87d9f253722825f4262edb747bd044bd5b,"Set svn:keywords property for STATUS for Date and Author substitution.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124914 13f79535-47bb-0310-9956-ffa450edef68"
6de7104478a100a2d399d7df6c88fc4174d4c9de,"next installment of tests from IBM - prepared by myrna@golux.com 
includes jdbc20 suite, jdk14 suite, jdbcapi suite, and more store, tools and lang tests.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124918 13f79535-47bb-0310-9956-ffa450edef68"
ff7ed3a43a13cea6b8e22df4ed1c9c69f3cfdf41,"add missing master file - patch by myrna@golux.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124983 13f79535-47bb-0310-9956-ffa450edef68"
9a283348b3685772d8dffc738a19317bb0a990d4,"Add initial test case to autoincrement.sql of IDENTITY_VAL_LOCAL (one that returns NULL)
Modify predicatesIntoViews to allow passing on Linux/Unix.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124989 13f79535-47bb-0310-9956-ffa450edef68"
c392151c4cd76ab02e48c913d0bcce1029fc72fe,"Fix distinctElimination test on linux/unix.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@124992 13f79535-47bb-0310-9956-ffa450edef68"
0b12223978c9a4f00da0d709c6c842f587d226b4,"Fix desc_index and triggerGeneric tests for unix/linux


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125003 13f79535-47bb-0310-9956-ffa450edef68"
eb0c23bea4a6a3bdd31d72ac4fa64f17a763b926,"Fix a failure when running xaSimpleNegative test with jdk131 based jvms.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125113 13f79535-47bb-0310-9956-ffa450edef68"
be92783822419eebcdecc7a14ecc656aef9b08b3,"Update testing README file with recently committed suites.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125114 13f79535-47bb-0310-9956-ffa450edef68"
9333fc2073370673fee99517fc4d3fb85fa20610,"Fix TransactionTable test for linux build (hopefully).


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125120 13f79535-47bb-0310-9956-ffa450edef68"
a56b04fd1a1934e3dcbcf14998fa7a2f96975505,"Actually fix TransactionTable test on linux.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125123 13f79535-47bb-0310-9956-ffa450edef68"
d09f9feb438a304264d2186791d2ad3fd040ba22,"Fix subqueryFlattening test for linux.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125133 13f79535-47bb-0310-9956-ffa450edef68"
db05712f8380d29727841fad6ee1cec96756a19d,"Remove svn:eol-style property from data files used by streamingColumn test.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125170 13f79535-47bb-0310-9956-ffa450edef68"
43a2787765ee0d0203e2a256adfee17011ad4743,"Remove eol-style native from two more data files for streamingColumn test.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125188 13f79535-47bb-0310-9956-ffa450edef68"
0157811b0c5754a182ba3b12aa4e844e5deb96c0,"Delete svn:eol-style for data files used in resultsetStream test.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125195 13f79535-47bb-0310-9956-ffa450edef68"
355c2b32d349a558e2a7a8f9a8dd6ada94017282,"Delete svn:eol-style for data files used by blobclob4BLOB test


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125197 13f79535-47bb-0310-9956-ffa450edef68"
b0066bc68694ae40ffaf6cf3fd515bd7d54a7f62,"Fix inbetween text for linux.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125212 13f79535-47bb-0310-9956-ffa450edef68"
3fab6cfd10a3b8718f26a37b34bd84a3ad0ecea7,"Filled in the date for the associated name check based on Ken Coar's update of http://incubator.apache.org/projects/derby.html, added release and DITA info.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125233 13f79535-47bb-0310-9956-ffa450edef68"
dfe1451b0059873d68e68ca76408432e45908b51,"Derby-98 Implement ResultSet.deleteRow() for forward only ResultSets.

Contributed by Mamta Satoor.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125266 13f79535-47bb-0310-9956-ffa450edef68"
38c84f246366785382c17e5a7cd8f59a736c0037,"Remove unused VTI classes from testing util directory.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125422 13f79535-47bb-0310-9956-ffa450edef68"
cf58aec96c250bd7a98178f3640f98c6c24ac5d0,"Remove passing identity value areound as a BigDecimal since the underlying
value is a long. Consistent naming for DataValueFactory methods related to DECIMAL.
JSR169 releted cleanup.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125423 13f79535-47bb-0310-9956-ffa450edef68"
0bbfdacbdbed10fb05caa37f7902a14a372aeba8,"Preparation work for Derby Network Client 
Add test harness hooks for new testing framework for Derby Network Client
Update existing network server tests to work with new driver once it is 
available

ij.startJBMS() has been changed to recognize the driver name and 
TestUtil has methods to allow tests to access framework specific information
in a generic way.

Framework = DerbyNetClient
Driver = org.apache.derby.jdbc.ClientDriver
URL = jdbc:derby://server[:port]/databaseName[;attributeKey=value]..
 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125447 13f79535-47bb-0310-9956-ffa450edef68"
50f83c45bdf5b0969ef78dc42a9f36903019a38c,"New Masters for DerbyNetClient framework



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125449 13f79535-47bb-0310-9956-ffa450edef68"
8eacfe954287c6e83e5d11aaba4dcceac9126fbf,"Delete extraneous file 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125450 13f79535-47bb-0310-9956-ffa450edef68"
471df0832b3a7299854246311ec7b7a447c0e27e,"Update and consolodate master for schema change in test



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125547 13f79535-47bb-0310-9956-ffa450edef68"
fe08d9fd2549d0e8785227f261578759ca92ad88,"Make metadata function supportsOpenCursorsAcrossCommit() return TRUE, instead of FALSE.

Submitting the patch from Mamta Satoor (mamta@Remulak.Net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125571 13f79535-47bb-0310-9956-ffa450edef68"
1f4c352d226bb502d68175ef64764115e50529e6,"Add more tests for rollback and self referential constraints to
updatableResultSet.java

Committed for Mamta Satoor <mamta@remulak.net>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125589 13f79535-47bb-0310-9956-ffa450edef68"
5cd5bef53547ab64c667ddec7876c459a010a392,"Gracefully skip network server tests if JCC is not available.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125590 13f79535-47bb-0310-9956-ffa450edef68"
67e01f3f8ee0853a8543deca3b0c425706fb69c4,"Reformat for better wrapping

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125617 13f79535-47bb-0310-9956-ffa450edef68"
430d56888d35890d88ec7150f05255e03e062d52,"Reformat for better wrapping

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125618 13f79535-47bb-0310-9956-ffa450edef68"
749a2f89f6ce5f395ee89b900aa658b98783dfab,"Update STATUS.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125729 13f79535-47bb-0310-9956-ffa450edef68"
ded68894e44f01ec40f5191a1979ae809541da10,"Make the DataValueFactory a dynamically loaded module.
Preperation for JSR169 and multiple implementations of DataValueFactory 


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125945 13f79535-47bb-0310-9956-ffa450edef68"
b4e97174bdc216dcf5c88563a34a55a105d764e3,"Remove extraneous  '/' from url



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125947 13f79535-47bb-0310-9956-ffa450edef68"
75fbaa9a6287406c68ad952050a9c4e451426cde,"Move BigDecimal methods and Blob/Clob methods into or out of JDBC 2.0
Prepared/CallableStatement implementation classes.
Refactor EmbedConnection20 in preparation for removing it.
See design attachment for Derby-97 for details


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125949 13f79535-47bb-0310-9956-ffa450edef68"
c83a399e7f6b03739bd6625b040b8bfb4912b927,"Fix to Derby-13. Correctly compare exposed names using TableName objects
and not simple Strings.

Patch contributed by Shreyas Kaushik <Shreyas.Kaushik@Sun.COM>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@125980 13f79535-47bb-0310-9956-ffa450edef68"
b3e446c2f7f94771975c3875abf2b6704b21451e,"Fix Derby-95 - NullPointerExceptionwith XA Connections if databaseName property
is incorrectly stated as a JDBC URL.
Fix contributed by Shreyas Kaushik <Shreyas.Kaushik@Sun.COM>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126038 13f79535-47bb-0310-9956-ffa450edef68"
588f766d6661262f01d0bf7dcc0701f2198af48d,"Fix Derby-130 - IDENTITY_VAL_LOCAL not reset when EmbedConnection object re-used from pool.
Added generic resetFromPool method to handle future situations.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126039 13f79535-47bb-0310-9956-ffa450edef68"
f0b08709a5c4cd942482f03b5d5451f4510fc375,"Fix javadoc errors in drda, tools, and publishedapi.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126257 13f79535-47bb-0310-9956-ffa450edef68"
569dec428e389c72737b440f5e61edc288aa51d5,"Fix for Derby-114 - jar target name in target buildworld was incorrect.
Fix for Derby-88 - RunSuite rounds incorrectly, use Math.ceil and Math.floor
                   for better rounding of test pass/fail statistics.
Partial fix for Derby-68 - Fix JDK revision typo in BUILDING.txt


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126267 13f79535-47bb-0310-9956-ffa450edef68"
8d753275f38ce7e5d4d4854cf58e70980632d82f,"Fix for DERBY-122. Do not skip jdk14 suite under JDK 1.5/5.0

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126307 13f79535-47bb-0310-9956-ffa450edef68"
679adc81ca916570d8234421e1f3cdb70d3f22c6,"Add encryption suite, running storemats in an encrypted mode.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126308 13f79535-47bb-0310-9956-ffa450edef68"
8b933a784ccd1035f87d3c81cc622e1312b5f5e6,"Update j9 test masters.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126309 13f79535-47bb-0310-9956-ffa450edef68"
a875171e619bb4c3f1347671b31820863c5007d2,"master update for supportsOpenCursorsAcrossCommit change



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126348 13f79535-47bb-0310-9956-ffa450edef68"
2e4a36fcb0227b18d2e61ab48327e33b6d25c4a9,"Fix for multiple EXCSAT's without reset of the connection.
contributed by kmarsden@sbcglobal.net

There are three kinds of EXCSAT's we might get

1) Initial Exchange attributes.   For this we need to initialize the
apprequester. Session state is set to ATTEXC (attributes exchanged) then
the AR must follow up with ACCSEC and SECCHK to get the connection.

2) Send of EXCSAT as ping or manager level adjustment. For this we just
ignore the EXCSAT objects that are already set.  JCC doesn't use this,
but it is in DRDA.

3) Send of EXCSAT for connection reset. (see parseEXCSAT2()) This is
treated just like ping and will be followed up
by an ACCSEC request if in fact it is a connection reset.
If we have already exchanged attributes once just
process any new manager levels and return (case 2 and 3 above)
 	
Before the XA checkin, 1 and 2 worked.  After the XA checkin 1 and 3
worked and with this patch 1, 2, and 3 all work.

I had to rearrange the code a bit to do this because in DRDAConnThread,
processCommands() the EXCSAT case just called parseDRDAConnection which
expected the ACCSEC and SECCHK codepoints in the correct order.

As a solution I
1) Moved the handling of the ACCSEC and SECCHK codepoints from
parseDRDAConnection up to  processCommands().

2) Put the security state in the Session object.  The session has
   4 states.

two existed before:
INIT 	- initial state
ATTEXC  - attributes exchanged
	   (After first EXSAT - ACCSEC required)

now there are two new ones:

SECACC   - security accessed (After successful ACCSEC - need SECCHK)
CHKSEC   - checked security. After successful SECCHK and connection.
           no more required security codepoits.

The session.getRequiredSecurityCodepoint() method is used by
process_commands to determine if the next codepoint must be ACCSEC or
SECCHK.

Also the patch includes the fix Dan suggested for jdk 131 for
BrokeredPreparedStatent.getStatement(). But how to call
Connection.prepareStatement is still an issue.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126392 13f79535-47bb-0310-9956-ffa450edef68"
03b7b8d3b5cc23393a6e5065032069dc09680871,"Replace CurrentUserNode and CurrentIsolationLevelNode with single
multi-purpose SpecialFunctionNode.

Full comments in derby-dev e-mail with
Subject: [PATCH] Cleanup of special function nodes

http://mail-archives.apache.org/eyebrowse/ReadMsg?listName=derby-dev@db.apache.org&msgNo=1756




git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126431 13f79535-47bb-0310-9956-ffa450edef68"
3ab3978fb38ccf1203edc2a585c938975dd79c36,"Build file changes for gump


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126451 13f79535-47bb-0310-9956-ffa450edef68"
8809d55922b5fadeaf299aa53c51f8e319fa668e,"Derby 124: Set the result type for CONCAT operator correctly for BLOBs and CLOBs.

Patch submitted by Mamta Satoor. (mamta@Remulak.Net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126453 13f79535-47bb-0310-9956-ffa450edef68"
b33728ffda89610ca467552d26ea50ad1ff66af0,"Add test cases for changes made in svn revision 126039 for fix to Derby-130


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126461 13f79535-47bb-0310-9956-ffa450edef68"
63d26f54568c7033e3c9928563c9f267a085f25a,"Move methods from EmbedConnection20 into EmbedConnection
and remove the class EmbedConnection20. Cleanup for JSR169 support.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126463 13f79535-47bb-0310-9956-ffa450edef68"
3288ee5b145869bcf5fb1fbba46f527b01503805,"Allow Network Server demo to compile without db2jcc.jar in the classpath.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126495 13f79535-47bb-0310-9956-ffa450edef68"
54f0035b7010c96358a7c75b1ceecaeb3fbc007a,"commit contributing nist suite (patchy by myrna@golux..com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126534 13f79535-47bb-0310-9956-ffa450edef68"
4ffffe697d1093d15a37909a2fba9fe0ea1ca8c0,"Set svn:ignore for intermediate build files/directories.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@126590 13f79535-47bb-0310-9956-ffa450edef68"
b1da3fce80db66d01172cb04330e19ecae9ecb8c,"Add demo test and suite.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@128388 13f79535-47bb-0310-9956-ffa450edef68"
9fedfda4f0b087bee8f671e2423d51da8749ff14,"Remove unused imports of java.sql.DriverManager.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@149400 13f79535-47bb-0310-9956-ffa450edef68"
78d8c3b56dd15d97a0274126adb317645204abc4,"Contribi=ute another Cloudscape test, jdbcapi/parameterMapping,
tests mapping between java types and SQL types through the JDBC layer.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@149451 13f79535-47bb-0310-9956-ffa450edef68"
d7f7457f7179244a5a0d6fdb461a993dd067867d,"Change setting of BigDecimal and other object types to be set through the Number
class rather than BigDecimal or explicit class, since BigDecimal is not supported
in J2ME/CDC/Foundation



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@149467 13f79535-47bb-0310-9956-ffa450edef68"
3292b5774b779928ac075d3c82e16faa95736360,"Networkserver testing can/should be augmented by running the jdbc20 & jdbcapi
suites.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@149487 13f79535-47bb-0310-9956-ffa450edef68"
f5dc7bf802bf5db810abdb5dae8b2a0765513c42,"Fix test failures by creating new master files for three tests when run 
with jdk15. The difference in the output of the tests is due to 
java.math.BigDecimal.toString() output differences in JDK15 and JDK14.

Committed for Suresh Thalamati <suresh.thalamati@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@149488 13f79535-47bb-0310-9956-ffa450edef68"
3e5e630b4abc7b4239e7585b65c47b67d8f9826b,"Build file fix for gump. 


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@149529 13f79535-47bb-0310-9956-ffa450edef68"
6ae30228fdd5cffbdfc6f579fd8c4c6ab25043f4,"Add constants to represent the values for JVMInfo.JDK_ID.
Add sysinfo output for Derb'y understanding of the JVM level.
Add initial support for detecting a J2ME environment.
Clean up some old JDK 1.1 support code.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@151052 13f79535-47bb-0310-9956-ffa450edef68"
9e89d923ab8a2ce08313b51d5b2336cff3b9ad95,"In preparation for Derby Net Client submission for a community vote, update a few masters.

Submitted by Satheesh Bandaram. (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@151100 13f79535-47bb-0310-9956-ffa450edef68"
83827c038e1e8120a44e41c7c7902ca19c196fa7,"Separate JNDi dependency build in impl/jdbc .


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@151164 13f79535-47bb-0310-9956-ffa450edef68"
9cf79ea517346757fc283d2fee451866c26297f6,"Maintain boot state of system in Derby classes (Driver169, soon to be InternalDriver)
rather than relying on java.sql.DriverManager. This is because java.sql.DriverManager
is not part of J2ME/CDC/Foundation or JSR169.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@151201 13f79535-47bb-0310-9956-ffa450edef68"
624c7b7a9f00de6b15afbb6e38efc35ae8dd110f,"Remove some obsolete replication related code.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@151216 13f79535-47bb-0310-9956-ffa450edef68"
93229b09b8d2ac785f1fb9dd604a5d489edab1c4,"Remove some uses of java.sql.Driver/DriverManager from ij for J2ME work.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@151217 13f79535-47bb-0310-9956-ffa450edef68"
f19bf2525d75dfae84a04ae7ca2489d451a4215a,"Update a few masters, in preparation for Derby Network Client submission for a vote.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@151219 13f79535-47bb-0310-9956-ffa450edef68"
41dfb84cb001aad28967e1a4c8240d6b5a626164,"Enable testing on WCTME 5.7 JVM (aka J9 2.2)

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@151234 13f79535-47bb-0310-9956-ffa450edef68"
b4120b92f313c0e699859055661c1c0ee0bdaa38,"Build fix for gump. Exclude JDBCBoot.java as it pulls in JDBC 2.0 classes
during the JSR169 iapi build target.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@151687 13f79535-47bb-0310-9956-ffa450edef68"
71f79cb86a242c5220e522e0b486d2694acd8cdb,"Fix procedure test to have correct defaults to get connection setup.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152633 13f79535-47bb-0310-9956-ffa450edef68"
20dd153f993c36812ad80b6e19f678fe083f72ea,"Derby-66: DatabaseMetaData.supportsOpenCursorsAcrossCommit needs to return FALSE because derby doesn't support them for XA.

Submitted by Mamta Satoor. (mamta@Remulak.net)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152678 13f79535-47bb-0310-9956-ffa450edef68"
91bb4f21f901e0d35b4b35c41dfa8a32214d8d7d,"Add more tests and test support for network
client.  There is no change to the actual function of the tests but
direct references to the IBM Driver have been taken out of the tests
themselves.  With this patch, there are methods in TestUtil which will
perform the desired action based on the framework.

public static void loadDriver() throws Exception
public static String getJdbcUrlPrefix()
public static javax.sql.DataSource getDataSource(Properties attrs)
public static javax.sql.XADataSource getXADatasource(Properties attrs)
public static javax.sql.ConnectionPoolDataSource
getConnectionPoolDataSource(Properties attrs)

This change also adds a new property to RunTest to determine whether the
test will start newtork server.

startServer={true|false}

Defaults to true for DerbyNet and DerbyNetClient. Not relevant for the
embedded framework.

This property is useful for tests which require the framework in order
to load the right driver but start their own server.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152681 13f79535-47bb-0310-9956-ffa450edef68"
6dfaf51c8bd498f9e955d6f7cdf92388b4ce9d68,"Fix derbynet/sysinfo test on JDK 1.3 by sed'ing out new JDK version string.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152920 13f79535-47bb-0310-9956-ffa450edef68"
9df9c86314ee677592bbc6904a3443e9659023e5,"checking in patch for test case for jira 95 for myrna@golux.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152926 13f79535-47bb-0310-9956-ffa450edef68"
1715c7b723337fb627979e1abbffa848d5d294ae,"committing patch for running importExport test with networkserver with ibm14 jvm for myrna@golux.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152928 13f79535-47bb-0310-9956-ffa450edef68"
2da9275341f41033e5f4da9935e41b3576cd535e,"adding multi threaded test suite & harness for myrna@golux.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152930 13f79535-47bb-0310-9956-ffa450edef68"
5a0d5c58c425ed72add48b663cf67b1c113ffaeb,"checking in change to rename no<framework>.runall files to <framework>.exclude for myrna@golux.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152933 13f79535-47bb-0310-9956-ffa450edef68"
0e38470fddde077ba42cb652738039647ef7953d,"Create InternalDriver as base of JDBC driver hierarchy, contains
 the logic that was in Driver169. Driver169 will become the driver
or JDBC object factory for J2ME.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152944 13f79535-47bb-0310-9956-ffa450edef68"
1430e702005d2079e279977253ee52db56da5277,"Test updates/fixes:
- a typo in functionTests/harness/SysInfoLog
- an entry forgotten from functionTests/tests/jdbcapi/copyfiles.ant, causing test autoGeneratedJdbc30 incorrectly to be run with jvms based on jdk13 spec.
- updated checkDataSource30.out to reflect jira 95 testcase.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152965 13f79535-47bb-0310-9956-ffa450edef68"
c8812568e19243cbfbe0b39ec6a6aec5a8bf5ca2,"Update DerbyNetClient master to match DerbyClient master.

Submitted by Satheesh Bandaram. (satheesh@sourcery.org)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@152986 13f79535-47bb-0310-9956-ffa450edef68"
c303f20ef85945a3515fe30e2d22fde838901ccd,"Fix parameterMapping output for network cient



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153047 13f79535-47bb-0310-9956-ffa450edef68"
d143d83492cc0557ef34922d06d70b89855420c2,"Fix Derby-139 - remove LOCAL as a SQL reserved word.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153095 13f79535-47bb-0310-9956-ffa450edef68"
a65f918f57444799a76839606f4d512a3fc363b4,"Build fix for gump. Use jikes -source option for JDBC 2.0 classes, but only
for gump, to retain compatibility with older versions of Jikes that don't
understand the -source option.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153097 13f79535-47bb-0310-9956-ffa450edef68"
c2d0dcc6269ad922c5790f6748d47faefa020d15,"Derby-123: Derby incorrectly rounds double/real values during conversion to DECIMAL types.

Patch contributed by Shreyas Kaushik. (Shreyas.Kaushik@Sun.COM)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153109 13f79535-47bb-0310-9956-ffa450edef68"
4ec0d26123f8bdc53f2bbba64e2752889226e174,"Add Jeremy Boynes to the committer list in STATUS, and fix its line endings.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153285 13f79535-47bb-0310-9956-ffa450edef68"
a612e4fcfa2e715676593358acd02ce04bb8bdfe,"Master updates in preparation for Derby Network Client submission for vote.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153286 13f79535-47bb-0310-9956-ffa450edef68"
74be18617dfec92dea89c309413fdcf0ffaae7fc,"Renaming LobTest.out to LOBTest.out as expected.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153287 13f79535-47bb-0310-9956-ffa450edef68"
74e0690bc7d5e345adcd3911f5fb4935a4de64b0,"Rearrange and tight some of the skipping code in RunList.java.
One line adjustment to RunTest.java (use javavmVersion instead of javaVersion)

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153293 13f79535-47bb-0310-9956-ffa450edef68"
6b12b80f6459d504af08bd3ba80286c865333230,"Master update to bring updatableResultSet test to upto date.

Submitted by Mamta Satoor. (mamta@Remulak.Net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153325 13f79535-47bb-0310-9956-ffa450edef68"
2c6f0a2ee94469df3f55663d1d41256d4107bc29,"J2ME related work.
Add method to DataValueDescriptor to indicate how a value should
be converted to a BigDecimal now that use of BigDecimal will be moving
to specialized JDBC2/JDBC3 classes only. EmbedResultSet20 and EmbedCallableStatement20
now use this mechanism. Use of DataValueDescriptor.getBigDecimal() restricted to
as few cases as possible, prior to its removal.
Common arithemtic code for TINYINT, SMALLINT and INTEGER moved into NumberDataType.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153460 13f79535-47bb-0310-9956-ffa450edef68"
8d91915f77294ee2aaf65f77e5e9c21996a47485,"Missing test change from last JSR169 related checkin.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153466 13f79535-47bb-0310-9956-ffa450edef68"
36b802db1d728857d6b9929c8b5f6cafa1305082,"Move JDBC 2.0 and JDBC 3.0 methods from EmbedResultSet20 to EmbedResultSet
except for those not in the JSR 169 subset.
EmbedResultSet will support JSR 169.
EmbedResultSet20 will support JDBC 2 and 3.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153569 13f79535-47bb-0310-9956-ffa450edef68"
2a5882921147758e7689ce5b287888e36d3f6598,"Remove DatavalueDescriptor.getBigDecimal and completely isolate
java.math.BigDecimal from type system and J2ME code.
Make DataValueFactoryImpl abstract and add new J2SEDataValueFactory
as the concrete class that returns SQLDecimal as the DataValueDescriptor
implementation for the DECIMAL type.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153571 13f79535-47bb-0310-9956-ffa450edef68"
3ff53d4b2f1bbdaaa3ff866e83ab60c6e4a67a27,"Move JDBC 3.0 methods that also exist in JSR 169 into
the base classes EmbedResultSet and EmbedCallableStatement.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153825 13f79535-47bb-0310-9956-ffa450edef68"
7d1ee7d099a6e812a70e98a48aafb29373317f67,"Remove unused imports from JDBCBoot and AvgAggregator for
classes not part of J2ME/CDC/Foundation.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153826 13f79535-47bb-0310-9956-ffa450edef68"
d88cf3bd33b7b989fdd516a06f0c57fce5eb25bf,"Removing some control characters in comments, probably cut/paste from a word document.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@153832 13f79535-47bb-0310-9956-ffa450edef68"
e11914a1db469c8df03e2942132fb2f7d7d5a2fc,"New all DECIMAL DataValueDescriptor instances indirectly to
handle different implementations for JSR 169 and J2SE.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154096 13f79535-47bb-0310-9956-ffa450edef68"
99f9b54253f10f7ecd4522642b0daededb9f21e3,"Create a single get connection method for the internal system procedures
as a step to not using DriverManager for support under JSR 169.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154097 13f79535-47bb-0310-9956-ffa450edef68"
7585de2f903b27c9b93eba0e5ca04bd0418df144,"Enable dataSourcePermissions test for derbynetclient framework



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154171 13f79535-47bb-0310-9956-ffa450edef68"
bd3941e1dcf8576efe2d566415567adc407c0217,"Add information on type system to iapi.types package.html


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154330 13f79535-47bb-0310-9956-ffa450edef68"
c329a7574165de98c4605acf3f84ed1d5d8f0fb4,"Add initial version of EmbeddedSimpleDataSource, a non-J2EE data source
that works in J2ME and J2SE.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154337 13f79535-47bb-0310-9956-ffa450edef68"
d722df51d58e3f4a44ced7ff929b825b70939818,"Add test for derby network client



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154339 13f79535-47bb-0310-9956-ffa450edef68"
ef78182ffcb3f07e810a8510f75af7747532f2e8,"Ensure EmbeddedSimpleDataSource is added to the derby.jar.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154369 13f79535-47bb-0310-9956-ffa450edef68"
32ab639c0e1329a4a5b660c402030b71319437ff,"Update master files for Derby Network Client, in preparation for Apache submission for a vote.

Submitted by Satheesh Bandaram. (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154372 13f79535-47bb-0310-9956-ffa450edef68"
a1970a9451b9b58f0adb15c60d6c2a476cafaa78,"Remove final uses of BigDecimal from classes required by JSR 169.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154373 13f79535-47bb-0310-9956-ffa450edef68"
d9a649f556e3f12b5c1b48c8cadee3017ff3d32e,"Obtain connections in system procedures using InternalDriver and
not DriverManager, so that they can be called in JSR 169.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154375 13f79535-47bb-0310-9956-ffa450edef68"
1452bdebce6b380cbbd50c6b801281e38d1417fd,"Phase I) Where it is SAFE to do so, cast CHAR columns to VARCHAR columns in the metadata result sets.

Patch contributed by Army army@golux.com



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@154737 13f79535-47bb-0310-9956-ffa450edef68"
3d3820dd083b59a846df471ebae0b54b70393061,"Update a few masters in preparation for Derby Network Client submission and make IJ and Network server recognize the new name for the driver.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@155248 13f79535-47bb-0310-9956-ffa450edef68"
7ba1d3b643a24501e441195843f2fd5f411e5be9,"Add missed file in the previous master update checkin.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@155274 13f79535-47bb-0310-9956-ffa450edef68"
509a2ae72d9890d0d3b819c1b0d79d63b04b256b,"Add DerbyNet master for badConnection.out.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@155275 13f79535-47bb-0310-9956-ffa450edef68"
cde30889fbf009b807f95a0040f367c52c8bb2ff,"Derby-107: Make metadata return NULL where they don't apply.

Submitted by Army Brown. (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@155378 13f79535-47bb-0310-9956-ffa450edef68"
56dc6959783a05d5164cfbba7b0ce020331af0f8,"Hooks for client versioning and sysinfo



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@155389 13f79535-47bb-0310-9956-ffa450edef68"
97a334e126f4d60fd611e75b6f1191f77070f6d8,"Fix DRDAXAprotocol to accept flags for recover
Add netclient to xa helper.
Add additional test for derby network client


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@155642 13f79535-47bb-0310-9956-ffa450edef68"
12c552f59833654152bcbcecd04a2abb2406da7d,"fix for DERBY-155 allow distinct in union/intersect/except

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@155715 13f79535-47bb-0310-9956-ffa450edef68"
2bc809f09a824ca6a5a0552312f0f0b57e67b41c,"Add unit and encryption tests for Derby.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@155990 13f79535-47bb-0310-9956-ffa450edef68"
6b5164170a9d68eb85174559171365dc01befd8e,"Additional changes to enable encryption and unit tests. Additonal network
server tests. Updated testing README.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156067 13f79535-47bb-0310-9956-ffa450edef68"
6a0a913734c48ab5b4656400ef634372eabeeee2,"Remove Cloudscape references in testProtocol_app.properties


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156077 13f79535-47bb-0310-9956-ffa450edef68"
72b444b7fdc1f662f44d54babd897d8d0118cff9,"cosmetic, cleanup javadoc tags

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156129 13f79535-47bb-0310-9956-ffa450edef68"
bfdc503ac8402231aac2ed395c7b44ccac39bdc3,"Fix up encryptionKey master   contributed by myrna


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156205 13f79535-47bb-0310-9956-ffa450edef68"
541dd2e637aec6bf872b13e8d40ccf579e710f73,"Derby-107: Add or change metadata support for ODBC.

Submitted by Army Brown(qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156209 13f79535-47bb-0310-9956-ffa450edef68"
b9baad478711a05ba8b42ffee0cf4755956b9880,"Check in jakarta-oro-2.0.8.jar and javacc.jar so that users do not need to
download them.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156215 13f79535-47bb-0310-9956-ffa450edef68"
318351e7d06557096286089237feac5896e2724e,"use spec jars from Geronimo so users don't need downloads from Sun

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156219 13f79535-47bb-0310-9956-ffa450edef68"
cc9db71d30b6b8bcde490cbe3aaa5b74a7840626,"not needed now there are jars in this directory

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156227 13f79535-47bb-0310-9956-ffa450edef68"
5d350ce92a1412246ccccb0f0b5dcf31e82e4998,"don't ignore these any more

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156228 13f79535-47bb-0310-9956-ffa450edef68"
181c1277491cb6e2e16fb16674e8663b0632a490,"Move autostart into derbynetmats suite and out of its own suite.

Fix for client xa jdk131



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156229 13f79535-47bb-0310-9956-ffa450edef68"
c36ed33849461d4b12d4e815e6a1c7a743259f8a,"resurrect empty.jar

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156234 13f79535-47bb-0310-9956-ffa450edef68"
02e0ae52a866216193e375fbd646ceb1fae62db3,"Fix for DERBY-158 PRIMARY KEY does not imply NOT NULL
Columns specified in a PRIMARY KEY constraint in CREATE TABLE 
are implicitly set to NOT NULL per the SQL spec. 

If a PRIMARY KEY constraint is added using ALTER TABLE then all
columns must also be NOT NULL. Similarly, columns
specified in a UNIQUE constraint must still be explictly NOT NULL.

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156570 13f79535-47bb-0310-9956-ffa450edef68"
91eacada386cae35d90db0087fbfff97b5a5793b,"Tests and master updates for client



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156648 13f79535-47bb-0310-9956-ffa450edef68"
eedfb2d36686bb2d20c24677643f754546251a14,"Add runall file for propertyinfo suite.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156713 13f79535-47bb-0310-9956-ffa450edef68"
07a2bbbade232e61098816dc4c74a23bfb879496,"Set eol:style on propertyinfo.runall


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156717 13f79535-47bb-0310-9956-ffa450edef68"
8030daedc69730f20564435e8206eb9af0fd5f21,"Fix svn:eol-style property on store tests.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@156719 13f79535-47bb-0310-9956-ffa450edef68"
dc794ee84ed6f1e27aec58d36cf17636948d4af8,"Remove unneeded sections from BUILDING.txt due to recently checked in jar files


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157009 13f79535-47bb-0310-9956-ffa450edef68"
84a9d6385287a63c0aab73c401f858dc23214d54,"Derby 169: Derby Network server needs to return FALSE to metadata API calls: othersUpdatesAreVisible, othersDeletesAreVisible and othersInsertsAreVisible

Submitted by Mamta Satoor. (msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157015 13f79535-47bb-0310-9956-ffa450edef68"
f1d4e9d7213bc062271dce751a3f21bc83d77f2b,"Modify column and table name display in error messages
to match the name in the SQL statement.
Pre-cursor to Derby-18 patch.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157032 13f79535-47bb-0310-9956-ffa450edef68"
b19650019809b71aeee24f6f1dfb0aa17e8a79b0,"Update masters for client



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157136 13f79535-47bb-0310-9956-ffa450edef68"
919b5ba1b43bafeb55852dbacbb59673a4c4517e,"Master update for network client odbc_metadata test



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157519 13f79535-47bb-0310-9956-ffa450edef68"
020c39e42181f3c409afab81f04c5a4449884c0b,"Changes for Derby-18 - Exposed name matching has bugs when the column
name is qualified with a schema name.
Contributed by Shreyas Kaushik <Shreyas.Kaushik@Sun.COM>
 


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157591 13f79535-47bb-0310-9956-ffa450edef68"
65ade681662ee778151301c235f73f86955d662d,"Support update operation on updatable ResultSets.

Submitted by Mamta Satoor (msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157592 13f79535-47bb-0310-9956-ffa450edef68"
41e28060826cf3f852863271201889b4fcf9bfef,"More test and master updates for client for URL format



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157804 13f79535-47bb-0310-9956-ffa450edef68"
13066ee119113808b0e7635943db16105c76b140,"Several Test updates:

- enable .java type tests to be used with the usesystem property in harness/RunTest.java.
- modify the tests/storetests directory's build.xml to compile any possible .java tests
- modify the tests/storetests/st_b5772.sql to drop a table
- remove a weird char from tests/derbynet/testProtocol_app.properties file
- add one j9 specific canon & remove another to match up to current test behavior

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157825 13f79535-47bb-0310-9956-ffa450edef68"
b223f72332ca030737b21c4be8f0f2b664ac5038,"committing change by Jack Klebanoff (klebanoff-derby@sbcglobal.net).

Fix for DERBY-106

This change fixes the BackingStoreHashTable class to actually spill
over to disk when necessary.  Prior to this fix it was possible for
hash joins to fail with out of memory errors, when they should instead
have spilled to disk.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@157861 13f79535-47bb-0310-9956-ffa450edef68"
9c66e1d11e1a976947b219d4f19baa9f147f26d6,"Master update for client



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@158214 13f79535-47bb-0310-9956-ffa450edef68"
8c6847db3df296d247994746aed065d18a85ff84,"Derby  173 For the concurrency of ResultSet, Network Server should not send the concurrency of Statement.

	contributed by Mamta Satoor


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@158260 13f79535-47bb-0310-9956-ffa450edef68"
7a9e03a1e7be827c75400fa1659c109d0746ddaf,"add updateable resultset test for network server
	contributed by Mamta Satoor


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@158640 13f79535-47bb-0310-9956-ffa450edef68"
ce42f2e306a966237dcd5fc91fd2049810a3123f,"Add test for setTransactionIsolationLevel



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@158663 13f79535-47bb-0310-9956-ffa450edef68"
22cd12599ff0561bf7fd57e96df68c70bc8009a5,"disable setTransactionIsolation for now 


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@158681 13f79535-47bb-0310-9956-ffa450edef68"
4921666baa99d50884c8a833463f7089764dbe08,"Enable negative test for scroll sensitive updatable resultsets.

Submitted by Mamta Satoor. (msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@158821 13f79535-47bb-0310-9956-ffa450edef68"
4d2936b48d65a440d3f6443b362d9fa8fbb6a312,"Derby-157: Catch Illegal values for date, time and timestamp.

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@158935 13f79535-47bb-0310-9956-ffa450edef68"
f98efa1a7266d755a833cfb221231df4e10af33e,"Checkin for client setTransactionIsolation 
If no isolation level is in the section number sent from the client, 
use current isolation level.
					
Kathey Marsden


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159041 13f79535-47bb-0310-9956-ffa450edef68"
ccae4bc27161bc57acc9f077a58214ff9e0cd1b4,"Contribute internationalization tests to Derby.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159081 13f79535-47bb-0310-9956-ffa450edef68"
29efd1520d498a492168c6a41d3bfb1ab2631e75,"Correct location of testing readme in BUILDING.txt


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159083 13f79535-47bb-0310-9956-ffa450edef68"
1849e37913bdd01647a007006358025b83f83c0b,"applied patch from David Van Couvering for DERBY-184

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159114 13f79535-47bb-0310-9956-ffa450edef68"
3f0e264032c9fd980e465d164e8886286e8bf925,"Client master updates. Isolation not associated with the statement, but the connection per JDBC, so not encoded in cursor name


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159335 13f79535-47bb-0310-9956-ffa450edef68"
534b0378f5a26eb29c2f75b409f831965969e1a3,"Derby-174 & Derby-175: Make setNull work with Timestamp and Blob datatypes.

Submitted by Shreyas Kaushik (Shreyas.Kaushik@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159445 13f79535-47bb-0310-9956-ffa450edef68"
297238fb436e478c67b2772514b280b448d419ec,"Add new test case to jdbcapi suite.

Submitted by Shreyas Kaushik (Shreyas.Kaushik@Sun.COM)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159474 13f79535-47bb-0310-9956-ffa450edef68"
5cfc3f501d25ab5e3133783f168a0e617e943f52,"Fix messageLocale test by adding appropriate files to derbyTesting.jar

			contributed by myrna


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159494 13f79535-47bb-0310-9956-ffa450edef68"
d609ee3af0fc89b1e4ddcc8b9ce925734517e712,"committing change for Suresh:  suresh.thalamati@gmail.com

Attached is a first patch towards implementing checksum support for transaction
log to handle out of order incomplete log writes during recovery.  This patch
is based on writing a checksum log record that contain checksum information for a
group of log records in the log buffers. Please refer to Derby-96 in JIRA for
more details.

Testing : Ran derbyall test suite, all tests passed.

Changes in this patch addresses writing checksum information to the transaction
log before the log records are written and verifying the log at recovery time
using the checksum information on the disk.

Writing Checksum Log Records:
Checksum log record contains checksum Algorithm, size of  the data  and the checksum value.
Added a new class to implement this log operation.

The checksum Log record is placed before the actual log data the checksum
record represents. This is done by reserving the space in the log buffers and
in the log file then writing into reserved buffer space the checksum log record whenever
buffer is full or it need to be written because of a flush request due to a
commit. Incase of a large log records that does not fit into a single log
buffer, the log records are written directly to the log file, in this case
checksum log record represents only one log record and it is written to the
log file before writing the large log record directly into the log file.

In the current system the log group information is encrypted when a database
is encrypted. There is no facility to identify that a log record is checksum
log record without decrypting the log record. Checksum Log Record is also
encrypted to work correctly with the rest of the system.

changed files: LogAccessFile.java, ChecksumOperation.java, LogToFile.java

Verifying the Log:
During recovery, while doing forward scan whenever scan finds a checksum record,
it reads the amount of the data specified in the checksum record , calculates
the checksum for the data and compares it to the checksum value in the log record. If the on
disk checksum value does not match with the value recalculated then that
portion of the log is assumed as incompletely written and the record before the
checksum log record becomes the last valid record for the recovery.

changed files: Scan.java

Unit Tests:
Enhanced a existing  recovery unit test with test cases that simulate out of
order incomplete writes by  corrupting the end of the log intentionally.

changed files: T_RecoveryBadLog.java

functional tests: current backup and recovery tests checks all cases where
checksum should be valid.

To Be Done:
0) Handle Soft upgrade from old versions.   1) Check  for any timing issues between Checkpoint Thread and Checksum Log Record writes.
2) Check  for any timing issues between Checksum Log Record writes and the backup/restore.
3) Performance Testing
4) Write a  JDBC level functional test with large log records(>32k> incomplete log writes.
5) Any thing else that I find  while testing :-)


Thanks
-suresht 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159651 13f79535-47bb-0310-9956-ffa450edef68"
da8930ff8912a9b8f721cb1892ac85d144cdc6d7,"Missing file from suresh's checksum checkin



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159659 13f79535-47bb-0310-9956-ffa450edef68"
9b9afa95fea845c1945fcaf98cc1adaf4881209c,"Master updates for derby client



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159689 13f79535-47bb-0310-9956-ffa450edef68"
3bf50a381ac7d43aca8fe80ce0dd4fccf99e9598,"Enable missing test for client



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159730 13f79535-47bb-0310-9956-ffa450edef68"
a15163cfefd7d229afe063d2d6b5dd5c8b583c27,"Derby-134: Improvement to allow ordering by expressions, instead of correlation names or column positions only.

Submitted by Tomohito Nakayama. (tomonaka@basil.ocn.ne.jp)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159746 13f79535-47bb-0310-9956-ffa450edef68"
91fb0f817218b8f39c7449059d0f092cd447bcdf,"Move some updatable Resultset checking to compile time, instead of at runtime.

Submitted by Mamta Satoor. (msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159758 13f79535-47bb-0310-9956-ffa450edef68"
ed649c6c08e887b2bf824bbd7b693413f66612c4,"Add properties and out files for new recoverBadChecksumLog unit tests.

Committed for Suresh Thalamati <suresh.thalamati@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@159985 13f79535-47bb-0310-9956-ffa450edef68"
1fbb816f20e33ab469b210c73dccedddc0bc6d06,"Set svn:eol-style on three masters.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160103 13f79535-47bb-0310-9956-ffa450edef68"
5112b509e749bcc8ae54ee82402dbccf87265969,"Derby-186: Set currentPosition for scrollable cursors when moving past the last row.

Submitted by Shreyas Kaushik. (Shreyas.Kaushik@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160247 13f79535-47bb-0310-9956-ffa450edef68"
b7ad78764f11de28c36f1311031ee44909dbc321,"Submit master updates and test harness change to not require user   



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160358 13f79535-47bb-0310-9956-ffa450edef68"
2801b1347bd9b4d3175405a3d8d1e467f447e50b,"Missed file with harness checkin to not send user id for client tests



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160372 13f79535-47bb-0310-9956-ffa450edef68"
a9b4b8da2d191087b51251ee9d44318a7919142a,"Derby-176 (partial) - Added checks when the generated class file's format is created
to ensure the structure is not corrupted by writing truncated values.
E.g. a constant pool count N with N >65535 now will throw an error rather
than generate a class file with an apparent constant pool count of N % 65535.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160426 13f79535-47bb-0310-9956-ffa450edef68"
eb8cf75c52ae419ebfe977ff9e75dd8d67a2e80c,"Take debug and optimize flags out of compiler properties so that setting the
sanity state properly sets these flags. Also, fix typo in RunTest so that
-Duseprocess=false option works again.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160427 13f79535-47bb-0310-9956-ffa450edef68"
188032285c5242e628dbaba5e9ddd5972c095b92,"Derby-176 (partial)

Reduce the number of constant pool entries in code generation by removing some uses of java fields.

In the binary operator nodes code is generated like

<left>.method(<left>, <right>)

where <left> and <right> are arbitary expressions.
In this case <left> must only be evaluated once and the existing implementation used Java fields.

DataValueDescriptor f34;

f34 = <left>;

f34.method(f34, <right>)

The issue is that a field is not required, really a local variable is,
and a field and its use will create three unique constant pool entries.
However local variables are not supported by the byte code compiler currently.

The stack based code generation allows the use of the stack through MethodBuilder.dup()
method to evaluate <left> once and re-use the result.
E.g.

<left>
dup
<right>

leaves the stack as left,left,right which is the correct order for such a method call.
The use of MethodBuilder.swap() allows the same pattern when <right> needs to be re-used in <right>.method(<left>, <right>)

<right>
dup
<left>
swap

leaves right,left,right on the stack.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160429 13f79535-47bb-0310-9956-ffa450edef68"
b9dfa64a8c39b6348d2cb8deacf86571d853576b,"Add modified test code largeCodeGen.java from Derby-176 into trunk, to allow easy running.
Test is not part of the suites or expected to be run as a test yet. It is useful for
working on Derby-176


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160438 13f79535-47bb-0310-9956-ffa450edef68"
673d33b5c09502eae10b7015bd29513061c85326,"Derby-198 Add USERID only security for Network Server



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160439 13f79535-47bb-0310-9956-ffa450edef68"
d6e8491abaacb2da8b4fcd30c4144b37ada392b5,"Derby-167 (partial)
Add pop() method to byte code compiler.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160444 13f79535-47bb-0310-9956-ffa450edef68"
eb6529604118b300033e5b700a7544214287935e,"Modify 3 tests and their expected output files - jdbcapi/LOBTest, jdbcapi/odbc_metadata, and 
lang/updatableResultSet.java - to overcome some false failures when running with newer versions of 
the IBM Universal Driver.

Committed for Myrna Van Lunteran <myrna@golux.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160466 13f79535-47bb-0310-9956-ffa450edef68"
f873863331d884d8d0a33cc174bc1b38e4ece488,"Derby-176 (partial)
Change generate fields to use the same name space as
generated methods to reduce the number of constant pool entries created.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160580 13f79535-47bb-0310-9956-ffa450edef68"
d30bf1c4067615d29b99f13281329d7aa302e731,"Derby-176 (partial)

Automatically handle a generated method exceeding the
byte code limit of 65,535 in limited cases of a method
with no parameters and whose stack depth drops to zero
during code generation. Solution is to generate sub methods
with the same signature and pass control to those methods.
The sub methods are private and hidden to any callers, who
just interact with the single top-level method.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160631 13f79535-47bb-0310-9956-ffa450edef68"
503a5916708a3cafdcba6a367df47a3691ee8c56,"Disable new test jdbcapi/testRelative.java for network server until issues can be resolved with running it under network server


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160637 13f79535-47bb-0310-9956-ffa450edef68"
70934236bae290ffbe97dc494237a87eface985f,"Some client master updates



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160650 13f79535-47bb-0310-9956-ffa450edef68"
afa871ea2d742c97368d0dcc84a1fdaa3769502d,"Derby-176 (partial)
Reduce the number of code instructions generated for a putField() followed by an endStatement()
by providing a setField() method that sets a field with the top value of the stack but does not
leave the field's contents on the stack. The use of putField() mimicing the Java language field=value;
lead to many cases where the value on the stack was not required and immediately popped using endStatement().
This lead to two extra instructions per field assignment (dup and pop), providing a setField() removes the
need for the endStatement() as it never performs the dup.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160932 13f79535-47bb-0310-9956-ffa450edef68"
36d3bed1eabc4ef34a9b5caa94ed25c1799aaad8,"Add some comments for upgraded related methods and new constant
for the 10.1 database format. This constant will be used in a future submission.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@160935 13f79535-47bb-0310-9956-ffa450edef68"
26ea21996f27d7b851d78aa491e6ab64b646bbb8,"Checkin test changes and master updates for Army Brown


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161021 13f79535-47bb-0310-9956-ffa450edef68"
ce773cfa13d9ee669a9ab1df07ccc3996f4b10bf,"Test setDescription for network server



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161022 13f79535-47bb-0310-9956-ffa450edef68"
7b302c5528a5bb33cbb73500586d032c1ec37748,"Allow the user to specify the host/port on the command line
or via the variables DERBY_SERVER_HOST and DERBY_SERVER_PORT
in startNetworkServer and stopNetworkServer scripts.

Committed for Lance Anderson <Lance.Anderson@sun.com>

Also, set svn:eol-style native on all the scripts.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161070 13f79535-47bb-0310-9956-ffa450edef68"
c610e54552d29862fc7ca78c2808980cfe9191df,"Set svn:eol-style native to updatableResultSet.java and updatableResultSet.out files.

Requested by Myrna van Lunteren (m.v.lunteren@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161076 13f79535-47bb-0310-9956-ffa450edef68"
86be8370d910665395663fc73a44f7137c297eaf,"DERBY-153: Fix Eclipse plugin version specification.

Committed for Rajesh Kartha <kartha@source-zone.org>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161100 13f79535-47bb-0310-9956-ffa450edef68"
bbc927cf0f76893a5c0e351bacd81e1847c8b1ac,"The following is the 1st phase of a checkin to address DERBY-132 - improvement
request to add an inplace compress.

This checkin addresses the issue in 3 parts:

1) Code has been added to purge committed rows from heap tables.
This code uses the same basic algorithm to identify and purge
committed deleted heap rows that currently exists.  It scans the
entire heap table in the current thread processing all rows.

2) Code has been added to defragment remaining rows in the page, freeing
pages at the end of the table.
This code scans the table and moves rows from the end of the heap table
toward the front of the table.  For every row moved all index entries
must be updated after the move.  The allocation system is updated to
put new rows toward the front of the table.  After it is finished there
will be a chunk of empty pages at the end of the file.

3) Code has been added to return the free space at the end of the table
back to the OS.
Finds the chunk of empty pages at the end of the file.  Updates the
Allocation data structures to remove the chunk of pages at the end.
Calls the JVM to return the space at the end of the file back to the
OS.

In order to test all of these paths a new system procedure,
SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE has been added.  Eventually
as a zero admin database the system should call this routine internally.
It allows each of the 3 above described phases to be called either
individually or in sequence.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161468 13f79535-47bb-0310-9956-ffa450edef68"
748de48a7efd3d99e8fa7141445b5411bbc334f6,"working on this test, real version will be in the storetests directory.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161814 13f79535-47bb-0310-9956-ffa450edef68"
e7aa8e11d4c19e5b308c7e5443dc0d30767293d7,"continuing online compress work, remove debug statements.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161965 13f79535-47bb-0310-9956-ffa450edef68"
41a08266471fe439de32a908032eb77f33e9d806,"online compress work, javadoc fixes


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161967 13f79535-47bb-0310-9956-ffa450edef68"
26eaeccb27933d11ca33ecdb919709bf87d2edb2,"javadoc fix.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161969 13f79535-47bb-0310-9956-ffa450edef68"
c299ebf5fc476c12a32b2d2207c98bbf6a4d02fc,"javadoc fix, can't refer to #checkpoint



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@161974 13f79535-47bb-0310-9956-ffa450edef68"
491b0cb47f48c2ebce30f508895e44b4dcbea9ee,"javadoc fix.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@162077 13f79535-47bb-0310-9956-ffa450edef68"
66c825f4fe38f135611f32e604c541b6eddce331,"Derby-219: Address NullPointerException when INTERSECT is used in a view or subquerries.

Submitted by Jack Klabanoff(klebanoff-derby@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@162098 13f79535-47bb-0310-9956-ffa450edef68"
8edb130ded13ac8f3b424adbe4be97a042a91cc2,"Fix testRelative intermittent diff
	contributed by 	Shreyas Kaushik


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164027 13f79535-47bb-0310-9956-ffa450edef68"
f5b19f3c93938f92f88e320962bb66583182d719,"javadoc fixes, fixing some typo's in parameter names.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164084 13f79535-47bb-0310-9956-ffa450edef68"
1cd0a1482469deedf68ec646f946f111df1da74e,"more javadoc cleanup.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164091 13f79535-47bb-0310-9956-ffa450edef68"
d1d5ad1564081dcb1b4a4284e33c50c1bd9318ef,"javadoc warning fixes.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164264 13f79535-47bb-0310-9956-ffa450edef68"
b69c0b7e0cc9baa1fb448327d66d0a872c87dcae,"Cleanup in SQLDecimal to explictly call the static getWHoleDigits method
using SQLDecimal.getWHoleDigits as a prelude to fixing Derby-225.
Fix minor error in NumericContstantNode where a String is obtained from
a DataValueDescriptoor using toString() but the correct method for the type
system is getString(). toString() may return debugging info, some implementations
return ""NULL"" for a null value, where getString() correctly returns null.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164266 13f79535-47bb-0310-9956-ffa450edef68"
703bc915f7fa19a0ccebdacaf9fb4242d7514b24,"Add language upgrade support from 10.0.
Add property derby.database.allowPreReleaseUpgrade to allow testing of
upgrade code while the code is marked as alpha/beta.
Add upgrade check for routines with method signatures to ensure such
routines cannot be created while running in soft upgrade mode against 10.0.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164269 13f79535-47bb-0310-9956-ffa450edef68"
7010e1dcc6d2d26aa1577903d71967433d96108e,"Change tests and masters to cleanup after each test. Without these, some tests fail on some versions of JCC.

Submitted by Army Brown.(qozinx@sbcglobal.net) 


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164284 13f79535-47bb-0310-9956-ffa450edef68"
d56d55a9e5b74141cc140157349dcb94ad6b10fd,"Derby-228: Address two issues with the Derby manifest file for OSGi support.
- the Bundle-version number should change with each build
- Import-Package does not need import java.sql



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164627 13f79535-47bb-0310-9956-ffa450edef68"
6f3545101dc45d22f5873dc3af96d77e96b1bd74,"Derby-233: Fix copyright header in files in java/demo, and cleanup other
IBM/Cloudscape references.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164629 13f79535-47bb-0310-9956-ffa450edef68"
df69fccfc97141ef0db24f6d51a1a45e7563915d,"Set svn:eol-style native on java/demo files


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164630 13f79535-47bb-0310-9956-ffa450edef68"
2dd0b6fdbee48b6b8ecef658e93bf49f87a2ed34,"Address DATE and TIMESTAMP builtin function changes to match with Documentation.

Submitted patch from Jack Klebanoff (klebanoff-derby@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164873 13f79535-47bb-0310-9956-ffa450edef68"
937bebf3d46aaa4f4ef43f9d74f9dd47ab0ae7ce,"Enhance the test harness' excludeJCC property in two ways.

- Instead of excluding versions of JCC based on number only, also support two
  new keywords: ""at-or-before"" and ""at-or-after"" to provide more flexibility
  in specifying exclusions. e.g. excludeJCC=at-or-after:2.0 
- Allow for specifying JVM levels to be excluded with the additional tag
  "",when"" followed by a three-part JVM level. In this case, a test will only
  be skipped if both the JCC clause and the JVM clause are true. e.g.
  excludeJCC=at-or-after:2.4,when-at-or-before:jdk1.3.1 will skip a test if
  the version of JCC is 2.4 or greater, but ONLY on JDK 1.3.1 or earlier.

Committed for Army Brown <qozinx@sbcglobal.net>



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164884 13f79535-47bb-0310-9956-ffa450edef68"
f40b4e3c788482809befbedd4155ca4139e37041,"Skip messageLocale.sql on JDK 1.3.1.

Committed for Myrna Van Lunteran <m.v.lunteran@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164903 13f79535-47bb-0310-9956-ffa450edef68"
fac19bda0c7b3cebb8ab6be4a778f3be85cac87d,"Improve test sed properties to better filter different JCC versions.

Committed for Army Brown <qozinx@sbcglobal.net>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164923 13f79535-47bb-0310-9956-ffa450edef68"
c2afcc17cd2377c65deeebb7dfde3dbb76d47bcc,"committing upgrade change related to DERBY-96 for suresh.thalamati.suresh.thalamati@gmail.com

Attached is the  new  patch  with the suggested changes to make
softupgrade correctly with the  transaction log
checksum feature in 10.1 Added  checkVersion() method  to log factory it
self,  becuase that is where
the  version numbers are read  from  from the log control file , but did
not export the call it to  the
rawstore factory  as it is not needed now.  (This can be done easlily
when there is a  need for upgrade
checks  in the other store modules..) 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@164994 13f79535-47bb-0310-9956-ffa450edef68"
f467386e470ecefda3c35f39e611e2608446fc70,"Fix typo in DBMSnodes.properties


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165013 13f79535-47bb-0310-9956-ffa450edef68"
7a4afeac76c2c68a23ad9e802e9b023df933d52c,"cleaning up some store javadoc issues.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165023 13f79535-47bb-0310-9956-ffa450edef68"
e1ab22d2698ce6060f150b033602cb9e59a6f295,"taking compress test out of nightly until test timing issue with
post commit delete reclaim issue is resolved.  Test is intermittently
getting a diff in number of btree index pages due to post commit
activity.  Investigated and determined it is a test issue, not a bug.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165024 13f79535-47bb-0310-9956-ffa450edef68"
2b833bab8befc1c53ba8f71f6e87d2884f2e12da,"Add some an upgrade test, more framework at this point.
Look at the shell script java/testing/org/apache/derbyTesting/upgradeTests/runphases.ksh
for instructions on how to run.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165157 13f79535-47bb-0310-9956-ffa450edef68"
75b112d99e9ee260650ac60adc1695c0d20d46aa,"more store javadoc fixes.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165169 13f79535-47bb-0310-9956-ffa450edef68"
33776ff2617cb9f68e46ef9f10e755e7a44939de,"Submitting Derby client. Derby client is a type 4 JDBC client driver, designed to work with Derby network server.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165178 13f79535-47bb-0310-9956-ffa450edef68"
0c3ecd8288cb6e8944021aca872c1eae10ba7e9a,"Add snapshot target to trunk build.xml


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165185 13f79535-47bb-0310-9956-ffa450edef68"
ce01ac2d956ebb0f0640dd2e2763b331335e4c53,"Update README file in testing directory, with information on how to run tests with Derby client.

Submitted by Myrna Van Lunteren (m.v.lunteren@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165211 13f79535-47bb-0310-9956-ffa450edef68"
f57cc5dddb813ad6f96d2fd69c761daf10cd0dc5,"Update derbyall test suite to include derbynetclientmats suite.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165268 13f79535-47bb-0310-9956-ffa450edef68"
20bc69f1a46c101129c5e4c2e28e70e339ab497b,"javadoc cleanup for the store.raw.data module.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165358 13f79535-47bb-0310-9956-ffa450edef68"
70f769236e733023a3a5d87c225f93212ff0c3f7,"cosmetic - reformat code with a consistent style

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165585 13f79535-47bb-0310-9956-ffa450edef68"
47e6fb7f23ae68bdd7bc6c9b63540bf0ce8dc240,"committing this patch for DERBY-235 for suresh.thalamati@gmail.com

Problem was service name on database creation  was getting just set to the canonical name of the database directory
without subsub protocol name added in the beginning. Whereas rest of the system seems to expect that the
subsub protocol name  also is part of the  service  name.  For example if ""csf"" is  subprotocol name ,
service name should be  ""csf:C:\suresht\databases\wombat1"" not just ""C:\suresht\databases\wombat1"".
Attached diff fixes the problem by  prefixing the subsub protocol name  to the canonical name, to generate
the service name in the case of create also.

This was not an issue with default ""directory""  subsub protocol because the system consistently generates
the service name as just the canonical name of  the service root.

Another doubt I had while fixing this issue why we generate the service name after creating the service root,
my guess is because of the following comment in the java docs for java.io.File.getCanonicalPath() method:
"" Every pathname that denotes an existing file or directory has a unique canonical form. Every pathname that
denotes a nonexistent file or directory also has a unique canonical form. The canonical form of the pathname of a
nonexistent file or directory may be different  from the canonical form of the same pathname after the file or
directory is created. Similarly, the canonical form of the pathname of an existing file or directory may be different from the
canonical form of the same pathname after the file or directory is deleted.
"" 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@165645 13f79535-47bb-0310-9956-ffa450edef68"
1ccdf3e1a875415c5293e832cae6c1c919c80857,"Fix Derby-225 - Handle negative scale values for BigDecimal values introduced in J2SE 5.0.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@167832 13f79535-47bb-0310-9956-ffa450edef68"
1cb533f35222e0a7fe23118907a9e99af5882723,"apply patch from kmarsden for Derby-250

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@167863 13f79535-47bb-0310-9956-ffa450edef68"
06dbbcfe91a11a9594b91609ef1b40c44e0e88f1,"checking in more progress on inline compress tests, and up to date fixes.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@167880 13f79535-47bb-0310-9956-ffa450edef68"
e3647c104f6384e49bd9c756c0f290c9f62c24d5,"enhancing online compress testing.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@168025 13f79535-47bb-0310-9956-ffa450edef68"
2ec9d1c197c5314fb30487a4dcc82b04456ac380,"Derby-242: Make DatabaseMetadata.supportsMultipleOpenResults() return FALSE.

Submitted by Lance Anderson. (Lance.Andersen@Sun.COM)

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@168176 13f79535-47bb-0310-9956-ffa450edef68"
02d34272b9e241f723040d0b300415cc1bec0621,"code cleanup on client DataSource impls

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@168336 13f79535-47bb-0310-9956-ffa450edef68"
001d07a8d4151b64fd199fe34d4750e3e6e978d0,"move all generic implementation into ClientBaseDataSource

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@168355 13f79535-47bb-0310-9956-ffa450edef68"
9d34086a962d7cadca6ba344256f4ac91540c04e,"Provide common setValue(byte) and setValue(short) methods for
numeric types that simply convert using an int.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@168365 13f79535-47bb-0310-9956-ffa450edef68"
f2ee915aad70047e2a595a76aed5c3a8a096e910,"javadoc fixes to the store interface directory.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@168421 13f79535-47bb-0310-9956-ffa450edef68"
563eb578416833d606646d32a4c0c4ca6be48b12,"Additional tests for Derby-250



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@168645 13f79535-47bb-0310-9956-ffa450edef68"
965be700e2859b4ad642d59ded025cdb02e69b58,"DERBY-132, inplace compress.  Add btree truncate support.  Enhance OnlineCompressTest.java test.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169492 13f79535-47bb-0310-9956-ffa450edef68"
43261ea43ecc03a1506b4c1ce9cca69aeafaf15a,"committing fix for DERBY-237 for ksunithaghm@gmail.com.  

This patch fixes derby-237: Boot errors from store must not lose error messages/stack traces in between.

Actually nested exceptions from the boot error were not lost but their stack traces were not being written out into error stream which is why the entire stack traces of exceptions was not printed out to derby.log



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169501 13f79535-47bb-0310-9956-ffa450edef68"
ce814b05d9aacffaa148c46376f96a8982fce1b5,"Derby-263: Remove UNICODEESCAPE IJ option.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169502 13f79535-47bb-0310-9956-ffa450edef68"
ab857f5f39da58723844d98b9f550c77eca624dc,"Add a new master file that is specific to JCC 2.6, so that the parameterMapping
test will pass both against 2.6 (using the new master file) and against earlier
versions (using the old master file).

Committed for Army Brown <qozinx@sbcglobal.net>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169532 13f79535-47bb-0310-9956-ffa450edef68"
3108420e7ff549aeb7a3d8a78e15957702ed2146,"committing patch for DERBY-218, relaxed durability option - 
for ksunithaghm@gmail.com.

A little background: Sometime earlier on the list, Dan posted a fix to make derby go faster with relaxed durability with some flags.  The post is at http://article.gmane.org/gmane.comp.apache.db.derby.user/681/match=relaxed+durability
This mode is very useful for unit testing or at development time when recoverability is not required.
Basically in this mode, syncs are disabled for logs, data writes at checkpoint, page allocation when file is grown; - what this means is that data is not flushed all the way to the disk and in most cases i/o cost is not involved. Note,  code already exists in Derby to do this.
So for Derby 218, This  patch addresses the following requirements:  1) Have a single property to enable this relaxed durability mode, so it is easy for users  to enable it.
2) Print message to derby.log that this mode is enabled
3) A way to report boot errors that may be because of this option being enabled. What this maps to is - have a marker to recognize that database was booted in this mode, and then on subsequent boot; if errors happen during recovery - report a message that it could have happened because of this mode being set. 

Thanks Suresh for your comments.  I have attached a new patch that takes care of them and as well as the property name change as discussed on the list.

So now,
1)To enable this no syncs mode, the property setting  is derby.system.durability=test  If it is set to any other value other than test, then this property setting is ignored and the system will default to the usual mode where all syncs happen correctly.
2) If database is booted in this mode then the  flag  to indicate this mode is being used is set in log.ctrl file and it will not change after that.Thus there wont be any switching between this mode ( no syncs) to default ( all syncs) mode because we cannot guarantee that the database will be in a consistent state once its booted in this no sync mode..
3) This  flag is now written out as part of the log control flags in log.ctrl file instead of using a spare byte. 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169538 13f79535-47bb-0310-9956-ffa450edef68"
dcd9a8e22a6a0f5d0d3b8e7bf96df99952b8e6ba,"test constructor must be public for test harness useprocess=false option to work.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169660 13f79535-47bb-0310-9956-ffa450edef68"
8758a25ac829c55b9eb18c15e3af322321c2bc53,"more store javadoc fixes.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169666 13f79535-47bb-0310-9956-ffa450edef68"
9085abbbef3a3510718355ad050d319d6c48122c,"Rename DB2jServerImpl.java to NetworkServer
			contributed by Dag Wanvik


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169684 13f79535-47bb-0310-9956-ffa450edef68"
929cefb7174a98a997a8c2718985839be69d5d6a,"Rename DB2jServerImpl.java to NetworkServer 
part 2
                        contributed by Dag Wanvik



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169688 13f79535-47bb-0310-9956-ffa450edef68"
ef20e7a56c537d815ea1d8392671dec6d863ff81,"Derby-251: DISTINCT query returning duplicate rows because of incorrectly applying distinct elimination logic.

Submitted by Mamta Satoor (msatoor@gmail.com)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169735 13f79535-47bb-0310-9956-ffa450edef68"
37551192875f19503ab377a961d0e2bada2c5599,"committing tests for DERBY-96 for suresh.thalamati@gmail.com

Attached  are some  functional tests to test the transaction log checksum feature (Derby-96).
Log corruption is simulated using a proxy storage factory that allows corruption of
the log write request before being writing to the disk.  CorruptDiskStorage factory by default forwards
all the request to the underlying disk storage factory  except when corruption flags are  enabled.

Recovery tests need to  boot the same database many times and have to use the
different Subprotocol to enable the corruption instead of the default protocol. This seems to be
possible only  by adding  a new tests suite in the current test frame work.  Added a new suite
called ""storerecovery"" , may be all future recovery tests can be added to this suite.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169737 13f79535-47bb-0310-9956-ffa450edef68"
baadbdeab8d17ca1b201c7ef246f4495a52e310f,"Derby-127: Handle the case of select statements that use a correlation names
   in the select list, a group by clause, and an order by clause that refers
   to a column by its database name instead of its correlation name. (Eg:
   select c1 as x from t where ... group by x order by c1)
Derby currently throws an exception with SQLState 42x04.

Submitted by Jack Klebanoff (klebanoff-derby@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169744 13f79535-47bb-0310-9956-ffa450edef68"
4a0b58095636063db1910c8acdec80cedb088027,"fix to one of the test cases, allocation count was off - new ""before""
count had to be called after insert/delete calls.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169832 13f79535-47bb-0310-9956-ffa450edef68"
b57ee34e47320aa77f1c86735db6f4db333c1644,"Fix Derby-189


I have a new patch for this bug which also fixes the problem you
brought up with sql select * from a.t as X. The fix for this required
change in impl.sql.compile.FromBaseTable's method genResultColList().
I changed the code such that we set the TableDescriptor on the
ColumnDescriptor instance. This TableDescriptor is later used by
ResultColumn.getTableName to get the base table name of the column. In
addition to that, I changed ColumnReference.getSourceTableName and
ColumnReference.getSourceSchemaName so that they don't look at the
user supplied correlation name (if any) to fetch the base table/schema
name.

Patch contributed by Mamta Satoor msatoor@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169838 13f79535-47bb-0310-9956-ffa450edef68"
12c6ed91a4a2ee7b40fd5dc93ac132fc697179cb,"fixes to derby storage public interface javadoc.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169872 13f79535-47bb-0310-9956-ffa450edef68"
54366745a580dc2e37716cef5464201945ded261,"his patch fixes Derby 236  http://issues.apache.org/jira/browse/DERBY-236 - BootPassword gets written out in plain text in sane mode and in our test environment.

Changes include

1. remove sanity debug code in RawStore to not write bootpassword in plain text into the service.properties 2. currently the test harness does not seem to pass on the encryption related properties to the MultiTest and with change in #1, encryption wont be used for stress.multi. So changes made to  RunTest to pass on the encryption, testEncryptionAlgorithm values to the MultiTest harness. Also changed mtTestCase to recognize the encryption properties and modify the database url to use for the MultiTest.
ran derbyall on jdk142 with no failures
verified that encryption run for stress.multi was running ok, by adding keepfiles=true to encryptionAll.properties and checking the service.properties for all the databases created as part of this encryptionAll testrun. 

submitted by: ksunithaghm@gmail.com



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@169913 13f79535-47bb-0310-9956-ffa450edef68"
5e4cc6fc72d9cf5fe99571de5eeb4a76db4444d5,"Add derbyclient.jar to Eclipse plugin.

Committed for Susan Cline <home4slc@pacbell.net>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170060 13f79535-47bb-0310-9956-ffa450edef68"
b1f84c19ae958159101804d25df6c65e505b983c,"DERBY-104: Increase ALL identifier lengths to 128.

Now all identifiers should have a max length of 128 (note: MAX_USERID_LENGTH is
unchanged).

What has been done:
1) Renamed DBLimit.java to Limits.java since it no longer contains
only DB2-compliant limits.
2) Changed DB2_MAX_IDENTIFIER_LENGTH18/30/128 to MAX_IDENTIFIER_LENGTH
and set it to 128
3) Updated the necessary tests and masters.
4) Extended lang/identifier.sql with positive and negative tests wrt
max id. length.


Fix submitted by Bernt Johnsen. (Bernt.Johnsen@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170069 13f79535-47bb-0310-9956-ffa450edef68"
9cb5bef2e4c4bd404304b4ac19dbe1fc7ffaf57f,"Remove a few more references to old identifier length limits.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170076 13f79535-47bb-0310-9956-ffa450edef68"
073321f13351101de57e22478b3b0d60e9d6f282,"Add multi connection test for identity_val_local() function.

Submitted by Mamta Satoor (msatoor@gmail.com)

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170097 13f79535-47bb-0310-9956-ffa450edef68"
ec2df179a9da2de1c8109dc26fa2e303aad7858c,"committed the following change for ksunithaghm@gmail.com

enhancements to the  TestDurabilityProperty test as a first step  to try to take care of  slow machines where inserts may take longer time than estimated bound in this test.

So if inserts in autocommit mode take more time than the estimated bound, then the test now
--checks if time taken in autocommit on and off are within a close range ( this is because syncs are not happening with derby.system.durability=test mode)
-- if not, then it checks if the time taken to do the insert with derby.system.durability=test mode and without this mode set is within close range, if so it reports a failure with a detailed message explaining the above cases and that the test times the inserts and checks if it within the approximate bounds.

Also note, it will work as expected even if all tests (derbyall)  are running with derby.system.durability=test since this(derby.system.durability) property is explicitly set as needed within the test before booting the database.

The bounds work ok with write cache enabled /disabled on my laptop..  I also tried it out on a slow machine that I have access to and it seems fine. Next, I'll look into adding some kind of acceptable bounds as a percentage of the time taken with this mode set for slower machines.   But if someone notices any issues with the timing on different configurations please post to the list. 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170106 13f79535-47bb-0310-9956-ffa450edef68"
73c3ba2cd560bc61df40b8d39b9a4120028e7432,"This patch fixes derbynet/testSecMec.java  test failure on 131 vms.

Problem - with 131 vms, if server and client are in the same jvm, on a second get connection with create=true attribute in the url, there is a hang.

Basically,
-- the first getConnection works ok
-- but on the second getConnection, a SQLWarning needs to be generated  to say that the database already exists and in this scenario, it seems like at the point where it is creating a SQLWarning , there is a deadlock. The call to SQLWarning constructor does not return. On doing a java core dump , the thread in question seems to be in a wait state (conditional wait).  Guess is it has to do with the driver manager lock

I will file a jira entry to track this issue but for the test in question, changes were made to not use create=true except for the first connection.
-- ran this test for both DerbyClient and JCC driver on both corresponding versions 131,141 ,142 on both IBM and Sun jdks. Also tested it on sun jdk 1.5.0.
-- ran derbynetmats on jdk142 ok.
-- ran derbynetclientmats on ibm131 ok. 
					contributed by Sunitha Kambhampati



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170651 13f79535-47bb-0310-9956-ffa450edef68"
8fbfcc4995e1e2ffb1605d330d4bb829d96a98c6,"Attached is the patch to increase the max possible log files number from 222 -1 
to 233 -1. Derby creates log file names in sequential order by incrementing log
file number by one each time(like log1.dat ....logN.dat).  id's are not reused,
so the last possible log file that can be created currently is  limited to 
222 - 1 (4194303). Problem with this limit is, it can be possible hit on 
systems that creates lot of log records very fast with the default log file 
size (1MB) ,  for example if  1MB of log is created every second this limit 
can be hit in (4194303 / (60 * 60 * 24))  48 days.

Attached fix bumps the max possible log file number to 233 -1 by borrowing some
unused bits in the log file number and log file size fields in the log instant.
With the same assumption as above if a 1MB of log file is created for every
second; it will take ((8589934591 / (60 * 60 * 24))/365)
approximately 272 years; Which I think is a reasonable limit.

I believe the new limit is a reasonable one , and not necessary to solve this 
problem by implementing a complicated solution that reuses the ids, at this 
moment.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170686 13f79535-47bb-0310-9956-ffa450edef68"
ab7bddcea42f2dfd37206acb5fe9a704d3fb581c,"Add test harness class to support WCTME 5.7 running in jcl:foun10 mode.
J2ME/CDC/Foundation.

contributed by Myrna van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170692 13f79535-47bb-0310-9956-ffa450edef68"
45e56befcf32020258a283fb00ae1c2b5c9ae69f,"Update master output for Mamta Satoor.

Mamta says ""I just realized that with the last patch, I accidentally overwrote the jdk13 specific master with jdk14 output. So, please find attached one file update patch which puts the correct master file for jdk13.""

Submitted by Mamta Satoor(msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170695 13f79535-47bb-0310-9956-ffa450edef68"
d898f8f091142fee23ca15561220dd1edc660c25,"DERBY-249: Before this fix, build would break if the source path contained
spaces, at the splitmessages step.

Committed for Dyre Tjeldvoll <Dyre.Tjeldvoll@Sun.COM>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170793 13f79535-47bb-0310-9956-ffa450edef68"
dade3733fcec9b728d40be9c2a29f0d3fd14bc51,"Patch to enhance multiple connection test for autoincrement.

Submitted by Mamta Satoor(msatoor@gmail.com)
 

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170809 13f79535-47bb-0310-9956-ffa450edef68"
40b6a15fca1fa945598b1b6ee601f93f50caec00,"Derby-184: Network Server frameworks scripts should support Derby network client driver

Committed for Lance Andersen <Lance.Andersen@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170821 13f79535-47bb-0310-9956-ffa450edef68"
13371a1389ea17a6d964475b7df36ecd2a2f9d33,"Derby-197: Add tip for Windows users to BUILDING.txt

Committed for David Van Couvering <David.Vancouvering@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170837 13f79535-47bb-0310-9956-ffa450edef68"
5252985a5c2151098dc6ec24947ebd351ceb0721,"Derby-214 Remove System.exit from NetworkServerControlImpl

Patch contributed by David Van Couvering
below are his comments
I relocated the execute method from NetworkServerImpl (previously called DB2jServerImpl) to NetworkServerControl.

I modified derbynet/testconnection.java so that it checks and makes sure the exit status matches what is expected (1 for error, 0 for no error).  



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170862 13f79535-47bb-0310-9956-ffa450edef68"
9f0db4e58b42cd0917f8f7b724b069c1d8a1f91e,"Clean up Sed.java and add more information to README.htm

Committed for Myrna Van Lunteran <m.v.lunteran@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170880 13f79535-47bb-0310-9956-ffa450edef68"
0a5274ca2908bd84f28f12bdec97f82d0322442a,"Cleanup the test harness default_app files to consistently
use ij.database and ij.protocol properties. And
remove use of derby.* properties which should be in _derby propertie files.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@170990 13f79535-47bb-0310-9956-ffa450edef68"
93eecb8cae06188c69179cceb4520938b9090704,"Add information on building and using Derby for Mac OS X. Original patch by
Craig Russell <Craig.Russell@sun.com>.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171003 13f79535-47bb-0310-9956-ffa450edef68"
9ac71d02766a2bd77682ee86548a477e7d8bcdc1,"Consistently use ij.database and ij.protocol in lang/<testname>_app.properties
files and remove derby.* properties not required.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171113 13f79535-47bb-0310-9956-ffa450edef68"
e21adc5ce913087c6b9e31054833d2b816b2d296,"Fix Derby-203 setNull(x,JDBCType.DATE) does not work when batching is turned on

Use explicit setXXX methods for binary, DATE and TIME types when setting
a DataValueDescriptor into a PreparedStatement. Replaced the use of setObject
for these types which lead to un-typed NULLs being set into a PreparedStatement.

Patch contributed by Shreyas Kaushik <Shreyas.Kaushik@Sun.COM>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171115 13f79535-47bb-0310-9956-ffa450edef68"
7f23bfb71c72e9afe38317d0a32632a645e84273,"Add check in the test harness to remove ij.database and ij.protocol
from the <testname>_app.properties file created if ij.dataSource is
set in the system property set. This allows the tests to be run obtaining
the connection from a DataSource specified in the system properties.
Required for testing under J2ME environments where no Driver/DriverManager exists.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171116 13f79535-47bb-0310-9956-ffa450edef68"
6daf45bdaf99e9fd6d8c5db09572d063632eb168,"Cleanup ij code that handles the initial connection opened
from properties such as ij.database or ij.dataSource.
ij.database clearly now overrides ij.dataSource rather
than being somewhat tangled. Allows ij to run in J2ME.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171118 13f79535-47bb-0310-9956-ffa450edef68"
23ddbc8579001252a0fd716bb6d60789b48ca99c,"Alter the way spaces are padded to a column output by JDBCDisplayUtil.
Removes the use of a second StringBuffer and avoids use of a method
not in J2ME/CDC/Foundation.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171119 13f79535-47bb-0310-9956-ffa450edef68"
27fc0da4ede9f4e5acb3da1d7f4072feaa34760c,"Add concrete JDBC classes for JSR169 and tie them
into the build system as optional targets.
They require a jsr169compile.classpath to be set up.
Once I have clean builds for this environment I will
add instructions to BUILDING.txt


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171120 13f79535-47bb-0310-9956-ffa450edef68"
2689e1e4d7333bebdd4bd1985de9629dd23db66e,"Fix timing issue with testconnection.java on Unix platforms. waitFor()
testconnection process to end before calling exitValue() on that Process.

Committed for David Van Couvering <David.Vancouvering@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171164 13f79535-47bb-0310-9956-ffa450edef68"
83793ec039e6a3a73b708f34133e0dc6b569a296,"Remove invalid comment.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171176 13f79535-47bb-0310-9956-ffa450edef68"
f787cd0e534e7dd33c77e05a9e265042997b2c92,"move ClientBaseDataSource to jdbc package so properties can be included in API JavaDoc

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@171242 13f79535-47bb-0310-9956-ffa450edef68"
bfbf650a1df0c7e316a5759b45256e2e2e87b3dc,"Derby-266: Remove unnecessary lines from Sed.java that caused a diff in
tool/dblook_test.java if the test was run in a directory having 'derby'
in its path.

Committed for Myrna Van Lunteran <m.v.lunteran@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@177986 13f79535-47bb-0310-9956-ffa450edef68"
f96f1b4cda7f0f73736511e2202d1be6937ca87e,"Support for Updatable Resultsets in Derby Client.

Following is a brief description of the actual changes that are going into the patch
1) After updateRow(provided updateXXX were issued on the row before updateRow) and deleteRow, position the resultset to right before the next row. This matches the embedded driver behavior.
2)If ResultSet is not positioned on a row and user issues updateRow (w/o prior updateXXX), then throw an exception that it is not a valid operation. This matches the embedded driver behavior.
3)Made changes to DNC so that it does not require all the updatable columns in the sql to be modified with updateXXX prior to updateRow. This matches the embedded driver behavior.
4)To preserve case sensitivity and spaces in the names, put quotes around database object names like table name, column name, cursor name etc. Similar to embedded driver.(Positive Test31a, Test31b)
5)For a select sql like, select 2, c11 from t1, Derby has null for table name and schema name for column 2. DNC needs to check for these nulls to avoid null pointer exception.

Submitted by Mamta Satoor(msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178006 13f79535-47bb-0310-9956-ffa450edef68"
00daaff8ff06456979b319164479f0d28eda9874,"Contributed Eclipse UI plugin source.

Committed for Susan Cline <home4slc@pacbell.net> and 
Rajesh Kartha <kartha@Source-Zone.org>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178020 13f79535-47bb-0310-9956-ffa450edef68"
850798d93a07d398f87db8716fd0c25b2c1193ec,"Update parameterMapping masters for DerbyNet framework.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178032 13f79535-47bb-0310-9956-ffa450edef68"
b0ad765372afc69329e8e9d9a0e3dcca87510dcc,"Derby-167: Add support for BY DEFAULT option to IDENTITY columns.

Submitted by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178053 13f79535-47bb-0310-9956-ffa450edef68"
d365a22163f7cc28d1696e27561d6a8298b94e89,"Derby-81: Add support for JDBC escape functions timestampAdd and timestampDiff.

The syntax is of TIMESTAMPADD and TIMESTAMPDIFF is

 {fn TIMESTAMPADD( interval, count, ts1)}
 {fn TIMESTAMPDIFF( interval, ts1, ts2)}

where interval is one of SQL_TSI_FRAC_SECOND, SQL_TSI_SECOND, SQL_TSI_MINUTE, SQL_TSI_HOUR, SQL_TSI_DAY, SQL_TSI_WEEK, SQL_TSI_MONTH, SQL_TSI_QUARTER, or SQL_TSI_YEAR; count is a numeric expression; and ts1 and ts2 are datetime expressions (date, time, or timestamp). If a date is used in ts1 or ts2 it is converted to a timestamp by using time 00:00:00. If a time is used in ts1 or ts2 it is converted to a timestamp by using the current date.

SQL_TSI_FRAC_SECOND indicates nanoseconds. The other interval names are self-explanatory.

TIMESTAMPADD produces a new timestamp by adding count intervals to ts1. For example
 VALUES( {fn TIMESTAMPADD( SQL_TSI_DAY, 1, CURRENT_TIMESTAMP)})
produces the timestamp for one day from now.

TIMESTAMPDIFF returns the number of intervals by which ts2 exceeds ts2. It is approximately ts2 - ts1. TIMESTAMPDIFF produces an integer. If the actual difference is too large to fit in an integer then an SQLException is thrown. If the actual difference is not an integral number of intervals then TIMESTAMPDIFF rounds to 0. For example

 VALUES( {fn TIMESTAMPDIFF( SQL_TSI_HOUR, {t '12:00:00'}, {t '13:50:00'})},
                   {fn TIMESTAMPDIFF( SQL_TSI_HOUR, {t '13:50:00'}, {t '12:00:00'})}

produces the row (1, -1).

More examples:
 SELECT * FROM t WHERE {fn TIMESTAMPDIFF( SQL_TSI_DAY, CURRENT_DAY, promisedDate)} <= 1
Selects all rows from t with promisedDate at most one day from now. (It also selects rows with a promisedDate in the past). Note that this is probably not the optimal way to express the query. If promisedDate is indexed the Derby optimizer will not use the index. Better is
 SELECT * FROM t WHERE promisedDate <= {fn TIMESTAMPADD( SQL_TSI_DAY, 1, CURRENT_DAY)

Submitted by Jack Klebanoff (klebanoff-derby@sbcglobal.net)



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178061 13f79535-47bb-0310-9956-ffa450edef68"
5bffaa5919a7e4fbb864a5f04ad84eef7a2e533f,"Derby-229: Return first matching column name, instead of last column in the select list for getter methods.

Column names supplied to getter [updater] methods are case insensitive.
If a select list contains the same column more than once, the first instance
of the column will be returned [updated]. Derby returns or updates the last
column in the select list, not the first. 

Submitted by Shreyas Kaushik. (Shreyas.Kaushik@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178257 13f79535-47bb-0310-9956-ffa450edef68"
17241430ade8ae826a44dbd1a323d64085bc3811,"Fix running of store/backupRestore1.java from suites.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178304 13f79535-47bb-0310-9956-ffa450edef68"
522127b6e66ea7e08c5a11c7b42506654c05a7d9,"adding hard upgrade support for inline compress system procedure.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178332 13f79535-47bb-0310-9956-ffa450edef68"
ba03da2f0a57ef368a7c6068c47500be6e30770c,"Attached patch increases the maximum possible  log file number to  231 -1  and  keeps the  old limit of 222-1 on soft upgrade.
Earlier patch for this problem increased it to 233 -1 , but that fix created  upgrade problems because of  the  additional bits
that are used from  the file position field,  so the limit is being reduced to  231-1. 

committed on behalf of: suresh.thalamati@gmail.com



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178486 13f79535-47bb-0310-9956-ffa450edef68"
cae67a81a8463c42172aa8e466e2b31c92aaacfb,"small fix to make sure that log buffers are switched are correctly when the are 
full, when the log checksum  feature is disabled due to a  soft upgrade.

committed on behalf of: suresh.thalamati@gmail.com



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178494 13f79535-47bb-0310-9956-ffa450edef68"
78eda8f3cd776cc3b988c40b81a8f36c942335cc,"Update some master files.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178519 13f79535-47bb-0310-9956-ffa450edef68"
55e2efe4d00a9533859428c2ce0a3948c332d7d9,"Derby-197: Add note for Cygwin users. Also, make note to Mac OS X in same format
as other notes.

Committed for David Van Couvering <David.Vancouvering@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178554 13f79535-47bb-0310-9956-ffa450edef68"
22b4264f1a7853b9f198c9085a220b7618e92377,"Exclude the newly added rsgetXXXcolumnNames.java for JCC driver. There seems to be a defect in this area for them to address it.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178562 13f79535-47bb-0310-9956-ffa450edef68"
cd065ba17c091b5471fff4c123dacb7d1b580993,"Change Cloudscape references in publishedapi javadoc to Derby.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178763 13f79535-47bb-0310-9956-ffa450edef68"
3982b7db9711e228fbd1cc30304e335959e53062,"Fix Derby-19 - Handle IOException on invalid service name,
e.g. device not ready on path to CD-ROM.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178795 13f79535-47bb-0310-9956-ffa450edef68"
b44abbf2a3b0bab1fe6f415ad771771017fcf3bc,"Derby-265: In Network Server retrieving BLOB values with autocommit off causes NullPointerException in INSANE build / AssertFailure in  BaseContainerHandle.getTransaction in SANE Build

Fix submitted by Sunitha Kambhampati (ksunithaghm@gmail.com)

The problem
-- Basically, in autocommit mode, when getBlob is called on a resultset after the transaction in which it was created is committed throws an NPE. Per the jdbc api and spec, getBlob is valid only for the duration of the transaction in which it was created.  So it is incorrect to call getBlob as in this repro for derby-265.
-- On a getBlob for overflow columns,  we initiliaze the stream by reopening the container. In here, the transaction of the containerhandle ends up being null and an NPE is thrown.
-- The problem is not specific to network server as such, but is reproducible in embedded mode also.


Fix includes
--    Adds check in  OverflowInputStream.initStream  to see if transaction of the container handle is null and throws a StandardException with SQLState.DATA_CONTAINER_CLOSED
--    And at  the jdbc layer, this exception is wrapped with a user exception with an existing  SQLState XJ073             (SQLState.BLOB_ACCESSED_AFTER_COMMIT) for both getBlob and getClob.
The error message corresponding to this sqlstate is  ""The data in this Blob or Clob is no longer available. Possible reasons are that its transaction committed, or its  connection closed.""
--   Removed the ASSERT in BaseContainerHandle.getTransaction() 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178803 13f79535-47bb-0310-9956-ffa450edef68"
cd3c1ece2906fd6ce5631c0b777869775a54b5ff,"Derby-305: Fix error messages in properties files to match text in
documentation.

Committed for David Van Couvering <David.Vancouvering@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178809 13f79535-47bb-0310-9956-ffa450edef68"
ad093f2d8c713dc18549f6bf373fe7810fda6517,"Changes to make progress in runnning tests as a suite
with IBM's WCTME 5.7 J2ME/CDC/Foundation 1.0 environment.

Path contributed by Myrna van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178816 13f79535-47bb-0310-9956-ffa450edef68"
999d062c649716f792f826a31f3bfd230cec1c86,"Back out revision 178809 (Derby-305)

Causes too many test failures due to change in error text.
Patch needs to be re-submitted with all affected test cannons updated.

Reverted with

svn merge -r 178809:178808 https://svn.apache.org/repos/asf/incubator/derby/code/trunk/



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178826 13f79535-47bb-0310-9956-ffa450edef68"
24501c5878941f5f6d0e66fab0c2be9f7d72f271,"Add some formatting tests for String to DECIMAL.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@178838 13f79535-47bb-0310-9956-ffa450edef68"
43592363c669b58b6c64d11df587cb100bb343cc,"This fixes DERBY-255 

Closing a resultset after retriving BLOB or CLOB data > 32K, does not release locks properly. 

Network server/client materializes the LOB on the client and cannot differentiate getBlob from getBytes or getBinaryStream. Previously, network server would always call getBlob/getClob for any lob related call. This change changes network server to use getBytes/getString and not  hold locks for any of the calls. 

The implementation adds a new class EXTDTAInputStream to network server to localize the stream handling for large objects.   This should make it easier to adjust in the future as improvements are made in the large object handling. Because we need a length in order to write a stream, EXTDTAInputStream currently call getBytes or getString to get the length and stream out that object. This is apparently required because we cannot reset the input stream after traversing it to get the length.


Future suggestions for changes to network server to handle this in a more complete way would be to:

1) Change DDMWriter.writeScalarStream to  not require a length and optimize EXTDTAObjectInputStream accordingly

2) Add support for lob locators with network server.  The getBlob, getClob calls would use the locators and would hold locks until the end of the transaction.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179014 13f79535-47bb-0310-9956-ffa450edef68"
364aaa09396ba7f9d81eb41b26124b9daa879149,"Second check-in for DERBY-255

Add SanityManger.DEBUG block for assertion



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179198 13f79535-47bb-0310-9956-ffa450edef68"
2a9c5d0906a9d8a4bb42e5f2609aab6602aa41cb,"Cleanup the test_app.properties files for nist to allow
nist to be run when specifying a DataSource using ij.dataSource properties.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179241 13f79535-47bb-0310-9956-ffa450edef68"
12a630946272e805541e7cef26de4554c5c861eb,"When ij obtains its initial connection using a data source (ij.dataSource)
use DataSource.getConnection(user, password) if ij.user is set.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179245 13f79535-47bb-0310-9956-ffa450edef68"
a9f10477bab9b51204d6697a2e3defde2e3ff466,"Pass system properties for DataSOurce connections (ij.dataSource*) from
RunSuite into the VM invoked for RunTest. Allows suites to be run successfully
using a DataSource to obtain connections.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179247 13f79535-47bb-0310-9956-ffa450edef68"
6d0a34cc96f0974cf2b9e09a56c1c597dca13fc8,"Add the initial implementations of a DECIMAL data value
factory and DECIMAL data type for J2ME/CDC/Foundation.
BigIntegerDecimal is basically working but some additional
work is needed to pass the floattypes test.
Not enabled as a running module yet.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179254 13f79535-47bb-0310-9956-ffa450edef68"
e73423b13f238e07488267d54648fe9556fe1697,"setNetworkClientCP scripts do not need derby.jar in the classpath


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179258 13f79535-47bb-0310-9956-ffa450edef68"
9760bd43ee7f5fab6b46e20dd712f66ba9e8764c,"sysinfo -cp server should state that derby.jar is required for server operation
along with derbynet.jar


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179259 13f79535-47bb-0310-9956-ffa450edef68"
733953a475ae0c8068fd11675194ab8407855d69,"Derby-180: Fix duplicated SQL state XCL47 by moving XCL478.S to new SQL state
XCL51.S.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179260 13f79535-47bb-0310-9956-ffa450edef68"
19138a98dbee2f84f3086e2f27f6bc5739c111c7,"Remove casting of input values for DECIMAL to java.lang.Number
or java.math.BigDecimal for J2ME as BigDecimal is not supported
and thus no input values for DECIMAL map to Number. DECIMAL values
from constants are passed to the DataValueFactory as Strings for J2ME.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179262 13f79535-47bb-0310-9956-ffa450edef68"
ee45e7d0485e3880c8cc47289602acc762042258,"Fix Derby-325 - ensure a class is registered for the format
identifier 200 representing DECIMAL.
Will need a more complete change once J2ME DECIMAL support is added.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179297 13f79535-47bb-0310-9956-ffa450edef68"
44fe060efb5df6b9eced5ad7d6586ca3b31b27af,"More tests and a fix for a problem shown up by new tests for online
compress.  Also deleting obsolete test, functionality has been moved
into the .java version of the test.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179319 13f79535-47bb-0310-9956-ffa450edef68"
bad72c51a5bb56bf18288f11325d746566ee819f,"Derby-220: Add timestamp and svn revision number to javadoc footer for easier
identification of javadoc builds.

Committed for Dyre Tjeldvoll <Dyre.Tjeldvoll@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179401 13f79535-47bb-0310-9956-ffa450edef68"
20437b93cdf240e4a8d9108e6f4622e1d0ef3673,"Derby-313: Fix testing README to add information about useprocess property and
fix the references to testSpecialProps.

Committed for Dag H. Wanvik <Dag.Wanvik@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179402 13f79535-47bb-0310-9956-ffa450edef68"
27e2c4b96fbf83274179f04c70aad6f7a9d58916,"DERBY-205 spin off - clean up handling of derby.stream.error properties
 
- Removed the (redundant) reading of these stream name properties from 
  NetworkServerControlImpl.java: 

            derby.stream.error.file 
derby.stream.error.method 
derby.stream.error.field 

- Modified DRDAConnThread.java to get the stream name via 
  Monitor.getStream().getName (a new method). DRDAConnThread was the 
  sole client and reason for the redundancy Kathey spotted. 
- Augmented HeaderPrintWriter interface with a new method, getName. 
- Augmented BasicHeaderPrintWriter to hold the stream name of the 
  error log. 
- Moved hard coded constants for the stream name attributes from 
  SingleStream.java to the Property interface and documented them there. 
- Removed the errorLogLocation field and the getErrorLogLocation from 
  NetworkServerControlImpl.java 
- Cleaned up some Javadoc for the items I touched. 

I have run derbyall with JDK1.4.2 on Solaris/x86. derbyall runs with 
errors, but the same errors are present on a clean checkout as well 

There are some additional changes to the sed file for the new 
errorstream test. Checking in all but the addition to the suite.

			contributed by Dag H. Wanvik



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179584 13f79535-47bb-0310-9956-ffa450edef68"
85bed15ec5efe8ef13dad6bcc0613491d3e86eb9,"DERBY-320 - Failed test: derbyall/derbynetclientmats/derbynetmats.fail:lang/updatableResultSet.java
created a sed file to filter out
the cursor name.  I did this only for DerbyNetClient as this has not been
an issue for embedded.
				Contributed by David Van Couvering 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179592 13f79535-47bb-0310-9956-ffa450edef68"
8584a6b5df91e762be4caf715be890c8949b55e0,"Derby-322: Remove DataSource API to set resultSetHoldability. This is not standard JDBC API and hence should be removed.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179657 13f79535-47bb-0310-9956-ffa450edef68"
07648ce59f6f5b84175cd5e7ae54e75298e8b327,"Modify nist suite test_app.properties files to set databaseName and createDatabase
for DataSources to match the setting of ij.database. Simplifies running tests with
a DataSource as only ij.dataSource is required to be set when running RunSuite.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179666 13f79535-47bb-0310-9956-ffa450edef68"
dd932de74c54b25c9a82e803370c11278c05d7dd,"Enable jdbc20 suite to run on J9/jclmax since JDBC 2.0 is supported.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179668 13f79535-47bb-0310-9956-ffa450edef68"
2c1c8c11802e7a097e49c9ae40275b948bea5e6e,"Derby-318: Prevent network server from hitting NullPointerException.

Submitted by Tomohito Nakayama. (tomonaka@basil.ocn.ne.jp) 


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179674 13f79535-47bb-0310-9956-ffa450edef68"
c5beeff9ea4180236d7a9ce9651e87abf11ff4fd,"Fix build problem introduced by checkin number 179657.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179676 13f79535-47bb-0310-9956-ffa450edef68"
c859dccae285ed57c30462fc363daaf2e523f06f,"Derby-308: Enhance dblook to handle BY DEFAULT IDENTITY columns.

Submitted by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179693 13f79535-47bb-0310-9956-ffa450edef68"
551cf1c50cbb033ca386675a5c11fef590d67ddc,"Derby-305: Fix error messages in properties files to match text in 
documentation.

Committed for David Van Couvering <David.Vancouvering@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179696 13f79535-47bb-0310-9956-ffa450edef68"
3b9e2f0566c062435600fdef376642f20ffe44a9,"Address dblook change missed by previous checkins and update master files.
Dblook shouldn't be generating DEFAULT GENERATED_BY_IDENTITY string for identity columns. Also updated master files correctly.

Submitted by Satheesh Bandaram(satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179708 13f79535-47bb-0310-9956-ffa450edef68"
679d226dfa4342bccf6c1738281ff2f12752bb87,"Change Derby client to throw DisconnectException in netAgent.java.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179832 13f79535-47bb-0310-9956-ffa450edef68"
0e6f38bd742d32a9eb51073bd356f712bbc17b95,"Derby-230: Handle the case of someone else creating a schema from the time we check if it exists to creating it if not.

Submitted by Oystein Grovlen.(Oystein.Grovlen@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179834 13f79535-47bb-0310-9956-ffa450edef68"
fd58c3c2b348e9b6c003bdc47ef4dd6a4574b68c,"Derby-194: Modify Derby metadata for datetime values so that the correct ""precision"" and ""scale"" for those types will be returned in metadata calls.

Description from Army:

Since the definitions of ""precision"" and ""scale"" aren't clearly defined for datetime values in JDBC, I've set them based on the ODBC specification.  It was agreed in discussion of this issue (and also of DERBY-319) that the ""intent"" of JDBC for these values is to mimic ODBC behavior.  See the thread here for that discussion:

http://article.gmane.org/gmane.comp.apache.db.derby.devel/2786
http://article.gmane.org/gmane.comp.apache.db.derby.devel/2787

So that said, the attached patch sets precision/scale for datetime values according to the following ODBC pages:

[ Precision ]

http://msdn.microsoft.com/library/default.asp?url=/library/en-us/odbc/htm/odbccolumn_size.asp

Pasted from the above link:

""The column (or parameter) size of numeric data types is defined as the maximum number of digits used by the data type of the column or parameter, or the precision of the data. For character types, this is the length in characters of the data; for binary data types, column size is defined as the length in bytes of the data. For the time, timestamp, and all interval data types, this is the number of characters in the character representation of this data.""

[ Scale ]

http://msdn.microsoft.com/library/default.asp?url=/library/en-us/odbc/htm/odbcdecimal_digits.asp

Pasted from the above link:

""The decimal digits of decimal and numeric data types is defined as the maximum number of digits to the right of the decimal point, or the scale of the data. For approximate floating-point number columns or parameters, the scale is undefined because the number of digits to the right of the decimal point is not fixed. For datetime or interval data that contains a seconds component, the decimal digits is defined as the number of digits to the right of the decimal point in the seconds component of the data.""

I have run ""derbyall"" on Windows 2000 with Sun JDK 1.4.2 and have included all required master updates in the patch.  The ""svn stat"" output is attached to this email, along with the patch itself.


Submitted by Army Brown(qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179839 13f79535-47bb-0310-9956-ffa450edef68"
fa912d6952c0a7e101a04b3657fba3af2498dafa,"This patch is a follow-up to the new test (lang/errorStream.java)
introduced by derby-205 (second patch). Its sed script was deficient,
so the test was not initially included in the suites. This patch:

- eliminates a Unix dependency in its canon file
- eliminates a locale dependent string in the canon file
- adds the test to the derbylang suite

Note: the test will fail on second run if the test directory is not cleaned up.


                                        Contributed by Dag Wanvik


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179840 13f79535-47bb-0310-9956-ffa450edef68"
4ecd2d541156e0410b1d82f4b2836887164e81a0,"Update master outputs to reflect error message changes. The 'syscat.sql' test was added to derbynetmats after commiting the patch that changed error messages.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179841 13f79535-47bb-0310-9956-ffa450edef68"
cce01c8fd3b39d577f3b518beea7330c3337a4fe,"DERBY-121 - Network Server issue reading blob/clob data size

1) Change Network Server and Derby Client code to do correct bit-shifting when processing the length of LOBs that are larger than 2^24 bytes (DERBY-121). 2) Add a new suite, ""largeData"", for running tests that require extra machine resources, and add the test for DERBY-121 to that suite (because the test for DERBY-121 requires extra heap memory for the server's JVM).

			Contributed by Army Brown



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179859 13f79535-47bb-0310-9956-ffa450edef68"
38083d6823d48f5b6cc5a8590edf922b06737042,"XA end() fails with Connection is closed error

For the client there were multiple problems associated with the tracking
of XA_STATE in the client. The approach for this patch is to remove as
much of the client state as possible.

This patch removes all the client XA state except for
    XA_GLOBAL - In an active global transaction 
    XA_LOCAL - No active global transaction.

For Network Server there was a bug that the connection was not being
reset properly when a connection
reset request came from the client. Changed it so that if an ACCRDB
is sent and a connection has already been established it will reset.




git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179867 13f79535-47bb-0310-9956-ffa450edef68"
d99a94772060cb1dc67dcb79d5c1a924d0672e80,"Backout accidental resultset.java checkin



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179872 13f79535-47bb-0310-9956-ffa450edef68"
30293196100ee815e62e1b2cfc703c2d9b860577,"DERBY-128 Network Server Gives NPE if SQLException has null SQLState

Removed dereferencing of sqlstate which was causing the NPE
			Contributed by Dyre Tjeldvoll



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@179927 13f79535-47bb-0310-9956-ffa450edef68"
04a2f12c7cfd8db845813751f39264d06cd2ac38,"fix timing problem between compress deallocation of pages and background
post commit, locking for heap container for truncate was wrong.  Also 
change compress of alloc page to be a logged operation.  I thought it 
could be handled unlogged, similar to preallocation - but there were some
crash cases that would not be handled correctly if it were not logged.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@180008 13f79535-47bb-0310-9956-ffa450edef68"
89e0da090407cf0ba286d2640c5bdb17b4160a5f,"Derby-230: Submit missed test files in the previous checkin for this bug. (179834)

Submitted by Oystein Grovlen.(Oystein.Grovlen@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@180009 13f79535-47bb-0310-9956-ffa450edef68"
55f214fce03a0ba678d1131845abc90dd3c28dbd,"Various changes to enable tests to be run using a DataSource
and a specific skip property at the test level for J2ME/CDC/Foundation.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@180028 13f79535-47bb-0310-9956-ffa450edef68"
a765e168704efc76f88fbcb441b88e165c32d40f,"More updates to J2ME's DECIMAL implementation, fix the clone
method, implement toString and hashCode.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@180029 13f79535-47bb-0310-9956-ffa450edef68"
2abb2b2c1552b896917eff542578b56742e0a561,"Fix for DERBY-285 Network Client should not print non-ascii token separators in message when it cannot connect to the server to retrieve the error message 

This patch changes network server to send the complete message in its own locale instead of just the message arguments and delimiters if the exception is severe enough to terminate the connection. This will eliminate the special characters and provide a more readable message. 
I also cleaned up the code a bit in this area. I removed the extra logging for the severe exceptions as these will already be logged as part of the normal Derby error logging. 




git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@180107 13f79535-47bb-0310-9956-ffa450edef68"
582425f25314e4410860dfd37f7d12fda13532b5,"Derby-335: Add synonym support to Derby. See the following for more description of the functionality.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)

Couple of changes still pending to complete this feature:

    1) Add registering and checking for Dependencies. These ensure all required objects have been droped before droping synonyms and dropping of synonyms invalidate all required objects.
    2) Add more tests and possible minor code cleanups.

Synonym Functionality:
----------------------
Synonym provides an alternate name for a table or a view that is present in the
same schema or another schema. A synonym can also be created for another
synonym, causing nesting of synonyms. A synonym can be used in SELECT, INSERT,
UPDATE, DELETE or LOCK TABLE statements instead of the original qualified table
or view name. Note that a synonym can be created for a table or a view that
doesn't yet exists. But the target table/view must be present before the
synonym can be used. 

Synonyms are supported by all major database vendors, including Oracle, DB2 and
mySQL. DB2 also allows CREATE ALIAS statement, which does exactly same as
CREATE SYNONYM. Creating aliases instead of synonyms is not supported by Oracle
or mySQL, so I propose that Derby not support creating aliases. Synonyms are not
part of SQL-2003 spec, but is a common-SQL statement among major database
vendors. SQL standard doesn't pay attention to DDLs as much, so I suspect they
skipped synonyms. 

I will be adding two new DDL statements to Derby: 

CREATE SYNONYM <SynonymSchema>.<SynonymName> FOR <TargetSchema>.<TargetName> 
DROP SYNONYM <SynonymSchema>.<SynonymName> 

Synonyms share the same namespace as tables or views. It is not possible to
create a synonym with same name as a table that already exists in the same
schema. Similarly, a table/view can't be created that matches a synonym already
present. 




git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@180459 13f79535-47bb-0310-9956-ffa450edef68"
a43bb26922b3a43b2374b6d9e7e531fc6ef4a27d,"Move SanityManager code under if (SanityManager.DEBUG).

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@188643 13f79535-47bb-0310-9956-ffa450edef68"
bcafc1e559053176c1c8805cb236c779c229b14d,"Master update for DERBY-285



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@188813 13f79535-47bb-0310-9956-ffa450edef68"
3a4f84b27d9df37f6ac72ad1f08e005a3b1b358e,"Add automatic build of J2ME/JSR169 optional targets if
jsr169compile.classpath is set.
Include instructions on this in BUILDING.txt


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@188823 13f79535-47bb-0310-9956-ffa450edef68"
0b5921d830ee4abe7578df3ac49503ec46ca3563,"There are two master files that were not updated as part of the DERBY-305 patch but need to be.
They are both master files for the ""tools/importExport.java"" test.

The thing to note here is that the master files are in the ""ibm14"" subdirectory
--which means that these diffs would only be noticed if derbyall was run with an IBM 1.4 JDK. 

Contributed by Army <qozinx@sbcglobal.net>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189468 13f79535-47bb-0310-9956-ffa450edef68"
6081510ac691f69b66561ca49b0d1ca0a169e492,"improved javadoc for the java/engine/org/apache/derby/impl/store/access/btree/index
directory.

patch contributed by: dibyendu@mazumdar.demon.co.uk



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189483 13f79535-47bb-0310-9956-ffa450edef68"
d7e478a6f987fbd2701c65016bb17bec0cb7c753,"more improvements to index directory javadoc.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189485 13f79535-47bb-0310-9956-ffa450edef68"
e79f53c339d29fdebedd9f8d23e8c56eb8c16f73,"Address review comments on updatable resultset support already checked into Derby trunk.
Sure table name instead of schema name to check for presense of a table.

Submitted by Mamta Satoor(msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189486 13f79535-47bb-0310-9956-ffa450edef68"
af57bfbde6738be44b5e1eee1699dcb18a86409b,"Derby-217: Fix the problem introduced by fix for Derby-175. Set the SQLBlob correctly if the value is not null.

A test case needs to be added later. I will keep the bug open till a test case is added.

Submitted by Satheesh Bandaram (Satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189606 13f79535-47bb-0310-9956-ffa450edef68"
9af9472d0b57a01e6a1d0e47b11f236bdbe3b612,"Fix BinaryDecimal to have a hashCode that matches the integer versions,
to ensure that hash joins work correctly.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189642 13f79535-47bb-0310-9956-ffa450edef68"
1fa1fd041f06364b3941e4f19f936444e37d052f,"DERBY-337: Enhance dblook to support SQL functions.

1 - Renames ""impl/tools/dblook/DB_StoredProcedure.java"" to ""impl/tools/dblook/DB_Alias.java"" because that file now handles stored procedures AND functions AND synonyms, all of which are based on the SYSALIASES system catalog.

2 - Adds logic to new DB_Alias.java file to generate DDL for functions.

3 - Modifies the ""toString()"" method of the catalog/types/RoutineAliasInfo file to generate a string that is SYNTACTICALLY VALID based on whether an instance of that class is for a PROCEDURE or for a FUNCTION.  The reason this change is required is because the ""ALIASINFO"" column that is returned as part of the SYS.SYSALIASES result set is an instance of RoutineAliasInfo, and thus a call to ResultSet.getString() on the ALIASINFO column ultimately makes a call to RoutineAliasInfo.toString().  That said, the dblook utility makes a ""getString()"" call on the ALIASINFO column and uses the result to generate the corresponding DDL.  Before this patch, the result of the toString() method always corresponded to the PROCEDURE syntax; but now, since dblook is generating DDL for FUNCTIONs, the RoutineAliasInfo.toString() method must recognize if an instance is a PROCEDURE or FUNCTION and return the appropriate syntax.

4 - Adds test cases for FUNCTIONS to the dblook tests and updates the master files accordingly.

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189650 13f79535-47bb-0310-9956-ffa450edef68"
ae13c427c58d88b8746275d19dff4f47d9def315,"Derby-344: Check if the old_row is not-null before attempting a clone.

Submitted by Jack Klebanoff (klebanoff-derby@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189662 13f79535-47bb-0310-9956-ffa450edef68"
b47c2397ec1d22b187f905a6627f6d6d21bbe33f,"Handle the case of VTIs in UpdateNode. The tableName can be NULL there.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189664 13f79535-47bb-0310-9956-ffa450edef68"
a479bc7795cf7383d4c98bb539913f86fb45e28d,"This patch modifies the test 
lang/errorStream.java introduced as part of Derby-205 to remove the 
intermittent failures seen (e.g. by Army). The failures happen due to 
slight variation in output merging of System.err and System.out, due 
to this test's expected output to System.err (for its negative test 
cases). 
		contributed by Dag Wanvik



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189696 13f79535-47bb-0310-9956-ffa450edef68"
730b008af5e02eb7f8244ca55e2d41d76126422e,"Delete unneedeed errorStream_sed.properties file


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189697 13f79535-47bb-0310-9956-ffa450edef68"
1d2a5693d7e9012d2fbdece7ec6adbc71ace9c1f,"DERBY-243

Change connection toString to print connection id

			contributed by David Van Couvering


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189704 13f79535-47bb-0310-9956-ffa450edef68"
88c25bba738b45794bb33fe43e46ad937b54cf4c,"DERBY-339 Network client XA should only keep XA state for transaction branch association

Network client XA should only keep XA state for transaction branch association, to track whether to send commit in autocommit mode. All other state and state related decisions should be defered to the server. 


The client tries to track XA state to make decisions based on current XA state. Most of this state handling was removed with DERBY246, but it still was not being handled properly. This is evidenced by multiple failures in xaSimplePostive that now that it gets past DERBY-246. 


This fix will have the client track only branch association as outlined in the XA+ specification. Table 6-2, State Table for Transaction Branch Association. The client will track only 

XA_TO_NOT_ASSOCIATED 
XA_T1_ASSOCIATED 

Association Suspended (T2) will map to XA_TO_NOT_ASSOCIATED for the client's pupurposes. 

The client commit in autocommit mode only for 
XA_TO_NOT_ASSOCIATED. 





git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189710 13f79535-47bb-0310-9956-ffa450edef68"
81ad58cda8d2dacc375125dd2824df7c3f324249,"Add dependency checks for synonyms. DML statements depend on all synonyms referenced in the chain.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189716 13f79535-47bb-0310-9956-ffa450edef68"
6e4fbc325ea7f5926bbaa7c0d98bc02718640a9b,"Update STATUS with new information concerning releases and recent votes.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189717 13f79535-47bb-0310-9956-ffa450edef68"
099e28f5b1e012cb20a1123bc6267953ba20f20f,"Submit initial XML support to Derby.

Submitted by Army Brown.(qozinx@sbcglobal.net)

Adding some ""starter"" XML functionality to Derby, which can then serve as the basis for future XML development.  Initial features include the following:

1 - A built-in XML datatype.
2 - An XMLPARSE() operator for creating XML values.
3 - An XMLSERIALIZE() operator for serializing XML values to strings (for data retrieval).
4 - An XMLEXISTSTS() operator for running simple existence queries against XML using XPath.

These features are implemented at the SQL level only (no JDBC support).  See the email here for a more detailed description:

http://thread.gmane.org/gmane.comp.apache.db.derby.devel/4468



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189721 13f79535-47bb-0310-9956-ffa450edef68"
9ce79e7d9a531bb85c3b5200f8c4b36c652adcfe,"DERBY-343 Clean up DRDA classes handling of OPNQRY options

Move qryclsimp logic to DRDAResultset.
Organize imports
			Contributed by Philip Wilder



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189752 13f79535-47bb-0310-9956-ffa450edef68"
7ea752935e109a86137a3d7256fb5b308bbd581c,"Apply missed change that wasn't merged with 189486.

Submitted by Mamta Satoor (msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189763 13f79535-47bb-0310-9956-ffa450edef68"
db0772879d380f023e7ce8f90a459193d29f4e9a,"Derby-314: improve Eclipse plugin network server process handling.

The fix changes the behaviour to the following:

1) Only one network server can be started per project.

2) Once a network server is started for a project it must be stopped before any
   of it's settings (port, host and derby.system.home) can be changed.

3) If a user tries to change these settings when the network server is running
   they will be notified that they cannot change them, and the text fields
   become uneditable. 

Committed for Susan Cline <home4slc@pacbell.net>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189829 13f79535-47bb-0310-9956-ffa450edef68"
2a1abd5f0c2e5e53dac6155184a1cf0791b5901b,"Derby-337: Declare newly added field to RoutineAliasInfo as transient. Though I don't think there is a need to do this, it at least marks the only transient field as such.

Submitted by Army Brown. (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189835 13f79535-47bb-0310-9956-ffa450edef68"
09c8a0d35bb09ce73b5a3ef4cf4ed77c0bcbd417,"Derby-319: The Derby implementation of DatabaseMetaData.getProcedureColumns()
returns incorrect values for the ""LENGTH"" column of the result, primarily 
because there is no clear definition in the JDBC spec regarding what this 
method is _supposed_ to return. Discussion in the above-posted thread concluded
that the intent of the JDBC metadata is to ""match the ODBC metadata"", at least
regard to this particular issue. So changes reflecting this conclusion should
be submitted to Derby.

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189855 13f79535-47bb-0310-9956-ffa450edef68"
33dab75fcde448625eb4f528c4b8580a82eb68e9,"Boot the DataValueFactory before the store is booted so that dynamically
registered types (such as DECIMAL) are registerede before recovery as they
can be required during logical undo.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189857 13f79535-47bb-0310-9956-ffa450edef68"
b658373f998387179b9594bdd3b8c1ecaac421a8,"Change ij to special case DECIMAL types when passing values
from a ResultSet to a PreparedStatement since in J2ME there
is no Object type that represents a DECIMAL. This code
is used when an ij prepared statement is executed with the using clause.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189858 13f79535-47bb-0310-9956-ffa450edef68"
60bb5b677a2b8fcf8fb6979b1f2844fd8adf6ec2,"1) Add a section about how to build the core plugin in BUILDING.TXT
2) Put the Readme.txt file for building the UI plugin into the source tree
    under trunk/plugins/eclipse

Committed for Susan Cline <home4slc@pacbell.net>

Also added a note about path to runtime libraries when using IBM JVMs to
BUILDING.txt.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@189863 13f79535-47bb-0310-9956-ffa450edef68"
14f40d1a4c5f5db294b4d73c1021dba71cc87aab,"Remove ErrorLogReader VTI testing from this test to avoid XID differences
David Van Couvering will submit a new test.
		Contributed by David Van Couvering



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190059 13f79535-47bb-0310-9956-ffa450edef68"
7cf2315a60d58938e6f90ada2fb21f2dc0a670d8,"DERBY-217 add some batch test cases for the setXXX methods to jdbcapi/parameterMapping test.
Work in progress, need another commit to add the remaining setXXX methods.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190127 13f79535-47bb-0310-9956-ffa450edef68"
50b6dfcaabd01bd8ff292648731384f738eb1fb6,"Add more tests for synonym and also set implicitCreateSchema to true.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190182 13f79535-47bb-0310-9956-ffa450edef68"
a4e8535184551ed79c73e601f89ef2deb81d1ddc,"Fix for DERBY-302, committing on behalf of 

DERBY-302 - Insert on Clob of 500k of data using streams takes long time. 
It takes 3 mins on a sun jvm1.4.2 and 20 seconds with ibm jvm 1.4.2. 
The following fix improves the performance of insert into a 500k blob from 20 
seconds to around 1 second.  Note that by changing just the test program 
time was reduced from 3 minutes to avg around 20 seconds.

Currently in derby,  for an insert on a clob using setCharacterStream what will
happen is , the entire stream will be materialized into a char array and sent 
to store for the insert.  ( we should not have to stream here. I will file 
another jira issue for this and put in all information I learnt)

Given this is how inserts for large clobs are happening, the performance issue 
analysis is as follows:
--  profiler run shows that most time is spent in SQLChar.readExternal which 
is where the materialization into a char array for the user's input stream 
happens.  The growth of this array happens gradually till the entire stream 
is materialized into the array.  Below code snippet shows by how much the 
array is grown each time when it realizes it has to read more bytes from the 
stream.

The dvd hierarchy for clob is  -  SQLClob ( dvd) extends SQLVarChar 
extends SQLChar.

So in SQLChar.readExternal
........
int growby = in.available();
if(growby < 64)
growby = 64
and then an allocation and an arraycopy to the new allocated array.

--  In the code snippet,  'in' is the wrapper around the user's stream which is
ReaderToUTF8Stream.   ReaderToUTF8Stream extends InputStream and does not 
override available() method . As per the spec, InputStream.available() 
returns 0.

-- Thus each time, the array growth is by 64 bytes which is obviously not 
performant.  so for a 500k clob insert, this would mean allocation & 
arraycopy steps happen  ~8000 times.

-- The ReaderToUTF8Stream that has the user's stream reads from the stream and
does the utf8 conversion and puts it in a 4k array.  I think it is reasonable 
to have a 32k buffer to store this information for clobs.

Although I think there seems to be more possible optimizations in this area,  
I prefer the incremental approach too :)  so this patch  is a first step 
towards fixing the insert clob performance in the current system.

Fix includes:
-- enhanced the way the array was grown to keep the original  64 bytes for 
char ( seems reasonable given the upper limit for char) but override it to 
have  4k for varchar and clobs.

-- OVERRIDE AVAILABLE() IN READERTOUTF8STREAM TO RETURN A BETTER ESTIMATE OF 
HOW MANY BYTES CAN BE READ. 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190415 13f79535-47bb-0310-9956-ffa450edef68"
4d80643f9fa023f88f5e638125106ba6d5b4def8,"Fix DERBY-258 - Changes to parse the signature in the context of the parameter types of the function or procedure.
Ensures declared signature Java types are mappable to the parameter types, as specified in the SQL2003 spec part 13
Checks for various invalid formats as well. 



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190508 13f79535-47bb-0310-9956-ffa450edef68"
a14affde0aeb99718d6355d8fe59e151343e89d7,"Update j9 masters.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190512 13f79535-47bb-0310-9956-ffa450edef68"
5254ce86507754c435ea28990c14ba0c62ff4d85,"Update Derby trunk version to 10.2.0.0 alpha


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190519 13f79535-47bb-0310-9956-ffa450edef68"
0e28ed78a9d2fbf4ece58f58f621cf2ac93bdfbe,"Update eversion property


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190520 13f79535-47bb-0310-9956-ffa450edef68"
e3fc1813a51e1165ad256d630636a39db076139d,"Update masters due to version bump.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190552 13f79535-47bb-0310-9956-ffa450edef68"
069811851345ad7134ec90493efcae1071e8fbfc,"updating code comments for inline compress code.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190781 13f79535-47bb-0310-9956-ffa450edef68"
ed35c3f60d122519a5707d450c62d12f5b8d7cb8,"Master update to match expected output for dblook_test.java

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190799 13f79535-47bb-0310-9956-ffa450edef68"
6558c147f177e23062ab341894499333c2c6aa1a,"DERBY-247: Update demos to support Derby Network Client driver.

Committed for Lance Andersen <Lance.Andersen@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190803 13f79535-47bb-0310-9956-ffa450edef68"
13783002e5861a48e965b03c73350e9a4192e015,"Master update for JCC 2.6



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190825 13f79535-47bb-0310-9956-ffa450edef68"
32f6abd6a397398c37a1e1c8175b0e9daed3f531,"DERBY-354 Fix syntax in javadoc for ErrorMessages VTI
			Contributed by Myrna van Lunteren



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190837 13f79535-47bb-0310-9956-ffa450edef68"
9624972d65a2f884932243683deaf8bc8f86664f,"add Tomohito as committer

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190865 13f79535-47bb-0310-9956-ffa450edef68"
5e2e1383a7c5aac46b8fe2bc3364011ea5b6b915,"Update updatableResultSet master with jdk13 version.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@190979 13f79535-47bb-0310-9956-ffa450edef68"
f578f070790bf9cec5e2c603f056364d21f882a3,"Fix for 
DERBY-8
Connection object gets created with un-supported holdability on getting Connection object from XAConnection ""inside"" the global transaction

DERBY-366
In jdk13, when a connection transitions from global transaction to local transaction, its default holdability of HOLD_CURSORS_OVER_COMMIT is not restored.


 have a patch to fix Derby-8 (Connection object gets created with un-supported holdability on getting Connection object from XAConnection ""inside"" the global transaction) and Derby-366 (In jdk13, when a connection transitions from global transaction to local transaction, its default holdability of HOLD_CURSORS_OVER_COMMIT is not restored.) The patch is attached to both Derby-8 and Derby-366. 

The fix for both these bugs was centered around fixing the holdability handling in BrokeredConnection.java This was because BrokeredConnection.java had no code for restoring the holdability of real connection object and no code for saving the current holdability state of real connection object. I put fix for both these issues in BrokeredConnection.java so that both jdk13 and jdk14+ environments will be handled correctly. Had to use reflection for this holdability work 
because Connection.setHoldability and Connection.getHoldability methods are not available through JDK13 apis. 

					Contributed by Mamta Satoor


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@191755 13f79535-47bb-0310-9956-ffa450edef68"
b3e2bc38cd587ca0d0e8c5bc5dbcf6926ce11bc3,"Backout prematurely committed test change 
	


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@191764 13f79535-47bb-0310-9956-ffa450edef68"
9bc797ba08c4b3ce4fe50423b9fbcdac358270da,"Replace abbreviated test netxaPositive with  xaSimplePositive  in the derbynetclientmats suite. Tests fix for DERBY-346 which was actually fixed by Mamta's fix of DERBY-8




git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@192968 13f79535-47bb-0310-9956-ffa450edef68"
c62aaa25f9812ddfc9ed9b64059dfbda43cc20d8,"DERBY-389
Fix a hang accessing the statement cache in network server stress test. The change was to remove the synchronization on the statement cache from the removeStatement method of GenericLanguageConnectionContext.  It is not needed because  the statement cache handles its own synchronization.   Also changes the javadoc to remove some incorrect info about temp tables.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@201792 13f79535-47bb-0310-9956-ffa450edef68"
bd5419873c4131c092c59b1c87d252082bea2a24,"DERBY-361 fix. 

Needed to force a checkpoint before compress, otherwise during crash recovery
it was possible to redo a page that no longer existed in the file because
of compress.  This fix adds a number of recovery crash and transaction 
abort tests specific to compress into the storerecovery test suite.




git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@202302 13f79535-47bb-0310-9956-ffa450edef68"
1997f22d08b5062880f849926a2aa80d3486daac,"Commit missed j9 masters from revision 190512.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@202412 13f79535-47bb-0310-9956-ffa450edef68"
38934621f52c864936ff46ce988bc0cf6f12a769,"DERBY-348: example.html file for the SimpleApp should describe the arguments
accepted by the program


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@202430 13f79535-47bb-0310-9956-ffa450edef68"
b0218ab4ab8bc53860ecf366c15b7fa42a008134,"UpdatableResultSet.out master file for jdk13 and Network Server combination
using Derby Net Client

Committed for Mamta Satoor <msatoor@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@202480 13f79535-47bb-0310-9956-ffa450edef68"
554fdde2cc55a12e164dadd78b27a310d64d6dea,"DERBY-416: Parameter in error message XJ084 is not replaced by the desired
value.

Committed for Mamta Satoor <msatoor@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@202491 13f79535-47bb-0310-9956-ffa450edef68"
3fcea8a68044fee4bd9fbef4edabb4a2afa14a6f,"DERBY-31 - Implement Connection.setQueryTimeout for embedded driver.

Patch contributed by √òyvind Bakksj√∏ - Oyvind.Bakksjo@Sun.COM


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@208650 13f79535-47bb-0310-9956-ffa450edef68"
8a3b297adbfd1e50ffba4d999ef96f9a27601b07,"DERBY-405: Disable using synonyms in SESSION schemas, to avoid confusion over temporary tables.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@208668 13f79535-47bb-0310-9956-ffa450edef68"
ff0fafb5f133508a108ea1a946548b5707af56c9,"DERBY-276 The functionality of next,previous,first,last,beforeFirst,afterLast,relative and absolute should be
aligned with ch. 14.2.2 in the JDBC 3.0 spec. Another issue found: absolute(0) should behave like beforeFirst().

Patch contributed by Bernt Marius Johnsen - Bernt.Johnsen@Sun.COM



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@208683 13f79535-47bb-0310-9956-ffa450edef68"
7d6b5edfa29b8e3eb606f359ee724d43aaaa010f,"DERBY-420: Add missing classes and update copyrights on javadoc


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@208696 13f79535-47bb-0310-9956-ffa450edef68"
374d2f1b58ca1dbc28682183c923bba6b3ddd456,"Merge 208697 from 10.1 branch. Javadoc fixes for embedded jdbc objects.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@208699 13f79535-47bb-0310-9956-ffa450edef68"
c47d471f98161725d59e8556a68f59018532c486,"DERBY-390: Patch to handle case-sensitive SQL identifiers correctly.   
Import/export procedure  parameters  for table names, schema names, columns 
names should be passed in the case-sensitive form if they are quoted identfiers
and in upper case if they are not quoted SQL identifiers. Import/export will
generate insert/select statements with quoted table names, schema name and 
column names to be execute on the database after this patch.

committed on behalf of: Suresh Thalamati



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@208770 13f79535-47bb-0310-9956-ffa450edef68"
5f0a3c04e42763a8698be6a55df6e98c3c12845b,"Add client implementation classes to engine javadoc


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@208824 13f79535-47bb-0310-9956-ffa450edef68"
cb53c6bd3cc30fba5db8e8bc193007737a8d9da6,"DERBY-398 - This patch excludes tests and suites which are expected to fail with J2ME CDC/Foundation Profile and JSR169. Here is a summary of the changes:

1. For each test to be excluded either one of the following is done:
* If <testname>_app.properties file does not exist, a new file is created with contents from default_app.properties for the test and the exclude condition ""runwithfoundation=false"".
* If <testname>_app.properties file exists, the exclude condition ""runwithfoundation=false"" is added to it.

2. For a suite to be excluded, either one of the following is done:
* If <testsuite>.properties file does not exist, a new file is created with the exclude condition ""runwithfoundation=false"".
* If <testsuite>.properties file exists, the exclude condition ""runwithfoundation=false"" is added to it.

3. The newly created <testname>_app.properties files are added to copyfiles.ant in the respective directories.

4. Readme.htm is modified with information to run tests using J2ME CDC/Foundation profile. 

Contributed by Deepa Remesh <dremesh@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@209470 13f79535-47bb-0310-9956-ffa450edef68"
93ab830251aae84eb2391af83d99e391e3a36361,"DERBY-441 - Progress on clean up of published javadoc.

- Remove some unused methods in client data sources.
- Add warnigns for connectionAttributes
- remove attributesAsPassword property for EmebeddedSimpleDataSource


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@209473 13f79535-47bb-0310-9956-ffa450edef68"
600628a4b99ded80b60fd60dd5e672d85825515e,"Derby-406 - Sets the username to start with the default value (""APP"")
Derby-410 - Sets the server name to start with the default value (""localhost"")
Derby-409 - Adds a semi-colon in the connection class to avoid databasenames like
myDBcreate=true resulting from no dividing semi-colon.
- Add javadoced methods in the derbynet/dataSourcePermissions_net.java file to test this new functionality 

Contributed by Philip Wilder <050503w@acadiau.ca>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@209498 13f79535-47bb-0310-9956-ffa450edef68"
8e8ecc5a4124705bc8666db6e491d725cfebea4c,"DERBY-398 - Enable lang/floattypes and jdbcapi/metadataJdbc20 from previous work on J2ME


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@209515 13f79535-47bb-0310-9956-ffa450edef68"
91ca88e1eaebbd32dcdd9184626869cd8982af04,"DERBY-331 This patch fixes a look-ahead problem in the parser: In the method DB2DefaultOption,
the look-ahead for miscBuiltins is too liberal: it mistakenly thinks it has found a
builtin in this case. I made the look-ahead more specific by adding a check against comma.

Contributed by Dag H. Wanvik <Dag.Wanvik@Sun.COM>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@209842 13f79535-47bb-0310-9956-ffa450edef68"
2b9edce2d81bfbc3c999ce1bda3a17c052c02902,"DERBY-447
This patch implements getBoolean() method in BigIntegerDecimal, which is the class used for DECIMAL support
in J2ME/CDC/Foundation. The method returns false for zero or null values and true for all other values.

Contributed by Deepa Remesh dremesh@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@209845 13f79535-47bb-0310-9956-ffa450edef68"
458200ea8c03fd50a140fc212218b3bc36933d3a,"record vote results for Bernt and Oyvind

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@209874 13f79535-47bb-0310-9956-ffa450edef68"
b99963bf5f6ee57ff13a32e975ea1c1bfc227bdf,"DERBY-419 - Support direct execution of derbynet.jar using the -jar option of the VM.
Add manifest entries to derbynet.jar.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@216286 13f79535-47bb-0310-9956-ffa450edef68"
851bcbb284a7e294f35a2bd8ccdb553bc4677673,"Port fix for DERBY-388 into 10.1 branch. Address intermittent failures when executing trigger statements caused by references to internal SQL formats.

Fix originally submitted to 10.0 branch by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@219115 13f79535-47bb-0310-9956-ffa450edef68"
f7a03bed9a366604958b833f6474293da3942e85,"Fix for DERBY-437.

Currently for compress procedure to work incase of case-sensitive table name, 
schema names, they  needs to be passed in quotes like 
(  call SYSCS_UTIL.SYSCS_COMPRESS_TABLE('APP' , '""Order""'  ,1). 
This behaviour is not consitent with other procedures and the docs.
This patch makes compress procedure  parameters  for table names,
schema name should be passed in the case-sensitive form
if they are quoted identfiers and in upper case if they are not quoted SQL 
identifiers, similar to other system procedures.  Compress procedure
generates   ALTER COMPRESS  statement.with quoted table name and  schema name.

Committed on behalf of: Suresh Thalamati



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@219207 13f79535-47bb-0310-9956-ffa450edef68"
b1b91206e1416d892e4dd766adac8ed42f0abb1c,"DERBY-409  This is a potential patch for the issue brought up in DERBY-406
connectionAttributes will now default to null (aka no default) 

Patch contributed by Philip Wilder 050503w@acadiau.ca


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@219256 13f79535-47bb-0310-9956-ffa450edef68"
ab12b7e6d4d320734ab4abe407b7ff191f2c6a66,"DERBY-452 - In J2ME/Foundation, getObject was throwing an exception because getObject on DECIMAL types is not supported.
I removed the call to getObject since it was a redundant check. getString internally checks for null values.

Patch contributed by Deepa Remesh dremesh@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@219259 13f79535-47bb-0310-9956-ffa450edef68"
1e05915c68806b1a74d7bfb334276b62ec21919f,"DERBY-459 - Close error stream to make lang/errorStream test consistent.

Contributed by  Dag H. Wanvik dag.wanvik@sun.com


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@219265 13f79535-47bb-0310-9956-ffa450edef68"
65aa0260f46c8afa1fa43368ccc3d71ffb7c5070,"add vote result for David Van Couvering

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@219331 13f79535-47bb-0310-9956-ffa450edef68"
e35a28a3aba68a7de67cca0202bf22e3a9080038,"update 10.1 release status

git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@219332 13f79535-47bb-0310-9956-ffa450edef68"
a9d1988aaa477fa93f8f861894d6d03a9888d27d,"DERBY-217 Finish adding batch test cases for setXXX methods in jdbcapi/parameterMapping.java


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@219679 13f79535-47bb-0310-9956-ffa450edef68"
882de537f6006b983eb694da586a6583cf0df8e4,"lang/LOBDB2compatibility.sql incorrectly creates and uses a new database rather
than the wombat database created by the test harness.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@220006 13f79535-47bb-0310-9956-ffa450edef68"
751111771ca17ea1a278492547885635ac5fb0b0,"Move QualifierUtil into testing tree since it is a test class.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@220013 13f79535-47bb-0310-9956-ffa450edef68"
7a92d1fce2ee5a515bdfae9c585ac2f1eed678a5,"DERBY-467 Remove direct access to privilige blocks by making classes/methods as private
as possible, either private or package protected if possible. Also make such classes and
methods final wherever possible.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@220015 13f79535-47bb-0310-9956-ffa450edef68"
6090e01418d25b6e0f8b0990713d05c39b71d940,"DERBY-467 Seal most (as many as possible) packages in the derby jar files to
disallow application extending package protected classes or methods and 
thus deny direct calling of internal code.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@220017 13f79535-47bb-0310-9956-ffa450edef68"
ad94faa12b8a8a0f04bba30e62428b8f0b979ab5,"DEBRY-467 - Unseal one package in derby.jar iapi.services.context that is also in derbytools.jar.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@220300 13f79535-47bb-0310-9956-ffa450edef68"
7ac7a9cb407248077f015ea4c0aa90b469ba1e63,"DERBY-466: Reset nextCalled in SortResultSet.openCore() to handle the case of eliminating duplicates without a sorter for a distinct operator.

Submitted by Manish Khettry (manish_khettry@yahoo.com)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@224427 13f79535-47bb-0310-9956-ffa450edef68"
4823479aa732f40fb7196e45d36cb5344427b4f4,"Fix a problem building with -Dsane=false. The ensuresanitystate target
would cause sanity to be set to true even though sane=false and the correct
SanityState.java and state.properties were generated. Also update BUILDING.txt
to remove the mention of the property 'sanity' which should only be set from
state.properties.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@225581 13f79535-47bb-0310-9956-ffa450edef68"
727b6a31fc2a1f09f53415df5d3c74c99589b209,"DERBY-479 Add test case to demostrate bug using the return of a function declared
RETURNS NULL ON NULL INPUT into another function.


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@225812 13f79535-47bb-0310-9956-ffa450edef68"
f3a2ea7b797777c2923c3608f63f65c3ea93fcac,"DERBY-407: Address inconsistant behavior with predicatesIntoViews test.

Set the ""derby.optimizer.noTimeout"" property to true for the predicatesIntoViews test. 

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@226308 13f79535-47bb-0310-9956-ffa450edef68"
3e02686afb9740e58dcc23e56694411fa3aadbd5,"DERBY-476: Make Derby UI plugin compatible with Eclipse 3.1M6 or higher.

Committed for Susan Cline <home4slc@pacbell.net>


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@226443 13f79535-47bb-0310-9956-ffa450edef68"
2fe4eaa65a6251e26ccade3c26e931f66f7fc726,"Add a test for database class loading (lang/dcl.sql)


git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@226474 13f79535-47bb-0310-9956-ffa450edef68"
14d5f009fde2e9cb72069b58de002245e5d063dd,"DERBY-475 Add a table driven mechanism to allow simple one argument
functions to be added easily. These functions exist only at runtime
in the SYSFUN schema and are resolved to with an explicit use of SYSFUN
or an unqualified functon name. Start off with a set of stanadard
functions from the java.lang.Math class.



git-svn-id: https://svn.apache.org/repos/asf/incubator/derby/code/trunk@226528 13f79535-47bb-0310-9956-ffa450edef68"
81118b63c89b17d61a7634fef671aab9c74b5841,"move Derby from Incubator to DB

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@226700 13f79535-47bb-0310-9956-ffa450edef68"
8f2354880cced63875b735244cd1d1e13970a6b8,"DERBY-388: Add a test case to cover this patch submitted earlier.

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@226896 13f79535-47bb-0310-9956-ffa450edef68"
2537b48cd0a68a3fee3314a1dc0ef6d3ead4e486,"DERBY-7: The NULLIF built-in function of Derby seems to accept
only string types. Passing any other type argument raises error.

Fix submitted by Mamta Satoor (msatoor@gmail.com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@227281 13f79535-47bb-0310-9956-ffa450edef68"
0f7310ed0fe68178cf31d8cdd1046a827fa72126,"DERBY-488 Merge fix 227406 from 10.1 branch. Cast return from generated setWidth call to type of field it will be stored in.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@227518 13f79535-47bb-0310-9956-ffa450edef68"
2542f1dd830d2fe6a6532b09dab7c44acf16d825,"DERBY-485 Catch SecurityExceptions and LinkageExceptions consistently when loading application
classes (e.g. procedures, functions) and report as a ClassNotFoundException with the text of
the underlying exception. Enhance the test lang/dcl.jar to have a signed jar file as a database
jar, a hacked version of the jar file and a jar file with an invalid class (for a LinkageError).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@230183 13f79535-47bb-0310-9956-ffa450edef68"
e214c072c3b33f7d3d39bfb7508d5468832c11e8,"DERBY-412 - Connection toString should show type information and the meaning of the identifier that it prints - Patch by David Van Couvering(David.Vancouvering@Sun.COM)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@230523 13f79535-47bb-0310-9956-ffa450edef68"
71735ea7fab2693b8f7ac6f7b528a757078d6e41,"add maven build to simplify upload to repos

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@230685 13f79535-47bb-0310-9956-ffa450edef68"
75fb1cf8f8d937d8da37d840b3c565ced25b5058,"Submitting Dyre Tjeldvoll's patch for DERBY-336


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@230900 13f79535-47bb-0310-9956-ffa450edef68"
444aa520e4a3394ded454ccc4e24962c2248570b,"Committing changes for DERBY-171 - Need correlation ID in UPDATE/DELETE statements.
Submitted by Rick Hillegas.  

Comments from Rick:

I have added the optional correlation name clauses to the UPDATE and DELETE productions in the parser and added supporting bind-time logic. In addition to fixing this particular bug, I have significantly changed the binding of correlated subqueries which have GROUP BY or HAVING clauses: I am now passing the outer fromList context down the subquery binding stack. This makes it possible to bind correlated references in those subqueries and fixes a cluster of other bugs. These other correlated subqueries were failing to compile because the bind logic did not match the way that the parser rewrites the query tree in these cases. I tripped across these problems in the lang/refActions1.sql regression test. I have extensively updated the canon for that test. Looking at the old canon, it appears to me that the old canon was riddled with incorrect results.

Here are some responses to issues which Army raised while reviewing the first rev of this bugfix:

1) This bugfix fixes some other, unlogged bugs. These are basically syntax errors raised by the parser when it encounters correlated references in subqueries which contain GROUP BY or HAVING clauses. The problem was that the parser does something clever. It takes advantage of the fact that the HAVING clause functions like a WHERE clause on the GROUP BY result. The parser then makes the GROUP BY result an outer query with the HAVING clause as its WHERE clause, and the parser then turns the rest of the SELECT into a subquery which feeds the GROUP BY outer query. However, the the binding logic for these rewritten GROUP BY results was not as clever as the parser. Subselects which had GROUP BY or HAVING clauses were not passed the list of correlated tables and so failed to bind correlated references. Perhaps an example would help:

   select e.* from employee e
   where e.bonus <
   ( select b.bonus from bonus b where b.empid=e.empid group by bonus having bonus > 3)

In this case, the query would be rewritten to have 3 rather than 2 levels. The outer level would remain like the original. But the subselect would be rewritten to have its own outer select, consisting of the GROUP BY and HAVING clauses and an inner select consisting of the SELECT B.BONUS. In binding this query, level 1 would pass its correlated from list down to level 2, but level 2 would not pass the list on to level 3. However, level 3 needs the correleted from list in order to resolve b.empid=e.empid.

2) This bugfix changes some queries in refActions1.sql. These are queries which used to raise syntax errors.because of the bugs mentioned in (1) above. I first changed these queries by qualifying some dangling references with correlation names. I did this to prove that the syntax errors were not being caused by ambiguity. I verified that the changed queries continued to raise the same syntax errors. Then I fixed the bugs mentioned in (1) above. Most of the queries then successfully compiled. What did the authors of this test hope to demonstrate? It's hard to say since the comments indicate that these statements are supposed to both be correlated and to complete successfully but, of course, they didn't. complete. The changed queries satisfy the minimal contract in the comments: the statements have correlated references and they complete successfully. Do these changes mask other bugs? Possibly. Were those other bugs disclosed by the previous state of the test? No, The changed queries at least track something useful now: syntax that is supposed to compile. I think this is an improvement.

Second rev of bugfix. Incorporates Army's feedback: 1) Removes FromBaseTable.java, which had a vacuous diff, 2) Moves regression tests into update.sql and delete.sql.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@231366 13f79535-47bb-0310-9956-ffa450edef68"
e768f0d9fda8779043b54e895cb2edcad0ecee38,"Quick patch submitted based on Kristian Waagan's feedback.  I did not feel
a JIRA id was necessary for this fix.

From Kristian:

Today I was setting up the environment to be able to build Derby on a
new machine. I quickly browsed through the BUILDING.txt file, and by
mistake I set both 'j13lib' and 'j14lib' to 'JDK1?_HOME/lib' instead of
'JDK1?_HOME/jre/lib'. After a short moment of temporary confusion, I
realized why I did the mistake. In the section that describes what kind
of slashes to use in path names on Windows, the example value for
'j13lib' is 'c:/jdk1.3.1_15/lib'. This section comes in front of the
sections that actually describe what the values should be.

Although this is a tiny, tiny ""improvement"", I suggest setting the
example value to 'c:/jdk1.3.1_15/jre/lib' to avoid unnecessary errors
caused by not reading the documentation carefully


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@231524 13f79535-47bb-0310-9956-ffa450edef68"
54d2c35a3348e62e5f8eb68052dc1cc5b7000431,"DERBY-508: Wrong classname in javadoc for ClientDataSource. Fix by Knut Anders Hatlen <Knut.Hatlen@Sun.COM>

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@232982 13f79535-47bb-0310-9956-ffa450edef68"
d556677817e1e2187a439faf8e692a0e305da2b3,"DERBY-324: AES encryption test fails on Solaris 10. Fix by Olav Sandstaa

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@232997 13f79535-47bb-0310-9956-ffa450edef68"
fc21974dede09394427bccd49bfe0045065fc257,"Update STATUS file with recent news.

Committed for Rick Hillegass <Richard.Hillegass@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@233074 13f79535-47bb-0310-9956-ffa450edef68"
e48b5ae060fe3ecc02bcc1699b2d3325a229898e,"DERBY-463: Fixes bug with successive writes to a blob.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@233487 13f79535-47bb-0310-9956-ffa450edef68"
15d8bf21da899fb76908f1373761574ee1132053,"DERBY-427: Fix cloudscape reference in ij error message.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@233562 13f79535-47bb-0310-9956-ffa450edef68"
1da4958bc1076458fb002c7b0ea0791fae581398,"Fixed added files in DERBY-463 commit (revision 233487) which were garbled due to finger trouble with the svn revert and patch commands.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@234453 13f79535-47bb-0310-9956-ffa450edef68"
1ee4dcd15ed0cfcde72b612e9ced65979d54e559,"DERBY-496 - unit test 'org.apache.derbyTesting.unitTests.services.T_Diagnosticable' was failed - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@234472 13f79535-47bb-0310-9956-ffa450edef68"
f64cf6c596c86475f0d310507a4e303772eb2a49,"DERBY-527: Return default build state to sane.

Committed for Philip Wilder <050503w@acadiau.ca>

Also fix problem if ${sane} was not set at all.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@234508 13f79535-47bb-0310-9956-ffa450edef68"
e1b8b606ffc11824a5259e8c10d1e49384c9777e,"DERBY-470 - Exception when using LOCALIZEDDISPLAY with JSR169

1. Check for BigDecimal class in the JVM by doing a Class.forName
2. Call getNumberAsString for NUMERIC and DECIMAL types only if BigDecimal class is available. Otherwise, return rs.getString. 

		Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@239718 13f79535-47bb-0310-9956-ffa450edef68"
949ce9209af3d00324119ee1ee7a9ee7acb82706,"Cleanup some unused code in FileResource and its implementation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@240088 13f79535-47bb-0310-9956-ffa450edef68"
58b6bfb0f13efe1e09862d97d627097ed4ddc718,"DERBY-537 - Improve dcl test to use extdirs which causes the jar files to
be cleaned up if the test passes and will make for clearer permission granting
once the test passes with a SecurityManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@240099 13f79535-47bb-0310-9956-ffa450edef68"
bf4839e7e22ac05652d6703438fdbfff30f16e00,"DERBY-540 Do not prepend database name for classpath databases with leading slash.This causes
databases to be not found when in jar files on the database. Correct the lookup of resources
in the class path storage factory to not use the methods that prepend the current class name,
instead use methods from ClassLoader directly. The leading slash was incorrectly added to avoid
the automatic package prepending performed by Class.getResource.
Removed code that tried to optimise not using the thread context class loader, simply have a
fixed lookup for resources of thread context class loader followed by class loader for Derby/system classloader.
Add lang/dbjar.sql to test databases within a jar and within a jar on the classpath and class loading from such databases.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@240111 13f79535-47bb-0310-9956-ffa450edef68"
4b52a7ed8a51ac5a0a89bcb7685c1953b0750745,"DERBY-538 Add testing of of fetching resources from a jar file installed in a database.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@240291 13f79535-47bb-0310-9956-ffa450edef68"
9a32c464ddf7075bfe142514556f2cb1d1d42804,"DERBY-535 Driver.acceptsURL() for embedded driver incorrectly returns true for
a client url like jdbc:derby://

Changed embedded driver to reject network URL's
Added test for testing driver methods.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@240352 13f79535-47bb-0310-9956-ffa450edef68"
2c41f62e584fb5217f63afcbc06ef016fa309535,"DERBY-536: fix build.properties in Derby help plug-in for eclipse.

Committed for Susan Cline <home4slc@pacbell.net>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@240358 13f79535-47bb-0310-9956-ffa450edef68"
3d44317fe94d8be6dd8d6624203c93d29fd8bb1f,"Exclude checkDriver test from J2ME testing since there is no java.sql.Driver



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@240368 13f79535-47bb-0310-9956-ffa450edef68"
e3acc4a021ccd91d873a1113ad988fb9e026acc0,"DERBY-213 - ResultSet.next() after last row of FORWARD_ONLY cursor throws an SQL Exception with Network Server

- Additional tests in jdbcapi/resultset.java
- Change to special flag to fix a small NullPointerException
- modified output files for resultset.out, updatableResultSet.out, holdCursorJDBC30, forupdate.out
- Changes to ResultSet, Statement and Connection in the org.apache.derby.client.am package. These changes have the following effects:
      * FORWARD_ONLY ResultSets will no longer close implicitly after the last ResultSet has been retrieved.
      * Checks to see if an auto-commit should be performed have been moved to Statement to mimic embedded functionality.
      * Multiple ResultSets will now auto-commit if all ResultSets are closed if auto-commit is turned on.

	
Contributed by Philip Wilder



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@264128 13f79535-47bb-0310-9956-ffa450edef68"
07ab7d6815cbf5c2b056c4b03feefe298b71bf71,"DERBY-518 - Data type mismatch error for boolean to DECIMAL conversion in J2ME
Partial checkin for DERBY-453 - Create a test wrapper to run tests using BigDecimal in J2ME/CDC/Foundation


1. Added setValue(boolean) to BinaryDecimal. This fixes DERBY-518.
2. Created a wrapper class BigDecimalHandler to be used in tests.
3. Test jdbcapi/resultset.java modified to call the wrapper methods in BigDecimalHandler
4. resultset.out master files modified
5. Comment in resultsetapp_properties modified. resultset test still fails in J2ME because of additions to the test. This will be tracked in DERBY-453. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@264945 13f79535-47bb-0310-9956-ffa450edef68"
48e8f30ae24e510c7631b905f2575ee9ecf8b977,"DERBY-453 - Second checkin to add BigDecimalHandler
	Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@265043 13f79535-47bb-0310-9956-ffa450edef68"
6418c2947c975da4c3be046600dec1e788d82bf1,"DERBY-538 Merge test cases from dbjar.sql into dcl.sql to avoid having to write
test cases in two places. Add tests for reading resources from jarfiles stored
in the database when the database is archived in a jar file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@265763 13f79535-47bb-0310-9956-ffa450edef68"
cf4bc39a31a30121d8fe618ad182bc0bbb28ff1a,"DERBY-468: Unreserve COUNT keyword, so it can be used as an identifier.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@266286 13f79535-47bb-0310-9956-ffa450edef68"
abbaf4e0026695f2ee1d8c288885758079c89933,"DERBY-504: Disable pushing down DISTINCT when number of columns from the parent query and the subquery don't match. Can lead to wrong results.

Thanks to Rick for persistant reviews and running the tests.

Submitted by Knut Anders Hatlen (Knut.Hatlen@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@267239 13f79535-47bb-0310-9956-ffa450edef68"
55b25e3ef9ebcddb528716cd2083da05a2359d98,"DERBY-353: Return last user specified value for IDENTITY BY DEFAULT columns. The fix changed:

a) Inside the InsertResultSet class getSetAutoincrementValue function the Data Dictionary is accessed to get the current identity value. Which is then updated in the identityVal variable which is then used by the identity_val_local() function to display to the user. 

b) The above process did not happen when there was a user supplied value. The system table was not accessed and the setIdentity() function in the GenericLanguageContext class was not called. 

c) My fix attacked the case when the user supplies a value for the identity column which can be done in the case of Generated by default and calls the setIdentity function to store the value in this case also. 

Thanks to Rick for doing code reviews.

Submitted by V Narayanan (V.Narayanan@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@267331 13f79535-47bb-0310-9956-ffa450edef68"
5fb2536e5330dea2b967290f82f9f9ab98d94b6f,"DERBY-496 - unit test 'org.apache.derbyTesting.unitTests.services.T_Diagnosticable' was failed (Adding DiagnosticUtil explicitly)- Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@278581 13f79535-47bb-0310-9956-ffa450edef68"
08cd3aab27ab03bf183197b9ca5e68267bc47d11,"DERBY-421 This patch gets the isolation level state information in BrokeredConnection in sync with
the Real Connection's isolation level state. This is necessary because any isolation level changes using SQL
do not get to BrokeredConnection and hence BrokeredConnection can end with the incorrect isolation level state.
The change adds a new flag in GenericLanguageConnectionContext, namely isolationLevelSetUsingSQLorJDBC.
This flag gets set to true anytime isolation level is changed using JDBC or SQL. Later, at the start and end of a
global transaction, EmbedXAConnection checks if the flag is set to true and if yes, it puts the real connection's
isolation level into into BrokeredConnection and then resets the flag in GenericLanguageConnectionContext.
The reason for adding methods for this flag maintenance in both BrokeredConnection and EmbedPooledConnection
is that BrokeredConnection does not have access to GenericeLanguageConnectionContext which has the flag.
EmbedPooledConnection does have access to GenericLanguageConnectionContext and hence the methods in
BrokeredConnection have to go through EmbedPooledConnection. 

Patch contributed by Mamta A. Satoor msatoor@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@279087 13f79535-47bb-0310-9956-ffa450edef68"
030754268030d25672a675053a0fda12cedc5403,"Remove test dbjar.sql as its test cases have been merged into lang.dcl.sql
to avoid duplication of effort.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@279393 13f79535-47bb-0310-9956-ffa450edef68"
3292941ad5495aacef002003311e558b97178b78,"DERBY-213 additional checkin to rearrange tests
Moved procedure tests to lang/procedure.java so that resultset.java 
can run with J2ME
		Contributed by Philip Wilder
	


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@279420 13f79535-47bb-0310-9956-ffa450edef68"
ace95fa4997788a03b02efe5435b3657ff3df4e4,"DERBY-398 README.htm update
 This patch updates Section 2.1 and 4.9 of testing/README.htm.

1. The following jvms are added to list of supported jvms:
      j9_13 - WCTME jvm (available with IBM Websphere Studio Device Developer, 5.6), version 2.1 - class j9_13
      j9_22 - WCTME jvm (available with IBM Websphere Client Technology Micro Edition, 5.7), version 2.2 - class j9_22
      j9_foundation - WCTME jvm (available with IBM Websphere Client Technology Micro Edition, 5.7), version 2.2, foundation library - class j9_foundation

2. Following information about exclude flags for j9 jvms added to Section 4.9: ""For j9 jvms, versioning does not apply currently. For all j9 versions, use runwithj9=false. For j9_foundation, use runwithfoundation=false.""
	Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@279429 13f79535-47bb-0310-9956-ffa450edef68"
b813cfe7f3ae677f2fd0780a4e3c0d490b5624f8,"DERBY-538 add test case for transactional state of modifying a jar file using sqlj.install_jar, with rollback.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@279451 13f79535-47bb-0310-9956-ffa450edef68"
07ae282a9ee48201290a6e7f8922da4077358382,"cosmetic; fix javadoc and imports to make idea happy

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@279839 13f79535-47bb-0310-9956-ffa450edef68"
09a7325f75a4f96a7735e46c9723930f88ea2613,"DERBY-561 - Embedded driver jdbcCompliant() method should return true
Test will be checked in as part of tess for DERBY-530



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@279860 13f79535-47bb-0310-9956-ffa450edef68"
b66f5cb6ac9707660320dbff67f1b9935fd470fd,"Enable restultset test for J2ME

	Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@279926 13f79535-47bb-0310-9956-ffa450edef68"
fc773e62ce6641981c9d3166b605c496e747fd7a,"DERBY-213 Master update for updatableResultSet.out for jdk131  
	Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@279930 13f79535-47bb-0310-9956-ffa450edef68"
4576b149dd798d08e965b136ae126d025b5fca98,"DERBY-217: master file update for parameterMapping.out due to revision 219679.

Committed for Army Brown <qozinx@sbcglobal.net>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@280433 13f79535-47bb-0310-9956-ffa450edef68"
ac3bec630051797e01c2f32310b26714505468e4,"DERBY-563: Add XML test suite to allow testing of the XML datatype and related
operators.

Committed for Army Brown <qozinx@sbcglobal.net>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@280680 13f79535-47bb-0310-9956-ffa450edef68"
5f855e86e9c1fc8ba8d68dae4770fc4ea9b47637,"Fix minor problem with iepnegativetest.sql.  Make codeset on import match 
codeset of export in test of valid import/export.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@280685 13f79535-47bb-0310-9956-ffa450edef68"
aff4e3291907ba17be36c1f484a318ecfeeb47f3,"Remove the LOBDB2compatibility_app.properties to allow this test to run under J2ME.
Test was changed not to use a (not-required) connect statement in a previous commit.
The only reason for the LOBDB2compatibility_app.properties file was to skip the test on J2ME.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@280702 13f79535-47bb-0310-9956-ffa450edef68"
82d721fd53e30dbb86d6d742c085030985091968,"DERBY-530 
ClientDriver ignores Properties object in connect(String url, Properties connectionProperties) method

Send both the properties specified in the info parameter and those specified in the url to the server in the RDBNAM. user and password attributes will be the exception. user and password will be sent via the standard DRDA mechanism and excluded from the attributes sent with RDBNAM whether specified with the url or info properties. As a result of the combination, the order of attributes sent to the server may be different than originally specified in the URL.

Also added additional driver tests and attrbute tests to checkDriver. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@289227 13f79535-47bb-0310-9956-ffa450edef68"
d387dac7bdcd94ca7365210da70245cc893423c7,"Cleanup of CompilerContext code.
Store a reference to the LanguageConnectionContext in the CompilerContext
to avoid re-fetching it from the stack on very use. A CompilerContext is
specific and private to a LanguageConnectionContext, added comments to that effect.
Remove unused code related to parameter modifications within the compiler context.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@289298 13f79535-47bb-0310-9956-ffa450edef68"
90f16141b17352af5c934f3cf8bdbbb90c40624e,"DERBY-557 
Client driver gets OutOfMemoryError when re-executing statement without closing ResultSet 

Attached a patch which fixes the bug. The patch ensures that the ResultSets associated with a Statement/PreparedStatement are removed from CommitAndRollbackListeners_ in org.apache.derby.client.am.Connection when the statement is re-executed.

I have run derbyall with only one error (wrong length of encryption key, not related to the patch). I have also run the program in the problem description (both with Statement and PreparedStatement), and the memory usage doesn't increase over time.

		Contributed by Knut Anders Hatlen
	


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@289539 13f79535-47bb-0310-9956-ffa450edef68"
fd24a7590ff5426bac68303fbeca07dbc5067412,"DERBY-530 

Addtional test checkin to fix output on non-windows platforms



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@289989 13f79535-47bb-0310-9956-ffa450edef68"
896f5748e0a4b3c426a237bf63fcc1f634ac3ab5,"DERBY-23: just booting jdbc driver and shutting down seem to leak memory. Fix by : Knut Anders Hatlen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@290644 13f79535-47bb-0310-9956-ffa450edef68"
d051e29e498c8d968e79723d7558972be8d2cec3,"Merge tools/release part of 290863 to trunk.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@290864 13f79535-47bb-0310-9956-ffa450edef68"
b9c171c5b0789cbcd99071c593b5da7dba3b88f6,"DERBY-453
Create a test wrapper to run tests using BigDecimal in J2ME/CDC/Foundation

This patch (derby_453_outparams_patch1.diff) changes tests.

* It enables the tests which use procedures in outparams.java to run in J2ME/CDC/FP. The following tests have been enabled:
         - lang/lang/outparams.java
         - jdbcapi/batchUpdate.java
         - jdbcapi/StmtCloseFunTest.java


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Changes to outparams.java:
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

* The methods 'takesBigDecimal' and 'returnsBigDecimal' are moved from outparams.java to a new class outparams30.java. These methods use java.Math.BigDecimal class which is not available in J2ME. This separation is needed because Connection.prepareCall looks at all the public methods available in the specified class. If the class has any public method using BigDecimal, it will fail in J2ME.

* For procedure names, outparams class will be used for J2ME and outparams30 for non-J2ME.

* Variables HAVE_BIGDECIMAL and CLASS_NAME are added to outparams.java. Depending on the availability of BigDecimal class in the JVM, CLASS_NAME is initialized to outparams or outparams30. CLASS_NAME is used in the create procedure SQL instead of ""org.apache.derbyTesting.functionTests.tests.lang.outparams."".

* The content of the arrays 'outputMethods' and 'returnMethods' are also decided based on value of HAVE_BIGDECIMAL. For J2ME, takesBigDecimal and returnsBigDecimal are removed from these arrays. To minimize changes to the master file, the order of these arrays is kept same. An if/else loop is used to determine which array will be used.

* callSetMethod, callSetObject and callGetMethod are changed to use wrapper methods in BigDecimalHandler class. An additional parameter 'int paramType' is passed to callGetMethod. This is needed because ParameterMetaData is not available in JSR19. A new array 'paramJDBCType' with the JDBC types (java.sql.Types) for the corresponding methods is used to get the param type for a method. When creating this array, I noticed that outputMethods and returnMethods do not match. To make them match, a null value has been removed from outputMethods and outProcParam arrays.
* testMisc method used returnsBigDecimal to check that a set cannot be called on an output param. This check is independent of the type of output param and so returnsString is used intstead.

* test5116 method uses a procedure with nested connection, which uses java.sql.Driver. This is not available in JSR169. So this test is done only for non-JSR169 environments based on value of HAVE_DRIVER_CLASS.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Changes to org.apache.derbyTesting.functionTests.util.BigDecimalHandler.java:
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
* Added wrappers for following methods:
CallableStatement method getBigDecimal(int parameterIndex)
PreparedStatement method setBigDecimal(int parameterIndex,BigDecimal x)
PreparedStatement method setObject(int parameterIndex, Object x)

* Fixed the type conversions and moved it to an array, which is used in the method canConvertToDecimal.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Changes to master files:
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
* The master files for main and j9_13 are modified to use returnsBigDecimal instead of returnsString in output for testMisc method. On comparing the two master files, they are identical. I think the master file for j9_13 can be removed. I have not done it in this patch. Is it okay to do this?

* Added a master file for j9_foundation. This is needed because of the following:
- takesBigDecimal and returnsBigDecimal methods are not in outputMethods/returnMehtods.
- The exception strings for type conversion and invalid character format are different because of use of wrapper methods.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Changes to <testname>_app.properties:
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
* Removed excludes for J2ME for following tests:
- lang/outparams.java
- jdbcapi/batchUpdate.java
- jdbcapi/StmtCloseFunTest.java

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Changes to tests which use procedures in outparams.java
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
* jdbcapi/batchUpdate.java and jdbcapi/StmtCloseFunTest.java are modified to use outparams/outparams30 depending on value of HAVE_BIG_DECIMAL.

* jdbcapi/StmtCloseFunTest.java was using a deprecated constructor for java.sql.Date, which is not available in JSR169. So the constructor java.sql.Date(long) is used instead.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Tests Run
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
This patch changes tests only. I had run derbyall in J2SE and J2ME. 1 expected failure in J2ME. But I made few changes before submitting this patch. After the changes, I ran the individual tests successfully.
-------------------------------------------------------------------------
	Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@291045 13f79535-47bb-0310-9956-ffa450edef68"
c2393d4d3fb2222baddd6c52be1996bba6dedb92,"DERBY-453 
Add additional master for j9 outparams.
	Contributed by Deepa Remesh




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@291047 13f79535-47bb-0310-9956-ffa450edef68"
ba425b36f2e79d8fc3a84b1aa5a62454b803f056,"Merge change to regex.masters target from revision 291046 to trunk.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@291048 13f79535-47bb-0310-9956-ffa450edef68"
76442ee6066c999560a511c436de8c601f4dbb23,"Merge 219915 to trunk


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@291196 13f79535-47bb-0310-9956-ffa450edef68"
d506e0ad6d4fe24cc3b43d3c3527db828d75806c,"DERBY-453 
additional checkin for parameterMetaDataJdbc30.java 
Changed the test to use returnsBigDecimal method from outparams30.java
	Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@291228 13f79535-47bb-0310-9956-ffa450edef68"
cd24ce30405c42deef8707a14ab4aa609bd3bd94,"DERBY-149
Fix Server hang when invalid string is bound to datetime columns.
Changes network server to skip only the current DSS and not all chained DSS's 
when parsing parameter data in SQLDTA.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@291721 13f79535-47bb-0310-9956-ffa450edef68"
fd79e0f03795049908c55969a2de0cbc230d3a25,"DERBY-385
servlet Back to Main Page link points to csnet instead of derbynet
	contributed by Myrna van Lunteren



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@292230 13f79535-47bb-0310-9956-ffa450edef68"
1022f8fcc006c2e377676044aa02d93dccc69e44,"DERBY-525 - getAsciiStreamshould replace non-ASCII characters with 0x3f, '?' to match embedded - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@292414 13f79535-47bb-0310-9956-ffa450edef68"
ff049ad790fb78e55c5e755188125c1cccfd5c99,"fix of DERBY-562, committing patch for: Sunitha Kambhampati

 This patch
 - changes the error message thrown when the stream is either less or greater than the requested length to
 'Input stream did not have exact amount of data as the requested length.'
 - enhances the characterStreams.out test, to print out the nested sql exceptions to ensure that the proper error message is returned.
 - updates to the master files.

 I verified that we are testing for these two error cases (ie stream has less or more data than requested length), for the following supported stream related api - setCharacterStream, setAsciiStream, setBinaryStream on PreparedStatement. Derby does not support setUnicodeStream api that is deprecated in jdbc 3.0. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@292830 13f79535-47bb-0310-9956-ffa450edef68"
ddc6f41fe2614bd1b6e6417ca3be1dbb3a96350e,"DERBY-571 Virtual Table Mapping for no argument Diagnostic tables
Add code to map from a table definition to a vti constuctor at compile
time. Only supported for no-argument virtual tables and limited
to table driven set of diagnostic tables, lock_table, transaction_table,
statment_cache and error_messages. Initial step towards a more
generalized application defined virtual table solution.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@292876 13f79535-47bb-0310-9956-ffa450edef68"
7a7145264c30cefb2ed0a7921751d46f8908b57b,"j9_foundation master updates for Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@292877 13f79535-47bb-0310-9956-ffa450edef68"
7e6c096e654c91ba87c641a1ebb5d0697e9eddcf,"DERBY-593

Add jdk14 suite to network server tests

This patch adds jdk14 suite to derbynetmats. Ran derbyall with Sun jdk1.4.2. No failures. A summary of tests is below:

Total tests in jdk14 suite: 10
DerbyNetClient: 7 pass, 3 excluded
DerbyNet: 6 pass, 4 excluded

jdbcapi/autoGeneratedJdbc30.java - PASS - With no changes
jdbcapi/dbMetaDataJdbc30.java - PASS - With no changes
lang/holdCursorJava.java - PASS - Minor change to test for DerbyNetClient. EXCLUDE for DerbyNet.
jdbcapi/checkDataSource30.java - EXCLUDE - Need to look into failure
jdbcapi/parameterMetaDataJdbc30.java - PASS - With no changes
lang/procedureJdbc30.java - PASS - Added new master files
jdbcapi/resultsetJdbc30.java - EXCLUDE - None of the tested features are supported by both client drivers
jdbcapi/statementJdbc30.java - EXCLUDE - Need to look into failure
jdbcapi/savepointJdbc30.java - PASS - With no changes
store/bootLock.java - PASS - With no changes 

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@292910 13f79535-47bb-0310-9956-ffa450edef68"
a36fdb788ce7b9f2bec78784e44dc11150571af2,"DERBY-374

Invalid URL with Derby Client when connecting to Network Server causes protocol exception.

This patch does the following:

1. Network server used to give NPE when InternalDriver returns null connection for certain malformed URLs. With this patch, network server checks for null connections returned by InternalDriver and returns RDBAFLRM and SQLCARD with null SQLException.
2. The client parses the SQLCARD and if finds null SQLException, it sets connectionNull variable in NetConnection to true.
3. ClientDriver connect method, which calls the constructor of NetConnection, gets back an object with connectionNull set to true. And it inturn returns null connection.
4. Added tests to checkDriver.java for more Client URLs. 

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@292917 13f79535-47bb-0310-9956-ffa450edef68"
00d8393fed3b173a735b799a855a8eda7756ffa2,"DERBY-404 Remove buggy code from RowUtil.isRowEmpty and never used parameter and fix callers.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@293436 13f79535-47bb-0310-9956-ffa450edef68"
c33cf30319194dc02a78ca84749f98551458e9e8,"DERBY-558: Fix optimizer hang seen for large queries with exists-joins.

The patch does the following: 

1) Fixes the logic in OptimizerImpl.java that was causing the hang (an indirect infinite loop). 
2) Adds some comments describing the ""JUMPING"" logic that is in OptimizerImpl so that developers looking at the code can (hopefully) figure out what's going on more quickly in the future. 
3) Adds a test case to the lang/subqueryFlattening.sql test for verification of the fix. The test case is based on the repro attached to this issue. NOTE: I had to set the ""derby.optimizer.noTimeout"" property to true for this entire test--I think this is okay since everything still passes (on my machine), but if anyone feels otherwise, please let me know... 

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@293480 13f79535-47bb-0310-9956-ffa450edef68"
1373f5a6f57abef4e9748674c3516872e5a8ef30,"Fixes DERBY-579 by not storing the timeout value in the
GenericPreparedStatement class, just passing it through.

SetQueryTimeoutTest updated, now uses a server-side function to delay
queries. This gives predictability and because of that, the running
time of the test has been significantly reduced. Also, the test now
uses the same tables in multiple statements, in order to hit the
statement cache and check that the timeout affects only the right
statements.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@293585 13f79535-47bb-0310-9956-ffa450edef68"
c1cd0b72780a9dd1018ae43fa0e97deae68897ed,"DERBY-238: Fix propogation of testEncryptionAlgorithm property.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@295037 13f79535-47bb-0310-9956-ffa450edef68"
077fe39c367b7c975de76e37ea88c814272f710f,"DERBY-392: Disable creating b-tree indexes on long varchar for bit data. This datatype requires different kind of index and allowing the current behavior causes may issues.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@295070 13f79535-47bb-0310-9956-ffa450edef68"
f1fc69b3852b9255713f34fe644c629f5e18a996,"Patch updating some masters for j9 and disabling 2
failing tests from running with j9.

Contributed by Myrna Van Lunteren
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@306632 13f79535-47bb-0310-9956-ffa450edef68"
28030d7074a2270fca2d7e86a49f9a56a5bbfc13,"committing on behalf of: Sunitha Kambhampati

1. adds changes to not do materialization of the stream at normalization
- fix bug in ReaderToUTF8Stream.read(b[],,) to allow for correct reads
- changes to SQLClob to not materialize stream
- per sql standard, truncation of clobs is allowed for trailing blanks and this is the behavior of clobs in
derby today. Keep information about truncation information along with the stream. The truncation checking logic
is pushed to the stream(ReaderToUTF8Stream) and thus will be enforced only when the stream is read.
- With these changes, the stream will be read only once, driven by store layer. This is efficient.
Earlier, the stream would be converted to char array which involves the char to derby specific utf8 encoding, and then back from utf8encoding to char as part of the materialization and once again at the store layer, the char is converted to derby specific utf8encoding.

Also note, no changes have been made to existing behavior of streams for char,varchar and long varchar. This fix includes changes only for clobs.

2. Test changes
- added new test for clobs in characterStreams.java
- added new test for clob truncation in streamingColumn.java
Note, also made changes to disable logStatmentText=true (derby595 and also disabling streamTest5).
- added tests to test for insert,select,update of 2G clob and blobs, as part of the largedata suite. This test LobLimits.java will not run as part of derbyall because it needs considerable amount of disk space and also takes long time to run.I have added extra tests for blobs although it is not related to this fix and as a result have found some issues that will need to be looked into. In LobLimits.java, some tests are therefore currently disabled.
- there are existing stream tests that run as part of derbyall ( ex blobclob4BLOB.java,resultsetStream.java) that will test for clobs streaming but may not be able to catch if clobs are being materialized or not, which is why it is important to run the largedata/LobLimits at some intervals to ensure that no regression has occurred.


Ran derbyall on jdk142/win2k ok.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@306822 13f79535-47bb-0310-9956-ffa450edef68"
57e362edb755ec9318fe2f38e33d41a46d2afecd,"committing on behalf of: Suresh Thalamati

 was hoping this issue will go away , but it seems to have appeared again in jdk1.5. Although there is a workaround by
 setting derby.storage.fileSyncTransactionLog=true. I think for users who are just tryingout Derby , hitting this problem is very annoying.
 Resubmmitting the workaround patch(derby1.diff) for this problem againest main trunk. This patch solves the problem by
 Catching the FileNotFoundException then set log write mode to file Sync and then open the log files in plain ""rw"" mode. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@306963 13f79535-47bb-0310-9956-ffa450edef68"
7bb560528ec1d039fc28f2037f96bf628137c992,"DERBY-374

Disable some tests which are failing on unix until a cross platform solution
can be found
Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@307231 13f79535-47bb-0310-9956-ffa450edef68"
cac35cabfd74481b0eef3f7af9694089631e5355,"DERBY-615 Switch to a security manager policy file with permissions set on a per-jar
basis for improved testing under a security manager. First step in running all tests
under a security manager. This policy file replaces the nwsvr.policy file and currently
is used in the same way, for tests that invoke a separate JVM for the network server.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@320762 13f79535-47bb-0310-9956-ffa450edef68"
b999d471eca87ee838483cb1afbcd2a2e30ba3fc,"DERB-615 Add Jira bug numbers to comments indicating permisions have to be granted as a result of bugs.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@320788 13f79535-47bb-0310-9956-ffa450edef68"
117d8b57c9860a1d112fecaa6d14a2b69fc4e8ea,"DERBY-624 Remove requirement for the permission accessDeclaredMembers to be granted to all code in the stack when running the embedded engine. Changed calls to use Class.getConstructor/getMethod where possible instead of the getDeclared versions that require the permission.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@321124 13f79535-47bb-0310-9956-ffa450edef68"
09150393e2b9d87cb24d953a5d023cd9001fed71,"DERBY-375

Specification of incomplete server properties on command line causes NPE with NetworkServerControl when starting the server.

The patch does the following:
1. Moves the call to 'init', which initializes 'langUtil', before the call to 'getPropertyInfo' method in the constructors of NetworkServerControlImpl.
2. If the system properties are specified without values, use defaults for them.
3. For 'derby.drda.traceDirectory' property following is mentioned in the doc - ""If the derby.system.home property has been set, it is the default. Otherwise, the default is the current directory."". 'getPropertyInfo' was getting the value of 'derby.system.home' but not using it as default for 'derby.drda.traceDirectory'.
So the current directory was always getting used as default. Changed this.
4. When I added the default for 'derby.drda.traceDirectory', the tests derbynet/getCurrentProperties.java and derbynet/sysinfo.java had additional lines for derby.drda.traceDirectory in their outputs. Since the directory listed is dependent on the test directory, I have sed out 'traceDirectory' lines for these tests.
5. Adds tests to derbynet/testProperties.java.
6. Fixes javadoc for 'traceDirectory' in NetworkServerControl.

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@321274 13f79535-47bb-0310-9956-ffa450edef68"
b647b38a26c74ce3a952feb6bf6b7e54876e8e90,"Committed DERBY-555 for √òystein Gr√∏vlen (oystein.grovlen@sun.com):

With this patch, when a database is booted in read-only mode, the boot message in derby.log will contain information about that.

I have also added a test, TurnsReadOnly.java, that without the fix, get the NPE. This is not in a disk full scenario, but it also occurs with a read-only DB directory. Since there is currently no way to turn write access back on from a Java program, the DB directory will be read-only after the test is run. Hence, the test framework will not be able to clean up the test directory. Therefore, this test is not added to the derbyall test suite.

The following files are changed:

M java/engine/org/apache/derby/impl/store/raw/RawStore.java
      Do not check log location for read-only databases (avoids NPE)
M java/engine/org/apache/derby/impl/store/raw/data/BaseDataFileFactory.java
      Add information to boot message in derby.log when database is booted in read-only mode.
M java/engine/org/apache/derby/iapi/reference/MessageId.java
      Added message id for the read-only part of the boot message
M java/engine/org/apache/derby/loc/messages_en.properties
      Added text for the read-only part of the boot message
M java/testing/org/apache/derbyTesting/functionTests/tests/store/copyfiles.ant
      Added TurnsReadOnly_app.properties
A java/testing/org/apache/derbyTesting/functionTests/tests/store/TurnsReadOnly.java
      New test that boots a database with log in non-default location, shuts it down, sets DB directory to read-only, boots again and checks that DML is not allowed.
A java/testing/org/apache/derbyTesting/functionTests/tests/store/TurnsReadOnly_app.properties
      Test properties
A java/testing/org/apache/derbyTesting/functionTests/master/TurnsReadOnly.out
      Master file for new test. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@325896 13f79535-47bb-0310-9956-ffa450edef68"
f3c492faa9802b71ad271bd228dec6bde75803ad,"DERBY-522

1) Updates client to look for statements that begin with comments and to ignore the comments when deciding the kind of statement that is being executed.
2) Changes ij to only strip comments for client versions less than 10.2
3) Adds test cases for statements that begin with comments to the jdbcapi/nullSQLText.java test
4) Updates masters

Contributed by Army Brown



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@325993 13f79535-47bb-0310-9956-ffa450edef68"
7257b30ed68335575ef704673320a68f2d345ab1,"DERBY-375 DERBY-613
Fix test failure for derbynet/getCurrentProperties.java

1. Removes the following permission from derbynet.jar and classes
directory. This is not required after the patch for DERBY-375.
permission java.io.FilePermission ""${user.dir}${/}*"", ""write"";

2. Grants the following permission to derbynet.jar. This is required
since tracing file location now defaults to ${derby.system.home}. The
test derbynet/getCurrentProperties.java uses this.
// tracing files default to derby.system.home,
derbynet/getCurrentProperties.java
permission java.io.FilePermission ""${derby.system.home}${/}*"", ""write"";

3. Grants the following permission to derbynet.jar and classes
directory. This is required by the test jdbcapi/secureUsers1.sql when
run using sane builds.
// sane=true, jdbcapi/secureUsers1.sql
permission java.io.FilePermission ""${user.dir}${/}CloudLDAP.out"", ""write"";

Contributed by Deepa Remesh dremesh@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326289 13f79535-47bb-0310-9956-ffa450edef68"
bb1be44c495731b3bce01a921108b40aa9882d1a,"committing fix for DERBY-500 on behalf of: Sunitha Kambhampati

 Background :
 In Derby, when a stream is set as a parameter value, the wrapper stream object used for character data is ReaderToUTF8Stream
 and for binary data it is RawToBinaryFormatStream.Both these stream objects on read() return data in a format that is used to store the respective datatype value. E.g in case of char, the characters read from the user stream are converted using utf-8 derby specific encoding and read calls return
 the data as expected by store layer. Beginning 2 bytes either have the utflen or has zeroes, or if it is a long string, then the value is ended with the special marker 0xE0 , 0x00, 0x00. For binary data, the stream data is prepended with 4 zeroes.

 Problem:
 once,the stream has been read fully and end of file reached, further read() returns a -1. If a stream is re-read, it returns a -1 which is incorrect data. E.g.in the repro for DERBY-500, the update statement has multiple rows that qualify and since the stream parameter is used; the first row gets updated with the correct value and the stream is drained. For the subsequent rows, the read from the stream parameter value returns -1 and thus is updated with incorrect data.When retrieving the row back, the format of the fields is incorrect and thus the exception.
 __________
 This patch

 1. adds changes to RawToBinaryFormatStream and ReaderToUTF8Stream to throw an EOFException if stream is re-read.
 If a stream value has been fully read and end of file reached, any further reads on the stream object will result in an EOFException. This seems reasonable and more correct than using incorrect values.
 Adds a new error message - 'Stream has already been read and end-of-file reached and cannot be re-used.'

 2. changes to RememberBytesInputStream to keep track of the stream state and not call read on the stream objects once eof is reached.

 3. Fix a bug in StoredPage.logColumn related to streams. In one particular scenario, column was not being set to RememberBytesInputStream object and thus losing the data that would be read from stream into RememberBytesInputStream.

 4. adds testcases to store/streamingColumn.java and lang/forbitdata.java


 Also note
 - This fix affects cases when a stream is re-used in which case an exception will be thrown.
 So code that reads the stream once and materializes it will not be affected. E.g. Currently in case of char,varchar,long varchar, streams are materialized and this will work fine as before. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326307 13f79535-47bb-0310-9956-ffa450edef68"
8629a0fb3925e729ab7054d76893e65f3cb1eaf5,"- DERBY-609 Returning ByteArrayInputStream from ResultSet is not appropriate - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326534 13f79535-47bb-0310-9956-ffa450edef68"
4b9c0f513d805f85f5375702a9849acf26eb0d51,"DERBY-498 - Result set holdability defined inside stored procedures is ignored by server/client

The attached patch 'derby-498.diff' changes network server to use statement holdability set within stored procedures. The patch does the following:

1. For callable statements, the execute method in DRDAStatement gets holdability from the statement that produced the resultset.
2. Added getResultSetHoldability method which takes a resultset and returns holdability.
3. execute method passes this holdability to addResultSet method, which sets DRDAResultSet.withHoldCursor with this value.
4. writeOPNQRYRM method in DRDAConnThread is changed to use the holdability of the current DRDAResultSet for setting SQLCSRHLD.
5. Added tests in lang/holdCursorJava.java. Created a new master file for DerbyNetClient.

Ran derbyall on WinXP Sun jdk1.4.2. No failures. However, in a previous run of derbyall I got failures in few encryption tests. The failures did not seem related to my change. So I ran the encryption suites again and they passed. Then ran derbyall again and all tests passed. 

Also attaching an additional patch ""xa_proc_test.diff"" for xa tests. It does the following:
1. Adds procedure test to jdbcapi/xaSimplePositive.sql.
2. Updates master files.

Contributed by Deepa Remesh dremesh@gmail.com



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326718 13f79535-47bb-0310-9956-ffa450edef68"
3d61c1cc4f70027765f9d0ea04460a9d3e9235cf,"DERBY-626 Re-work code to ensure that obtaining the enumeration of modules.properties
files as well as opening them is in a priviledge block. Removes the requirement for
read permission on derby.jar to be granted all the way up the stack when running with the
security manager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326727 13f79535-47bb-0310-9956-ffa450edef68"
ca68dba9a12f338d3bf8480c966a14cc98e199e1,"DERBY-615 Add noSecurityManager=true to a number of tests that fail
if the security manager is enabled (in a future commit under this bug).
These tests continue to be run, but the security manager is not installed.
This is to allow the remaining tests to run with the security manager. Once
that occurs these tests will be revisited to resolve the remaining issues,
by granting additional permissions or entering bugs.
Note that this change has no effect until the mechanism to install the
security manager is added to the test harness (coming soon).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326731 13f79535-47bb-0310-9956-ffa450edef68"
5922ff5dd47b336978697c67c95b64197bb5797a,"DERBY-615 Use getConstructor for getting a public constructor in the test harness
rather than getDeclaredConstructor which can throw security exceptions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326733 13f79535-47bb-0310-9956-ffa450edef68"
261cb847e567c1b3211185ec04fa635b80b1186f,"DERBY-615 Change the test harness to run tests with a security manager
by default, using the same mechanism as used to install a security manager
for the separate network server process.
The security manager is not installed when any of the following are true:

 noSecurityManager=true is in the <testname>_app.properties file

 JCC (DB2 Universal Driver) is the JDBC client - this is a short term restriction.

 Tests where useProcess=false, e.g. nist suite - this is a short term restriction.

Update the policy file to allow most remaining tests to run using a security manager.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326736 13f79535-47bb-0310-9956-ffa450edef68"
25f99f59e6268a1db9af0469b2b1a675d656da5f,"phase 1 work for DERBY-239, committed on behalf of: Suresh Thalamati

This patch adds some code necessary to support real-time online backup that
does not block writes when database backup is in progress. All the current functional tests
passed with these changes. It would be great if some can review and commit this patch.

This patch changes the way data segment and log is backed up without blocking
the writes.

Data Segment Backup:

o The containers to be backed up are found by scanning the files in seg0.

o Each container is backed up by reading all the pages through the page cache,
and then writing to the backup container. Pages are latched while
writing into the backup container.
o Not necessary to backup containers in any particular order , All updates
that happens after a container is backed will be redone using the
transaction log on restore.

MT cases:
1) Each page is latched when it is written to the backup to prevent partial
written pages sneaking into the backup.
2) Thread that is backing up the container will stop if another thread
requests removal of the container when container is being backed up.
3) Truncate of the container blocks if the container is being backed up.
4) Partially created containers will not be backed up. Container cache will
not return the container items until the creation is complete.
(No changes are not for this case , that is how it currently works).


Transaction Log Backup:

Transaction Log file backup in two phases:
1) First Check point info and the the log files are backed up before the
data segment.
2) After the data segment is backed up , all the log files
that are generated after tha backup started are also copied into the backup.

MT cases:
1) If there is a checkpoint in progress, backup will wait for the
checkpoint to complete before copying checkpoint control information
into the backup. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326824 13f79535-47bb-0310-9956-ffa450edef68"
6d9c32af90f2192c3a486758f482efea45eeaa52,"DERBY-424: Basically, the problem is that, during the compile phase of views,
the reference to the view gets replaced by the view definition, which causes
us to loose the information that the view might have belonged in SESSION schema.
In order to fix this, during the bind phase in FromList, before the view gets
replaced by its definition, I find out if the view is from SESSION schema, If
yes, then I save this information in FromList and this gets used by FromList
when it is asked if it has any items referencing SESSION schema objects. This
information is again lost during the optimization and generate phase and hence
I moved the check for SESSION schema reference to right after the bind phase in
GenericStatement. If there is a reference to SESSION schema object,
GenericStatement will remove the statement from the cache.

Submitted by Mamta Satoor (msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@326959 13f79535-47bb-0310-9956-ffa450edef68"
d3de9828aeb6b13a3d634160c45d72c4bda7e418,"DERBY-615 Disable running with the security manager due to failures.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@327046 13f79535-47bb-0310-9956-ffa450edef68"
da77550482b2d1294dda19d98a8f30c1f010e50a,"DERBY-620: Provide a clearer explanation for where to put your ant.properties
into BUILDING.txt

Committed for John Embretsen <John.Embretsen@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@327242 13f79535-47bb-0310-9956-ffa450edef68"
63a319c29ce98c2a9983f559ec6b06ebdcfc9faa,"Update Kathey Marsden's key info with kmarsden@apache.org email



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@327255 13f79535-47bb-0310-9956-ffa450edef68"
413da9b56b3bab6037b544503fdd7c8525eb08e7,"- DERBY-640 Property of svn:eol-style was not set at 'java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/resultsetStream.java' - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@327759 13f79535-47bb-0310-9956-ffa450edef68"
9952cc5b5e969dee573b25d29affe74edddc3b13,"DERBY-597 - Enhance ij connect statement to work in J2ME/CDC/FP
ummary of patch:
* If ij.dataSource property is set and the url in the 'connect' statement does not start with 'jdbc:', ij calls util.getDataSourceConnection to get connection (instead of using DriverManager).
  
* Added getDataSourceConnection(String dsName,String user,String password,String dbName,boolean firstTime) to util.java. This returns a connection using the data source passed in ij.dataSource property. This method is called by startJBMS in util.java and ConnectStatement() in ij. The parameter firstTime indicates whether this method is called at start of test by startJBMS or by ConnectStatement.
 
* getDataSourceConnection method in turn calls setupDataSource which calls the set methods of data source. If firstTime=true, it uses values of ij.dataSource.* properties to set up the data source object. Otherwise, the properties ij.dataSource.databaseName and ij.dataSource.createDatabase are ignored. Instead, value of 'dbName' parameter is used. [In first version of this patch, parameter 'firstTime' was called 'create']
  
* Removed J2ME excludes from 13 tests which pass with this patch. Some tests needed changes in the connect statement url and master files.

Contributed by Deepa Remesh 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@328246 13f79535-47bb-0310-9956-ffa450edef68"
1b1274f0f7ef0ab88fd29ee1c12f81fb0b709c19,"Remove importExport masters that are no longer needed for IBM JDK 1.4


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@328500 13f79535-47bb-0310-9956-ffa450edef68"
ece3ee6502c4a8c75d31ee4c66c7dcb6d8db45e4,"DERBY-647 Fix code in MultiTest to generate correct log file names
when the path contains a dot. Previous code was trying to be too
smart, simplified to pass in directory and file name required.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@328515 13f79535-47bb-0310-9956-ffa450edef68"
765413168c276b00d815dde049e8f6dc9aeed7c1,"- DERBY-640  Property of svn:eol-style was not set at java/testing/org/apache/derbyTesting/functionTests/master/resultsetStream.out too - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@328631 13f79535-47bb-0310-9956-ffa450edef68"
50ec3942cb622850a722f349f1c3de861ebe334d,"DERBY-643  Eclipse Derby doc plug-in: Resources page points to the incubator site instead of db.apache.org
merge from 10.1 branch

Contributed by Susan Cline 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@328752 13f79535-47bb-0310-9956-ffa450edef68"
46cf4475d9cb942c322d6d8e87a534f82c917d3b,"Setting correct attributes for scripts. svn:eol-style CRLF for .bat files, svn:eol-style LF for .ksh files and svn:executable * for all scripts.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@328911 13f79535-47bb-0310-9956-ffa450edef68"
be34918f2e19b7fcfe61d6cc65e47eee2feef2c5,"Updated masters for J2ME/J9 testing.

Committed for Myrna Van Lunteren <myrna.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@328971 13f79535-47bb-0310-9956-ffa450edef68"
22f9477e36ca1ad93dcbb093bdaa9e0a232225fa,"Move packaging.properties to packaging.tmpl
DERBY-652: Fix incubator references in demos
Update STATUS

STATUS update includes an update contributed by 
Rick Hillegass <richard.hillegass@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@328985 13f79535-47bb-0310-9956-ffa450edef68"
aaea35714b16a9df552eb9d0d624d9404763f92e,"DERBY-330

Fixes svn properties for a whole bunch of files.

Thanks to Dyre <dyre.tjeldvoll@sun.com> for contributing the script to
compute the necessary changes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@329187 13f79535-47bb-0310-9956-ffa450edef68"
be0f6fb6c6e5638495dc93257c11659c60a96a34,"DERBY-657: Make scripts in release archives executable, make line-endings for
text files at the top of the CRLF for zips and LF for .tar.gzs.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@329266 13f79535-47bb-0310-9956-ffa450edef68"
d5bc20fdd2582857534fc70f7e5cc59c18db5186,"DERBY-582: Allow unary plus/minus operators with parameters. Here is the email from Mamta with details:

I have a new patch to allow dynamic parameters for unary minus and unary plus
operator. This is based on the feedback from Jeff and Dan. The unary minus/plus
parameters will determine their types depending on the context. For this, I
have added requiresTypeFromContext to ValueNode which always returns false.
ParameterNode always returns true for this method. UnaryOperatorNode's
requiresTypeFromContext calls the operand's requiresTypeFromContext if operand
is not null. SimpleStringOperatorNode(subclass of UnaryOperatorNode) ends up
overriding this method and returns false because functions lower and upper are
always typed to String and do not need to get their type from the context.
 
I have added 2 methods to UnaryOperatorNode.java, namely getParameterOperand()
and isUnaryMinusOrPlusWithParameter(). There are few places in engine, where
we need to access the underlying parameter and that is when
getParameterOperand() gets used. This is required to directly call the
ParameterNode methods such as  getDefaultValue(), getParameterNumber() etc
isUnaryMinusOrPlusWithParameter() is required so that engine can catch edge
cases like select * from t1 where -? and c11=c11 or +? ie such a use of
-?/+? should be disallowed, same as what we do for ? parameters.
 
Also, as mentioned in the earlier review packages, the binding code for unary
minus/unary plus dynamic parameters will not be executed until the type of
these parameters can be determined. The type gets detemined when the setType
method is called. For this reason, setType method is overridden in
UnaryArithmeticOperatorNode. After setting the type, this method calls the
binding code to make sure all the bind time rules are enforced.
 
I have also consolidated the 2 type setting methods into one, namely setType.
This setType is overwritten in ParameterNode so it can also set the type in
the array of parameter types in StatementNode. Hopefully, this will make the
type setting code much cleaner.
 
I have added several new tests to check this functionality and these tests are in unaryArithmeticDynamicParameter.java. The test will get run in both embedded and network server modes.

Submitted by Mamta Satoor (msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@329295 13f79535-47bb-0310-9956-ffa450edef68"
1093b6d4ab9441495c5f319cbedfe616c8ca8c9d,"DERBY-615 In unit tests use System.setProperty() instead of System.getProperties().put()
to set system properties. Means more specific permissions can be granted in the policy file.
Disable testsqldecimal from running with the security manager due to DERBY-616.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@329310 13f79535-47bb-0310-9956-ffa450edef68"
14618df23e3ed20c688772e93e997f662a60ccb7,"DERBY-660 Disable  RETURNS NULL ON NULL INPUT for a procedure. Attempt to provide a
better error message than MISSING ELEMENT when a procedure clause is missing.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@329320 13f79535-47bb-0310-9956-ffa450edef68"
8ecffddaa1c0e581670d21d898577304f78f6511,"- DERBY-525_3 getAsciiStreamshould replace non-ASCII characters with 0x3f, '?' to match embedded - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@329372 13f79535-47bb-0310-9956-ffa450edef68"
8fa60644780de8d9245c5e1dc077ec68047ce31a,"Fix for DERBY-662.

The change is an obvious fix to BaseDataFileFactory.java code which creates
a conglomerates container file name given it's conglomerate number.  This is
a simple hex conversion which was missing from one of the paths through the
code.

The path is almost never taken, but in the following circumstance during
redo crasch recovery this bug
could cause derby to delete the underlying file of a table.  The circumstances
are as follows:

1) The OS/filesystem must be case insensitive such that a request to delete
a file named C2080.dat would also remove c2080.dat. This is true in
windows default file systems, not true in unix/linux filesystems that
I am aware of.
2) The system must be shutdown not in a clean manner, such that a subsequent
access of the database causes a REDO recovery action of a drop table
statement. This means that a drop table statement must have happened
since the last checkpoint in the log file. Examples of things that cause
checkpoints are:
o clean shutdown from ij using the ""exit"" command
o clean shutdown of database using the ""shutdown=true"" url
o calling the checkpoint system procedure
o generating enough log activity to cause a regularly scheduled checkpoint.
3) If the conglomerate number of the above described drop table is TABLE_1,
then for a problem to occur there must also exist in the database a table
such that it's HEX(TABLE_2) = TABLE_1
4) Either TABLE_2 must not be accessed during REDO prior to the REDO operation
of the drop of TABLE_1 or there must be enough other table references during
the REDO phase to push the caching of of the open of TABLE_2 out of cache. 

The fix adds a test case which before the fix will force a container not
found error on an existing table.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@329494 13f79535-47bb-0310-9956-ffa450edef68"
717a43d32b8896e813796f2cdf9a6d8fe161445f,"DERBY-615 Enable security manager testing by default, around 58% of client
side tests enabled.
Adding information to the testing README file about security manager testing.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@329876 13f79535-47bb-0310-9956-ffa450edef68"
7739ad68f511089a94b75545c01e1e9a1d1fc225,"anther patch for DERBY-239, committed on behalf of: Suresh Thalamati.

Fix  to the problem found by Oystein  while reviewing the previous online 
backup patch(online_backup1.diff).
Backup of a container code was doing a seek  incorrectly on the file container
instead of the backup file. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@329934 13f79535-47bb-0310-9956-ffa450edef68"
b46732ec73251c6dc13ebc773b192184989bd322,"DERBY-663

This hopefully fixes DERBY-663. (Unfortunately cannot tell for sure
until _after_ the patch is committed).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330042 13f79535-47bb-0310-9956-ffa450edef68"
0438c35b68b50ca2fbc017b82790ee9cb47786fa,"Commiting the patch for DERBY-516, submitted by Rick Hillegas.

NOTE: AS OF THIS PATCH YOU NEED junit.jar IN YOUR CLASSPATH FOR
A SUCCESSFUL BUILD AND TEST RUN.  See BUILDING.txt for details.

This adds support for backward/forward client/server compatibility testing 
into our testing procedures.

From Rick's patch comments:

1) BUILDING.txt has been amended to tell developers that they must
   download JUnit.

2) java/testing/README.htm has been amended to point at a web page
   which describes how to run the compatibility tests. It points at
   java/testing/org/apache/derbyTesting/functionTests/tests/compatibility/README.html.

3) DerbyJUnitTest.java is a superclass for Derby JUnit tests. It is a
   useful place to put extra assertion machinery not included in the
   base JUnit classes.

4) JDBCDriverTest.java is the actual JUnit test which checks expected
   datatypes.

5) testScript.xml is an ant harness for running all combinations of
   the compatibility test. Hopefully, we can discard this harness when
   a more robust JUnit harness is checked into Derby.

6) CompatibilityTest.java is a thin wrapper which runs one
   configuration (embedded) of JDBCDriverTest inside the derbyall
   suite.

7) Sed.java has been amended to filter out JUnit diagnostics which
   derbyall interprets as noise. This filtering allows derbyall canons
   to be empty for JUnit tests. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330103 13f79535-47bb-0310-9956-ffa450edef68"
381dfaf55d912bc28629a42101b59e094fb9387e,"DERBY-656 Use the size estimates from the catalog to avoid security
issues in BackingStoreHashtable. This matches the other uses of the
class size utilities, eg. for the DataValueDescriptors.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330133 13f79535-47bb-0310-9956-ffa450edef68"
57511ad099bc35cbede4ec775b7bfc55fc53e2ad,"Quick fix to DERBY-516, indicating that the CompatibilityTest should 
not be run under the security manager


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330147 13f79535-47bb-0310-9956-ffa450edef68"
437fe9e74212b3ce1dcf4fe32df0e776e83b27e4,"Fix to DERBY-669 -- modified wording to make it clear that the 
IBM Universal Driver is optional.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330160 13f79535-47bb-0310-9956-ffa450edef68"
1d2fa74b8d7d085ca9dc703e3c5703024fdefea7,"DERBY-663

Some tests expect this file to have CRLF newlines.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330289 13f79535-47bb-0310-9956-ffa450edef68"
d189d6a019cd4f2a50c1bdd168c256303373b23d,"Build fix for Gump. Subversion 1.1.x and earlier have a bug in svnversion -n
which attaches the newline character to the version if the version is 'exported'
meaning that the subversion metadata is not available for the current directory.
This causes the manifest generation for derby.jar to fail because it introduces
a newline character in between the Bundle-Version and the first Sealed
attribute. Because this would cause the Sealed attribute to be its own manifest
section that does not start with a Name attribute, Ant declares the manifest
invalid and stops the build.

Presumably this problem would also be hit by anyone using the affected versions
of Subversion and attempting to build the jars from one of our -src
distributions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330290 13f79535-47bb-0310-9956-ffa450edef68"
8cb046465ce2118dd7a53e8a3b62affefc663661,"Unhook sign target from release target. Users of the release target will
be instructed to run sign separately. Thus, if problems with the signing
occur, do to a configuration problem with GPG or md5, the release target
will not appear to hang indefinitely.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330308 13f79535-47bb-0310-9956-ffa450edef68"
c50b63f20cd5336383946dd4f62a52fce94c89e9,"DERBY-648 ij 'show connections' statement does not work in JSR169
Remove getUrl call for show connections with J2ME

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330547 13f79535-47bb-0310-9956-ffa450edef68"
f9f4d947ada9fcfdef9aea96044eb93592f228fc,"some minor comment changes and some new asserts that I found helpful
while debugging DERBY-662.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330583 13f79535-47bb-0310-9956-ffa450edef68"
57ea5ffbc6beac965a137a30afc1749ceea646a6,"Skip unaryArithmeticDynamicParameter test under jdk13. Submitted by Mamta Satoor <msatoor@gmail.com>

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330623 13f79535-47bb-0310-9956-ffa450edef68"
8da4e359401e481271971e78e44e53c00103a3e9,"Merge revisions 326295 and 327048 to Derby trunk.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330661 13f79535-47bb-0310-9956-ffa450edef68"
4a8e892a90cd977d5af64cb43ac8330c445e12ea,"DERBY-675: The ""readLine"" method in ODBCMetadataGenerator.java was treating
single backslashes as ""end-of-line"" markers and hence was not recognizing
escaped sequences like ""\n"".  It turns out that the check for backslashes in
that method is unnecessary, so this patch removes it.  I ran the metadata.java
and odbc_metadata.java tests with this patch and they ran okay, so I think it 
should be safe.  I still want to run some more tests tonight, just to be sure,
but I thought I'd post the patch now since it is affecting another developer's
current work (Mamta's).

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330672 13f79535-47bb-0310-9956-ffa450edef68"
5c0964bc9dc71df6fae36f596092433dc358b974,"DERBY-463: Fix ClobOutputStream to increment offset, following similar checkin earlier to fix BlobOutputStream.

Comment by the submitter:
The test blobSetBinaryStreams.java was only testing the write(byte[], int, int) method for blobs. I have extendedit so that it would use both write(byte[], int, int) and write(int) for both blobs and clobs. Since it was not a blob specific test, I have renamed it to lobStreams.java. 
- Similar problems as the one fixed in the previous patch (the offset was not being incremented) existed in write(int) (for clobs and blobs) and write(byte[], int, int) (for clobs). These problems have now been fixed. 
- I have run derbyall successfully, except for store/encryptionKey.sql that failed, but I don't think it was related to my patch. 

Submitted by Fernanda Pizzorno (Fernanda.Pizzorno@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330687 13f79535-47bb-0310-9956-ffa450edef68"
df5e1dd06d7ea8f54bf4130fcfee38a8fd9e03cc,"DERBY-389 Fix nullSQLText.java for J2ME

 Attaching a patch for the test jdbcapi/nullSQLText.java. This test fails in J2ME because it uses a stored procedure with server-side JDBC. As I understand, the purpose of the test is only to test any stored procedure call. So I replaced the stored procedure in this test with a procedure in org.apache.derbyTesting.functionTests.util.ProcedureTest. Also changed the master files.

With this patch, I have run jdbcapi/nullSQLText.java in embedded, client and jcc frameworks. Also run this test in CDC/FP. This patch changes only tests. Please review/commit this patch.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330705 13f79535-47bb-0310-9956-ffa450edef68"
a1d2f88f7d19a4ff04e1f6b5a4b979e76dab3217,"Build fix for Gump. JDBCDriverTest introduces a dependency on JDBC 2.0
Clob/Blob classes, for which Gump must use a separate target to compile.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@330716 13f79535-47bb-0310-9956-ffa450edef68"
1b9bd4c96d349e2a8fabfa9a37941e1370969818,"DERBY-648 ij 'show connections' statement does not work in JSR169
master updates



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@331885 13f79535-47bb-0310-9956-ffa450edef68"
0e6830b0980b0caf0249c6a5cb95e7e5a648e52e,"Small fix to Skip unaryArithmeticDynamicParameter test under jdk13. Submitted by Mamta Satoor <msatoor@gmail.com>

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332029 13f79535-47bb-0310-9956-ffa450edef68"
40877146f71c4fc21cadf0bebce30c45c4d324ce,"Changes for DERBY-689, contributed by Rick Hillegas (rick.hillegas@sun.com)

Rick says:

Various improvements to compatibility test:

1) Moved all JUnit tests under a ...functionTests/tests/junitTests as Myrna and John requested.

2) Made the test harness sanity check the classpath as David requested.

3) Abstracted a CompatibilitySuite out of the original test to make it easier to add more test classes, as Francois requested.

4) Added combinations for the 10.1.2.0 client and server

5) The derbyall diff tool was enhanced to fabricate an empty canon file if one doesn't exist in the codeline. This eliminates the need to create empty canons for JUnit tests.

===

David says:

I made a slight modification -- I moved the CompatibilityTest to 
derbynetclientmats instead of derbynetmats, as it's intended only for
the network client, not for the DB2 driver

I'd also like to clarify that the ""empty canon file"" is not created on
disk -- it's only created as an InputStream within the test harness.  Nice
fix, no more empty files to create for tests that have no output.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332090 13f79535-47bb-0310-9956-ffa450edef68"
7b9cb18b92791a71e620744257c4eff474a370f1,"DERBY-632: Don't skip dataSourcePermissions_net if db2jcc is not in the
classpath.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332116 13f79535-47bb-0310-9956-ffa450edef68"
41f00629d0354d506d8f1d052364663087e34e13,"DERBY-569 Derby network server is printing connection activity on System.out instead of logging it to derby.log

This patch changes derby.drda.logConnections also turn off logging of connections to console.

Contributed by  Bryan Pendleton


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332222 13f79535-47bb-0310-9956-ffa450edef68"
a593100af42045bf4b1fe0e0e8855f26bb6d7bfe,"Build was broken. Changed junitTests/derbynet to junitTests/derbyNet

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332249 13f79535-47bb-0310-9956-ffa450edef68"
c0320b15d664361d78979caa60958f01ca73b718,"DERBY-398 - Enable tests in jdbcapi suite for J2ME

Contributed by Deepa Remesh


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332436 13f79535-47bb-0310-9956-ffa450edef68"
4551a6e80849b99c76356caa9965b3dbbd889910,"DERBY-117 Improvements to the Servlet

- improved use of tracingDirectory:
  * init-parameter is now used (it was documented but not used before)
  * current value is shown when the user try to change it
- improved function that handles the request locale (for instance, mozilla uses a - instead of _ to separate the country from language)
- shows on the screen which port the server is running on
  * added a new SRV_POrtNumber message key for such info

Note: I did not commit the translated messages as I could not get them to patch.

Contributed by Filipe Leme 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332444 13f79535-47bb-0310-9956-ffa450edef68"
5087be8daf12bae37969533dbe11d8564b541895,"DERBY-231 FOR UPDATE required for updatable result set to work. Submitted by  Andreas Korneliussen <Andreas.Korneliussen@Sun.COM>

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332491 13f79535-47bb-0310-9956-ffa450edef68"
7f1493a614ef1d403a5e45f25143321507a4941a,"Methods tracking the begin and end offset of the Node in the SQL statement are duplicated
in TableName.java and ColumnReference.java. The parent class QueryTreeNode has implementations
of these methods, should use those consistently.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332635 13f79535-47bb-0310-9956-ffa450edef68"
7ea158574b81be1c2ee05b81dde2d2b3cc323bad,"DERBY-682  Add tests for error codes for severe exceptions



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332645 13f79535-47bb-0310-9956-ffa450edef68"
90288898a9dfbebc7746f93b8c17cb4f72152378,"Fix to fix to DERBY-689 -- tests now pass on UNIX.  Case sensitivity issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332676 13f79535-47bb-0310-9956-ffa450edef68"
66329200f11bb39cb0e13e8eabfee3491eff0d00,"Add new message from DERBY-117 patch for Brazilian Portuguese.

Committed for Felipe Leme <felipeal@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@332678 13f79535-47bb-0310-9956-ffa450edef68"
c8ceb5f03910cd0c0b7518d73b45c1a12683d5c4,"DERBY-506

Implements Statement.setQueryTimeout in the client driver by
""piggybacking"" an EXCSQLSET command on statement execution.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@344147 13f79535-47bb-0310-9956-ffa450edef68"
23c70bdce3b1f7b115fd9bc95a3a35d0893c18e7,"Fix to DERBY-704, submitted by Knut Anders Hatlen

From Knut:

<quote>
The patch modifies the search for a free slot in the page cache
(org.apache.derby.impl.services.cache.Clock.findFreeItem()) in the
following way:

  1) find out how many invalid pages there are in the page cache
  2) check whether pages that are skipped in the search are invalid
  3) if the number of skipped invalid pages equals the number of
     invalid pages, stop the search for invalid pages
</quote>



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@344270 13f79535-47bb-0310-9956-ffa450edef68"
8ceb12153c7412f6dec8eba6c5173b8d5d2959a3,"DERBY-615 Modify tests permission file to ensure encryption tests pass under JDK 1.3
by adding permission to install the Sun JCE implementation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@344313 13f79535-47bb-0310-9956-ffa450edef68"
24c87005efdf2863241e95aeb62b7895ad79a12b,"DERBY-506

Removing unused class.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@344344 13f79535-47bb-0310-9956-ffa450edef68"
311885c60cabe05735bd60dc5c4397f22fe6fbe1,"Add junit.jar to property svn:ignore in tools/java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@344355 13f79535-47bb-0310-9956-ffa450edef68"
880b68df5892306410a4826915181bf49b22f664,"DERBY-117: Add additional translations missed in previous checkin for DERBY-117

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@344447 13f79535-47bb-0310-9956-ffa450edef68"
137cafd7bcfda440d5493853d13e89cae424396f,"Another modification for DERBY-689, contributed by Rick Hillegas

<quote>
further improves this suite by adding a target for running just one 
combination of client/clientVM/server/serverVM. The target is called 
oneCombination and it is explained by -projecthelp. 
</quote>

Builds fine and the CompatibilityTest.java runs fine.

David



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345137 13f79535-47bb-0310-9956-ffa450edef68"
688ccfab6df4a900d941a273159864cf53f6c72c,"DERBY-704 Large page cache kills initial performance, additional comments from Knut.Hatlen@Sun.COM

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345215 13f79535-47bb-0310-9956-ffa450edef68"
b7cdec2dfed91195af60e1684a3a37ea73bf853d,"DERBY-707 providing RowLocation for deleted+purged row to GenericConglomerateController causes nullpointerexception, submitted by andreas.korneliussen@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345237 13f79535-47bb-0310-9956-ffa450edef68"
d617ea8a48936cc68a5bf7797b5ecb664eb84454,"DERBY-280: Prevent multiple columns from having same result column name in select-list, if it has a group by/having clause also. Current Derby rewrite of these queries could lead to wrong results.

Submitted by Rick Hillegas (Richard.Hillegas@Sun.COM)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345304 13f79535-47bb-0310-9956-ffa450edef68"
b4b8d3b40927d9321a9cbc75d7e2a84e0d40f080,"DERBY-239, committing next phase checkin on behalf of Suresh Thalamati.

This patch adds code to support real-time online backup with unlogged
operations. A consistent backup can not be made if there are pending
transactions with unlogged operations or if unlogged operations 
occur when backup is in progress. Because container files can  be copied 
to the backup before the transaction is committed and the data pages are 
flushed as part of the commit. As there is no transaction log for unlogged
operations, while restoring from the backup database can not be restored to 
a consistent state. To make a consistent online backup in this scenario, this patch:

1)  blocks  online backup until all the transactions with unlogged operation are
committed/aborted. 
2)  implicitly converts all unlogged operations to logged mode for the duration
of the online backup, if they are started when backup is in progress. 

This patch also adds a test to test the online backup in parallel with some DML,

> DDL and unlogged operations. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345355 13f79535-47bb-0310-9956-ffa450edef68"
c8cc8d6114ceb08761508c8a6f68560e4eb7ab99,"Make publishedapi and engine targets depend on initjars so that the changenumber
is properly set if the target is called independently of the 'javadoc' target.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345359 13f79535-47bb-0310-9956-ffa450edef68"
660d73805a226d8e511cacd286dd2552c32a4192,"DERBY-587: Enhance Derby by adding JDBC 4.0 stub implementation for both client and embedded drivers. This would enable Derby to be used in up comming JDK1.6.

There is a design documented posted at JIRA with more details.

Thanks to Rick for review and testing.

Submitted by V.Narayanan (v.narayanan@sun.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345402 13f79535-47bb-0310-9956-ffa450edef68"
95e79b594c0c4ce90817c95e243354d7506312f8,"Close result set so characterStream test will work with J2ME

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345460 13f79535-47bb-0310-9956-ffa450edef68"
5a95e6baa245457cf2b2f3bbed0e6799a9825afc,"DERBY-714 DERBY-571
Verify target table for UPDATE and DELETE for all table types, previously
VTI's were incorrectly excluded. This lead to invalid VTI table expressions
being accepted for VTIs leading to NullPointerExceptions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345577 13f79535-47bb-0310-9956-ffa450edef68"
790954648be819a9dc0daabc66c84efc04a95708,"DERBY-571 Convert java tests to use the new form of the diagnostic (no argument) tables.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345583 13f79535-47bb-0310-9956-ffa450edef68"
0e9ddda2061a3105ce6e30546625178f90bd78ff,"DERBY-571 Fix SYSCS_INPLACE_COMPRESS_TABLE to ignore VTI tables, like it ignores views.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@345595 13f79535-47bb-0310-9956-ffa450edef68"
3a3105b7aecd7433250d5ea1ae78ae884598a948,"DERBY-517 ResultSet - relative(int rows) behaves different in embedded and client/server mode when the positioning before the first row or after the last row.
Submitted by Fernanda.Pizzorno@Sun.COM

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348192 13f79535-47bb-0310-9956-ffa450edef68"
bb1b9e74ff3c30dcffc551c6ec5521fb383d4aa6,"Patch for DERBY-587, contributed by Rick Hillegas

""The original patch broke javadoc generation because the 1.4 javadoc machinery doesn't understand the 1.6 signatures which contain generics. I have attached bug587_javadoc.diff to fix this regression. Thanks to Dyre for tripping across the problem.""




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348203 13f79535-47bb-0310-9956-ffa450edef68"
c84cf384c9301d58d033e0f2536e9a3042b71237,"DERBY-471 Correct DatabaseMetaData.getNumericFunctions,getSystemFunctions and getStringFunctions
to correctly return a valid subset of the JDBC/ODBC escaped functions that Derby supports.
Added tests that ensure the functions listed by Derby are supported, and that all
the functions defined by the spec and supported by Derby are listed by Derby.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348289 13f79535-47bb-0310-9956-ffa450edef68"
8ff0b23f90aec0501d4b998a70ca8f784e9b8c84,"DERBY-471 Correct DatabaseMetaData.getTimeDateFunctions to correctly return
a valid subset of the JDBC/ODBC escaped functions that Derby supports.
Expanded existing tests for time date functions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348330 13f79535-47bb-0310-9956-ffa450edef68"
8fd20be8ce08e64a1b03925491f1472c9691e8f8,"DERBY-615 Enable lang/errorStream.sql and store/databaseProperties.sql under the security manager.
Add comments to a number of other tests indicating why they cannot currently run under the security manager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348501 13f79535-47bb-0310-9956-ffa450edef68"
38b2dd4ce962c0f9181081dc95354f3f5d064a47,"DERBY-615 Enable i18n tests messageLocale.sql and urlLocale.sql under the security manager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348532 13f79535-47bb-0310-9956-ffa450edef68"
bfe2faec322971e4d5c70147e1e6ca5bf67b8de2,"Add addition tests to i18n/JapanCodeConversion.sql as a step to removing its use of the executable native2ascii.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348553 13f79535-47bb-0310-9956-ffa450edef68"
82c7dde0566c7b457f3906cdc8bd5062ecdaa09d,"DERBY-706 Improve testing and increase code coverage for Network Server classes
Contributed by Deepa Remesh

This patch adds some tests for network server and re-arranges/removes some internal methods which are not used. 

Details of patch are: * derbynet/getCurrentProperties.java - Added tests for NetworkServerControl.logConnections and setTraceDirectory methods. Modified getCurrentProperties_sed.properties to use a substitute instead of delete for traceDirectory. * derbynet/testProperties.java - Added some more command line tests. * derbynet/timeslice.java and maxthreads.java - Added tests for invalid values. * derbynet/runtimeinfo.java and sysinfo.java - Added test to call methods in NetworkServer control * Modified master files. * DRDAResultSet.java - removed unused constructor ""DRDAResultSet(ResultSet rs)"" * DRDAStatement.java - Changed getNumRsCols() to use getRsDRDATypes() instead of directly calling DRDAResultSet method. Removed isProcedure() method which is not used. Changed getResultSetCursorName() to call drdaRs.getResultSetCursorName() which handles case for null result set. * NetworkServerControlImpl.java - Removed methods for connection pooling which is not implemented and not used. With this patch, I ran derbyall with Sun JDK 1.4.2. No failures. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348577 13f79535-47bb-0310-9956-ffa450edef68"
39aa8c4a89ef1974bfdfb744c415bf8fb15ec59e,"DERBY-398 -  Bring store tests into J2ME/CDC Foundation testing

Contributed by Deepa Remesh
Attaching a patch 'store_patch.diff' for enabling tests (mostly store tests) to run in J2ME. This patch does the following:
 
* i18n\urlLocale.sql, i18n\urlLocale_app.properties, urlLocale.out - Removed protocol name from URLs and added 'ij.protocol' to app_properties file so that test can run in J2ME. Updated master file.
* i18n\DefaultLocale.java - Removed lines to get nested connection from procedure methods since these connections were not used. This was causing failures with JSR169 where nested connections are not supported.
* i18n\iepnegativetests_ES_app.properties, iepnegativetests_ES.out - Added 'ij.protocol' to app_properties file so that test can run in J2ME. Updated master file.
* storetests\st_1_app.properties, storetests\st_schema_app.properties, storetests\st_b5772_app.properties, storetests\derby94_app.properties - Changed the property 'database' to 'ij.database' in st_schema_app.properties. 
* tools\ij2_app.properties - Changed the property 'database' to 'ij.database' and added ij.dataSource properties.
* tools\ij4_app.properties - Added comment that this test has to be excluded since it is a test for a case with no default driver.
* tools\iepnegativetests_app.properties, tools\iepnegativetests.sql, iepnegativetests.out - Removed protocol name from URLs and added 'ij.protocol' to app_properties file so that test can run in J2ME. Updated master file.
* tools\ij_app.properties - Added comment that test is specific to ij and tests bad/good urls
* testRoutines.sql - To avoid using nested connection, directly called create procedures instead of calling a wrapper which will create the procedures.
* store\databaseProperties_app.properties, databaseProperties.out - Changed the master file to match change in testRoutines.sql
* TestUtil.java - Changed getDataSource method to handle case for EmbeddedSimpleDataSource. Added getDataSourceConnection method which takes a Properties object and returns a connection using the appropriate data source class. This method can be used to boot/shutdown Derby using DataSource.
* lang\errorStream_app.properties - This test works with changes to  TestUtil.getDataSource method to handle case for EmbeddedSimpleDataSource.
* lang\logStream.java, lang\logStream_app.properties, logStream.out - Changed to call TestUtil.getDataSourceConnection instead of DriverManager.getConnection
* lang\functions_app.properties - Added comment that test is excluded for now since it uses server-side JDBC. This test can be converted to Java test to call only functions which do not use server-side JDBC in JSR169 environment. 
* lang\releaseCompileLocks_app.properties - Added comment that test uses server-side JDBC
* store\backupRestore.sql, store\backupRestore_app.properties, backupRestore.out -  Removed protocol name from URLs. Updated master file.
* store\removeStubs.sql, store\removeStubs_app.properties, removeStubs.out -  Removed protocol name from URLs. Updated master file.
* store\rollForwardBackup_app.properties, store\rollForwardBackup.sql, rollForwardBackup.out - Removed protocol name from URLs. Updated master file.
* store\connectDisconnect_app.properties - This test works after changes for DERBY-597. So just re-enabled it.
* store\Beetle6038_app.properties - Added comment that this tests encryption which is not supported in Derby J2ME implementation
* store\TestDurabilityProperty.java, store\TestDurabilityProperty_app.properties - Changed to call TestUtil.getDataSourceConnection instead of DriverManager.getConnection
* store\backupRestore1.java, store\backupRestore1_app.properties - Changed to call TestUtil.getDataSourceConnection instead of DriverManager.getConnection
* store\MaxLogNumber_app.properties, store\MaxLogNumberRecovery_app.properties - Changed the property 'database' to 'ij.database' and added ij.dataSource properties.
* store\rollForwardRecovery.sql, store\rollForwardRecovery_app.properties, rollForwardRecovery.out - Removed protocol name from URLs. Updated master file.
* store\logDevice_app.properties - This test works after changes for DERBY-597. So just re-enabled it.
* lang\closed.java, lang\closed_app.properties - Added catch for NoSuchMethodError for DatabaseMetadata.getURL method. Skips 'shutDownTest' if it is JSR169. I think I can change this to use TestUtil.getDataSourceConnection for shutdown test. I noticed this when writing this down and so will submit this in my next patch.
* j9_foundation\closed.out - Added new master to handle DatabaseMetadata.getURL
* j9_foundation\ij2.out - Added new master because of difference in output of show connections in J2ME.

Ran derbyall with this patch using Sun JDK 1.4.2 and j9_foundation in IBM WCTME 5.7. No new failures.


Created: 28/Jun/05 07:23 PM   Updated: Yesterday 11:56 PM 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348593 13f79535-47bb-0310-9956-ffa450edef68"
11ee500e58e80d14a44b4a43ae24e6cc16c73041,"DERBY-718 Network client: deleteRow() makes getter methods return nulls for the following rows. Submitted by Fernanda.Pizzorno@Sun.COM

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@348798 13f79535-47bb-0310-9956-ffa450edef68"
947123bc14b5c230e60de2210e2794192cd2a157,"- DERBY-721 State of InputStream retrieved from resultset is not clean , if there exists previous InputStream - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@349079 13f79535-47bb-0310-9956-ffa450edef68"
daebcb950dd80bbe5ce3eeb86dd2c0c5759495b5,"DERBY-730 Remove statement from cache on any exception during compliation, not just bind errors.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@349632 13f79535-47bb-0310-9956-ffa450edef68"
ce0c6c47103b809512e3b12b1386be00987f1e92,"- DERBY-721_2 State of Reader retrieved from resultset is not clean , if there exists previous Reader - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@349718 13f79535-47bb-0310-9956-ffa450edef68"
e077c885d18a70b0020c766458ca18c4c186cd97,"Cleanup ActivationClassBuilder.java and ExpressionClassBuilder.java by removing old methods
related to named parameters and making the classes non-public since their use is limited to the
sql compile package.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@349721 13f79535-47bb-0310-9956-ffa450edef68"
f7124d396380d7c071ddc0df8798da6a16579643,"Add missed file from javadoc fix due to DERBY-587.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@350292 13f79535-47bb-0310-9956-ffa450edef68"
6989a3b7e5beed53d6b0f2eaa9280918a1756abd,"Fix lang/dcl.sql test failures due to expired certificate on signed jar.
Made similar changes to 10.1 branch where jar is signed for 100 years.
Direct merge is not possible due to additional changes in trunk.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@350295 13f79535-47bb-0310-9956-ffa450edef68"
ac64517b7882ccd06bbf72cc2a0659563535fa6b,"Fix for DERBY-715.  

Sometimes (timing dependent) a lock deadlock was incorrectly returned to the
user as a lock timeout.  The code in LockSet was using the wrong variable
to determine if a deadlock had been detected, that variable sometimes was
right and sometimes wrong.  Changed all the code to use the direct return
from the deadlock detection routine.  Added a test that causes 5 deadlocks,
previous to the fix this test would always report at least 1 timeout on
my single processor, windows xp, laptop.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@351543 13f79535-47bb-0310-9956-ffa450edef68"
16a9182221a6a5a67c7e1421e0d8f86d2c77d9b6,"Update comment in generateExpression to correctly reflect the code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@351550 13f79535-47bb-0310-9956-ffa450edef68"
c7c8b2d614b6f1eecaee2a322a537880d4414c1b,"DERBY-740 Optimize the cast method to not generate checkcast instructions when
the cast class name exactly matches the current type of the top word on the stack.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@351738 13f79535-47bb-0310-9956-ffa450edef68"
209ff6104216ac54bb3162329f637973670f60fb,"Add tests and cleanup largeCodeGen test in preparation for DERBY-739 fix.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@351776 13f79535-47bb-0310-9956-ffa450edef68"
a8f86a154bc40b532dc0240fa88d2553e8db3349,"fix for DERBY-741.

Insure that row estimates from btree cost function never return more rows than
the btree thinks it has.  Before this change an ASSERT might fire where the
fraction estimating the percentage of rows became larger than 1 (like 1.000001).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@351846 13f79535-47bb-0310-9956-ffa450edef68"
7736829deb42befd9e4d21445da1e43379582605,"DERBY-738 Remove use of generated code per parameter for initiailizing parameters.
Previously the language compiler would generate some amount of code per paramter
in order to set up the parameter with a holder DataValueDescriptor of the correct type.
This patch changes the parameter set to be initialized when the activation is linked
to the language PreparedStatement (plan) utilizing the list of parameter types the plan has.
Thus no generated code is needed per parameter for set up.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354142 13f79535-47bb-0310-9956-ffa450edef68"
60ab583dd8bd980070242106deb7a28eb0241e81,"Build fix for gump due to movement of compatibility directory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354481 13f79535-47bb-0310-9956-ffa450edef68"
4549ad449ed51d86b1819a276a1ffd211e8d04a8,"DERBY-742 Use an immutable BooleanDataValue in the generated short circuit logic for AND and OR
operators. Reduces the amount of code generated.
Expanded comments on conditional handling code in bytecode generator and made the conditional
code more flexible, changing to a general purpose if/then/else rather than like the Java language ?: operator.
Added a BooleanDataValue.getImmutable() call to support the AND/OR nodes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354496 13f79535-47bb-0310-9956-ffa450edef68"
64ec5e2d801bacc4c3909d86391c12fcf95c8123,"DERBY-239, fixing onlinebackuptest1.

committing on behalf of Suresh Thalamati.

This pacth  fixes store/onlineBackupTest1.java failure on non-windows envirorment.   Problem  was  unlogged operations thread and insert thread are working on the  same connection. Test was failing becuase  insert thread  was committing the unlogged operation that was suppose to block the backup. 
This pacth modified the test , so that  these threads works on different conenctions, 
 

 Test passed on Windows XP and Linuix. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354523 13f79535-47bb-0310-9956-ffa450edef68"
c8208e1e52faab858e13c37daba529ed7e93a89d,"DERBY-176 Improved version of the largeCodeGen test with looping based upon query element count
and a test for a large IN clause.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354826 13f79535-47bb-0310-9956-ffa450edef68"
a96779a0e761ce65b191e5bb78cdfaaa56b259aa,"Added vote for Derby logo


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354855 13f79535-47bb-0310-9956-ffa450edef68"
fbb886683cd1f71a77f26137b90bca3989275c78,"committing onlinebackup_4.diff for DERBY-239.

committing on behalf of Suresh Thalamati.

This patch makes online backup call to wait/fail when unlogged operations like
create index are pending. It also fixes derby-523 bug my making the existing
log archive backup procedure to wait for the unlogged operation to complete. 

-- Two new procedures are added to allow the users to make backup wait/fail
when unlogged operations are pending. 
-- prevents users starting backup in an non-idle transactions to avoid backup
blocking forever if users starts backup in the same transaction as an
unlogged operation. 
-- backup is not really transactional , to avoid any locking issues in the
futures; backup procedures ends the transaction by implicitly doing commit
when it is successful or rollback on any errors. 

A new backup test is added to store suite to test the above scenarios. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354898 13f79535-47bb-0310-9956-ffa450edef68"
79870c5674176f7a0a4f4d5eebd4487b0e77ec4f,"Adding new files missing from commit 354898.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354901 13f79535-47bb-0310-9956-ffa450edef68"
2845d431673a685a9e922d642a794c9a0e230ae1,"Ian Leslie's vote for logo was duplicated



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354909 13f79535-47bb-0310-9956-ffa450edef68"
e2f78db112ff7e73d0bfb00a905b95f1e7abeb47,"Build fix for gump. Set source property on javac task if using jikes to work
around jikes 1.22 problem. Also remove empty compatibilty directory from
previous move of compatibility tests to the junitTests directory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@354911 13f79535-47bb-0310-9956-ffa450edef68"
da10c02add3120381dbea429bf434dc423742ac7,"- rollback DERBY-721 and DERBY-721_2 because they will implicitly restrict spec of network driver. - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@355437 13f79535-47bb-0310-9956-ffa450edef68"
b9dfea467779f8ccebcd4adaec3719a1b72a1191,"test and master changes for tests which
are failing with jdk13 and j9_13 jvm.

 updatableResultSet.out - updated masters for jdk13.

* derby_tests.policy -  added security permission
""insertProvider.IBMJCE"" which is required by encryption tests to run
with IBM jdk13.

* store\TestDurabilityProperty.java, store\backupRestore1.java - Added
a condition to use DataSource to get connection when jsr169 is used.
This condition is needed because j9_13
uses EmbeddedDataSource which implements javax.naming.Referenceable.
This is not available in j9.

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@355671 13f79535-47bb-0310-9956-ffa450edef68"
ed7188f6858afd70cf13f975fc5ca23f6b6f7fef,"Attached is a patch with 2 new j9 related canons for aggregate.sql.

Contributed by Myrna Van Lunteren



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@355673 13f79535-47bb-0310-9956-ffa450edef68"
41f1df99078e39e213c5d4c3af3200f8c45cc7bf,"DERBY-614 Execution failed because of a Distributed Protocol Error

Fixes the split logic when data passes the blksize boundary.
Details of the fix are in spec.html attached to DERBY-614

Contributed by Bryan Pendleton



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@355689 13f79535-47bb-0310-9956-ffa450edef68"
b7730e4685c3907aaf98a88dfda163fdad9ad98b,"DERBY-464: Submit Grant & Revoke Part I. This implements the new DDL operations along with the following:
  *  Grant/Revoke DDL parsing and execution
  *  Addition of several new system tables to hold the system metadata. I will update my spec to include detailed schema for new system tables, so that they can be included in 10.2 documentation.
  * Enhancing the syntax for routine creation to include external-security clause
  * Very simple tests to cover only the DDL. I would be expanding on the testing in the later submissions, including a JUnit test suite.
  * Grant/Revoke DDL is only supported if derby.database.defaultConnectionMode property is set to 'sqlStandard'.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@356133 13f79535-47bb-0310-9956-ffa450edef68"
ffc5ec5eae473676a9524c80e0571185f01c09e6,"Update J9 masters for aggregate.sql

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@356186 13f79535-47bb-0310-9956-ffa450edef68"
558e1e4643b228724766a3cc03b5c456079a9deb,"Add ibm15 class to the test harness.

Committed for Rajesh Kartha <kartha@source-zone.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@356492 13f79535-47bb-0310-9956-ffa450edef68"
2e4a44ee331251458ee6be6a67ec77275768b525,"DERBY-706 Improve testing and increase code coverage for Network Server classes

have attached a second patch 'derby-706_2.diff' which adds some more tests and re-arranges/removes some internal methods. Details of patch are:

* DDMWriter: Removes min method because Math.min is used. Use doesRequestContainData() method.
* DDMReader: Use readCodePoint() method
* DRDAConnThread: QRYOPTVAL codepoint is not part of DRDA spec. parseCcsidSBC was giving NPE.
* CodePointNameTable: Add codepoints to be used in protocol.tests
* protocol.tests: Added tests to cover methods which were not tested before.
* Session, DRDAStatement, Database, DRDAProtocolException: Remove some methods which are not needed. The same can be done using other methods.
* TestProto: Use lookup method.
* testProtocol: Added ""derby.drda.traceAll=true"" to derby.properties file to test methods in DssTrace
* testProperties: Added test for trace off command. Added ""derby.drda.traceAll=true"" to derby.properties file to test memcheck.
* runtimeinfo: Rearranged test because the output was not predictable on different jvms/machines.

Ran derbyall with Sun JDK 1.4.2 on WinXP. No failures. 

Contributed by Deepa Remesh




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@356553 13f79535-47bb-0310-9956-ffa450edef68"
2dc0b91711a0eb33ef4ad711eeda16d2b782efe4,"DERBY-573: Add support for optimizer hints, provided by the user as SQL comments. Also add upgrade infrastructure for 10.2 release and support new optimizer mechanism to work correctly under soft-upgrade for databases at 10.1 level.

I have the patch for optimizer overrides support in Derby. Alongwith the patch, I have attached the updated functional spec to the JIRA entry DERBY-573.

Majority of the changes went into the sqlgrammar.jj because Derby engine already has support for them internally. It is the parser that needs to recognize these overrides and pass it on to through the query nodes. The parser now looks for character sequence -- DERBY-PROPERTIES (case insensitive and space between -- and D is optional) and once it finds that, it looks for propertyName=value pairs on that same comment line in parser's propertyList method. The parser does the basic check to make sure that the same property is not used more than once for a given table. The remaining checks on the properties like checking the existence of user specified index etc are done in the bind phase.

I also changed the metadata.properties file to use --DERBY-PROPERTIES rather than old PROPERTIES clause to supply optimizer overrides. In addition, added \n at the end of the optimier override comment lines to make sure the comment line does not get concatenated with the next line of the sql.

Import.java had to be changed to user --DERBY-PROPERTIES rather than PROPERTIES.

Added a new test optimizerOverrides.sql which runs in both embedded and network server mode.

Rerunning all the tests after syncing the codeline to make sure nothing has broken. An earlier run of the tests before the sync came out clean.

I plan to next work on exposing these overrides through runtime statistics so that user can verify that the optimizer overrides are getting used.

Submitted by Mamta Satoor (msatoor@gmail.com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@356562 13f79535-47bb-0310-9956-ffa450edef68"
7ab414cf03348ca692eb98c98b13eb89d1bf40e6,"DERBY-739 Reduce generated code required to access a parameter's value

Adds a new getParameter(position)  method to BaseActivation and calls this.getParameter(position) instead of this.pvs.getParameter(position).   This saves some generated byte code and increases the number of parameters in an IN predicate from 2700 to 3400 for an otherwise simple statement.





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@356621 13f79535-47bb-0310-9956-ffa450edef68"
a2f90d4f9a8699cd652ae7d0f141111df92bcef1,"Fix for DERBY-733.  Committed on behalf of Knut Anders Hatlen.

I have attached a patch which invokes ReentrantLock.lock() and
unlock() when reading in a page from disk. I did not build my own
ReentrantLock replacement, as I said I would. Instead, I have used
reflection to enable this feature if the JVM supports it. This seemed
like an easier approach, and I also discovered that the handling of
threads waiting for monitors had changed between 1.4 and 1.5 and that
this issue was not so serious on 1.4.

The maximum response time was drastically reduced in the disk-bound
case. Derbyall ran successfully on both Sun JVM 1.4.2 and 1.5.0. I
have also tested the performance, and I could not see any change in
throughput or CPU usage. (The performance test was run with a very
small page cache and with a database that was many times bigger than
the page cache, but smaller than the file system cache. This way,
Derby called readPage() very often, but it was CPU-bound since the
requested page always was in the file system cache.) 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@356884 13f79535-47bb-0310-9956-ffa450edef68"
4f4ddf4977a3dbf730a0e37d5ed7a19f67dc939d,"Submitting a temporary fix to disable defaultConnectionMode of sqlStandard until two failed tests are resolved.

I will reenable the mode soon and also make derbylang run grantRevoke.sql test. A new test was added, but I forgot to include it in the derbylang suite.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@356961 13f79535-47bb-0310-9956-ffa450edef68"
6fbf34b4bbd26f972a455ebb91a1ebbafc6002ab,"DERBY-739  Reduce generated code required to access a parameter's value

follow up patch.
callMethod was missing the declaring class. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357057 13f79535-47bb-0310-9956-ffa450edef68"
676d633b3f8def14a542b90c185cab590b6fe089,"DERBY-758, fixing I/O retry logic to throw an I/O exception rather
than loop forever on I/O read errors.  4 retry's are attempted before
giving up.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357083 13f79535-47bb-0310-9956-ffa450edef68"
24bbe7571266740be5e4cc0e769c4e0e4018fa48,"DERBY-239, committing on behalf of Suresh Thalamati.

This patch adds code to support online backup when  jar operations 
are running parallel to the backup. Jar files are not logged, but the 
system catalogs updates are logged when a jar file is added/replaced. 
If the jar file operations are allowed during the backup, system catalog 
(sys.sysfiles) table in the backup database can have a reference to a jar file 
that does not exist in the backup database. And also backup can contain 
partial written jar files. To make a consistent online backup, this patch:

1) Makes Backup operation wait/fail for all the jar operations activity in progress to complete.
2) Blocks jar file operations when a backup is in progress.

This patch also adds a new test to test the online backup 
with jar operations.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357269 13f79535-47bb-0310-9956-ffa450edef68"
7e95befddf7ba6a7fc42d94309529a6a196cd471,"DERBY-750, committing on behalf of Suresh Thalamati.

By looking at the stacks,  my suspicion is backup is looking at a table that 
is not completely created yet, container file might be there but the  
first page (Alloc page) might have been created.  

It might take some time for me to fix this one.  As a temporary solution,  
attached patch comments out the section of the test that might be hitting this 
problem. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357272 13f79535-47bb-0310-9956-ffa450edef68"
9008adea3f807cacd7fa89214f2a1309b7a2d75f,"DERBY-733, committed on behalf of Knut Anders Hatlen.

Attached patch (DERBY-733-more-exception-handling.diff) that addresses
Mike's concerns for exception handling. If something goes wrong when
locking, Derby will now fall back to the old behaviour.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357275 13f79535-47bb-0310-9956-ffa450edef68"
31f29a4bb5e9e1901e11555251e1fa68f13a5c1e,"- DERBY-721_4  - State of InputStream retrieved from resultset is not clean , if there exists previous InputStream . Patch to throw exception if user get stream for a value in result set twice . by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357435 13f79535-47bb-0310-9956-ffa450edef68"
37f3f74ab027a53468f40ce11fb27f9fce316bb1,"DERBY-611 Network client: updateRow() causes a commit when autoCommit = true. Submitted by Dag.Wanvik@Sun.COM

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357678 13f79535-47bb-0310-9956-ffa450edef68"
08d6ce2322d4ded8cd00d5dbb7ba794f5d26db57,"DERBY-776 (partial) Remove type descriptor methods builtIn and systemBuiltIn and
replace their use with userType(). Simplifies the scheme to is a type a user type
(represented currently by a Java class) or a system defined type (e.g. INT, CHAR).
Previously the code had methods for three types but in reality all checks were for
is it a user type or not. Note that the only use externally for user types (Java types) is in
the system catalogs. User-defined types are not supported in Derby, until SQL Part13
is implemented (create type as java class). If Derby ever supports other forms
of user-defined types, e.g. distinct types it would probably be better to change
the userType method to isJavaType(), which really represents its usage today.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357756 13f79535-47bb-0310-9956-ffa450edef68"
b22462c712c5b976f5ca0f76b55e7e0b6a4ba822,"Remove some unimplemented methods in GenericController.java and its sub-classes
that are not required, either because they are already defined in an interface
or can be converted to abstract methods.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357820 13f79535-47bb-0310-9956-ffa450edef68"
50e3e576c467d392bdea86dad3a69c6753306bab,"- DERBY-721_5 State of InputStream retrieved from resultset is not clean , if there exists previous InputStream . Add mater .out file to be passed using DB2 universal driver. - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@357966 13f79535-47bb-0310-9956-ffa450edef68"
90731d50069e5b406dc9cb22d7a9a2163a41910f,"DERBY-499 Add BOOLEAN datatype. See jira comments for details.
Commit of patch bug499_rev4.diff, contributed by Rick Hillegas


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@358163 13f79535-47bb-0310-9956-ffa450edef68"
dd5a87206656f0ce8e569bd8e1d4ec113f8ddb5c,"DERBY-774 DRDAConnThread::doneData should use statically allocated SQLException objects. Submitted by Dyre.Tjeldvoll@Sun.COM

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@358560 13f79535-47bb-0310-9956-ffa450edef68"
5ff5941cbf79e6ef59694368d66a60b4bb1aeef8,"DERBY-413: Allow Network Server tests to be run against a server on a machine
other than localhost.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@358591 13f79535-47bb-0310-9956-ffa450edef68"
38fe427c4417f3a0b743732a21a0190c27e54cd6,"DERBY-176 Produce a clear error message when a SQL statement exceeds the
limit(s) of the generated Java class. These limits are imposed by the Java
Virtual Machine specification.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@358605 13f79535-47bb-0310-9956-ffa450edef68"
6b26ee1b6bf7bf06516634115b97a7b697c58d41,"DERBY-766 (partial) Remove passing the activation into some ResultSetFactory methods
and instead obtain the activation from the passed in ResultSet. Incremental progess
on removing activations from ResultSetFactory methods.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@358954 13f79535-47bb-0310-9956-ffa450edef68"
00613832854f0e00d4ccd6ad2760503d2d2e3bb1,"Cleanup in the StatementNode hierachy. Remove the nodes
ReadCursorNode, CreateStatementNode and DropStatementNode
which added no value.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@359264 13f79535-47bb-0310-9956-ffa450edef68"
1ad9e3fcb07675d2189f8563ff25991334602e78,"DERBY-445 Ensure client data sources do not lose the value of their
connectionAttributes property during serialization. Added data source
test that stores DataSource instances using Serialization and Reference
and checks they are restored correctly.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@359290 13f79535-47bb-0310-9956-ffa450edef68"
8e6f64ea9f927c344f1caf2170bf43401fec3a70,"DERBY-413 Add missing file from previous commit 358591.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@359331 13f79535-47bb-0310-9956-ffa450edef68"
c11dad78ce6ad2bdfb7926151e2bc9bc22cfc6bd,"Remove ReadCursorNode from DBMSnodes.properties as it was removed in 359264


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@359345 13f79535-47bb-0310-9956-ffa450edef68"
45075ccac34f2c5e5306299b2a3c6bb11ac10abd,"DERBY-776 ENsure some calls to DataValueDescriptor.setValue(Object) are made through the UserDataValue
interface as a step towards removing the DataValueDescriptor.setValue(Object) method. Use the setBigDecimal
methods in some cases for JDBC update/setBigDecimal methods.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@359572 13f79535-47bb-0310-9956-ffa450edef68"
698e318fba44f050c4f5f89288688f8db119f5d2,"DERBY-776 Cleanup related to setValue(Object). Set return parameter for ? = call
statements directly from ResultSet, rather than through an Object.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@359634 13f79535-47bb-0310-9956-ffa450edef68"
18c4da72488f6655bc11839e7f5361cee79149f7,"DERBY-777 Remove use of java.io.InputStreamReader.getEncoding to get the
platform's default encoding. Creating this reader on System.in was causing
a hang on Z/OS.
Now simply use the stream/reader constructors that do not take a encoding
argument and thus use the default. With this Derby does not need to know
the actual value of default encoding.

Merge of 358137 from 10.1


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@359833 13f79535-47bb-0310-9956-ffa450edef68"
4aac5f7d6ed68f201999526e08a447c60b03433d,"DERBY-786 Make TypeId.variableLength() return true for CLOBs to ensure values
assigned to CLOBs are truncated correctly on a CAST.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@360226 13f79535-47bb-0310-9956-ffa450edef68"
67b3e7f13de5fc475439ebdcc3fb97e0cd52a68f,"DERBY-731 Replace the inefficient StringSlicer class with a simple utility slice method in StringUtil.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@360412 13f79535-47bb-0310-9956-ffa450edef68"
806114c49e29388fceca02df27d94d04b3be97ef,"DERBY-776 Remove method DataValueDescriptor.setValue(Object). Objects are now
set using DataValueDescriptor.setObjectForCast(Object) consistently.
Cleanup CastNode to use these methods correctly. Make DataValueDescriptor.setWidth
void rather than return itself.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@360519 13f79535-47bb-0310-9956-ffa450edef68"
f32e51e193c80b5968fca03977d7884403d7d450,"DERBY-615 Make RunTest install a SecurityManager when using useprocess=false.
Add a utility SQL test function to indicate if a SecurityManager is installed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@365776 13f79535-47bb-0310-9956-ffa450edef68"
8e896c5f0bafb6df137861df90cd940d3730a3af,"DERBY-746 Fix NullPointerException on passing an invalid format as encryptionKey on a JDBC URL
* JCECipherFactory.boot() now checks the output from the fromHexString-method and throws an exception if it is invalid.
* Added 2 new SQLStates and messages (only English)
* Added 2 new test cases (invalid char in encryption key and encryption key of with odd length).
* Updated master file. 
Patch contributed by Kristian Waagan (Kristian.Waagan@Sun.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@365785 13f79535-47bb-0310-9956-ffa450edef68"
14d31f942e8146fa512ceab2c0297b52e90c1723,"DERBY-798 Fix NullPointerException when Derby is loaded by the bootstrap
class loader in a jvm which returns null on Class.getClassLoader().
Fix suggested by Timothy Luksha (RIT Student).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366226 13f79535-47bb-0310-9956-ffa450edef68"
f8d398b9c5ce3dbd4df44a70ff24f29455566526,"Modify the i18n/JapanCodeConversion.sql test not to perform execs of native2ascii.
Instead use a Java SQL function to perform the same function, display the content
of a file in ascii with unicode escapes. Function was added as a standard test
routine so dml160 and databaseProperties master files were updated as they install
the standard test functions.
Execing a program requires wide permissions under the security manager and
was failing on IBM JVMs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366258 13f79535-47bb-0310-9956-ffa450edef68"
5b2f5deba801b19e7ad6ac2746a60bed51f3266c,"Reduce the visibility of various methods and fields based upon some
early investigation of object inspection by applications for security holes.
Methods/fields reduced to private or package from public or protected.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366259 13f79535-47bb-0310-9956-ffa450edef68"
2c6ca76ffa3b4c9853eb0b6a71e1c01355246247,"DERBY-464: Enable Grant and Revoke DDLs again that were disabled because of two test failures.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366544 13f79535-47bb-0310-9956-ffa450edef68"
ce9f49f40cd02b7a6f6e32799aff1873b072ccf3,"Add grantRevoke test to derbyLang suite.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366564 13f79535-47bb-0310-9956-ffa450edef68"
e967126de2f86391db39012796731c2a33383a5f,"* updated masters for jdbcapi/metadata.java,
jdbcapi/odbc_metadata.java for j9_foundation.
* changes to OnlineBackupTest to run with j9 vms.

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366629 13f79535-47bb-0310-9956-ffa450edef68"
b771bbc9cd89f9c4612e56bda84ee37033b5c9da,"Cleanup related to ConstantAction class hierachy in preparation
for splitting the implementation hierachy into constant actions
and DML constants.
Remove uptoDate method which always returned true and unused interface KeyToBaseRowConstantAction
and some other unused implementation methods and constants.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366859 13f79535-47bb-0310-9956-ffa450edef68"
894b205e5583564793df2beb8dbac5a76ce38ce4,"Minor cleanup of public members in MethodCallNode, JavaValueNode and QueryTreeNodeVector.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366862 13f79535-47bb-0310-9956-ffa450edef68"
26fef2f9d7dcfe9483da6802ad7a5109ce8e0387,"DERBY-615 Recent changes to JapanCodeConversion test allow it to be run under the SecurityManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366866 13f79535-47bb-0310-9956-ffa450edef68"
4df9f63054738d139b60c144eb43d79f14d67bd8,"DERBY-398 - Include tests for J2ME/CDC/foundation

* lang/wisconsin.sql test currenly did not work in J2ME environment because the test setup uses stored procedures with nested connection. To make this test run in this environment, I moved the setup (sql for table creation and inserts) to a Java class (wisconsin). From the Java class, the remaining sql is run using ij.
* Modified master files
* Modified the test name from wisconsin.sql to wisconsin.java in the runall and exclude files

Ran lang/wisconsin.java successfully using Sun JDK1.4.2 in all 3 frameworks and also with j9_foundation in IBM WCTME5.7. Please take a look at this patch. Thanks.

Contributed by Deepa Remesh




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@366987 13f79535-47bb-0310-9956-ffa450edef68"
2fb955653a2fea98300eaefd9e91947f117b6bbb,"fix for DERBY-298.  committing change for ¬∑¬πystein Gr¬±¬±¬±vlen

 The attached patch fixes the bug by setting the logEnd after recovery to the beginning of the new empty log file instead of the end of the previous file.
The patch contains changes to the following files:

M java/engine/org/apache/derby/impl/store/raw/log/FileLogger.java
        - At the end of the redo scan, if the scan stopped in a file succeeding the file of the last log record, update logEnd to this position.
        - Change assert to allow logEnd to be in a newer file than that of the last log record.
         
M java/engine/org/apache/derby/impl/store/raw/log/Scan.java
        - Introduced new variable newFileStart which will only have a valid LogInstant value when the scan is at the header of the file.
        - When a new file is entered, set newFileStart to the first possible LogInstant of this file (end of header).
        - When a log record is encountered, set newFileStart to INVALID_LOG_INSTANT.
        - Changed getLogRecordEnd() to return newFileStart if that is valid (i.e., scan is at the start of a file)
        - Removed comment about not starting to write to the new empty log file, since that is not true anymore.

A java/testing/org/apache/derbyTesting/functionTests/tests/store/RecoveryAfterBackup_app.properties
         - Test properties

M java/testing/org/apache/derbyTesting/functionTests/tests/store/copyfiles.ant
         - Added new property files

A java/testing/org/apache/derbyTesting/functionTests/tests/store/RecoveryAfterBackupSetup_app.properties
        - Test properties.
        - useextdirs=true needed so the backup is placed somewhere the next test can find it.

A java/testing/org/apache/derbyTesting/functionTests/tests/store/RecoveryAfterBackup.java
        - Test that is supposed to be run after RecoveryAfterBackupSetup.java.
        - Does recovery, updates the database, shutdowns the database, and does roll-forward restore.
        - Checks that updates made after recovery is reflected in the database after roll-forward restore.

A java/testing/org/apache/derbyTesting/functionTests/tests/store/RecoveryAfterBackupSetup.java
        - Test that does the preparation for the RecoveryAfterBackup test.
        - Inserts a few records, makes a backup, and stops without shutting down.

M java/testing/org/apache/derbyTesting/functionTests/harness/RunTest.java
        - For tests where the database is not deleted at the end of the test, do not delete the external directories either.
        - This is necessary to be able to access the backup in suceeding tests.

A java/testing/org/apache/derbyTesting/functionTests/master/RecoveryAfterBackupSetup.out
        - Test output

A java/testing/org/apache/derbyTesting/functionTests/master/RecoveryAfterBackup.out
        - Test output

MM java/testing/org/apache/derbyTesting/functionTests/suites/storerecovery.runall
        - Added tests to storerecovery suite.
        - Changed property eol-style.

 The recently attached patch (derby-298a.diff) addresses Suresh's
review comments. The only major change from the previous patch is in
java/engine/org/apache/derby/impl/store/raw/log/Scan.java. The changes
to this file compared to the current head of trunk are:
 
   - When a new log file is entered, check that the header of this
     file refers to the end of the last log record of the previous log
     file. If not, stop the scan.
   - If the header was consistent, update knowGoodLogEnd to the first
     possible LogInstant of this file (end of header).
   - close() no longer reset knownGoodLogEnd since it is needed by
     FileLogger after the scan is closed.
   - Changed comment of getLogRecordEnd() to reflect that it can be
     used after the scan is closed, and that it at that time may
     return the start of an empty log file.
   - Removed comment about not starting to write to the new empty log
     file, since that is not true anymore.

In addition, the property files for the tests have been updated so
they are run without the security manager. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@367352 13f79535-47bb-0310-9956-ffa450edef68"
2bd57f2714b9750a44f9af2fb8651fb4b47cac3a,"DERBY-793 Replaced the incubator disclaimer with current information about
the derby project and where to find more info.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@367377 13f79535-47bb-0310-9956-ffa450edef68"
f5c79e691d59ebdfdc1aa46195ad6f32755d62f3,"Master updates to accomodate group by print order for j9 jvms

Contributed by Myrna Van Lunteren



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@367433 13f79535-47bb-0310-9956-ffa450edef68"
d3a4f64fea67392555669bb539048e63c9bf5363,"Modify some access scans to use the faster fetchNext() rather than separate next() & fetch() calls.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@367613 13f79535-47bb-0310-9956-ffa450edef68"
6bc98979f417575eb5be971503f2bce8d503c9d6,"DERBY-467 Make some public & protected classes and members in the org.apache.derby.impl.sql.execute package
have more secure protection by making them private or package protected.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@367619 13f79535-47bb-0310-9956-ffa450edef68"
d8ee47c912e43f9fd564a0c424e511c9d3b8798e,"DERBY-746 Correct spelling mistake in error message.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@367712 13f79535-47bb-0310-9956-ffa450edef68"
ca2bcce02c4693270842d9d2ce32485d2c5231ac,"DERBY-612: Add locale jars as ClassPath entries in derby.jar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@367801 13f79535-47bb-0310-9956-ffa450edef68"
5c636011657fc32c5c57080d9caeaafd87797d20,"Add missing GrantRevoke nodes to JAR build process. Likely the cause of grantRevoke test failure.

Submitted by Satheesh Bandaram(satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@368163 13f79535-47bb-0310-9956-ffa450edef68"
ee2a8604ec688264529348558c0109707e41a084,"DERBY-212 Optimize some specific methods in Network Server to improve performance. Submitted by Knut Anders Hatlen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@368333 13f79535-47bb-0310-9956-ffa450edef68"
4b0f6fc9c3c366dc059c1d13b61e7f681c1f0488,"High level design of Network Server Implementation



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@368728 13f79535-47bb-0310-9956-ffa450edef68"
212778084924dd5759519d4c88d4a692370d296d,"DERBY-615 Enable the iepnegativetests to run under the security manager
by using a filename in a location the code has access to for the not exists file test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@368827 13f79535-47bb-0310-9956-ffa450edef68"
361ffcee6ea952a2e00f894ce37327b25b1f5de9,"DERBY-615 Indicate which bugs cause dblook_test and checkDriver to fail with SecurityManager.
Enable importExport with SecurityManager as it seems to work fine.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@368876 13f79535-47bb-0310-9956-ffa450edef68"
cf858ecab3a91b4e93157a95f3be4f47945a22cd,"DERBY-615 Enable Junit tests under the SecurityManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@368903 13f79535-47bb-0310-9956-ffa450edef68"
1277b382473ce4cb729056f34218a2230fce1ef4,"DERBY-615 Enable the JUnit CompatibilityTest under the SecurityManager now that JUnit tests
can be run with a SecurityManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@368919 13f79535-47bb-0310-9956-ffa450edef68"
fc30c5f24ff3b5bf8c3dc54eba28dc5e0d44aadf,"DERBY-170  Inserting large string value into non-existent table causes communication link failure over Network Server.

 Attached is a proposed patch for DERBY-170, which teaches the skipDSS method how to handle segmented DDM objects. changes.html attached to DERBY-170  provides a bit of background and discussion for the reviewer. I have successfully run derbyall with this patch. The patch includes a new test, and new master output files. 

Contributed by Bran Pendleton



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@369549 13f79535-47bb-0310-9956-ffa450edef68"
cff2860a8202b734c1aa63ecc0f98cfcacb611ef,"DERBY-210 - Network Server will leak prepared statements if not explicitly closed by the user until the connection is closed


 I am uploading a combined patch 'derby-210.diff' which solves the memory leak. As Bryan suggested, I am uploading this patch and will open jira issues for other optimizations. Patch does the following:

* Eliminates the below references to PreparedStatement objects by using WeakHashMap instead of LinkedList. When there are no other references to the keys in a WeakHashMap, they will get removed from the map and can thus get garbage-collected. They do not have to wait till the Connection object is collected.
       - 'openStatements_' in org.apache.derby.client.am.Connection
       - 'CommitAndRollbackListeners_' in org.apache.derby.client.am.Connection

* Removes the list 'RollbackOnlyListeners_' since this is not being used.

* Updates the following comment for openStatements_:
// Since DERBY prepared statements must be re-prepared after a commit,
// then we must traverse this list after a commit and notify statements
// that they are now in an un-prepared state.
final java.util.LinkedList openStatements_ = new java.util.LinkedList();

In the code, I did not see this list being traversed after a commit to re-prepare statements. Also, I think this is not needed since Derby does not require re-prepare of statements after a commit. Currently, this list is used to close all open statements when the originating connection is closed.

* Removes all ResultSets from HashTable 'positionedUpdateCursorNameToResultSet_' in SectionManager. Only result sets of positioned update statements were being removed from this hashtable whereas all result sets were added. Because of this, client driver was holding on to result sets and statements even after rs.close() was called.

* Adds a test 'derbyStress.java' to jdbcapi suite. This test is based on the repro for this patch. Without this patch, it fails when run with client driver. Kathey had suggested in another mail that tests for client memory leak problems (DERBY-557, DERBY-210) can be added to same test. I did not see an existing test. So I created this new test. If DERBY-557 does not have a test, I think it can be added to this new test.

* Excludes the new test from running with jcc because jcc gives out of memory error.

* Creates 'derbyStress_app.properties' with following property 'jvmflags=-Xmx64M' to guarantee the test fails on all machines.

Successfully ran derbyall with Sun JDK 1.4.2 on Windows XP. Please take a look at this patch.


Contributed by Deepa Remesh




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@369612 13f79535-47bb-0310-9956-ffa450edef68"
c7248d5e43cbb1aac219b014e3381b5e553c63a2,"DERBY-573: Enhance RUNSTAT output to show user specified optimizer hints are bing used.

Here is the checkin message from the contributor:

I have attached a patch named Derby573OptimizerOverridesAndRunTimeStatistics011206.txt to JIRA Derby573 Provide support for optimizer overrides in Derby. This patch enables users to see the optimizer overrides specified in the sql as part of runtime statistics info. This is achieved by changing the 
generator so that these properties get passed from compile time to execute time. This change in generate phase can be found in FromBaseTable,
BaseJoinStrategy and JoinNode. The changes in the other classes is for returning the correct number of arguments to the scan. That change is in 
getScanArgs method. 

In addition, I have changed the existing lang/optimizerOverrides.sql to test this patch. derbyall suite has run fine on my Windows XP m/c with Sun's jdk14.

Submitted by Mamta Satoor (msatoor@google.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@369619 13f79535-47bb-0310-9956-ffa450edef68"
179365df65dd72807fcc5eaa5e53029b08d2ee30,"Updated to include vote for Rick Hillegas as a committer


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@369858 13f79535-47bb-0310-9956-ffa450edef68"
580d6a3bca0e9be315375160cb05e3f282f9fa93,"DERBY-499: Fix metadata.java and syscat.sql in jdk131 vms.

Committed for Rick Hillegas <richard.hillegas@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@369956 13f79535-47bb-0310-9956-ffa450edef68"
88e3d5f2c471cb86f03a86c8219bc133a4d7119c,"DERBY-398  add jdk14 suite to J2ME

Contributed by Deepa Remesh
 Attaching a patch 'jdk14_tests.diff' which adds jdk14 suite and some more tests to run with J2ME/CDC/FP. Changes are:

M java\tools\org\apache\derby\impl\tools\ij\mtTestCase.java

If ij.dataSource property is specified, remove ij.database and ij.protocol property. Similar to what is done by test harness. This is needed for stress.multi.

M java\testing\org\apache\derbyTesting\functionTests\tests\i18n\iepnegativetests_ES_app.properties
M java\testing\org\apache\derbyTesting\functionTests\multi\stress\init.properties
M java\testing\org\apache\derbyTesting\functionTests\multi\stress\run.properties

Change 'database' property to 'ij.database' and add ij.dataSource properties.

M java\testing\org\apache\derbyTesting\functionTests\tests\lang\holdCursorJava.java
M java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\autoGeneratedJdbc30.java

Execute procedure tests only if DriverManager class is present.

A java\testing\org\apache\derbyTesting\functionTests\tests\lang\procedureJdbc30_app.properties
A java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\checkDataSource30_app.properties
M java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\copyfiles.ant
M java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\parameterMetaDataJdbc30_app.properties

These tests are part of jdk14 suite but cannot be run with JSR169.

M java\testing\org\apache\derbyTesting\functionTests\tests\lang\maxMemPerTab_app.properties
M java\testing\org\apache\derbyTesting\functionTests\tests\lang\triggerStream_app.properties
M java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\LOBTest_app.properties
M java\testing\org\apache\derbyTesting\functionTests\tests\store\bootLock_app.properties

Removed 'runwithfoundation=false' exclude from these tests

M java\testing\org\apache\derbyTesting\functionTests\tests\lang\copyfiles.ant
D java\testing\org\apache\derbyTesting\functionTests\tests\lang\maxMemPerTab.sql
A java\testing\org\apache\derbyTesting\functionTests\tests\lang\triggerStream.java
A java\testing\org\apache\derbyTesting\functionTests\tests\lang\maxMemPerTab.java
D java\testing\org\apache\derbyTesting\functionTests\tests\lang\triggerStream.sql
M java\testing\org\apache\derbyTesting\functionTests\suites\derbylang.runall
M java\testing\org\apache\derbyTesting\functionTests\master\maxMemPerTab.out
M java\testing\org\apache\derbyTesting\functionTests\master\triggerStream.out
M java\testing\org\apache\derbyTesting\functionTests\util\StreamUtil.java
M java\testing\org\apache\derbyTesting\functionTests\util\ProcedureTest.java

maxMemPerTab and triggerStream tests are converted from sql to java to avoid using procedures with nested connections.

M java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\dbMetaDataJdbc30.java
M java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\resultsetJdbc30.java

NoSuchMethodError for methods not present in JSR169.

M java\testing\org\apache\derbyTesting\functionTests\tests\jdbcapi\users_app.properties

User and password are specified in databaseName itself so that they don't get re-used for other connections in the test

M java\testing\org\apache\derbyTesting\functionTests\tests\store\bootLock1.java
M java\testing\org\apache\derbyTesting\functionTests\tests\store\bootLock.java

Use Datasource instead of DriverManager

M java\testing\org\apache\derbyTesting\functionTests\harness\RunList.java
M java\testing\org\apache\derbyTesting\functionTests\suites\jdk14.properties

Change 'jdk14test' property to 'jdbc30test' property. Add check for jdb30test so that it can run with foundation vm.

M java\testing\org\apache\derbyTesting\functionTests\master\resultsetJdbc30.out

Small correction in the test and master.

A java\testing\org\apache\derbyTesting\functionTests\master\j9_foundation\iepnegativetests_ES.out

Added new master because of difference in output of show connections.

A java\testing\org\apache\derbyTesting\functionTests\master\j9_foundation\dbMetaDataJdbc30.out
A java\testing\org\apache\derbyTesting\functionTests\master\j9_foundation\LOBTest.out
A java\testing\org\apache\derbyTesting\functionTests\master\j9_foundation\autoGeneratedJdbc30.out
A java\testing\org\apache\derbyTesting\functionTests\master\j9_foundation\resultsetJdbc30.out
A java\testing\org\apache\derbyTesting\functionTests\master\j9_foundation\holdCursorJava.out
A java\testing\org\apache\derbyTesting\functionTests\master\j9_foundation\users.out

New masters for difference in behaviour in J2ME

M java\testing\org\apache\derbyTesting\functionTests\suites\jdk14.runall

Remove store/bootlock.java which is also part of store suite.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370059 13f79535-47bb-0310-9956-ffa450edef68"
b9a2c3686423ebca13c579cfd98739bce4824a31,"Fix for DERBY-810, contributed by Oystein Grovlen

Removes spurious diffs for RecoveryAfterBackup test by testing for shutdown
SQL State rather than printing a stack trace.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370195 13f79535-47bb-0310-9956-ffa450edef68"
59126251a70b2ccb7cd005d23431d42ae0c9e4d7,"DERBY-808: PreparedStatements could take longer to execute than equivalent statements, because of incorect code in search clause transitive closure method.

Handle the case of ParameterNodes, in addition to ConstantNodes on the rightside.

Submitted by Satheesh Bandaram(satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370217 13f79535-47bb-0310-9956-ffa450edef68"
9f5bc901b1e5f06637ebdffce8d9c6728455dc1e,"DERBY-823:  This minor patch changes a few for loops into equivalent uses 
of System.arraycopy() and java.util.Arrays.fill().

Contributed by Anders Morken


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370240 13f79535-47bb-0310-9956-ffa450edef68"
c700973f7bc62bf0d3137ff3e78851e6d4939f6a,"DERBY-649: Push single table predicates that can be pushed into underlying SELECTs of a union.

Merging from 10.1 branch. It is possible to further improve the patch to handle more cases for this optimization.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370247 13f79535-47bb-0310-9956-ffa450edef68"
80916514065fe1ad55839dc6d5d3a154a1943e03,"DERBY-772: Optimize IN predicates on derived tables with UNIONs by pushing
them into underlying select statements.

Add some test cases to show index being used. Will also add more tests in
another pending change to improve finding matching column.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370254 13f79535-47bb-0310-9956-ffa450edef68"
64b55c2622cf2180864d3b4964b9250f9c407b6e,"DERBY-210 reverting change until jdk1.5 lang/updatableResultset.java diff can be resolved



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370275 13f79535-47bb-0310-9956-ffa450edef68"
d0bd811d4d8ca6bf197b11917301e3bd2c8d111c,"DERBY-398 - Rename wisconsin support file to wisc_setup.sql.
Fix issue with  lang/wisconsin.java test in derbyall

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370342 13f79535-47bb-0310-9956-ffa450edef68"
402725c7d705543fe537babc1575d33a5667774b,"DERBY-239, most recent patch committed on behalf of Suresh Thalamati

This patch addresses the issues raised by ¬∑¬πystein in his review of previous
online backup patches 3-6. 

- changed the backup procedures names with ONLINE to NOWAIT 
- removed the transaction Idle restriction to run backup procedures.
- removed implicit commit/rollbacks.
- Added a new lesser impact restriction, which only disallows backup call only if
  there are unlogged operations executed in the same transaction before the backup. 
  - Removed casting to  RawTransaction. 
  - fixed Names and Comments. 
  - Enhanced the tests with addional test cases suggested by  ¬∑¬πystein.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370530 13f79535-47bb-0310-9956-ffa450edef68"
7f99d2e3f3aaef0e3d87cd18c832d99370aaa1ac,"DERBY-615 Modify the tests' policy file to grant permissions to all files and sub-directories under
the extin, extout and extinout directories. Allows the iepnegativetests tests to pass with jars.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370546 13f79535-47bb-0310-9956-ffa450edef68"
44b283d9a50e26f91e54cc2236977b2d4f37e082,"DERBY-615 Update testinh README file to match current state with respect to the noSecurityManager property.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370549 13f79535-47bb-0310-9956-ffa450edef68"
858d84111a8e696d85b8d710ff4fa2e251605821,"DERBY-467 Add intial framework for security checking of returned JDBC objects to
try and catch code that allows complete access to internal Derby objects, such
as the page cache.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370570 13f79535-47bb-0310-9956-ffa450edef68"
2a6e45926e202aeffafec858d16d2f7b71d0fbfd,"DERBY-818 Remove the object allocation and reseting overhead for updateable ResultSet information
when the ResultSet is read-only. Similar changes for the stream single fetch (getXXXStream) logic.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370574 13f79535-47bb-0310-9956-ffa450edef68"
e535dc087c6e53e89e3607f751d9f8279f5880c2,"DERBY-499: Add missed masters from previous checkin of bug499_jdk13_rev2.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370583 13f79535-47bb-0310-9956-ffa450edef68"
7162519d2798c210b33f17fec960f79b6cb74fad,"DERBY-825 writeSQLCAGRP() should use byte[] constants instead of Strings where feasible. submitted by Dyre Tjeldvoll

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370806 13f79535-47bb-0310-9956-ffa450edef68"
daecc5dd255acce2a911c73ebea070753c5f90f4,"DERBY-838: Establish an internationalization framework for the network
client.

Added a new shared directory and shared packages.  These shared packages
are only used by the derbyclient.jar until we establish a shared
code framework
M    tools/ant/properties/dirs.properties
A    java/shared
A    java/shared/org
A    java/shared/org/apache
A    java/shared/org/apache/derby
A    java/shared/org/apache/derby/shared
A    java/shared/org/apache/derby/shared/common
A    java/shared/org/apache/derby/shared/common/i18n
AM   java/shared/org/apache/derby/shared/common/i18n/MessageUtil.java
A    java/shared/org/apache/derby/shared/common/error
AM   java/shared/org/apache/derby/shared/common/error/ExceptionSeverity.java
AM   java/shared/org/apache/derby/shared/common/error/ExceptionUtil.java
A    java/shared/org/apache/derby/shared/common/info
AM   java/shared/org/apache/derby/shared/common/info/JVMInfo.java
A    java/shared/org/apache/derby/shared/common/reference
A    java/shared/org/apache/derby/shared/common/reference/SQLState.java
A    java/shared/org/apache/derby/shared/common/reference/JDBC20Translation.java
A    java/shared/org/apache/derby/shared/common/reference/JDBC30Translation.java
AM   java/shared/org/apache/derby/shared/package.html
AM   java/shared/build.xml
M    build.xml

Modified splitmessages to copy messages shared with the client over
to client-messages.properties
M    java/build/org/apache/derbyBuild/splitmessages.java
M    java/engine/org/apache/derby/loc/build.xml

Modified SQLException to have new constructors that take a message 
id
M    java/client/org/apache/derby/client/am/SqlException.java
AM   java/client/org/apache/derby/client/am/MessageId.java

Relocated some reference classes over to the shared framework
D    java/engine/org/apache/derby/iapi/reference/SQLState.java
D    java/engine/org/apache/derby/iapi/reference/JDBC20Translation.java
D    java/engine/org/apache/derby/iapi/reference/JDBC30Translation.java
M    java/engine/org/apache/derby/iapi/error/ExceptionSeverity.java

Added client-specific messages
A    java/client/org/apache/derby/loc
AM   java/client/org/apache/derby/loc/client-messages_en.properties
AM   java/client/org/apache/derby/loc/client-messages.properties

Internationalized some client classes
M    java/client/org/apache/derby/client/am/Blob.java
M    java/client/org/apache/derby/client/am/CallableStatement.java

Fixed test output to handle new messages/SQLStates
M    java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/blobclob4BLOB.out


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370815 13f79535-47bb-0310-9956-ffa450edef68"
f3d31f2929c7a9cad6a2416a1f2e3e293ffe63d4,"DERBY-838: Added files missing to original checkin

Apologies for the broken build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370864 13f79535-47bb-0310-9956-ffa450edef68"
f28de925cd711b13ffec16ce579464411c8818fe,"DERBY-838: refinement - get rid of dash in ""client-messages"" to be
consistent with names of other properties files in Derby


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370880 13f79535-47bb-0310-9956-ffa450edef68"
8a85c3a98e58c0ad4f67cec2b852a615729fc11b,"DERBY-838: Slight typo in properties file name


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370881 13f79535-47bb-0310-9956-ffa450edef68"
a7f4ff624606ed219b47bbbda85713517bab9f2f,"DERBY-483 Set correct property name derby.database.classpath name in X0X07 exception.
Patch contributed by Anders Morken andersmo@stud.ntnu.no


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370884 13f79535-47bb-0310-9956-ffa450edef68"
6a5edfc0a2993f24d26a051e8e2067c4f92dd45d,"DERBY-783: Enhance ALTER TABLE to support RESTART option to enable setting of identity column start value.

Submitted by Mamta Satoor (msatoor@gmail.com)

Here is more info from the contributor:

I have attached a review package for this feature to the JIRA entry. Following is a brief description of the changes involved.

Changed sqlgrammar.jj to add parser support for ALTER TABLE <tablename> ALTER <columnName> RESTART WITH integer-constant
Also, added another element to the array which keeps track of autoincrement information in the parser. This 4th element will record if the autoincrement column is getting added or it is getting altered for INCREMENT BY value change or it is getting altered for RESTART WITH value change. This information is required later in the compile and execute phase.

In the compile phase, this information is used to see if a user is trying to sneak in a value of 0 for INCREMENT BY. A value of 0 for INCREMENT BY should be caught at the time of autoincrement column add or at the time of autoincrement column alter to change the INCREMENT BY value. At the time of autoincrement column alter to change the RESTART WITH value,  the INCREMENT BY value should not be checked. This is done in ColumnDefinitionNode.java. TableElementList generates ColumnInfo which needs to keep track of autoincrement column change status from ColumnDefinitionNode. This infromation in ColumnInfo will be used at execute time.

In the execute phase, we need to know which columns of SYSCOLUMNS table need to be changed for an ALTER TABLE command on the autoincrement column. In the past, we only allowed to change the INCREMENT BY criteria of an autoincrement column but with this feature, it is possible for a user to change the start with value of autoincrement column and leave the INCREMENT BY unchanged. This autoincrement column change information is passed to the execute phase via ColumnInfo.

In order to provide this distinction between ALTER BY..INCREMENT BY.. and ALTER BY..RESTART WITH.., I have had to add a variable in ColumnDefinitionNode.java, ColumnInfo.java and ColumnDescriptor.java. The value of the variable in each of these classes depend on what parser recorded for the autoincrement column status ie adding an autoincrement column/changing INCREMENT BY of the autoincrement column/changing RESTART WITH of the autoincrement column.

Hope this information along with the comments in the code will help in the code review. Please let me know if you have any comments.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370885 13f79535-47bb-0310-9956-ffa450edef68"
748981346882395d2809d458ea79196ed0358e4b,"Add some additional test cases to metadata.java test to resolve some
result set meta data nits with DECIMAL and DOUBLE types.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370886 13f79535-47bb-0310-9956-ffa450edef68"
a00cd2fc205b1ab8760a0496e5cb5c98852497c3,"DERBY-804: Disable floattypes.sql for Sun and IBM 1.3.1

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370932 13f79535-47bb-0310-9956-ffa450edef68"
62721e65edb55accc10e1f13c44b8a23ed9ca580,"DERBY-757

Now that this routine can be called while concurrently with XA transactions
being created and committed, checks have to be made to make sure the object
being searched for does not go null while we are looking at it.  The search
is for existing xacts, so skipping when we find a null is fine.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370967 13f79535-47bb-0310-9956-ffa450edef68"
59b3eae15b87db48a75165866dc069746d8bc41d,"DERBY-756: Close scan controller in DistinctScalarAggregateResultSet to avoid memory leak.

Submitted by Manish Khettry (manish_khettry@yahoo.com)

Here is more info from the contributor:
It looks like the scan controller created in DistinctScalarAggregateResultSet is never closed. This causes the scanController instance variable in RAMTransaction to continue to grow with each open/close. 

Shouldn't DistinctScalarAggregateRS implement a close or a finish method (not sure what the difference is) and close the scan controller there.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@370978 13f79535-47bb-0310-9956-ffa450edef68"
fb57a7b21ea904cc7cf6057f95a2e9d193f2493d,"DERBY-23 Patch (DERBY-23-npe.diff) that addresses the NullPointerException messages from rawStoreDaemon threads we. Submitted by Knut Anders Hatlen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@371506 13f79535-47bb-0310-9956-ffa450edef68"
d5061702c7644fa98090bdc4c4143298fef463df,"DERBY-852 - Convert client.am.SqlException to no longer extend
java.sql.SQLException.

The general approach here was to have all public methods throw
SQLException, and all internal methods throw SqlException.  In
some cases internal methods call public methods, and in those cases
I wrap the thrown SQLException into a SqlException for future use.
Otherwise the chain of exception dependencies would have caused almost
all internal methods to throw SQLException


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@371561 13f79535-47bb-0310-9956-ffa450edef68"
1adb9d7f1ea271f18a90a16b0fb2c5ff7ceab6a1,"DERBY-125 Network Server can send DSS greater than 32K to client, which breaks DRDA protocol.

Fixes off by one error during segment shifting.
Fixes continuation flag handling to not overwrite the length.

See changes.html attached to DERBY-125 for more info

Contributed by Bryan Pendleton



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@371603 13f79535-47bb-0310-9956-ffa450edef68"
951d98a6a118f4923675189d7444ba1c1d77df71,"changing lock timeout and lock deadlock default times to speed up the
test.  On my machine it cut the time for the st_derby715.java test to 
run in half.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@371611 13f79535-47bb-0310-9956-ffa450edef68"
9ce0e0f8172d2784148ffe6995a3f2d2cd946c20,"DERBY-615 Enable the T_Cipher* and T_SortController tests under the SecurityManager.
Add comments (bug numbers) for why lang.dcl and jdbcapi/secureUsers1 are not runnable
under the SecurityManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@371664 13f79535-47bb-0310-9956-ffa450edef68"
6a080748c021f1ef6661ca7f1280b4baf5c8fb5d,"DERBY-615 Remove noSecurityManager=false and old comment for T_SortController


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@371714 13f79535-47bb-0310-9956-ffa450edef68"
3d49de1209206efd559de5d2ad8edf921c6df883,"DERBY-783: Follow up patch to previous checkin for this bug. Mark RESTART as a nonReservedWord.

Submitted by Mamta Satoor (msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@371762 13f79535-47bb-0310-9956-ffa450edef68"
5ab147fcb7f299a8e3bfc99edcc8c199031fe154,"DERBY-615 Enable some tests in derbynet to run with the security manager
with derby's client and identify those others which cannot run with a security manager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@371800 13f79535-47bb-0310-9956-ffa450edef68"
375d4a0157eea9aa1ffe1edbe8a4535839f38511,"DERBY-815 Prevent unneeded object creation and excessive decoding in parseSQLDTA_work()
Submitted by Dyre Tjeldvoll


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@371897 13f79535-47bb-0310-9956-ffa450edef68"
dee565f1df2e05104470bf132d91019b011cd810,"DERBY-615 Fix derbynet/NSinSameJVM when running of the classes directory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372034 13f79535-47bb-0310-9956-ffa450edef68"
661256412c4b75391b6e451a45b02a54d276a4f6,"DERBY-400: Fixed the SQLState for some of the new client messages
to better match what is required by SQL2003


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372240 13f79535-47bb-0310-9956-ffa450edef68"
ffd4e9bd1c3b9198ba3efcb14c1b79104c16db59,"Fix for DERBY-665, committed on behalf of Suresh Thalamati.

Comments from submitter:
 This patch removes the unused backup functions with File as parameter, 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372263 13f79535-47bb-0310-9956-ffa450edef68"
e4b24389126da13c146592704e8a31c9e49dadcb,"DERBY-400: Fixed the SQL states for warnings so they are compliant with
SQL2003 -- can't use SQL states that are reserved for standard
SQL States.

Also refactored the two messages for JDBC2 not supported and JDBC3
not supported into a single message.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372368 13f79535-47bb-0310-9956-ffa450edef68"
1b54e9ee1ca7fa3d4ed6afdde724ebbefe9bd7af,"DERBY-783: Follow up to previous checkins for this bug. Set START value in catalog to the RESTART value specified in ALTER TABLE statement.

Submitted by Mamta Satoor (msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372660 13f79535-47bb-0310-9956-ffa450edef68"
93ff8cc857be34bc9762f14a063c95561fa9da96,"DERBY-766 Modify ResultSetFactory getXXXResultSet methods to not pass in an
Activation if it is available through a passed in source ResultSet. Reduces the
amount of code generated for queries.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372692 13f79535-47bb-0310-9956-ffa450edef68"
ecd2625d68bce823a0d2663a24561bf7950904cf,"DERBY-398 enable tests for J2ME
Attaching a patch 'parameterMapping.diff' which changes the tests jdbcapi/parameterMapping.java and lang/updatableResultSet.java to run in J2ME/CDC/FP. Changes are:

* In parameterMapping.java, SQL types DECIMAL and NUMERIC are mapped to the String class in B3_GET_OBJECT for J2ME.
* When changing the tests, I have covered testing of SQL DECIMAL type. This is tested using wrapper methods in BigDecimalHandler which use get/setString methods for J2ME. I have not used the wrapper in cases where DECIMAL type is already being tested with get/set/updateXXX methods of other JDBC types.
* The tests work the same way as before in non-J2ME environments.
* In JSR169, get/setUnicodeStream methods are not present. NoSuchMethodError exception is used to handle these cases.
* New masters are needed for the tests. These are to account for absence of BigDecimal class in J2ME and methods which are not present in JSR169.

Ran both the changed tests using Sun JDK1.4.2 (all frameworks) and IBM WCTME 5.7 j9_foundation. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372708 13f79535-47bb-0310-9956-ffa450edef68"
974609a65b1c41d30793ce9d4ec7126ff9bfff37,"DERBY-491 Protocol exception when Network Server
 tries to return ~32K of data or greater in a result set for a Java stored
 procedure.
Submitted by Bryan Pendleton


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372871 13f79535-47bb-0310-9956-ffa450edef68"
7680ab7350a3437bdce6c1d5a6fe9afa29e2a946,"DERBY-860: Internationalized SqlWarning and its messages.  I also fixed
the way SqlException.setNextException(), it was incorrect.  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372923 13f79535-47bb-0310-9956-ffa450edef68"
8b4c5e14f402bd5f6e4c0135f51f40fc4b95a4f4,"DERBY-766 Add some comments to largeCodeGen.java indicating what passes
with reference to an svn revision number. Made all the data fetching/execution switchable.
Note this is still not run as a regular test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@372934 13f79535-47bb-0310-9956-ffa450edef68"
fec6b7bef6c71a6098d76cab8ea4979dda93b67b,"DERBY-885 Disable running with the security manager for useProcess=false
for j9 vms. Causes some unexpected execption that needs to be investigated
and halts test runs. This is a workaround that will cause dml160 to fail
with j9 vms, as it checks to see a security manager is installed.
Will be investigating, but this will allow derbyall runs to complete.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373011 13f79535-47bb-0310-9956-ffa450edef68"
59d4d65f667323022b3a46a917af572d88b57139,"DERBY-859: Updated test masters for IBM JDK 1.5

Committed for Manjula Kutty <manjula.kutty@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373038 13f79535-47bb-0310-9956-ffa450edef68"
a5b55db133373c1e84b0a3202a0b58384a79865c,"DERBY-882: Set Nullability of new typeDescriptor from previous typeDescriptor following changing of varchar column length using ALTER TABLE.

Merged from 10.1 branch.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373067 13f79535-47bb-0310-9956-ffa450edef68"
22ccbb42881ace009c049999984e8c2d6e1fedae,"DERBY-395  Server-side ""trace on"" and ""trace off"" commands do not appear to be working correctly.

Contributed by Bryan Pendleton

Attached is a proposed fix. derbyall passed. I put a small comment in the code. I didn't add any new tests, which is unfortunate, but I didn't have any brilliant inside about an easy way to add such tests. Testing with the server tracing is already somewhat of a PITA because the server tracing interacts poorly with things like the security manager.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373291 13f79535-47bb-0310-9956-ffa450edef68"
2648e942c7a659b2e79689218c426e52e5bcde2b,"DERBY-599
committing on behalf of: Sunitha Kambhampati 

Problem:
setBlob(i,blob) does not set the length of the stream in the blob and but instead passes a -1 for stream length. 
During the normalization process, setBlob.normalize(DTD,DVD) calls SQLBlob.setWith. 
The setWidth is called in order to compare the length of the blob value to the maximum width of the column and to throw a truncation error in case the value wont fit into the column.  setWidth() calls SQLBinary.getLength().  If tvalue is a stream, the getLength() method checks for streamLength value and if the streamLength value is set to -1 (ie unknown) , it calls getBytes().length() which calls getValue() and this is where the entire stream is getting materialized.  

This patch fixes DERBY-599 so using setBlob call, will not  materialize the entire blob into memory. 
- changes to setBlob to pass the length of the blob value instead of -1.  The length of the blob value passed into setBlob can be obtained by calling Blob.length() which returns a long.
- move the -ve length check from setBinaryStream to setBinaryStreamInternal since setBlob will not pass a -1 for length.
- change setBinaryStreamInternal to take the length parameter as a long instead of int.  
- Currently Derby allows max value of 2G-1 ( Max value of an int) for blobs. Add check to ensure that if a stream with a length > max value of int is passed, an error is thrown. Use an existing error message 
'The resulting value is outside the range for the data type {0}'



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373356 13f79535-47bb-0310-9956-ffa450edef68"
bf643fd0693dc0aeaabbaab709aede76e882f19f,"Derby-239, onlinebackup_8.diff patch
committed on behalf of Suresh Thalamati

This patch addresses the improvements suggested by Oystein in his review of the
first online backup patch(onlinebackup_1.diff) and also resolved some more
online backup issues.

-- fixed comments and moved a duplicate code in write page and the backup of
container into a separate method.

fixes with this patch:

-- backup of container was using the same encryption buffer as container
read/writes, this requires backup of the container and read/writes are
synchronized to avoid corrupting the encryption buffer. This patch modified
the backup of container code to use it's own temporary encryption
buffer to avoid the buffer corruption.

-- added code to prevent truncation of log during checkpoint and disabling of
log archival does not delete log files that are yet to be copied
into the backup, if backup is running in parallel.

-- In-place compress is blocked during backup and vice-versa, until the
compress nested transaction commits. This change is needed because compress
does a special checkpoint to avoid redo on the truncated pages. If backup is
running in parallel, the checkpoint backup is based on can be earlier than
checkpoint done by the truncate operation. Without the blocking during
restore from backup, recovery will fail if it needs redo ant log records on
the truncated pages. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373380 13f79535-47bb-0310-9956-ffa450edef68"
2a0e1a2b8dcd721241140285a2dcea66e5941be5,"DERBY-475 Switch the new maths functions to use java.lang.StrictMath to ensure
consistent results across Java Virtual Machines. Added a natual log function
LOG which is identical to LN() but will aid DERBY-592, adding a match for 
the escaped function {fn log(value)}


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373569 13f79535-47bb-0310-9956-ffa450edef68"
efce9b24b8e11b93a593570654fb77bb7356059b,"Minor cleanup for CallStatementNode, remove unused field methodName and unused method getMethodCallNode.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373580 13f79535-47bb-0310-9956-ffa450edef68"
3782e1c514ad326ec26dcd48e4ff5dfaf7989a6f,"DERBY-893: Contributed by Rick Hillegas.

This fixes the build problems in optional jdbc4 classes introduced by the SQLException rototill.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373606 13f79535-47bb-0310-9956-ffa450edef68"
0f945204d9956269e8ac5f2bcbacec1635b4b7aa,"Add largeCodeGen test to largeData suite

Since there are known failures in the test, exception traces are 
suppressed by default to avoid diffs between runs, jvms etc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373644 13f79535-47bb-0310-9956-ffa450edef68"
be3e2aa5ccf6ea50a9c74f7ff645cdbf906697df,"a few javadoc fixes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373752 13f79535-47bb-0310-9956-ffa450edef68"
1cf4101af6a63e1e116d840ecae50749b8703a38,"DERBY-592 Provide a mechanism to map JDBC escape functions directly onto
builtin functions in the SYSFUN schema. Escape functions added are:
ACOS, ASIN, ATAN, COS, SIN, TAN, DEGREES, RADIANS, EXP, LOG, CEILING, FLOOR


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@373948 13f79535-47bb-0310-9956-ffa450edef68"
c265330a639147e758f2ea0c15b1891ba973a864,"Edits to maven project files after deploying 10.1.2.1 to maven repo.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374009 13f79535-47bb-0310-9956-ffa450edef68"
803c7d07414dbdfffdd7937a8ad18dde6012c220,"DERBY-815 Patch 371897 revrted

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374029 13f79535-47bb-0310-9956-ffa450edef68"
1bf5390b250f1c14ef8172601fdcb5c55fc931bb,"Cleanup of CallStatementNode.java, since CALL statements are simple, taking
only parameters or constants as arguments, the node cna be simplified not
to create and handle lists for subqueries and aggregates that will always be empty.
Improved some of the comments in the file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374085 13f79535-47bb-0310-9956-ffa450edef68"
9f46f67b7c1362c96a6f4b764853f11c34c91f39,"DERBY-680 (partial) Commit part of patch related to modifying ejbql test as it is
separate from the the issue of changing ij.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374144 13f79535-47bb-0310-9956-ffa450edef68"
1d22c17ea8608ef23fedc1b8b1a0a4d3c6cf33ed,"DERBY-874 : Contributed by Rick Hillegas.  Adds comments to DerbyJUnitTest,
explaining usage and why in some cases exceptions are swallowed



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374146 13f79535-47bb-0310-9956-ffa450edef68"
6b509650698ec67d4ddc5cbae50008c6af9390a0,"DERBY-862: Fix javadoc errors in JDK 1.6 build.  Submitted by Rick
Hillegas


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374198 13f79535-47bb-0310-9956-ffa450edef68"
4ac6a1c6184c6e91147cf728fcaa55548dfb9788,"DERBY-841: Internationalize message text from GetResourceBundleAction
to ParameterMetadata in org.apache.derby.client.am


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374203 13f79535-47bb-0310-9956-ffa450edef68"
491c5b6e92688d7480de337b81cbc1d45e56451e,"DERBY-877 zOS - with DerbyClient getDate(#) fails with IllegalArgumentException - unsupported date format - resultset.java

The patch fixes issues with getString, getTimeStamp, getDate and getTime on TIMESTAMP, DATE and TIME columns when the client JVM encoding does not match the server encoding for the characters being evaluated in DateTime.java methods

- Changes the following methods in DateTime.java to take encoding parameter and create string based on encoding.
dateBytesToDate, timeBytesToTime, timeBytesToTimeStamp, dateBytesToTimeStamp, timestampBytesToDate, timestampBytesToTime

- Changes calling code to pass column encoding and throw SQLExceptions for UnsupportedEncoding exceptions if thrown from the methods above.

Tests: derbyall passed as did the repro attached to this issue on Windows with Sun JDK 1.5 . Verified on zOS



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374271 13f79535-47bb-0310-9956-ffa450edef68"
b16ad1f7c7df6a9d826c3eed3a034825835aa312,"DERBY-398   J2ME Testing
 
* Removes four j9_foundation masters. Instead of printing the url returned by call to DatabaseMetaData.getURL, the tests now compare the output and print pass/fail to the master.
* Added a method compareURL to TestUtil which compares with expected URL based on framework.
* Modified master file for LOBTest
* Modified properties files for network server suites to add runwithfoundation=false. Unlike test properties, they only had runwithj9=false.

Contributed by Deepa Remesh 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374282 13f79535-47bb-0310-9956-ffa450edef68"
368cec87dd9ac4a53479a315e1e2111c750690ae,"DERBY-398 remove a few more j9 masters  missing from last commit

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374432 13f79535-47bb-0310-9956-ffa450edef68"
d3aad54a82893663b7360979177116f15e481fe6,"DERBY-683 Use correct encoding for ClobOutputStream on client

Change to use US-ASCII instead of jvm default encoding



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374469 13f79535-47bb-0310-9956-ffa450edef68"
b7e5031d855a709e8311b0c1178586dd55b8233c,"DERBY-475 DERBY-592 Expand the builtin function table to handle zero parameter
functions and add the functions PI and LOG10 as builting and JDBC escaped functions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374471 13f79535-47bb-0310-9956-ffa450edef68"
7c8a189d817c7fe7a1d82ff0ec4bada54bc67a33,"DERBY-904: Fixed master output for jdk13 tests to represent new exception
output, now that we include the exception cause in the message text.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374543 13f79535-47bb-0310-9956-ffa450edef68"
a3f3a183ff7e52bc11ed434a36ed28d9be2a4393,"DERBY-906: Fixed output to reflect that in jdk13 we are now appending
the causing exception class and message since jdk13 doesn't support
exception chaining


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374548 13f79535-47bb-0310-9956-ffa450edef68"
047f0c50c2bd59fe02caf79c26b365095825a157,"DERBY-905 - Added jdk13-specific output file because now in JDK 1.3 we
include the causing exception's class and message text as part of the
overall exception message text (since jdk13 does not support exception
chaining)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374550 13f79535-47bb-0310-9956-ffa450edef68"
ae5c2ef59b8329abc1f0bdf762d95106620f8af2,"Test drive commit privilege

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374553 13f79535-47bb-0310-9956-ffa450edef68"
b69e1e8fd6781da548b1cb9b29db3292872315ee,"DERBY-877 second patch to fix javadoc warnings



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374585 13f79535-47bb-0310-9956-ffa450edef68"
afb141e29452075051af7200ee829db51ac5ec6c,"DERBY-891 Change db2j and csinfo properties to have consistent derbyTesting prefix.
Contributed by Myrna van Lunteren <m.v.lunteren@gmail.com>

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374683 13f79535-47bb-0310-9956-ffa450edef68"
e33484765c23c04dc1811aba7aed6aa024215111,"DERBY-856 modify EmbedPreparedStatement.setCharacterStreamInternal to take a long
for the length, and perform the > max int check in the method.

Contributed by V.Narayanan <V.Narayanan@Sun.COM>

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374696 13f79535-47bb-0310-9956-ffa450edef68"
9e190094091cf18e3e9150aa5ee8ae309e2fad24,"Scrub javadoc error in SystemProcedures.java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374713 13f79535-47bb-0310-9956-ffa450edef68"
7786d362e59b75fe0fb363e718daeb02e811db20,"DERBY-906, DERBY-905, DERBY-904.  Fixed output files so that the
tests work on jdk14 as well as jdk13.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374726 13f79535-47bb-0310-9956-ffa450edef68"
af01856baf423bc54bba206e20a69b491965d33b,"DERBY-921 Support 32bit branch offsets for conditional logic in generated code.
Rewrite IF instructions to use a GOTO_W instruction when the branch offset is
greater than the 32767 allowed by the IF instructions. Replace GOTO instructions
with GOTO_W instruction when the branch offset is greater than the 32767.
Full details are in the Conditional.java file.

Write all instructions logically through CodeChunk methods containing the
code byte array knowledge within the CodeChunk class. Replaces the previous
direct modification of the code byte array by the Conditional class.

Increases number of logical operators to 800 for the test query in large code gen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374778 13f79535-47bb-0310-9956-ffa450edef68"
3313ce9ab829b326cb8fca9bdefe37ffe5bf8a99,"DERBY-921 Missing file from last commit for this bug.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374785 13f79535-47bb-0310-9956-ffa450edef68"
8f8cbffc149d7642b4b9cf82e34f8f67401be60d,"DERBY-922: Fix chaining of exceptions so the underlying client
SqlException/SqlWarning context is maintained and is available
for debugging.  

derbynetclientmats passes on JDK 1.4


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@374809 13f79535-47bb-0310-9956-ffa450edef68"
b1f210304f4aed467dfdb1ad4b9cb4fc70acab12,"Add public key for Rick Hillegas

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375312 13f79535-47bb-0310-9956-ffa450edef68"
0380d9cbe28e7a769d3ad62b01523a48bdbf154f,"DERBY-888
initial partial checkin of allocation improvement.  This checkin changes
the default of the system to not sync on allocation.  All tests pass, 
and hand testing of allocation encountering bad pages during redo worked.
Also adds back in development only path to be able to turn on and off
various sync options under an insane build, to compare affect of log sync,
vs. allocation sync, vs. checkpoint sync.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375583 13f79535-47bb-0310-9956-ffa450edef68"
a7a9dd727dc3ae917b3eb162a00077b56a06f660,"DERBY-100 Add support for insert functionality using BC 2.0 updatable resultset apis. Submitted by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375635 13f79535-47bb-0310-9956-ffa450edef68"
5ddeeae1485c03a4c2cade1f4207caacec45e3f5,"DERBY-817: Improvements to remote host testing

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375698 13f79535-47bb-0310-9956-ffa450edef68"
5bd651f5c8e54c47df499eea1084145e16460b22,"DERBY-387: Fix Simple Network Client sample to work correctly by fixing
database name.  Contributed by Rajesh Kartha


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375715 13f79535-47bb-0310-9956-ffa450edef68"
b33241b0349f952915c1c868ab13304587b47720,"DERBY-885, committing on behalf of: Deepa Remesh

Ataching a patch 'derby-885.diff' which adds new j9 masters for nist/dml160.sql test. With this patch, I ran nist suite with j9 vms and Sun JDK 1.4.2.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375717 13f79535-47bb-0310-9956-ffa450edef68"
6700e1956e0336d0763f298db1f6b55b0964be03,"DERBY-750, committed on behalf of Suresh Thalamati

 Problem was backup was trying to a read a pages from a container before the first
 allocation page for it is created with a invalid page number. First allocation page
 number is invalid only when first page is not created.

 The reason backup sees containers in that state, backup finds the containers to
 backup by scanning through the seg0 list files and gets access to the container
 conglomerate cache, cache returns the handles after the container file is
 created.

 Fix is NOT to backup containers whose first allocation page not yet created. It is
 safe to not backup containers in such case instead of waiting for container
 creation to complete, redo of the log on restore will create them.

 Renabled the test case that hit this problem in OnlineBackupTest1.java , which was commented
 earlier. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375775 13f79535-47bb-0310-9956-ffa450edef68"
0b3703c0219785b0a01c7da24126f3a934cc1a2f,"DERBY-932 - Fixed the way JDK 1.6 files are built so we don't use <exec>
but <javac> with fork=""yes"".  

Also updated BUILDING.txt to include instructions on how to build with
JDK 1.6


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375777 13f79535-47bb-0310-9956-ffa450edef68"
7c40b2eb816d7b4ffb868e9cba8cae7f6e2ecfd8,"Cleanup LogChecksum tests to put derby.subSubProtocol properties in the test_derby.properties
file and not the _app properties file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375784 13f79535-47bb-0310-9956-ffa450edef68"
2ea6ce7ff874994208ff21fb8d8a2c6c4e53099b,"DERBY-933: Fix output of Stream.java for JDK 1.3


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375801 13f79535-47bb-0310-9956-ffa450edef68"
fe2476a91aaad80518b5bc70f8cfd9a2be6b5b24,"DERBY-875: Use nested filesets to improve Javadoc generation.

Original patch contributed by Bryan Pendleton <bpendleton@amberpoint.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375810 13f79535-47bb-0310-9956-ffa450edef68"
2b17e4dae70a020e9080e595168375fe1b2dd61a,"DERBY-875: Use nested filesets to improve javadoc generation. This patch moves
the publishedapi javadoc set to using nested filesets.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375815 13f79535-47bb-0310-9956-ffa450edef68"
b6c8df18c33dcbd170819d49b36380698f4764d6,"DERBY-927 (partial) Rename PersistentServiceImpl to StorageFactoryService to correctly
represent its purpose. Remove the partial ReadOnly implementation of PersistentService
as it is never used. It's functionality migrated into StorageFactoryService as read-only
StorageFactorys when the StorageFactory api was implemented.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375816 13f79535-47bb-0310-9956-ffa450edef68"
465938d96a53f0d320720e1a011923cebe9f4a4b,"DERBY-861

issue is that  just prior to this query the test deletes and commits some rows.  In one phase of this locking test
the table is configured to have one row per page.  In this case as soon as the delete commits, the post commit background
thread can be scheduled to reclaim the deleted rows.  This scheduling is completely at the discretion of a number of factors including: OS/JVM/processor availbility .  To get reproducible results for this query I added a wait after the delete.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375818 13f79535-47bb-0310-9956-ffa450edef68"
218eaf0a0ed61d14c14a063246b81209e74e4a21,"Use a relative path for the link reference. This prevents errors on Windows
that the link reference is an invalid URL.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375829 13f79535-47bb-0310-9956-ffa450edef68"
af7509e718d3067acaf9505ef35c205b997f3333,"Swap the use of Math.ceil and Math.floor to round the result percentages.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375845 13f79535-47bb-0310-9956-ffa450edef68"
f225091ffb9b8fc94f18e1591a1506773b6bcd23,"DERBY-628: Allow setting a CLOB to NULL using any character types for setNull.

Submitted by Satheesh Bandaram(satheesh@sourcery.org)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375877 13f79535-47bb-0310-9956-ffa450edef68"
1e802399ab513f09be710a7173968c375687a588,"DERBY-927 Fix jar build broken by previous commit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@375975 13f79535-47bb-0310-9956-ffa450edef68"
d408abbe421b18ddf925b8e95572b1c97ea35400,"DERBY-932 - removed need for jdk16.java variable, and fixed ordering
of section 2.2 in BUILDING.txt in response to Dan's comment


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376008 13f79535-47bb-0310-9956-ffa450edef68"
d7d64429b9b7c2d3daf3adfb4d4d1a9a5f157931,"Reaname savepointJdbc30 to savepointJdbc30_JSR169 in preparation for additional test for XA connections with DERBY-898



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376016 13f79535-47bb-0310-9956-ffa450edef68"
00978657083077da8f3392b00e1c7d7a06ff0f13,"DERBY-927 (partial) Clarify purpose of stripping derby.* properties from
the set of JDBC attributes passed into a connection request.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376034 13f79535-47bb-0310-9956-ffa450edef68"
6499dbd3ac627e9498d75c553d1963fe26cf3a28,"Use Derby client URL in dblook usage message, rather than JCC driver's URL.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376142 13f79535-47bb-0310-9956-ffa450edef68"
6f5654ccfd5d67d1ab9072846c2590046f478f5d,"DERBY-898 setAutoCommit(false) is not working properly with connections objtained with ClientXADataSource.

- Changes server side connection for network server XA to autocommit false. Even when the client has autocommit on, the server side connection should be autocommit false and let the client drive the commits.

- Adds connections obtained from an XADataSource to the savepointJdbc30_XA test to verify that autocommit is being set properly and also verify that DERBY-899 (a dup of this issue) is fixed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376296 13f79535-47bb-0310-9956-ffa450edef68"
4693ddf179d853b222e3274400ff208cb4607f0b,"Update master file, following previous checkin for dblook usage change.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376371 13f79535-47bb-0310-9956-ffa450edef68"
1b2982420e71255813910990517125e095380818,"DERBY-541: Do not apply soft upgrade changes if database is readOnly.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376372 13f79535-47bb-0310-9956-ffa450edef68"
f57b07d222578adfce1429598971ea579242f2f3,"DERBY-888

Add specific errors for failure while doing initpage redo recovery attempt.
Remove ""loadTran"" references, that term isn't really useful to current code.
All cases now apply to redo recovery.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376502 13f79535-47bb-0310-9956-ffa450edef68"
6ed6c3a8924fbcefb790abad27459f57e3e6382d,"DERBY-840: Fixed bug where I skipped build of jdbc4 tests


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376770 13f79535-47bb-0310-9956-ffa450edef68"
0ea00b348837f1edaf82ccec982f120bfca6ab1e,"DERBY-635: Get exception message from PrivilegedActionException after getting real exception.

Submitted by John C Landers (jcl@pc-intouch.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376777 13f79535-47bb-0310-9956-ffa450edef68"
d59cfb456c1dd3a22a48476290792c923313bf4a,"javadoc fix.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376798 13f79535-47bb-0310-9956-ffa450edef68"
6e73e72542e3128da3ee04d0b215709bc6f41b81,"DERBY-100 Small extra fix by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376801 13f79535-47bb-0310-9956-ffa450edef68"
c12c97d6a820557c868e063cdda584360a1aa63b,"DERBY-907 regression test failure in RecoveryAfterBackup on wssd5.6 ibm jvm (j2me)

* Modifies app_properties files to add ij.dataSource properties. Also changed 'database' to 'ij.database' property. Removed usedefaults to avoid conflict with default property.
* Adds a method getConnection to TestUtil to get connection using different set of attributes than what is specified in _app.properties file.
* Changes the test store/RecoveryAfterBackup to use the above method to shutdown and get connection. I'll change other tests to use the new method in a later patch.

With the patch, I ran the RecoveryAfterBackup tests with Sun JDK1.4.2, j9 and j9 foundation vm. 

Contributed by Deepa Remesh




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376804 13f79535-47bb-0310-9956-ffa450edef68"
ca8747c0594765498c74d8c9fe841e0db06140e1,"DERBY-210 cleanup patch in preparation for change
Attaching a patch 'derby-210-patch1.diff' which removes the list 'RollbackOnlyListeners_' from org.apache.derby.client.am.Connection class since this is not being used. This is an incremental patch and does not solve the issue fully.

While working on this issue, I found one of the causes of memory leaks is object references stored in the lists in the Connection class. On looking at the lists, I found that 'RollbackOnlyListeners' is not being used anywhere in the client code. Submitting this patch to remove this. 

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376874 13f79535-47bb-0310-9956-ffa450edef68"
7e520717611a5d226b0acdfa868a4a21d926c2ce,"DERBY-766 (partial) Add code to the byte code compiler to enable it to
analyze a block of existing generated byte code. Provide utility methods to allow
other methods to be written to walk the byte code. Add an method to find the maximum
stack depth of a piece of java code. 
Add sanity checks to double check the data used (OPCODE_ACTION) to walk the byte code
and compare the calculated max stack depth with the existing generated value.
This is progress towards providing the ability to split generated methods that exceed
the JVM's limit into a number of smaller methods. This will replace the existing mechanisms
which are reactive, non-optimal and only work in a limited number of situations.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376882 13f79535-47bb-0310-9956-ffa450edef68"
00c5b52d6be67742cefec2026e16ffc0bc4fdc1c,"DERBY-927 (partial) Remove the (unused) code path that incorrectly seemed to allow
service providers (implementations for a service, e.g. a database) and
storage factory implementations to be set from the Properties object passed
into a connection. This would be a security hole as it would allow remote
users to possibly change the implementation used to access the database,
thus changing the security environment. The code could not be exercised
as the embedded driver correctly stripped out derby.* properties from
the JDBC attributes passed in with a connection request.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376897 13f79535-47bb-0310-9956-ffa450edef68"
ac50ae36156f8d96a58ae10ffe1b3783a877fbdb,"DERBY-210 test case checkin in preparation for DERBY-210 fix
 Attaching second patch 'derby-210-patch2.diff' which adds a test to jdbcapi suite for this issue. Patch does the following:

* Adds a test derbyStress.java to jdbcapi suite. This test is based on the repro for this patch.
* Excludes the new test from running with client driver, jcc and j9 because it gives out of memory error. Once derby-210 is resolved, this test should pass with client driver and the exclude must be removed from DerbyNetClient.exclude
* Creates 'derbyStress_app.properties' with following property 'jvmflags=-Xmx64M' to guarantee the test fails on all machines with the current client driver.

I ran jdbcapi suite with all frameworks using Sun JDK1.4.2 on Windows XP. Verified that the new test gets run with embedded and is skipped for client and jcc frameworks. Also ran the new test with j9 vms. Verified it passes with j9_foundation and is skipped for other j9s. Please take a look at this patch.

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@376904 13f79535-47bb-0310-9956-ffa450edef68"
2857799832b9a4bcbed3cdd986278b17eb708173,"- DERBY-511 Test of shutting down database when active connections alive - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377131 13f79535-47bb-0310-9956-ffa450edef68"
dad2d5b086e52ecb98cba712cccb1cf7c7d5f7d1,"- DERBY-511_2 Fix problem that output from ShutdownDatabase.java is intermittently in the different order than print method was called.  - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377173 13f79535-47bb-0310-9956-ffa450edef68"
a39542d5d6eac1a9150b88875b5fb77109dc67a4,"Change titles in engine Javadoc to Internals to better match the fact that
the javadoc is for the complete set of code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377210 13f79535-47bb-0310-9956-ffa450edef68"
f3a1e538394a82dcc3f57e3e5d0dfee435101569,"Add an overview page to the published api javadoc and
an overview for the JDBC package.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377240 13f79535-47bb-0310-9956-ffa450edef68"
e30b79b3033c5358bd8748f5cc561acc8f195a7b,"DERBY-927 (partial) Load sub-sub protocol implementations (derby.subSubProtocol.*)
from implementation locations using the same mechanism as modules (derby.module.*).
This allows sub-sub protocols to utilize the environment requirement variables
derby.env.jdk.* and derby.env.classes.* to control their booting.
Move some constants into Property.java with detailed comments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377272 13f79535-47bb-0310-9956-ffa450edef68"
5e883125d27efabb464aca297d0713f5a6ff8570,"DERBY-821 Client driver: Implicitly close exhausted result sets on the server.
Submitted by Knut Anders Hatlen



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377367 13f79535-47bb-0310-9956-ffa450edef68"
d82c43ef4971b27623318c17aed2f3f5adfd0e11,"Fix javadoc warning in Property.java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377480 13f79535-47bb-0310-9956-ffa450edef68"
89d3ce533571adfd5c3a777b2d88adc18b57ffd8,"DERBY-968: Added new metadata methods to embedded client.  This
revision returns EMPTY RESULT SETS for the new methods getFunctions()
and getFunctionParameters(). DERBY-924 and DERBY-925 have been opened
for these, and linked to this issue.

I also fixed some existing metadata calls that throw a not-implemented
exception when they should have been returning empty result sets.

I also fixed a bug in Driver40 where it did not override 
newEmbedDatabaseMetaData(), so EmbedDatabaseMetaData40 was not being
used.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377503 13f79535-47bb-0310-9956-ffa450edef68"
94bf4c8e17ec84557f740d851efeaf986bf6824e,"DERBY-943: Fix syscat.sql failure by adding permissions to policy file. Related
to DERBY-616.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377555 13f79535-47bb-0310-9956-ffa450edef68"
ee1cc94babb71695c5e8c5f7b70a74c7a1f2bd27,"DERBY-176 DERBY-776 Add the initial utility code and split algorithm
to split a single generated method that execeeds the java virtual
machine limit of 65535 bytes of instructions. Allows the byte-code api
caller to generate code without worrying about exceeding the limit.
The initial split algorithm is the ability to split methods
that consist of multiple independent statements, seen by the stack
depth dropping to zero after a statement.
In the largeCodeGen test this change allowed the number of parameters
in the IN list query to increase from 3,400 to 97,000. The limit hit
at 98,000 was the number of constant pool entries.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377609 13f79535-47bb-0310-9956-ffa450edef68"
3c4b656d67a418cda7cde89eedb6555942faf54a,"Canon seems to be missing from submission r377503, adding metadata methods to embedded client.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377782 13f79535-47bb-0310-9956-ffa450edef68"
49ee485d940292f0388071e9e38cb2eead8c8151,"DERBY-917: Exclude LobLimits.java from running in Network Server until DERBY-326
and DERBY-550 are fixed.

Committed for Sunitha Kambhampati <ksunithaghm@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377793 13f79535-47bb-0310-9956-ffa450edef68"
ec9f66031ae146c42b841b4d40cd85793c59cfbf,"DERBY-976, DERBY-978 : Fixed master output files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377807 13f79535-47bb-0310-9956-ffa450edef68"
3ec3a85a3bd262f6d6ebdc4573d305cd75c39eff,"Add XMLTypeCompiler to the jar build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377822 13f79535-47bb-0310-9956-ffa450edef68"
76ddb614ce5f800a1f51d92150b62063027f3903,"DERBY-557 Added a test case for DERBY-557. Submitted by Knut Anders Hatlen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@377998 13f79535-47bb-0310-9956-ffa450edef68"
bc50840290735610a4f2a67ab48a2964255f1d78,"DERBY-918: Introduce new ""junit"" test type

DERBY-934: Create a set of JUnit tests for scrollable updatable cursors.  I
also added these tests to the jdbcapi and derbynetclientmats suites (except
for ConcurrencyTest, which takes too long to run currently)

DERBY-797: After calling ResultSet.relative(0) the cursor loses its position

These are all submitted together because of interdependencies.

All contributed by Andreas Kornelliusen

NOTE: This may cause test failures on the IBM JDK; I did not test it with
this JDK, nor did I exclude these tests from running on this JDK, as I 
couldn't say whether they work or not (I don't have the IBM JDK).

I did exclude running these tests on DerbyNet, because they have a hard
failure saying ""null user not supported.""

Ran these tests on JDK 1.4, JDK 1.3, with both embedded and network
client drivers.  Note that the SURTest.out has failures; this is because
(a) the scrollable updatable result set work is not yet finished and
(b) there are differences between network client and embedded client which
need to be resolved.

--------

DERBY-797 files:
M    java/engine/org/apache/derby/impl/sql/execute/ScrollInsensitiveResultSet.java

DERBY-918 files:
M    java/testing/org/apache/derbyTesting/functionTests/util/TestUtil.java
M    java/testing/org/apache/derbyTesting/functionTests/harness/testtypes.properties
M    java/testing/org/apache/derbyTesting/functionTests/harness/RunTest.java

DERBY-934 files:
AM   java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest_app.properties
AM   java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURBaseTest.java
AM   java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURQueryMixTest.java
AM   java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURQueryMixTest_app.properties
AM   java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/ConcurrencyTest.java
AM   java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURDataModelSetup.java
AM   java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURTest.java
AM   java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/SURTest_app.properties
A    java/testing/org/apache/derbyTesting/functionTests/master/SURTest.out
A    java/testing/org/apache/derbyTesting/functionTests/master/DerbyNetClient/SURTest.out
M    java/testing/org/apache/derbyTesting/functionTests/suites/jdbcapi.runall
M    java/testing/org/apache/derbyTesting/functionTests/suites/derbynetclientmats.runall
M    java/testing/org/apache/derbyTesting/functionTests/suites/DerbyNet.exclude



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378045 13f79535-47bb-0310-9956-ffa450edef68"
a0b0ffe3b724f5402013843557c1be0771ba5753,"New and updated master files for j9.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378063 13f79535-47bb-0310-9956-ffa450edef68"
c1df6c96ab3f33bbb86b6c2e01fbc63726140858,"Knut Anders as committer


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378106 13f79535-47bb-0310-9956-ffa450edef68"
94f95a4c0221e2348e8aa89227ec8ea8edd4812a,"DERBY-85: Address NullPointerException when creating a trigger on a table and default schema doesn't exist.

Submitted by Dyre Tjeldvoll (Dyre.Tjeldvoll@sun.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378109 13f79535-47bb-0310-9956-ffa450edef68"
4eac98adaffa224dcec10498de98dca55eb8581a,"DERBY-933: Skip junitTest/LangSuite tests in J2ME environment, for now.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378129 13f79535-47bb-0310-9956-ffa450edef68"
26ea44379bf6f2732bcd105aa27ac8ca778257fb,"DERBY-435 patch 1.  Cleanup geared toward getting checkDataSource and checkDataSo
urce30.java running for network server

- Changes the test to use the TestUtil.getDatasource methods
- Changes the names to be generic.
- organizes imports
- Adds getSimpleDataSource to TestUtil




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378313 13f79535-47bb-0310-9956-ffa450edef68"
bb5e9caf5fc30d76d31cef76adc5c9f13368ad06,"DERBY-903: Remove use of String(byte[]) constructors in tests. Also, fix casing
of previously committed errorCode master

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378337 13f79535-47bb-0310-9956-ffa450edef68"
15674570f3d3c1635e34b68fc945747ee5a51e59,"DERBY-176 fix javadoc error in CodeChunk from previous commit 377609


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378383 13f79535-47bb-0310-9956-ffa450edef68"
51fcb65c5b0badf00f6491715c4b13673420d4dc,"* Changes network server start and shutdown messages to include product name, version and timestamp. I changed the messages to what Kathey suggested. With the patch, messages will look like this:
Apache Derby Network Server - 10.2.0.0 alpha started and ready to accept connections on port 1527 at 2006-02-15 03:42:51.676 GMT
Apache Derby Network Server - 10.2.0.0 alpha shutdown at 2006-02-15 03:49:14.988 GMT

* Changes only English messages. The first parameter for start message is kept the same.

* Modifies NetworkServerControlImpl to pass in the additional parameters to the messages. Formatiing of timestamp is done same way as it is done for Derby boot message.

* Modifies master files.

* Since the changed master files contain version information, they are added to tools\release\build.xml so that version will get bumped at release time.


I chose GMT to keep it consistent with what is used for Derby boot message. The network server start and shutdown messages get printed along with derby boot messages in derby.log. Something like this:

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378388 13f79535-47bb-0310-9956-ffa450edef68"
4a36dabe6db23be94502560ea7e8c0eb7dd2283a,"DERBY-435 jdbapi/checkDataSource30.java test should be changed or extended to test client DataSources
 patch 2 - checkDataSource30 holdability testing for client
 
- Enables the checkDataSource30 test for holdability tests that are currently passing.
  There appear to be several holdability bugs associated with network XA in additon to DERBY-966.

- Makes some progress toward getting checkDataSource.java to run with client, but it is not enabled yet.
  - Changed to only run connection toString tests for embedded.
  - Changed to only test SimpleDataSource for embedded
 - Changed to perform an explicit rollback of active transactions for client before performing a PooledConnection.getConnection()
  I think this is an issue with embedded that it allows a PooledConnection.getConnection() with an active transaction, instead of throwing an error if the transaction is active.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378532 13f79535-47bb-0310-9956-ffa450edef68"
1288465ef4e5d8895448a13d197edee66a11dc32,"DERBY-998: SUR tests already in jdbcapi suite, which is part of
derbynetclientmats, so removed them from the runall


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378535 13f79535-47bb-0310-9956-ffa450edef68"
f43b12c3f13c184800466ae51f7c4b3931f577cc,"DERBY-983: Remove use of Util.notImplemented(), and instead have
a client-only utility class for shorthand exceptions

Contributed by Anurag Shekhar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378538 13f79535-47bb-0310-9956-ffa450edef68"
6bfbcd6d39d5f569d23871d5abe99a10a5aca663,"DERBY-614 patch 2 - clear splitQRYTDA field for reuse of the resultset
Bryan said ..

 With my first patch to this bug, I introduced a problem in this processing; the
splitQRYDTA field was not cleared when the statement was closed. This meant that
if that splitQRYDTA field just happened to have some pending query data from the
previous statement at the point where it was re-used, the pending query data would
erroneously stick around and be returned as the first result for the new statement.

Contributed by Bryan Pendleton



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378552 13f79535-47bb-0310-9956-ffa450edef68"
344b9efdc3ecbf29ffc0589481e12776b32caf49,"DERBY-960 Client xa prepare returns XA_OK instead of XA_RDONLY for a read only transaction

- Changed DRDAXAProtocol prepareXATransaction to return the return value of prepare in the SYNCCRD
The server was always returning XA_OK if prepare did not throw an error instead of passing the return value to the client.

For Network Client
- Changed NetXAResource() prepare to handle XA_RDONLY returned from the server. It was throwing an exception for any value returned from the server other than XA_OK.

Test was checked in by enabling checkDataSource30.java in svn  378532


Reviewed by Bryan Pendleton



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378613 13f79535-47bb-0310-9956-ffa450edef68"
486829ce958cdddea541ff1c1b8a136ce377a57b,"DERBY-840: Message internationalization for client driver.  Originally
submitted by V. Narayanan, with some changes applied by myself.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378657 13f79535-47bb-0310-9956-ffa450edef68"
51cefa2a8ebe13aa0447363ba40f1aa5fae81f0b,"DERBY-176 DERBY-766 Modify pushing a long value in generated code to avoid
using constant pool entries if the long is within the range of a short.
Then use the I2L instruction to convert the int to a long. Also if
the long is within range of an int, then create a integer constant pool
entry and I2L to avoid using two constant pool slots.
Add some clarifying comments over the code length in complete.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378744 13f79535-47bb-0310-9956-ffa450edef68"
6e104227f68db83a021e0ca4963a63741b4aa1eb,"DERBY-434 Add a new initial version XATest.java that will work with the
embedded and client XA data sources. Contains test cases taken from the
xaSimplePositve,sql, xaStateTran.sql and all of xaMorph.sql. Future work
includes getting it to run with client (currently some XA client bugs hold
this up) and moving the remaining test cases from the XA SQL tests into it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378755 13f79535-47bb-0310-9956-ffa450edef68"
03bb4d21dde921d415563758caee05d51f3c6830,"DERBY-434 Disable XATest for JDK 1.3 as it requires JDBC 3.0


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378758 13f79535-47bb-0310-9956-ffa450edef68"
d3722f3accf48d6e9fcfc9b68d63de0201cf7ef5,"DERBY-435 patch 3 continuing work to bring checkDataSource into client testing
This patch disables some instances of setTransactionIsolation for client because it causes a statement closed exception in some contexts.
This bug makes it hard to analyse the isolation testing in this test with client.


Also exposes a bug that client returns an invalid connection for Statement.getConnection for connections obtained from a connection pool datasource.
 

No change to the embedded tests and not yet enabled for client.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378771 13f79535-47bb-0310-9956-ffa450edef68"
d5461a6c0c18bf9610ec571ee720e3138b75716b,"DERBY-434 Fix build error with XATestUil.java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378796 13f79535-47bb-0310-9956-ffa450edef68"
6d12993a00cce972b314bed95d810277fa63cae3,"DERBY-434 DERBY-1009 DERBY-435
 Remove static check methods with duplicated code in instance methods,
 have the Java procedure call the instance method for the connection checks
 on the nested connection.
 Have the checkDataSource30 procedure nested connection checks use checkDataSource30 as
 the object for the instance method, adds the holdability and savepoint tests for checkDataSource30.
 Add test of the return of ResultSet.getStatement to expose DERBY-1009.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378797 13f79535-47bb-0310-9956-ffa450edef68"
cdad0a153ba4a704f1a5e46ff01e211a56f1534d,"DERBY-273 The derbynet/dataSourcePermissions_net.java test fails intermittently - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@378903 13f79535-47bb-0310-9956-ffa450edef68"
d9ffc2bc7ce352346a59c04dc1f24b392033844f,"- rollback DERBY-273.patch - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379091 13f79535-47bb-0310-9956-ffa450edef68"
7df5ffe3233896bac308efd4012a0dfa2d6d6530,"DERBY-467 Make DRDA implementation classes and their constructors package
protected instead of public or protected. Code is only required to be accessed
from this package. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379174 13f79535-47bb-0310-9956-ffa450edef68"
e65be5ba5e43c631b6b4fcdaef121b6ed899b45a,"DERBY-1009 Ensure EmbedResultSet.getStatement() returns the BrokeredStatement object
the application used to create it, rather than the underlying physical statament.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379178 13f79535-47bb-0310-9956-ffa450edef68"
0c25a63a78cc5f0328372112d681580616f6822c,"Increase AUTHORIZATION_ID_LENGTH from 30 to 128. Note this change doesn't allow longer user names than 30 as currently enforced. This only increases catalog column size for 3 permissions tables that store authorizationID.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379208 13f79535-47bb-0310-9956-ffa450edef68"
62e00e16d50ec90b76b8c0fcfb7f94e968990958,"Remove some dead code in DRDAConnThread where a result set or prepared statement
reference was obtained but never used. There were no side-effects in any of the
methods called.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379257 13f79535-47bb-0310-9956-ffa450edef68"
a50c94c058c145976980adc5017c9a6475bafef4,"DERBY-938 Optimize ContextManager
Use an unsynchronized collection for the manager since
it is owned by a single thread, provide optimized
access to a set of contexts with the same identifier.
Contributed by Dyre Tjeldvoll Dyre.Tjeldvoll@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379265 13f79535-47bb-0310-9956-ffa450edef68"
67d3333d2d29cbe9632e8c6ba19cea09d59a588a,"DERBY-615 Add bug number for why st_1 test is not running under the SecurityManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379530 13f79535-47bb-0310-9956-ffa450edef68"
62d2020e5d2ed9ca514c590f0393ffbcb3f0b85b,"DERBY-446 (partial) Make ClientDataSource use public setter and getter methods as standard
for its Java bean properties. Avoids security exceptions or requiring extreme security
permissions in order to create a Reference from the data source. Staged development, subsequent
commits will clean up some of the remants of the old code, by removing or moving the ""propertyKey_*"" fields.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379536 13f79535-47bb-0310-9956-ffa450edef68"
da847a293574f604acbe411abfe10b707304f5cb,"DERBY-1015 (partial) Initial code for EngineConnection. Add the EngineConnection
interface with a set of initial methods, make EmbedConnection and BrokeredConnection
implement this interface. No uses of the interface added yet. Some of the initial
methods were moved from BrokeredConnectionControl which looked like a start on the
same approach but did not address the issue of a single api for embedded and brokered
connections.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379545 13f79535-47bb-0310-9956-ffa450edef68"
af35756ed482fe7accf8611f6b58b42ad7e59656,"DERBY-1015 (partial) Minor cleanup in the methods to obtain a connection in the network server.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379551 13f79535-47bb-0310-9956-ffa450edef68"
f86608b11975e6d15f4357f185dbd4700e43e201,"DERBY-446 Remove holdability constants from ClientBaseDataSource and instead use
the identical values in JDBC30Translation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379565 13f79535-47bb-0310-9956-ffa450edef68"
faf213403164c3b887375da43d3fef8ba6a7e1ff,"DERBY-1015 (partial) Modify the network server to hold the embedded Connection
object as a EngineConnection reference instead of a vanilla Connection. Does
not change the uses of the connection reference to take advantage of the consistent
api, will be done in a future patch.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379567 13f79535-47bb-0310-9956-ffa450edef68"
2eb196036b77d24fec913fb8d3e8da1c37825f6d,"Add package.html file for org.apache.derby.shared.common.reference package.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379571 13f79535-47bb-0310-9956-ffa450edef68"
3734ddeac7fdb260ffda937b818826a87f65498f,"DERBY-1015 Use the EngineConnection class to call setDRDAId, set/getPrepareIsolation from
the network server on an embedded connction. Removes the requirement for specialized methods
in XADatasource.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379609 13f79535-47bb-0310-9956-ffa450edef68"
c10c4049001494ee064322f1fa406b03d0c9b04b,"DERBY-304 submitted on behalf of Suresh Thalamati
Fix :

1) Do not allow backup path to be any derby database directory. A directory is
assumed to be a derby database directory if it has service.properties file in it.

2) copy files needed from the database home into the backup one by one
instead of recursive copy from the top directory.

3) while copying the directories under jar directory, copy each sub directory
separately without copying any subdirectories under them (There should not
be any unless if user has created explicitly or created backup at that location).

4) Log and Seg0 directory are NOT already copied recursively, this was changed as part of
online backup work (DERBY-239). 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379620 13f79535-47bb-0310-9956-ffa450edef68"
be14891db2a46ab0735f06360eac49a1a78c7ca6,"Anurag's fix to bug 1013: Make JDBC4 tests check for SQLState rather than variable text when catching exceptions from stubbed-out methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379634 13f79535-47bb-0310-9956-ffa450edef68"
9adc0223bb8f119284d0aa0a9849cf899e36b7d5,"DERBY-903: Followup patch to remove use of String(byte[]) in two tests and
print an error message instead.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379643 13f79535-47bb-0310-9956-ffa450edef68"
51a76817b16ee7f6cb25cbaea7b693803c39a08a,"Submit master update for syscat.out

Submitted by Satheesh bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379651 13f79535-47bb-0310-9956-ffa450edef68"
6a92ad0be27d6b750816a4547cae48a6db6145de,"Submit updated grantRevoke.out master file.

Submitted by Satheesh bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379652 13f79535-47bb-0310-9956-ffa450edef68"
5908bd840a39e8baebf07f9fa3259ae0a1a61233,"Build fix for gump. Add shared package to list of dependencies for gump_split_1


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379719 13f79535-47bb-0310-9956-ffa450edef68"
0c1db6eeeeb6b7c0d2d9b1e53340a8975a920cdd,"Exclude *.rej from the javadoc build to prevent rejected patch hunks from
interefering with the build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379721 13f79535-47bb-0310-9956-ffa450edef68"
fb605fe1d1890d0c50ecb56aae300648401401ac,"DERBY-683: Commit _tstpatch3_ by Myrna. Adds derbyTesting.encoding property to
harness. Excludes encodingTests from all JDKs except Sun JDK 1.5. Further
investigation is required to understand why this is necessary. The changes
introduced in this patch (specifically, setting -Dfile.encoding on the command-
line of the spawned JVM) should not cause NoClassDefFoundErrors on JDK 1.4.2,
but they do.

Committed for Deepa Remesh <dremesh@gmail.com> and 
Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379723 13f79535-47bb-0310-9956-ffa450edef68"
995cb914c3f9895bae463cdef8c47b0875fd9d36,"DERBY-800 derbylang/ConcurrentImplicitCreateSchema.java fails intermittently with a lock timeout
Submitted by √òystein Gr√∏vlen


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379733 13f79535-47bb-0310-9956-ffa450edef68"
cacdcae7afe73a64887d8819d669a54a8360bb15,"DERBY-683: Remove duplicate lines from encodingTests files


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379848 13f79535-47bb-0310-9956-ffa450edef68"
9927a2e76421fed6f82ca9f3226e69c8d6547db9,"Correct the build instructions for jdk 1.6: you only need to set jdk16 (not jdk16.java also) in your ant.properties.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379927 13f79535-47bb-0310-9956-ffa450edef68"
ba0b3d0117f9a79f3e59ee983c72f238e407d6bd,"DERBY-1019: Add Main-Class to derbytools.jar to allow running the tools with
java -jar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379939 13f79535-47bb-0310-9956-ffa450edef68"
e07f9c910640a68a44070454aaaca7f1ecf6e7cb,"DERBY-434 XATest changes to get closer to running it with client.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379989 13f79535-47bb-0310-9956-ffa450edef68"
fe35a93d90c5fa6c3f8fef18590dce31ac1951c9,"DERBY-1010 - setTransactionIsolation can cause ava.sql.SQLException: Invalid operation: statement closed in some contexts with xa

Client has a Statement object that it reuses to send SET CURRENT ISOLATION commands to the server.  Added a check to make sure this statement was not closed before trying to reuse it.

This change takes the checkDataSource test a bit further (DERBY-435) but there seem to be issues with isolation being set correctly with xa_join.  I will investigate that and file a Jira issue



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379993 13f79535-47bb-0310-9956-ffa450edef68"
5103b48291b3b4a8e3f0e58ad4dba8f498e2ad5a,"Update master file for resultsetJdbc30.java on j9_foundation.

Committed for Rajesh Kartha <kartha02@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@379996 13f79535-47bb-0310-9956-ffa450edef68"
4cdf7895284a7f8c29ce0087f7ee254cb8c09cba,"Update two master files to reflect new output.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380003 13f79535-47bb-0310-9956-ffa450edef68"
93abf18bef673c00057ef2cdc291104de59b01db,"Disable tests for setting isolation with an SQL statement for client until DERBY-1035 is fixed



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380020 13f79535-47bb-0310-9956-ffa450edef68"
e1c5f480b7fe615f76dd281bb75dedb836973e9b,"Fixed build failure caused by check-in of DERBY-1019.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380071 13f79535-47bb-0310-9956-ffa450edef68"
c73df2b05a9c69582b2dbe75cddaf479a2b6ecae,"- DERBY-273_2 The derbynet/dataSourcePermissions_net.java test fails intermittently - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380099 13f79535-47bb-0310-9956-ffa450edef68"
617fe8ff15c33bb62084d43519ee77f378793811,"Add support for 
    1) Creating schemas with AUTHORIZATION option. Still need to enforce permission checks.
    2) Upgrade support for grant & revoke. Tested full upgrade from 10.0 to 10.2 and 10.1 to 10.2.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380112 13f79535-47bb-0310-9956-ffa450edef68"
cbd0ff10e2753e492d971775ae3623b7d2a1fd70,"Narayanan's patch for DERBY-796: 1) implements JDBC4 LOB extensions, 2) refactors logic for creating JDBC4-specific implementations.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380187 13f79535-47bb-0310-9956-ffa450edef68"
429fb79b4160d77f3e3a80d93bbde50d17a9284c,"Fix dyslexic repackaging of run.class. Also fix build instructions for Mac OS X.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380259 13f79535-47bb-0310-9956-ffa450edef68"
fdfc981eca3e48933bcf1bd46e994fcfb47f705f,"DERBY-966 DERBY-1005 1) Change DRDAStatement to use the EngineConnection.prepareStatement() method that has a holdability parameter. This ensures prepares on a connection that was obtained from a XADataSource (or a ConnectionPoolDataSource) do not lose the holdability requested by the application.

2) Change the client's state of holdability to match the embedded in that a Connection's holdability is set to close cursors on commit when it has an active global XA transaction.

Patch addresses this issue completely.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380278 13f79535-47bb-0310-9956-ffa450edef68"
d5ba8a8bb6eba855fa3628f74426e8edbc18b9e1,"DERBY-1024 Remove the XA constants in XAResource that were duplicates of standard
constants from XAException and XAResource. Removed the code that translated (incorrectly)
an XA return value from one constant to another (with the same value in most cases).
Thus fixing 1024 where the incorrect XA code was being thrown, this was because the
unneded conversion code was incomplete.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380282 13f79535-47bb-0310-9956-ffa450edef68"
fcfc92540c070f0326e86521c6eefe976929db2e,"DERBY-417: Remove hardcoded references to encryption providers in Beetle6038 and
let Derby choose the correct encryption provider. This allows the test to pass
on Mac OS X and any other JVM where the vendor is not Sun or IBM.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380287 13f79535-47bb-0310-9956-ffa450edef68"
11a698ee831212902f0d245eab4cfb6ad0d85504,"DERBY-434 Enable jdbcapi/XATest.java to be run under client. Several bugs exist and
are noted in the test or its output. All of these bugs are entered in Jira.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380288 13f79535-47bb-0310-9956-ffa450edef68"
fa1185de2bd674265ecae78074654df889ed9b98,"DERBY-435 continuing work to get checkDataSource running with client
disabled test cases for DERBY-1025, DERBY-1044, and DERBY-1047
added workaround for DERBY-1036 to give statements different cursor names




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380672 13f79535-47bb-0310-9956-ffa450edef68"
cd5e376dd3d836694dad2618d55edf8ebc9d5ca3,"DERBY-515 Network Server should log server start and shutdown time to derby.log

Patch contributed by Deepa Remesh.

Summary of patch:

* Removes identical master files in DerbyNetClient and DerbyNet for
derbynet/NSinSameJVM.java and moves it the top master directory.

* Modified tools/release/build.xml to point to the new master file.

* Adds comments as to why CheapDateFormatter and GMT is used to format
timestamp. Moves formatting of timestamp to a method getFormattedTimestamp().
This will be helpful if timestamp is planned to be used for more messages
as Kathey indicated. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380722 13f79535-47bb-0310-9956-ffa450edef68"
bd644c6e33ca8276d0b22e0d80e0ccd1f6b02a54,"patch 4 toward resolving DERBY-210 Network Server will leak prepared statements if not explicitly closed by the user until the connection is closed

Contributed by Deepa Remesh

Changes the finalizer method in Statement and PreparedStatement to not send commits or CLSQRY to the server


n PreparedStatement class, the finalizer was calling closeX method, which was doing:
    * Call super.closeX() ---> Statement.closeX()
    * Cleanup parameter objects - parameterMetaData_, sql_, parameters_ array
    * Remove the PreparedStatement from connection_.CommitAndRollbackListeners_ list

   Changes done by patch:
    * Add a new method markClosed() which will free client-side resources.
    * The new method is named markClosed() to keep it uniform with naming convention in superclass.
    * This method is called from close() and finalize() methods.
    * markClosed() method will call super.markClosed() to perform cleanup of parent class. It will cleanup the objects specific to PreparedStatement, which are ParameterMetaData and parameters. It also removes the PreparedStatement form the list in Connection object.
    
2. In Statement class, the finalizer was calling closeX method, which was doing:
    * Close any open cursors for this statement on the server.
           - If result set is open on server, send CLSQRY to the server.
           - check if autocommit is required when closing result sets and flow a commit to server, if required
    * Call Statement.markClosed(), which does
             - Mark close the result sets on the client
             - If cursor name was set on the statement, remove it from Connection.clientCursorNameCache_
             - Call markClosed() on prepared statements for auto generated keys
             - Call markClosedOnServer(), which frees up the section. The freed section will be re-used by new statements.
    * Remove the Statement from Connection.openStatements_ list
    * Cleanup ResultSetMetaData

    Changes done by patch:
        * Move the cleanup of ResultSetMetaData and remove of Statement from Connection.openStatements_ list into markClosed() method. This will keep all client-side cleanup in markClosed().
        * Change the finalizer to just call markClosed(). This method frees up client-side resources and operates on synchronized collections. So I have removed the synchronize block from the finalizer.
     * The autocommit logic does not exist in the finalizer since only markClosed() is called from finalizer. This will avoid untimely commits which was causing the regression in the test lang/updatableResultSet.java 

-This line, and those below, will be ignored--

M    java/client/org/apache/derby/client/am/Statement.java
M    java/client/org/apache/derby/client/am/PreparedStatement.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@380892 13f79535-47bb-0310-9956-ffa450edef68"
c45f5b1e96f1b68b99f5b8346614c813fd03aa09,"DERBY-464: Enable Grant and Revoke DML permission checking for tables. Builds on earlier submitted Part I patch.

Previously submitted Part I patch implemented Grant and Revoke DDL statements.
While permissions granted were correctly recorded in system catalogs, no
permission checks were done at execution time. This Part II patch implements
these privilege checking at execution time for TABLE PRIVILEGES only. This
patch does some work for ROUTINE privileges, though not enabled yet. More work
is needed to enforce ROUTINE and TRIGGER privileges.

Bind phase changes
------------------

Bind phase needs to record access to database objects that need required
privileges. No permission checking is done during compilation process. All 
checks are done at execution time.

Top level nodes know what type of access is needed (like INSERT or UPDATE) but
don't know on which columns. Lower level nodes (like ResultColumn) know what
columns are being used, but not what type of privilege is needed. So, top level
nodes push their required privilege type at the beginning of their bind phase.
As lower level nodes go through their bind phase, they get current requested
privilege and add required StatementPermission objects.

DMLStatementNode now has now method, getPrivType() which defaults to
SELECT_PRIV. Other DML nodes override this method to request their own default
privilege.

Bind phase changes for nodes:

	1) CallStatementNode: Set privType to EXECUTE_PRIV
	2) SelectNode: Set privType to SELECT_PRIV
	3) ResultColumn: Add column privilege of request type
	4) DeleteNode: Add SELECT_PRIV to columns in where clause and DELETE_PRIV to targetTable
	5) UpdateNode: Add SELECT_PRIV to columns in where clause and UPDATE_PRIV to columns in SET clause.
	   There is a problem with this scheme for UpdateNode. While it correctly checks permissions for
	   UPDATE T set a=2 where b=5 by checking for SELECT_PRIV on b and UPDATE_PRIV on a, current code
	   incorrectly expects UPDATE_PRIV on c for UPDATE T set a=c where b=5. This can be resolved by
	   binding on the left and right sides separately, with different default privilege.
	6) Change DMLStatementNode to add schema owner check in getSchemaDescriptor().
	7) FkConstraintDefinitionNode: Set REFERENCES_PRIV as the privType on list of columns specified.
	8) InsertNode: Add SELECT_PRIV to columns in expressions and INSERT_PRIV for targetTable
	9) CompilerContextImpl: Add another List to track schema ownership privilege checks. Would this only have
	   one entry at most?

Dictionary changes
------------------

Phase I already added StatementTablePermission, StatementColumnPermission and StatementRoutinePermission access
descriptors. To check that only a schema owner can issue DDLs in their schema, another access descriptor has been
added, StatementSchemaDescriptor.

Conn package changes
--------------------

Change GenericAuthorizer.authorize() to perform runtime privilege checks right after current legacy checks for READ_ONLY
or FULLUSER.

Execute phase changes
---------------------

Changed GenericResultSetFactory to pass activation when invoking Authorizer.authorize().
Pass access descriptors needed to check for privileges to execute phase.

Other changes
-------------

sqlgrammar.jj: Change grantee to be an authorization identifier (sql-identifier)

DDLStatementNode: Add new method getSchemaDescriptor(ownerCheck)

Some metadata changes. Need testing.

Test changes
------------

1) Moved current test grantRevoke.sql to grantRevokeDDL.sql. I intend to keep this test primarily for testing DDLs. Added
some more tests here, including some DML statements too.
2) Added new multi-user grantRevoke.java test to test DML statements. As the test grants/revokes privileges, it verifies
behavior by invoking metadata, check against system tables and by issuing a DML statement that is expected to raise error.
Plan to add more tests here, as additional privileges are implemented.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381109 13f79535-47bb-0310-9956-ffa450edef68"
f3cdc9e7b0f36ff4cf2a21309958c2db79ae626b,"Delete wrongly cased master file GrantRevoke.out

Submitted by Satheesh bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381299 13f79535-47bb-0310-9956-ffa450edef68"
134d3b8b6c9bb44f61a929c92ee89a5ac8f391cb,"DERBY-788: 'store/encryptionKey.sql' fails on Solaris 10

Contributed by Kristian Waagan <Kristian.Waagan@Sun.COM>.

'DERBY-788-1a.diff' is a patch that replaces the 16 byte key with a 8
byte key for the DES encryption algorithm used in the test
'store/encryptionKey.sql'. The test still exercises the intended parts
of the Derby code (according to my own analysis and that of
Sunitha). The patch makes the test stop failing on Solaris10 (with
security provider 'SunPCKS11-Solaris') .

One test case is changed; where it previously tested a key that was of
incorrect length (longer than 8 bytes, shorter than 16), it now tests
an incorrect key of the correct length. It is not possible to make the
test pass on Solaris10 with a key of incorrect length, because keys of
length less than 8 bytes are caught by a check in the code, and keys
longer than 8 bytes cause the underlying security provider to fail
('SunPCKS11-Solaris'). This issue will be addressed in DERBY-1001
(rewrite of test to a JUnit-test).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381333 13f79535-47bb-0310-9956-ffa450edef68"
0c1cb1485d5f58767fd6101e8165326a15b6aec3,"DERBY-809 Incorrect documentation for NetworkServerControl.logConnections

Patch contributed by Kristian Waagan

This is a small patch for the javadoc of NetworkServerControl and
NetworkServerControlImpl, removing the false statement that
disconnections are logged to derby.log.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381375 13f79535-47bb-0310-9956-ffa450edef68"
a4b59331100ffa43cf2f3d6e04cee0242d5cbdf1,"DERBY-709, committing on behalf of Suresh Thalamati

-- Removed the requirement for read permission on ""user.dir"" for backup to
run under security manager. Absolute Path were used only to log into backup
history file. Changed it to log canonical paths only if it can be obtainer
,otherwise only relative paths are written to the backup history file.

-- Added a missing privileged blocks to the save service.properties file into 
the backup.

-- Added privileged blocks for test util file functions that are called
through SQL functions/procedures.

-- Enabled some of the tests which were not running under security manager
earlier because of this bug to run by default with security manager.

Backup tests that test backup with jar Operations still can not be run under 
security manager due to bug DERBY-537.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381389 13f79535-47bb-0310-9956-ffa450edef68"
70a12d9b07fc14cd96a97dc3e65a320c9c4458a0,"DERBY-464: Enable routine privilege checking. Most of the code for routine
privileges is already in trunk. Just enable this checking, add tests to both
grantRevokeDDL and grantRevoke tests.

Permission scheme for system routines still need to be resolved. For now,
everyone has execute permission on all system routines in system schemas.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381408 13f79535-47bb-0310-9956-ffa450edef68"
733f2e0ee2045096411f2f159473d9c25c20165b,"Enable new grantRevoke.java test as part of derbyAll and also add master
file for this test.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381418 13f79535-47bb-0310-9956-ffa450edef68"
0bcb1566220f150e1faf95e1860188514a93b665,"DERBY-1045: Remove Class-Path attribute from derbytools.jar manifest. 
Autoloading of the JDBC drivers causes problems in a mixed-jar environment, 
because the load from the tools Class-Path will take precedence over a client 
that appears later in the classpath.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381430 13f79535-47bb-0310-9956-ffa450edef68"
4388f151b95eb0e906a7d31986fa46d7ae2a4bd9,"DERBY-1006 Disallow holdable cursor setting at the connection and statement
level while in a global transaction for the client driver. Matches the embedded
as the holdable cursors are not supported in global (XA) transactions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381549 13f79535-47bb-0310-9956-ffa450edef68"
3905037dc89fc3fa02963b0c73dd4783578786fb,"DERBY-479 Fix linkage error when passing the value of a RETURNS NULL ON NULL INPUT function
to another function. Fixed by only removing SQLToJava/JavaToSQL nodes for the function's
return value when the function is a CALLED ON NULL INPUT function.

Fix contributed by Mamta Satoor - msatoor@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381553 13f79535-47bb-0310-9956-ffa450edef68"
2579699414b7979b0ccaab1ad310de28f2e7023b,"DERBY-464: Enforce TRIGGER privilege checks and add tests.

Change createTriggerNode to expect TRIGGER privilege on triggering table.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381562 13f79535-47bb-0310-9956-ffa450edef68"
62d4560b4ca31d7ac78b872281a885c0b5d1db36,"DERBY-805: Apply Part I of the fix. Refer to JIRA for complete writeup
on all the phases. This Phase broadly addresses:

When remembering ""truly the best"" access path for an Optimizable, we have to 
keep track of which OptimizerImpl the ""truly the best"" access is for.  
In most queries there will only be one OptimizerImpl in question, but in 
cases where there are nested subqueries, there will be one OptimizerImpl
for every level of nesting, and each OptimizerImpl might have its own
idea of what this Optimizable's ""truly the best path"" access path really is.
So whenever we save a ""truly the best"" path, we take note of which Optimizer
told us to do so.  Then as each level of subquery finishes optimization,
the corresponding OptimizerImpl can load its preferred access path into this
Optimizable's trulyTheBestAccessPath field and pass it up the tree, until 
eventually the outer-most OptimizerImpl can choose to either use the best path
that it received from below (by calling ""rememberAsBest()"") or else use the
path that it found to be ""best"" for itself.

Submitted by Army Brown (qozinx@sbcglobal.net)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381859 13f79535-47bb-0310-9956-ffa450edef68"
e9308b5feb045f083c0ee5bfd7ffbc0a59b96aa9,"DERBY-709, committing on behalf of Suresh Thalamati

This patch (derby-709_latest.diff) fixes the problems appreared with earlier
patch when tests are run againest JARS.

--- correctly catch the Security Exception when there is no permission to get
a canonical path.
--- Modified the deryb_tests.plocy to allow deltes in
${user.dir}${/}extinout${/}- .,
It is needed because, backup tests deletes the old copy of the backup at the
backup location.
--- set noSecurityManager = true for the tests that can not be run under
security manager due to bug : 1066
--- changes st_1 properties to use external tests dirs , so that tests does not
required ""user.dir"" permission to create parent directories for the backup
paths.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381883 13f79535-47bb-0310-9956-ffa450edef68"
f0dcf0bb2bd5b4ff92d83e2c57d14611c9942af1,"DERBY-1002 - Check that DRDAStatement and DRDAResultSet states are reset when they are re-used

Contributed by Deepa  Remesh

Please take a look at following two patches - patch 1 contains code changes and patch 2 contains tests. These have to be committed together.

------------------------------------------
1. derby1002-patch1-v1
------------------------------------------
* Adds reset() methods to DRDAStatement and DRDAResultSet objects. The purpose of reset method is to reset the states of all variables so that the objects can be re-used and will not have left-over states.

* In case of DRDAStatement, the following variables are not reset:
+ * 1. database - This variable gets initialized in the constructor and by
+ * call to setDatabase.
+ * 2. members which get initialized in setPkgnamcsn (pkgnamcsn, pkgcnstkn,
+ * pkgid, pkgsn, isolationLevel, cursorName). pkgnamcsn is the key used to
+ * find if the DRDAStatement can be re-used. Hence its value will not change
+ * when the object is re-used.

* close() methods are changed to only close and dereference objects.

* DRDAStatement.rsClose() method is not used in close() or reset(). This method has some checks which were causing the method to return without resetting currentDrdaRs. Now, close() calls currentDrdaRs.close() and reset() calls currentDrdaRs.reset().

* In Database.newDrdaStatement, close() method is called followed by reset() when the server finds the statement can be re-used.

------------------------------------------
2. derby1002-patch2-v2
------------------------------------------
Modifies test lang/procedure.java. Adds a method 'setupStatementReuse' which creates and uses statements in such a way as to provoke re-use of statements and result sets on network server. This method is called from tests for jira-491 and 'testImplicitClose'.

------------------------------------------------------------------------------------
Remaining TODOs for DERBY-1002
------------------------------------------------------------------------------------
* pkgcnstkn, pkgid, pkgsn variables can be removed from DRDAStatement since these are derived from pkgnamcsn object.
* Look into what is required by initialize() of default statement. Currently, initialize just calls setTypDefValues(). Once the purpose of this method is confirmed, we may need to modify the comments at places it is currently called.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@381937 13f79535-47bb-0310-9956-ffa450edef68"
cf3c4cb4ba8eec73d3b133f9e0470a26e3827588,"DERBY-928 Add ability to network server to accept connections with a certain security mechanism.

Add derby.drda.securityMechanism property to restrict securityMechanisms accepted from client

Detailed description of patch in bug
https://issues.apache.org/jira/browse/DERBY-928#action_12366294

Contrbuted by Sunitha Kambhampati



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382019 13f79535-47bb-0310-9956-ffa450edef68"
1dd059d322ca2f452b58f80c591d10c1ba6a8253,"DERBY-834: test i18n/urlLocale.sql fails in non-en_US locales. Remove hardcoded references to en_US and verify that the
locale of the database is internally consistent.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382138 13f79535-47bb-0310-9956-ffa450edef68"
6718a25637b0502e0e3b8b6b256205bdc6d898e0,"DERBY-805: Phase II changes that are described in detail in JIRA attachment. 

This phase essentially tries to scope join predicates that could be pushed
into table expressions. More work is needed to actually perform this pushing
and costing, which will come in follow up patches.

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382200 13f79535-47bb-0310-9956-ffa450edef68"
be2420636d6e4ccd457da3e22b758deed6d2ff3e,"DERBY-997 Add test lang/AggregateClassLoading.java that demonstrates the
ClassCastException typically seen in application servers.
Test is not added to any suite yet, will be added when the bug is fixed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382296 13f79535-47bb-0310-9956-ffa450edef68"
98f5fd954c7658d100733a48bd70277ba3f970b9,"DERBY-965: DatabaseMetadata method supportsResultSetConcurrency
returns wrong result on network client

The DatabaseMetaData method supportsResultSetConcurrency erroneously
returns false on the network client for all arguments combination. The
embedded client returns correct results.

Patch contributed by Dag H. Wanvik <Dag.Wanvik@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382319 13f79535-47bb-0310-9956-ffa450edef68"
502d66777ef7af9c8863d91bb37e3bc9dfdff685,"Dyre's patch for DERBY-924: Implementing new JDBC4 method for embedded case, DatabaseMetadata.getFunctions()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382379 13f79535-47bb-0310-9956-ffa450edef68"
4657698cabe7e5bebd0830837abbaf0cf314afdc,"DERBY-997 Fix ClassCastExceptions for queries containing aggregates when executing in application servers
or other class loading environments where the thread context loader provides another path to the derby engine code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382450 13f79535-47bb-0310-9956-ffa450edef68"
3374162dbaa90f2fce6d32a1b3c45cd6113f9ba5,"DERBY-1071 submitting on behalf of Sunitha Kambhampati.

Derby passes the user in a connection request as is; to the authenticateUser method. Thus if user attribute value is delimited with quotes, the userName in authenticateUser will also be delimited. Mentioned this explicitly in the javadoc.

Javadoc change only.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382502 13f79535-47bb-0310-9956-ffa450edef68"
e98f05a988e964f182d659cf244e6f985b978d6b,"Apply javadoc fix to phase II checkin for DERBY-805.

Submitted by Army Brown(qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382563 13f79535-47bb-0310-9956-ffa450edef68"
5dac7c66da34a4890e9713a97e131865abbe9550,"DERBY-444 Add a class in the test area memory/ConnectionHandling.java that pushes the
limit on obtaining connections once an out of memory siutation is hit.
Not added as a real test yet, just code that could form the basis of a test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382564 13f79535-47bb-0310-9956-ffa450edef68"
7badb64854813973c2bb4acc386e7ac66a05e05c,"DERBY-444 Add a class in the test area memory/ConnectionHandling.java that pushes the
limit on obtaining connections once an out of memory siutation is hit.
Not added as a real test yet, just code that could form the basis of a test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382565 13f79535-47bb-0310-9956-ffa450edef68"
499e2763b6829bf719193e79adaad4e999e38902,"DERBY-444 Try to isolate out of memory exceptions from the engine in the ConnectionHandling test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382578 13f79535-47bb-0310-9956-ffa450edef68"
d5cbbde5646e4a70e59890ab9c161c40f6a255b5,"DERBY-444 add count to ConnectionHandling test output of how many
of the successfully opened Connections were closed due to
database shutdown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382588 13f79535-47bb-0310-9956-ffa450edef68"
8038b0ad2dde24cde4e4f6af200c19d2fd58ba36,"DERBY-444 minor improvements to memory/ConnectionHandling code to
minimize object creation outside Derby.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382611 13f79535-47bb-0310-9956-ffa450edef68"
c6390ccc7df7636645c1bd13baef88c88df5ef77,"DERBY-948: Miscellaneous ResultSet methods added by JDBC 4

Implemented new methods defined by the JDBC 4 spec:

  * ResultSet.getHoldability()
  * ResultSet.isClosed()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382710 13f79535-47bb-0310-9956-ffa450edef68"
b11264d5024170c51b3cb9e441382628a474ca62,"DERBY-965: DatabaseMetadata method supportsResultSetConcurrency
returns wrong result on network client

This patch (derby965b-v1) updates the master for phaseTester.java.
This test is not part of derbyall and the master must be manually
compared with the output of the phase tests, cf description in
DERBY-573.

phaseTester runs metadata_test.java as part of its work, so the master
needs to be updated whenever metadata_test.java changes (as this issue
does).

Note: Even with this patch, phaseTester when run as described,
failed. I noticed the following:

- the shell script driving it is WIndows specific ("";"" as classpath
  delimiter)

- in the soft upgrade phase, the metadata test fails (table not
  found), when performing a stored procedure: 'CALL
  SYSIBM.SQLCOLPRIVILEGES' (in odbc_metadata#getMetadataRS).
  
This patch lessens the diff between the master and the ""current""
output, though, so i think it should be committed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382759 13f79535-47bb-0310-9956-ffa450edef68"
50d0853a51c39f7620a4ac019041ca7cf056f361,"Checkin Anurag's patch for DERBY-819: Triaging of SQLExceptions into new JDBC4 subclasses.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382906 13f79535-47bb-0310-9956-ffa450edef68"
7a20f8d1dfc1f9e2b38fc336bc32fc4562bf4aad,"DERBY-1055 Security.AccessControlException in client under SecurityManager when trying to connect using EUSRIDPWD security mechanism

Contributed by Sunitha Kambhampati

Patch
- removes the unnecessary addProvider call in EncryptionManager that was causing
the Security.AccessControlException.
- enables test to connect using EUSRIDPWD mechanism and updates necessary masters




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382911 13f79535-47bb-0310-9956-ffa450edef68"
41c14e50ae33fe19b361f974d9f79143486c8751,"DERBY-618 Make the client driver connection URL work when spaces are in the URL.

Contributed by Deepa Remesh

 Attaching a patch 'derby-618-v2.diff' which includes code change and a test for this issue. Patch does the following:

* Modifies ClientDriver.java - removes the space separator in the call to nextToken in tokenizeDatabase method. This allows use of URL containing database name with spaces.

* Adds tests to jdbcapi/checkDriver.java for an url with spaces in database name. Since embedded and jcc driver work with spaces, I added this test for all three frameworks. Test verfies that the specified database gets created.

* Modifies master files for the test

Ran derbyall with Sun JDK 1.4.2 on Windows XP. I also ran jdbcapi/checkDriver.java with j9 vms. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382917 13f79535-47bb-0310-9956-ffa450edef68"
98414a9b92ec3f043f132da557b35833063ad95e,"DERBY-654, committing on behalf of Sunitha Kambhampati.  

This change disables the test from running in the j9 environment, so that
regression test don't fail.  The bug remains open, and can be intermittently
reproduced in the environment described in DERBY-654.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382931 13f79535-47bb-0310-9956-ffa450edef68"
ab10884c379746c8afbaafffb3845883681bc657,"DERBY-1007: Fix optimizer to make subqueries return correct cost estimates.

More description of the changes:
1. Added the ""prepForNextRound()"" method that was part of OptimizerImpl
to the Optimizer interface since that seemslike an appropriate place for it.

2. Added a single line to OptimizerImpl.prepForNextRound() to reset the ""bestCost""
for the current round of optimization. Note that I do _not_ reset the ""foundABestPlan""
 variable nor the ""bestJoinOrder"" array. This is because it's possible that a 
""best join order"" may not exist for the current round, in which case the optimizer
 must know whether or not it found a best join order in a previous round
 (foundABestPlan) and if so what the corresponding join order was (bestJoinOrder).
 That information is required so that a valid query plan can be generated after
 optimization is complete.

3. After making the above changes, I noticed that the optimizer cost
estimates were not always showing up when logQueryPlan was set to true--they 
were sometimes being printed as question marks to represent ""Infinity"". The reason 
for this was that most of the code in the ""modifyAccessPaths"" phase of query 
compilation uses the estimates as they sit in the ResultSetNode.costEstimate 
field--which, for nodes above subqueries, will hold the ""bestCost"" estimates for 
the most recent plan chosen by the OptimizerImpl for the subquery. Since I am now 
(with DERBY-1007) resetting the ""bestCost"" variable at the start of every round,
 it's possible that ""bestCost"" will hold an estimate that has been ""reset"" to 
Double.MAX_VALUE. This can happen if it was reset (in prepForNextRound()) and 
then no valid join order was found for the current round (ex. if no valid join
 order exists or if there was an optimizer ""timeout""). That in turn meant that 
the ""costEstimate"" field for nodes above the OptimizerImpl would have been ""reset"" 
as well, and hence the ""infinity"" value (i.e. question mark) was showing up in the 
logged query plan. So I had to find all nodes that use ""costEstimate"" during 
modifyAccessPaths() and update them to use the final, best cost estimate for 
that node (instead of just using the most recent value of ""costEstimate""). This 
touched several of ResultSetNode's subclasses, but the diff in most cases is just 
a few lines. The exceptions are FromTable, SelectNode, UnionNode, 
IntersectOrExceptNode, and JoinNode, where I added new ""getFinalCostEstimate"" methods
 to correctly figure out the final cost estimate based on the final estimates for 
child nodes, as appropriate.

4. The current optimizer ""timeout"" mechanism is based on the value in 
OptimizerImpl.bestCost. Since I'm now resetting that value at the start of every
round, the timeout mechanism had to be changed in order to preserve its current 
functionality while removing the dependency on bestCost. So I've added a new 
variable, timeLimit, to OptimizerImpl that plays the same role w.r.t optimizer
 ""timeout"" that the old bestCost value did.

5. Updated master/derived.out to match new behavior. There's one query in 
derived.sql that is affected by this issue. Before these changes the optimizer 
thought one join order B was cheaper than another join order A and so it chose 
to generate join order B. With these changes, though, it now (correctly) sees that 
join order A and join order B are equivalent, so it just goes with join order A. 
This difference manifests itself in the ordering of two rows in the result set for
that query--so I've updated the masters accordingly.

6. Added a new, simple test case specific to DERBY-1007 to lang/subquery.sql, and 
updated the master file accordingly. The test case is the same one mentioned in the 
description for this issue.

Submitted by Army Brown (qozinx@sbcglobal.net)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382935 13f79535-47bb-0310-9956-ffa450edef68"
58723057c71051fb48ba3998db9b732ce926a9a7,"DERBY-805: Implement join-predicate push down into Unions.

This Phase III patch builds on two earlier patches already submitted.

Implement pushdown by pushing optimizable predicates onto both sides of UNION.
If either side fails to push the predicate, stop pushing this predicate.

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382940 13f79535-47bb-0310-9956-ffa450edef68"
e2579350317491bc3e0ea179696a275d931c7a09,"DERBY-1073: Reset optimizer timeout for subqueries after new scoped predicates
are pushed into it for next round of evaluation.

If we have predicates that were pushed down to this OptimizerImpl from an
outer query, then we reset the timeout state to prepare for the next round
of optimization.  Otherwise if we timed out during a previous round and then
we get here for another round, we'll immediately ""timeout"" again before
optimizing any of the Optimizables in our list.  This is okay if we don't
have any predicates from outer queries because in that case the plan we find
this round will be the same one we found in the previous round, in which
case there's no point in resetting the timeout state and doing the work a
second time.  But if we have predicates from an outer query, those predicates
could help us find a much better plan this round than we did in previous
rounds--so we reset the timeout state to ensure that we have a chance to
consider plans that can take advantage of the pushed predicates.

Submitted by Army Brown (qozinx@sbcglobal.net)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382953 13f79535-47bb-0310-9956-ffa450edef68"
1b82b00c4ed4ecea05f353a7b573ef58adbfb446,"DERBY-928: Add new canons for testSecMec for JCC 2.6 and exclude two tests from remote testing for now.

Committed for Sunitha Kambhampati <ksunithaghm@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@382975 13f79535-47bb-0310-9956-ffa450edef68"
ba8d0266839882c5e0115a11318e21c02a448307,"DERBY-805: test fix to prevent truncating query plans in predicatePushdown.sql

Committed for Army Brown <qozinx@sbcglobal.net>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383062 13f79535-47bb-0310-9956-ffa450edef68"
8d6d99d428483ef302af894848cbf29658d7c60e,"DERBY-1060: ResultSet methods should throw exception when the
ResultSet is closed

The patch adds calls to checkIfClosed (embeddded) or
checkForClosedResultSet (network client) in the ResultSet methods
which don't check whether the ResultSet is closed. It also adds a test
case to jdbc4/TestResultSetMethods.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383394 13f79535-47bb-0310-9956-ffa450edef68"
c049abf49e4f3c376ea4aa8f920ef3925f76cb33,"DERBY-1070: add tests for holdable SUR

Patch contributed by Andreas Korneliussen <Andreas.Korneliussen@Sun.COM>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383550 13f79535-47bb-0310-9956-ffa450edef68"
d86eb82d84c0dcc5e82a2dd4e0f5ae72a1a17630,"Add some javadoc comments to methods in ContextService.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383587 13f79535-47bb-0310-9956-ffa450edef68"
41613010b6ad202395a3f8d2e5e75104dddb4533,"Remove unused code in ConnectionChild.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383592 13f79535-47bb-0310-9956-ffa450edef68"
93fa39e6571bef47d292ce133103ed0e1f3d1815,"DERBY-467 Reduce the visibility of some methods in classes for EmbedConnection.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383595 13f79535-47bb-0310-9956-ffa450edef68"
9ae1fac0386f00b2d7be844165b4d797c952f5a6,"Call ContextService.stop() correctly as a static method.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383597 13f79535-47bb-0310-9956-ffa450edef68"
824ca0bbad73f1ca947785ca7a543f920629a101,"DERBY-467 Reduce visibilty of context implementation classes and their methods.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383600 13f79535-47bb-0310-9956-ffa450edef68"
ec8172b3e450e075324f7eebdb8d9487b0207a63,"Javadoc fixes related to DERBY-623
Contributed by Kristian Waagan Kristian.Waagan@Sun.COM


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383606 13f79535-47bb-0310-9956-ffa450edef68"
0ce6b779ae61d5787e6e4fd787041b37c058f9eb,"DERBY-670 - improve automatic space reclamation of long rows and long columns.

This patch provides a non-upgrade solution to the problem.  It uses existing
row and column format information to determine at delete time if the row or
column is ""long"".  If so it schedules a post commit reclamation immediately
rather than waiting for all rows on a page to be deleted.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383663 13f79535-47bb-0310-9956-ffa450edef68"
a138885db84ee01495b295e6546e17b9c70cd6a0,"Added my key


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@383703 13f79535-47bb-0310-9956-ffa450edef68"
e4b1c4422f5db86127ea207c175f93b581cafeea,"DERBY-975: Catch exception but don't call getMessage on it in 1.3 VMs. Fixes a canon diff in
updatableResultSet.java on ibm131.

Committed for Fernanda Pizzorno <Fernanda.Pizzorno@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384061 13f79535-47bb-0310-9956-ffa450edef68"
7ae64943596267a841fa127cca536f9be26635a7,"DERBY-937

Fixing typo in the no timeout setting for this test.  it should have
been derby.optimizer.noTimeout=true not derby.optimize.noTimeout=true.
Unfortunately did this did not fix the diffs I am seeing on my machine, but
it clearly makes sense for this test to set no timeout to eliminate the
variance of running this test on a number of different speeds of hardware.
Maybe this change will help others, at least it will eliminate one variable
as we continue to track down the cause.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384083 13f79535-47bb-0310-9956-ffa450edef68"
8750f3124b669ae2f0c4c8fde74c2d5445348388,"DERBY-1063: Add derbyrun.jar - new jar file to execute tools with java -jar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384101 13f79535-47bb-0310-9956-ffa450edef68"
20445e3ca0ba5a60c960aff174236a5cd859d5c5,"DERBY-616, committing on behalf of Suresh Thalamati

- Added a missing privileged blocks for I/O call in StreamFileContainer.java ,
this class is used by the sort during index creation ..etc.

-- Enabled some of the tests which were not running under security manager
earlier because of this bug to run by default with security manager.

-- removed the additional permissions from the derby test policy file
that were added earlier to avoid this bug for some test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384282 13f79535-47bb-0310-9956-ffa450edef68"
dd7d579b5d0f0ac29b099471cf355031afda8def,"DERBY-210 Network Server will leak prepared statements if not explicitly closed by the user until the connection is closed 


Contributed by Deepa Remesh

----------------------------------------------------------------
Summary of patch: 'derby-210-patch5-v1.diff'
-----------------------------------------------------------------
1. Eliminates the below references to PreparedStatement objects by using WeakHashMap instead of LinkedList. When there are no other references to the keys in a WeakHashMap, they will get removed from the map and can thus get garbage-collected. They do not have to wait till the Connection object is collected.
       - 'openStatements_' in org.apache.derby.client.am.Connection
       - 'CommitAndRollbackListeners_' in org.apache.derby.client.am.Connection

2. Updates the following comment for openStatements_:
// Since DERBY prepared statements must be re-prepared after a commit,
// then we must traverse this list after a commit and notify statements
// that they are now in an un-prepared state.
final java.util.LinkedList openStatements_ = new java.util.LinkedList();

In the code, I did not see this list being traversed after a commit to re-prepare statements. Also, I think this is not needed since Derby does not require re-prepare of statements after a commit. Currently, this list is used to close all open statements when the originating connection is closed.

3. Removes all ResultSets from HashTable 'positionedUpdateCursorNameToResultSet_' in SectionManager. Only result sets of positioned update statements were being removed from this hashtable whereas all result sets were added. Because of this, client driver was holding on to result sets and statements even after rs.close() was called.

4. Modifies the test jdbcapi/derbyStress.java to run the test for derby-210. The test was checked in as patch2 but disabled for client framework.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384331 13f79535-47bb-0310-9956-ffa450edef68"
af3ca9177f56fea85ef55dbd2874834d8b4ff7d3,"DERBY-444 Handle out of memory errors when embedded opening connections. Provide some
initial framework that sets low memory water marks for an operation and fails that operation
until free memory is above that mark or five seconds have elapsed.
See java/engine/org/apache/derby/iapi/services/memory/LowMemory.java for more details.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384605 13f79535-47bb-0310-9956-ffa450edef68"
31083414fafa45e3af2047fc58aec1f1a316b304,"DERBY-1042: committed on behalf of Suresh Thalamati

I could not reproduce this problem on my machine. By looking at the code I
found backup is getting unblocked before the post commit work is done.
This may cause the error that is reported, if the jar files to copied to the
backup is deleted by the post commit. Attached patch unblocks the backup
only after the post commit work that is schedules to run in the same
transaction is done. While scanning the code for this problem, I also noticed
couple of other small issues, this patch addresses them also.


DERBY-1042:

-- unblock the backup only after the post commit work to be done on the same
transaction is complete.
-- when backup is in progress drop stub files are not deleted during
checkpoint. These are necessary to perform recovery starting from the
backup checkpoint.
-- synchronized getContaineNames() that gets the containers to be written to
the backup. This method need to be synchronized so that other privileged
actions does not run in parallel and vice versa.

-- Modified the OnlineBackupTest1.java and OnlineBackupTest3.java tests to
abort if there is a error during the backup instead of waiting incorrectly
for the failed backup to complete forever.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384661 13f79535-47bb-0310-9956-ffa450edef68"
8c78a280b5bc95eb722d4e48cb4883d283747ca9,"DERBY-947: Miscellaneous PreparedStatement methods added by JDBC4

As described in the JDBC 4 spec sections 13.2 and 3.1.

This involves building support for JDBC4 methods added to
PreparedStatement and not addressed by other JIRAs: isPoolable() and
setPoolable().

Patch contributed by Francois Orsini.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384753 13f79535-47bb-0310-9956-ffa450edef68"
913815a172bd5a31a5f0dc4f7e1c3fe0e7138aea,"DERBY-1095 (partial) Ensure on a close connection/session contexts are popped off the
context manager. This ensures that references to database wide objects
are not maintained after a close connection.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384900 13f79535-47bb-0310-9956-ffa450edef68"
e20025675c32f437ffbdc3fb0974dc4e8158a304,"DERBY-956: prevent OutOfMemoryError on certain platforms caused by revision
370059

Committed for Deepa Remesh <dremesh@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@384946 13f79535-47bb-0310-9956-ffa450edef68"
7881ae5d8cd7853a1fb219629f6dfce7f75c163a,"Fix modules.properties for JDBC 4.0 driver to correctly require JSE 6, constant 7 in derby.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385004 13f79535-47bb-0310-9956-ffa450edef68"
2c35cc04db3d3532d494f6b71b8b0833abc628d6,"Clean up dblook.java to make protected methods private to clean-up the published javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385006 13f79535-47bb-0310-9956-ffa450edef68"
b7df3e855e04231d28c1f5177b776f42e0c2e8bf,"DERBY-1095 (partial) Ensure DataDictionaryContexts are popped off the stack
when the connection/session is closed. Cleanup unused code of nested DataDictionaryContexts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385106 13f79535-47bb-0310-9956-ffa450edef68"
63170fc75b1865a297b478ea3fd8410966f74613,"DERBY-970 (partial): Add new metadata methods to network client driver

Attaching patch derby-970-part1-v1.diff. This patch makes the JDBC4
database metadata test (jdbc4/TestDbMetaData.java) also test the
client driver. Currently, none of the new metadata calls are
implemented on the client, some of them even throw
AbstractMethodError. The canon is updated accordingly.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385157 13f79535-47bb-0310-9956-ffa450edef68"
694fc080d936c81548022c8dd43fa75ec9bef634,"DERBY-1061: SqlException while fetching message results in recursive
calls between SqlException.getSQLException and Sqlca.getJDBCMessage

Don't convert SqlException to SQLException when fetching of error message
in Sqlca.getJDBCMessage() fails.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385291 13f79535-47bb-0310-9956-ffa450edef68"
3221ff3bde742da963dc3da841157ad0a92e0402,"DERBY-1102 (partial) Remove triggers that only display trigger context information
since this is no longer part of the api. No need to rewrite any of the test cases
as they are not applicable for the triggers that Derby supports.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385376 13f79535-47bb-0310-9956-ffa450edef68"
962234bf7fdbf491281d91bccb30bbadc005ea72,"DERBY-1102 (partial) Remove application code that printed the trigger information using
non-public apis.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385377 13f79535-47bb-0310-9956-ffa450edef68"
f6f8e10946122b0fe70625d1361906c4ecdca204,"DERBY-1102 (partial) Remove old unused replication related methods in test code Triggers.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385379 13f79535-47bb-0310-9956-ffa450edef68"
648b4c120a40650b3692978640127eea94732ca6,"DERBY-1102 (partial) Remove unused code in Triggers.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385383 13f79535-47bb-0310-9956-ffa450edef68"
9a55713e1f824806b1d5fa77b1cc1b3974fdea5e,"DERBY-1102 (partial) Remove test case of use of stale TriggerExecutionContext in triggerGeneral.sql
because applications no longer have access to the TriggerExecutionContext.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385389 13f79535-47bb-0310-9956-ffa450edef68"
5a50776e5a662bd50f9b6b0f79ebf9cfd09b3413,"DERBY-1095 (partial) Ensure StatementContexts and CompilerContexts are popped from
context manager on a session close.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385569 13f79535-47bb-0310-9956-ffa450edef68"
0c13195ec16e6e2b3e82c0157601a83c58358049,"DERBY-1095 (partial) Clean up close methods on EmbedResultSet, mark the ResultSet
as closed (isClosed=true) once it discovers its Connection is closed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385570 13f79535-47bb-0310-9956-ffa450edef68"
50ba36bedbdde5584d4b40a9d373ed17009f4bc4,"DERBY-464: Continuation of previous Grant and Revoke checkins. This changes
implement:

1) Schema authorization checks: Only DBA can create a schema with authorization
of another user and regular non-DBA users can only create a schema that matches
their authorizationID in sqlStandard mode.

2) Make database owner authorizationId owner of all system schemas. This is
done in both sqlStandard mode or in legacy mode during database create time.
Need work to test hard upgrade to change system schema owner name to authId
of user doing full database upgrade.

3) Disable switching to sqlStandard mode in soft upgrade mode for 10.2. Since
Grant/Revoke is not enabled in soft upgrade mode in 10.2 release, sqlStandard
mode should be disabled in soft upgrade mode.

4) Disable all authorization checks for DBA user. This includes all object
permission checks and allowing DBA to grant/revoke any privilege on any database
object.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385610 13f79535-47bb-0310-9956-ffa450edef68"
7ddacaaa93272ffbada9d96d3c66cfd22f7e61a3,"fixing eol propset on some store tests files.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385674 13f79535-47bb-0310-9956-ffa450edef68"
25dfe8ce81dec305d5a8fcd9c0c6dee3f433efdf,"DERBY-1080: Connection reset when using security mechanism=EUSRIDPWD results in protocol error

Patch contributed by Sunitha Kambhampati

For eusridpwd case, the client sends the encrypted userid and password
sectkns as part of SECCHK. The protocol error was happening because we
only read the 2 sectkns if the database.decryptedUserId ,
database.decryptedPassword is null, otherwise we think we have already
read this. Thus on a connection reset,if the decryptedUserId and
decryptedPassword are not reset, server assumes we have seen more SECTKN's
and thus we throw error too many codepoints.

Patch adds
-- code to reset the security mechanism related variables on a connection re-use
-- regression test to testSecMec.java 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385857 13f79535-47bb-0310-9956-ffa450edef68"
456789d0a44cff4d5064d7ed646bb4aaf42b945e,"DERBY-623 Change BaseMonitor to use privileged blocks for reading derby.debug.* system properties
and also removing the workaround permissions granted in 'derby_tests.policy'.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385859 13f79535-47bb-0310-9956-ffa450edef68"
dd1bd9187c727cc81ee3261c58f46b9b4d0b1d4d,"DERBY-1095 (partial) Mark an EmbedStatement as inactive once it sees that its connection has been closed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385932 13f79535-47bb-0310-9956-ffa450edef68"
e1987c60c21312a7bd8ebd88a6e4b2cc0a8596a5,"This patch addresses following:

1) Remove parsing of EXTERNAL SECURITY clause. According to the lates
   functional specification of Grant & Revoke feature, this clause will not be
   implmented. It only had partial parsing support currently.

2) Fix javadoc warnings caused by Grant & Revoke work and other javadoc
   warnings too.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@385941 13f79535-47bb-0310-9956-ffa450edef68"
634980a352f3b12a306a16a549f2c687207d8f49,"DERBY-992: A corner case bug and missing optimization in
ScrollInsensitiveResultSet

a) For a scrollable, insensitive result set (read-only) which is
   empty, ResultSet#afterLast should have no effect, but erroneously
   sets the internal variable afterLast to true, so that a subsequent
   call to ResultSet#isAfterLast will return 'true' in the embedded
   client. It does not happen on the client driver, because it seems
   to do some double book-keeping for this case.

b) In ScrollInsensitiveResultSet#getNextRowCore and #getAbsoluteRow,
   there are missing checks will cause unnecessary read (attempts)
   from underlying result set even if end has been seen already.

Patch submitted by Dag H. Wanvik.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386068 13f79535-47bb-0310-9956-ffa450edef68"
dda56c6f054095d6acfb874dd92e419588f3fd40,"DERBY-1105 : Add master files for jdk16 run of derbyall.  Contributed
by Anurag Shekhar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386169 13f79535-47bb-0310-9956-ffa450edef68"
3adafeec1d6d8e33365bd2ef642905b7ed0ebaeb,"DERBY-1076  Test update to cleanup metadata tests in preparation for upgrade testing work.

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386176 13f79535-47bb-0310-9956-ffa450edef68"
59d98b89b4ec74d434a55cfd48959a24703c29d5,"DERBY-1115 : Add a shell-script test generator for internationalized
messages (client-side only).

This is the script that generates the test source code that is then
run to validate client-side internationalized mesages
A    tools/testing
A    tools/testing/i18nTestGenerator
A    tools/testing/i18nTestGenerator/genClient1.sed
A    tools/testing/i18nTestGenerator/genClient2.sed
AM   tools/testing/i18nTestGenerator/generateClientMessageTest.sh
AM   tools/testing/i18nTestGenerator/README


Moved the sanity package to the shared directory so that I could
use ASSERT in some shared code.
M    java/engine/org/apache/derby/iapi/services/sanity/SanityManager.java
D    java/engine/org/apache/derby/iapi/services/sanity/SanityState.tmpl
M    java/engine/org/apache/derby/iapi/services/sanity/AssertFailure.java
A    java/shared/org/apache/derby/shared/common/sanity
AM   java/shared/org/apache/derby/shared/common/sanity/SanityManager.java
A    java/shared/org/apache/derby/shared/common/sanity/SanityState.tmpl
AM   java/shared/org/apache/derby/shared/common/sanity/SanityState.java
AM   java/shared/org/apache/derby/shared/common/sanity/AssertFailure.java
M    build.xml
M    tools/ant/properties/dirs.properties

Modified MessageUtil so that it ASSERTs that the number of parameters
passed in to formatMessage() actually matches the placeholders in the
message string.  Also modified the default message string so that it
is something I can look for in my test to tell me something went wrong.
M    java/shared/org/apache/derby/shared/common/i18n/MessageUtil.java

Found a bug by running the test, added a message id to the client
properties file
M    java/build/org/apache/derbyBuild/splitmessages.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386187 13f79535-47bb-0310-9956-ffa450edef68"
874cceede99684a29c12705e10b9f03112f84856,"Add and cleanup comments for ContextManager & ContextService to
correct and expand on how the mapping of current thread to current
context manager is handled. Some of the previous comments were incorrect,
also removed old commented out code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386205 13f79535-47bb-0310-9956-ffa450edef68"
e72bcdd38d7fe0f55b50b1d81595c49e440e6b2d,"DERBY-949: Clean up tests to use common method to get connection.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386216 13f79535-47bb-0310-9956-ffa450edef68"
61634ec37ecb99c1c518b05c7c1708451476bf81,"DERBY-1037: Fix lang/ShutdownDatabase.java in J2ME environment.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386218 13f79535-47bb-0310-9956-ffa450edef68"
4a95eeb45dd4ca5fd2db9c55031d4d8a0296a29c,"DERBY-434 DERBY-1052: Fix XA tests in remote server testing.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386221 13f79535-47bb-0310-9956-ffa450edef68"
b973d2c38bee7dc7a8f2452868e81f6f8662aae1,"DERBY-1119: Address NullPointerException while creating a schema when DumpParseTree is set and in SANITY mode.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386247 13f79535-47bb-0310-9956-ffa450edef68"
e3d18bd4a34f68de222f9ffe3f1a57850a0209f4,"Master update for 131 version of the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386248 13f79535-47bb-0310-9956-ffa450edef68"
d78ad2efcf4df15f78a0200b5ca314ec5eea943f,"DERBY-464: More checkins to implement Grant & Revoke functionality as defined
by functional spec. This round of changes address:

1) Adding schema creation privilege checks for implicitly created schemas as
well. Previous checkin addressed explicitly created schemas.
2) Disable grant/revoke operations on system tables or system routines not in
SQLJ or SYSCS_UTIL schemas. These objects should always be available for
SELECT or EXECUTE operations as approriate.
3) Add RoutinePermDescriptors during database creation for routines that can
be executed by public. Currently 5 routines have EXECUTE privilege to PUBLIC.
It should be possible to execute these routines on a new database.

Add functional tests to test each of these.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386283 13f79535-47bb-0310-9956-ffa450edef68"
f658f85d6ba2913c6d267deb1930f3ded81c8f4f,"DERBY-970 (partial): Add new metadata methods to network client driver

This patch implements the following new JDBC 4 DatabaseMetaData
methods in the client driver:

  - getRowIdLifetime() - returns RowIdLifetime.ROWID_UNSUPPORTED

  - supportsStoredFunctionsUsingCallSyntax() - returns true

  - autoCommitFailureClosesAllResultSets() - returns false

  - providesQueryObjectGenerator() - returns false

Canon for jdbc4/TestDbMetaData.java is updated to reflect that the
methods are implemented on the client.

New test cases added to TestDbMetaData:

  - try to execute a stored procedure using the escape syntax, and see
    if the success/failure corresponds to the value returned by
    supportsStoredFunctionsUsingCallSyntax()

  - open a holdable result set in auto-commit mode and, on the same
    connection, execute a query which causes SQLException. Check
    whether the result set is open or closed, and see if the state
    corresponds to the value returned by
    autoCommitFailureClosesAllResultSets()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386290 13f79535-47bb-0310-9956-ffa450edef68"
bec19ac39aaa118424f34fa9e54dfba8ecbdbabd,"Remove inadvertently committed SanityState.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386408 13f79535-47bb-0310-9956-ffa450edef68"
d3764401ef9a892fe6fe7e2bfc91cc4fa9e57b53,"DERBY-1067 - Submitted by Andreas Kornelliusen.   Adds scrollable,
updatable, insensitive result set tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386457 13f79535-47bb-0310-9956-ffa450edef68"
a5f9148bd0f53da995f1d4e6915b58caad1a5561,"DERBY-1071 submitted on behalf of Sunitha Kambhampati

javadoc fixes from the UserAuthenticator class.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386463 13f79535-47bb-0310-9956-ffa450edef68"
96c9b9f156687db1414e8c535b7cd4c3befb6796,"Address grantRevoke test failures and master updates.

1) Make grantRevokeDDL export table into extinout directory. (may be used for import later) and set useextdirs property.

2) Address test failures on J9 VM... Update master for grantRevokeDDL.sql for J9 and enable getting connection using DataSource to make the test run on J9.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386466 13f79535-47bb-0310-9956-ffa450edef68"
b350a56420f6c058daf752e377e3216a069321b7,"DERBY-919 : Add support for base classes for JUnit tests.  Contributed
by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386483 13f79535-47bb-0310-9956-ffa450edef68"
88ccad726ffd0bed7cdd24ba4fe804a6e0d9ca0f,"DERBY-962 Upgrade default security mechanism in client to use encrypted userid password if client can support it.

Contributed by Sunitha Kambhampati

1. If securityMechanism is explicitly specified in the connection request then client will not override it.
2. Dynamically figure out if the jvm in which the client is loaded, supports encrypted userid and
password security (EUSRIDPWD) or not and use this information to upgrade to a more secure default
security mechanism.
3. Thus if user has not specified the security mechanism, in that case the client will try to see if
it can upgrade the security mechanism and use the new upgraded security mechanism for connection to the server.





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386501 13f79535-47bb-0310-9956-ffa450edef68"
50ff043056ef3322f7e23f6f6a69090a02dff823,"DERBY-1117 - Fix bug in SqlException where we weren't chaining exceptions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386710 13f79535-47bb-0310-9956-ffa450edef68"
a30fa86ac51bb45a168fb144818f601aa13c14ad,"DERBY-1126 : Modified svn:ignore property on the sanity directory
to ignore SanityState.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386731 13f79535-47bb-0310-9956-ffa450edef68"
73d724c67de6b4094f8639b5a620557c500cb959,"DERBY-422: Contribute toursdb demo database to Derby.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386767 13f79535-47bb-0310-9956-ffa450edef68"
3896fddd22497e5fe511d4129c0fe4e576f149fb,"DERBY-1059 : Fix issues around calling stored procedure with out params.
Submitted by Anurag Shekhar.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386773 13f79535-47bb-0310-9956-ffa450edef68"
15a32b6c08c0c0e00603fcbc15ba1d946ec88a3d,"Add cleanup for derbyStress to allow for remote testing

Contributed by Myrna Van Lunteren



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386800 13f79535-47bb-0310-9956-ffa450edef68"
527d377fd95738cb428326863a07d2f5ef09ec8e,"Commit Anurag's patch for DERBY-942: wiring JDBC4 Ease-of-development calls up to the default QueryObjectGenerator

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386861 13f79535-47bb-0310-9956-ffa450edef68"
5ec85106e4169936dc38bd4153b9f13ae5e8e08c,"DERBY-464: Continuation of Grant & Revoke feature checkins. This batch of changes address:

1) Introduce new property derby.database.sqlAuthorization to turn on SQL standard authorization model. Default authorization is still Derby legacy authorization model, with NO support for GRANT/REVOKE.

2) If this property is set to TRUE as system property, all new databases get created with sqlAuthorization to TRUE. If this property is set at a database level, authorization mode would be switched to SQL standard mode at next database boot time.

3) Remove all changes made to defaultConnectionMode property. This property was the previous way to enable GRANT/REVOKE.

4) Disable any changes to sqlAuthorization property once SQL standard authorization is enabled. This is done to prevent switching back to Derby legacy authorization model.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386867 13f79535-47bb-0310-9956-ffa450edef68"
8217319d0e509f646a59f16671354108f4cea03c,"Add toursdb.insertMaps to derbyTesting.jar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386934 13f79535-47bb-0310-9956-ffa450edef68"
c9af978764dfaebe27501b5c68f82eeb1f7e2e91,"DERBY-1128: jdbc4/TestDbMetaData.java fails because of changes in
SQLException text

Fixed by updating canon.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@386984 13f79535-47bb-0310-9956-ffa450edef68"
e6a6f140b772965306de72c1501fe16e9aca491b,"DERBY-962 Upgrade default security mechanism in client to use encrypted userid password if client can support it.

Fix some residual javadoc issues

Contributed by Sunitha Kambhampati



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387101 13f79535-47bb-0310-9956-ffa450edef68"
5f9f54905190771b85b42dbf25c097e586a28580,"Fix casing of loadCITIES.sql


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387134 13f79535-47bb-0310-9956-ffa450edef68"
2efac2871bec47e45e5ddc2d7eac61ddf7572d88,"DERBY-464: Submit initial changes to make dblook report GRANT statements in sqlAuthorization mode.

Need to add or change existing test to use sqlAuthorization database.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387160 13f79535-47bb-0310-9956-ffa450edef68"
fc6efec2437662b90455a6ec03f7d00e8f64efd7,"DERBY-1014: Make tests less sensitive to pre-fetching

Attached a patch (DERBY-1014-v1.diff) which modifies tests in
preparation for DERBY-822. There are two types of changes:

  1) Invoke ResultSet.next() to expose error even when the driver
     isn't pre-fetching data.

  2) Filter out some of the run-time statistics before comparing with
     the canon.

lang/wisconsin.java:

  * Added patterns to the sed file. Cursor names and some of the
    run-time statistics are filtered out.

  * Canons for DerbyNet and DerbyNetClient were deleted since they are
    no longer needed. Each of these files is 1.5M, so the diff is
    huge.

lang/scrollCursors1.sql:

  * Added patterns to the sed file. Number of rows seen and number of
    reads from hash table will be filtered out.

jdbcapi/parameterMetaDataJdbc30.java:

  * Added a call to ResultSet.next() to provoke an error in a test
    case for DERBY-44 regardless of framework/pre-fetching.

jdbcapi/resultset.java:

  * Don't print column headers until one row is successfully retrieved
    (achieved by calling ResultSet.next() earlier).

jdbcapi/setTransactionIsolation.java:

  * Added a call to ResultSet.next() to provoke a timeout regardless
    of framework/pre-fetching.

  * Added patterns to the sed file. Filtered out number of pages
    visited, number of rows qualified/visited etc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387214 13f79535-47bb-0310-9956-ffa450edef68"
8a059c40f9d7d794fda507eb23e663ce2f6bc031,"DERBY-1095 Cleanup ContextManagers created during database boot.
Add some comments and synchronization to ContextService.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387264 13f79535-47bb-0310-9956-ffa450edef68"
747f26177c053805a9b9054b3332cba476dbd514,"DERBY-538 (partial) Add a getURL method to the StorageFile interface of the virtual
file system layer. This will allow the standard URLClassLoader to access
jar files stored in a database, regradless of the file system implementation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387324 13f79535-47bb-0310-9956-ffa450edef68"
b8a642385504f4c540c8be204fe8d71330548b8a,"Ignore intermediate build files for toursdb


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387448 13f79535-47bb-0310-9956-ffa450edef68"
aeb4b1025cea3da942497a17969294823a3fbfbe,"DERBY-668: SysInfo does not print the right info in class loader scenarios

This change modifies the sysinfo tool to print additional information about
the classes and jars that it examines. For each class that sysinfo examines,
it now calls getProtectionDomain().getCodeSource() to retrieve information
about the source of that file, which might be: an entry in the application
classpath, an entry in a class loader location list, a jar fetched due to
being listed in the manifest entry of another jar, a standard extension
in the JRE's extensions directory, a jar installed into the application
server, or any of various other possibilities.

The additional information about the class's origin is displayed in the
sysinfo output.

Note that when sysinfo runs under a Java security manager, it may need
special permissions to access this additional information, including the
permission to read the java.class.path property, and the permission to
call getProtectionDomain on a class. If sysinfo is not granted these
permissions, it will display an error message about the security problem
in place of displaying the class origin information.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387599 13f79535-47bb-0310-9956-ffa450edef68"
702cd3ad6b0f21f0137e27cc5639a84559d43805,"Add release note for DERBY-668 to CHANGES

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387602 13f79535-47bb-0310-9956-ffa450edef68"
37952cfd60492ee3705c9d6231eb3c7d28a3b346,"DERBY-993: Enable running junitTests in J2ME environments.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com> and
Andreas Korneliussen <Andreas.Korneliussen@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387605 13f79535-47bb-0310-9956-ffa450edef68"
cd3bb2ae182c40923da623585d7325fb4d4c64be,"DERBY-435 -  jdbcapi/checkDataSource30 should test client DataSources

Update test with comments including Jira issues for excluded  cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387611 13f79535-47bb-0310-9956-ffa450edef68"
525dd0fd9a139a8232cf72dd081192f99b761c03,"Fix entry for SqlExceptionTest in derbynetclientmats.runall


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387637 13f79535-47bb-0310-9956-ffa450edef68"
21350fd74c6aee8422e4afbbe3a5c93c34081748,"Checkin patch for DERBY-1133: rototills the jdbc4 tests to conform to customary derbyall practices.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387640 13f79535-47bb-0310-9956-ffa450edef68"
10e7778476d70c34d9db1dc9399e50cdbe08468f,"DERBY-428: PreparedStatement.executeBatch hangs if batch is too large

This patch contains a server-side change, a client-side change, and a test.

The server-side change is to call ensureLength() in DDMWriter.startDDM().
The DDMWriter working buffer is designed to dynamically grow to accomodate
the data being written; this dynamic growth is implemented using a coding
rule which requires that all DDMWriter internal routines must call
ensureLength to communicate the buffer size requirements prior to writing
bytes into the buffer. StartDDM was missing the call to ensureLength.

The client-side change is due to the fact that DRDA imposes a hard limit
of 65535 elements in a single correlated request because the correlation
identifier is a two byte unsigned integer. Prior to this change, the
correlation identifiers would wrap around when we added the 65536th
element into the batch, which breaks the DRDA protocol rule that requires
correlation IDs in a single request be always increasing. This change
causes the client to throw an exception if it is asked to execute a batch
containing more than 65534 elements. The reason for the number 65534,
rather than 65535, is that the value 0xFFFF is reserved for special use.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387895 13f79535-47bb-0310-9956-ffa450edef68"
fc25cc0e6a5c03f15ddcedd78773c914efae7637,"DERBY-1125 : Revert putting JVMInfo into the shared area, as it causes
jar sealing issues


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387905 13f79535-47bb-0310-9956-ffa450edef68"
7cb20d8ee427cc3e33a1f5c4cc1b55219b19de9c,"As part of DERBY-1133, remove vacuous test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@387925 13f79535-47bb-0310-9956-ffa450edef68"
8ce90e7fefc7333ba3f697da743ebcc92b28ea4c,"DERBY-1075 - Combine the script and the test available for upgrade testing into a java test

Intial checkin.  This is a work in progress.
Contributed by Deepa Remesh 

 Attaching a patch 'derby-1075-v1.diff'. This patch is based on the draft patch with some additional changes.

Summary of patch:

1. Creates a class UpgradeTester which does the following:

* Creates two class loaders using the jar locations provided for old and new release
* Switches between these two class loaders to run the different upgrade phases with old or new release.
* This class can be used to write tests for upgrades from different releases.

2. Adds a new test Upgrade_10_1_10_2 which uses UpgradeTester to test upgrade from 10.1 to 10.2. This test has not been added to any suite. Till the jars from previous release are available in svn, the test has to be run manually using the command:
java org.apache.derbyTesting.functionTests.tests.upgradeTests.Upgrade_10_1_10_2 <location of old jars> <location of new jars>
e.g, java org.apache.derbyTesting.functionTests.tests.upgradeTests.Upgrade_10_1_10_2 C:\derby\10.1\lib C:\derby\trunk\lib

Also, there are some issues in running the test using the harness because of use of security manager. These are mentioned in http://www.nabble.com/Upgrade-test-and-security-permissions-p3517019.html. Any suggestions to resolve these are welcome. I am planning to open separate sub-task for making this test run with a security manager.

3. Creates a new package upgradeTests under org.apache.derbyTesting.functionTests.tests. This package is for UpgradeTester class and the individual upgrade tests.

4. Adds a master 'Upgrade_10_1_10_2.out'. I have tried to reduce the diffs by doing version check in the code and removing reference to local machine paths. Still, there are few more diffs. I am planning to look at these once this patch is reviewed/committed.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388051 13f79535-47bb-0310-9956-ffa450edef68"
5781f54d8f0cf7f4fb049878f4ec849cffffc91b,"DERBY-1095 (partial): Closing an embedded connection does not seem to
close associated EmbedStatements

This patch makes EmbedResultSet.isClosed() return the correct result
when the connection is closed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388093 13f79535-47bb-0310-9956-ffa450edef68"
44e4f27360c9d39bad7233ba1a3243cb033076bd,"DERBY-1058 derby fails supporting holdable scrollable resultset: ERROR XSCB8: The btree conglomerate 1,141,037,436,752 is closed.

Submitted by Andreas Konreliussen



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388100 13f79535-47bb-0310-9956-ffa450edef68"
d99b5c9fc11b125ef45db14ee3c24b5ff7cdd98f,"DERBY-1101 (partial): ResultSet.getHoldability will return incorrect
value when the ResultSet is obtained from a procedure call

Adding a regression test for this issue. The test does not fail, since
the bug won't be exposed until DERBY-1111 is fixed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388144 13f79535-47bb-0310-9956-ffa450edef68"
480db2af7658642407c82d0df3bce262c114c59e,"DERBY-1136 JDBC driver on rs.getFloat() gives LossOfPrecisionConversionException for float fields containing Float.MAX_VALUE

Submitted by H√•vard Mork



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388161 13f79535-47bb-0310-9956-ffa450edef68"
a1a7f8ba1005ec3f2aa9a85951314c73e29b5f62,"DERBY-953 (partial) Add/expand javadoc comments for EmbedStatement.checkStatus and checkExecStatus.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388227 13f79535-47bb-0310-9956-ffa450edef68"
d192b7dbe60f4c18fe1189aa85b2724418aefe6c,"DERBY-953 (partial) Fix typo in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388230 13f79535-47bb-0310-9956-ffa450edef68"
64e17680f0d9ec3ad16b9a7b15e3d99a2d56b0fc,"DERBY-953: Add Statement.isClosed() JDBC4 method
DERBY-1097: Add tests for Statement.isClosed() JDBC4 method

Contributed by Kristian Waagan.  

I modified his patch for DERBY-953 to match
Dan's suggested approach.  I also added StatementTest.junit to the jdbc40
test suite, which passes.  Since this is a JDBC40-specific feature, and
only new code has been added (no existing code has been modified) I did
not run derbyall



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388234 13f79535-47bb-0310-9956-ffa450edef68"
a53b758ee2904c80753f3a990ed8239a34c43587,"DERBY-839 (Partial).  Internationalize Connection.java.  Also upgraded
the ""i18n lint"" test to be a little more intelligent, and to not exit
on the first failure.

Passes derbynetclientmats.  All changes are client-specific so derbyall
was not run.

Note there are some extra messages not currently being used.  These are
from the initial work Anurag did on this.  I'm just splitting up his
very big patch into smaller, more manageable pieces.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388309 13f79535-47bb-0310-9956-ffa450edef68"
81b9853fc6d3bcdc794ba6c841706c78e2088bea,"DERBY-1112: TemporaryRowHolderResultSet is breaking the contract of
getActivation

The patch modifies the constructors of TemporaryRowHolderImpl so that
they take an Activation instead of a TransactionController. The
transaction controller can still be obtained from the Activation
object. TemporaryRowHolderResultSet now implements getActivation() by
returning the activation of the TemporaryRowHolderImpl that created
it. TemporaryRowHolderImpl and TemporaryRowHolderResultSet are made
package protected.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388440 13f79535-47bb-0310-9956-ffa450edef68"
8a2492855e844811af3e0c7fc8a727aff1ec6aed,"Fix output files changed by new internationalized strings in network
client.  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388539 13f79535-47bb-0310-9956-ffa450edef68"
04a6ee6e83322358ff2e0ce577f010fbae693348,"Committing rev 2 of Anurag's patch for DERBY-1140: JDBC4 SQLException triage for the network client.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388558 13f79535-47bb-0310-9956-ffa450edef68"
7a8d02310b549a715a97aeb4c10c4666c87d1504,"DERBY-1095 (partial) Once a ContextManager is empty no longer maintain a reference
to it in the thread local variable. Avoids a thread hanging onto memory for ever.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388626 13f79535-47bb-0310-9956-ffa450edef68"
9e3341f494ba688e30ce5e7676fc47212fffb2e8,"Enable Metadata tests to test columnPrivileges and tablePrivileges as part of grantRevoke test. Was previously disabled, pending code changes.

Also removed testing of defaultConnectionMode property, since this is not the way to set sqlAuthorization.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388629 13f79535-47bb-0310-9956-ffa450edef68"
0eca0a1c3992b2a8d5fd64b8126259fc3469d7de,"DERBY-1124: Use 10.1 version of getColumnPrivileges and getTablePrivileges metadata queries during soft upgrade of pre-10.2 databases to software version 10.2 or beyond.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)_


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388663 13f79535-47bb-0310-9956-ffa450edef68"
ceb72feacf93e6d4baf6c5d2ef6efb592ccc8b5d,"DERBY-446 (partial) Copy Attribute.java to the java/shared reference area and add in constants
for the client JDBC attributes. Change the client code to use these constants as preparation to
removing these constants from the user visible classes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388687 13f79535-47bb-0310-9956-ffa450edef68"
81ccab940de235fc61e8d3eddf8f4f435e54ca67,"Missed this output file.  Not sure why my tests are passing even though
the output files are incorrect.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388708 13f79535-47bb-0310-9956-ffa450edef68"
9299b831190c3db8997e0594b405f417908d277d,"Commit Olav's patch for DERBY-1090, implementing the JDBC4 Connection.isValid() method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388771 13f79535-47bb-0310-9956-ffa450edef68"
eb8b3a23d9bcdfd733e1c9dd1df38dcbc90c9140,"DERBY-464: This batch of Grant & Revoke changes include:

1) Prevent GRANT statements on Synonyms, VTIs and Views (for now...pending more changes).
2) Change interface to StatementPermission objects... Dan suggested changing interface to include LCC.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388775 13f79535-47bb-0310-9956-ffa450edef68"
4b4f1db7e73a43eb1a8f53758d6d289ae0b4f1f7,"Update master file to reflect modified code in the previous checkin.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388776 13f79535-47bb-0310-9956-ffa450edef68"
8806721c1f31f1fce3b92ea808bfee1e04b00ed4,"Commit my patch, attached to DERBY-1140, which eliminates magic strings in the JDBC4 SQLException factories.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@388778 13f79535-47bb-0310-9956-ffa450edef68"
2700e3d8f1dafc729d4b36a560f80e76f46dd4d7,"DERBY-690: Add scrollable, updatable, insensitive result sets

Support for scrollable, updatable, insensitive result sets in the
embedded driver. Patch contributed by Fernanda Pizzorno, Andreas
Korneliussen and Dag H. Wanvik.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389202 13f79535-47bb-0310-9956-ffa450edef68"
0076dfb6fcf8fb25c2f3dd5da13161927cbfa375,"DERBY-1155 Introduced new class EmbedXARessource. This class implements XAResources. I have moved all XAResource methods to this class.

Modified classes
EmbedXAConnection
Removed all the XAResource methods.
XATransactionState
This class now uses EmbedXAResource (earlier it was using EmbedXAConnection because it also had implementation of XAResource)

Patch contributed by Anurag Shekhar - anurag.shekhar@sun.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389570 13f79535-47bb-0310-9956-ffa450edef68"
c0119bdebcd37f96538601a1e40b145a107bf521,"Commit Kristian's patch for DERBY-944: raising appropriate exceptions for RowID calls.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389571 13f79535-47bb-0310-9956-ffa450edef68"
cd15fffc32112d1c9c9b5e742afeed3300950e76,"DERBY-1136: getFloat throws LossOfPrecisionConversionException on MAX_VALUE

This patch contains a regression test for DERBY-1136. The regression test
verifies that we can successfully retrieve a value of Float.MAX_VALUE
from the database using ResultSet.getFloat.

The test runs for both the embedded driver and the DerbyNetClient driver.
The test is dummied out for the JCC driver, since that driver still suffers
from this bug (but we want to share the same set of master files).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389575 13f79535-47bb-0310-9956-ffa450edef68"
72cc553200ee85d4f9093b6236f84a28292e5060,"DERBY-1158 (partial) Some cleanup of field & method permissions in the embedded JDBC driver and rename getWarnings to addWarning to
correctly reflect its use.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389630 13f79535-47bb-0310-9956-ffa450edef68"
0bf3bf88f1721bb6a319864a321734e3c95b21c4,"DERBY-1159 Add some test cases that show the bug. Execution of a statement that
does not return a ResultSet with various JDBC Statement objects using executeUpdate
in a global transaction.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389648 13f79535-47bb-0310-9956-ffa450edef68"
28162f6535aefeaa46cb7191b888fc3d36c1a42a,"DERBY-1157: Helper methods in BaseJDBCTestCase for creating data
sources

Adding getDataSource(), getConnectionPoolDataSource() and
getXADataSource() to BaseJDBCTestCase. The new methods call various
methods in TestUtil for creating the data sources. A minor adjustment
had to be made to TestUtil.getDataSource() in order to make it return
JDBC 4.0 DataSources.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389780 13f79535-47bb-0310-9956-ffa450edef68"
ed0e1141a4e823bd54fc8e43fb885eaab0454bf1,"DERBY-1162: Add mechanism to assert/compare SQLStates

Adding method 'assertSQLState' to BaseJDBCTestCase. Patch contributed
by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389783 13f79535-47bb-0310-9956-ffa450edef68"
23b4f8b6be66ee17fd4137d1f49aabe0d2bae641,"DERBY-1158 (partial) Some method protection cleanup on EmbedStatement and EmbedPreparedStatement


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389822 13f79535-47bb-0310-9956-ffa450edef68"
ce9d2145312c6c9de7295e90946aa8d143055eef,"DERBY-1158 (partial) Re-factor check holdability methods in the brokered stament
and connection control to support downgrading the holdability when needed. This
commit still implements at the user level throwing an exception for requesting
holdable ResultSets in a global transaction. A subsequent commit will change to
creting a warning on the Connection when creating a Statement with holdable ResultSets.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389825 13f79535-47bb-0310-9956-ffa450edef68"
4541a4379309a37217153d05fa5c9dc3924dd039,"DERBY-1143: derbynet/prepStmt.java fails with JCC 2.6

Patch contributed by Deepa Remesh

This patch reduces the number of batch elements in the test
derbynet/prepStmt.java so that it can run successfully with jcc2.6.

I checked with the JCC folks who told me that JCC2.6 driver supports
less than 32K batch elements. When I ran the test, I found that
maximum number supported is 32765. As mentioned by Bryan, any number
greater than 9000 will provoke the bug. So this number will still
allow us to test DERBY-428.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389836 13f79535-47bb-0310-9956-ffa450edef68"
47e69e6b6eaf055ece34c732fdd7854fc86e5889,"DERBY-977: jdbcapi/xaSimplePositive.sql fails

Added substitution rule which filters out transaction ids which can
be printed in different order.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@389875 13f79535-47bb-0310-9956-ffa450edef68"
c7549a52e310067fe899b1accf73fd0f6bfd8527,"DERBY-622 (partial): Add privileged blocks for calls to getResourceAsStream()
in impl.tools.sysinfo.Main.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@390000 13f79535-47bb-0310-9956-ffa450edef68"
e4ba4e13e5ff181f000cbb19be9e020c28d54393,"DERBY-1149 : Fix failures in StatementTest.java.  I also added
a new constants file for testing that contains all the standard
SQL State strings.  Derby-specific SQL States can be added as
needed.

Passes derbyall, except for the sysinfo tests, which is a known regression
when running against the classes directory.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@390176 13f79535-47bb-0310-9956-ffa450edef68"
966d2c39f978eb16adf50af5ffea1952fed13cd1,"Commit Kristian's first patch for DERBY-1147, adding vacuous implementations of missing CallableStatement methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@390292 13f79535-47bb-0310-9956-ffa450edef68"
98f1999dfdd16508760fc8d89b38d998b0da237e,"disable test case for client for DERBY-1047

accidentally enabled with  r387611


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@390481 13f79535-47bb-0310-9956-ffa450edef68"
1aa7c1ccf5bce799a8e2de7893dd4b0dc8c6cdb7,"Modified eol-style to be native for these output files


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@390486 13f79535-47bb-0310-9956-ffa450edef68"
3d650b1cb0e7096b3c8b3a076a5ded716f7e1c4a,"DERBY-839 (Partial) : Internationalized a few more classes.  Also added
a helpful debug method to Types.java that allows you to get a String
name for a given type id.  

derbyall passes for jdk14. Also made sure output files that had
diffs were tested for jdk13 and jdk16, and fixed output files there
as well.  Also scanned the matching embedded output files to verify
that the SQL States were the same where it made sense, and fixed a couple
of bugs there.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@390536 13f79535-47bb-0310-9956-ffa450edef68"
91151e5d3e78589485bb811b0d164c03084ac7a3,"DERBY-1085: Fix NullPointerException in SQLBinary.java that causes exception for all FOR BIT DATA types while getting length for NULL values.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@390838 13f79535-47bb-0310-9956-ffa450edef68"
956f8ac30c96b23cab32e0cfc07f3adb2e819158,"svn:eol-style set to native


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391035 13f79535-47bb-0310-9956-ffa450edef68"
1f3d2714c589539595b300666f3bec5640a6056c,"DERBY-349: Re-enable parameterMapping batch tests for DerbyNetClient

Due to bug DERBY-349, the parameterMapping tests of various data types
in the executeBatch() configuration had been disabled, because those
tests were hanging. The tests are no longer hanging, so this submission
re-enables the tests.

This change also modifies the parameterMapping test program so that it
knows how to unwind the BatchUpdateException when looking for an
underlying Invalid Conversion exception. This means that we can have
simpler and easier-to-read master output files, which makes the test
easier to maintain.

This change also deletes the separate jdk14 master file, since it is
identical to the primary master file.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391086 13f79535-47bb-0310-9956-ffa450edef68"
3e67fd507501490726a7345ee53481d286907d46,"Commit Anurag's patch to DERBY-1163, adding JDBC4-specific versions of embedded pooled connection and embedded xa connection.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391090 13f79535-47bb-0310-9956-ffa450edef68"
ed225aeaa06d5f26f565a71184448d78bef54ba4,"DERBY-839 : (Partial) - internationalized ColumnMetaData.java and also
removed some methods that were not in use.  Passes derbynetclientmats.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391139 13f79535-47bb-0310-9956-ffa450edef68"
f342d5bc5a4c7a58735fbd698434b7799a9d95fc,"DERBY-1172 incorrect error message in updateRow() after a commit on a held scroll insensitive resultset. Submitted by Andreas Korneliussen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391153 13f79535-47bb-0310-9956-ffa450edef68"
8d188b9642ce97612889365e512cd4ffce306e73,"DERBY-1076: Resolve the output differences in upgrade test

Attaching a patch which updates the master file for upgrade test. The
master file is updated to reflect changes in the metadata test. Also
there were extra lines in the master file in the previous checkin. I
have also replaced 10.1.2.2 with 10.1.2.1 as Knut had suggested. This
version info will hopefully go away with my next patch to allow
running the test as part of harness. Still there are few diffs because
of the diffs in the generated SQL id which look like this line:

,APP,REFACTION1,A,,APP,REFACTNONE,A,1,3,3,SQL060329093642910,SQL060329093642450,7 

This will also go away once the test can be run with the harness,
which filters out the generated ids.

Patch contributed by Deepa Remesh <dremesh@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391255 13f79535-47bb-0310-9956-ffa450edef68"
92caf5ec7c970d3a6b38f478a18bc97c21348142,"DERBY-1146: Verify that JDBC4 signatures satisfied

Uploading patch with new test jdbc4/VerifySignatures.junit. The test
inspects the objects returned by JDBC methods and checks whether they
have methods with correct signatures. The test is not enabled in any
suite since it currently fails. It requires JVM 1.6 to run.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391310 13f79535-47bb-0310-9956-ffa450edef68"
1d49f565b722bef0bb50e3674f9eba0b377fe6ee,"DERBY-1144 With client PooledConnection.getConnection() does not reset holdability and isolation state properly


This patch addresses this issue by changing PooledConnection.getConnection() to reset the connection to the datasource defaults.

Code changes:
Just a small code change in ClientPooledConnection to pass true to the reset method to reset the defaults.

This change has the side effect of making DERBY- 1173 harder to reproduce. But I don't think it fixes that bug. With the change, the checkDataSource test hangs only very intermittently. The fixer of that bug will have to go back to a previous version to get a easily reproducable case.


Tests -
Changed the checkDataSource30.java test to test holdability,isolation, and autocommit reset.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391369 13f79535-47bb-0310-9956-ffa450edef68"
1128268f9927facb284b9ddbb0e12d2106d939d8,"DERBY-1158 (partial) Implement downgrading a request to create any holdable statement in a global
transaction to return a non-holdable statement. Such a downgrade adds a SQLWarning to the Connection
object. This follows section 16.1.3.1 from JDBC 4.0 proposed final draft.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391383 13f79535-47bb-0310-9956-ffa450edef68"
c0b7bf95b27c74b119c70a8902fcfad0fa93c370,"Checkin patch to DERBY-955 which uses Sed to mask out jdk1.6-specific test diffs introduced by the JDBC4 subclasses of SQLException. This eliminates a number of jdk1.6-specific canons.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391384 13f79535-47bb-0310-9956-ffa450edef68"
f0808e4e7a592b4f343c5b5fb6b4faf5b8fbaa52,"DERBY-1152: Failures in sysinfo tests with different classpath settings

Depending on the way the classpath was set, the sysinfo_withproperties and
sysinfo tests were unreliable. The problem is that the underlying sysinfo
classes are present in your classpath in several possible ways: you might
be pointing directly at the classes directory, or you might be pointing to
one of: derby.jar, derbytools.jar, or derbynet.jar, all three of which have
the sysinfo classes in them. This means that there are four possible
sections of the derby_tests.policy file that might be in effect for the
sysinfo classes during a test run, and those four sections were inconsistent.

This change modifies the derby_tests.policy file so that, at least for the
classpath and locale file permissions that are used by sysinfo, the policy
file expresses a consistent set of permissions for each of the four code
sources. The change also updates the master files to reflect the chosen
permissions, which are to allow access to the classpath and the locale files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391387 13f79535-47bb-0310-9956-ffa450edef68"
2f3f640095d8dfcae46104b8a6b29e58ef80e6d4,"DERBY-1109: Fix predicatePushdown and subquery on wsdd5.6

Committed for Army Brown <qozinx@sbcglobal.net>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391396 13f79535-47bb-0310-9956-ffa450edef68"
20e7d91088c7546fba38c617830543157e8b65a1,"DERBY-1144 missed file to reduce lock timeout for checkDataSourc30 test



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391461 13f79535-47bb-0310-9956-ffa450edef68"
e41dc7011af858e52ae5631d8300a981b9903ddb,"DERBY-787 cursor closed as a sideeffect of closing another cursor with the same name on another connection. Submitted by Andreas Korneliussen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391559 13f79535-47bb-0310-9956-ffa450edef68"
e6936eadb0afbd9200dd7c4f75e223b9e9d0281a,"DERBY-839: Final commit for this JIRA.  Fixed up some bugs in the
messages, removed some unused messages and SQLStates, and internationalized
Clob.java and CloseFilterInputStream.java

derbyall passes except for wisconsin



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391667 13f79535-47bb-0310-9956-ffa450edef68"
4e3b1b6bc1bd896dbd242bfaef2359402edbbd7b,"DERBY-1015 (partial) Add an interface for Statement objects from the engine, EngineStatement. Removes
some use of reflection in brokered objects and the network server. Is also a step towards solving
DERBY-1158, downgrading holdabilty in global transactions.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391691 13f79535-47bb-0310-9956-ffa450edef68"
193850b8b6d0ee14a54a12c6f11d2f5ac3a49a94,"DERBY-1015 (partial) Fix class name of EngineStatement in copyright statement.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391737 13f79535-47bb-0310-9956-ffa450edef68"
26be6eeb8e0e66446f188ec3a145806e49b101d6,"DERBY-514 Integrate upgrade tests into test suite.
Contributed by Deepa Remesh

Attaching a patch 'derby-514-buildfiles-v1.diff' which adds the build files for upgrade tests. This patch also adds the properties file for upgrade test which specifies not to run with security manager as more work is needed in this area (DERBY-1135).

This patch affects upgrade tests only. This is an incremental patch and does not resolve the issue fully. Please take a look at this patch. Thanks.

 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391806 13f79535-47bb-0310-9956-ffa450edef68"
562671ec8d3524a68f5fd3e960124204d2094830,"DERBY-1158 (partial) Re-factor some code to enable BrokeredStatement.getResultSetHoldability()
to return CLOSE_CURSORS_ON_COMMIT when in a global transaction.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391842 13f79535-47bb-0310-9956-ffa450edef68"
7095131a2686b7379b10ae86064a1a5d472dca44,"DERBY-514 Integrate upgrade tests into test suite
Contributed by Deepa Remesh.

Attaching a patch 'derby-514-patch2-runtest-v1.diff' which enables the upgrade test to run with the test harness.

Summary:

* findCodeBase method in harness/jvm.java is changed to public. This method is used by upgrade test to get the location of new jar files.

* Adds the other derby jars to the jar file list in UpgradeTester. This will allow the test to run in client framework. I tried running the test in client framework and it looks like this will need new master file and some more work.

* In UpgradeTester, File.toURL method is used when creating class loader. This seems to be a better way to construct the URL.

* Master file update

This patch combined with the previous patch (derby-514-buildfiles-v1.diff) will allow the upgrade test to be run using RunTest. The location of old jars has to be passed in as a property in jvmflags. Command to run:
java -Djvmflags=-DderbyTesting.oldJarLocation=<location of 10.1 jars> org.apache.derbyTesting.functionTests.harness.RunTest upgradeTests/Upgrade_10_1_10_2.java 
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391844 13f79535-47bb-0310-9956-ffa450edef68"
c7d6c7586a306cf23696cfe1b58049286b4dbaef,"DERBY-1101 Modify EmbedResultSet.getHoldability() so that it uses getActivation() instead of getStatement().
Contributed by  Knut Anders Hatlen knut.hatlen@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391846 13f79535-47bb-0310-9956-ffa450edef68"
c63d941bbb074cf88478026e48f98cd7bdc549d5,"DERBY-435 jdbcapi/checkDataSource.java and jdbapi/checkDataSource30.java to tests should be changed or extended to test client DataSources

- Brings checkDataSource and checkDataSourc30 into derbynetclientmats
- Reenables tests for DERBY-1044 now that it is fixed.

Tests are excluded for some bugs  uncovered by this test that have yet to 
be resolved:
DERBY-1035, DERBY-1047, DERBY-1025, DERBY-1148, DERBY-1183



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@391902 13f79535-47bb-0310-9956-ffa450edef68"
2e35afd6aa3dbb47cea0aa28187a55c9f9d640fd,"DERBY-1185 - Move all client messages to messages.properties.  


I also got rid of the ""XN"" SQL State class and migrated those 
over to XJ.  

Similarly ""0AX"" warnings were migrated to ""0AJ"".  This affected the 
updatableResultSet test, so I updated those output files for JDK 1.3,
1.4 and 1.6.

Passes derbyall.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392060 13f79535-47bb-0310-9956-ffa450edef68"
175a7402ef771eb25df50ddae9e32d7279137b7d,"DERBY-1158 (partial) Embedded Statements that are holdable automatically downgrade to
close cursors on commit during a global transaction.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392073 13f79535-47bb-0310-9956-ffa450edef68"
4f2355d726c7f4c0bcacc4c1e45248592cd1c3cf,"DERBY-1158 DERBY-1159 Remove special casing of network client for holdability tests
using executeUpdate methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392084 13f79535-47bb-0310-9956-ffa450edef68"
81ff69245caa6b8ca644cd9628d7008b7d10ca00,"DERBY-1189

inplace compress could self deadlock on a latch/latch conflict.  Changed
the insert page find code for defragment to never return a page which is
higher than the source page of the row.  Previously the upper level code
made this decision, but that was too late.  As part of the change also 
optimized the ""unfilled"" search to be biased towards those pages near
the front of the container.  Checkin includes simple sql script which 
reproduced the deadlock prior to the fix.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392194 13f79535-47bb-0310-9956-ffa450edef68"
b2bb8cddf43743787d78bb7844d99625ad645c05,"DERBY-1177 updateObject with null as argument causes network driver to fail with NullPointerException

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392236 13f79535-47bb-0310-9956-ffa450edef68"
b94443fd79835266cbaeed3181f1b1fa90ac1cbb,"DERBY-1184: registerOutParameter(int,int,String) should throw exception

Patch contributed by Kristian Waagan (Kristian.Waagan@Sun.com)

The method 'CallableStatement.registerOutParameter(int,int,String)'
does nothing in the client driver. As stated in DERBY-447, the method throws
a not-implemented exception in the embedded driver. The method should be
changed to do this on the client side as well.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392304 13f79535-47bb-0310-9956-ffa450edef68"
48073192b05189c60135668f41cf89a85ba970af,"DERBY-1184: registerOutParameter(int,int,String) should throw exception.

The test was out of sync with the SQL States in the code. In revision
392060, the SQL state ""0AX01"" was replaced by ""0A000"". This change
updates the test to use the new SQL State, and callable.java now passes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392313 13f79535-47bb-0310-9956-ffa450edef68"
2f5ca5ebb15261004a94c866aca5d5da9a183f7d,"DERBY-1190: Network Server reports wrong product name when logging connections

Change contributed by John H. Embretsen (John.Embretsen@Sun.com)

When derby.drda.logConnections was set to true, the connection log message
written to derby.log said ""Cloudscape Network Server"". This change modifies
the message so that it says ""Apache Derby Network Server"".



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392404 13f79535-47bb-0310-9956-ffa450edef68"
b8ddf44797e1bccde16e0fad0b1fdcaca312e1fe,"DERBY-1187

Defragment pass was not being committed properly, so when rows at
front of table were being deleted and freeing pages the defragment
pass did not move the rows to the free pages.  Longer term the 
defragment pass should commit more often, see DERBY-1188.
Added extra test to OnlineCompressTest.java for this case.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392439 13f79535-47bb-0310-9956-ffa450edef68"
a58c7f8e48cb99e1e71edff1047da374dac3803d,"Disable checkdatasource tests temporarily for DerbyNetClient to 
resolve issues with jdk 1.5 and jdk 1.6

Disable checkdatasource tests for JCC since it doesn't have XA


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392611 13f79535-47bb-0310-9956-ffa450edef68"
b01ccf59fd44fc8dceea445934b2102ecffab6e8,"DERBY-1196 Network server closes prepared statements prematurely if exception occurs during OPNQRY 

- Takes out close of prepared statement on exception in OPNQRY in DRDAConnThread processCommands
- Updates the JCC master for derbnet/setTransactionIsolation.  
  This test was getting Statement already closed errors for valid statements with JCC that are no longer in the master.
- Enables test for DERBY-1047 in checkDataSource ( Note this case actually passes withtout the fix because of the fix for DERBY-1158)




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392781 13f79535-47bb-0310-9956-ffa450edef68"
0bc22daabd5c9fb9551952d6288f091f1f0094e4,"DERBY-1196 -Network server closes prepared statements prematurely if exception occurs during OPNQRY and can cause ""'Statement' already closed"" exception on reexecution 
Master update for checkDataSource30



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@392983 13f79535-47bb-0310-9956-ffa450edef68"
2fe796b2569ca81607507ef74c93c674f63cedf8,"DERBY-446 Remove propertyKey_ constants from ClientbaseDataSOurce that were in place for
the old scheme to get the list of attributes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393003 13f79535-47bb-0310-9956-ffa450edef68"
bbd72a85008948e0ff0a0caadc509f9c9268d510,"DERBY-514 (partial): Sed out version numbers in upgrade test output.

Committed for Deepa Remesh <dremesh@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393111 13f79535-47bb-0310-9956-ffa450edef68"
48058a0c84ffed49e34f1dbafbcbdb8ab4c107b8,"Set svn:eol-style on upgrade java files


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393115 13f79535-47bb-0310-9956-ffa450edef68"
3215e564543153bb18fc0b24b266b0265d865e73,"Fix dependencies of demo build targets so that insertMaps gets built properly
on an 'ant clean ; ant all'


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393123 13f79535-47bb-0310-9956-ffa450edef68"
178ae9d042122032d52289a355c19a9d4668cac7,"Partial patch for DERBY-924, DERBY-925 and DERBY-970.

New method added: DatabaseMetaData.checkServerJdbcVersionX() - checks
whether the server supports a given JDBC version. Throws an exception
if it doesn't.

Contributed by Dyre Tjeldvoll <Dyre.Tjeldvoll@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393164 13f79535-47bb-0310-9956-ffa450edef68"
3bfb5f07f11d7a77ea973c80928fa7409bec0646,"Commit Narayanan's patch for DERBY-940: embedded support for the JDBC4 wrapper api. Requires that you run with mustang build 78 or higher.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393221 13f79535-47bb-0310-9956-ffa450edef68"
aaf9dfd2eafe5a0a00c959db028306a206d45d9c,"Commit patch for DERBY-1178: fix DRDA serialization of SQLExceptions for JDBC4 exception subclasses. Eliminate many jdk16-specific test canons.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393239 13f79535-47bb-0310-9956-ffa450edef68"
0223b95e504f8b884800a257bfd3929bb47e5735,"DERBY-924: new JDBC4 metadata API getFunctions() needs to be implemented

Implementation of DatabaseMetaData.getFunctions() in the client
driver. Added tests for getFunctions() in the metadata test and the
upgrade test.

Patch contributed by Dyre Tjeldvoll <Dyre.Tjeldvoll@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393304 13f79535-47bb-0310-9956-ffa450edef68"
512bacf58c6b94456fa60d6e0ed443dd184edfd4,"DERBY-438 (partial) Support BLOBs as column in trigger actions. Initial testing with small BLOB values,
will add other test cases for larger BLOB values, and then subsequently CLOBs. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393318 13f79535-47bb-0310-9956-ffa450edef68"
e6601cf1d1acd140590fa9c77167f5c26ed81d5e,"DERBY-1204 (test only) Add additional test cases that shows what work and what doesn't
with trigger actions and INSERT clauses with multiple rows. Test case that shows the 1204
bug is commented out.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393337 13f79535-47bb-0310-9956-ffa450edef68"
e916164780dbae93ae33b22598cdc7a477de61a5,"Commit Anurag's patch derby-1163_3.diff from DERBY-1163: adjustments to graph of connection classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393460 13f79535-47bb-0310-9956-ffa450edef68"
f2e6696c329c41b121f094d6fe8b726d8f85382e,"Miscellaneous javadoc errors. Patch attached to DERBY-862.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393498 13f79535-47bb-0310-9956-ffa450edef68"
40bcd6b2c49cb0319ed43e1dfce175e01c09bf62,"DERBY-438 (partial) Clarify by adding comments or re-naming variables the expected format
of stream values passed to internal data types. The internal data types always work in streams
that represent the on-disk format of the data type and not the application visible stream.
Some code in SQLBinary and SQLBLob is incorrect and will be fixed in a subsequent commit.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393570 13f79535-47bb-0310-9956-ffa450edef68"
c56ecebc0c58f164df92aa8266331b4868a70388,"DERBY-438 (partial) Move RawToBinaryStreamFormat.java from org.apache.derby.impl.jdbc to
org.apache.derby.iapi.types to allow its use in SQLBlob and SQLBinary (in a future commit).
This will allow the setting of the internal binary types from JDBC objects in a consistent manner.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393579 13f79535-47bb-0310-9956-ffa450edef68"
e07631a659a09fd1d2da73eb13e60941b175566c,"DERBY-805: Apply phase 4 changes to implement join-predicate pushdown. See attached write up in JIRA for details. Changes have been extensively documented there.

Submitted by Army Brown (qozinx@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393593 13f79535-47bb-0310-9956-ffa450edef68"
5d50d40540bb2f781616f4a8429efd04a2e7cb0d,"DERBY-900 -  Remove use of String(byte[]) and String(byte[], int, int) constructors in network client leading to non-portable behaviour



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393606 13f79535-47bb-0310-9956-ffa450edef68"
c33abedfb51574c643256c6a95b1ecf1763d8cfd,"DERBY-1073: Address subquery timeout mechanism issue when parent query has not timed out, but the subquery has. Find a complete and valid plan for the subquery and return this cost.

Submitted by Army Brown (qozinx@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393608 13f79535-47bb-0310-9956-ffa450edef68"
e1753031ce2df088804ab43ded27ccfe78593837,"Commit Anurag's derby-1137_4.diff patch to DERBY-1137: implement new JDBC4 CommonDataSource methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393791 13f79535-47bb-0310-9956-ffa450edef68"
471605f59ab52a52cac517189c5d52f1aebc8012,"First patch to DERBY-1079: upgrade JavaCC to version 4.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393834 13f79535-47bb-0310-9956-ffa450edef68"
79fd819a3ae0fc266033c961a633a95e70239eb0,"More javadoc airbrushes: bug862_misc2.diff of DERBY-862.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393859 13f79535-47bb-0310-9956-ffa450edef68"
6b5f2d8ee541d5037ed148a267b33faf918c621c,"DERBY-438 (partial) Add to triggerGeneral to display the value of BLOBs inserted by a trigger.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393869 13f79535-47bb-0310-9956-ffa450edef68"
5c2052228701159ed1d6b67fa2754c230e4d227c,"DERBY-438 (partial) Consistwnt handling of binary streams for updateXXX, namely check
the length correctly if it is greater than the 2Gb supported by Derby. Add some comments
to SQLBinary to clarify the format. Save the length when reading a binary stream from the
store into an application, will be used in a subsequent checkin. Ensure eof handling
when reading the binary value length in the on-disk format is handled correctly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393880 13f79535-47bb-0310-9956-ffa450edef68"
64405f1d0decab567c225b1eacddcf722ad560e2,"DERBY-990
DERBY-1210

Removed piece of this test that is machine/jvm/thread timing dependent on 
the background space reclamation work.  
Filed a new issue DERBY-1213, to rewrite this testing in a more reproducible
manner.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393896 13f79535-47bb-0310-9956-ffa450edef68"
1c73f47c596547d7486124efc6132c38f3481287,"DERBY-1202

Adding message for DATA_SQLDATA_READ_INSTANTIATION_EXCEPTION.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393907 13f79535-47bb-0310-9956-ffa450edef68"
1d87ff4dc2577ecebc181032636eecd36cb716b5,"DERBY-842 : Internationalize messages in PreparedStatement.java to
Section.java in client/am.  

This passes derbyall on JDK14.  I also verified that the tests whose
master files affected in the JDK14 run were also run on JDK13 and JDK16
and fixed output files for those platforms as well, as needed.

I also removed a few spurious SQL States based on the test I ran to find
SQL States with no messages.  More of those to come in a separate patch.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393967 13f79535-47bb-0310-9956-ffa450edef68"
19f33c647f7aa16f405656c12fa693331ee50dd8,"DERBY-438 (partial) Move ReaderToUTF8Stream.java from the JDBC implementation to the
types package so that it can be used directly by SQLCLob. This class converts from
a Reader (stream) format to the on-disk format for character types.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@393973 13f79535-47bb-0310-9956-ffa450edef68"
dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d,"Commit Anurag's patch derby-1192.diff for DERBY-1192: more fine-tuning of the graph of connection classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394106 13f79535-47bb-0310-9956-ffa450edef68"
96b9662fc3d040ab9d5b0290274d409bf7687aee,"DERBY-438 (partial) Ensure internal conversions of JDBC objects to BLOBs provide the conversion
using RawToBinaryFormatStream from the raw binary stream to the on-disk format stream as required
by the data type api. Make RawToBinaryFormatStream encode the length of the value in the first
bytes as defined in the format described in SQLBinary. Ensure the code handles this encoded lenght correctly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394109 13f79535-47bb-0310-9956-ffa450edef68"
634230e991b0bad62ef6d8bac18d85ce7aae6310,"Commit bug1079_rev1.diff for DERBY-1079: Use jdk16 javadoc tool if ant.properties points at a jdk16 installation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394110 13f79535-47bb-0310-9956-ffa450edef68"
90709fcf490cc88f94d6f1a7b58af7ea2b3fb649,"More javadoc airbrushes: bug862_misc3.diff of DERBY-862.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394112 13f79535-47bb-0310-9956-ffa450edef68"
1a7cb26ec4f2b74f5700de2f9b599886842920c5,"DERBY-1025 - [xa] client XAResource.start() does not commit an active local transaction when auto commit is true

Contributed by Deepa Remesh

------------------------------------------------
Summary:
------------------------------------------------
* Modifies NetXAResource.start to check if the connection is in autocommit mode and flow an auto commit.
* Uncomments the tests for this issue in jdbcapi/XATest.java and jdbcapi/checkDataSource.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394134 13f79535-47bb-0310-9956-ffa450edef68"
5935349d02d71bdb1840d186152739e78623ab57,"DERBY-514: get upgrade tests working with the test harness. Submitted
derby-514-patch3-v2.diff

Committed for Deepa Remesh <dremesh@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394157 13f79535-47bb-0310-9956-ffa450edef68"
cb2cac93bb28e877710053dadebf9b493e3523c3,"Committing bug1079_deprecated.diff, part of DERBY-1079, which removes a deprecated generator option from the SQL grammar.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394169 13f79535-47bb-0310-9956-ffa450edef68"
b001c685ae3ff26d895c9f5d6654a0660b078b7a,"DERBY-901 Remove use of String(byte[]) constructors in network server leading to non-portable behaviour

Contributed by Sunitha Kambhampati 
patch1 - Remove use of String(byte[]) constructors in network server leading to non-portable behaviour

This fixes
- SQLERRMC_TOKEN_DELIMITER, SQLERRMC_MESSAGE_DELIMITER and the corresponding usage of it in SystemProcedures to not use the default string constructors that are non portable.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394205 13f79535-47bb-0310-9956-ffa450edef68"
e0e411edb3bc36dc57415a91f426b1d60e7323bf,"Remove revision specification on svn:externals for tools/testing.
If the revision is set for svn:externals, svnversion returns a range for
the current view, which sets the build number to a range, e.g.:
393115:394186M.

Allowing the current revision of the external jars to be the latest revision
keeps svnversion happy, and the build identifier consistent.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394270 13f79535-47bb-0310-9956-ffa450edef68"
379f95fbc1e5f068288478d34bb7b0eaa62a57a5,"DERBY-826: Improve sysinfo behavior in situations where the Derby classes are
loaded indirectly, such as through the manifest Class-Path attribute.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394334 13f79535-47bb-0310-9956-ffa450edef68"
99568e9e3732a4e522d5d71b40fcb9eddd33718f,"DERBY-1082: Fix quoting of JAVA_HOME in scripts. Make use of JAVA_HOME
consistent across scripts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394769 13f79535-47bb-0310-9956-ffa450edef68"
1edcdb316a39b1fc5721f463be63fd0ceff62b05,"DERBY-658: Improve the test harness' ability to run on platforms with non-ASCII
native encoding.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394770 13f79535-47bb-0310-9956-ffa450edef68"
b33b410a96490fab54eddfc4da3c2381838396ec,"DERBY-1079: Expand public API javadoc for visible JDBC4 classes in the embedded client.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394780 13f79535-47bb-0310-9956-ffa450edef68"
6e2bee1addea21abfc01a45e3ac947bb13af0519,"Master file for RunClassPathTester on ibm15 due to diffrence in exception text.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394782 13f79535-47bb-0310-9956-ffa450edef68"
448ecb0edde486eb90639901c10747fb87300b95,"DERBY-941: Commit Narayanan's statementeventlisteners_embedded_v2.diff patch, implementing embedded support for JDBC4 statement event listening.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394788 13f79535-47bb-0310-9956-ffa450edef68"
0d72ff7be714907e2beb945712fb6b68b676bdc1,"DEBRY-438 (partial) Add some testing of the content of the BLOBs to blobclob4BLOB.java test
by checking the CRC32 checksum of the blob after fetching it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394814 13f79535-47bb-0310-9956-ffa450edef68"
1c4f638d58e13b41a5b9192139f5d4b96b262848,"DERBY-1121: remove redundant check for DERBY-618 in checkDriver.out so the
test will run in a remote server configuration.

Committed for Deepa Remesh <dremesh@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394815 13f79535-47bb-0310-9956-ffa450edef68"
a10e45696717ac4bda6f49d53412a9edcf146c5f,"DERBY-822: Client driver: Pre-fetch data on executeQuery()

This patch makes the network server include query data when it replies
to an OPNQRY command. (Query data is only included when there are no
LOB columns and the protocol is limited block protocol.)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394859 13f79535-47bb-0310-9956-ffa450edef68"
765e2c45c3319c740f9a5e52478cd9ffc42a0e2c,"DERBY-1224: Remove unused variables in DatabaseMetaData

Removing the following variables from
org.apache.derby.client.am.DatabaseMetaData

  lastGetColumnPrivilegesResultSet_
  lastGetColumnsResultSet_
  lastGetForeignKeysResultSet_
  lastGetPrimaryKeysResultSet_
  lastGetProcedureColumnsResultSet_
  lastGetProceduresResultSet_
  lastGetSpecialColumnsResultSet_
  lastGetStatisticsResultSet_
  lastGetTablePrivilegesResultSet_
  lastGetTablesResultSet_
  lastGetUDTsResultSet_
  lastGetTypeInfoResultSet_
  lastGetAttrResultSet_
  lastGetSuperTypesResultSet_
  lastGetSuperTablesResultSet_

since they seem to have no purpose.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394861 13f79535-47bb-0310-9956-ffa450edef68"
aeba04b0408084fdfed233f8ac74fd9830c8faae,"DERBY-1025 - [xa] client XAResource.start() does not commit an active local transaction when auto commit is true
patch 2

I am attaching 'derby-1025-patch2-v1.diff' which changes checkDataSource test to test that starting a global transcation when a local transaction is active will give an exception. The XA error code is also printed out to verify that we get the expected exception. This patch will resolve this issue fully.

Contributed by Deepa Remesh





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394949 13f79535-47bb-0310-9956-ffa450edef68"
cc75df1904bef7a16a9b3ac8374abfea3340e6b1,"DERBY-955: eliminate another set of derbyall diffs under jdk1.6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394952 13f79535-47bb-0310-9956-ffa450edef68"
9ae599548762eb82bf9841fceb67e94514941aba,"DERBY-1113, committing on behalf of Suresh Thalamati

 The reason for missing log files is truncation logic at checkpoint was
 incorrectly deleting the log files that were needed for crash recovery
 if the backup is progress at the same time; The first log file that should
     not be deleted was incorrectly assigned to the log file number that is yet
     to be written to the backup.

     Attached patch changes the logic, so that all the log files that are required for both crash recovery and the backup are not deleted. Basically the first log file that should not be deleted is the lowest of first log needed for crash recovery or the log file that is yet to be copied to the backup.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@394981 13f79535-47bb-0310-9956-ffa450edef68"
5d14a2cad5fa22b2df9d1e08488c29a8bba70b2e,"DERBY-842: This fixes the failures in jdbc40 test suite.  Passes 
derbynetclientmats on JDK 4 and jdbc40 test suite on JDK 6



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395004 13f79535-47bb-0310-9956-ffa450edef68"
4b8ef80176e06c283dcae4a573effbd6074a2666,"DERBY-1216: Add --help option to ij. Cleanup Main.mainCore and util.invalidArgs.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395088 13f79535-47bb-0310-9956-ffa450edef68"
2e7a2afd3b0e80978544c8463276567d40b0e8db,"DERBY-940: Narayanan's network client support for JDBC4 Wrapper api.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395245 13f79535-47bb-0310-9956-ffa450edef68"
9c14132c8dcf963f2729eb9525d7a7b70393d120,"DERBY-1147: Commit Kristian's patch adding embedded and network client support for miscellaneous CallableStatement methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395263 13f79535-47bb-0310-9956-ffa450edef68"
93e7f0e517edff935692a96dffd90817bfe7a4cb,"Remove code that is not being used. Not only improves our code coverage, will also reduces complexity by removing dead code.

Remove partial code for DROP TABLE/VIEW CASCADE.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395328 13f79535-47bb-0310-9956-ffa450edef68"
3e924aeff157f8d5d5d21a9e224178d1301df96e,"DERBY-514: Commit change to BUILDING.txt which somehow dropped out of the commit of derby-514-patch3-v2.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395390 13f79535-47bb-0310-9956-ffa450edef68"
e4233337339d37eb4f7897b3ff084d8ceda28aed,"DERBY-925: Dyre's derby-925.v1.diff patch enabling new JDBC4 getFunctionParamaters() metadata method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395414 13f79535-47bb-0310-9956-ffa450edef68"
a2be028f669c524249c836b8bc147988f098ca3d,"DERBY-901
Remove use of String(byte[]) constructors in network server leading to non-portable behaviour

Contributed by Sunitha Kambhampati

I am attaching the patch ( derby901.p2.diff.txt, derby901.p2.stat.txt) to fix the remaining places that the String(byte[]) constructor is used in Network Server.

remove use of default String(byte[]) constructor in
-- trace method in DRDAConnThread.readAndSetParams to print out the hex string of the bytes .
-- use SQLERRMC_TOKEN_DELIMITER in SQLDIAGCI .

some cleanup
 -- define the SQLERRMC_MESSAGE_DELIMITER in SystemProcedures and use that in DRDAConnThread.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395416 13f79535-47bb-0310-9956-ffa450edef68"
66bdd78ea2f6337ad30a2848e7f6a3d286622238,"DERBY-901 encoding test for client messages.

Contributed by Sunitha Kamhampati



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395430 13f79535-47bb-0310-9956-ffa450edef68"
50e065b7799a389e36ee14f140f4bb88a3a5fd18,"DERBY-1063: Change server command in derbyrun.jar to server instead of
NetworkServerControl. Touch up the javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395434 13f79535-47bb-0310-9956-ffa450edef68"
83db8d617f5dd2fc9a33a8b42dd4417a7146f5b9,"DERBY-1063: Modify derbyrunjartest to call org.apache.derby.iapi.run directly
if it is not in a jar file. Hook the test into the tools suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395453 13f79535-47bb-0310-9956-ffa450edef68"
89c519616a74a5f20e6ecdb555ffc5058f518b45,"DERBY-1078: Add appropriate source and target attributes to all <javac> tasks in
the buildfile. This allows the build to proceed with compilers from JDK 1.5 and
1.6.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395458 13f79535-47bb-0310-9956-ffa450edef68"
5d2e2bd29eb5bd4f933f513976a0886c1988c89d,"DERBY-843: Internationalize SectionManager to XaException in client/am
package.  Also cleaned up any remaining hardcoded text in this package.
Also fixed DERBY-1198, where jdbc4/StatementTest.java was using
SQLState directly.

Passes derbynetclientmats on jdk14 and jdbc40 on jdk16, and fixed output 
files for jdk13 and jdk16 for those tests whose output files were 
affected in the derbynetclientmats run.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395484 13f79535-47bb-0310-9956-ffa450edef68"
93e65c716601ea4cf1dd616c0c697724b0f1065c,"DERBY-658: Update README.htm for testing, fix TestProto and multi tests to run on non-ASCII systems.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395486 13f79535-47bb-0310-9956-ffa450edef68"
cbd7b1573c0b88c2ae053c0561a01daca8b337c1,"DERBY-1174 NullPointerException in network server with LDAP authentication
Submitted by Anders Morken


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395525 13f79535-47bb-0310-9956-ffa450edef68"
533d502c426e78df12e874518723bc079b060a20,"DERBY-970: Add new metadata methods to network client driver

Added the JDBC 4.0 methods DatabaseMetaData.getSchemas() and
DatabaseMetaData.getClientInfoProperties() to the client driver.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395561 13f79535-47bb-0310-9956-ffa450edef68"
eed8ac69f1e61e30fa48d802150b667e3f8f8fff,"DERBY-1198: jdbc/StatementTest.java uses SQLState directly

Remove unused import.

Patch contributed by Kristian Waagan <Kristian.Waagan@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395573 13f79535-47bb-0310-9956-ffa450edef68"
907f47ce44f81f624bb40a0e60a0d9514347835b,"DERBY-1078: Move more files to 1.3 source/target tags. Add xml-api jars to
compile XML classes with 1.3. Break shared hierarchy up into 1.3 and 1.4 parts.
JDK 1.3 now passes basic tests when compiled with 1.5.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395643 13f79535-47bb-0310-9956-ffa450edef68"
19625b77edefac0b31576a5e22042dd0ae14fbf6,"DERBY-1078: Add JTA to classpath for compiles that should be under 1.3 but
need JTA in the classpath.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395663 13f79535-47bb-0310-9956-ffa450edef68"
6e08d50b16780fa8ceeb5a0665adf2278e4df2ce,"DERBY-845: Internationalize CcsidManager to FdocaSimpleArray in
client/net package.  Only one message needed to be internationalized
in this set.  derbynetclientmats passes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395690 13f79535-47bb-0310-9956-ffa450edef68"
6eb9730e99c6155b82acc5a6564733f4afd65f20,"DERBY-1127 client gives SqlException for test callable.java and parameterMapping.java on zOS

Contributed by Sunitha Kambhampati

This patch fixes
-- the calls in DateTime to use correct UTF8 encoding as the server expects.
-- adds these two tests (callable.java, parameterMapping.java) to encodingTests




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395748 13f79535-47bb-0310-9956-ffa450edef68"
3b7cf811f8349e13219e5e6a96a512fa2f47ea55,"DERBY-1078: Fix client and demo to work with JDK 1.3 when compiled with JDK 1.5
or higher. For client, ask the compiler to generate 1.3 classes, but then feed
it the 1.4 runtime classes. Client does the right things internally to work
properly on 1.3. Also, update BUILDING.txt to mention need for Ant 1.6.3 or
higher.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395749 13f79535-47bb-0310-9956-ffa450edef68"
ec2bfafe62ba5b7fd94fe3d52a0c59e90d3e7d91,"DERBY-1176: Stored prepared statements in the SYSIBM schema are not
updated on upgrade

  1. DD_Version.doFullUpgrade() now drops and recreates SPSs in all
     system schemas, not SYSIBM only.

  2. EmbedDatabaseMetaData already has the necessary machinery to load
     queries from system tables or metadata.properties depending on
     whether the engine is in soft upgrade mode or not. I extended it
     so that it could read queries from metadata_net.properties as
     well.

  3. New method EmbedDatabaseMetaData.getClientCachedMetaData() which
     executes SYSIBM.METADATA (either from system table or
     metadata_net.properties) to fetch the metadata that will be
     cached on the client.

  4. SystemProcedures.METADATA() now invokes
     EmbedDatabaseMetaData.getClientCachedMetaData() instead of
     executing the METADATA SPS directly.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395799 13f79535-47bb-0310-9956-ffa450edef68"
c24731593546e9c647c7432d448c450842cc2471,"DERBY-775 Network client: Add support for scrollable, updatable, insensitive result sets. Submitted by Dag H. Wanvik

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395866 13f79535-47bb-0310-9956-ffa450edef68"
fcf7ef387a831d3ce62b67fdd0e0f47264e76b4a,"DERBY-1180 (partial): Add vacuous implementations of missing JDBC4
methods

Stubs for missing JDBC 4.0 methods in the embedded driver.

Patch contributed by Kristian Waagan <Kristian.Waagan@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395872 13f79535-47bb-0310-9956-ffa450edef68"
00971d198d9965b99010a58da25f083a314cb58d,"DERBY-1093: Make DatabaseMetaData.getProcedures() JDBC4 compliant

Added missing column to the result set returned by
DatabaseMetaData.getProcedures().

Patch contributed by Dyre Tjeldvoll <Dyre.Tjeldvoll@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395877 13f79535-47bb-0310-9956-ffa450edef68"
97b7bcee132e0c590a00b2ec73f4d159d40f63d1,"DERBY-876: DatabaseMetaData.getSchemas() is not JDBC 3.0 compliant

Added missing column to the result set returned by
EmbedDatabaseMetaData.getSchemas().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@395878 13f79535-47bb-0310-9956-ffa450edef68"
3f2e0fa306402e69cfc1e99ad0982e4deed9f996,"DERBY-1090: Olav's patch to enable Connection.isValid() in the network client.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396028 13f79535-47bb-0310-9956-ffa450edef68"
c2f14f7443863241d657f2509b8cf7b6110a1b2f,"DERBY-972 tests derbynet/csPrepStmt and prepStmt use mechanisms that are not portable over encodings

Contributed by Sunitha Kambhampati



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396034 13f79535-47bb-0310-9956-ffa450edef68"
fd6f17331a65e582c45e26835ee03c775cb85c2e,"DERBY-1078: Cleanup compilation order and JDK 1.3 and JDK 1.4 build separation
in the tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396035 13f79535-47bb-0310-9956-ffa450edef68"
02edb5033c5d82aeeb15e2781bef2142385a37d5,"DERBY-1244: Readjust ij's LocalizedResource if new locale properties were loaded
with the -p option. Update outdated masters for LocalizedDisplay and
LocalizedConnectionAttribute. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396080 13f79535-47bb-0310-9956-ffa450edef68"
4e91e79f9f3da426840c0c90653d984dc26668e7,"Add note to BUILDING.txt section 5 for Mac-specific properties concerning
the setting of ${javadoc.tool}.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396088 13f79535-47bb-0310-9956-ffa450edef68"
645a92bfa9b8ca18d230e254e6581e419672b0e0,"Fix demo test compilation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396141 13f79535-47bb-0310-9956-ffa450edef68"
ed41c31ec8f2f3f78d2c7d85a93ec76401d1dbc8,"DERBY-1234: Verify that we raise SQLException when calling methods on
closed java.sql objects

Added test (jdbc4/ClosedObjectTest.junit) which checks whether
exceptions are thrown when calling methods on closed objects. The test
is not enabled in any suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396269 13f79535-47bb-0310-9956-ffa450edef68"
1d3aac8969aad9d2b8fa0d2c70ec6475f3365a71,"DERBY-1078: Be able to build Derby when JAVA_HOME is set 1.6

Fixed build script so that all classes needed by the storerecovery
suite are compiled.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396285 13f79535-47bb-0310-9956-ffa450edef68"
ae7bd386ea13cde545ff5f95b28b01684f7151e8,"DERBY-1094: Make DatabaseMetaData.getProcedureColumns() JDBC4
compliant

The result set returned by getProcedureColumns() is extended with 7
columns: COLUMN_DEF, SQL_DATA_TYPE, SQL_DATETIME_SUB,
CHAR_OCTET_LENGTH, ORDINAL_POSITION, IS_NULLABLE and SPECIFIC_NAME.

Patch contributed by Dyre Tjeldvoll <Dyre.Tjeldvoll@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396525 13f79535-47bb-0310-9956-ffa450edef68"
f4e03230f823665d76dadd187518c13e47926d6d,"DERBY-930: Enable autoloading of client drivers now that build 81 of jdk1.6 fixes a problem with autoloading under the SecurityManager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396638 13f79535-47bb-0310-9956-ffa450edef68"
a4846de843752d7672af1b22fb538229d756664c,"DERBY-1180: Committed Kristian's patches providing tests and vacuous implementations for missing signatures: derby-1180-2a-client.diff and derby-1180-3a-testing.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396669 13f79535-47bb-0310-9956-ffa450edef68"
cd5dc3235825d6fe300f7629280c761fba2e8218,"DERBY-1230: Remove Tester*.out log files from stress.multi test run if there
are no errors.

Committed for Ole Solberg <Ole Solberg@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396705 13f79535-47bb-0310-9956-ffa450edef68"
712b41b8ca828bc19b3afbbaec93675a96c8d8c0,"DERBY-941 (partial): Add JDBC4 support for Statement Events

a) provide the imlementation for StatementEventListener methods in
   EmbedXAConnection40
b) Modify TestUtil.java to return EmbedXADataSource40 when running
   with mustang
c) remove testing for LSE_COMPILATION_PREFIX as the prefix for the
   SQLState when throwing the Statement Error Occurred events.

Patch contributed by V. Narayanan <V.Narayanan@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396859 13f79535-47bb-0310-9956-ffa450edef68"
3549d2fc66e73a9209f6503500b1fc6e9310155c,"Removed duplicated entry in jdbc40.runall.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396871 13f79535-47bb-0310-9956-ffa450edef68"
dc9f5a9b34ecb0de9e3dd40de2a47c737979da05,"DERBY-955: Patch security policy for classtree so that sysinfo runs cleanly: bug955_sysinfo.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396875 13f79535-47bb-0310-9956-ffa450edef68"
17d490dca0ba4a7cadae450cab53809b72dcc42f,"DERBY-1246: Commit derby-1246.diff, making the public network api conform to the inheritance pattern of the embedded api.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396881 13f79535-47bb-0310-9956-ffa450edef68"
6b858b2c7a524ef7cf65be3be9521b4839915527,"DERBY-1236: Commit Dyre's new tests for setSavepoint(), derby-1236.v1.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396889 13f79535-47bb-0310-9956-ffa450edef68"
3b65e7ad594427b7a715491b1ce01a1cc835ae64,"DERBY-1234: Verify that we raise SQLException when calling methods on
closed java.sql objects

Removed getTypeMap() from EmbedConnection40 and NetConnection40 since
it is already implemented in their super-classes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396972 13f79535-47bb-0310-9956-ffa450edef68"
d6c170013d7418a59fd565a86c2b8aed509d8739,"DERBY-955: Wire the jdbc4 tests into derbyall.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396973 13f79535-47bb-0310-9956-ffa450edef68"
a882b1a1409f9d07a02edcb3691e3012c35a6f31,"Don't run jdbc40 suite on ibm15.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@396979 13f79535-47bb-0310-9956-ffa450edef68"
b9ee498b434ac57049b07a19ba1d78822a89eff9,"DERBY-1039, committed on behalf of Suresh Thalamati

-- database create will fail with error if the user specified logDevice location
   already contains non-empty ""log"" dir at that location.
   -- added a new test that tests database creation with logDevice location
      with absolute paths and also the above expected error case. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397011 13f79535-47bb-0310-9956-ffa450edef68"
e727957c5ad9c364d203975a619c375ca428bf84,"DERBY-1039, committed on behalf of Suresh Thalamati

New tests that should have been part of previous checkin for DERBY-1039 fix.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397014 13f79535-47bb-0310-9956-ffa450edef68"
03ea098526bd12b26e65c2f1fd7f54e9cf11731d,"DERBY-575: Fix blobclob4BLOB, lobStreams, and ieptests on systems with non-ASCII
native encodings.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397028 13f79535-47bb-0310-9956-ffa450edef68"
6eeba4fa934dad9594271ff8b9e648698fb4beb0,"DERBY-805: Follow up patch to address remaining issues following Phase IV work.

1) Added logic to skip predicate pushdown when either of the predicate's column references does not point to a base table. This can happen if, for example, the column reference points to a literal or an aggregate expression. Further work is required for such situations in order to correctly ""remap"" the column reference to its source (or at least, to figure out what exactly it means to remap a ColumnReference that doesn't point to a base table, and then to implement the appropriate changes)--so in the meantime, I've just decided to skip pushing the predicate for now.

2) Added logic to correctly set the column number of a ""scoped"" reference based on whether or not the reference points to a base table. Existing comments in the relevant sections of code describe why we need to set the column numbers for references pointing to base tables, but the code itself didn't actually check for the base table condition--it set the column number for all scoped references, which wasn't always correct.

3) In cases where a ColumnReference's source ResultColumn's expression is not another ColumnReference, made it so that the scope operation will return a clone of ColumnReference (instead of the ColumnReference itself) since that ColumnReference will be pushed to two result sets.

4) Added corresponding test cases to the lang/predicatePushdown.sql test and updated the master file accordingly.

I ran derbyall on Red Hat Linux with ibm142 and saw no new failures.

Submitted by Army Brown.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397043 13f79535-47bb-0310-9956-ffa450edef68"
050b61638b686684efb2ffc7e9c1dd46e1c177c2,"DERBY-1234 (partial): Verify that we raise SQLException when calling
methods on closed java.sql objects

Added checkStatus() to the EmbedXXXStatement methods that don't check
whether the statement is closed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397186 13f79535-47bb-0310-9956-ffa450edef68"
2daf25520a9b039e3af08fc2686fc0c94df5f944,"DERBY-1078: Fix XA, encryption, and a couple more tests for jdk131-built-on-jdk15/16.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397278 13f79535-47bb-0310-9956-ffa450edef68"
e2f6e00a63252d086e6b3c0f034dedf5afc07204,"DERBY-1247 - Make DerbyNetAutostart encoding safe
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397300 13f79535-47bb-0310-9956-ffa450edef68"
581dc2b88359d919762cfc1a8a19b2d5277eeba1,"DERBY-438 (partial) Optimize Blob.length() to avoid reading the whole stream if the length
is encoded in the stream from the store or the length has already been obtained once.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397313 13f79535-47bb-0310-9956-ffa450edef68"
006805f8da76eb709e79170eff3e9cce04400cc8,"DERBY-438 (partial) Add testing of BLOBs in triggers with larger BLOB values.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397315 13f79535-47bb-0310-9956-ffa450edef68"
4dbb0ff3bd01b57c299784c7ee1cd5567c8b3046,"DERBY-438 (partial) Consolidate code around converting application character streams (Readers)
to the internal stored form (modified UTF8). Pushed handling of LimitReader into ReaderToUTF8Stream
to avoid duplicated code and ReaderToUTF8Stream having to make assumptions about the caller setting
up the LimitReader correctly. Added comments and clarifications to LimitReader and ReaderToUTF8Stream.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397316 13f79535-47bb-0310-9956-ffa450edef68"
f38528ad7a41e68f4d304e7968c3b8781dd36a77,"DERBY-438 (partial) Handle CLOB columns in triggers by adding code to convert from a java.sql.Clob to a SQLClob.
Added tests in triggerGeneral.sql for small CLOB values.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397318 13f79535-47bb-0310-9956-ffa450edef68"
e2728bb535fa310da2aeedb60756dcf8cfdb5c6e,"DERBY-1258 (testcase) Add test case that shows the trigger bug when referencing a column that matches
another column when upper-cased.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397576 13f79535-47bb-0310-9956-ffa450edef68"
406bef988db1fec0ac9c9905cb074d53c9e9c6cb,"DERBY-862: Fix misc javadoc warnings in DatabaseMetaData and SystemProcedures: bug862_misc4.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397624 13f79535-47bb-0310-9956-ffa450edef68"
54792beed6c5b1b4d0f5c3b031b8f5c1e99a8367,"DERBY-1079: Commit bug1079_clientPublicAPI, adding javadoc for client classes in our public api.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397650 13f79535-47bb-0310-9956-ffa450edef68"
e540aee4e75515a51c899baf7b65c86fc2c47736,"DERBY-1007: Follow up patch to earlier submitted patch.

In a word, the fix for this issue ensures that, in the case of subqueries, the optimizer will correctly propagate the estimated costs for subqueries up to the parent subquery(-ies), thus allowing the parent query to make a better decision about which join order is ultimately the best. As seen in the example scenario included above, the correct estimates are higher--sometimes much higher--than what the optimizer was returning prior to this change: in the example, the optimizer was returning an incorrect cost estimate of 10783 before the patch, and a correct estimate of 1 million after the patch (where ""correct"" means that it's the value calculated by the optimizer and thus the value that should be returned; I'm not saying anything about the accuracy of the estimate here).

One side effect of this is that, for very deeply nested queries and/or queries with a high number of FROM tables/expressions, the higher cost estimates can be multiplied--sometimes many times over--throughout the optimization process, which means that the overall query estimate can climb to a much larger number much more quickly. If the query is big enough, this can actually cause the optimizer to reach an estimated cost of INFINITY.

That said, the current optimizer logic for choosing a plan does not expect to see an estimate of infinity for its plans. As a result the optimizer does comparisons of, and arithmetic with, cost estimates and row counts that, when applied to Infinity, give unexpected results.

I have filed DERBY-1259 and DERBY-1260 to address the ""infinity problem"" in more detail, but am attaching here a follow-up patch that takes some basic steps toward making the optimizer more robust in the face of infinite cost estimates, which are now more likely to occur given the DERBY-1007 changes. In particular, the d1007_followup_v1.patch does the following:

1) Fixes a couple of small problems with the handling of estimates for FromBaseTables, to ensure that a FromBaseTable's estimate is correctly propagated to (and handled by) the ProjectRestrictNode that sits above it. This parallels the original DERBY-1007 work but is a much simpler ""follow-up"" task as it deals only with base tables instead of subqueries, and thus the changes are fairly minor.

2) There are several places in OptimizerImpl where the optimizer will only choose to accept a plan's cost if the cost is less than the current ""bestCost"". If no best cost has been found yet, bestCost is set to an uninitialized value of Double.MAX_VALUE with the assumption that the first valid plan will have a cost less than Double.MAX_VALUE and thus will be chosen as the best so far. However, since a plan's cost estimate can actually end up being Double.POSITIVE_INFINITY, which is greater than Double.MAX_VALUE, it's possible that the optimizer will reject a valid join order because its cost is infinity, and then end up completing without ever finding a valid plan--which is wrong. What we want is for the optimizer to accept the first valid plan that it finds, regardless of what the cost is. Then if it later finds a better plan, it can use that. So in several places the d1007_followup_v1.patch adds a check to see if bestCost is uninitialized and, if so, we'll always accept the first valid join order we find, regardless of what its cost is--even if it's infinity--because that's better than no plan at all.

3) Modifies the ""compare"" method in CostEstimateImpl.java to try to account for comparisons between two plans that both have infinite costs. If this happens, we don't have much choice but to guess as to which plan is actually better. So the changes for followup_v1 make that guess based on a comparison of row counts for the two plans. And if the row counts themselves are infinity, then we'll guess based on the single scan row counts. And finally, if those values are both infinity, as well, then we're out of luck and we just say that the two costs are ""equal"" for lack of better alternative.

4) And finally, due to unexpected behavior that results from arithmetic using infinity (see DERBY-1259), it is currently possible (though rather rare) for the optimizer to decide to do a hash join that has a cost estimate of Infinity. An example of a query for which this could happen can be found in DERBY-1205, query #1. That said, the BackingStoreHashtable that is used for carrying out a hash join currently creates a Java Hashtable instance with a capacity that matches the optimizer's estimated row count. So if the row count is infinity we'll try to create a Hashtable with some impossibly large capacity and, as a result, we'll end up with an OutOfMemory error. So the d1007_followup_v1.patch adds some code to handle this kind of situation in a more graceful manner.

I ran derbyall with these changes on Linux Red Hat using ibm142 and saw no new failures.

Submitted by Army Brown (qozinx@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397675 13f79535-47bb-0310-9956-ffa450edef68"
ea12fde5b18c87e0c60803208b2e961670fc7f25,"DERBY_1254: Checked in Narayanan's patch DERBY_1254.diff, which simplifies and cleans up the creation of JDBC4 NetConnections.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397678 13f79535-47bb-0310-9956-ffa450edef68"
592457a06fddd225af1f9e1956c199481694cc87,"DERBY-1090: Commit Olav's client1090_patch2.diff patch, which addresses recovery from hanging servers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397899 13f79535-47bb-0310-9956-ffa450edef68"
4a47eda77188f8f081de49dc24e4b3b539317b36,"DERBY-1253: Second rev of UnsupportedVerifier test. The first rev failed on linux. I will log a bug for the discrepancy between xp/cygwin and linux. I am checking in this test (not wired into any suite) so that it is in evidence for the bug I will log.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397926 13f79535-47bb-0310-9956-ffa450edef68"
79525626e3640d05ef91957bba02ac87cfa38731,"DERBY-1258 Change the generated code for a new/old column in a row trigger to access columns
by position and not name to avoid the case-insensitive name lookup specified by JDBC.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397959 13f79535-47bb-0310-9956-ffa450edef68"
e65b4db83c2369831caa8ab2fb6a38837111fb9b,"Move iapi/reference/MessageId.java to shared/common/reference, so that
it can be used by the client code.

In order to avoid naming confusion, I renamed client/am/MessageId.java
to ClientMessageId.  Apologies if this causes conflicts for anyone.

Passes derbynetclientmats



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397980 13f79535-47bb-0310-9956-ffa450edef68"
6b5060c749297a0a8da75ad340fa8cf063ab109a,"DERBY-1129: Add encryption jar to classpaths so that compatibility tests run on jdk1.3.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@397989 13f79535-47bb-0310-9956-ffa450edef68"
b9e0b75f0f9ba959ed33904a4d0a8591acf670f2,"Fix package name on MessageId


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@398017 13f79535-47bb-0310-9956-ffa450edef68"
5ae8315bfb54b8864d836275b3a287a53c02cc69,"DERBY-1264: Fix importExportThruIj test on systems with non-ASCII native
encoding.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@398031 13f79535-47bb-0310-9956-ffa450edef68"
b64ccfc49ee3b5d6e7572af4fed6b15ef86d2ba3,"DERBY-1180: Commit Kristian's derby-1180-4c-logicalconnection_and_tests.diff patch, adding vacuous implementations for missing signatures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@398594 13f79535-47bb-0310-9956-ffa450edef68"
d04e05e1ff871735562221d80d118ff06c07660b,"DERBY-1265: Commit bug1265_01_sortMethods.diff. Sorts the result of Class.getMethods() to remove an indeterminacy in the test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@398630 13f79535-47bb-0310-9956-ffa450edef68"
3631eb025058e64dd4b1ba4a37d35b57215500c8,"DERBY-1234: Make all methods in EmbedResultSet, EmbedResultSet20 and
EmbedResultSet40 invoke checkIfClosed().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@398837 13f79535-47bb-0310-9956-ffa450edef68"
7eed91483f86db5a3b1dfb5782a56e7772b6fc77,"DERBY-1235: Move isPoolable() and setPoolable() from PreparedStatement
to Statement

Moved setPoolable() and isPoolable() from PreparedStatement to
Statement and implemented the methods in BrokeredStatement.

Contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@398940 13f79535-47bb-0310-9956-ffa450edef68"
eb7b240b2f0af01d1c4cbf8028fe8428d0313833,"DERBY-900  Remove use of String(byte[]) and String(byte[], int, int) constructors in network client leading to non-portable behaviour

This patch derby900.p2_encodingChange.diff.txt makes the encoding related change to remove the non portable String.getBytes() method.
Additonal patch for cleanup will follow

Contributed by Sunitha Kambhampati

-- use correct encoding UTF8 for sqlstate in NetConnectionReply.::parseSQLDCGRP(Sqlca[] rowsetSqlca, int lastRow)




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@398944 13f79535-47bb-0310-9956-ffa450edef68"
9fbb2286d3d3a2360c84c80479714919f8f6009a,"DERBY-1146: Kristian's derby-1146-v2-enable.diff patch, which cleans up the order in which the jdbc4 tests run. I removed VerifySignatures from the list until DERBY-1238 commits.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399038 13f79535-47bb-0310-9956-ffa450edef68"
97cf6942cdd4335cabf16aa787a00aac4a47cc62,"DERBY-1238: Kristian's derby-1238-1a.diff patch, adding createStruct() and createArray(). I also wired Knut Anders' VerifySignatures test into the jdbc40 suite because now it passes cleanly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399063 13f79535-47bb-0310-9956-ffa450edef68"
32f71fea8b1d85d1625d6d29b37a4bb33b7cbfef,"DERBY-1253: Dyre's derby-1253.v1.diff patch, which filters out optional methods from the output of the UnsupportedVetter test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399072 13f79535-47bb-0310-9956-ffa450edef68"
1b391635b241d2754c89a088ac814a13b51133e3,"DERBY-846: Internationalze NetAgent to NetDatabaseMetadata40 in org.apache.derby.client.net



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399078 13f79535-47bb-0310-9956-ffa450edef68"
cb767a0268de9baec621e6f0ddb3d2b89292e952,"DERBY-1078: Fix stress and dataSourcePermissions related tests on jdk131


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399164 13f79535-47bb-0310-9956-ffa450edef68"
f4d036e0f87b7cd157f8c4ad665ca6a299fe458e,"DERBY-1180: Removed empty java file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399265 13f79535-47bb-0310-9956-ffa450edef68"
1cbb00f00c02c3f08a7cf364620c7cd9b9dc4202,"DERBY-955: Commit bug955_blobclob4BLOB.diff. This converts a printout to an assertion in the blobclob4BLOB test and eliminates two more jdk16-specific canons.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399293 13f79535-47bb-0310-9956-ffa450edef68"
d014792c86f237e57138954a1c95e2c9e7cd010e,"DERBY-846: Check in missing updated master file


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399351 13f79535-47bb-0310-9956-ffa450edef68"
2dcbe066b9c2c0228aca561c825fa1759cdb9fcf,"DERBY-850 - Internationalize client/org/apache/derby/jdbc classes.
Passes derbynetclientmats.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399352 13f79535-47bb-0310-9956-ffa450edef68"
af4547435cfbda348ecb4aa5ba91d1686105eaef,"DERBY-1078: Fix problem with parsers on IBM JDK 1.3.1 by qualifying the
one reference to the interface field tokenImage in the generated parser source
with the interface class name.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399450 13f79535-47bb-0310-9956-ffa450edef68"
b0551db0f438921aa6a52ef6f303fc4861a17643,"DERBY-1253: Changes to the unsupported-method-verifier based on my review of the revised, draft JDBC4 Compliance chapter.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399482 13f79535-47bb-0310-9956-ffa450edef68"
f27bccdf045fb2c3ec47c6aebdbd5cab8375b9f3,"Correct typo in impl/sql/build.xml


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399556 13f79535-47bb-0310-9956-ffa450edef68"
1861dba623f298e385b05e144535ff15cc4791b5,"DERBY-1234 (partial) Make the methods in EmbedConnection raise an
exception when the connection is closed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399604 13f79535-47bb-0310-9956-ffa450edef68"
869ecb7055a06a9e8ecb90734ab578c14e825384,"Fixed build script so that the JDBC 4.0 classes in
java/engine/org/apache/derby/iapi/jdbc/ are recompiled when they have
been modified.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399615 13f79535-47bb-0310-9956-ffa450edef68"
407e52dcf4ecae254680b00e64db66045d5ab24f,"DERBY-941: Add JDBC4 support for Statement Events

Implementation of statement events on the client side. Patch
contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399644 13f79535-47bb-0310-9956-ffa450edef68"
986de89f4fe49c95f31e2806ef74b92e8b2ce9b9,"DERBY-514: Commit patch7-v2. Create upgrade suite. Describe 
derbyTesting.jar.path property in test README and BUILDING.txt. Don't regenerate
Upgrade_10_1_10_2.properties on a recompile.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399907 13f79535-47bb-0310-9956-ffa450edef68"
2cb6311404d5f133c52627eabe79431aeea3e543,"DERBY-1290: Add master files for JCC 2.8. 

Committed for Deepa Remesh <dremesh@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@399909 13f79535-47bb-0310-9956-ffa450edef68"
deb9b45bda9062b8e47eaf434f0107ca8f299c8a,"DERBY-1234 (partial) Removed two unneeded checks for closed objects.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@400036 13f79535-47bb-0310-9956-ffa450edef68"
88a210955f6d68e57f3cc620d142309e2e4accdc,"DERBY-1253: Commit bug1253_verifier4_networkResultSet. This changes the NotSupported exception raised by network ResultSets to be one of the UnimplementedFeature exceptions which are mapped to SQLFeatureNotSupportedException under JDBC4. Also added more excludable methods to the UnsupportedVetter test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@400172 13f79535-47bb-0310-9956-ffa450edef68"
a03c87faa470bed65b889646db3664040eba14f0,"DERBY-1277: Call to rs.isLast() may cause rs.getXXX() return values
from the last row instead of the current row in scrollable resultsets

In scrollable updatable resultset, a call to rs.isLast() may cause
rs.getXXX() return values from the last row, instead of for the
current row. It is caused by TableScanResultSet and EmbedResultSet
sharing DataValueColumn descriptors, and that the call to isLast()
will make TableScanResultSet modify the data.

Attaching a fix, where ScrollInsensitiveResultSet does not return
ExecRow from the source resultset, only from the hashtable. This
ensures that navigation in source resultsets do not affect the current
row of the scrollinsensitive resultset.

Also extended the test testRelative to test with concurrency mode
CONCUR_UPDATABLE, and fixed it so that it can run in derbynetclient
framework.

Patch contributed by Andreas Korneliussen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@400212 13f79535-47bb-0310-9956-ffa450edef68"
265830661d58ecdb4e19afed42e2c13782be3a6f,"DERBY-1234 (partial) Verify that we raise SQLException when calling
methods on closed java.sql objects

New patch (part5) which makes all the BrokeredXXX classes check
whether the object is closed. What the patch does, is:

  1) Implement checkIfClosed() and call it where needed.

  2) Implement BrokeredStatement.isClosed() which was needed by
     checkIfClosed().

  3) Remove isWrapperFor() from BrokeredStatement40,
     BrokeredPreparedStatement40 and BrokeredCallableStatement40 and
     replace it by one shared method (which does the right thing when
     the object is closed) in BrokeredStatement

With this patch, jdbc4/ClosedObjectTest.junit runs cleanly on embedded.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@400287 13f79535-47bb-0310-9956-ffa450edef68"
f64222cd09db19aff980a8bbd14cc29ad02c6699,"DERBY-1229: sysinfo and sysinfo_withProperties tests fail with SecurityException

This change modifies the handling of security exceptions in the Sysinfo tool.
If a security exception occurs while processing an element in the classpath,
sysinfo will now format that security exception's message into the output,
and then will continue on to process the other elements in the classpath.

This ensures that sysinfo provides more detailed and more complete information
about the classpath information in the environment.

Also, the sed properties for the sysinfo tests are now updated to mask out
the getProtectionDomain security exception, since that is an expected
exception in these tests (in fact, there are many expected security exceptions
in these tests).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@400366 13f79535-47bb-0310-9956-ffa450edef68"
f3ab04f35dde0f944acdac272f2e4742f65a89d0,"- DERBY-326 Improve streaming of large objects for network server and client - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@405037 13f79535-47bb-0310-9956-ffa450edef68"
1b367048a718519f41acaa958b7f3e7afad83eee,"DERBY-1079: Re-doing submission 393834. The old version of javacc was accidentally reintroduced by DERBY-846. I am checking in javacc version 4.0 again.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@405201 13f79535-47bb-0310-9956-ffa450edef68"
4777f5c2bfb84e169db4450cae4feaed993e061c,"DERBY-1266 - Attempted deleteRow or updateRow while on insert row gives wrong error message.  Passes derbynetclientmats and jdbc40 test suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@405205 13f79535-47bb-0310-9956-ffa450edef68"
9ec13b2c1289f58b7ea8c7cd3c74da29849d9b17,"DERBY-862: Commit bug 862_misc5.diff, more miscellaneous javadoc warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@405210 13f79535-47bb-0310-9956-ffa450edef68"
28e9ccd5ac00e1862789f0a32ab5068a4467f03f,"DERBY-1079: Patch bug1079_split2.diff, This splits the public javadoc into a jdbc3-specific and jdbc4-specific sets when built with the jdk16 variable set.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@405560 13f79535-47bb-0310-9956-ffa450edef68"
bc8fb910a152228f694a31d9191377cffdb2b09b,"DERBY-178: Add debug archives to snapshot target.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@405563 13f79535-47bb-0310-9956-ffa450edef68"
02bab866bc37038e8ccb67bb3f8f8897e649ee28,"DERBY-1078: Add lib-debug distribution to tools/release/build.xml


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@405655 13f79535-47bb-0310-9956-ffa450edef68"
6a85bc6cc5f90af4235e8a598730464b6a6e8b06,"DERBY-577: Test harness should not alter user.dir property

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@405670 13f79535-47bb-0310-9956-ffa450edef68"
75194ba01116123a35227f6b41eb59e2f8b75043,"DERBY-1090: Commit Olav's brokeredlogical1090.diff patch, which forwards missing Connection calls for pooled and xa connections.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406101 13f79535-47bb-0310-9956-ffa450edef68"
99683a9c63ecbd696055fb9ebc0eed2783bf0bd9,"DERBY-900 -  Remove use of String(byte[]) and String(byte[], int, int) constructors in network client leading to non-portable behaviour

Decided earlier to break up the derby900.p2.diff.txt, so I am attaching now a patch with the cleanup changes separately in derby900_p2_cleanup.diff.txt. Changes are:

-- remove unnecessary conversion from sqlstate string to bytes and back to string , in parseSQLDCGRP(Sqlca[] rowsetSqlca, int lastRow) in NetConnectionReply.
This has been done by adding a constructor in NetSqlca to take in the sqlstate as string.
-- cleanup method getSqlState() in Sqlca.
-- cleanup of ccsid_ in Sqlca as it is not used.

Please note, the parseSQLDCGRP method in the diff shows more changes because of change in indentation because of removal of the try block.

-- ran derbynetclientmats on ibm142/linux OK.

Contributed by Sunitha Kambhampati




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406120 13f79535-47bb-0310-9956-ffa450edef68"
f4c7bc05cccb6d8ea040bb32b3166b942891a942,"DERBY-955: Get derbyall on jdk1.6

Run jdbc40 as part of derbynetclientmats.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406278 13f79535-47bb-0310-9956-ffa450edef68"
a1c5d5f0f4dbce02e29831beda9fa146c5f0794f,"DERBY-1251: cancelRowUpdates() affects rows updated with updateRow()
in scrollable updatable resultsets

Fix contributed by Andreas Korneliussen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406279 13f79535-47bb-0310-9956-ffa450edef68"
320777fdd8427811e3aa3e89b3e9988e19198615,"DERBY-1234: Verify that we raise SQLException when calling methods on
closed java.sql objects

Final patch for DERBY-1234. The patch makes the methods in the client
driver check whether the object is closed. With this patch,
jdbcapi/StmtCloseFunTest.java has the same behaviour with the client
driver as with the embedded driver so the DerbyNetClient canon could
be removed. Also, jdbc4/ClosedObjectTest.junit runs cleanly both on
embedded and on the client, and it has been added to the jdbc40 suite.

In addition to adding checkForClosedXXX() calls, this patch

  a) implements Connection.getTypeMap() with the correct generic
     signature in NetConnection40 and LogicalConnection40 to avoid
     compiler warnings

  b) implements isWrapperFor() (with check for closed object) in
     Statement, so that it could be removed from Statement40,
     PreparedStatement40 and CallableStatement40


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406280 13f79535-47bb-0310-9956-ffa450edef68"
f4fc366c0f0578c30300e0e91fd4df9537e0a7c3,"DERBY-1087 Updatable result sets behave different depending on the type of query used to generate the result set. Submitted by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406683 13f79535-47bb-0310-9956-ffa450edef68"
c50ab515b2fe22f2dd0a953af59512ace04bbf4a,"Trivial patch to fix dblook_test diffs on wctme5.7


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406766 13f79535-47bb-0310-9956-ffa450edef68"
d9d4c78ce48e3ab97a4c0e32726e76a7d05c97f5,"DERBY-1154: Fix derbynet/testSecMec on jdk131

Committed for Sunitha Kambhampati <ksunithaghm@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406769 13f79535-47bb-0310-9956-ffa450edef68"
ccfc0bd2e0966d6bf7bdd96a0a995e75e948bd13,"DERBY-1311: Skip wisconsin test on J2ME/Foundation. Remove old reference to
wisc_setup.sql

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406771 13f79535-47bb-0310-9956-ffa450edef68"
2999ac0c5d58084224c1690dbb937183dbdb2fca,"Back out 406771, should have only gone into 10.1 branch


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406773 13f79535-47bb-0310-9956-ffa450edef68"
47de7b6d454221a309c413df3a47a64be26dd48b,"DERBY-1309: Update j9_foundation/updatableResultSet.out canon


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406775 13f79535-47bb-0310-9956-ffa450edef68"
25d6720b79e3290b6cb59bdbb5c8c6ef9e4ff1f7,"DERBY-1219: jdbcapi/checkDataSource test hangs intermittently with client

This patch contributed by Deepa Remesh (dremesh@gmail.com).

This patch enables the checkDataSource and checkDataSource30 tests to
run with the client framework by removing the code which shuts down
the system in the middle of the test. This is the code which causes
the intermediate hang.

The hanging problem has been logged as a separate issue, DERBY-1326.

The shutdown is a valuable part of the test because it verifies that the
global transaction state is valid even after the database has been shut
down, so once the hang problem has been resolved, this test should be
modified again to re-enable the shutdown processing with the client framework.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406776 13f79535-47bb-0310-9956-ffa450edef68"
ae0d4e606bec0346fcad54291980397b36a96cc8,"DERBY-1307: Disable jdbc40 tests on J2ME/Foundation


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406777 13f79535-47bb-0310-9956-ffa450edef68"
cccb382b90f5a08401f32f0f7ad77ed8820ee547,"- DERBY-1303 The test of derbynet/SuicideOfStreaming.java is failed when programs are build as Insane - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@406921 13f79535-47bb-0310-9956-ffa450edef68"
125c328fa18b3e20e00bb81a246547a41aed7388,"DERBY-1328: Commit Narayanan's ClobBlob_free_v1.diff patch, implementing the LOB free() method introduced by JDBC4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407116 13f79535-47bb-0310-9956-ffa450edef68"
5c9d46a058422f128c0f174df7b1ff4061320e75,"Minor change to javadoc.tool property for Mac OS X build instructions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407202 13f79535-47bb-0310-9956-ffa450edef68"
ae71c7458f946463e16dd4f3b96d93e3e1e03a42,"DERBY-1156: Committing this for Suresh, reviewed by Mike Matrigali.

Here is Mike's review comments:
I have reviewed this patch and run a full set of tests on windows XP / sun jdk1.4.2 which passed. I think this patch should be committed as is. It is a good incremental checkin for this feature. It provides a set of tools for the rest of the project, and gets the code to the point that it can encrypt an existing unencrypted db. Future checkins should address a couple of things:
1) obviously more testing. Some quick notes, the current tests may want to show that accessing the newly encrypted db with a bad password does not work - just to insure all the url;s are not just being totally ignored. Also want to test abort - probably need a testing codepoint to cause the failure at the right time.
2) fix up the comments, there are some typo's .
3) usual nit - some greater than 80 char lines.

I would have committed this change now, but svn still is not back.

Patch submitted by Suresh Thalamati (suresh.thalamati@gmail.com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407366 13f79535-47bb-0310-9956-ffa450edef68"
6d02108f092a4b9fafea1c7a1c8240d534615f73,"DERBY-514: Enable upgrade tests to work with unpackaged classes. Add upgrade
tests to derbyall.

Committed for Deepa Remesh <dremesh@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407396 13f79535-47bb-0310-9956-ffa450edef68"
1523324292df41750942f5ec862ada1260cd3d56,"DERBY-1324: Clean up a couple of remaining copyright notices and misleading
javadoc text.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407403 13f79535-47bb-0310-9956-ffa450edef68"
9ab36fe5be3632bbd1703a025618a585f0db4a57,"- DERBY-1302 Indent source files touched in DERBY-326 - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407547 13f79535-47bb-0310-9956-ffa450edef68"
8846963e6e6ad5f65f44a87ce6d0b7b4006eb9c5,"DERBY-1255: Narayanan's ClobBlob_create_v1.diff patch. This adds the first increment of support for Connection.createClob() and createBlob(), new methods added in JDBC4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407549 13f79535-47bb-0310-9956-ffa450edef68"
7bac3b36120aac7fb08d5b81755f09b307a94ef7,"DERBY-1282: Dyre's derby-1282.v1.diff patch. Fills in new client info methods added by JDBC4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407617 13f79535-47bb-0310-9956-ffa450edef68"
d1c8b248a42851395a79cd25c776ce6f09e6996c,"DERBY-1141: Improve usability of running tests with useprocess=false.
Committing patch dated 20060512.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407637 13f79535-47bb-0310-9956-ffa450edef68"
ee43510ef61c621ebbe230d06aaac35b4ab52834,"DERBY-892: Allow for test-specific additions to the derby_tests.policy file.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@407642 13f79535-47bb-0310-9956-ffa450edef68"
4ade64cc4743e25497cbf4ab0fd3bf19b0107b43,"DERBY-1334: Add policy file for testProtocol to prevent hang on Unix platforms.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@408077 13f79535-47bb-0310-9956-ffa450edef68"
1dd6f9465cfdb0d7c3bc0ac5eb0bf11d272fb3b1,"Put setIO permission back for derbyTesting.jar and codeclasses. Nist runs with
useprocess=false, so the harness needs this permission to change the system
out and error streams in execTestNoProcess(). Also remove some empty files
left by previous DERBY-892 checkin.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@408502 13f79535-47bb-0310-9956-ffa450edef68"
bb7eb4d317a095bedf73ea4a7bba93b343f52279,"DERBY-1214: Anurag's derby-1214_2.diff patch. This forwards new JDBC4 calls on Pooled and XA objects to the appropriate worker objects.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@408733 13f79535-47bb-0310-9956-ffa450edef68"
6da3fc6af85bdc825de39ef23dc8960f3f646af7,"DERBY-1253: Commit bug1253_forwarding.diff. This forwards some miscellaneous JDBC4 calls to competent objects.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@408772 13f79535-47bb-0310-9956-ffa450edef68"
013d2f58c36fc3a5a74bbfb53573ad25c0670379,"DERBY-1156: Fix encryptDatabaseTest1 on Solaris. Encryption provider on Solaris
does not accept 16-byte keys for the default cipher. 

Committed for Suresh Thalamati <suresh.thalamati@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@408822 13f79535-47bb-0310-9956-ffa450edef68"
6b0118a9823c83894c081938ca56aa0b076a66ef,"DERBY-1323 Detectability methods rowUpdated, rowInserted, rowDeleted can be called from illegal states in both clients. Submitted by Dag H. Wanvik

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@408875 13f79535-47bb-0310-9956-ffa450edef68"
348f4cd0c03001cc17f718f23c6489609a5a0a58,"DERBY-848: Internationalize NetSqldta to OpenSocketAction in 
org.apache.derby.client.net.

Passes derbynetclientmats on JDK 1.4/Solaris and jdbc40 on JDK1.6/Solaris



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@408971 13f79535-47bb-0310-9956-ffa450edef68"
fe8bb68e33baa1bb83a191ac86cb54ddfb15bf20,"DERBY-1325 Isolation level of local connection does not get reset after exiting a global transaction if the isolation level was changed using SQL

Attaching a patch 'derby-1325-v1.diff' which ensures correct isolation level gets used once we switch back to local mode when SQL is used to set the isolation level.

Patch does the following:

* Adds call to get the isolation level up to date when joining/resuming a global transaction. This will make sure the BrokeredConnection object has the correct isolation level to be used when we switch back to local mode.

* Adds a test to jdbcapi/checkDataSource.java and modifies the master files.

With this patch, I ran derbyall with Sun jdk 1.4.2 on Windows XP. No failures. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409002 13f79535-47bb-0310-9956-ffa450edef68"
ceb72100ac4df391f38f804c1a020b234f4ddc34,"DERBY-1340: Anurag's derby-1340.diff, which reverts the refactoring of the client api committed as part of DERBY-1246.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409007 13f79535-47bb-0310-9956-ffa450edef68"
18a0d89d3c03277a53949262d3b9ecb02966d78c,"Exclude SqlExceptionTest from JDK 1.3 tests



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409008 13f79535-47bb-0310-9956-ffa450edef68"
7855f49658fc02cc834849539f4dbce92331123e,"DERBY-1276 Calling ResultSet.isLast() on a scrollable insensitive resultset, causes the entire ResultSet to be populated. Submitted by Andreas Korneliussen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409009 13f79535-47bb-0310-9956-ffa450edef68"
f271471d3c06ee66c970a77838853adf33ffde6b,"DERBY-847: Internationalize NetIndoubtTransaction to NetSqlca in 
org.apache.derby.client.net



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409037 13f79535-47bb-0310-9956-ffa450edef68"
10b9cb1bcb36acc792275f1e9a28436dfb7cb71e,"DERBY-1322: Missing resets of isOnInsertRow state in net client when navigating away via other than ResultSet#next. Submitted by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409170 13f79535-47bb-0310-9956-ffa450edef68"
26ce9e7969a09910682b69d1fe09e7b2221803ec,"DERBY-1344: Commit bug1344-bumplastdigit.diff. This bumps the last number in the release identifier to distinguish our next snapshot off the mainline from the previous one. This also fixes a bug in the bumplastdigit target.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409394 13f79535-47bb-0310-9956-ffa450edef68"
e570c3147f7f6d6bbc8cb6881a7203d2c285f8e5,"DERBY-1214: Commit Anurag's derby-1214_3.diff, changing the name of a test harness property.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409420 13f79535-47bb-0310-9956-ffa450edef68"
2c65d7cb1b3eddc356429409b77de604e8275bc7,"DERBY-438 Support statement triggers for BLOB and CLOB types. Change the trigger
virtual tables to implement PreparedStatement instead of ResultSet. This allows
the mechanism to use the java.sql.ResultSet generated from the language internal
ResultSet directly, rather than through a wrapper. The wrapper approach caused
issues when the wrapper's JDBC version does not match the version running in the
engine. BLOB/CLOB caused problems with statement triggers as the wrapper
only supported JDBC 1.2. Add tests for BLOB (will add CLOB in subsequent patch),
also add upgrade tests across release boundaries to ensure trigger modifications
in 10.2 do not break in soft upgrade mode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409422 13f79535-47bb-0310-9956-ffa450edef68"
49335b4f9c5236bc484a0dfd41d76ccb22d0bf18,"DERBY-1333: Commit Narayanan's jdbc40_xa_test_suite_v1.diff, creating a new xa suite for jdbc4 features.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409444 13f79535-47bb-0310-9956-ffa450edef68"
6a925a39f416e8023060375faf4dbf8bd1733fba,"DERBY-849: Internationalize Reply to Typdef in org.apache.derby.client.net
Also migrated some network exceptions from SQL State 08006 to 58009,
to be in line with DRDA spec.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409459 13f79535-47bb-0310-9956-ffa450edef68"
b22383e51d8984f3c846777eb4b45680477c8698,"DDERBY-1298 Tracing client data source gives NPE if all data source properties are not set

Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409466 13f79535-47bb-0310-9956-ffa450edef68"
ac53be6ad60875d25cc36eba0cb1220a7fbb8b3a,"DERBY-1148 Client XA getTransactionIsolation() does not return the correct isolation level when rejoining a global transaction

Contributed by Deepa Remesh

Summary of patch:

* Changes getTransactionIsolation method in org.apache.derby.client.am.Connection class to get the isolation level from server. The built-in function ""CURRENT ISOLATION"" is used for this. It throws SQLException in case of failures. At the start of the method, the current auto-commit value is stored in a variable. When executing the function, auto-commit is set to false. At the end of the method, auto-commit value is restored. As it is the client which drives the auto-commit, this strategy of locally changing the auto-commit works.

* Removes the excludes for DERBY-1148 and DERBY-1035 from checkDataSource test. Adds a test for transaction suspend/resume in checkDataSource test. Updates master files

With this patch, I have run derbynetclientmats with Sun jdk 1.4.2 on Windows XP. I also ran checkDataSource.java and checkDataSource30.java with embedded and client framework. No failures



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409470 13f79535-47bb-0310-9956-ffa450edef68"
2f9391c59367f0ea6b30c6d12f32eb22fd0ac188,"DERBY-892: Provide derbyTesting.replacePolicyFile option for completely
replacing a tests' policy file. Remove serverPolicyFile option that wasn't being
used. Update testing/README.htm

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409471 13f79535-47bb-0310-9956-ffa450edef68"
945a0cca18faed5e6879126d7f8ba02a344ee1c0,"DERBY-1348: hack to propagate derbyTesting.jar.path from system->suite->test.
Harness' use of properties really needs cleaning up.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409534 13f79535-47bb-0310-9956-ffa450edef68"
e2751b563146bac91db6d99b977c7ad3b896274f,"Add setIO permission back to derby_tests.policy. Causes test harness to die
suddenly at RunTest:2552 if we don't have this permission because we have
alerady set the security manager but don't have setIO permissions as granted
by useprocessfalse.policy.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409565 13f79535-47bb-0310-9956-ffa450edef68"
5969d29cde9c02763d66d61e39445accaf0c5727,"DERBY-1072: Fix misleading error while droping a view.

Submitted by Mayuresh Nirhali(Mayuresh.Nirhali@Sun.COM)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409578 13f79535-47bb-0310-9956-ffa450edef68"
5d11c1f4bcd9b5ebf798d348082354a8a0a0ea89,"DERBY-1245 Add o.a.derby.client.am.ClobWriter test coverage
DERBY-1354 Writer.write(int c) to writer from Clob.setCharacterStream(long pos) appends integer value, not character

Contributed by Anders Morken



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409688 13f79535-47bb-0310-9956-ffa450edef68"
48bf2fda61995b1b8c34714762a35443f3b4f5d1,"DERBY-1072: Update two more master files.

Committed for Mayuresh Nirhali <mayuresh.nirhali@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409713 13f79535-47bb-0310-9956-ffa450edef68"
d2989b7c8e85d8e5237ca2f36344eb4f163a426b,"- DERBY-1302_2 Indent source files touched in DERBY-326 - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409797 13f79535-47bb-0310-9956-ffa450edef68"
e74f4615fe03840d6b197b53aeb4a4ce6ade9e52,"DERBY-892: Add missing file from 892_4 patch.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409805 13f79535-47bb-0310-9956-ffa450edef68"
37c5e3c408b4be819ad4d81c1fb8d43d45cd8daa,"DERBY-1339 sysinfo messages translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409884 13f79535-47bb-0310-9956-ffa450edef68"
23bc124ab1cf1e9adaed6eef005e13253e8279cd,"DERBY-1339 dbtools messages translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409885 13f79535-47bb-0310-9956-ffa450edef68"
7cb31ce9df06ef8effbac8342f9798bcb40c9f79,"DERBY-1339 - Corrections due errors found by the program native2ascii

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@409899 13f79535-47bb-0310-9956-ffa450edef68"
2bb86c75dbd1f8cfbaa0c3c0ae3d884ee5083c5e,"DERBY-1339 servlet messages translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410008 13f79535-47bb-0310-9956-ffa450edef68"
60507bf1b9773774ad6732f016c1760ad9c9ae10,"DERBY-1339 servlet messages translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410061 13f79535-47bb-0310-9956-ffa450edef68"
57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b,"DERBY-1308: Tests jdbcapi/HoldabilityTest.junit,
jdbcapi/UpdateXXXTest.junit,jdbcapi/SURTest.junit fail on
wctme5.7_foundation

Attaching patch DERBY-1308_3_20060527.*. In this patch, I moved the
get*DataSource* methods from functionTests/util/BaseJDBCTestCase.java
to a new file, functionTests/util/TestDataSourceFactory.java, and the
method getDefaultSourceProperties into
functionTests/util/TestConfiguration.java.  I adjusted affected tests
that I could find, and verified the affected tests where applicable
with wctme5.7, wsdd5.6, wctme5.7_foundation, jdk142 and jdk16.

Patch contributed by Myrna van Lunteren.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410267 13f79535-47bb-0310-9956-ffa450edef68"
ba26108556193ac534968a6c58119079128cca5d,"DERBY-1344: Bump last digit of release identifier after posting 10.2 snapshot.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410281 13f79535-47bb-0310-9956-ffa450edef68"
9f93e54f4aa4b51f42ee5e37100db1c4fef9361b,"DERBY-1339 sysinfoMessages translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410380 13f79535-47bb-0310-9956-ffa450edef68"
b2a17475e65e270d4d164e49dfb576df8d788ea0,"DERBY-1350: Remove old constructors for SqlException and
DisconnectException and clean up any remaining users of the old
constructors.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410384 13f79535-47bb-0310-9956-ffa450edef68"
aba06f6eaf828873a9ca18de75928b37fd7b1ae0,"DERBY-1339 messages for NetworkServerControl translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410393 13f79535-47bb-0310-9956-ffa450edef68"
977561c9de22d12b40a3a2f79a8df22ba7fc7752,"- Rollback patches for DERBY-1302. Work for DERBY-1302 was suspended to release of 10.1.3 - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410570 13f79535-47bb-0310-9956-ffa450edef68"
2ed74034f5376fcf40bf4fd7e22880a42722d264,"DERBY-1344: Bump the last digit of the release identifier after posting a revised 10.2 snapshot.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410572 13f79535-47bb-0310-9956-ffa450edef68"
c4566a09e7a22d452604430b709c4be163ea9da5,"DERBY-942: Kristian's patch to wire ConnectionTest into jdbc4 suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410591 13f79535-47bb-0310-9956-ffa450edef68"
7a1db7b607a33089d083007bb63df0f78c7aab24,"DERBY-1253: Check in bug1253_wireIn.diff. This wires the UnsupportedVetter test into the jdbc4 suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410694 13f79535-47bb-0310-9956-ffa450edef68"
b2d40958d709a57c505513596776315f06b96c46,"DERBY-842 - Internationalize a message that was missed


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410695 13f79535-47bb-0310-9956-ffa450edef68"
ed90c539d4652dc743aea10a01798dee70ef0665,"DERBY-438 (partial) Add statement trigger tests involving selecting large CLOB values.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410702 13f79535-47bb-0310-9956-ffa450edef68"
5d3a4f2ed35f268cb3d43a8330bd7354c06ec72b,"- DERBY-1346 unit/fillLog.unit seems to be failed if program was build as sane. - Patch by Myrna van Lunteren (m.v.lunteren@gmail.com)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410860 13f79535-47bb-0310-9956-ffa450edef68"
621864e14f2345e3ca6c08e23a1907e5df27fd2b,"DERBY-1366  minor patching up of some test issues - state May 31 2006

Contributed by Myrna van Lunteren

Attached is patch tests_20060531.diff (and stat) for the trunk, which removes some failures in derbyall runs with less commonly tested jvms by making a number of minor changes:

- after the fix for DERBY-577 all .java tests that use ext*
directories failed with the 'j9' jvms (wsdd5.6, wctme5.7,
wctme5.7_foundation - i.e. all jvms which have executable 'j9' instead of java). When I first started working with those jvms it seemed that those jvms decided another directory was user.dir, and the only solution I could see at the time was to add a section changing the directory. Removing the setting of user.dir made all jvms work the same way, so this if block had to come out, but I had forgotten...(change to RunTest.java that can only possibly affect j9 runs)

- because the j9 jvms do not run with security manager, the output of the test RunClassPathTester.java cannot be made stable. Adding RunClassPathTester_app.properties to skip the test with those jvms.

- wctme5.7_foundation required updated master(canon) for
grantRevokeDDL and outparams, and the canon for grantRevoke is no longer needed.

- upgrade test cannot be run with jdk131, ibm131, wsdd5.6, wctme5.7 or wctme5.7_foundation because it uses classes not present in those jvms. Added suites/upgrade.properties to skip.

I tested derbyall with wctme5.7_foundation and wctme5.7, ran affected tests with wsdd5.6, and upgrade suite with wcmte*, wsdd5.6, ibm131,jdk131, jdk142.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410913 13f79535-47bb-0310-9956-ffa450edef68"
94057f1e7f1b6d36e64109fd7d8b5d6d2a8720ed,"DERBY-942: Commit Kristian's derby-942-connectiontest-rewrite.diff, which generalizes the connection test to run under XA also.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410945 13f79535-47bb-0310-9956-ffa450edef68"
44ad7f6a6fd0877469811206fe16e7f8b5ac6dfe,"DERBY-1186 - Add a new test that does a sanity check of our message ids,
looking for duplicates and orphans.  Not part of derbyall yet because
there are a number of failures I need to track down.  The failures will
be fixed as a separate JIRA

No test suites run, as this is a new test and has no interaction with
existing code.

This checkin also has a rider which is a small javadoc fix to 
SqlException.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@410975 13f79535-47bb-0310-9956-ffa450edef68"
d2a91c3ae017f9cf8e596bffdb37299266f79351,"Set current privilege type to be SELECT_PRIV during binding of select statement that a view represents.

Submitted by Satheesh Bandaram (satheesh@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411002 13f79535-47bb-0310-9956-ffa450edef68"
583cd0fa3ea7406c669516e151b7b28ae71f12e6,"DERBY-1148 part 2 javadoc fix
Contributed by Deepa Remesh



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411011 13f79535-47bb-0310-9956-ffa450edef68"
4e091b6380224d13681c4df1d8f164a4dfba12ec,"DERBY-1313: SUR: Use DRDA's extended diagnostic to send ROW_UPDATED and ROW_DELETED warnings. Submitted by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411167 13f79535-47bb-0310-9956-ffa450edef68"
baef65af168ba7eaa4ca93d6e8330a55926af6bc,"DERBY-1262: Like-predicates: % does not match tab character

Patch contributed by H√•vard Mork <havard.mork@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411174 13f79535-47bb-0310-9956-ffa450edef68"
9c2fcf28f3a4c6ab9236780c9e8c555b3ad6c87a,"Ensure sanity check on stack depth of a generated method is only invoked
if the generated class is error free. Checks against an invalid class file
format can cause unexpected errors as the constant pool index values may be corrupt.
Fixes the lang/largeCodeGen.java test in sanity mode.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411204 13f79535-47bb-0310-9956-ffa450edef68"
20a22b038b467e7bf77353a15079c0f7e469b016,"DERBY-1069: Client unwraps exceptions now (the problem was in NetAgent).
Also fixed a bug where the cause stack trace was not being logged in
the trace file, and a formatting bug with the port number


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411336 13f79535-47bb-0310-9956-ffa450edef68"
fdd31675752ae980dfafba05c4b4cfa341ec134a,"DERBY-1329: Set ColumnReference in CurrentOfNode when a match is found.

Attaching a patch to address this issue. In a word, the problem is that the ColumnReference in a CurrentOfNode can, in certain situations, end up with a tableNumber that is never set, and hence it defaults to -1. The fix I've made ensures that the ColumnReference's tableNumber will always be set when necessary--i.e. when we've found the ResultColumn that matches the received ColumnReference. I think this is the correct fix for two reasons:

1) In FromList.bindColumnReferences(), there is the following comment:

  /* TableNumbers are set in the CR in the underlying
   * FromTable. This ensures that they get the table
   * number from the underlying table, not the join node.
   * This is important for beging able to push predicates
   * down through join nodes.
   */

The place where ""TableNumbers are set"" is in the getMatchingColumn() call, which means that the underlying FromTable (which includes CurrentOfNode) is responsible for setting the table number.

2) Inspection of all other FromTables that implement getMatchingColumn() shows that they all set the ColumnReference's table number if the corresponding ResultColumn is found. The one exception is JoinNode, but the getMatchingColumn() method in JoinNode in turn calls the method of the same name on the join's left and right nodes, so we know that, eventually, the ColumnReference's tableNumber will get set by one of the other FromTable's getMatchingColumn() calls. So the only FromTable that does not set the tableNumber is CurrentOfNode, and that's the reason for the failure described in this issue.

The change seems fairly minor but if anyone has a chance to double-check it, that'd be great. I also added a test case (using the repro posted in the above comments) to lang/update.sql.

I ran derbyall on Linux Red Hat (RHEL4) using ibm142 and saw no new failures.

Submitted by Army Brown (gozinx@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411393 13f79535-47bb-0310-9956-ffa450edef68"
e1d51e30d03fd2381aec3c02ecd6399b4cef5df0,"DERBY-655: Generate unique logical conglomerateId for duplicate indexes, instead of just reusing existing conglomerateId.

Submitted by Mamta A. Satoor(msatoor@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411399 13f79535-47bb-0310-9956-ffa450edef68"
16f1998896cf141b6dbbaf994c3a254881fdbbf8,"DERBY-1356: Positioned update/delete when positioned after last or
before first causes NullPointerException

Patch contributed by Fernanda Pizzorno <Fernanda.Pizzorno@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411428 13f79535-47bb-0310-9956-ffa450edef68"
e012b40bd11540895c4cbabd64b0f03e5e8e3260,"DERBY-1339 messages for NetworkServerControl translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411435 13f79535-47bb-0310-9956-ffa450edef68"
d7644087c45c952f51087cf952dbd1153582aa9a,"DERBY-1339 messages for NetworkServerControl translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411471 13f79535-47bb-0310-9956-ffa450edef68"
4253ed550e4682820629b9d6f04113f531aff973,"DERBY-1339 Text for exceptions translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411564 13f79535-47bb-0310-9956-ffa450edef68"
bfcb11e9858d9064845daed9c1752de9c0453746,"DERBY-1339 Text for exceptions translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411614 13f79535-47bb-0310-9956-ffa450edef68"
b2993a6c2eca2a80c1d16c428ddc1dea65527d76,"DERBY-1350: Remove old constructors for SqlException and DisconnectException and clean up any remaining users of the old constructors + updates

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@411784 13f79535-47bb-0310-9956-ffa450edef68"
1387d1d1e841c66e4e6d9f7d5eab0fb2debdbdb5,"javadoc fix: @returns changed to @return.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412181 13f79535-47bb-0310-9956-ffa450edef68"
7c3b39d5ccabc81189a1342c828798e8774cbe61,"DERBY-1380: Commit Dyre's derby-1380,v1.diff patch, which makes it possible to connect to Derby databases when running under build 86 of jdk1.6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412204 13f79535-47bb-0310-9956-ffa450edef68"
067d31dd0e5d16e28a89dd0202036a43114236c3,"DERBY-1362: Commit bug1362_1.diff, fixing the manifest for derby.jar.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412207 13f79535-47bb-0310-9956-ffa450edef68"
3d901b8aea186b09c0113e9ad010fc6c7c8ff45c,"DERBY-1253: Make UnsupportedVetter test smart enough to handle methods which change shape.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412220 13f79535-47bb-0310-9956-ffa450edef68"
985a9b0baeac17ebba037028df9dc3b82089931e,"DERBY-1365: Fixes two minor problems with logic in Optimizer. Here is the note from contributor:

In addition to fixing the two issues described, the patch also resolves another potential problem: there are several places in OptimizerImpl.getNextPermutation() where calls to rewindJoinOrder() are made. These calls typically indicate that the optimizer has decided to abandon or ""short circuit"" a join order before calculating the full cost. For some of these calls--esp. the ones that can occur in the middle of the join order (as opposed to those which will only occur on a complete join order)--the ""rewind"" operation needs to make sure to reload the best plans for the optimizables that are pulled as part of the ""rewind"" process. Otherwise Derby could end up generating a plan for an optimizable even though that plan was part of a join order that was ""abandoned"" (i.e. rewound in the middle), which is logically incorrect and could lead to sub-optimal performance. I've included changes for this issue as part of d1365_v1.patch.

I ran derbyall on Red Hat Linux with d1365_v1.patch applied and saw no new failures. I would appreciate reviews/comments/commit if anyone has the time... 

Submitted by Army Brown (qozinx@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412222 13f79535-47bb-0310-9956-ffa450edef68"
8a44c0f3824e9ed2c45c2c47d8153f4d002fda1c,"DERBY-1380: derby-1380.v2.diff, adding new overloads for createQueryObject().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412239 13f79535-47bb-0310-9956-ffa450edef68"
ef339c91bbf51fe914fe549034b3809a7234efb1,"DERBY-655: getImportedKeys returns duplicate rows in some cases

Updated master file for the upgrade test. Will have to be changed once
10.1.3 is released and the jars checked in.

Patch submitted by Mamta A. Satoor <msatoor@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412320 13f79535-47bb-0310-9956-ffa450edef68"
64ca144cf06184adff2161f4344fee709b565df8,"DERBY-435  Enable checkDataSource.java and checkDataSource30.java tests for fixed bugs.


I had attached one more small patch "" d435-enable-tests-for-fixed-issues.diff"" for trunk to be reviewed/committed. This patch enables the tests for issues which have been already fixed and it marks the remaining excludes in the test with the JIRA issue number.

Contributed by Deepa Remesh




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412515 13f79535-47bb-0310-9956-ffa450edef68"
56439cb83b1d9ea0373d299d9a2f0ca116fe277e,"DERBY-501 (partial) Added test jdbcapi/ProcedureTest.junit. The test
is not enabled in any test suite, since it won't succeed until the
actual fix is checked in.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412711 13f79535-47bb-0310-9956-ffa450edef68"
6be6ae477bc1aa8476cabc7e3eff9f24ec974c2b,"DERBY-1339 Text for exceptions translated into Brazilian Portuguese - update

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412733 13f79535-47bb-0310-9956-ffa450edef68"
9148a9acc10b7084b82d0003bc247c37b433ba27,"DERBY-1295 contributed by Fernanda Pizzorno. Scroll insensitive resultset should not implicitly close due to positioning in autocommit mode

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412831 13f79535-47bb-0310-9956-ffa450edef68"
494a3289f4a4ea3279484229a79d389e70b924ea,"DERBY-1004: Client should not require user to rollback the active transaction before call to PooledConnection.getConnection()



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412852 13f79535-47bb-0310-9956-ffa450edef68"
e1e03892c79049b63666e91e486ac0d7ad8f43ae,"DERBY-1379: Committed Olav's autoload.diff. This fixes the problem which caused all of the nist tests to fail when derbyall was run against jar files under jdk1.6 with the db2jcc jar in the classpath.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412859 13f79535-47bb-0310-9956-ffa450edef68"
6dba60c90420b40a2f694e7621408f365470a808,"DERBY-851: Remove org.apache.derby.client.resource package - no longer needed.
Also removed client/am/ResourceUtilities.java, which was an API on 
top of the resources package.  Converted single usage of ResourceUtilities
to use MessageUtil instead.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412888 13f79535-47bb-0310-9956-ffa450edef68"
30c01ecb8b9df7f86f8aca93f6b6e4ba3ff01c44,"DERBY-851: Remove remaining references to org.apache.derby.client.resource
package. Committing patch derby-851-remove-dncresource.diff.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@412957 13f79535-47bb-0310-9956-ffa450edef68"
3d734bd1efbc77598ee0b396492d9724e14297fd,"DERBY-1389: Commit Narayanan's IS_AUTOINCREMENT.v1.diff, adding a new JDBC4 column to the results of the getColumns() metadata call.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413084 13f79535-47bb-0310-9956-ffa450edef68"
dfd030f9596d5bc02b45773490471482d496f78d,"DERBY-1389: backing out previous submission 413084 because it breaks the upgrade tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413086 13f79535-47bb-0310-9956-ffa450edef68"
c1bc7429e2c3a6027529650f1495bd860254bf0a,"DERBY-1386: Wrong results with query using LIKE and ESCAPE clause that
includes ""%"", ""\"", and ""_""

Queries using LIKE/ESCAPE could return wrong results if the first
wildcard character was preceded by an even number of escape
characters. This patch fixes the issue by changing the way
Like.lessThanString() parses the pattern string.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413123 13f79535-47bb-0310-9956-ffa450edef68"
318307e779c974b2681a959ae059eee1bf8532e1,"DERBY-1327 Identity column can be created with wrong and very large start with v
alue with ""J2RE 1.5.0 IBM Windows 32 build pwi32dev-20060412 (SR2)"" with JIT on

The fix for this issue would be to reduce the number of parameters required by the constructor to <=10 in org.apache.derby.iapi.sql.dictionary.ColumnDescriptor class. While researching into this, I found that all the 3 constructors in the class have a parameter named autoinc and it is defined as a boolean. This parameter is always equal to (parameter named autoincInc != 0). In my patch (Derby1327WrongStartKeyPatch1CodelineTrunk.txt) which is attached to this JIRA, I have removed the autoinc parameter and inside the constructors, I use (parameter named autoincInc != 0) instead of relying on autoinc. This cleans up the constructor parameter passing for all the 3 constructors and also brings down the number of parameters to <=10. The test program from the JIRA entry runs fine with this change and I have created a new test JitTest.java based on that test program. Hopefully this test can be a place holder for any future JIT issues. I also ran the test suites and there were no new failures.

I also removed the import of org.apache.derby.iapi.sql.dictionary.ColumnDescriptor from some classes which didn't really use ColumnDescriptor.

Contributed by Mamta Satoor



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413129 13f79535-47bb-0310-9956-ffa450edef68"
5727bf5ea8c2b352948b2b314ef6cf8d5224b6b6,"Exclude SqlExceptionTest from ibm13 jvm test runs.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413174 13f79535-47bb-0310-9956-ffa450edef68"
fa1207a375e3cc17e855f83c615f9ff64b9a8771,"DERBY-1344: Bump last digit of release identifier to 4 to reflect generation of a new 10.2 alpha snapshot.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413179 13f79535-47bb-0310-9956-ffa450edef68"
3143fd15e617e2d84c2ada9ec30d9f07f1716eeb,"DERBY-1376: Update XSLAT message to provide a better warning that the value
given to the logDevice attribute in the connection URL may contain another
database.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413409 13f79535-47bb-0310-9956-ffa450edef68"
58378a03f75c2a9fac8676e21ae438919d463d91,"DERBY-1344: Update JitTest.out master, add to list of master files that are
touched by the regex.masters target.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413411 13f79535-47bb-0310-9956-ffa450edef68"
415cdfa9dc8042a53c4f0154499c629d5f23bc56,"DERBY-1376 - File java/engine/org/apache/derby/loc/messages_en.properties - Message XSLAT.D translated into Brazilian Portuguese

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413435 13f79535-47bb-0310-9956-ffa450edef68"
b5cffe60df910477861bc34c8fb0b74062cc2f37,"DERBY-1389: Commit Narayanan's IS_AUTOCREMENT_v2.diff, adding a new column to the getColumns() metadata results as required by JDBC4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413710 13f79535-47bb-0310-9956-ffa450edef68"
00b4912a503f266260554b88963914fc29bbad4f,"- DERBY-1396 ReEncodedInputStream may fail to read all of source Reader - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@413901 13f79535-47bb-0310-9956-ffa450edef68"
5fc38c4d2c35acdff07e834f303e7703cf0838b8,"DERBY-1382 lobs fail silently with result sets of type TYPE_SCROLL_INSENSITIVE in client jdbc driver. Contributed by Fernanda Pizzorno.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414165 13f79535-47bb-0310-9956-ffa450edef68"
971d6b96d6cc7f0e869570f391c03b3b6869d29b,"- TestDataReader class in jdbcapi/Stream.java creates test data of which length is not equals to value passed as length of test data. - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414199 13f79535-47bb-0310-9956-ffa450edef68"
bec4777b428dcfc85a9d0868a574a1858a3b10c6,"Removed SQL States and MessageId message ids that are unused and which
don't have matching messages, and then made MessageBundleTest a 
part of derbyall.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414416 13f79535-47bb-0310-9956-ffa450edef68"
a1a1192362c2cee38ccd6b66c0351d63412e1f22,"- DERBY-1388 Integrate processing code of two writeScalarStream methods. - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414562 13f79535-47bb-0310-9956-ffa450edef68"
9e6ceb7396d6db853d92d5b802b770792220b500,"DERBY-1417: committed derby-1417-01-castsInTests, which adds some casts to some jdbc4 tests so that the tests will compile when the new streaming overloads turn up in a future build of jdk1.6

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414624 13f79535-47bb-0310-9956-ffa450edef68"
0a625f3aaf755f1d00479fbc1d02025ab375452c,"DERBY-1392, committed patch submitted by Anders Morken

RAFContainer.java#writePage(...) will
attempt to retry a write if an IOException is thrown on the first attempt. 
However, the next attempt does not add container header data to the first page, nor does it encrypt the data if the database is encrypted as the wrong buffer
is used in the catch block.

I'd expect this bug to be case silent corruption of encrypted databases if the 
code path was actually exercised. The fact that this bug still lives and 
nobody has discovered it is possibly an indication of how uncommon this code 
path is. Since the comment in the code says nothing about exactly what 
platforms the workaround was intended for, I don't know if these platforms are
still supported for Derby. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414647 13f79535-47bb-0310-9956-ffa450edef68"
8b0b9958fdfdb30f9fcc5b861715f7c298316d4f,"DERBY-1408

Setting the test properties so that this test does not run with j9, it already
was disabled for the following:
runwithibm13=false
runwithjdk13=false
runwithjdk12=false



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414649 13f79535-47bb-0310-9956-ffa450edef68"
fade7e973fe4de9706c7dc940def98548c1ff841,"DERBY-501: Client and embedded drivers differ on invoking a procedure
that returns a single Dynamic resultSet using CallableStatement.executeQuery()

This patch modifies EmbedStatement.processDynamicResults() so that it
returns the number of dynamic results instead of a
boolean. EmbedStatement.executeStatement() uses this number to decide
whether an exception is to be raised. With this change, the
executeQuery and executeUpdate parameters are no longer needed in
GenericPreparedStatement.execute().

ProcedureTest.junit is now enabled in derbyall (all frameworks). Seven
of the test cases run in the embedded framework only, but I expect all
of them to succeed with the client driver after DERBY-1314 and
DERBY-1364 have been fixed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414795 13f79535-47bb-0310-9956-ffa450edef68"
5d3c52adeb2fa909e1b9ede464f40198c4f2b3cb,"DERBY-920: small changes to replace cloudscape with derby in comments and code

This patch was contributed by Scott Hutinger (s-hutinger@wiu.edu)

This change replaces the word ""Cloudscape"" with the word ""Derby"" in some
Ant build scripts, and changes the ""reportCloudscape"" method of the Sysinfo
implementation code to be named ""reportDerby"".



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414832 13f79535-47bb-0310-9956-ffa450edef68"
879dd2060146cff43ff38451de56142070bb44d7,"Removing MessageBundleTest until it gets fixed


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@414898 13f79535-47bb-0310-9956-ffa450edef68"
205404e9ca19860f927d0c3c3b4fdf15d61afd98,"DERBY-1420 Make JitTest.java independent of Derby release

remove DatabaseMetadata calls from JitTest so it does not need to be updated for the release.

Contributed by Mamta Satoor


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@415135 13f79535-47bb-0310-9956-ffa450edef68"
38d4b767ec8c6019e37efd6c9dfb6937124217f4,"DERBY-1384:  Increase default BLOB/CLOB length to maximum supported (2G-1). Submitted by Bernt M. Johnsen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@415328 13f79535-47bb-0310-9956-ffa450edef68"
4d34a23485cb806af8de4b7b11c92e4a47b18637,"DERBY-1374 compatibility test fails with PROTOCOL Data Stream Syntax Error.Patch contributed by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@415557 13f79535-47bb-0310-9956-ffa450edef68"
5ad71053a597c3e0723016a810f91a9e7f269c16,"DERBY-1338: Client tests fail with NoClassDefFound: DRDAProtocolExceptionInfo

Patch contributed by Dag Wanvik (dag.wanvik@sun.com)

Work around a classloader bug involving interrupt handling during class
loading. If the first request to load the DRDAProtocolExceptionInfo class
occurs during shutdown, the loading of the class may be aborted when the
Network Server calls Thread.interrupt() on the DRDAConnThread.  By including
a static reference to the DRDAProtocolExceptionInfo class here, we ensure
that it is loaded as soon as the DRDAConnThread class is loaded,
and therefore we know we won't be trying to load the class during shutdown.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@416012 13f79535-47bb-0310-9956-ffa450edef68"
e75a0b93f51b718d68b9a992ef1f0d8b390fe903,"DERBY-959, committing on behalf of  Sunitha Kambhampati.

Server changes to allow for query block size greater than 32k, as 
supported by the latest DRDA spec. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@416485 13f79535-47bb-0310-9956-ffa450edef68"
cb3ccf31cbaaf215479ab9970603f45d4655779a,"DERBY-959

missed one new file in previous commit, adding it here.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@416486 13f79535-47bb-0310-9956-ffa450edef68"
8a62d60d55c3f5f3bb75561c271dc0166aac7bb6,"DERBY-1156 (partial): re-encryting an encrypted database 

This patch adds some code required to support reconfigure(rencryption) of
an already existing encrypted database with a new password(secret key)
or an external user specified encryption key. Two new attributes 
""newBootPassword"" and ""newEncryptionkey"" are introduced to support this 
functionality. 

- modified the code to support two have instance of two cipher 
   factories to exist. So that the existing data can decrypted with
   the old encryption key using one cipher factory and rewrite the data 
   with new encryption keys using another cipher factory. 

- re-enryption of the database with new keys is similar to encrypting 
   an already existing database. All the container data is read through 
   the page cache and  rewritten using the new encryption keys. 

- Added test case to test the re-encryption of an encrypted database.
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@416536 13f79535-47bb-0310-9956-ffa450edef68"
d51b773e809675ec46ab03214646f6ba68cd2def,"DERBY-1036: Embedded and client differ with regard to
Statement.setCursor Name. client will disallow duplicate cursor
names. Embedded will allow it.

and

DERBY-1183: Client java.sql.ResultSet.getCursorName() does not return
the correct cursor name for Statements after the first execution

Patch description:

The problem underlying DERBY-1183 is the following: A Statement (and by
inheritance, PreparedStatement and CallableStatement) will have a
cursor name associated with result set generated by the statement. Such
names are either set by the user (Statement#setCursorName) or assigned
by the system (aka ""canned"" cursor names in the client driver). In
either case, the user can get at the cursor name attached to a
statement by calling Resultset#getCursorName. This string can be used
to construct the SQL text of positioned update or delete statement.

Currently, when a cursor name is set on a statement, the following
actions are taken (Statement#setCursorName):

1. The statement's string variable cursorName_ is set to the
           new string. This keeps track of the user cursor name set
           for this statement.

2. A cache (clientCursorNameCache) of cursor names set by
the user for this connection is maintained to avoid having
any two identical cursor name for the same statement/result
set. When the cursor name is set, the check is performed
(2a) and the cache is updated with the new cursor name if
all is well (2b).

If the statement (only applies for PreparedStatement and
CallableStatement) already has a DRDA section (ch 7.14)
allocated, the following is also performed:

3. A map (cursor name -> section) is updated.

4. The section associated with this statement gets its
   variable clientCursorName set to the supplied cursor name.

For Statement, this association (steps 3 and 4) is performed at
statement execution time (inside flowExecute, just after the new
section is allocated for a query).

5. Also in flowExecute (of Statement, PreparedStatement) the
cursor (user set or canned) is associated with the result
set (call to mapCursorNameToResultSet).

The symptom of this bug is that the cursor name set for a statement
seems to be lost after one execution of that statement, reverting to a
canned cursor name for executions 2..n.

This happens because the cursor name is actually reset as part of the
next execute on a statement object:

        6. Open result sets for a statement are closed when
flowExecute calls readCloseResultSets. During the closing
of a result set, ResultSet#markClosed calls
statement_.removeClientCursorNameFromCache, which in
addition to removing the user cursor name from the cache
also sets the statements cursorName_ to null, causing it
effectively to be forgotten.

Since #5 happens *after* #6 in flowExecute, the execution still works,
but with a canned cursor instead of the user named cursor (see
mapCursorNameToResultSet).

This ""race condition"" suggests deferring the setup of mappings and
insertion into the name cache till execution time (*after* the closing
of open result sets on this statement). When studying this I found
there was already a bug filed (DERBY-1036) which advises that we defer
the check of duplicates till execution time, so this patch fixes both
DERBY-1183 and DERBY-1036.

In the patch, Statement#setCursorName now only sets the string
variable cursorName_.

The patch also removes the resetting of cursorName_ in
removeClientCursorNameFromCache, so it won't be forgotten. It is still
removed from the cache when the result set is closed (and current maps
deleted).

Furthermore, it moves #2, #3 and #4 till execution time (flowExecute).
Item #2a is performed at the start of flowExecute, so we can avoid
starting any protocol action if it turns out that we should not
start execution (duplicate name). The actions needed in
Statement#flowExecute and PreparedStatement#flowExecute are similar,
so I factored these out into the methods Statement#
checkForDuplicateCursorName and Statement#setupCursorNameCacheAndMappings.

Next, I removed code from getCursorName which redundantly performs #3
(now always handled at execute time).

CAVEAT: When working on understanding what goes on here, I found that
the Statement finalizer can lead to cursors being released; this is
part of the client side clean-up for statements that are not
explicitly closed (DERBY-210). This can sometimes lead to time
variability in canned cursor names in client driver tests which do not
close statements explicitly. If the canned cursor name occurs in the
canon file, we can see spurious diff due to this. I think we have seen
this in the past. Avoid it by closing statements or by naming the
cursors explicitly.

Finally, I removed work-around code in jdbcapi/checkDataSource.java
for derby-1036 and derby-1183 and updated masters to reflect that the
cursor names are no longer forgotten.

Patch submitted by Dag H. Wanvik.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@416661 13f79535-47bb-0310-9956-ffa450edef68"
73d678d3c04b977965925b7bf6422aecdafe2ba1,"DERBY-1314: Differences between client and embedded when invoking
stored procedures using Statement.executeUpdate()

Make executeUpdate() return 0 on the client when executing a stored
procedure.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@416696 13f79535-47bb-0310-9956-ffa450edef68"
81c1b219c5fb62d48b12cf6c5509f29783c6bc8e,"DERBY-955: Get derbyall on jdk1.6

This patch contains fixes to the following tests that are failing when
running derbyall with jdk 1.6:

* derbynetclientmats: tools/ieptests.sql

  -updated master file for jdk16

* derbynetclientmats: jdbcapi/parameterMapping.java

  -REMOVED jdk16 specific master file

* derbynetclientmats: jdbcapi/checkDataSource30.java

  -updated checkDataSource30.java and checkDataSource.java to produce
   output that is the same when running with jdk15 and jdk16
  -updated master files to reflect changes in output

* derbynetmats: tools/ieptests.sql

  -updated master file for jdk16

Patch contributed by Olav Sandst√•.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@416889 13f79535-47bb-0310-9956-ffa450edef68"
99870c5dda1ed6a521ef4d142484696e13bbfbed,"DERBY-1454: DRDA Protocol Exception when DSS is exactly 32767 bytes

The server is disconnecting the client connection. Client is sending a CNTQRY,
the server is receiving it and then server disconnects the client. In doneData
and writeFDODTA, it looks like if (writer.getDSSLength() >= blksize) ,
then the splitQRYDTA is called. From testing, it seems like they are hitting
an edge case, where the writer.getDSSLength() is equal to blksize and this
DSS is the only dss in the send buffer. 

The patch corrects the two splitQRYDTA calls to use > rather
than >= to determine if the DSS needs to be split.

The patch also contains a new test case in derbynet/prepStmt.java
to demonstrate the bug and its fix.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@416959 13f79535-47bb-0310-9956-ffa450edef68"
059795005ebd5438b61c6484db60025fec3c8e0f,"DERBY-1455: Intermittent failure in derbynet/runtimeinfo.java

The problem occurs when the test has opened four connections, closes
three of them and runs getRuntimeInfo() on the server. The test
expects that there is one active session on the server, but in some
cases, the network server has not had enough time to clean up after
the closed connections, and more sessions are listed as active.

The patch solves this timing issue by invoking Thread.sleep(1000)
before calling getRuntimeInfo().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417131 13f79535-47bb-0310-9956-ffa450edef68"
d61564a64b657d6971e15658ba935bb90e2ade79,"DERBY-1444 Using -Djvmflags option causes NoClassDefFoundError. Contributed by Vemund.Ostgaard@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417206 13f79535-47bb-0310-9956-ffa450edef68"
6a97cbff7b9fc7f137141fe65940dd595cb91858,"DERBY-1436 setEmbeddedCP.ksh did not set classpath when DERBY_HOME was set. Contributed by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417210 13f79535-47bb-0310-9956-ffa450edef68"
9634cd205b5dbdf78f7d39f0cb7e6d514867cf7d,"DERBY-1361 positioned updates and deletes allowed after a commit without repositioning the cursor - if the table is indexed on the columns selected

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417366 13f79535-47bb-0310-9956-ffa450edef68"
8677cc88993f04bc617f2c47d82f3e745a50c2ae,"DERBY-734 lang/closed.java fails because of incorrect ordering of the output during heavy load. Contributed by Kristian Waagan

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417368 13f79535-47bb-0310-9956-ffa450edef68"
9f5e1d4aef189f1e01ef7fc47a33649a189eacb4,"DERBY-137: Derby metadata always returns JDBC 2 result sets, even when
JDBC 3 result sets are required.

Summary of the changes:

  DatabaseMetaData:

    - getProcedureColumns: modified VTI to return an int instead of a
      short for the DATA_TYPE column
    - getTables: new columns: TYPE_CAT, TYPE_SCHEM, TYPE_NAME,
      SELF_REFERENCING_COL_NAME, REF_GENERATION (all null since Derby
      doesn't support typed tables)
    - getColumns: DATA_TYPE changed from SMALLINT to INTEGER. New
      columns: SCOPE_CATLOG, SCOPE_SCHEMA, SCOPE_TABLE,
      SOURCE_DATATYPE (all null since Derby doesn't support the REF or
      DISTINCT data types)
    - getVersionColumns: SCOPE, DECIMAL_DIGITS and PSEUDO_COLUMN
      changed from INTEGER to SMALLINT
    - getPrimaryKeys: KEY_SEQ changed from INTEGER to SMALLINT (the
      new query is ODBC compliant so getPrimaryKeysForODBC was removed)
    - getTypeInfo: DATA_TYPE changed from SMALLINT to INTEGER, NULLABLE, 
      SEARCHABLE, MINIMUM_SCALE and MAXIMUM_SCALE changed from INTEGER to
      SMALLINT
    - getIndexInfo: ORDINAL_POSITION changed from INTEGER to SMALLINT
    - getBestRowIdentifier: DATA_TYPE changed from SMALLINT to INTEGER
    - getUDTs: new columm: BASE_TYPE (null since Derby doesn't support
      the DISTINCT type or SELF_REFERENCING_COLUMN)

  ODBCMetadataGenerator:

    - cast DATA_TYPE columns to SMALLINT (as defined by ODBC)
    - don't cast columns that already are SMALLINT to SMALLINT

  Tests:

    - updated master files for metadata, odbc_metadata,
      bestrowidentifier, declareGlobalTempTableJava and
      Upgrade_10_1_10_2 (new columns and modified data types)
    - odbc_metadata.java: added information about nullability for some
      of the new columns to avoid ArrayIndexOutOfBoundsException


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417497 13f79535-47bb-0310-9956-ffa450edef68"
c5114100266043487034293f0a71783af40809e2,"DERBY-1445: Add new streaming overloads and modify some existing ones.

Adding new (JDBC 4.0) streaming overloads to ResultSet, PreparedStatement
and CallableStatement. The new overloads take a long as the length
parameter.

Patch contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417548 13f79535-47bb-0310-9956-ffa450edef68"
ff7369c4ca32cfdf7d13170b91d2e4dea9a593f7,"DERBY-1445: Add new streaming overloads and modify some existing ones.

Fix test issues. Patch submitted by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417705 13f79535-47bb-0310-9956-ffa450edef68"
57154353babe11ac6a653752c856f2af84fbfe63,"DERBY-1417: Add new, lengthless overloads to the streaming api

'derby-1417-1a-notImplemented.diff' adds a number of new lengthless
streaming overloads that Derby will not support. All methods added by the
patch throw not-implemented exceptions. We don't support them because we
either don't support the data type or because we don't yet support named
parameters in CallableStatement.

Patch submitted by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417753 13f79535-47bb-0310-9956-ffa450edef68"
b6dd9e89676e9b9536a91aafc5d05ff30171005c,"DERBY-1463: Resolve javadoc warnings in BrokeredCallableStatement40

Patch submitted by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@417953 13f79535-47bb-0310-9956-ffa450edef68"
486760521639fc99e5310f786fcc54dbac71c72f,"DERBY-1410 - added missing error message for DATA_SQLDATA_READ_ILLEGAL_ACCESS_EXCEPTION.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418095 13f79535-47bb-0310-9956-ffa450edef68"
ffb23e9bbe587beffe4b9a18eb67aa1e80891b86,"DERBY-937, committing change by      Andreas Korneliussen.

notes by Andreas:
I was able to reproduce this problem on every run on a very fast laptop (it was not reproducible on any other Windows lab machine I have tried). This laptop happens to be the same kind as Ole uses for the nightly tests.

Adding a 10 second sleeping period after the population of the tables, did not have any effect. I therefore tried to do run a compress on the tables (based on the assumption that statistics is updated on compress), and now the test does not fail for me anymore.

Attached is the patch which makes this test stop failing. The patch does not seem to have any sideeffects on other platforms (Solaris) tested, however the test will use more time. 

note by mike:
I ran this change 20 times and it worked on my laptop, it would always fail
a few times out of 20 before the fix.  I am not sure why this fix works as
the test seems to already create indexes after tables so statistics should
already be up to date. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418108 13f79535-47bb-0310-9956-ffa450edef68"
0dcbfa67685b1eeb1fe5f873e5fc4bd557f34fb9,"DERBY-1410 - fixed typo in error message.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418110 13f79535-47bb-0310-9956-ffa450edef68"
cfcbbae5c729ff6c551290543257bd8dbfa012c0,"DERBY-1421 updates of LOBs fails with scrollable updatable result sets. Contributed by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418221 13f79535-47bb-0310-9956-ffa450edef68"
41674acdbecb4a4c1770db90ba3f18a543bd7fd0,"- DERBY-1461 Separate writeScalarStream to methods which handle either encrypted or plain streams. - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418240 13f79535-47bb-0310-9956-ffa450edef68"
fee55d87f3fc069978517ad5ae20dd461e478e05,"DERBY-578 - Grouped select from temporary table raises null pointer exception in byte code generator
DERBY-1464 - runtimestatistics can show that an index is being used even when it isn't

Contributed by Manish Khettry

The problem is simple enough-- we didn't have a conglomerate name for temporary tables. I fixed the code to behave more like what fillInScanArgs does.

Earlier, we would set the indexName field in DistinctScanResult to the conglomerate name (cd.getName()) used to scan the table. If the conglomerate was the base table itself then this was just plain wrong. The change, for this patch, passes null if no index is being used.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418672 13f79535-47bb-0310-9956-ffa450edef68"
8801b769a68b0390f30dfad77143b7519db79fd4,"DERBY-1427: sysinfo does not write Java SE and JDBC version when
running under JDK 1.6

Make sysinfo print ""JRE - JDBC: Java SE 6 - JDBC 4.0"" when running
under JVM version 1.6.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418687 13f79535-47bb-0310-9956-ffa450edef68"
57caf2511e022c1d5ee492c7b96de8b1de4cbfbe,"DERBY-1468: Server returns data when it receives a QRYROWSET value of
zero on an OPNQRY, which doesn't follow DRDA protocol.

The patch disables pre-fetching for LMTBLKPRC when QRYROWSET=0 and
adds a test case to the protocol test which sends an OPNQRY for a
scrollable cursor with QRYROWSET=0.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418691 13f79535-47bb-0310-9956-ffa450edef68"
d8383bd9f296dc51b4234d42d3e31689452d4be8,"DERBY-1364: Client driver does not roll back the effects of a stored
procedure when incorrectly invoked by executeQuery()/executeUpdate()

Description of the patch:

1. Checking of the number of result sets returned was moved from
   executeUpdate/executeQuery to a point in flowExecute where the
   transaction has not been auto-committed (otherwise, the transaction
   would already be committed when the exception was raised).

2. If the number of result sets does not match the execute type and
   auto-commit is enabled, the transaction is rolled back (otherwise,
   the transaction would be committed when the Statement was closed or
   re-executed).

3. All execute* methods in CallableStatement were removed since they
   have become identical to the methods in PreparedStatement. (Or
   almost identical. The methods in CallableStatement did not call
   checkStatementValidity() on errors, but that's probably a bug.)

4. SQL state for error message in executeQuery() was changed to match
   embedded (XJ201/XJ205 -> X0Y78). Updated English and Portuguese
   messages to use the new SQL state (no other translations existed
   for XJ201 and XJ205).

5. Added more rollback tests to jdbcapi/ProcedureTest.junit and
   enabled all test cases for DerbyNetClient.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418692 13f79535-47bb-0310-9956-ffa450edef68"
e2cf840c73a5a266d63402126d73bc8774045575,"DERBY-1043 Invalid column references are not caught in a trigger action statement when the referencing table of the column is the triggered table. Contributed by Fernanda Pizzorno.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@418933 13f79535-47bb-0310-9956-ffa450edef68"
ddf1ea6a20bff83af36b566ef00b6ed9d9f923e6,"DERBY-1064 Delete cascade causes NULL values inserted into table when after delete Trigger fires. Contributed by Fernanda Pizzorno.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@419186 13f79535-47bb-0310-9956-ffa450edef68"
668b59a2e59b43a5a6f8dfcb18a944a7c77ebb48,"DERBY-989: unit/daemonService.unit fails intermittently: 'ran out of time'

Two test fixes (in T_DaemonService.java)

  1) Clear the list of clients before each iteration of the test. This
     makes the failure be exposed earlier (10 minutes instead of one
     hour) because t_checkStatus() doesn't have to wait for
     unsubscribed clients to be serviced.

  2) Make the test accept that a client is serviced once after it has
     unsubscribed. This could happen if the client is being serviced
     when unsubscribe() is called.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@419479 13f79535-47bb-0310-9956-ffa450edef68"
e9f346cc1c9cc7b47880c267f386e6a2eaaf4cea,"DERBY-1474: Add assertEquals overloads for Blob and Clob

Patch contributed by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@419542 13f79535-47bb-0310-9956-ffa450edef68"
fe1700521a63983f1e2931426bb47dd2b516f463,"DERBY-1475 lang/procedure.java intermittently fails on solaris 10 x86. Contributed by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@419839 13f79535-47bb-0310-9956-ffa450edef68"
fc021249dbd0712c19c410485ae621aa93299b0d,"DERBY-1477 create JUnit tests for testing BLOB OutOfMemory problems. New tests for testing really big blobs (64MB). Not included in any suites.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@419847 13f79535-47bb-0310-9956-ffa450edef68"
fff1a02a869d39fe13f09eb72a89175a5d7a06fe,"DERBY-1474: Add assertEquals overloads for Blob and Clob

Follow-up patch contributed by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@419848 13f79535-47bb-0310-9956-ffa450edef68"
a70379d8b39cbdb72ed66f549a98d774ec9cba0b,"DERBY-1000: For LDAP authentication: derby.authentication.server
should support ldaps:// as part of the server url.

Patch contributed by Anders Morken.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@419852 13f79535-47bb-0310-9956-ffa450edef68"
23b7ff3244b689cb87cd46227bd63608f788f412,"Adding a test to help debug DERBY-1248.  OnlineBackupTest5.sql is just 
a slight variation of OnlineBackupTest4.sql.  It does the same work but
restores the backup to a new place in extinout, rather than on top of
the original case.  Hopefully if this test reproduces DERBY-1248 the info
in the old db will help understand what is going on.  Also changed the 
assert to dump the full page.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@419926 13f79535-47bb-0310-9956-ffa450edef68"
c92a9b380b0ea560182dc83a4294396e257eb242,"DERBY-1091: Test harness does not pass jvm flags properly if there are more
than 1 property in jvm flags

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420048 13f79535-47bb-0310-9956-ffa450edef68"
2d2e71770defa6a3bbf39bb9bc64770b1bf8a8a8,"DERBY-1330 (partial) Create dependencies between triggers, constraints & views and their required privileges.
Patch submitted by Mamta Satoor msatoor@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420306 13f79535-47bb-0310-9956-ffa450edef68"
be3a57fc222f816376c5d48b65ea659c26e16a84,"DERBY-1330 Add DDColumnPermissionsDependableFinder.java, missed from last commit

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420312 13f79535-47bb-0310-9956-ffa450edef68"
054fa3a57f6373da23e1bf296337e72a331d0ab3,"DERBY-1393: PreparedStatement.setObject(int,Object,int) should throw
SQLFeatureNotSupportedException for unsupported types

Description of the patch:

  The new setObject() methods call checkForSupportedDataType() to
  check whether targetSqlType is supported.

  Added a new error message ""The data type ''{0}'' is not supported.""
  with SQL state 0A000 (which ensures that the exception is converted
  to SQLFeatureNotSupportedException). This error message is used when
  targetSqlType is not supported.

  Added more JDBC 4.0 constants (from java.sql.Types) to
  JDBC40Translation and created a test JDBC40TranslationTest which
  tests that the constants are correct (the values of the constants
  are hard coded, so we don't get the compile-time check as with
  JDBC{2,3}0Translation).

  New test case SetObjectUnsupportedTest which is run as part of
  PreparedStatementTest and CallableStatementTest in the jdbc40 suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420436 13f79535-47bb-0310-9956-ffa450edef68"
591cc35a84ae06c56df55e5bddf7b827c15bac84,"DERBY-989: unit/daemonService.unit fails intermittently: 'ran out of time'

Updated the javadoc for DaemonService and BasicDaemon with information about
the case where unsubscribe() is called when the client is being serviced.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420465 13f79535-47bb-0310-9956-ffa450edef68"
bf98ce5544ba4c1e31bd7b9c87d839db7749c961,"DERBY-1417: Add new, lengthless overloads to the streaming api

'derby-1417-2a-rstest-refactor.diff' refactors and rewrites parts of
jdbc4/ResultSetTest.junit. A few utility methods have been introduced,
and a TestSetup-class (anonymous) was used to create the table
once. This was done because the previous implementation could cause
other tests to fail if one test failed.

The utility methods follow a pattern that will also be used by a
number of tests written for the new lengthless overloads.

Patch contributed by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420497 13f79535-47bb-0310-9956-ffa450edef68"
e1a853ef4ad0818e3cb3ce691474be44422f09fc,"DERBY-1352 force locale to be en_US when running tests from harness. The fix sets the system properties user.language=en and user.country=US for the VM of the test and for the VM of the network server when started from test harness. This ensures that tests like derbynet/sysinfo.java can run without filtering out all output

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420522 13f79535-47bb-0310-9956-ffa450edef68"
51e8333a4f88fe0f6752f92800613ec29e7bc087,"DERBY-1351 lang/forupdate fails with invalid cursorname. Sed used to filter cursorname. Contributed by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420535 13f79535-47bb-0310-9956-ffa450edef68"
2f015be9439bd16f76626b9eae13016feeb648c8,"DERBY-1142 (partial) Make EmbedResultSet close its activation in the close method when it is
single use ResultSet (e.g. from a Statement.executeQuery()). Otherwise the close of the activation
would be delayed until the EmbedResultSet was garbage collected and subsequent activity on the connection.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420656 13f79535-47bb-0310-9956-ffa450edef68"
83e8947caf11c7071bc294bab2d54edd25333fba,"DERBY-1497 assert failure in MessageUtil, because exception thrown with too many parameters when handling OutOfMemoryError

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420821 13f79535-47bb-0310-9956-ffa450edef68"
92c50e578ebfa1c6084aa36f8a772767873068fd,"DERBY-1498 avoid tracing of LOB data in DRDAConnThread.readAndSetExtParams(..)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420863 13f79535-47bb-0310-9956-ffa450edef68"
e48d46e785fd34232caaf630bc6e7d40609826c0,"Improved the comments in some of the routines while debugging a DERBY-1248.
Separating the formatting/comment changes from the real fix.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@420892 13f79535-47bb-0310-9956-ffa450edef68"
41d3af8a225991404cf2aebcd3ea5bea09ad4dd2,"DERBY-1142 Stop memory leak for embedded metadata queries. Mark the embedded ResultSet as having a single use
activation so that upon a close its activation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421015 13f79535-47bb-0310-9956-ffa450edef68"
ac100d6b51d640dcf043fa6c34e6824e9a85adab,"DERBY-1330 (partial) The patch gets rid of requirement of permission type along with the uuid to find a unique row.
Fixing this has in fact cleaned up the supporting code quite a bit. For instance, there is no need for special
class DDColumnPermissionDependableFinder or no need for a constructor in ColPermsDescriptor which takes permission
types in the form of an int. DDdependableFinder is much cleaner too with this patch. In addition, I have also created
a unique index on the uuid for these 3 system tables in order to quickly locate a row in those system tables.

Patch contributed by Mamta Satoor


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421118 13f79535-47bb-0310-9956-ffa450edef68"
aa233722a7fad96532e5ddfc644c96bec1f663d0,"DERBY-1502: Non-deterministic behavior of lang/grantRevokeDDL.sql

I have created a sed file to remove the error messages from the
test. This will mask the privilege ordering in the HashMap object.

Patch contributed by Mamta A. Satoor.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421179 13f79535-47bb-0310-9956-ffa450edef68"
4f9187ed6cc50457a1e45cad5a1d1650ce277588,"DERBY-1503: Make jdbc4/StatementEventsTest.junit test callable statements

The patch changes StatementEventsTest the following way:

 1) New methods setXA() and setCallable() which make it possible to
    use the same test method to test XAConnection/PooledConnection
    and PreparedStatement/CallableStatement.

 2) Split the test methods into smaller ones.

 3) Use asserts to report errors instead of System.out.println().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421218 13f79535-47bb-0310-9956-ffa450edef68"
dbbf9ff16a5621070c73e969ec62fdfd6b19957a,"DERBY-1476: PreparedStatement.setNull(int,int) should throw
SQLFeatureNotSupportedException for unsupported types

derby-1476-v1.diff adds a call to checkForSupportedDataType() in
setNull(). It also moves that call in setObject() after 'if (obj ==
null) { setNull(pos, type); return; }' in order to avoid double
checking. New test cases have been added to SetObjectUnsupportedTest
so that it tests setObject(int,Object,int),
setObject(int,Object,int,int), setNull(int,int) and
setNull(int,int,String).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421255 13f79535-47bb-0310-9956-ffa450edef68"
698f7a2af378241238e4b00d082175489a00f8e7,"DERBY-551 (partial) This patch allows invoking procedures in triggered sql statement.

* Modifies the parser to allow call statement in the trigger action.

* Changes the validateStatement in InternalTriggerExecutionContext to catch following statements not allowed in triggers:
   - DDL statements are not allowed in triggers. This was caught as an assert failure as this would be caught at compile time in case of direct use of DDL statements. Since use of DDL statement inside a procedure will not be caught at compile time, patch changes the assert to a SQLException.
   - Insert, update, delete statements are not allowed in a before trigger. On the same lines, a procedure that modifies sql data should not be allowed in a before trigger. This is also caught at runtime. This uses the existing check in InternalTriggerExecutionContext.validateStatement. However, the existing check was limited to the trigger table. This check was modified to check for use of insert,update,delete statements on any table.

* Adds a new test lang/procedureInTrigger.sql to derbylang suite. The test is based on the scenarios in ' ProcedureInTrigger_Tests_v1.html'. Only one case (calling procedures that modify SQL data in before triggers) is handled differently by this patch. Trigger creation will pass but firing will fail. This behaviour will change once we move this check to compile time. So I have not modified the test case document. Also, I have not added the test cases for recursive triggers as I am not sure about the expected behaviour. This is being discussed as part of DERBY-1261 on derby-dev.

* Modifies tests and master files which used to check that call statement cannot be part of trigger action. 

Patch contributed by Deepa Remesh - dremesh@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421281 13f79535-47bb-0310-9956-ffa450edef68"
aadfd4269ad537834caa44838f197e89102fad65,"DERBY-1015: Define interface between network server and engine through 
Java interfaces.  Contributed by Sunitha Kambhampati.  Passes 
derbynetclientmats.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421435 13f79535-47bb-0310-9956-ffa450edef68"
30e2dd49f54a11707af4ad0b9c27e92fc5534ad3,"DERBY-1507: Add test-specific policy file for lang/xmlBinding.java

Committed for Army Brown <qozinx@sbcglobal.net>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421448 13f79535-47bb-0310-9956-ffa450edef68"
ab40defba5c02fa7083641de5dde7ebd33eb0f74,"DERBY-1015: Added new interfaces


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421460 13f79535-47bb-0310-9956-ffa450edef68"
886b5f8c2779f7a2e855244634fb543321d3e33e,"DERBY-1015: Define interface between network server and engine through 
Java interfaces.  This revision commits the ResultSet interfaces.  
Contributed by Sunitha Khambhampati.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421497 13f79535-47bb-0310-9956-ffa450edef68"
e6557d1683316d03b051cc88231ddc07498f4cc7,"Follow-up to DERBY-1497.When throwing exception NET_LOB_DATA_TOO_LARGE_FOR_JVM, add the OutOfMemoryError as cause.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421566 13f79535-47bb-0310-9956-ffa450edef68"
cb82751ddf471226575836742f3566e5591409ac,"DERBY-253: Client should throw not implemented exception for
depricated setUnicodeStream/getUnicodeStream

This patch replaces the existing implementation of setUnicodeStream
and getUnicodeStream in the client driver to just throw a SQL
exception with SQL state equal to feature not implemented.

Patch contributed by Olav Sandst√•.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421570 13f79535-47bb-0310-9956-ffa450edef68"
e3e3ca3762bdd4e203e998a6dcece1757020386b,"DERBY-1459: Commit bug1459_v04.diff. This introduces a dummy jdbc driver so that JDBC4 driver autoloading will play well with the engine booting which happens when the public embedded driver classloads.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421717 13f79535-47bb-0310-9956-ffa450edef68"
32635d2e118d2ba76b47daf1bc1fca8f2acca1a1,"DERBY -1156 (partial)
This patch adds some code required to support reconfigure(rencryption) of
an already existing encrypted database with a new password(secret key)
or an external user specified encryption key.

-- disables encryption/re-encryption of an existing database if there 
   are any global transaction in the prepared state after recovery. 

-- disables encryption/re-encryption of an existing database if database 
   is soft-upgraded to 10.2. 

-- Added a test that tests re-encryption of an encrypted database
   when global transaction are in the prepared state after recovery. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421721 13f79535-47bb-0310-9956-ffa450edef68"
2b30bf041b845de21dbcb15b138fdb4eb28e16b3,"DERBY-1499: Fix J2ME (wctme 5.7) tests due to reference to DriverManager
in RunList.unloadEmbeddedDriver().

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421832 13f79535-47bb-0310-9956-ffa450edef68"
177992f59ea5252f77febbb42d27bb5af34128ad,"DERBY-1274: Network Server does not shutdown the databases it has
booted when started and shutdown from the command line

Fix submitted by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421856 13f79535-47bb-0310-9956-ffa450edef68"
1b7b14f69c5269699ecb1a25f8188f33a7ea8873,"DERBY-1481: Client driver: ResultSet.beforeFirst() gives protocol
error on scrollable, updatable result sets that are downgraded to
read-only

When the result set is downgraded from updatable to read-only because
the query generating the result set cannot produce an updatable result
set, the result set will be downgraded on the server side, and a
warning (SQLCARD) indicating the downgrade will be sent to the
client. Warnings on the server side are not cleared after they are
sent to the client causing the server to send the same warning several
times.

Positioning commands like ResultSet.beforeFirst() that do not return
any data also do not expect warnings to be returned. The protocol
error was being caused by this downgrade warning that was being sent
several times, one of them being in a response to a
ResultSet.beforeFirst() command.

The attached patch (derby-1481.diff) fixed the problem by clearing the
warnings after they are sent so that the same warning will not be sent
more than once.

The patch was contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421887 13f79535-47bb-0310-9956-ffa450edef68"
cec114ad2946c42bc04de0cabe99dbb2115e93e0,"DERBY-551 (partial) Adds more comments to InternalTriggerExecutionContext.validateStatement.
Patch submitted by Deepa Remesh


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421920 13f79535-47bb-0310-9956-ffa450edef68"
55e067914f63a739349e3634c8cfc52e2885534b,"DERBY-836 Fix metadata information for DECIMAL columns.
There are 3 possible cases with respect to finding the correct maximum width for DECIMAL type.

1. If scale = 0, only sign should be added to precision to compute max width.
2. scale = precision, in this case 3 should be added to precision for sign, decimal and an additional char '0'.
3. precision > scale > 0, 2 shoud be added to precision for sign and decimal. 

Patch submitted by Mayuresh Nirhali - Mayuresh.Nirhali@Sun.COM



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421932 13f79535-47bb-0310-9956-ffa450edef68"
69e77e31126f71227535e415822896970c22446f,"DERBY-1330 (partial) Move the resetting of permission descriptor's uuid into DataDictionary.addRemovePermissionsDescriptor method.
Patch submitted by Mamta Satoor


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@421981 13f79535-47bb-0310-9956-ffa450edef68"
045d0c643823d9e796ea7cebc1ba8b80cae3886d,"Set svn:eol-style native on onlineBackupTest4.out


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@422633 13f79535-47bb-0310-9956-ffa450edef68"
fe8446d216a95529b9c165099b0d4d04c2c77be4,"DERBY-1493: Implement PreparedStatement.setNull(int, int, String) in
the embedded driver.

Patch submitted by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@422689 13f79535-47bb-0310-9956-ffa450edef68"
7576a1554d734c3f13d77bcf1de7771e24ef4efe,"DERBY-836/DERBY-1514: Failures in derbyall in trunk seen after
revision 421960

Updated master files. Patch contributed by Mayuresh Nirhali.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@422706 13f79535-47bb-0310-9956-ffa450edef68"
0f5040a0db709529e9755b03d0f47562e501ff3e,"DERBY-1466: Network Server should flush the PrintWriter after console output
Contributed by Sunitha Kambhampati.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@422826 13f79535-47bb-0310-9956-ffa450edef68"
63fbf423916261ae9091d70ae4bd813b65fe3b4a,"DERBY-982: Add genus names for network server and client to sysinfo api. Update
published api javadoc for sysinfo. Add a test of the sysinfo public api.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@422876 13f79535-47bb-0310-9956-ffa450edef68"
640fe0a892036af81b01cc1bb513830b16a6a903,"Adding more detailed comments to DRDAProtocolExceptionInfo.java. Patch
contributed by Sunitha Kambhampati.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@422882 13f79535-47bb-0310-9956-ffa450edef68"
7c417a9e841746bcfd3ffb93406351bc3ae8b117,"DERBY-1525: Update to JDK 1.3 master for syscat.out.

Committed for Mamta Satoor <msatoor@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@422991 13f79535-47bb-0310-9956-ffa450edef68"
242c9bda1c1d17214c7658796d4b08809bdad2db,"DERBY-1417 (partial) Add new, lengthless overloads to the streaming api

Tests and implementations for the following methods on the embedded side:
[ResultSet]
  public void updateAsciiStream(int columnIndex, InputStream x)
  public void updateBinaryStream(int columnIndex, InputStream x)
  public void updateCharacterStream(int columnIndex, Reader x)
  public void updateAsciiStream(String columnName, InputStream x)
  public void updateBinaryStream(String columnName, InputStream x)
  public void updateCharacterStream(String columnName, Reader reader)
  public void updateBlob(int columnIndex, InputStream x)
  public void updateBlob(String columnName, InputStream x)
  public void updateClob(int columnIndex, Reader x)
  public void updateClob(String columnName, Reader x)
[PreparedStatement]
  public void setBinaryStream(int parameterIndex, InputStream x)
  public void setAsciiStream(int parameterIndex, InputStream x)
  public void setCharacterStream(int parameterIndex, Reader reader)
  public void setClob(int parameterIndex, Reader reader)
  public void setBlob(int parameterIndex, InputStream inputStream)

*IMPORTANT*: This patch must be built with Mustang build 91 for the
 tests to compile!

Some of the tests are temporarily disabled for the client
driver. These will be enabed when the client implementation is
submitted.

Patch contributed by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@422995 13f79535-47bb-0310-9956-ffa450edef68"
1160146b8a9b98a850cd309df7866005740d6011,"extended tests created in DERBY-1477 with four new testcases which uses projection in the select statements. The tests are for verifying that we do not get OutOfMemory issues when reading and updating BLOBS

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423033 13f79535-47bb-0310-9956-ffa450edef68"
b7c1f3b0c9f747d5a82033b6a2d71e40f43c0800,"DERBY-802 OufOfMemoryError when using BLOB from scrollable insensitive result sets. The fix is to avoid the use of cloning the rows before inserting them into the BackingStoreHashTable. The BackingStoreHashTable has been fixed so that it does not do unnecessary cloning. The estimateMemoryUsage methods of SQLBinary and its subclasses has been improved to return a better estimate, so that rows with BLOBs will be backed to disk when using BackingStoreHashTable. Tests have been committed separately.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423034 13f79535-47bb-0310-9956-ffa450edef68"
16e10039f4903f0e17338251dbaf23c9fbd23c76,"DERBY-1417 (partial) Add new, lengthless overloads to the streaming api

Disable five test cases in the DerbyNetClient framework. Patch
contributed by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423068 13f79535-47bb-0310-9956-ffa450edef68"
eaa33ed9f7ee4659a4ea0e585c7cf507fe8242b0,"Comment out sysinfo_api test due to problem when running with jars


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423132 13f79535-47bb-0310-9956-ffa450edef68"
0568a6c127a733a3e1a69ddce10d8a801d78cdc9,"DERBY-1395: Change the client SQLState to match that of embedded for the 
exception thrown on a closed statement whose connection is also closed.
Also fix this for when the connection is still open, they were not
consistent.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423141 13f79535-47bb-0310-9956-ffa450edef68"
1a6e9dee5a1fa3f7d024bef1b572edf0c2e9ea44,"DERBY-1330 (partial) There is a typo in SYSROUTINEPERMSRowFactory.java for one of the variables and this patch fixes just that.
Patch submitted by Mamta Satoor


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423232 13f79535-47bb-0310-9956-ffa450edef68"
3b1291bca85bbf98012b3f7cc6d287b73291d3ee,"DERBY-551  Adds a new reliability bit mask(MODIFIES_SQL_DATA_PROCEDURE_ILLEGAL) to CompilerContext.
Sets the above reliability for before triggers before binding the actionNode in CreateTriggerNode.
Checks the above reliability in CallStatementNode. After the called procedure is resolved, the sql allowed
by the procedure is checked and if it is ""modifies sql data"" and if we have set the reliability to
MODIFIES_SQL_DATA_PROCEDURE_ILLEGAL, it means we are calling a procedure that modifies sql data in the
action statement of a before trigger. In this case, an exception is thrown and trigger creation fails.
Removes the check in InternalTriggerExecutionContext.validateStatement which was used to catch the use of DML
in before triggers. This is a redundant check as use of DML in before triggers is now caught at compile time.
Added a comment to indicate this.
Adds a new message to indicate procedures that modify sql data are not allowed in before triggers.
Reuses the same SQLState as for invalid statement in triggers. 

Patch submitted by Deepa Remesh


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423266 13f79535-47bb-0310-9956-ffa450edef68"
fe2789acfa44b734274347a57ae5a27e2925fa17,"runall files are not properties files. :-)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423348 13f79535-47bb-0310-9956-ffa450edef68"
d6756aa3304cde4b2d9de43108df85c0a749ee42,"DERBY-1330 (partial) Commit javadoc fixes introduced by previous 1330 patch.

Committed for Mamta Satoor <msatoor@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423352 13f79535-47bb-0310-9956-ffa450edef68"
4183d60df64d3011494c95deef36b1b9c7a9f4c7,"DERBY-1534: Add BaseJDBCTestCase.assertSQLState() overload with no
message parameter


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423427 13f79535-47bb-0310-9956-ffa450edef68"
50642f4ff471a0aa65fc2d7b209074151d220758,"DERBY-1344: Commit bug1344-bumplastdigit_5.diff, bumping the last digit of the release identifier after generating the 10.2.0.4 snapshot.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423494 13f79535-47bb-0310-9956-ffa450edef68"
4a700c363a408ed7f49e7e83d99e73921d7473e4,"Add Jira issue number (DERBY-537) comment to why dblook_test_net test is not run under the security manager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423577 13f79535-47bb-0310-9956-ffa450edef68"
d4ddb61a77e4f4d8d958b119ccb5adcb67205fcd,"derbynet/DerbyNetNewServer test now passes with the security manager.
Add comment as to why derbynet/testij runs without the security manager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423616 13f79535-47bb-0310-9956-ffa450edef68"
f574bdafc72941b7206ffee7cc133fd4192f345d,"Mark test jdbc4/TestQueryObject as failing with the SecurityManager due to DERBY-1540
Remove disablein of SecurityManager for derbynet/testProtocol as it passes with the SecurityManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423676 13f79535-47bb-0310-9956-ffa450edef68"
97cac2ed04d6f86243126327e1180759b3684a6a,"DERBY-1373: Encrypted databases cannot be booted using the jar subprotocol 

Patch Contributed by Sunitha Kambhampati.

This patch makes the following changes:
1) Instead of using RandomAccessFile, the verifyKey.dat is read 
   as a InputStream.

2) Add a new test (encryptionKey_jar.sql) for booting encrypted 
  database using encryptionKey via classpath, and jar subprotocol.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423682 13f79535-47bb-0310-9956-ffa450edef68"
450df2337d245c4caa98893df90a8acf9bec7d74,"DERBY-1357: Fix optimizer short-circuit logic. Here is the note from the contributor.

I also had to update the lang/predicatePushdown.out master file because with the d1357_v1.patch the order of a couple of qualifiers has changed. Note that the query plans themselves are exactly the same--the only thing that's changed is the the qualifier ordering for one query. This change of order occurs because as part of the costing code in FromBaseTable.estimateCost() the optimizer transfers predicates from one predicate list to another, gets an estimated cost, then puts the predicates back into the original list. The methods to do this transferring are in NestedLoopJoinStrategy.java and HashJoinStrategy.java. In the former, the predicates are transferred away in front-to-back order and then transferred back in back-to-front order, which leads to a reversal of the relevant predicate ordering. Ex. If we have a list L1 of preds A,B,C and we transfer them to L2 in front-to-back order, L2 will end up with A,B,C. Then, when we transfer the predicates back to L1, if we process L2 in back-to-front order, L1 will end up with C,B,A. That said, with d1357_v1 applied the short-circuit logic prevents the optimizer from trying to optimize a join order that is known to be bad. This means that we skip an unnecessary round of optimization and therefore skip one round of order reversal, which means the order of the predicate qualifiers in the final plan is now different.

I ran derbyall on Red Hat with sane jars and ibm142, and saw no new failures.

Submitted by Army Brown (qozinx@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423754 13f79535-47bb-0310-9956-ffa450edef68"
f63131723d26a5161bded8e54db453720ce79c18,"DERBY-1536: Extend tests for Wrapper interface


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423800 13f79535-47bb-0310-9956-ffa450edef68"
c586481bed039ad417850da53d29154e9c6d055a,"DERBY-1417 (partial) Add new, lengthless overloads to the streaming api

Add the new overloads to the Brokered* classes and update
UnsupportedVetter with the methods we support.

Patch contributed by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423807 13f79535-47bb-0310-9956-ffa450edef68"
6796671fd785c17b1a8d8b2eb53683b96bb17681,"DERBY-1443: DataTypeDescriptor.isBinaryType() return false for Types.BLOB

Adding javadoc for isBinaryType() and isCharacterType() clarifying why
they return false for BLOB and CLOB.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423827 13f79535-47bb-0310-9956-ffa450edef68"
d45f7d3f42f8e49b5dfb260962c27b2ddc882627,"DERBY-1527: Factor out type checks in EmbedResultSet and EmbedPreparedStatement


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423912 13f79535-47bb-0310-9956-ffa450edef68"
7a1a699fd9f1caa4a85fda4f114120de1e14108f,"DERBY-1330 (partial) Currently, in case of revoke privilege, DataDictionary.addRemovePermissionsDescriptor expects
it's callers to set the permission descriptor's uuid so that DependencyManager can be invoked by
addRemovePermissionsDescriptor to send REVOKE_PRIVILEGE action to permission descriptor's dependents
(sending of REVOKE_PRIVILEGE work has not been finished yet.
This patch is in preparation of that work). In order to set the uuid, the callers have to goto system
tables to find the uuid and then set the permission descriptor's uuid.

It will be less error prone if DataDictionary.addRemovePermissionsDescriptor did the setting of uuid of
permission descriptor, rather than having every caller set the uuid correctly.
DataDictionary.addRemovePermissionsDescriptor method has to goto the permission system tables anyways
and has the uuid information handy and hence it will be more efficient for it to set the uuid of the
permission descriptor. This is inline with the patch that was commited some time back so that resetting
of the uuid happened in addRemovePermissionsDescriptor method rather than expecting the callers to do that.

In order to do this, I have added an abstract method to PermissionsCatalogRowFactory called setUUIDOfThePassedDescriptor.
 This method will set the uuid of the passed permission descriptor to same value as the row corresponding to the
permission system table which is also passed as a parameter. This method will be called by
DataDictionary.addRemovePermissionsDescriptor. 

Patch submitted by Mamta Satoor.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423949 13f79535-47bb-0310-9956-ffa450edef68"
93cfc7f845b18b46b36648c3031d99257c8f9b04,"DERBY-1029: Commit derby-1029_v05.diff, backing out the BOOLEAN datatype introduced by DERBY-499.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423976 13f79535-47bb-0310-9956-ffa450edef68"
0be2d6ecb126e6db6dfa1c35085c31cffbfd89c9,"DERBY-781: Materialize select subqueries where possible to avoid recreating their resultsets multiple times. Here is more info from the contributor.

Attaching a patch (d781_v1.patch) to address this issue by allowing the optimizer to consider and choose hash joins with subqueries, which is a more general case of the specific union example mentioned in the description for this issue.  In brief, the patch does this by following up on the suggestions given by Jeff Lichtman in comments above and also in the following thread:

http://article.gmane.org/gmane.comp.apache.db.derby.devel/12208

Since result set materialization comes for ""free"" with hash joins, that fact we now allow hash joins with subqueries (as of this patch) means that we implicitly have a way to materialize the subquery result sets.

The details of the patch are included as DERBY-781_v1.html.  I added a simple test to lang/subquery.sql to demonstrate that the optimizer can and will choose to do hash joins for subqueries, and I updated one other master file--predicatesIntoViews--for which the optimizer is now choosing a hash join instead of a nested loop.  Testing of ""unsafe"" hash joins (see section VII of the document) and generation of correct plans is done through existing tests, esp. the lang/lojreorder.sql test, which was very useful in helping to verify the correctness of the changes.

Note that I did not add the sample union query shown in the description for this issue to the tests because when I run it against the current codeline, the optimizer will already choose to do materialization of the UnionNode (via hash join) even without the patch for this issue, and thus it didn't seem like that particular test case was useful.  The new test in subqery.sql is more relevant because the optimizer will choose to do a nested loop join with the subquery before my changes and will do a hash join after my changes, which seems to more accurately reflect what this issue is about.

I ran derbyall using sane jars on Red Hat Linux with ibm142 and saw no new failures, and the overall execution time does not change despite the extra work the optimizer is doing.

Submitted by Army Brown (qozinx@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@423989 13f79535-47bb-0310-9956-ffa450edef68"
a4aa5a7e255927fd2861044fed6374b46d5b15c8,"DERBY-323: Locale problem in test of derby

Description of the patch:

  1) Rewrite tools/derbyrunjartest.java to use jvm.getCommandLine() to
     get the command line to start the test with.

  2) Move the setting of user.language and user.country from RunTest
     and NetServer to jvm.getCommandLine(). This way, all of the java
     processes that are forked from the test harness or from a test
     get the same locale.

  3) Add Locale.setDefault(Locale.US) to RunTest.main(). This fixes
     the issue with the nist tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@424072 13f79535-47bb-0310-9956-ffa450edef68"
576a49fd94438b8d05d12a0486b728a8b1c712cc,"DERBY-1555 (partial) Minor cleanup on some JUnit tests, make the base test classes abstract.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@424135 13f79535-47bb-0310-9956-ffa450edef68"
f308936b4f1acfd70c23a4dd905c3a7422512070,"DERBY-1555 (partial) Move the code to obtain a default connection into TestConfiuration
for the JUnit test setup to allow it to be shared across multiple classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@424368 13f79535-47bb-0310-9956-ffa450edef68"
8f784a46a284fa517ce3e946a48e9efc92a51627,"DERBY-1555 DERBY-1562 (partial) Add new classes BaseJDBCTestSetup and JDBC to support
JDBC Unit test development.
BaseJDBCTestSetup is a TestSetup decorator for setup that uses JDBC.
JDBC class is a holder for JDBC test utility methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@424388 13f79535-47bb-0310-9956-ffa450edef68"
0a5c3c1d43c75942245dbdef54fcb8030c55671b,"DERBY-1438: Text written by SQLException.toString differs between client and
embedded driver.  This includes a one-line change to source and 1 MB of
changes to master files.  Sigh...


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@424389 13f79535-47bb-0310-9956-ffa450edef68"
4abfe240b1f0d0eac5a66847c4ee9ab2a5f46a28,"- DERBY-1513_1535 Trial 1 for DERBY-550 & Trial 2 for DERBY-550 - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@424539 13f79535-47bb-0310-9956-ffa450edef68"
9cd47dc93f6e010cf661642c277455a027992692,"Remove unused old modifiesTableUUID method from the ConstantAction hierarchy.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@424616 13f79535-47bb-0310-9956-ffa450edef68"
73981012db92038b650fbf3389b1f50d5c7f09a6,"DERBY-1572: Output from tools/derbyrunjartest.java can be mixed

Wait until all output from one command has been saved before executing
the next command.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@424686 13f79535-47bb-0310-9956-ffa450edef68"
4eece4113ad7603c65396afcd946f8a1a672892d,"DERBY-1581 (partial) Clean-up some descriptor objects as a step to ensuring their identity is immutable
once created and/or fully populated. Remove some unused methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425116 13f79535-47bb-0310-9956-ffa450edef68"
428ad73720171552c1ec6af878e06703b8133b05,"Minor cleanup on the StatementPermission objects, clarify that these classes represent the
permissions required by a statement (not used) and change come fields to private to avoid
other code being able to change them to subvert the system.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425126 13f79535-47bb-0310-9956-ffa450edef68"
af884219109af439c7cf8c65d80954a97ed2eda4,"DERBY-1581 (partial) Fix build error in PermissionsDescriptor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425130 13f79535-47bb-0310-9956-ffa450edef68"
ea0a514447fb080c55fb943128baa0a01d9e96d8,"Fix a typo in sqlgrammar. REVOKE statement needs DD_VERSION_DERBY_10_2 or higher not 10_1 as in the code. Other GRANT/REVOKE statements correctly require DD_VERSION_DERBY_10_2 in the code.

Submitted by Satheesh Bandaram(bandaram@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425184 13f79535-47bb-0310-9956-ffa450edef68"
74a105dab1bcc5981afc52d3c50a33e0338a79c6,"DERBY-1536: Adding assert in unwrap test jdbc4/ConnectionTest.junit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425326 13f79535-47bb-0310-9956-ffa450edef68"
5d18b03d2564d69acd0949001cc25b0199f3d99d,"DERBY-1586 (partial) The attributesAsPassword property doesn't work
correctly with EmbeddedConnectionPoolDataSource

This patch adds a JUnit test which reproduces the bug. The test is not
run in any suite since the bug is not fixed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425385 13f79535-47bb-0310-9956-ffa450edef68"
1c31b3a13123938cc060c4b9e440127253a90163,"DERBY-1296 Setting property derby.system.bootAll causes NullPointerException in BaseMonitor.bootProviderServices. Fix and test contributed by Fernanda Pizzorno

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425388 13f79535-47bb-0310-9956-ffa450edef68"
36498c0136e8805a655c8a6c4199193853de4001,"updated source file header for recently added file to comply with new policy. Initial source file also had incorrect copyright dates. It was added as part of DERBY-1296.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425391 13f79535-47bb-0310-9956-ffa450edef68"
81792f2365c1220d0da2f16e110c423e19677f50,"DERBY-1578 - A number of tests fail due to rework on toString() method 
of SQLException.

derbyall passes clean now, except I am getting some diffs in some
i18n tests due to locale differences.  Not sure how to fix those.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425446 13f79535-47bb-0310-9956-ffa450edef68"
db7408fde0249c6bf85cea8df8b5cf29e887c0e5,"Fixed copyright date per Dan's comment


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425457 13f79535-47bb-0310-9956-ffa450edef68"
6e0750f1c4791289462f8fb712ee48d0d04c54d3,"Convert JUnit ProcedureTest to use the BaseJDBCTestSetup as the parent class
for its decarator.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425472 13f79535-47bb-0310-9956-ffa450edef68"
55de888ab61e52eff22be847765f363d22ce517e,"DERBY-1581 Avoid reloading the Provider from the data dictionary when
executing an invalidateFor on the Provider. Previosuly the code
when loading the stored dependencies and converting them to an in-memory from
reloaded the provider once per dependent. This patch re-uses the Provider
passed into the invalidateFor method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425479 13f79535-47bb-0310-9956-ffa450edef68"
196bf05a2f654bd57ba4e669f2693c0a906266f3,"DERBY-1571: NetworkServerControlImpl.consoleExceptionPrintTrace()
prints stack trace even when logWriter is null

Made NetworkServerControlImpl.shutdown() set logWriter to a silent
stream instead of null to avoid printing stack traces of expected
exceptions during shutdown.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425703 13f79535-47bb-0310-9956-ffa450edef68"
c9a2190f9cfd324f1917075c0319c02fee95b81f,"DERBY-1563: derbynet/ShutDownDBWhenNSShutsDownTest.junit fails on
Solaris sparc

The attached patch (derby-1563.diff) fixes the problem by waiting
before checking if the file exists.

Patch contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425719 13f79535-47bb-0310-9956-ffa450edef68"
32a1fb37eb968d679cd5e535328433aae9738d58,"DERBY-1587 INTEGER function cannot be abbreviated by INT. Fix consists of one LOC change in sqlgrammar.jj and updates of master files. Contributed by Yip Nig

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425726 13f79535-47bb-0310-9956-ffa450edef68"
a8e281a4a66f805243d36b547d2ab404a3f3d39b,"DERBY-1545 derbynet/testProtocol.java fails with security manager enabled. Fixed by granting SocketPermission in policy file for the test

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425732 13f79535-47bb-0310-9956-ffa450edef68"
a7f6e2e917a0dc1239b2b8e16779473c401d2c73,"DERBY-1541: Committed derby-1541_v01.diff, which deletes a cruft file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425765 13f79535-47bb-0310-9956-ffa450edef68"
16fe6f1dfd6684636c659a41b7030b48d6747bba,"DERBY-1540: Committed derby-1540_v01.diff, which causes this test to run under the SecurityManager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425772 13f79535-47bb-0310-9956-ffa450edef68"
5035df37589e4d3d3e23189d1571a3303e6e799d,"DERBY -1156 (partial) re-encryption of the database.

This patch adds a new test that tests recovery of the database 
if the engine crashes just before committing the re-encryption
with a new password phrase. Crash is simulated using the debug flags. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425781 13f79535-47bb-0310-9956-ffa450edef68"
feb5bb24655f00cc182a5c5fe0731f409d413ad4,"Minor cleanup in some data dictionary descriptors moving towards the identity being immmutable

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425814 13f79535-47bb-0310-9956-ffa450edef68"
ddd880007c999650f56a16b0c1f9340f3f4f7717,"Cleanup of SPSDescriptor to remove setting of unused field paramDefaults.
Field still exists more work to do remove it entirely

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425820 13f79535-47bb-0310-9956-ffa450edef68"
08313de058162e4bbecd32aeb68af81206901ee0,"DERBY-1539 Supports basic revoke functionality for triggers.
If revoke statement finds a trigger dependent on the table/column/routine
on which privilege is being revoked, the trigger will be dropped automatically.

Patch contributed by Mamta Satoor

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425836 13f79535-47bb-0310-9956-ffa450edef68"
145baeed59d14793c2d605c988a40a0434047723,"DERBY-1521 Attaching a patch 'd1521-patch1-v1.diff' which modifies UpgradeTester to test the grant/revoke feature. This is a preliminary patch which tests the default upgrade behaviour: In upgrades from versions earlier than 10.2,
* grant/revoke feature is not available in soft upgrade
* grant/revoke feature is not available in full upgrade (by default). This feature will be available after full upgrade only if ""derby.database.sqlAuthorization"" is true. 

Patch contributed by Deepa Remesh

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425846 13f79535-47bb-0310-9956-ffa450edef68"
15776affd827e3b4bffbc070dd255c75c31f8ed9,"Add some JUnit JDBC utility methods, compare the meta data for a select list
with DatabaseMetaData and a method to drain a ResultSet. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425923 13f79535-47bb-0310-9956-ffa450edef68"
6ce7ab2405bcfbc54948a17f3e4b77ab1b49d53a,"Add a PrepareExecuteDDL JUnit test with initial cases that tests preparing statements
and then executing DDL before executing the prepared statement.
Add support to compile Junit tests in the functionTests/lang package.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425941 13f79535-47bb-0310-9956-ffa450edef68"
7d7cb630dd080f49374223d26864351a9815f53a,"DERBY-1546: Derby JDBC 4.0 driver returns 3 for JDBC driver major version

Description of the changes:

  * EmbedDatabaseMetaData40 and NetDatabaseMetaData40 override
    getJDBCMajorVersion() and getJDBCMinorVersion().

  * jdbcapi/dbMetaDataJdbc30.java was modified to print ""AS EXPECTED""
    instead of the returned value from the JDBC version methods (of
    course, it prints something else if the version is not as
    expected). This was done in order to avoid the need for separate
    jdk16 canons.

  * TestUtil.getJDBCMajorVersion() was updated to recognize JDBC major
    version > 3.

  * Fixed a bug in build.xml in functionTests/util. TestUtil.java is
    incorrectly compiled with source and target level 1.4. It works
    correctly after an 'ant clobber' because some other 1.3 class
    depends on it and causes it to be compiled as part of another ant
    target, but if TestUtil.java is the only file that needs
    recompilation, jdk 1.4 is used.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@425987 13f79535-47bb-0310-9956-ffa450edef68"
865e8d57972cac42506bffb66934fa01ee0768cb,"updated policy to be in line with permissions granted for derbyclient.jar in derby_tests.policy. Follow-up to DERBY-1545. This should enable running the server host on a remote machine when running the testProtocol test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426048 13f79535-47bb-0310-9956-ffa450edef68"
7d98408ba7c485cae372b98a524167ab4dfc45f5,"Add framework code to BaseTestCase to automatically install the security manager
with the default test policy file for every JUnit test. Security manager
code separated into SecurityManagerSetup for clarity. Allows Derby JUnit
tests to be run via JUnit test runners without specifiying any system
properties.
Not enabled at the moment, needs testing, can be enabled by commenting
out line in runBase in BaseTestCase.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426308 13f79535-47bb-0310-9956-ffa450edef68"
d20d8c3bd0bc084026b2524536736d0739a4e0e2,git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426310 13f79535-47bb-0310-9956-ffa450edef68
a41eb3aa1898f0c354da550d2e7b8ef25bf6a641,"Add a utility JUnit TestCase that runs .sql scripts using ij
similar to the test harness, but much simpler.
Compares the master files using simple line by line assertEquals.
No sedding of output is performed (or should be :-).
Added one JUnit suite lang/LangScripts that runs a handful of .sql tests.
Currently a work-in progress, it has not been added to derbyall.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426315 13f79535-47bb-0310-9956-ffa450edef68"
189ad050776efb57571f29b6df5fd8879872a3a1,"DERBY-1586: The attributesAsPassword property doesn't work correctly
with EmbeddedConnectionPoolDataSource

Forward the requestPassword parameter from createPooledConnection() to
EmbedPooledConnection's constructor.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426398 13f79535-47bb-0310-9956-ffa450edef68"
402d6101f09d04e8e1d1a22634031569d11c1538,"DERBY-1510: Commit derby-1510-1a.diff, fixing an infinite loop.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426570 13f79535-47bb-0310-9956-ffa450edef68"
2d5faea2d20a4d9d8639ed1523542626171e6265,"DERBY-1609 (partial) Minor cleanup in ij.Main.java, remove unused field & method
and make two public fields private.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426671 13f79535-47bb-0310-9956-ffa450edef68"
c134d320edc7a43faedc95879a1a6c85a89a328d,"DERBY-766 (partial) Add check to ensure a generated method is no split if it contains a return
instruction in the middle.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426825 13f79535-47bb-0310-9956-ffa450edef68"
b7e13a9968978475c30adcd1f959caeb45a8e983,"DERBY-1543:This patch should address these two left over items in GRANT/REVOKE implementation. Some implementation notes:

1) Now Derby raises an SQLWarning when SQL authorization is ON without authentication at connect time. This is done by checking if AuthenticationService being used is an instance of NoneAuthenticationServiceImpl. Since this is the default authentication service with Derby, it should always be present.

2) Added code to drop permission descriptors from SYSTABLEPERMS, SYSCOLPERMS and SYSROUTINEPERMS when the object they provide permission for is dropped. This includes tables, views and routines and these descriptors needs to be removed from permissionCache as well.

I have tested the cases when PermissionsDescriptors are in cache also.

Submitted by Satheesh Bandaram (bandaram@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426847 13f79535-47bb-0310-9956-ffa450edef68"
a5a98ce87101f38ceb781c06df44cbe0f9f12bc5,"DERBY-1609 (partial) Add a runScript method to ij. Initial version runs a script
successfully using the passed in connection. More work is needed to avoid the
standard ij startup which opens connections and to return the number of errors.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426849 13f79535-47bb-0310-9956-ffa450edef68"
b1153d52bdff46836429f572d1a4b48f744e2a0c,"Minor cleanup in ij code, make methods non-public and remove an un-required method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426887 13f79535-47bb-0310-9956-ffa450edef68"
8a9e2f15921e2eb2bddd3fd0bcfe66cf5363eefd,"Fix mistakes in last checkin.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426890 13f79535-47bb-0310-9956-ffa450edef68"
2b47710862020f9fa51f4cdcbd2f8f09ea3af66a,"DERBY-1609 (partial) Have ij.runScript use utilMain directly, rather than Main,
to avoid one additional object.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@426893 13f79535-47bb-0310-9956-ffa450edef68"
956354d07b88d6d8919d52eed2e97d1114646e0c,"DERBY-1417: Commit derby-1417-6d-clientimpl.diff, the network client implementation of lengthless overloads for the streaming api, introduced by JDBC4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427112 13f79535-47bb-0310-9956-ffa450edef68"
0e1da662c2c679c894c717578bb99a73ad97242c,"Update couple of missed master files.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427118 13f79535-47bb-0310-9956-ffa450edef68"
92c29671ff6119c672487fabed6fe860e9208983,"Disable attempting to drop permission descriptors in non SQL authorization mode. In soft upgrade mode to 10.2, it is possible not to have permission catalogs at all.

Submitted by Satheesh Bandaram (satheesh@sourcery.org)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427131 13f79535-47bb-0310-9956-ffa450edef68"
3b16bbd709c1c766c53a3f4d63a89e4bb75a5361,"DERBY-1091: Don't prepend a caret to jvmflags in RunSuite if the system
properties are empty, but the suite property is not. Fixes several tests
for J2ME (j9_foundation).

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427190 13f79535-47bb-0310-9956-ffa450edef68"
82cb66b57441593b9b47ae05a7583b1e672c1605,"DERBY-1605: To determine whether or not JVM has JDBC4, compare with 
java.specification.version, not java.vm.version.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427193 13f79535-47bb-0310-9956-ffa450edef68"
b9432a8a55a4a69c38894b95ec2f9af439d6ac26,"DERBY-1606: skip derbyrunjartest.java on j9/j9_foundation due to hang

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427232 13f79535-47bb-0310-9956-ffa450edef68"
1ac66ef518ade917c5eb767819597e4eccb3b830,"DERBY-1462: Sed out db.lck warnings from some store tests. These warnings are
printed when running the store tests with pre-1.4 JVMs on non-windows platforms.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427237 13f79535-47bb-0310-9956-ffa450edef68"
2f82fd958d66c79c06856db1b1983be72d42da27,"DERBY-1607: Canon updates for j9 / j9_foundation.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427266 13f79535-47bb-0310-9956-ffa450edef68"
776520c873751c533c0bdf84cd4950b0500be8bf,"DERBY-1606: Add comment regarding skip.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427272 13f79535-47bb-0310-9956-ffa450edef68"
43e6994a6c7b0473720d978d0704b221e712d740,"DERBY-1609 (partial) Move initializing connections from system properties
in ij's utilMain into a separate method from the constructor. Allows ij's
runScript method to create a constructor without creating unrequired
connections based upon System properties.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427293 13f79535-47bb-0310-9956-ffa450edef68"
00bbcf1a7f64914534f1d697dca5751538d2da8c,"Change the JUnit JDBC client code to use DB2Client as the clearer name
when using DB2's JDBC driver, rather than the somewhat confusing DerbyNet.
DerbyNet is used in the old test harness, but going foward it would
be much clearer to call it what it is.
Use equality methods for checking which client is running, rather
than reference checks.
Add isEmbedded(, isDerbyNetClient and is isDB2Client methods to the JDBCClient class.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427298 13f79535-47bb-0310-9956-ffa450edef68"
57664935b72000cd8c709ee59b975c47f3242c7c,"DERBY-1609 (partial) fix build issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427354 13f79535-47bb-0310-9956-ffa450edef68"
0400f845944aaf28f5b4b678696992bb3b10b8ca,"DERBY-1367: Enable grantRevoke.java test in DerbyNetClient framework.

Submitted by Satheesh Bandaram (satheesh@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427358 13f79535-47bb-0310-9956-ffa450edef68"
edc200c56eb916937e4eb1be811ed35032cb33af,"DERBY-1609 (partial) Put in temp fix for ij to allow tests to continue to run against jdk 1.3


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427434 13f79535-47bb-0310-9956-ffa450edef68"
d50d4ab24cd83105b54f4a700d604c381222a9f6,"DERBY-1608: Recognize newly added SYSFUC routines as system builtin functions. Builtin functions don't need authorization checks and have execute permission to PUBLIC by default.

Submitted by Satheesh Bandaram (satheesh@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427458 13f79535-47bb-0310-9956-ffa450edef68"
b21dfac6d6bdef41d158b27c28fbc2d2de94535d,"Fixed eol-style on these master files


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427795 13f79535-47bb-0310-9956-ffa450edef68"
ced5fa398da76697f7e4739d6aa405d7acaf6a83,"DERBY-1241: When booting a database under security manager, boot may fail with
message java.sql.SQLException: Java exception: 'access denied 
(java.io.FilePermission for logmirror.ctrl if database was not shutdown cleanly
after previous access. Fix uses existing privExists method to access the file,
avoiding the SecurityException.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427796 13f79535-47bb-0310-9956-ffa450edef68"
eb37b68709598df038a07f373a1ece00cedf7f16,"DERBY-1609 (partial) Fix wisconsin.java test by initializing the connections for the utilMain object.
Once wisconsin.java moves to using the new runScript the initConnections method will not be required
by this test and can return to being packahe protected.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427801 13f79535-47bb-0310-9956-ffa450edef68"
17b031d56dd98543a7c8706b1e4365d1426c2a13,"DERBY-1537: Don't put metadata.properties into derbytools.jar. Avoids boot-time
exception when running tests with derbytools.jar in front of derby.jar in the 
classpath. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427816 13f79535-47bb-0310-9956-ffa450edef68"
e77851a9462bd67c42c921f2eb1da02f4fd75768,"DERBY-1619: Decode encoded characters in path URLs in sysinfo. Prevents
duplicate entries for jar files from appearing in the output when the path
contains a character which gets encoded when passed as a URL.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427866 13f79535-47bb-0310-9956-ffa450edef68"
6f2391f7d543d642dc522ccdd356af43d3711637,"DERBY-939: NullPointerException at ResultSet.close() time for simple 
query using UNION and INTERSECT.  Contributed by Yip Ng.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427899 13f79535-47bb-0310-9956-ffa450edef68"
fe8cc95d5105128c99c36c734fb164838308fcb1,"This was a rogue file that slipped into the DERBY-939 commit, backing
out the change


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427901 13f79535-47bb-0310-9956-ffa450edef68"
c9be5302bff953c6f1accb153dc56a06e9ac32d2,"DERBY-939: Add missed files from checkin of derby939trunkdiffpatch2.txt


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427911 13f79535-47bb-0310-9956-ffa450edef68"
ef4a7ba6d5e3a92ec2c793ae511ed642be4160cf,"DERBY-1417: Commit derby-1417-7a-clientborderfix.diff, fixing a hang on a border condition.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@427969 13f79535-47bb-0310-9956-ffa450edef68"
14928b1f4fa09ecf303777b3f5a8b73c435be67f,"DERBY-1456: Network Server agentError logs only to console

Patch contributed by Sunitha Kambhampati (ksunithaghm@gmail.com)

This patch does the following:
1. Use the correct errorCodePoint for agent errors. CodePoint.AGNPRMRM.
Agent errors will be logged ok.
2. In agent errors, retrieve the descriptive string passed in as argument.
3. override Exception.getMessage() , so call to
DRDAProtocolException.getMessage() will return the diagnostic message.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428012 13f79535-47bb-0310-9956-ffa450edef68"
27ee843bc3a83fd011c1c75f8e5cc34708a965e2,"DERBY-1616: Lots of jdk1.6 regression test failures with diffs because 
of SQL Exception instead of java.sql.SQLException


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428044 13f79535-47bb-0310-9956-ffa450edef68"
ff5c96fc55c4b3327a854795b2517e8d1bf0843c,"DERBY-1630: Remove reference to engine class in NetConnection40. Generate
client exception using client.am.SqlException.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428065 13f79535-47bb-0310-9956-ffa450edef68"
885e276bcce5cbc62957f275c0b8a718b868b094,"DERBY-1579 Remove SYS.SYSREQUIREDPERM system table and update all the associated master output files.

Patch contributed by Yip Ng yipng168@gmail.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428115 13f79535-47bb-0310-9956-ffa450edef68"
263ca09db440e8ce991d071610f94eb170e661e5,"DERBY-1629 - Added comment to lang/procedureInTrigger.sql to indicate a 
known bug is being encountered, and added a jdk16-specific output file.  
Note that the j9 run of procedureInTrigger.sql will probably fail, but I 
can't fix this as I don't have a j9 VM.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428128 13f79535-47bb-0310-9956-ffa450edef68"
fee30aa2ca1f216887d62f746f54a3bd751468f2,"DERBY-1521 Patch which sets ""derby.database.sqlAuthorization"" for an upgraded database and tests that grant/revoke is available.
Patch submitted by Deepa Remesh

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428160 13f79535-47bb-0310-9956-ffa450edef68"
251ec97994aacf0fb4b962001deae66563a796fe,"DERBY-1609 (partial) Change the lang/wisconsin.java test to use the new ij.runScript method
rather than its previous use of the utilMain.go method. Change the sed commands because the
cursor names are different in the output due to the use of a connection in a different state.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428252 13f79535-47bb-0310-9956-ffa450edef68"
9d92267e4ce20b1db178b160ddb2f4e45a7ead38,"DERBY-1252: Commit derby1252.diff, causing various SUR-related metadata calls to report the correct answers based on the client and server rev levels.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428510 13f79535-47bb-0310-9956-ffa450edef68"
76faa4962e0b0df286684f260b8c5497e00e48cc,"DERBY-1611 (partial) This patch concentrates on basic revoke functionality for views. If revoke statement finds a
view dependent on the table/column/routine on which privilege is being revoked, the view will be dropped automatically.
This functionality is similar to what is supported for triggers. And just like triggers, more work is required so
that view will get dropped only if it depends on the particular privilege TYPE or particular column that is being revoked.
Patch contributed by Mamta Satoor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428536 13f79535-47bb-0310-9956-ffa450edef68"
e87a9fde9b11429e2f608627ec57d3ce9aac9534,"DERBY-1612 (partial) If revoke statement finds a constraint dependent on the table/column on which privilege
is being revoked, the constraint will be dropped automatically. This functionality is similar to what is
supported for triggers and views. And just like triggers and views, more work is required so that constraint will get
dropped only if it depends on the particular privilege TYPE or particular column that is being revoked.
Patch contributed by Mamta Satoor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428801 13f79535-47bb-0310-9956-ffa450edef68"
1751f666d351e3e3a5c52da738a632bd8721df23,"DERBY-1647: JDK 1.6 derbynet is failing due to SQLException.toString() 
changes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428866 13f79535-47bb-0310-9956-ffa450edef68"
f27644e3eda8fdd42ffaaa9b1eba40e68b74f1a9,"DERBY-1544 (partial) Upgrading a database from 10.1 to 10.2 should automatically change database owner,
recorded as owner of system schemas in sysschemas, from pseudo user 'DBA' to authorizationID of the user
attempting upgrade. This was being done in DataDictionaryImpl.updateSchemaAuth method.
I think a wrong index was being used in the call to updateRow. Also the SCHEMAAID column which we are changing
is not part of any index in SYSSCHEMAS. So there is no need to update any index. 
Patch contributed by Deepa Remesh

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428872 13f79535-47bb-0310-9956-ffa450edef68"
512cebcad241c919e7e102e9a649a0159925dffb,"DERBY-1629 - Fixed canon for j9 VM (contributed by Myrna)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428887 13f79535-47bb-0310-9956-ffa450edef68"
46dbbadfa2cc245b4a00fecc9dfc4702b7b22388,"DERBY-1424: Build derbyclient.jar using classlister. Also removes an unnecessary
class from derbytools.jar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428891 13f79535-47bb-0310-9956-ffa450edef68"
822917507a28c5d2e411f3abadeec126f908d981,"DERBY-1424: Fix badness caused by a double patch command from last checkin.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428892 13f79535-47bb-0310-9956-ffa450edef68"
0f74c16ebc5b1a63c1036b19539d6f5ca63aae34,"DERBY-1319: Document the toursdb schema.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428899 13f79535-47bb-0310-9956-ffa450edef68"
ca552551ee4737fd44dc0a770cd85b7dd0d37a15,"DERBY-766 (partial) Add initial code/method and many comments as to how to split expressions out of large
generated methods. New code is not called yet and doesn't do much, first step in incremental development
of this method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428910 13f79535-47bb-0310-9956-ffa450edef68"
a3d44deda7602db8ac135ac36aa413bf0e5ae76f,"DERBY-1377: (Partial) - Inserted license text into files in tools
directory that had no license text and seemed to need it.  This is
not in conflict with the issue Dan had raised, as these files previously
had no copyright message.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428917 13f79535-47bb-0310-9956-ffa450edef68"
56f1c09bf3d7fae279963b91e1acc6420ae7d25d,"DERBY-1377: (Partial) - added license headers to the files and
scripts in the frameworks directory.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428923 13f79535-47bb-0310-9956-ffa450edef68"
5f5420dd928a27af387fb9edfc342be41b08a607,"DERBY-1377 (partial) Move copyright notices from COPYRIGHT file to NOTICE file to
match ASF policy defined at:
http://www.apache.org/legal/src-headers.html


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428924 13f79535-47bb-0310-9956-ffa450edef68"
f8fa8cfaed6abc99142fdf58fbd83c319a55690a,"DERBY-1643 In Derby, the execute permission on a routine can't be revoked as long as there are dependent objects
relying on that permissions. This patch implements that behavior by adding a new revoke invalidation action
REVOKE_EXECUTE_PRIVILEGE, just for routine revoke. This invalidation gets sent when a revoke execute is issued.
When dependents, a ViewDescriptor and/or a TriggerDescriptor, get this invalidation action, they will
raise error that revoke execute can't be performed because there is a dependent object on that permission. 

Patch submitted by Mamta Satoor

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428930 13f79535-47bb-0310-9956-ffa450edef68"
06c75daff307d61dcf685e08fec76808dc28b6eb,"DERBY-1108
The test jdbcapi/setTransactionIsolation.java fails with ibm jvm1.5
Contributed by Manjula Kutty



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428937 13f79535-47bb-0310-9956-ffa450edef68"
d2344a74aaad56282f9759f7b4c6e30fd52ae225,"Put reference to iapi.reference.Attribute back until I can figure out why it is
actually needed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@428952 13f79535-47bb-0310-9956-ffa450edef68"
047a7632c668d995e9eff3a765a16f02578e735f,"DERBY -1156 (partial) (re) encryption of an existing database.

This patch adds code required to correctly handle crash/recovery during 
encryption of an un-encrypted database and encryption of an encrypted 
database with a new key.

Crashes before updating the database with the new encryption key 
are handled by recovery, those log records are encrypted old key. 

Crashes after updates to the service.properties with a new encryption key 
is handled by using the new status flag (derby.storage.databaseEncryptionStatus)  
to track the changes and by writing the transaction log encrypted with 
new key to a new log file. 

Logging system can handle only one encryption key, which means the 
recovery can read the log with a new key or the old key. Checkpoint 
log record is also encrypted. So it is necessary for the system
to find a checkpoint in the log that it can decrypt using the encryption 
key stored in the service.properties or the one provided by the user. 
This is ensured by  by writing  COMMIT and CHECKPOINT log records
into a new log file and delete that file on-reboot if there is a crash 
before checkpoint records are updated. 

CHECKPOINT and COMMIT is done after setting the databaseEncryptionStatus to 
IN-PROGRESS in the service.properties.On a reboot if databaseEncryptionStatus 
is  IN-PROGRESS,  then engine first checks if checkpoint is in the last 
log file , it it is then (re) encryption is complete otherwise it deletes the 
last log file before doing recovery. Because the last log file also 
had the commit record , it is also gone; Now recovery sees log only encrypted 
with the old key and no end for re-encryption transaction, so it the (re) 
encryption work rolled back and database is brought to the state it was 
before (re) encryption started. 

If engine find a checkpoint in the last log file when databaseEncryptionStatus
is IN-PROGRESS , the it is clear that checkpoint is encrypted with the new 
key; so it does any cleanup required. 


Added new test cases using debug flags to crash at critical 
point during (re) encryption and recovery of failed (re)encryption. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429014 13f79535-47bb-0310-9956-ffa450edef68"
276925a9f3a6abb672b95c21ff5fd222fef0c87a,"DERBY-1544 Adds a method 'grantPublicAccessToSystemRoutines' to DataDictionaryImpl which is called when doing a
full upgrade. This method goes through list of routines that needs to be granted public access and calls
'createRoutinePermPublicDescriptor' for each routine. This is the same as the method that is called during
database creation. It is slightly modified to allow specifying of an authorization id for the grantor.
When upgrading, authorization id of user performing upgrade is used.
Adds a test to upgrade test to verify that the 5 system routines are added to the routine permissions table.
Patch contributed by Deepa Remesh

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429036 13f79535-47bb-0310-9956-ffa450edef68"
481d0c6d27aa360189b421a7040f25515ef4d885,"DERBY-1638 Add methods to JDBC for JUnit that indicates if the virtual machine environment
supports JDBC 2,3 or 4 and JSR169. Naming of methods indicates that the define the vm
level of support rather than the clients level.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429154 13f79535-47bb-0310-9956-ffa450edef68"
4483839643b70f5fb1225c2091f0bbd84cdec60a,"Update the SQL script JUnit test running (ScriptTestCase) to use the new ij.runScript. This allows
the scripts to easily use the default connection from the super class BaseJDBCTest without having
to resort to setting system properties.
Cleanup the LangScripts test case to allow it to be called as a main method to run arbitrary
scripts from the command line.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429155 13f79535-47bb-0310-9956-ffa450edef68"
a44148c285b57bd2513f7b05984dd74ff8c98ccb,"DERBY-1029: Delete directory of empty files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429350 13f79535-47bb-0310-9956-ffa450edef68"
2c0d042d522dcf0982f6f378777d938f27eb4cf4,"DERBY-1640: Update master for XATest to account for changes introduced by DERBY-1579.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429365 13f79535-47bb-0310-9956-ffa450edef68"
b51846a5dbe5debe52b174518e4d6720986ba419,"java.sql.Savepoint is the correct class to check to see if JDBC 3 and JSR 619 is supported, not ParameterMetaData

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429401 13f79535-47bb-0310-9956-ffa450edef68"
c3df7cfb03a7f618d9846c81452230abf3bc3c3f,"Change UpdateXXTest to be a JUnit test that runs under J2ME and its suite method to setup
the test cases correctly based upon the JDBC environment. No longer requires a _app.properties
file from the old test harness.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429412 13f79535-47bb-0310-9956-ffa450edef68"
e910eeeea35bcf4c4a41e464e03aef52b1a8d753,"DERBY -1156 (partial) re-encryption of the database.

This patch adds priveleged blocks required to run (re) encryption of the 
database under security manager. Enabled the related tests to run under 
security manager,




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429417 13f79535-47bb-0310-9956-ffa450edef68"
0bf062218daffaba5d985905560c869a48439468,"DERBY-1554: Revert IDENTITY_VAL_LOCAL() behavior on multi-row inserts to that seen in 10.1.3. Applying patch derby1554trunkdiff02.txt.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429425 13f79535-47bb-0310-9956-ffa450edef68"
de243e0fc4b4c96df180eaa55d2bca0a33831582,"DERBY-1377: (Partial) - Updated license headers for the build
subtree.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429495 13f79535-47bb-0310-9956-ffa450edef68"
bee775e67edb4000aa2b0d176ea164ca257070ec,"DERBY-1377: (Partial) - inserted license headers to files that
didn't have them in the java/build subtree


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429496 13f79535-47bb-0310-9956-ffa450edef68"
11bc2d08917b8731d9e3b1f92421c953b7a0bc0c,"DERBY-1377: (Partial).  Inserted license headers to .jj files
and updated java files for the tools/ij subdirectory.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429500 13f79535-47bb-0310-9956-ffa450edef68"
9a7cd7e8e980ba64af844ea59cfd56f10af83b17,"DERBY-1377: (Partial) Updated the tools/sysinfo directory to use the
new license header


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429515 13f79535-47bb-0310-9956-ffa450edef68"
fe549441685ee8e56f626505f7f76aeb2500ee60,"DERBY-1614: Do not set any heap size flags or network server apart from those
specified by the jvmflags property.

Committed for John Embretsen <John.Embretsen@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429550 13f79535-47bb-0310-9956-ffa450edef68"
57b9c1af48887bbb0e3ad6654e2cb3ea8eeb7f85,"DERBY-1431: Remove demos from snapshots and remove link to demos from
frameworks/readme.html, which is in the snapshot.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429551 13f79535-47bb-0310-9956-ffa450edef68"
e23a57988f2884d261f36a876f79a477959d38c6,"DERBY-1320: Fix lang/procedure.java on IBM JDK 1.5. 

Committed for Manjula Kutty <manjula.kutty@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429561 13f79535-47bb-0310-9956-ffa450edef68"
91219559418624b6f7fdc437329645940f8a8d72,"- DERBY-1637 OutBufferedStream.java fails on ibm131/jdk131 jvms. - Patch by Sunitha Kambhampati(ksunithaghm@gmail.com)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429648 13f79535-47bb-0310-9956-ffa450edef68"
8c1d202d186f6031f27d9ab7145e387606465815,"DERBY-1649: Better sed'ing of cursor names in wisconsin output.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429677 13f79535-47bb-0310-9956-ffa450edef68"
6e7bbc8c6382ddd9b7449791fd68b21e268cf4d3,"DERBY-688: Enhancements to XML functionality toward XPath/XQuery support

This revision contains d688_phase1_v3.patch.

This patch was contributed by Army Brown (qozinx@gmail.com).

Attaching a ""phase 1"" patch, d688_phase1_v1.patch, for this issue that does the following:

  1. Reorganizes XML-specific code as follows:

    - Moves all code that relies on JAXP and Xalan classes
      out of XML.java and into a new class, SqlXmlUtil.java.
      See comments at the beginning of SqlXmlUtil for an
      explanation of why this was done.

    - Creates a new class, SqlXmlExecutor, in the impl.sql.execute
      package that serves as the class on which all XML operator
      calls are generated. Ex. for XMLEXISTS, instead of
      generating:

         <xmlOperand>.XMLExists(<query-expr>, xmlOperand)

      we now generate:

         <SqlXmlExecutor>.XMLSerialize(<query-expr>, xmlOperand)

      Along with making the code cleaner by allowing all
      XML operator calls to be defined in the same class,
      this new class has other benefits, as well--see
      comments at the beginning of SqlXmlExecutor for
      more of an explanation.

  2. Changes implementation of XPath from XSLT processing to
     the low-level Xalan API, which is faster, more flexible,
     and better for implementation of the XMLQUERY operator
     (the XMLQUERY operator will be coming in subsequent
     phases). Note that as part of this change I've removed
     the dependency on an explicit declaration of Xerces
     as the parser; Derby will now pick up the parser from
     the JVM (i.e. this patch resolves DERBY-567).

  3. Makes a small change to the XMLEXISTS operator to bring
     it more in line with SQL/XML spec. More specifically,
     the query expression that is specified must now be a string
     literal; parameters and other expressions are not allowed.

  4. Updates the XML test and master files (lang/xml_general.sql
     and lang/xmlBinding.java) to bring them in sync with the latest
     Derby codeline. Since the XML tests are not (yet) run
     as part of derbyall, the master files need to be updated
     to reflect some client/server changes that have gone into
     the codeline for 10.2 (for example, server pre-fetching
     behavior).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429698 13f79535-47bb-0310-9956-ffa450edef68"
1bb2ac50686a443c277d3f25c26ab0e1b3f509a2,"DERBY-1524: Add new assertion overload.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429728 13f79535-47bb-0310-9956-ffa450edef68"
20cdca37a660a28975d3808160b1a65f659c3a26,"DERBY-1377 (Partial) - Fix license headers for the dblook subdirectory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429734 13f79535-47bb-0310-9956-ffa450edef68"
f739ad16acddd47de566e83e191f02fa620284ce,"DERBY-1377: (Partial) - Dag's submission for impl/sql/catalog


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429762 13f79535-47bb-0310-9956-ffa450edef68"
2d37fd6f52bfffc397ec47ea76ed373c4abea798,"DERBY-1377: Dag's updates of header files for sql/compile.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429763 13f79535-47bb-0310-9956-ffa450edef68"
24f43da2354be841bdd5178dd2e2684168f2e6b3,"DERBY-688: Enhancements to XML functionality toward XPath/XQuery support

This revision contains d688_phase2_v1_code.patch and d688_phase2_v3_tests.patch

This patch was contributed by Army Brown (qozinx@gmail.com).

Attaching a ""phase 2"" patch that does the following:

- Adds syntax and binding logic for XMLQUERY operator

- Updates syntax for XMLEXISTS to match XMLQUERY and does some refactoring
so that the two can share code. The most user-visible change in this area
is the change from BY VALUE to BY REF syntax, which required test updates
and corresponding master file updates.

Also as part of these changes I've rewritten some of the parse logic to
make it more easily extendible to a broader XMLQUERY syntax (as defined in
SQL/XML[2006]) when/if Derby supports the broader syntax (esp. optional
context items and variable bindings) in the future.

- These phase 2 patches do *not* actually implement the XMLQUERY operator
yet; they just allow parsing and binding of the operator. Execution-time
logic will come in a subsequent patch.

For the sake of review I've separated the Phase 2 patches into two
different parts:

  d688_phase2_v1_code.patch: The code changes.
  d688_phase2_v3_tests.patch: The test/master changes.

When committed, though, *both* patches should be committed together
in order to avoid test diffs.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429764 13f79535-47bb-0310-9956-ffa450edef68"
07ce0b3fd33dcb57633c75677d883ce8927fadba,"DERBY-1377: Rototill java/shared/org/apache/derby/shared/common/reference/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429768 13f79535-47bb-0310-9956-ffa450edef68"
b3ef6b5b5e9e718b8cbe5f18f8d5f7a33b738aec,"DERBY-1377: Rototill java/shared/org/apache/derby/shared/common/error/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429771 13f79535-47bb-0310-9956-ffa450edef68"
23683f1daaf65ea473227552eb3dd3a55de0e5e7,"DERBY-1377 (partial): update license headers for plugins subdirectory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429773 13f79535-47bb-0310-9956-ffa450edef68"
1e21fc4662af8007fe4db93f0af84ea67c2407d9,"DERBY-1377: Rototill remaining files under java/shared/org/apache/derby/shared/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429781 13f79535-47bb-0310-9956-ffa450edef68"
88a3cb976f3d6eabe388bd331f341e4f18fbdfdd,"DERBY-1377: Rototill tree under java/engine/org/apache/derby/impl/jdbc/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429791 13f79535-47bb-0310-9956-ffa450edef68"
93fea34754628582e901aafbf4dda6f95d56f163,"DERBY-1377: Rototilled tree under java/engine/org/apache/derby/impl/services/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429794 13f79535-47bb-0310-9956-ffa450edef68"
59bf37d1e5900b2fd0b6028ed8c006435d3dac9e,"DERBY-1377 (partial): Update license headers for client


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429795 13f79535-47bb-0310-9956-ffa450edef68"
270a34de6ca26758a6cb849593431a6223331fc9,"DERBY-1377: Rototill tree under java/engine/org/apache/derby/impl/store/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429802 13f79535-47bb-0310-9956-ffa450edef68"
59e52255775d3e3850bc4f8574a2af3f2ff3dd0b,"DERBY-1377 (partial): Update license headers on files in drda


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429803 13f79535-47bb-0310-9956-ffa450edef68"
6baf18bb0663dfb24b648b33f192b1601e129097,"DERBY-1377: Rototill tree under java/engine/org/apache/derby/iapi/services/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429811 13f79535-47bb-0310-9956-ffa450edef68"
c38b8415016627a9fa9c27f40ed73cbe7ffa1f6c,"DERBY-1377: Update license headers in org.apache.derbyTesting.unitTests


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429812 13f79535-47bb-0310-9956-ffa450edef68"
75c7276aadb6a4b8c236ce283cd85b356d5d5118,"DERBY-1377: Rototill tree under java/engine/org/apache/derby/iapi/store/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429816 13f79535-47bb-0310-9956-ffa450edef68"
44e245574f9676b09ad21d7e6cfab1be6bfc09c8,"DERBY-1377: Update license headers in java/demo


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429826 13f79535-47bb-0310-9956-ffa450edef68"
575d6a11ef87b44c0685156a30a35fbd2fc89512,"DERBY-1377: (Partial) Dag's changes to impl/sql/conn for the license header


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429828 13f79535-47bb-0310-9956-ffa450edef68"
22c1b9ca9f781020383b3a0b0f18b5ff7dbd17e4,"DERBY-1377: (partial) - Dag's changes for sql/depend


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429830 13f79535-47bb-0310-9956-ffa450edef68"
67c1c96516db239c5aeba167c83a08449bb0a447,"DERBY-1377: (Partial) - Dag's changes to impl/sql


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429834 13f79535-47bb-0310-9956-ffa450edef68"
2724c480d92d4c95c704df75a6bc25bc38ccec87,"DERBY-1377: Rototill trees under java/engine/org/apache/derby/impl/db/ and java/engine/org/apache/derby/impl/io/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429836 13f79535-47bb-0310-9956-ffa450edef68"
f6123eea2008c1d84bc9d53f661cd747acf572bb,"DERBY-1377: (Partial) - Dag's changes to sql/execute


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429838 13f79535-47bb-0310-9956-ffa450edef68"
0cc1b092f2d2a04a2e22c995a11ac3237a4f1011,"DERBY-1377: (Partial) - Dag's changes to sql/execute/rts


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429839 13f79535-47bb-0310-9956-ffa450edef68"
189ed4c154da4b4fe51e695741155bc2582f59be,"DERBY-1377: (Partial) - Added license text to build.xml files for
the tools subdirectory


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429845 13f79535-47bb-0310-9956-ffa450edef68"
9f654e53d255cbd6353581cbabb010962d342f48,"DERBY-688: Enhancements to XML functionality toward XPath/XQuery support

This revision contains d688_phase3_v1_code.patch and d688_phase3_v1_tests.patch

This patch was contributed by Army Brown (qozinx@gmail.com).

Attaching a ""phase 3"" patch that implements the XMLQUERY operator. The patch is in two parts:

  - d688_phase3_v1_code.patch
  - d688_phase3_v1_tests.patch

When committed, though, *both* patches should be committed together in
order to avoid test diffs.

The SQL parsing/compile time logic was added as part of the phase 2 patch;
this patch handles the execution-time logic by making the necessary Xalan
calls to evaluate an expression and to retrieve the results.

The phase 3 patch also adds logic to distinguish between two ""types"" of XML:
XML(DOCUMENT(ANY)) and XML(SEQUENCE), as defined in the SQL/XML[2006]
specification. The reason we need to distinguish between the two is that
the result of evaluating an XML query expression against an XML document
can be an arbitrary list of items including atomic values, attributes,
etc.--i.e. a sequence of items that is *not* required to form a valid
DOCUMENT node. For now, though, we only allow valid DOCUMENTs to be
inserted into XML columns, so we have to be able to look at the results
of the XMLQUERY operator to determine whether or not it's a valid DOCUMENT,
and if not we disallow insertion of that result into an XML column.
We can, however, keep the result transiently and pass it into other
operations that accept an XML value (namely, XMLSERIALIZE, which a user
can then use to retrieve the results in serialized form). 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429847 13f79535-47bb-0310-9956-ffa450edef68"
2431eceb21a48de68fcd0679fee0ac534587dc38,"DERBY-1377: Rototill java/engine/org/apache/derby/iapi/db/, java/engine/org/apache/derby/iapi/jdbc/, and java/engine/org/apache/derby/iapi/types/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429856 13f79535-47bb-0310-9956-ffa450edef68"
3dc2ce452aad5dbfa39f86459c4d56d9dc0b59f3,"DERBY-1377 (partial): Update the rest of the files in java/tools.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429860 13f79535-47bb-0310-9956-ffa450edef68"
d4580ab6654c6ffd573d3f001aa502f2bbbc522b,"DERBY-1377: (Partial) Dag's updates to iapi/sql/compile


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429863 13f79535-47bb-0310-9956-ffa450edef68"
75588ca7b352e87df6c930d3b26ca81628efb9a5,"DERBY-1377: (Partial) - Dag's mods to iapi/sql/conn


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429867 13f79535-47bb-0310-9956-ffa450edef68"
2f3694703232487f86a22667c85483a366ebf9d6,"DERBY-1377 (partial): Update license headers for non-impl/non-iapi engine files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429870 13f79535-47bb-0310-9956-ffa450edef68"
15651f53fabcc69ffd92cc5ceeb25afb17e19772,"DERBY-1377 (partial): update license headers on functionTests files outside of
the tests directory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429889 13f79535-47bb-0310-9956-ffa450edef68"
6e3dbaba21a3a3694af36159b9d3b1b71a974e29,"DERBY-1377: Rototill trees under java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ and java/testing/org/apache/derbyTesting/functionTests/tests/junitTests/

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429891 13f79535-47bb-0310-9956-ffa450edef68"
df5ffc85905946a1b9184b8707ef19a7bb7e7c21,"DERBY-1315 (minor cleanup) Make optimizerToBestPlanMap private scope and change its description into a javadoc comment.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429893 13f79535-47bb-0310-9956-ffa450edef68"
6d913c602a44008ef820ba2be6446358e4d92e7d,"DERBY-1377 (partial): Update license headers in impl/load


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429897 13f79535-47bb-0310-9956-ffa450edef68"
666eb9fe7f8aad3989f0d03f8b4e0ac76c709ef8,"DERBY-1377: (Partial) - Dag's changes to iapi/sql/depend


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429914 13f79535-47bb-0310-9956-ffa450edef68"
2e658c29cf6d122d5612397eb59c1fb923ffdda5,"DERBY-1377: (Partial) - Dag's adjustments to iapi/sql/dictionary


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429918 13f79535-47bb-0310-9956-ffa450edef68"
4590cd8cf8f07f7cf9f720973f45aca58af82c57,"DERBY-1377: (Partial) Dag's mods to iapi/sql


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429919 13f79535-47bb-0310-9956-ffa450edef68"
2dd2d112674f596dd626dcc686d948457818528b,"DERBY-1377: (Partial) Dag's changes to iapi/sql/execute


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429920 13f79535-47bb-0310-9956-ffa450edef68"
1d8e53f6f02e96a696a6442a69c85c3bec5b6a26,"DERBY-1377: (Partial) - Dag's mods to iapi/error


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429922 13f79535-47bb-0310-9956-ffa450edef68"
f5c9a3b4d5de7aa7968cbdb0306be0ea1f88cffb,"DERBY-1377: (Partial) - Dag's mods to iapi/reference


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429923 13f79535-47bb-0310-9956-ffa450edef68"
11ec54f83077cbf59e3475b908ea7e45d051d35b,"DERBY-1377: (Partial) Dag's mods to iapi/util


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429924 13f79535-47bb-0310-9956-ffa450edef68"
a41d93f87ea9a66ec18c54bbd3300badfdbdbc69,"DERBY-1377: (Partial)  Add header for build.xml in root of iapi tree


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429925 13f79535-47bb-0310-9956-ffa450edef68"
d85b2cd1d30b891a857fc0d1cfb54199cbd18027,"DERBY-1377: Final mods for java/engine tree


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429927 13f79535-47bb-0310-9956-ffa450edef68"
3e13f59c4f841ff37a5a7b874daf4ca84f197d1c,"DERBY-1596: Add Working With Derby java files.

Committed for Stan Bradbury <Stan.Bradbury@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429935 13f79535-47bb-0310-9956-ffa450edef68"
fdaa60978bfafafe062a78fb070d2d5be77af5e5,"DERBY-1377 (partial): Update checkToursDB master due to license header additions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429957 13f79535-47bb-0310-9956-ffa450edef68"
79d64484ba1adb6a8ef24d8d9f1704d9ee72d946,"DERBY -1156 (partial) encryption of an un-encrypted database and 
re-encryption of an encrypted databases with a new key.

This patch adds code required to do the following:
-- prevent (re) encryption of a database when it is read-only.
-- prevent (re) encryption of a database when it is in log archive mode. 
-- A  new test is added to check the above two error cases.
-- after (re) encryption of a container with newly gernerated encryption key , 
   it is synced to the disk, 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@429990 13f79535-47bb-0310-9956-ffa450edef68"
ad94e28dc0acce4d52718138ead8f8f56f454cf3,"DERBY-694: Commit Narayanan's DERBY-694_v6.diff patch so that statement severity errors don't close jdbc objects which they shouldn't.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430051 13f79535-47bb-0310-9956-ffa450edef68"
7233e3346ec2acad4a9ccd4e66ea09694856641b,"DERBY-528: Commit Francois' 528_diff_v5.txt patch, adding username/password substitution to our authentication options.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430056 13f79535-47bb-0310-9956-ffa450edef68"
505bb8a1108af9da41188f9cf4bdb42e157c372a,"DERBY-1533: ArrayIndexOutOfBoundsException in DDMReader

DERBY-1533 follows in a series of bugs (DERBY-170, DERBY-428, DERBY-491,
DERBY-492, DERBY-614 among others) which have to do with the particulars of
the DRDA protocols used for handling long messages and large amounts of data.
In this particular issue, the problems involve the situation in which the
server is receiving a message which is segmented across multiple layer A
blocks using DSS continuations. This is a relatively unusual case, as
generally large amounts of data flow from the server to the client, not vice
versa.

This change contains two modifications to DDMReader, as well as some tests:

1) The Network Server method DDMReader.compressBLayerData was incorrect in
several respects. Rather than going through that code in detail, I noticed
that an almost identical version of this routine exists in the DerbyNetClient,
in the class Reply, and I am pretty confident that the client side code is
working, so I just wholesale modified the server's compressBLayerData method
so that it matched the client's method.

2) When the client is sending parameter data to the server, and the data to be
sent is a large array of bytes for a blob, the client, the client may send the
data inline as DRDA_TYPE_NVARBYTE, or it may externalize the data and send it
as DRDA_TYPE_NLOBBYTES. I believe that similar things happen with CLOB.
The client makes this decision based on the length of the data to be sent;
short values are sent inline, and long values are sent externalized. 
When the server receives the data, it must decide whether it is reading an
inline string of bytes, or externalized data, and it, too, makes this decision
based on the length of the data. However, the server's code for this was
comparing the length of the byte string against the amount of data left in the
current segment, as opposed to comparing it against the constant threshold
value for switching from inline bytes to externalized bytes; hence if a long
byte string happened to start late in a buffer, and was then segmented
(continued) into a subsequent buffer, the server would mistakenly think the
byte string was being sent as externalized bytes, when in fact it was sent as
inline bytes. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430077 13f79535-47bb-0310-9956-ffa450edef68"
dff95a185e3b93cf2a41f3bfb23c9bf10faa272d,"DERBY-1377: Fix license headers on remaining java files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430143 13f79535-47bb-0310-9956-ffa450edef68"
4ecc65a1abde7b94c63da0b8fac4282ed5b8ebdf,"DERBY-1377 (partial): cleanup a couple of missed files, insert proper license
header into the generated ClassSizeCrawler.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430149 13f79535-47bb-0310-9956-ffa450edef68"
71408abccdc420bdb0261c0c64fb9a373cc35f3d,"DERBY-1643 Rename the Dependency manager invalidation constant to represent its use of revoke restrict.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430170 13f79535-47bb-0310-9956-ffa450edef68"
ab8e485ee036ab27c809e7e89d71d2eb98ec0a3a,"DERBY-1377: (Partial) Inserted license headers into miscellaneous
files throughout the tree that were missed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430172 13f79535-47bb-0310-9956-ffa450edef68"
03eae1d7948689e25cac84b9425f7f85f57d1f17,"DERBY-1315 (minor cleanup) Remove a couple of unused fields and associated methods to save runtime space.
Reduce the scope of some fields and methods to better understand their use.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430173 13f79535-47bb-0310-9956-ffa450edef68"
a9217e9e7146f1cc1406bed1bed68f0fe36c4446,"DERBY-1146: Add SHOW TABLES and DESCRIBE commands to ij.

Committed for Havard Mork <havard.mork@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430177 13f79535-47bb-0310-9956-ffa450edef68"
a4daf98d665a5d1a0e7266f63e70d48fbbaf1b48,"Back out accidental change to EmbedDatabaseMetaData.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430189 13f79535-47bb-0310-9956-ffa450edef68"
d7720a17a94840d4be2ee369f9c5b0552c56c629,"DERBY-766 (partial) Modify the approach in the split expressions method of CodeChunk to only identify
self-contained chunks of byte code from a limited set of instructions. Thus this is a ""fail-safe"" approach,
rather than trying to catch all the opcodes that would make a set of byte code not self-contained.
Incremental development, method is still not called and does not perform any splits yet,
I test it with calls from BCMethod and a reduced split threshold (e.g. split if the method
is ~3k big instead of the limit of 64k).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430193 13f79535-47bb-0310-9956-ffa450edef68"
b8ef064ec9c9026de961a51811141a05d2eb3e5d,"DERBY-766 (partial) Catch IOExceptions written while generating byte code in CodeChunk
as an exception means a limit of the class file format has been hit and subsequently
the generated code will be invalid. E.g. by trying to represent a invalid constant
pool index which is greater than 64k in two bytes.
Remove the unused class BCUnsupported.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430293 13f79535-47bb-0310-9956-ffa450edef68"
36ed66bfef3b7f406de5b01205df52e4a3bc3323,"DERBY-1470: Commit -alt4 patch, which adds sysinfo to derbyclient.jar and
unseals org.apache.derby.loc in derbynet.jar and derbyclient.jar to prevent
sealing problems.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430301 13f79535-47bb-0310-9956-ffa450edef68"
bfd11f1bcbe7894be9fce50c5206310eaba4bef1,"DERBY-766 (partial) Move code in CodeChunk into a sub-method so that it can be shared (in a future
commit) between the two ways of splitting a large method into sub-methods. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430306 13f79535-47bb-0310-9956-ffa450edef68"
e70d8f1bb30a0205b516d8b816b926212e2b85df,"DERBY-1248

This problem was caused because the backup of the database did not get all
the log records describing the changes to the data files that it got.
The problem is that the online backup reads page ""through"" the cache, rather 
than from disk so it is picking up ""dirty"" pages where the associated log 
records have not yet been flushed to disk. 
The backup of the log file on the other hand goes directly from disk and thus 
sometimes in this concurrent test misses some of the log records in the 
unflushed part of the log file. The fix is to flush the log file up to the
end at the end of the backup process after the data files have been copied
and before we copy the last of the log files to the backup.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430396 13f79535-47bb-0310-9956-ffa450edef68"
c4ab09bec4c6c0a3bf2a0b73ecfa9d8c2578fd72,"DERBY-1660, submitted by Sunitha Kambhampati

This patch fixes the sql query used in the SYSCS_BULK_INSERT procedure to 
correctly use the optimizer hints using --DERBY-PROPERTIES clause instead of 
PROPERTIES.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430467 13f79535-47bb-0310-9956-ffa450edef68"
0d42361c734dd8237f0f5672d3da236c5d50d5f7,"DERBY-766 (partial) Clean up the existing split methods to avoid confusion over a code
length passed in. Now length of the method's code is determined inside the methods rather
than being passed around.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430522 13f79535-47bb-0310-9956-ffa450edef68"
5d3cc1ea665ddb9d00aa779b9ab725a871e31e08,"DERBY-1661, submitted by Sunitha 

Cause:
--On linux on the machine where the problem was hit, the default number for open file descriptors allowed is 1024. 
-- The problem lies in the sort code. The create index step involves the external merge sort.  There are some knobs in the code for the maximum number of input runs  to be used at a time. This is given by DEFAULT_MAX_MERGE_RUN in ExternalSortFactory.java. The default value is 1024.
--If the number of merge runs exceeds the limit given by DEFAULT_MAX_MERGE_RUN (lets call it 'x'), we combine the x number of runs into one larger run.  This process involves opening the x number of tmp files which is required to do the merge.
In this particular issue, when opening the 974th merge run, the too many files open is hit on this machine. 

See code:
org.apache.derby.impl.store.access.sort.MergeScan.init()

// Open a scan on each merge run.
int scanindex = 0;
Enumeration e = mergeRuns.elements();
while (e.hasMoreElements())
{
    // get the container id
    long id = ((Long) e.nextElement()).longValue();

    Transaction rawTran = tran.getRawStoreXact();  // get raw transaction
    int segmentId = StreamContainerHandle.TEMPORARY_SEGMENT;
    openScans[scanindex++] = 
    rawTran.openStreamContainer(segmentId, id, hold);   // <---------  This call throws the FileNotFoundException.
}

Workaround:
Increase the open file descriptor limit on the OS to a higher number. This solves the problem without any changes to derby.But this requires the user to explicitly change this limit on the machine, not a good option.
E.g on linux, the command to change the open file descriptor limit to 2048, 
$ulimit -n 2048 

To see the new /all limits, the command is
$ulimit -a


Fix to the problem:
1)change the DEFAULT_MAX_MERGE_RUN to 512.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430578 13f79535-47bb-0310-9956-ffa450edef68"
be12a80104fd225bd588500e584e847b7160a20a,"DERBY-688: Enhancements to XML functionality toward XPath and XQuery support

This revision contains d688_phase4_v2.patch.

This patch was contributed by Army Brown (qozinx@gmail.com).

The phase 4 patch, d688_phase4_v2.patch, adds some additional restrictions to
the ways in which XML values can be used. In particular:

  1. XML types cannot be used in CREATE PROCEDURE or CREATE FUNCTION statements.

  2. XML types cannot be used in import/export functions.

  3. XML types cannot be declared as columns in a global temp table.

I admit that I'm a bit fuzzy as to *why* these restrictions need to be in
place, but these are the restrictions that apply to the other ""long"" datatypes
in Derby (LOBs, LONG VARCHAR) so I'm enforcing them for XML, as well, to be
safe. It'll be easier to remove these restrictions in the future than it
will be to block them after users have potentially been relying on them.

One final restriction added by this patch is as follows: if a parameter is
used for the operand to an XMLPARSE operation, the parameter must have an
explicit cast to a character string type. I've put this restriction in place
because, based on my reading of the spec, this is required for SQL/XML[2006]
conformance. Further explanation can be found in comments for the relevant code.

d688_phase4_v2.patch also adds some simple test cases for each of these
restrictions to the lang/xml_general.sql test, with the corresponding master
updates.

And finally, the phase 4 patch includes two new error messages: one for the
XMLPARSE restriction, and one for missing XML classes, which is actually for
phase 5 but I included it in the phase 4 patch so that the two patches can
be applied sequentially (phase 4 then phase 5) without conflict. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430626 13f79535-47bb-0310-9956-ffa450edef68"
751ab71f3b613ccf7eadcb3ed28f4e4d72de452e,"DERBY-1130 Client should not allow databaseName to be set with setConnectionAttributes

Attaching a patch 'd1130-client-v1.diff' which disallows databaseName attribute to be set using setConnectionAttributes method in client data sources. Tests added to jdbcapi/checkDataSource.java.


Contributed by Deepa Remesh




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430641 13f79535-47bb-0310-9956-ffa450edef68"
9932d01a7e265bb85a1f26764ab61fe3b8709a0c,"DERBY-1032 (partial): Add Unix scripts to bin directory


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430668 13f79535-47bb-0310-9956-ffa450edef68"
3bcc92e6d5e879192b96f9041d278385495c903e,"DERBY-688: Enhancements to XML functionality toward XPath and XQuery support

This revision contains d688_phase5_v1.patch.

This patch was contributed by Army Brown (qozinx@gmail.com).

The phase 5 patch, d688_phase5_v1.patch, adds code to determine whether or
not the user's classpath has the required XML classes and, if not, to throw
a user-friendly(-ier) error message whenver the user attempts to use any of
the XML operators.

I inquired as to the best way to do this in the following thread:

http://thread.gmane.org/gmane.comp.apache.db.derby.devel/25307/focus=25315

Dan suggested a) looking at the Derby code that loads modules, and
b) adding a new utility method to the ClassInspector class.

I looked at the module-loading code and it ultimately just makes a call to
Class.forName() and ignores a module if that call throws a LinkageError or
a ClassNotFoundException; see the getImplementations() method in
BaseMonitor.java. So based on that I added a utility method to ClassInspector
that does the same thing, except that it just returns ""true"" if the call
to Class.forName() succeeds and ""false"" otherwise. I made the new method
static because it doesn't rely on any state specific to ClassInspector and
because it would have taken a good deal of searching for me to figure out
how to instantiate an instance of ClassInspector correctly from within
the XML datatype class.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430670 13f79535-47bb-0310-9956-ffa450edef68"
41444521e3f73bff5d37de04ee29e22e0b30e07a,"DERBY-1032 (partial): Add Windows batch scripts to bin


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430677 13f79535-47bb-0310-9956-ffa450edef68"
85f53ba61c8edd4dc8630c5e5a19e7ef7735bb0c,"DERBY-1597: set classpath in frameworks scripts from the value of DERBY_HOME instead of
sourcing the set*CP scripts. This prevents an accumulation of multiple Derby jar files in
the classpath after multiple runs of the scripts.

Committed for Ramandeep Kaur <ramandhindsa@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430681 13f79535-47bb-0310-9956-ffa450edef68"
a1f3baa386343969a1d539e7252c36b9e382fa93,"DERBY -1156 (partial) re-encryption of the database.

This patch:
1) prevents configuring a database for encryption or encryption with new 
key while restoring from backup using connection URL attributes createFrom/
restoreFrom/rollForwardRecoveryFrom. 

2) Modified the re-encryption crash recovery test to perform (re)encryption  while 
recovering from a previous crash with same attributes. 
 
3) Minor cleanup in  RawStore.java related to re-encryption.

 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430714 13f79535-47bb-0310-9956-ffa450edef68"
33521af4465e72b29f3e6bfc60e520990ab529e1,"DERBY-1660, submitted by Sunitha Kambhampati

This patch adds two new classes WarehouseVTI and TableVTI.
adds a new test case to test SYSCS_BULK_INSERT. This testcase is added to the existing optimizerOverrides.sql.
updates master files for embedded and network server. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430799 13f79535-47bb-0310-9956-ffa450edef68"
ebdced0dad8d9583e5c2ba07fd64636c0233aa2e,"DERBY-1530: Commit derby-1530_v01.diff, aligning Derby with the last JDBC4 signature changes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430815 13f79535-47bb-0310-9956-ffa450edef68"
f433a645b8f77c58c7de360d6e225d76718cf7f7,"DERBY-1516: Inconsistent behavior for getBytes and getSubString for 
embedded versus network.  Contributed by Craig Russell



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430825 13f79535-47bb-0310-9956-ffa450edef68"
7d16ff3d1e605ddb26e8aadc101859855d9742b3,"DERBY-1556 (partial) Add the initial implementation of a  utility method in the JUnit JDBC class to drop a schema
and all of its objects. Will be called by a test decorator I will be committing soon.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430853 13f79535-47bb-0310-9956-ffa450edef68"
9e2d42bf8031f4696dbb4e1f6d49319c53010335,"DERBY-1556 (partial) Add TODO's for the JDBC.dropSchema() method that shows work still needs to
be done to drop function and synonyms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430855 13f79535-47bb-0310-9956-ffa450edef68"
19b5d88fc3a3ace0b0c85c67c461d1db31eb73bb,"Bump trunk version to 10.3.0.0 alpha


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430857 13f79535-47bb-0310-9956-ffa450edef68"
361d61bbdf94d19778f70171184ae2500ef3f0ab,"DERBY-1593: Separate test jars from ""product"" jars, add testing README.htm
and jakarta-oro-2.0.8.jar to test directory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430864 13f79535-47bb-0310-9956-ffa450edef68"
f061ecd1a1096ce0b8e3ccf28e3da7cfcae371d5,"DERBY-1556 (partial) Add an initial test decorator that cleans a database using the utility method JDBC.dropSchema.
More work is needed to drop functions, synonyms and handle dependencies between objects.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430867 13f79535-47bb-0310-9956-ffa450edef68"
dd0779087550f636e7aa3d80da5bd25cbabd7e79,"Junit improvements - setup security manager (not yet enabled for standalone tests) to be driven
by the test configuration, add openTestResource method in BaseTestCase that works with a security manager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430872 13f79535-47bb-0310-9956-ffa450edef68"
2fd14fb38cecc3ca086ce3f0007c77c0b60b2e33,"Junit improvements in the functionTests.tests.jdbcapi package. Add a _Suite to run all the JUnit tests.
Add checks to ConcurrencyTest, ProcedureTest and ScrollResultSet test to define their own requirements.
Make ConcurrencyTest not use the old harness to define when it is run.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430889 13f79535-47bb-0310-9956-ffa450edef68"
cbc0b44512115e9d65886debe407600d358ce441,"Backout change for 

DERBY-1130 Client should not allow databaseName to be set with setConnectionAttributes

To address concerns with the patch



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430891 13f79535-47bb-0310-9956-ffa450edef68"
e3aea2b7abe9c08d5a9f91c1c8bc87aa43c04c5a,"Junit improvements, have the ScriptTestCase use the openTestResource method in BaseTestCase to get the script
file to avoid exceptions with a security manager. Added a couple more tests to the language scripts and added
the clean database decorator to each test run.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430894 13f79535-47bb-0310-9956-ffa450edef68"
23f7bd69edf8e862fdbbb2a61e753f8a5f78677f,"Fix missed masters due to 10.3 bump


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@430946 13f79535-47bb-0310-9956-ffa450edef68"
d038483cbeb71c09ba95817b4f0190a79ccae6b0,"Have the test harness jdbcapi run a single JUnit suite jdbcapi._Suite that includes most of the JUnit tests
that were run individually. Tests in this suite that were excluded in derby net or had _app.properties file
now self-exclude themselves based upon the JUnit utility methods indicating which JDBC client they are running.
Remaining JUnit tests should be included in jdbcapi._Suite, think they were added after I has started the _Suite
work.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431195 13f79535-47bb-0310-9956-ffa450edef68"
f18825aa0f733d20835250cafb7959907aba87cb,"DERBY-634: Prevent StackOverflow due to bad subquery optimization. Prevent cases of subquery optimization that can cause runtime stack overflow.

Submitted by Satheesh Bandaram (satheesh@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431293 13f79535-47bb-0310-9956-ffa450edef68"
621d67a166c9bac9c418106544bc536f20090b0a,"DERBY-1664: (Partial) This is the first pass at a test that can be used
to gauge how long it takes to do each part of the startup process.  
This could likely be extended to also test how long it takes to create
tables of different size, how long it takes to insert rows, etc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431395 13f79535-47bb-0310-9956-ffa450edef68"
9c5e195ab314d7555ec65363204179b999d78561,"DERBY-766 (partial) Almost working code in CodeChunk that splits expressions out from a method into
a sub-method for generated code. Increased the number of unions supported in the largeCodeGen test
from ~800 to ~1300. Code not yet enabled as some unexpected errors exist at 1400 unions, leading
to a ClassCastException. Committing as a checkpoint, the actual split call from BCMethod is commented
out to avoid any problems running it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431474 13f79535-47bb-0310-9956-ffa450edef68"
3c78cae313469087c1f527d7d2874fb3383e1f90,"DERBY-1574: NullPointerException in UPDATE with COALESCE and subquery

This patch
- adds a preprocess method to CoalesceFunctionNode to override the one
  in ValueNode, thus making sure the arguments get handled.
- adds a printSubNodes method to CoalesceFunctionNode (was missing
  too, I discovered, when I was trying to look at the parse tree after
  binding).
- adds a new test case to coalesceTests.java and an updated master

Patch contributed by Dag H. Wanvik.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431593 13f79535-47bb-0310-9956-ffa450edef68"
cc8ea120df5db38dfb4bb43f20b641e3036cd1fb,"DERBY-1688: ConsistencyToken.hashCode() is not thread safe

Rewrite the method to use a thread-safe approach as suggested by The
""Double-Checked Locking is Broken"" Declaration.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431603 13f79535-47bb-0310-9956-ffa450edef68"
f5984368b4546ecbcbf29b0232d5a30c124064fc,"DERBY-1691: jdbcapi/blobclob4BLOB.java fails under DerbyNet framework 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431663 13f79535-47bb-0310-9956-ffa450edef68"
d57decdf0a3f48d9e9b7e720ac15c35fe727884a,"Fix testSecMec so that if the server fails to start (checked by pinging it) the test prints a fail message
and completes, rather than just calling System.exit().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431696 13f79535-47bb-0310-9956-ffa450edef68"
68a8fb10c4927280371382f8f87a12ac0054c2d0,"DERBY-1694 Cleanup derbynet/testProperties so that it always handles the output from the processes it forks.
Not handling the output can lead to hangs according to the javadoc for java.lang.Process.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431697 13f79535-47bb-0310-9956-ffa450edef68"
dd2accde290f04f361536689efc1b4314fd10abe,"DERBY-1652, submitted by Yip Ng

The cause of the problem is that the trigger descriptor is created after the stored prepared statement(SPS) has been compiled, so the compiled form of the SPS is not aware of that its trigger action can fire on the trigger table itself. Hence, the constant action was not generated correctly.

During upgrade, the SPSs are invalidated at database boot time. The SPS will be recompile when it is being invoked and the recompilation at this point will of course detect the relevent trigger and generate the correct constant action for the SPS and produce the expected behavior when the SPS is executed - throwing an error when it exceeds the trigger's maximum depth in the above case.

The simplest solution without introducing another revalidation of the SPS is to create the trigger descriptor first before compiling the SPS. I ran derbyall and had to go over the testcases which have the wrong master outputs and I have corrected them on this patch.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431698 13f79535-47bb-0310-9956-ffa450edef68"
bb67ebd26d5e329ec1a9afd89cf38fa353a436a1,"This patch fixes couple of java doc warnings. 

Contributed by Army Brown (qozinx@gmail.com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431734 13f79535-47bb-0310-9956-ffa450edef68"
32803bce7df3911b63c266402bf536fd4ec0a70b,"DERBY-415 : sysinfo with -cp client should not complain about DB2 Driver

This change modifies the behavior of the ""-cp client"" argument to the
sysinfo tool. Formerly, this argument checked for both the DerbyNetClient
and the DB2 JCC driver, and complained if both drivers were not present.

Increasingly, users of Derby are using just the DerbyNetClient, and the use
of the JCC driver is less common, so it makes sense that ""-cp client"" should
focus on the DerbyNetClient, and the DB2 JCC driver can be treated separately.

So, ""-cp client"" now only checks for the DerbyNetClient, and a new argument
""-cp db2driver"" is added to check for the DB2 JCC driver. The new behavior is:
   java sysinfo -cp: checks all the various components of the classpath
   java sysinfo -cp client: just checks the network client
   java sysinfo -cp db2driver: just checks the JCC driver



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431741 13f79535-47bb-0310-9956-ffa450edef68"
0dcc1ec096b53eccd560958aeacca5a9538c5b81,"DERBY-1689: Commit remove_10_2_upg_test.diff, removing the test for 10.1 to 10.2 upgrade.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431744 13f79535-47bb-0310-9956-ffa450edef68"
a6464f221c6fc3965f8d98eadc142027dfd34ce8,"DERBY-1701 (partial) Clean up some of the jdbcapi tests by closing statements when finished and
cleaning up the connection. The connection handling needs to be simplified by having default connection
handling in BaseJDBCTestCase.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431799 13f79535-47bb-0310-9956-ffa450edef68"
0d507496ebf59b2b22ee36029a68010743b2b318,"Added my PGP key.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431844 13f79535-47bb-0310-9956-ffa450edef68"
29bba2bcf2d2da3276883a259c5c1a2ec7ca00b2,"added PGP key for Andreas Korneliussen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431884 13f79535-47bb-0310-9956-ffa450edef68"
b548a534e5a3ef2d57d155580274180aa24e9c4b,"DERBY-1701 (partial) close a Statement object in the BlobTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431916 13f79535-47bb-0310-9956-ffa450edef68"
df2b52c079a2d106374760a4098c7ac9fa669bb0,"DERBY-1555 DERBY-1701 (partial) Change the name of the TestConfiguration methods to openConnection from getConnection.
Step to having BaseJDBCTestCase.getConnection() be a method matching BaseJDBCTestSetup.getConnection, a handle
to a default connection stored in the instance. This will remove a lot of code in the classes that extend BaseJDBCTestCase
that store a connection locally and have N different ways of cleaning it up.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431919 13f79535-47bb-0310-9956-ffa450edef68"
4292752a50b7f25f339077ddc7451cb36ec87d41,"DERBY-1701 (partial) Close statements and result sets in BLOBTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431939 13f79535-47bb-0310-9956-ffa450edef68"
ffe3f662f94754b5116e091d440f24490af49b7e,"DERBY-1555 DERBY-1701 (partial) Improve the BaseJDBCTest by adding support for a default connection
exactly like BaseJDBCTestSetup. Provides consistent handling for a connection in the common case
of a test using just one. Removes duplicated/inconistent code across many tests. First step
has the getConnection method called getXConnection until all the tests ahve stopped using the getConnection
static method and instead use the openDefaultConnection method.
Change the tests in jdbcapi to the new scheme.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@431999 13f79535-47bb-0310-9956-ffa450edef68"
09ffc9bc0f1f925bf6c88171cb9dedcc32b3c37e,"DERBY-1555 DERBY-1701 (partial) Convert more tests to use the instance based get[X]Connection method
or the static openDefault method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432028 13f79535-47bb-0310-9956-ffa450edef68"
c83b48a573d6e3aa885fb60a0b62323b0408f229,"DERBY-1692: Client driver does not use the query timeout value set
using Statement.setQueryTimeout() for subsequent executions using the
same statement object

Make Statement resend the timeout value for each execution, and extend
SetQueryTimeoutTest with test cases for re-execution of Statement,
PreparedStatement and CallableStatement.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432029 13f79535-47bb-0310-9956-ffa450edef68"
27fff3cf9a956bb91914bb55de5c3db389003bbc,"DERBY-1701 (partial) change SURDataModelSetup to extend from BaseJDBCTestSetup and use its connection handling.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432031 13f79535-47bb-0310-9956-ffa450edef68"
6546caa90ec20c98d88bd50c442b5e13051983e6,"DERBY-1032: Add scripts in bin to distributions and snapshots, remove frameworks
from snapshots.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432159 13f79535-47bb-0310-9956-ffa450edef68"
7ebfefebd54d83e0886b32221a443120d70bc14a,"DERBY-1555 DERBY-1701 (partial) Add utiltiy methods to BaseJDBCTestCase to get Statements, PreparedStatements against
the default connection for the test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432222 13f79535-47bb-0310-9956-ffa450edef68"
cafb31f9167f90d57887c91db691f8829258eb73,"DERBY-1681, submitted by Army Brown

Fixes the following issue:
If Derby chooses to do a join between two FromTables and the right table is a chain of UNIONs, then the optimizer may choose to push the join predicate (if provided) down into the UNION and to both children of every UNION in the chain. But if the predicate cannot be pushed to the children of any of the UNIONs (except the top-level one) the predicate can end up being ignored altogether with respect to that UNION's children. The result is that query execution can return rows that do not satisfy the predicate.

This is a regression introduced in 10.1.2.4 and thus it affects 10.1.3 and 10.2. I came across this while tracing through code for DERBY-1633.

For more detailed explanation of problem and solution see html doc attached to
DERBY-1681.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432367 13f79535-47bb-0310-9956-ffa450edef68"
aef0edadb346b88ff71ee2fd4f0d8830454db36d,"DERBY-1691: jdbcapi/blobclob4BLOB.java fails under DerbyNet framework 
with JCC 2.6.

I filtered out the odd class obfuscation differences with the SqlException
class.  Passes with JCC 2.6 (I got the upgrade from the Cloudscape
site).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432432 13f79535-47bb-0310-9956-ffa450edef68"
fb2bfd52fcfce176825ce59c381b679bcdb9140d,"DERBY-1555 DERBY-1701 (partial) Incremental step in changing the tests that extend
SURBaseTest to use the single connection provided by BaseJDBCTestCase. Added
initialize method to BaseJDBCTestCase to allow tests to have a consistent
initial state for a connection. The SURBaseTest still has its con variable,
will be cleaned up in subsequent commits.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432438 13f79535-47bb-0310-9956-ffa450edef68"
ff658306bd4fe3a1b9e462db9ee0da1919cdb790,"DERBY-1555 DERBY-1701 (partial) Change the tests that extend SURBaseTest to use the utilitiy methods
rather than the con field from SURBaseTest to fit into the generic single connection model provided
by BaseJDBCTestCase. Incremental development, next step will be to remove the con field from SURBaseTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432450 13f79535-47bb-0310-9956-ffa450edef68"
fc81152b1b05f989fa8f54b6d1198643841cf461,"Change UpdateXXXTest suite method to pick up test methods starting with test automatically and
rename test that needs to be added when jdbc 2 or greater is supported.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432451 13f79535-47bb-0310-9956-ffa450edef68"
2b04028f807a96f48e9e907f9f918712d992d400,"Change ProcedureTest to use the utility methods provided by BaseJDBCTestCase instead of using getXConnection.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432453 13f79535-47bb-0310-9956-ffa450edef68"
07fb05a69200ffc3f797de66a1b464039aad221f,"Make ResultSetCloseTest and BLOBTest use the utility methods from BaseJDBCTestCase instead of using getXConnection().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432456 13f79535-47bb-0310-9956-ffa450edef68"
5272c90684e68bc612d1b31e980a101a0a131d84,"Change DataSourcePropertiesTest to be a self describing test and not rely on the old
test harness _app.properties method. Add it and ResultSetCloseTest to jdbcapi._Suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432457 13f79535-47bb-0310-9956-ffa450edef68"
7a466989456068459c551cd41a3ced0f6ff4f0ee,"The patch (DERBY-1712.diff) has a new class NetworkServerTestSetup. This class is put into a new package for junit components, called org.apache.derbyTesting.junit, and the patch therefore also contains a new build file.
TestConfiguration had to be modified so that the new class could use DERBY_TEST_CONFIG attribute. 
patch contributed by Andreas Korneliusse nandreas.korneliussen@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432468 13f79535-47bb-0310-9956-ffa450edef68"
e2b5660cf1480b6f91e92259664484b2254c9ff5,"Remove Junit tests from jdbcapi.runall that included in _Suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432469 13f79535-47bb-0310-9956-ffa450edef68"
707aa66028832affe745c69a764d37ec20b0e77e,"DERBY-1712 Missed commit of TestConfiguration.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432475 13f79535-47bb-0310-9956-ffa450edef68"
29411ae06279d161dd16e4ce1c0cfa955e29f6c5,"Removing throwing Exception from setting up the Suite for ClosedObjectTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432477 13f79535-47bb-0310-9956-ffa450edef68"
6ff35b48aa58dd9676e1619d9f6240ef5d36d835,"Add some grant/revoke tests to PrepareExecuteDDL.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432478 13f79535-47bb-0310-9956-ffa450edef68"
12e892f542f99d67b65d43138d5527e1c59aeb65,"Add a couple _Suite JUnit suites in lang and jdbc4, as framework, neither is used yet.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432479 13f79535-47bb-0310-9956-ffa450edef68"
d1879a30da25d23cc097c5ac7a47a921cbc90a0e,"Add a clean database test decorator to ProcedureTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432480 13f79535-47bb-0310-9956-ffa450edef68"
b3d2bc6b025915ef1a4d92197dccb61bad4fb5f6,"Have ScriptTestCase use the connection provided by BaseJDBCTestCase.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432481 13f79535-47bb-0310-9956-ffa450edef68"
11a5a28d9870b3b3ca6490f8a48273198a531d67,"Change ShutDownDBWhenNSShutsDownTest.java to use the connection provided by BaseJDBCTestCase.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432484 13f79535-47bb-0310-9956-ffa450edef68"
3bd1dd868a6af157640f1f6bce025f58faa45362,"Move the framework JUnit classes for Derby into org.apache.derbyTesting.junit package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432487 13f79535-47bb-0310-9956-ffa450edef68"
6f4ffc7f6238a4b243bee42f507b845f81e4f502,"DERBY-1710: Unchecked casts from SQLException to EmbedSQLException
cause ClassCastException in NetworkServerControlImpl when running
Java SE 6

The attached patch makes NetworkServerControlImpl use
SQLException.getSQLState() instead of EmbedSQLException.getMessageId()
where possible. Where it is not possible, check that the exception is
EmbedSQLException before casting, and fall back to a more generic
approach if it is not.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432493 13f79535-47bb-0310-9956-ffa450edef68"
18f963fdb0796c6a41a73d532754aa660f3fad98,"Fixed bug in setUp causing it to only start server when running in embedded mode. Removed import of ..functionalTests.util package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432569 13f79535-47bb-0310-9956-ffa450edef68"
958e256974fd2f8a62241d5452b728e0515688e2,"DERBY-244: with linux, depending on env setting $LANG and console
encoding, some i18n tests fail

  * Run the i18n tests run with -Dfile.encoding=UTF-8 and
    -Dconsole.encoding=UTF-8
  * Use UTF-8 encoding in ProcessStreamResult for the i18n tests
  * Make Sed.java read result files from i18n tests using UTF-8 encoding
  * Respect the derby.ui.codeset setting in i18n tests, and use UTF-8 if it
    is not specified.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432645 13f79535-47bb-0310-9956-ffa450edef68"
ad3185420167c30774991ddb955c44900fb6ebe5,"Fix jdbcapi._Suite in DB2 client run by disabling ResultSetCloseTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432654 13f79535-47bb-0310-9956-ffa450edef68"
a23c24591aeddb5f537383007c176879c6985a81,"Minor javadoc fix to NetConnectionReply. Make @param parameter names match the method declaration.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432705 13f79535-47bb-0310-9956-ffa450edef68"
8aff1cda7ba684b728667dfc4962911bc81cac12,"DERBY-766 DERBY-1714 Working method in CodeChunk that splits expressions out of generated methods that are too large.
Bumps the number of unions supported in largeCodeGen to over 6,000 from around 800. Also increases the
number of rows supported in a VALUES clause. A large number of UNION clauses still requires a large amount of
memory for optimization (see DERBY-1315). A large number of rows in a VALUES clause fails at some point due to
a StackOverflow. Subsequent commit will modify largeCodeGen to be a JUnit test and adapt to these changes
but running into issues finding a useful workign limits that can produce repeatable results without
hitting memory issues.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432856 13f79535-47bb-0310-9956-ffa450edef68"
935c4f1ce6289267fb77e23da3f420daba6b3ebb,"DERBY-1730: Fix generation of OSGi attributes in derby.jar manifest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432859 13f79535-47bb-0310-9956-ffa450edef68"
c4c6000f7597fe7e17b09ecfe8a9a8123782694d,"DERBY-1674 (partial) Clean up SystemColumn interface and implementation to hold the data type of
the column using the standard DataTypeDescriptor class rather than individual fields.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432895 13f79535-47bb-0310-9956-ffa450edef68"
4f5dc7df83582418f5e0d11c6d84e796cc1af897,"DERBY-1538: Disable GRANT or REVOKE operations for object owners and raise an error when attempted. Also Database owner will not be able to revoke or grant access to object owners as well.

Submitted by Satheesh Bandaram (bandaram@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432929 13f79535-47bb-0310-9956-ffa450edef68"
55f1cc92410195d8ba0f7fa30e390e1e815b0049,"DERBY-1674 (partial) Move PermissionsCatalogRowFactory into its correct location under impl/sql/catalog.
System tables are a detail of the catalog implementation, not the dictionary api. The class was only ever referenced
in the impl/sql/catalog package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@432972 13f79535-47bb-0310-9956-ffa450edef68"
b1397ecd5c247ee30eb208b29d04795eb62a9b00,"DERBY-766 DERBY-1714 Convert largeCodeGen to a JUnit test, add it to the lang._Suite and add that to
the derbylang.runall old harness suite. Added tests for insert a large number of rows with a VALUES
clause. Test needs further improvements due to errors from DERBY-1315 and stack overflow with
a large INSERT VALUES clause.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433085 13f79535-47bb-0310-9956-ffa450edef68"
1069778fb0bb859343d76e504a7c36546c49fdb3,"Remove largeCodeGen from lang._Suite as the test is too unstable to run in the nightlies
due to the different memory usage across vms. DERBY-1315 and DERBY-1735 should address
adding the test back in.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433261 13f79535-47bb-0310-9956-ffa450edef68"
351dad861c3f3a656d51f9c1d1b61172dd48313c,"DERBY-1609 (partial) Fix a security exception reading the system property ij.showErrorCode.
Add code to return an error count for runScript (still needs to be tested).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433273 13f79535-47bb-0310-9956-ffa450edef68"
79b6c666b743e509ac28d2d4a69dbd53a92ae82a,"DERBY-1609 (partial) Remove some unused code in JDBCDisplayUtil.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433274 13f79535-47bb-0310-9956-ffa450edef68"
95011a0730ed6108fc5202a55c4f75c60cd6dd92,"DERBY-1609 Add IJRunScriptTest and _Suite JUnit tests for the testing of ij.runScript.
Modify runScript to take an OutputStream instead of a PrintStream, fix it to
correctly return the number of errors seen while running the script.
Add utility methods to BaseJDBCTestCase to run setup scripts from an InputStream or a String.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433331 13f79535-47bb-0310-9956-ffa450edef68"
9d3ba335a06e66ad6d7129477f6b790a2cb2a38b,"DERBY-1734 (partial) Add some utilitiy static factory methods to SystemColumnImpl to allow
easier building of system column lists for CatalogRowFactory. Remove column position (identifer)
from SystemColumn since it was redundant information. Still passed in some constructors of
SystemColumnImpl until all of the CatalogRowFactory implementations are modified to have
cleaner buildColumnList methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433349 13f79535-47bb-0310-9956-ffa450edef68"
4b3350cbb654d3d23612005f6a918de8732401e2,"DERBY-1734 (partial) Change SYSALIASESRowFactory to use the utility methods to obtain SystemColumn implementations
to avoid passing redundant parameters leading to bugs (see DERBY-1742). Fix the bug described by DERBY-1742
so that the column descriptor for SYSTEMALIAS BOOLEAN column is created correctly. Remove the calls to
convert the case for the SYSTEMALIASES columns as the system tables are an implementation detail of
Derby which is fixed at upper case.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433434 13f79535-47bb-0310-9956-ffa450edef68"
36960f28d037be5c3b0ee12d33e62f2ab69e9e8b,"DERBY-744 Correct checking if the sane property is set.
Patch contributed by Andrew McIntyre


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433443 13f79535-47bb-0310-9956-ffa450edef68"
f22b74561c1e9a9c858acd21ca7c39cf78c347c5,"DERBY-744 Add dependency of buildsource on the demo target to ensure correct ordering when executing ant all


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433445 13f79535-47bb-0310-9956-ffa450edef68"
5e3e7ba69f8ac635f9b6cb6a65ac72d744243e4e,"DERBY-1739 (partial) Clean up implementation classes IndexInfoImpl and TabInfoImpl to not have public scope.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433446 13f79535-47bb-0310-9956-ffa450edef68"
e1858949f8822939546ab141f25c86bf7d1a0fad,"DERBY-688: Enhancements to XML functionality toward XPath/XQuery support

This patch was contributed by Army Brown (qozinx@gmail.com)

This change contains d688_phase6_v1.patch, which changes the SQLSTATEs for
XML errors to match the SQL/XML specification where possible, and that
moves the Derby-specific XML sql states to a compile-time range
(42Z70 - 42Z7Z) instead of an execution-time range (X0Xxx). 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433450 13f79535-47bb-0310-9956-ffa450edef68"
c2ff6133b69261fd43c9d2f5b27be557b36db036,"DERBY-1739 Do not have a set of column name for indexesin implementations of CatalogRowFactory
as they were never used and are of no need. If the column name was needed it would be better
to derive it from the column postions of the index, rather than duplicating information.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433487 13f79535-47bb-0310-9956-ffa450edef68"
d5744b8ccc8f4f4e042dc6e887bee0bc5da3823a,"DERBY-1739 Fix build error by missed change in SYSVIEWSRowFactory.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433491 13f79535-47bb-0310-9956-ffa450edef68"
ed153bd536c481ccf3503d00e4a75a2ea8858015,"DERBY-1558 enable more testcases in ConcurrencyTest. The patch makes use of SystemPropertiesTestSetup within the ConcurrencyTest.suite method to reduce lock timeout. It additionally makes use of NetworkServerTestSetup from the _Suite.suite() method. The _Suite_app.properties has been added to disable starting of network server. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433607 13f79535-47bb-0310-9956-ffa450edef68"
a7d7f12fb5fe0f4c8621fb095c3507328fc915bf,"DERBY-1674 Remove some unused methods related to TabInfo classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433632 13f79535-47bb-0310-9956-ffa450edef68"
489a05c28a05431d399f9a30150a04ab72db361e,"- Rollback DERBY-1513_DERBY-1535 see DERBY-1610 for detail - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433655 13f79535-47bb-0310-9956-ffa450edef68"
5b76a5277683012aa0681ddee62522e4bb765edf,"DERBY-1674 (partial) Remove IndexScan class from impl.sql.catalog as it is never used.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433685 13f79535-47bb-0310-9956-ffa450edef68"
f7e090fc84b61e19fdb0937be92d6163ca567b74,"DERBY-1674 (partial) Step towards removing iapi.sql.dictionary.TabInfo as its implementation TabInfoImpl
should be package private to impl.sql.catalog. All references now use TabInfoImpl directly instead
of TabInfo. Next step is to move the javadoc comments from TabInfo into TabInfoImpl and remove the class.
Simplify TabInfoImpl and IndexInfoImpl to not duplicate variables from CatalogRowFactory.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433688 13f79535-47bb-0310-9956-ffa450edef68"
e2012f4ac4ed846b49247188cbab6a741d363829,"Add some JCC and JDK version specific masters in the hopes of fixing the
blobclob4BLOB test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433790 13f79535-47bb-0310-9956-ffa450edef68"
dfa65f538aac140a3b4b1bd6e5195d230ad8ca48,"DERBY-1033 DERBY-1405 DERBY-935: Add new top-level index.html to -bin
distribution which has links to the docs, demos, javadoc and external
resources. Also add the logo to the -bin distribution.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433816 13f79535-47bb-0310-9956-ffa450edef68"
0b466fe4bd5a5093c72771869f200d667024499e,"Add note about using ant -propertyfile to BUILDING.txt


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@433931 13f79535-47bb-0310-9956-ffa450edef68"
a0f840505f3e0d8fc5e547a34ce014f8b06d3b9a,"DERBY-1743: derbynet/testSecMec.java fails with NullPointerException
(intermittent failure)

Make sure the logWriter is not null before printing the stack trace.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434018 13f79535-47bb-0310-9956-ffa450edef68"
3d7a3d4b81ffe14987efcd82f6e877f130d229c3,"DERBY-1621: Commit derby1621trunkdiff04.txt, causing recompilation of trigger actions after ddl.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434046 13f79535-47bb-0310-9956-ffa450edef68"
ea3f2e42169317272710e51c766c39fe694554ce,"DERBY-1734 (partial) Switch to simpler definition of system columns for SYSCHECKS, SYSCOLPERMS, SYSDUMMY1 and SYSFILES.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434083 13f79535-47bb-0310-9956-ffa450edef68"
7aa6fa86b896b3ab78e3b8b467ae90b2b26f1e28,"DERBY-1674 (partial) CatalogRowFactory.buildEmptyIndexRow() row was implemented in all the sub-classes but could
never be called, except for SYSTABLESRowFactory. Seen by code inspection and double checked with the code
coverage. Remove all the methods (except SYSTABLESRowFactory) and abstract definition in CatalogRowFactory.
Changed DataDictionaryImpl to call buildEmptyIndexRow using a reference to SYSTABLESRowFactory since it
was special case code for SYSTABLES.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434100 13f79535-47bb-0310-9956-ffa450edef68"
df88f639f729c25aa81e9f2642fa44277639164d,"DERBY-1633: Commit Army's d1633_v3 patches, fixing the regression introduced by DERBY-805 in the behavior of views that involve joins.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434111 13f79535-47bb-0310-9956-ffa450edef68"
13e9e7804817ceeb21c8c5a093786259d789b60b,"Update the jdbc4 JUnit tests to use the recent additions, such as the single connection provided
by BaseJDBCTestCase and the test decorator base class BaseJDBCTestSetup.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434169 13f79535-47bb-0310-9956-ffa450edef68"
03a99e2ce157e7fc80c2e22ab97f4ce5b9484e1e,"DERBY-1555 Change BaseJDBCTestCase.getXConnection() to getConnection and provide consistent initialization
of all connections returned by instance methods of BaseJDBCTestCase.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434192 13f79535-47bb-0310-9956-ffa450edef68"
9f9b2519f96c5ffa2c81d2a5ca7a7f21865ea071,"DERBY-1691: exclude blobclob4BLOB from running against JCC until the test
can be fixed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434245 13f79535-47bb-0310-9956-ffa450edef68"
e0104e8bb86584146624a6caf70aa1c629021e35,"DERBY-1555 (partial) Remove access and use of static variables to store the current test configuration.
Changed to use a ThreadLocal private to TestConfiguration and access to the current configuration
is through utility methods in the base classes or TestConfiguration.getCurrent().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434257 13f79535-47bb-0310-9956-ffa450edef68"
9a733625c4d762cde546f22251e2ad3e9f433fe2,"DERBY-1555 fix stray character in TestConfiguration that broke build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434273 13f79535-47bb-0310-9956-ffa450edef68"
27190db9e348ff4eb1b6f1ef548aa22ea370b405,"DERBY-1500: PreparedStatement#setObject(int parameterIndex, Object x)
throws SQL Exception when binding Short value in embedded mode

setObject(int, Byte) is translated to setByte(int, byte)
setObject(int, Short) is translated to setShort(int, short)

Added test cases in jdbcapi/parameterMapping.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434309 13f79535-47bb-0310-9956-ffa450edef68"
8c26fb66b2a9359d8345ad6f7f8bcfdd9446144c,"DERBY-1582: Commit Deepa's d1582_v2.diff patch, raising a warning for vacuous REVOKEs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434408 13f79535-47bb-0310-9956-ffa450edef68"
f67c2ee7faa7ad03610558c6483ee3ac8a315b4f,"DERBY-688: Enhancements to XML functionality toward XPath/XQuery support

This patch was submitted by Army Brown (qozinx@gmail.com)

Attaching a ""phase 7"" patch, d688_phase7_v1.patch, that does the following:

  1 - Makes changes to catch all ""Throwable"" errors that might be
      thrown by Xalan or JAXP, instead of just catching the exceptions
      declared by the APIs. This is per the email thread here:

      http://www.nabble.com/xalan-assertion-when-execution-a-xml-query...-tf2149830.html#a5953476

      This allows Derby to continue working as normal if/when an
      unexpected Xalan/JAXP error (such NPE or assertion failure)
      occurs. In that case the statement itself will fail and the
      error will be printed, but Derby will continue to work as
      expected after the failure.

  2 - Slight change so that, in the event of an unexpected Xalan
      compilation error, the name of the operator that encountered
      the error will be printed as part of Derby's message. Currently
      the operator name isn't passed in and thus ""{0}"" shows up
      in the error message, which is incorrect.

  3 - Fixes a small bug in XML query execution code that was leading
      to NPEs in Xalan. Namely, the current code passes a null argument
      into Xalan where a non-null is expected (and required) for namespace
      prefix resolution.

  4 - Makes the first of two changes required to ensure Derby SQL/XML
      support agrees with the specification. The two changes are
      mentioned in my previous comments; this phase 7 patch addresses
      the first one (insertion of a non-Document node into a Derby XML
      column should not be allowed).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434556 13f79535-47bb-0310-9956-ffa450edef68"
d2b9c545c5102ef8e062233a2f462c7b80bf9966,"Add methods to get a consistent folder for JUnit tests to store any failure information in.
Split the output comparision and handling from ScriptTestCase into CanonTestCase.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434562 13f79535-47bb-0310-9956-ffa450edef68"
008a5615ca18b8ed9811041f97be4cd4192b2c62,"DERBY-1708, contributed by yip ng

Fixes the problem that the lock table statement is missing the logic to collect the required privilege at compilation phase; thus, it fails to enforce the required privilege needed by the statement at execution time. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434577 13f79535-47bb-0310-9956-ffa450edef68"
d5fba93c45a90e8004d5bde20ddcf2ebbc0dc173,"Remove the assertSQLState from JDBC, one was already in BaseJDBCTestCase.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434581 13f79535-47bb-0310-9956-ffa450edef68"
6cf4c2c107693c249c9f551fea9d59d4be38507a,"Cleanup the autoloading tests to move the setup checks out of TestConfiguration into the tests
themselves as they are very specific to the autoloading tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434586 13f79535-47bb-0310-9956-ffa450edef68"
5ce0f74f6b6698d4e11796d3634201b9ead0ad9e,"remove debug println accidently left in.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@434587 13f79535-47bb-0310-9956-ffa450edef68"
8bc31837bcdd1ee7293c5e0202ef7824b815b03e,"Add DatabasePropertyTestSetup decorator that sets and clears database properties.
Fix a bug in SystemPropertyTestSetup noticed while testing DatabasePropertyTestSetup.
Change ConcurrencyTest to use DatabasePropertyTestSetup to work around bug DERBY-1762.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436653 13f79535-47bb-0310-9956-ffa450edef68"
2a98bce610f5d6caa445fa5469e3878bcfd7da55,"Fix single quotes in a few messages to follow MessageFormat rules.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436658 13f79535-47bb-0310-9956-ffa450edef68"
3ec94a56b0893b44a6079928d5ec3732c15b2bac,"Provide a consistent mechanism to test if the classes are being loaded by jars or
not in JUnit tests. Uses the SecurityManagerSetup class which basically already
determined this information at its startup.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436660 13f79535-47bb-0310-9956-ffa450edef68"
2471d34252e64c3ab48d9c11a4c5d429c9ab22b6,"DERby-1695: Add update4d testSecMec masters for JCC 2.6 and 2.8 needed after
DERBY-528.

Committed for Sunitha Kambhampati <ksunithaghm@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436672 13f79535-47bb-0310-9956-ffa450edef68"
5bfe32409e45a3d42ef783a3fe370ace770826ba,"Add some the JUnit test LnagScripts to the lang._Suite suite to start testing of running the .sql
scripts using JUnit. Currently it runs up to about eight test depending on configuration. These
tests do not currently replace the running of the scripts as regulaar tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436817 13f79535-47bb-0310-9956-ffa450edef68"
18facd4972c85706cf5849a2ff79b2fd782a0c87,"Make BaseTestCase install a security manager for its tests including adapting to the existing test
harness by not installing a security manager in that case. Allows JUnit tests to be run standalone
while installing a security manager automatically. Does require that the caller sets derby.system.home
when running the tests in JUnit test runners outside of the old harness. This will be addressed to
remove that requirement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436820 13f79535-47bb-0310-9956-ffa450edef68"
b9df96abb7d14533edb2135c2dd9aaaade849cde,"DERBY-1698, contributed by Deepa Remesh

adds an additional test to jdbcapi/SetQueryTimeoutTest.java. This patch adds a test for executeUpdate method call.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436904 13f79535-47bb-0310-9956-ffa450edef68"
ab647540ce31e7732084a85832028c261b83f4a7,"Change jdcb40 suite to run most of the JUnit tests through _Suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436955 13f79535-47bb-0310-9956-ffa450edef68"
92f9877b7d3931fe2e787e1eb04fcb39f63cb67a,"DERBY-1555 (partial) Add some top level JUnit suites that run all the tests in the packages (AllPackages),
all the tests in Embedded and (Derby) Client configurations and run All the configurations.
Also adds the logic in TestConfiguration to switch configurations to Client.
Just a checkpoint (incremental development), more work needed, see some failures running All.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436957 13f79535-47bb-0310-9956-ffa450edef68"
d23e4d70b79699f46c4e754ed09a8c6d48190b0e,"DERBY-1555 (partial) Embedded and Client need to be public classes to run as JUnit tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@436965 13f79535-47bb-0310-9956-ffa450edef68"
0cd162b63bf58e1ea222246f1b1655180dd5a411,"DERBY-1555 (partial) Have SURDataModelSetup test for embedded vs. network using utility methods
in the JUnit classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437009 13f79535-47bb-0310-9956-ffa450edef68"
01217c2da76b308648ff3ab5fffb6a79ccb75468,"DERBY-883 Enhance GROUP BY clause to support expressions instead of just column references.
Patch contributed by  Manish Khettry - manish_khettry@yahoo.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437070 13f79535-47bb-0310-9956-ffa450edef68"
10cc70bcc00febcc1aa0d6dcef2f959c4e930c64,"DERBY-1473: Add cut-off and truncation logic to streaming classes in
the embedded driver

This patch adds the capability to handle length less streams
properly. Such streams are now capped at the maximum length of the
column it is inserted into. If the stream is longer than the limit, a
DerbyIOException (subclass of IOException) is thrown, causing a
statement severity StandardException to be thrown. The exception
handling system takes care of cleaning up.

If a stream is shorter or longer than the specified length, an
exception is thrown as required by JDBC 3.0.

Contributed by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437127 13f79535-47bb-0310-9956-ffa450edef68"
2f02954c91458c9d5a72f8dbd893f4e0d6bef465,"DERBY-705: Re-enable test which was disabled in DERBY-506 commit

Patch contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437168 13f79535-47bb-0310-9956-ffa450edef68"
c310bdd949f4502dc741d261e2e24497eb28ff9f,"DERBY-119: Add ALTER TABLE option to change column from NULL to NOT NULL

This change merges the db2AlterColumn and columnAlterClause routines in
the parser to provide a single ALTER TABLE ALTER COLUMN statement that
provides support for changing the NULL / NOT NULL constraint on a
column in a table.

I believe that the existing execution code in AlterTableConstantAction
is correct, and so this patch primarily involves parser changes to hook
up the compiler to the existing execution code.

The patch also modifies the constraint handling in ModifyColumnNode so
that a column cannot be changed to NULL-able if it is part of either a
primary key or a unique constraint. Prior to the patch, ModifyColumnNode
only checked for a PRIMARY KEY constraint, so this patch also adds a check
for a UNIQUE constraint. It also rewords the error message to describe the
new conditions which can cause the ALTER COLUMN to be rejected.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437215 13f79535-47bb-0310-9956-ffa450edef68"
422a3566ec02ebade05feb1d3542feb22e341805,"DERBY-1681
contributed by Army Brown

Adding extra tests for this issue, fix already committed.  

Note that the test cases which were added for DERBY-1633 actually already 
demonstrate the problem reported (and now fixed) in this issue. This checkin
is a dedicated test case for this issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437380 13f79535-47bb-0310-9956-ffa450edef68"
63d4142e02afccbe0b7e0df279ec2b3c772ca0f8,"DERBY-1292 1) The addition of a copy method to org.apache.derby.client.am.ColumnMetaData.
2) Modifications to org.apache.derby.client.am.PreparedStatement to hold on to a copy of the column meta data for each entry used in batch updates.
3) A test was added to org.apache.derbyTestingfunctionTests.tests.derbynet.prepStmt. 

Patch contributed by James F. Adams derby@xemaps.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437822 13f79535-47bb-0310-9956-ffa450edef68"
8d26d2890fb6de44c4ec1006cc3a8e2dd352f847,"DERBY-1674 (partial) Remove TabInfo interface as the implementation of system tables is private to the impl/sql/catalog package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437823 13f79535-47bb-0310-9956-ffa450edef68"
aef993835e41b2c9facf202060cb3a7e3f84a737,"DERBY-1555 Remove comment left in after re-naming of method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437832 13f79535-47bb-0310-9956-ffa450edef68"
9f5214d6806dfab776a4fccb973ee83ff9452778,"DERBY-1417: Add new, lengthless overloads to the streaming api

Prevent materialization of lengthless streams in SQLBlob.setWidth().

Contributed by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@437976 13f79535-47bb-0310-9956-ffa450edef68"
924602a3c399193d12087260fd35c1426c7c39f8,"DERBY-1130
contributed by Deepa Remesh

Committing patch 'd1130-v2.diff' which ensures that database name set using setConnectionAttributes does not get used by client data sources. Changes are:

1) Appends the attributes in setConnectionAttributes method to database name only if database name has been already set on the data source. This will handle both these cases successfully:

a) When database name is not set as a DataSource property - In this case, if we pass in database name as a connection attribute, it will not get used. databaseName is a required Derby DataSource property. If it is not set, we cannot get a connection using the DataSource. It will fail with the following exception:
08001 - Required Derby DataSource property databaseName not set.
So, there is no need to append the connectionAttributes to the database name variable if databaseName DataSource property is not set. This way, we can avoid using database name in case it is passed in as a connection attribute.

Without the patch, if database name was not set, the code was using ""null"" as database name and creating a database named null if ""create=true"" is specified or throwing an exception that it cannot connect to database named null.

b) When database name is set as a DataSource property - In this case, if we pass in database name as a connection attribute, it will not be used. This is because database name set as DataSource property will over-ride it. This case is correctly handled (even without the patch).

2) The exception message is changed to indicate we are referring to ""Derby DataSource"" property:
08001 - Required Derby DataSource property databaseName not set.

3) Adds test to jdbcapi/checkDataSource.java. Adds a new method ""testClientDSConnectionAttributes"" which is run only in client framework. Modifies master files. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438122 13f79535-47bb-0310-9956-ffa450edef68"
c7afe376a6a73f2851a93fb1df902804109cb5ca,"Minor fix to nist scripts basetab, schema1 and schema5 not to call exit at the end as it is not required.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438211 13f79535-47bb-0310-9956-ffa450edef68"
37becec9fd3f672b2dabcd40dfecd2a89664f017,"Add comments to nist/readme to indicate changes to tests as required for revisions 438211 and 365776

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438273 13f79535-47bb-0310-9956-ffa450edef68"
b823c970df334328871088e6d35138b095d15bb8,"Fix location of test directory in the -lib distribution.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438289 13f79535-47bb-0310-9956-ffa450edef68"
d57bbd3f626af447989b528c1e6dbadeeb495e62,"DERBY-1555 Add configuration decorator to change the default user for a configuaration
and use it in the NistScripts JUnit test. NistScripts is an initial pass at the setup of running
nist under JUnit, it fails at the moment in about a third of the test cases probably due to
output that is being sed'ed in the old harness and should not be.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438299 13f79535-47bb-0310-9956-ffa450edef68"
a376274d0ff7cc75649fdc87cc3bb19584140f0f,"DERBY-1559 when receiving a single EXTDTA object representing a BLOB, the server do not need to read it into memory before inserting it into the DB. Patch which reduces memory usage from 350 MB to 40 MB in network server vm when inserting a 64MB BLOB

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438478 13f79535-47bb-0310-9956-ffa450edef68"
7b1f9aa5c7e6e65a8962544eeaf96a055f7ce1a0,"removed duplicated lines in properties file - DERBY-1558 followup

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438489 13f79535-47bb-0310-9956-ffa450edef68"
e47d64319496a638326a43a10c5ceb6ab9b390e6,"a couple of simple javadoc fixes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438578 13f79535-47bb-0310-9956-ffa450edef68"
797228cd3df9b26881425a6efb9f391188bdaf6e,"DERBY-1583
contributed by Bryan Pendleton

If a particular
ColumnDescriptor has no associated TableDescriptor at the
time that CompilerContextImpl.addRequiredColumnPriv is
called, then there is no column privilege that needs to be added. 





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438942 13f79535-47bb-0310-9956-ffa450edef68"
67d115118c09e2ee2c33eb1131bb33dbe2fe5535,"Add some comments to hopefully clarify LangScripts purpose.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438971 13f79535-47bb-0310-9956-ffa450edef68"
aabeeeeb60293a5b10c06303fc7c7e82132d4aec,"Clean up some methods in BaseTestCase that were declared to throw PrivilegedActionException but actually had
no code that would do so.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438972 13f79535-47bb-0310-9956-ffa450edef68"
f7672a4a32f737235f577ff2cdbe43246cb02f7e,"DERBY-1555 Add some code to allow different JUnit TestConfigurations at start up based upon if the TestConfiguration
class determines it is running within the old harness or not. Add a utility method to allow JUnit suites or tests
to determine if they are running in the harness or not, and thus have temporary code to ease transistion from
the old harness. With this commit the code is setup to assume it's always running in the harness, need some
more testing to fully support this flag when running outside the harness.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438975 13f79535-47bb-0310-9956-ffa450edef68"
f39e80ac238586ad50fb872fa709e96a5e404433,"Put toursdb into a subdirectory in toursdb.jar so that it is possible to connect
to it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@438996 13f79535-47bb-0310-9956-ffa450edef68"
197f1c2885ae32aea032ce62ccd710c5194dcec0,"DERBY-1793

Increasing the maximum time to wait for the server to start up from 30 to 60 
seconds.  The test checks in 500ms increments, so this change does not increase
the time for test to run for those who are already successfully running it.
So far this change has made this test pass in my environment, where previously
it failed consistently.  Since this test passes in the nightly full test runs
across a number of environments I assume the network server startup time is
somehow related to my particular machine (processor, memory, disk frag, firewall, vpn, ...)

Others have seen this issue so I am committing to the codeline.  I have filed
a separate issue that work should be done to measure the performance of 
network server startup as a targeted test (DERBY-1794).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439041 13f79535-47bb-0310-9956-ffa450edef68"
80b6a78d975ef290b13dc09d05cd6babfc7f8d1d,"Fix type in javadoc for BaseJDBCTEstCase.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439048 13f79535-47bb-0310-9956-ffa450edef68"
acdff3cdcdc467327a719ced4b91a822741273a1,"DERBY-1315 This patch adds a small amount of logic to remove entries from an Optimizable's ""best plan"" HashMap when they are no longer needed. For more on when this is possible, see the discussion here:
http://article.gmane.org/gmane.comp.apache.db.derby.devel/26051
Patch contributed by ""A B"" qozinx@gmail.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439083 13f79535-47bb-0310-9956-ffa450edef68"
b40898f7d07dcc27738a048ec2777f48320ff6e7,"DERBY-1566: Check in the SQLState generator written by David and debugged by Jean and John.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439093 13f79535-47bb-0310-9956-ffa450edef68"
57abd06732a1a64893dc54f0c6fbb3c8596b487e,"DERBY-1315 Missed UnionNode on last commit.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439098 13f79535-47bb-0310-9956-ffa450edef68"
a608ca9455edb01ea217efc6d63740b568216255,"DERBY-1783 (opening of file even on jvms with support for ""rwd"" mode incorrectly maps to ""rw"" mode). 

Patch that fixes the logical code error by adding parentheses around the OR clause. In addition one minor fix to the javadoc for the method is done.

Patch Contributed by Olav Sandstaa.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439128 13f79535-47bb-0310-9956-ffa450edef68"
6019cdd0bc9c2fbe25049aafbfb0535e78c16879,"Update j9 master due to recent changes for issues DERBY-836, DERBY-1554,
DERBY-1702, and add a comment regarding why floattypes is skipped on 1.3.1-level
VMs including wsdd5.6/wctme5.7.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439209 13f79535-47bb-0310-9956-ffa450edef68"
68c8e7d8ac5ab26cfd76b271205e38faf8f69085,"DERBY-418: outofmemory error when running large query in autocommit=false mode
DERBY-1142: Metadata calls leak memory

Notify GenericLanguageConnectionContext when activations are marked as
unused, and clean up unused activations when a new one is added.

Patch contributed by Mayuresh Nirhali.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439279 13f79535-47bb-0310-9956-ffa450edef68"
59134b7ea69f820d72e9cd93b9f6d2b7822db91a,"DERBY-1566: Commit Jean's diff-4 changes to the message generator.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439315 13f79535-47bb-0310-9956-ffa450edef68"
53d848fb0eab77721ba013bf1a854050a616f28c,"Additional j9 masters for DERBY-1702.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439335 13f79535-47bb-0310-9956-ffa450edef68"
59912979f138d99db3260e0978e3e87df6b86759,"DERBY-1810

Bumping the time to wait for server to start in this test.  In my environment
this test is failing consistently (and bad error handling in the test then 
causes this test to hang forever).  Bumping the timeout so far has made it 
pass (I tried it 10 times), where before it failed 10 times.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439702 13f79535-47bb-0310-9956-ffa450edef68"
6c1fe080b2200e889eeeb3632320572fcef5b619,"DERBY-1756
patch Derby1756.2.diff.txt contributed by Sunitha Kambhampati

with derby-962 changes, if client jvm supports EUSRIDPWD then the client would 
use EUSRIDPWD as the security mechanism. But it is possible that the server jvm
might not support EUSRIDPWD and the connection can fail.
When DERBY-1517, DERBY-1755 is fixed, there might be a way to use EUSRIDPWD 
when both client and server vm's have support for it.

This patch does the following:
o Do not use EUSRIDPWD as the default security mechanism even if the client vm can support it.
o Fix comments in testSecMec.java.
o Existing tests in testSecMec.java cover this codepath and the master file 
output reflects the changes made. Note, only the ibm14 client master file has 
changed since only ibm141 and greater jvms come with jce that can support 
eusridpwd.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439775 13f79535-47bb-0310-9956-ffa450edef68"
4ea76b175b18445330e95a6851f67fb52ff0dffb,"Improve JDBC.dropSchema to include dropping synoyms based upon JDBC metadata. Includes a workaround for DERBY-1790.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439845 13f79535-47bb-0310-9956-ffa450edef68"
a30fb4331a8cec2302d9457b660519ec60f8b04f,"DERBY-1700 (partial) Initial version of a TimeHandlingTest that includes tests for CURRENT TIME.
Will expand to also test CURRENT DATE and CURRENT TIMESTAMP.
Not yet added to the suites.
Improve CleanDatabaseTestSetup to allow it to be the super-class for a decorator that
performs initial schema setup with automatic dropping of everything.
Improved CleanDatabaseTestSetup to drop functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@439861 13f79535-47bb-0310-9956-ffa450edef68"
353e6d46c51065d0f6fb7a05e2510463b9375c48,"DERBY-1800 testSetBinaryStreamLengthLessOnBlobTooLong fails with Unexpected SQL state. Fix is to flush the BLOB data when there is an SQLException

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@440062 13f79535-47bb-0310-9956-ffa450edef68"
a9988eb1c65fc350318e7eb9cda0f0b1d103e728,"DERBY-1768: Removed empty JDBC 4.0 RowId classes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@440321 13f79535-47bb-0310-9956-ffa450edef68"
424cdbd00c5f6c2c7f4703b9caf6c162cffc9ac5,"DERBY-1791 Change the test Security Manager policy files to use a different variable for derbyTesting.jar and derbyclient.jar.
Allows these jars to be in different directories to the other derby jars (e.g. the new distribution layout with
top level test folder). Makes the old harness use the eisting variables set up by the new JUnit related class
SecurityManagerSetup.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@440373 13f79535-47bb-0310-9956-ffa450edef68"
c1ddd1bcc05e13c4631cc876d8e95bf4bd9ac53f,"DERBY-1813: Fix hard-coded JDBC 4.0 type constants

Updated JDBC40Translation with the new values.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@440517 13f79535-47bb-0310-9956-ffa450edef68"
41a176d43a9067842981c7dd4906bfbe0c905f64,"DERBY-1491: Provide ALTER TABLE functionality to change a column's default value

This change contains new test cases in the altertable.sql test which explore
the behavior of the ALTER TABLE ALTER COLUMN statement to alter a column's
defaults. Note that this patch only includes new tests; the current product
already supports the functionality to change a column's default value. The
code to support this was a side effect of the DERBY-119 changes, which wired up
the already-existing parser routines to the new ALTER TABLE t ALTER COLUMN c
statement.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@440550 13f79535-47bb-0310-9956-ffa450edef68"
76997ae2fe785e8d6ab6e67322aa2d17f863aae9,"DERBY-1700 (partial) Add JUnit lang/TimeHandlingTest that perfoms tests on CURRENT TIME and CURRENT TIMESTAMP
and can be exapnded to test CURRENT DATE and other date & time functionality.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@440762 13f79535-47bb-0310-9956-ffa450edef68"
a09a5839c7c6c15c043aa61565deb3a992a30090,"javadoc fixes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@440846 13f79535-47bb-0310-9956-ffa450edef68"
568075cd8cd12072cfd39ed3c386351ab35dc9e6,"Move GroupByExpression test from the derbylang suite to the lang._Suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441088 13f79535-47bb-0310-9956-ffa450edef68"
7a2df4c6fa2ef5c6e60c9b3212a799dcb79be4bc,"DERBY-1802  Patch which contains JUnit tests for DERBY-475 and DERBY-592,
the built-in math functions and JDBC escape functions.
Contributed by Susan Cline home4slc@yahoo.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441097 13f79535-47bb-0310-9956-ffa450edef68"
ce0b604847d0ca2ab7b2103e24e6f278077c97f0,"DERBY-1802 Fix accidental bad change for lang._Suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441098 13f79535-47bb-0310-9956-ffa450edef68"
bb579f8cfb251f6248962f98914732d206d210bc,"DERBY-1700 (partial) Change the compile time code generation to always pass null for the close cleanup method
when generating ResultSets. This is because the close cleanup method adds no value since it is only used
for current time & date resetting, which is also performed at every execute if a statement uses the SQL
current time or date constructs. Incremental development, first just run with no close cleanup method,
future steps will include removal of related code from the implementations of ResultSets, then from
the ResultSetFactory api and its callers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441105 13f79535-47bb-0310-9956-ffa450edef68"
17f762659466f1ea1c97158db6d330cd024cc85b,"DERBY-1686 The original fix retrieves all the relevent providers such as table, view, and routine descriptor(s)
of the given view at bind time and pass this information to runtime later
for it to determine if the privilege is grantable or not by the grantor.
Patch contributed by Yip Ng - yipng168@gmail.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441131 13f79535-47bb-0310-9956-ffa450edef68"
fec62a7b663577d82cd244b14b0173703a42f289,"DERBY-1729, contributed by Yip Ng
committing derby1729-trunk-diff03.txt patch.

The GrantNode and RevokeNode should have derived from DDLStatementNode instead
of MiscellaneousStatementNode. Subclassing DDLStatementNode will generate a
call to GenericResultSetFactory's getDDLResultSet() in the activation class
and invokes the GenericAuthorizer's authorize() method with the proper
parameters to enforce the correct semantics.

public ResultSet getDDLResultSet (Activation activation) throws StandardExceptio
n
{
        getAuthorizer(activation).authorize(activation, Authorizer.SQL_DDL_OP);
            return getMiscResultSet( activation);
}

Also adding an additional sql file for derbylang. The reason I didn't include
this in grantRevokeDDL.sql is because of name collision and this testcase is
one of the many additonal grant/revoke tests that I wrote and I'll like to
append the rest of those testcases to this file(grantRevokeDDL2.sql) when I
submit my patch for DERBY-1736.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441140 13f79535-47bb-0310-9956-ffa450edef68"
69d1cb892d0e91cefd12d0763259b4b13383fa8a,"DERBY-1767: insertRow(), updateRow() and deleteRow() cannot handle
table names and column names containing double quotes

Patch contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441185 13f79535-47bb-0310-9956-ffa450edef68"
f77f36d19f4b950fcf1f46c08f767787b02b135f,"DERBY-1700  Patch the removes closeCleanup from ResultSet implementations:

- remove any field storing the reference to a close cleanup method
- remove any calling of the method
- remove passing the reference to the method in the constructor. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441232 13f79535-47bb-0310-9956-ffa450edef68"
87cb6514749742e9de7e6ab2ff52671321d99bc6,"DERBY-706: Fix multiple declarations of properties in 
testProperties_derby.properties reported by John Embretsen


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441426 13f79535-47bb-0310-9956-ffa450edef68"
f05a2f83b228554235db167fd9d7dd065cfcbe90,"DERBY-1522
contributed by Deepa Remesh, dremesh@gmail.com

Attaching a patch 'derby1522_v2.diff. It includes a JUnit test for testing the 
switch to SQL standard authorization. It tests following:

1. grant/revoke is not available if derby.database.sqlAuthorization property 
is not set.
2. grant/revoke is available when derby.database.sqlAuthorization is set to true.
3. Once derby.database.sqlAuthorization is set to true, it cannot be set to any other value.

This patch also modifies DatabasePropertyTestSetup.tearDown method. The tearDown method resets the property values to old values. It will now ignore exceptions when property reset is not supported. I am including this small change in the above patch. (I had opened DERBY-1827 for the issue with tearDown method. ). I am using TestUtil.getConnection method to shutdown the database. I have opened DERBY-1826 to add methods to Derby's JUnit classes for shutdown.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441584 13f79535-47bb-0310-9956-ffa450edef68"
13d445674572196a1f37267af6390e7629be5315,"DERBY-1809 Fix bug where use of builtin functions in the SYSFUN schema within VIEWs would throw an exeception
at CREATE VIEW time. Caused by the AliasDescriptor for such functions reporting they were persistent (had rows
in SYSALIASES) when they are not persistent.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441601 13f79535-47bb-0310-9956-ffa450edef68"
b4e48e9cd321778516d08d67d74d10bc643d8089,"DERBY-1675
contributed by Sunitha Kambhampati

USRIDPWD support depends on the JCE available in the classpath of the server

This patch(derby1675.diff.txt) does the following
1. Add code to check if server jvm can support EUSRIDPWD.
2. Throw an error if the derby.drda.securityMechanism is set to ENCRYPTED_USER_AND_PASSWORD_SECURITY
and if the server jvm cannot support EUSRIDPWD.
3. Server sends the client the list of supported security mechanisms as part of ACCSECRD. Now, the server will correctly only send EUSRIDPWD as an option if the running server can support this security mechanism.

Test related changes:
Changes were made to testProtocol.java and a new method readSecMecAndSECCHKCD is added to TestProto to read the SECMEC and SECCHKCD values. Note, that with ibm142 and ibm15 jvms that support eusridpwd, the SECMEC value 9 (eusridpwd) will be sent as part of the ACCSECRD response. But for the jvms that dont support the eusridpwd, the SECMEC value of 9 wont be sent. The new method readSecMecAndSECCHKCD takes
care of printing out the SECMEC values that are sent by the server - this results in the need for a new master file for the jvm that support eusridpwd and the jvm that cannot support it. A new master file has been added for ibm14.

Tests for codepath that covers #2 is already present in testSecMec.java. This results in themaster updates for the jvms that do not support eusridpwd for the case where server is started with
derby..drda.securityMechanism=ENCRYPTED_USER_AND_PASSWORD_SECURITY.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441722 13f79535-47bb-0310-9956-ffa450edef68"
0c5a8eb5f35ff7bf807ccb6d5bd2bb15b35d703d,"DERBY-1759: XMLSERIALIZE doesn't follow spec when serializing sequence

This patch was contributed by Army Brown (qozinx@gmail.com)

The patch does the following:

  1. Adds logic to SqlXmlUtil.serializeToString() to perform the
     steps of ""sequence normalization"" as required by XML serialization
     rules. This includes throwing an error if the user attempts to
     explicitly serialize a sequence that contains one or more top-level
     attribute nodes.

  2. In order to ensure that the serialization error is only thrown
     when the user performs an explicit XMLSERIALIZE, I added a
     new field, ""containsTopLevelAttr"", to the XML class. This field
     indicates whether or not the XML value corresponds to a sequence
     with a top-level attribute node. If the user calls XMLSERIALIZE
     on an XMLDataValue for which containsTopLevelAttr is true,
     then we'll throw the serialization error 2200W as dictated by
     SQL/XML.

  3. Adds appropriate test cases to lang/xml_general.sql to verify
     the fix.

  4. Since Xalan doesn't provide a built-in way to retrieve a sequence
     of attribue values (as opposed to attribute nodes), I also included
     in lang/xml_general.sql a (rather ugly) way to accomplish that
     task within the serialization restrictions of SQL/XML. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441740 13f79535-47bb-0310-9956-ffa450edef68"
3c53f6c28934b6e60e17987be4c4660c52c67da8,"DERBY-1675: Network Server should not send to client that it supports
EUSRIDPWD when running against Sun JVM

Updating comments. Patch contributed by Sunitha Kambhampati.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441779 13f79535-47bb-0310-9956-ffa450edef68"
39f0f384dd35608978001bd949ba0ac84d1738a0,"DERBY-1767: Made UpdatableResultSetTest run as part of _Suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441789 13f79535-47bb-0310-9956-ffa450edef68"
86cae7bf39a0e1e57b13d9b61801d781c75d091d,"DERBY-1817: Race condition in network server's thread pool

Instead of always putting new sessions in the run queue when there are
free threads, the network server now compares the number of free
threads and the size of the run queue. This is done to prevent the run
queue from growing to a size greater than the number of free
threads. Also, the server now synchronizes on runQueue until the
session has been added to the queue. This is to prevent two threads
from deciding that there are enough free threads and adding the
session to the run queue, when there in fact only were enough free
threads for one of them. With this patch, I am not able to reproduce
DERBY-1757 on platforms where the failure was easily reproduced
before.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@441802 13f79535-47bb-0310-9956-ffa450edef68"
c4ce097d51f16e98fb4a13bd026311406c724401,"DERBY-1691 blobclob4BLOB.java fails under DerbyNet framework. Fixed by printing stack traces to stdout. Contributed by Oystein.Grovlen@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442199 13f79535-47bb-0310-9956-ffa450edef68"
cea6c946f3a63e55e40ca847525a683738492860,"DERBY-1817: Race condition in network server's thread pool

Reduce the amount of code synchronized on runQueue in
NetworkServerControlImpl.addSession().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442462 13f79535-47bb-0310-9956-ffa450edef68"
aeb14c3879140eb4ad5ceab2f7eebb80ada4d93d,"DERBY-1817: Race condition in network server's thread pool

Clean-up of NetworkServerControlImpl:
  - moves generation of connection number into addSession()
  - adds new method removeThread() which can be used instead of
    getThreadList().remove()
  - removes methods that are no longer used
  - makes methods that are only used by NetworkServerControlImpl private


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442463 13f79535-47bb-0310-9956-ffa450edef68"
7500ddb6f3e2d8f196f1f2f8aa4e763967a80630,"DERBY-1832: sysinfo test fails with ""access denied
(java.util.PropertyPermission java.class.path read)"" when
derbyclient.jar is first in classpath

Grant derbyclient.jar privileges needed for sysinfo and
sysinfo_withproperties.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442464 13f79535-47bb-0310-9956-ffa450edef68"
996db91e16888faca365a4dcbcf65d8606adf833,"DERBY-803: derbynet/DerbyNetAutoStart.java test fails intermittently
with org.apache.derby.iapi.services.context.ShutdownException

Let the test wait between closing client connections and shutting down
the engine. This way, the server threads get time to close the
connections cleanly before the engine is taken down.

Patch contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442490 13f79535-47bb-0310-9956-ffa450edef68"
7d06fde60ce39e4a31823381c5880ff1e55b8814,"DERBY-1843: Pass arguments to derby_common.bat for processing.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442646 13f79535-47bb-0310-9956-ffa450edef68"
9e2a7491e55ec61728ff8e2bf6514d30d66e0aa0,"DERBY-1786 (a crash during re-encryption may cause an unrecoverable db)

The problem was when transaction log spans more than one log file during (re)
encryption of the database and if there is a crash just before switching the
database to use the new encryption properties; On recovery checkpoint in the
first log file is used as reference and the next log file is assumed to have
the commit log record for (re) encryption and deleted incorrectly to force the
roll-back , which lead to the incomplete rollback of re-encryption. And that
caused recovery failures on next (re) encryption crashed. 

This patch fixes the problem by ensuring there a checkpoint record in the
last log file before creating a new log file with new encryption properties
and writing the commit log record. Log is also flushed before making the
transaction log use the new encryption key to avoid any part of old log 
records in the buffers getting encrypted with the new encryption key. 
While working on this problem , I noticed error message thrown incase of 
re-encryption failures are confusing, added a new error message to indicate 
failures specific to (re) encryption. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442647 13f79535-47bb-0310-9956-ffa450edef68"
06573c52ae3f6c8a1776681bb413aed5767bcd63,"DERBY-1032: Allow new scripts to run on MKS.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442674 13f79535-47bb-0310-9956-ffa450edef68"
0476d53708ee6dfa3c11761813faf45e1bea96dc,"Unset svn:eol-style on batch files so that they have the correct line endings
if the distributions are built on Linux.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442677 13f79535-47bb-0310-9956-ffa450edef68"
159625765c976d618f023fdf740811c05bb027ee,"Set svn:eol-style on shell scripts to LF and batch files to CRLF to prevent
accidental switch of the line endings. Fix command in stopNetworkServer


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442737 13f79535-47bb-0310-9956-ffa450edef68"
cfda29887a4c0a9ab5338ad3a2440beb9055dae9,"Minor javadoc fix for iapi/types/XML.java

Committed for Army Brown <qozinx@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442761 13f79535-47bb-0310-9956-ffa450edef68"
dcfa036eec570e7c5d9d99d296cfd918d31791d5,"DERBY-1833: Remove messages made unused by implementation of DERBY-690
and DERBY-775

Patch contributed by Dag H. Wanvik.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@442958 13f79535-47bb-0310-9956-ffa450edef68"
479e2bca67606af88d97d56b43f886553c9e6bb2,"DERBY-1618: (store/BootAllTest.junit fails on with jdk13 based jvms)

Patch Contributed by Myrna van Lunteren.

On jdk131, in the situation invoked by the testSettingBootAllPropertyWithHomePropertySet() 
test in BootAllTest.java, when the DriverPropertyInfo.choices were accessed.
the problem was because in BaseMonitor.java there were no elements found resulting from
provider.getBootTimeServices(). 

underlying real issue was  database directory was not getting set to the
correct path in the storage factory (DirStorageFactory.java), when all the 
database are loaded (derby.system.bootAll=true) and system home is set. 

This patch correctly sets the database directory in the storage factory, in the
above mentioed scenario.  

Modified the test lang/GetPropertyInfoTest.java to access the choices,
description, and required fields, but it didn't actually duplicate the problem
in BootAllTest.java. But as that's in that test I thought it was unnecessary to
add more.





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@443038 13f79535-47bb-0310-9956-ffa450edef68"
37c967eaf543ee16d14395eed031d0e4e0675e2b,"Minor fix to detect MKS before running `expr index` which can output error text.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@443076 13f79535-47bb-0310-9956-ffa450edef68"
c51bf84ca7a09b1778b92a347d00e6e5af6d921e,"DERBY-1846: Add a script that allows users to easily update their Derby jars
with the JDBC4 classes. Also a minor edit to derby_common.sh which prevents
a warning on Linux.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@443167 13f79535-47bb-0310-9956-ffa450edef68"
f890fbe419b7bb5d2211d0c7260eab4056052c59,"DERBY-1846: Trim off the carriage return of each line of the list files.
The files need to be CRLF to be read properly on Windows.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@443169 13f79535-47bb-0310-9956-ffa450edef68"
59cee9c75e801ef2ae8ebfb478fa113f56d1e4b3,"DERBY-1741: Remove cloudscape references from toolsmessages files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@446527 13f79535-47bb-0310-9956-ffa450edef68"
e38e660c5e0efe6a15f229a5806924ecca29a7be,"DERBY-1665 (partial): fix formatting of javadoc for iapi.store.access.Qualifier.
The content of the javadoc for this class needs a review to address the other
comments in this JIRA issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@446536 13f79535-47bb-0310-9956-ffa450edef68"
37c3287be6175f5e9a625cee7fb5adc2e9e8620b,"DERBY-1326 (partial) Network server may abandon sessions when Derby
system is shutdown and this causes intermittent hangs in the client

Two small cleanups:

  Make NetworkServerControlImpl.startNetworkServer() remove the
  sessions it closes from sessionTable. Also, synchronize on runQueue
  to prevent modifications while the queue is traversed.

  Invoke closeSession() and close() in a finally clause in
  DRDAConnThread.handleException() to ensure proper closing of the
  session when an unexpected error happens.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@446538 13f79535-47bb-0310-9956-ffa450edef68"
3d15670296d11ebdd0411da0c9ef6cd4bbdb76b7,"DERBY-1729
contributed by Yip Ng, yipng168@gmail.com

Adding a jdk16 specific master.  This is an issue with exception handling in 
jdk16. Reported as DERBY-1629. To temporarily resolve the regression test 
failure a jdk, a jdk16 specific master is being added.  This was what was done 
for procedureInTrigger test.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@446652 13f79535-47bb-0310-9956-ffa450edef68"
1b267ac5b6b2ba0360c6ad1bfbcceb64d5684326,"DERBY-1853: Template for bundled release notes, plus release machinery for bundling.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@446672 13f79535-47bb-0310-9956-ffa450edef68"
4e98d37f45e9911da6e5d18f309d57f281697f49,"DERBY-1736
contributed by Yip Ng, yipng168@gmail.com

Addtional grant and revoke tests developed during the 10.2 buddy testing.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@446789 13f79535-47bb-0310-9956-ffa450edef68"
7e5c66994b4456fe2d5a76854f01a722a8bae53e,"DERBY-1777: Commit Army's d1777_v2.patch, cleaning up an NPE in the optimizer.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@446924 13f79535-47bb-0310-9956-ffa450edef68"
bcceef4bfa8d0f76100296985dffb3848e67de2e,"DERBY-1707
contributed by       Mamta A. Satoor

Basically, FromBaseTable.verifyProperties method had following if condition

if (constraintSpecified)
{
    ConglomerateDescriptor cd =
    dDictionary.getConglomerateDescriptor(
    consDesc.getConglomerateId());
    String indexName = cd.getConglomerateName();
    tableProperties.remove(""constraint"");
    tableProperties.put(""index"", indexName);
}


The if condition above did not do null check for consDesc. In Sunitha's case, 
her sql statement looked as follows 
SELECT * FROM t1 --DERBY-PROPERTIES constraint=null;
When null value is supplied for constraint property, consDesc will be null and the code inside the if condition above should not be executed. I changed the if condition above as follows
if (constraintSpecified && consDesc != null)
and now constraint=nulll does not result in null pointer exception. I added a 
test case for this in lang/optimizerOverrides.sql and noticed that 
constraint=null resulted in an index scan. There is already a test which 
checks for index=null and that property results in a table scan. This behavior 
seems to be in line with the documentation in Tuning Derby Guide for 10.2 
(section name Overriding the default optimizer behavior) which says that if 
null is specified for property index, a table scan will be performed on the 
table. It does not say anything about a table scan for constraint=null
                                      



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447011 13f79535-47bb-0310-9956-ffa450edef68"
4d04c7bf7abe9dd93e202be57d78059aa5bd3ea1,"DERBY-1706
contributed by Mamta Satoor

This fix addresses the null pointer reported in DERBY-1706.

SESSION schema is a special schema which is used for global temporary tables. 
In order to handle global temporary table, Derby creates a in-memory SESSION 
schema descriptor which does not have any uuid associated with it. A physical 
SESSION schema(with it's uuid set properly) will be created *only* if there is
a persistent object created in it by a user. Global temporary tables can only 
reside in SESSION schema and Derby documentation recommends that SESSION schema
should not be used for other persistent objects. This is because the same 
object name could be referencing different objects within SESSION schema 
depending on in what order they got created.

For instance
create table session.t1(c11 int);
-- the following select will get data from the persistent table t1 in SESSION schema
select * from session.t1;
declare global temporary table session.t1(c11 int, c12 int) on commit delete rows not logged;
-- the following select this time will return data from the temporary table t1 rather than persistent table t1
-- This is because, at any time, if there is a global temporary table by the table referenced by a statement,
-- then Derby will always pick up the global temporary table. If no global temporary table by that name is
-- found, then Derby will look for persistent table in SESSION schema. If none found, then error will be thrown
select * from session.t1;
-- following will drop the temporary table t1 and not the persistent table t1
drop table session.t1;
-- the following select will get data from the persistent table t1 in SESSION schema because temporary table
-- doesn't exist anymore
select * from session.t1;

So, as can be seen from the example above, the statements referencing SESSION schema objects could have different meanings depending on what kind of objects exist in SESSION schema. Because of this, the compiled plans of statements referencing SESSION schema are not saved in the statement cache, rather they get compiled everytime they are executed. In order to enforce this, in the compilation phase, Derby checks if the statement at hand is referencing a SESSION schema object by calling referencesSessionSchema method. If this method returns true, the statement's compiled plan will not be saved in the statement cache.

Now, taking the script provided by Yip which results in NPE
set schema session;
create table t1 (i int);

Derby calls referencesSessionSchema while compiling ""create table t1 (i int); "" to see if it references SESSION schema object. Since, there is no schema associated with the table t1, Derby will check for the compilation schema which in this case is SESSION schema because we used ""set schema session; "". (This happens in QueryTreeNode.getSchemaDescriptor(String schemaName, boolean raiseError) line 1486). The method
then tries to call an equal method on the UUID associated with the SESSION schema descriptor but since it is null(because no physical SESSION schema has been created yet), we end up with a null pointer exception. This will happen only if no physical SESSION schema has been created yet and user tries to create a first persistent object inside SESSION schema after doing a set schema session.

Following will not give a NPE because user hand created SESSION schema before doing set schema SESSION and creating an object inside it.
create schema session;
set schema session;
create table t1 (i int);
The hand creation of SESSION schema causes Derby to have a schema descriptor for SESSION schema with it's uuid set correctly.

The fix for the NPE is simple and that is to check if the UUID is null.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447212 13f79535-47bb-0310-9956-ffa450edef68"
d702ebab0d9363a4e9755a227922bca4671e2b11,"DERBY-1326 (partial) Network server may abandon sessions when Derby
system is shutdown and this causes intermittent hangs in the client

Don't poison the network server's worker threads when an engine
shutdown is detected. Poisoning the threads could lead to abandoning
of sessions and hangs in the client.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447375 13f79535-47bb-0310-9956-ffa450edef68"
4b086587d6a7f61889cac345f57b9277d65faaae,"DERBY-1326: Network server may abandon sessions when Derby system is
shutdown and this causes intermittent hangs in the client

Re-enable shutdown in checkDataSource test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447462 13f79535-47bb-0310-9956-ffa450edef68"
b6c6e95ca74a9c075c577fd26a982134b35eb6f0,"DERBY-1784
contributed by Yip Ng

 
After studying the
compiler code abit more, I found that DML statements such as INSERT, UPDATE and DELETE also suffer from the same problem (they use different bind logic)

With that said, this patch attempts to address all the stated problems above
when column reference is qualified with a synonym table name.

The fundamental problem is that Derby does not keep the original unbound table 
name around once the synonym is resolved. So the fix is to address this case 
and apply the qualification properly.

In the VIEW resolution case, the system needs to preserve the synonym name as 
VIEW gets expanded to a subquery, the name to be set should be the exposed 
name of the table and not the resolved table name.

For * expansion in the SELECT list, if the FROM clause happens to be a synonym, 
the system should prepend it with the unbound name and not the resolved table 
name. This way the binding logic is normalized.

For DML cases, the synonym name needs to be normalized to its base table so that
setColumnDescriptor can apply correctly. When the system binds the expression 
for this result column, it will resolve this properly since the column binding 
logic are in the respective FromTable subclasses implementation where they 
will use the exposed name this time to check for qualification.

I wrote more testcases for synonym.sql but I found out that this SQL file is 
actually not part of derbylang suite, so the patch added this back to the test 
bucket. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447469 13f79535-47bb-0310-9956-ffa450edef68"
da5e29674dccd113130ac922ad45ae348aa8ecef,"DERBY-1588: Fix links in demo.html to point to the local copy of the 
documentation instead of the Derby website.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447502 13f79535-47bb-0310-9956-ffa450edef68"
3038d98980493ada1e76f5e5d81c0b27a0c73ab1,"DERBY-1589: CREATE TABLE throws NPE after DROPs and REVOKEs

FKConstraintDefinitionNode, which is the compiler implementation code
for the ""foreign key ... references ... "" constraint in the compiler,
is not properly registering that the statement containing the
foreign key constraint has a dependency on the table being referenced. Due
to the lack of the dependency, when the referenced table (t11ConstraintTest)
is dropped, the statement is not invalidated. 

This patch changes the compiler so that it creates a dependency from
a statement with a FOREIGN KEY clause in it to the table which is
referenced by that clause. The patch also contains a simple regression
test, based on the original bug.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447644 13f79535-47bb-0310-9956-ffa450edef68"
02a8e2e39fd854b1864734c54899d7c3ed4336b0,"DERBY-1694
contributed by Sunitha Kambhampati

I was looking at the testProperties issue that caused problems because of test hang. The test doesnt hang in my environment but I thought I would look to see why the test didnt timeout.

I found couple of issues here:
0. The testProperties.java and several networkserver tests exec new processes to start server, test properties,shutdown server etc. In some cases, we wait to capture the output from the subprocess that is started. ProcessStreamResult is used for this purpose. ProcessStreamResult is part of the harness (see org.apache.derbyTesting.functionTests.harness.ProcessStreamResult) and it starts a thread to read data from the process's stream and writes it out. Once EOS (-1) is reached, the thread exits after doing a notifyAll.

1. ProcessStreamResult.Wait() does not work with the timeout case. I think the original intention of the method that takes the timeout was to force the thread to stop, once the timeout period has elapsed. The method Wait() does not handle this case.
2. On timeout, the myThread needs to stop its work. The run() method does not handle this case.
3. testProperties test does not make use of the ProcessStreamResult timeout mechanism.
4. Process's are exec'd in the tests and they are not destroyed within a timeout period. The network server tests start server using Process, and then cleanup by shutting them down. It will all work ok, if no deadlock or blocking of process's occur. It seems to me though, that we should have a way to destroy the processes that are
started as part of each test given a timeout period. Each test must learn to do the cleanup when it leaves and the test has knowledge of all the sub-processes that it has exec'd. The current test harness has a class TimedProcess which could work.

In the spirit of incremental development, I am attaching a patch(derby1694.p2.diff.txt and corresponding stat file - derby1694.p2.stat.txt) that fixes problems 1,2 and 3. I think #4 can be handled as a separate issue/patch.

This patch
-- fixes the timeout handling in ProcessStreamResult. Instance variable 'interrupted' is a flag to indicate if a timeout has occurred or if the thread's work has been interrupted in between. The flag 'finished' indicates whether the work has been finished by the thread. Changes are in Wait() method to make use of wait(timeoutms) if a timeout is specified in ProcessStreamResult. If timeout time has elapsed, then the interrupted flag is set to true.
-- Adds condition in the run() method to check if interrupted is true. If so, the thread will stop its work and leave.
-- correctly return if the thread's work was interrupted either because of a timeout or if it was interrupted.
-- Make use of the ProcessStreamResult with a timeout setting of 2 minutes in testProperties test. Note, the timeout handling only comes into effect when ProcessStreamResult.Wait() method is called.

other notes:
-- when you run a test, the suite property for timeout does not get picked up. I think this is intentional behavior.
-- Issues mentioned above are not specific to just testProperties but exist for other networkserver tests. There are a total of 7 files in derbynet that make use of this.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447736 13f79535-47bb-0310-9956-ffa450edef68"
55a6cdc3cd63083421a329ecb0cd0bb45dd732d9,"DERBY-801 (partial) Allow parallel access to data files

Adding RAFContainer4 which is used instead of RAFContainer on jdk1.4
and higher. RAFContainer4 uses FileChannels to access the data files,
and therefore multiple threads may access them in parallel.

Patch contributed by Anders Morken.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447815 13f79535-47bb-0310-9956-ffa450edef68"
f0cd4bf3d362ab1e868da2a32afae15808ebc23b,"DERBY-801 (partial) Allow parallel access to data files

Backing out the patch for DERBY-733 as it is not needed anymore and
the code is cleaner without it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447856 13f79535-47bb-0310-9956-ffa450edef68"
be7f461b2538ad8762437937f0521ec3b5af7cb6,"DERBY-147: ERROR 42x79 if specify same column twice and use ORDER BY

This patch contributed by Bernd Ruehlicke (apache@priwall.org)

This patch changes the getOrderByColumn method in ResultColumnList so that
it uses ResultColumn.isEquivalent to determine whether the column specified
in the ORDER BY clause is ambiguous or not. It is ok to select the ORDER BY
column multiple times, so long as all the occurrences are equivalent. If there
is an ambiguity, the statement is rejected and the user must reword it to
clarify which column is to be used for ordering the results.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447877 13f79535-47bb-0310-9956-ffa450edef68"
218884d37f5c326c96bd39c6f4474608fdab102a,"DERBY-1547: Include build number in DatabaseMetaData getDatabaseProductVersion
and getDriverVersion calls.

Committed for V. Narayanan <V.Narayanan@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447922 13f79535-47bb-0310-9956-ffa450edef68"
e9f3b31e0ee3f1cfbf1b99bbeaa8fd3f790af437,"DERBY-1846: update-with-jdbc4 scripts need to patch up modules.properties
Many other minor fixes and tweaks to the scripts to get them working in
different environments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@447970 13f79535-47bb-0310-9956-ffa450edef68"
ade77c35f67ac28c40eedd424a35110b999bc038,"Add missed files from DERBY-1547 checkin


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448003 13f79535-47bb-0310-9956-ffa450edef68"
79b13ee3b6fb5894194d450a297c763b7bda9da0,"DERBY-1304: DROP VIEW does not always completely remove view

This patch was contributed by Yip Ng (yipng168@gmail.com)

The problem is that DROP VIEW's binding logic is using its superclass
QueryTreeNode's bind() method which just simply returns the object itself.
So there is no actual binding done in DROP VIEW at all! It should have
created a dependency on the statement, so when its associated descriptor
gets dropped, the statement can be invalidated accordingly. This explains
why the second DROP VIEW fails since it is not invalidated by the system.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448026 13f79535-47bb-0310-9956-ffa450edef68"
a2d29ca3f241820d9f8a67c75b420bd6df723950,"DERBY-1766
contributed by Army Brown

Well, after that paragraph of justification, it turns out that there are only three places where we use the 42Z79 SQLSTATE. But still, I think it's a useful error message and should be kept around; it could come in handy further down the road if SQL/XML functionality is expanded.

As for line/column numbers, it turns out that those values are readily available from within sqlgrammar.jj and thus can easily be passed as part of the error message. The only potential downside that I can see is that we have to create an Integer object out of the line/col numbers in order to pass them to the StandardException constructor...but maybe that's not a big deal...? The fact that no one has done this earlier makes me wonder if there's some ""gotcha"" here that I'm missing, but I haven't seen any problems with it just yet...

Attaching a patch d1776_v1.patch that changes the error message for 42Z79 as mentioned in my previous comment and also does the following:

1. Adds line and column numbers to the error message to indicate where
the missing keyword is expected.

2. Removes one ""lookahead"" call that was causing 42Z79 to be raised
for a missing ""AS"" keyword when in fact the keyword was present
(what was missing was the datatype). To avoid confusion, I
removed the lookahead and now the user will see a more generic
42X01 error in that particular case.

3. Updated xml_general master files accordingly.

So with this patch applied, instead of:

select xmlserialize(x) from t;
ERROR 42Z72: XML syntax error; missing keyword(s): 'AS'.

we'll now see:

create table t (i int, x xml);
ERROR 42Z72: Missing SQL/XML keyword(s) 'AS' at line 1, column 22. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448034 13f79535-47bb-0310-9956-ffa450edef68"
f78ff52c37d96fde015de7432bdea47ec1f0ccd0,"DERBY-1772
contributed by Army Brown

Attaching the simplest patch possible for this issue--just changes SQLSTATE '42Z78' to a Derby-specific SQLSTATE, 'XML00'. I also moved SQLSTATE '42Z7Z' to 'XML01' since I believe it falls into the same category of ""Derby-specific errors that are not covered by the SQLStandard.""

I read through the SQL standard definitions for SQLSTATES and none of them jumped out at me as being more appropriate than '42', so I just created a new set of SQLSTATEs, ""XMLxx"", for this particular issue. As I said, this was just the easiest way to go; if anyone can suggest a better SQLSTATE to fit the errors, please let me know. Otherwise, the d1772_v1.patch should be all it takes to resolve this issue.

Note: Since we don't currently have any tests for cases where the classpath is missing the required Xalan/JAXP classes, there were no test/master files to update. The need to add tests for such scenarios is filed as part of DERBY-1758. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448048 13f79535-47bb-0310-9956-ffa450edef68"
a46562832ec3f5bff7d08d59dfc3d85dab7921d9,"DERBY-1718 ( creating an after insert trigger with trigger action involving 
xml datatype throws java.io.NottSerializableException)

Patch contributed by Yip Ng.

The fix basically implements the Formatable interface for SqlXmlUtil class. 
Currently, it writes out the query expression string instead of the XPath 
object(its serializable I think), and then later recompiles the query once 
at evaluation time. The reason behind this is that I don't want the stored 
form to be tied to a particular XML implementation.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448085 13f79535-47bb-0310-9956-ffa450edef68"
898ef1a6126d0abcf4f01a359d82e784e2ca24a5,"DERBY-1834

master updates for previous error message change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448101 13f79535-47bb-0310-9956-ffa450edef68"
bb2d6a6865a2cebe217fbcdbcf571cdbfc5343a1,"DERBY-1869: lang/timestampArith.java fails if it starts right before midnight

If it is less than two minutes until midnight, wait until after
midnight before running the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448133 13f79535-47bb-0310-9956-ffa450edef68"
8cefbbc93b3380b70da0f9996e7d00a9417750a3,"DERBY-1775
contributed by Army Brown
committing  d1775_v2.patch

Attaching a patch that does the following:

1. Updates the 2200M message text to be more generic,
as suggested in the description of this issue.

2. Replaces ""see next exception"" with the in-lined
error message while continuing to do exception
chaining as usual.

3. Also replaces ""see next exception"" with in-line
error messages for a couple of other SQL/XML
errors--namely UNEXPECTED_XML_ERROR and
XML_QUERY_ERROR. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448258 13f79535-47bb-0310-9956-ffa450edef68"
9e6e461e8a18e9d7ada381c5ec3e7568559831b5,"DERBY-1700 Next step that changes the methods in ResultSetFactory not to have a closeCleanup method parameter
which due to the previous patches was always being passed in as null. Changed all callers to not pass the null
and thus remove the closeMethodArgument in ResultSetNode.
Since most of the calls are to ResultSetFactory methods are by generated code cannot rely on compile time checks
to ensure all callers are correct. Needed to reduced the argument count by one for the generated method call for
any getXXXResultSet that no longer passes the closeCleanup (null) argument. Have confidence in the change as derbyall
passes and the code coverage numbers at http://wiki.apache.org/db-derby/CodeCoverage show complete coverage of these
factory methods except for ones related to VTIs.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448286 13f79535-47bb-0310-9956-ffa450edef68"
3dd03e5ca45e59d58cc17dd2ae94226e26b31a9b,"DERBY-1700 Cleanup some remaining comments that referred to closeCleanup parameters and
a parameter reference in the unused class MergeJoinResultSet.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448338 13f79535-47bb-0310-9956-ffa450edef68"
439d1e864f5b1cc5f9f28d3a68a0b30047bf7f30,"DERBY-1787
contributed by Mamta Satoor
patch: DERBY1787_UseCorrectTerminologyV1diff.txt

Grant revoke functionality was added in Derby 10.2 The comments that went into the grant revoke code, in some places refer to database owner as ""dba"". They are not the same thing. In the grant revoke world, dba is a role. We haven't added roles into Derby yet but current use of dba in comments might make it confusing when we do start working on roles including dba.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448424 13f79535-47bb-0310-9956-ffa450edef68"
0c7cafc6f268a690bfa3c1a69b04cc4d034f4717,"DERBY-1811 Ensure embedded ResultSet.getTimestamp on a TIME column returns a java.sql.Timestamp with a date portion
equal to the current date at the time the getTimestamp method is called.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448456 13f79535-47bb-0310-9956-ffa450edef68"
f8e33ff01f21ff18ae46d97f7705b6cdf7640a87,"Fix javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448465 13f79535-47bb-0310-9956-ffa450edef68"
187cc537692136b32b65e626fcbc95ea1e30886a,"Fix javadoc warnings caused by non-ascii characters.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448472 13f79535-47bb-0310-9956-ffa450edef68"
a309fc73d93a9fff6dc8fcc263dfb0e6053289cf,"DERBY-1846: Double up the backslashes for tr. Tested on bash and
tcsh on both Mac OS X and Linux, as well as Cygwin and MKS on Windows.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448617 13f79535-47bb-0310-9956-ffa450edef68"
da0a644bbc9ea1a98c8d48fd8f317bab0ca53607,"DERBY-1776
contributed by Army Brown
patch:  d1776_reuseInt.patch

In a review comment for a different issue someone mentioned that instead of creating new Integer() objects it'd be better to use the Derby ReuseFactory where possible to avoid excessive object creation. I get the feeling that's not a big deal with the _v1 patch for this issue, but I nonetheless thought it'd be a good idea to follow that advice with the changes.

So I'm attaching a tiny patch, d1776_reuseInt.patch, that replaces the calls to ""new Integer()"" in the _v1 patch (which has already been committed) with calls to ReuseFactory.getInteger(). Functionally, the patch doesn't change anything. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448691 13f79535-47bb-0310-9956-ffa450edef68"
8c56ebf6935d15de2a5a03ec5a5a94158235ef32,"DERBY-1854 (SYSCS_COMPRESS_TABLE corrupts table with a single column which is both a primary key and a foreign key)

Problem was all the conglomerate descriptor entries in sys.sysconglomerates
were not getting updated with new conglomerate number generated for an index 
during compress/bulk-insert, when an index is shared. Update code was assuming 
conglomerate id is common when an index is shared, but that is not correct. 
ConglomerateID's in sys.sysconglomerates are unique. 

This patch modifies the update conglomerate descriptor code to update each
conglomerate descriptor separately using conglomerateID as the key, when
there are more than one conglomerate descriptor referring to the same 
conglomerate(conglomerate number). 

This patch also adds a test-case to test import into a table that has the same column as a primary key and foreign key,  import was also causing corruption because of the same problem.  See DERBY-1641 , for details. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448758 13f79535-47bb-0310-9956-ffa450edef68"
1d2be59db73386fd797ffb7261d704820ea808bd,"DERBY-1834: Updated master file for jdk16.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448833 13f79535-47bb-0310-9956-ffa450edef68"
a997e8f1580a11436a39fa43d6f7d85abd7d64a6,"DERBY-1826: Add JUnit utility methods for database/server shutdown

Patch contributed by Deepa Remesh.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448900 13f79535-47bb-0310-9956-ffa450edef68"
926e1c6f97778e8d14553db246f962fa65a772eb,"Minor cleanup in EmbedResultSet.java, code to set warning in constructor can use the addWarning() method
rather than repeating code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448948 13f79535-47bb-0310-9956-ffa450edef68"
d52f87850ee1d446f9dc9cc99b3dd4ebbcd9ebed,"DERBY-1862 Patch makes a map of column names to column number. The map is populated when the first call to findColumn is made.
Patch contributed by Andreas Korneliussen andreas.korneliussen@sun.com 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@448949 13f79535-47bb-0310-9956-ffa450edef68"
16fdfe0c79ea191120e292330cdb7d8951639b24,"DERBY-1830
contributed by Sunitha Kambhampati

The testcase added for derby-1660 in optimizerOverrides.sql uses jdbc:default:connection and does not work with wctme5.7 foundation causing the diff mentioned in this jira. This testcase needs to be excluded and should run only in environments that have support for DriverManager.

This patch (derby1830.diff.txt) converts this particular testcase into a junit test.

1. Add a new Junit test in lang suite - VTITest.java
2. Conditionally add the test fixture bulkInsertVtiTest if JDBC.vmSupportsJDBC2() is true.
3. Since the problematic testcase is converted to junit test, remove this test from optimizerOverrides.sql and update the master files for embedded and server frameworks.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@449114 13f79535-47bb-0310-9956-ffa450edef68"
01b5d0b3886bc739c5ce39fb30e627c5e0b2690a,"DERBY-1830
missed new file VTITest.java in last commit.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@449116 13f79535-47bb-0310-9956-ffa450edef68"
af3f6d38318bdb6a2f13771503a4fb7e4dc246ba,"DERBY-1529: Add LICENSE and NOTICE file to Eclipse core plugin zip.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@449326 13f79535-47bb-0310-9956-ffa450edef68"
57fd882df5e6177c6f30882145ed728b37426e6e,"DERBY-1326: Network server may abandon sessions when Derby system is
shutdown and this causes intermittent hangs in the client

Added JUnit test case which reliably reproduces the hang.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@449616 13f79535-47bb-0310-9956-ffa450edef68"
953604b417b9cc8dcf17d94e2995d6649b55d180,"DERBY-1751: derbynet/testSecMec.java fails with ShutdownException in
DerbyNetClient framework

The attached patch avoids the problem seen in this issue by setting
the console output of the network server to a file. This change in
made to the following files:

* functionTests/tests/jdbc4/TestConnectionMethods.java
* functionTests/tests/derbynet/testSecMec.java
* functionTests/tests/derbynet/dataSourcePermissions_net.java
* junit/NetworkServerTestSetup.java

It also changes DRDAProtocolException so that agent Errors will be
printed to the network server console instead of System.out.

Contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@449671 13f79535-47bb-0310-9956-ffa450edef68"
d98ff35e04dd03a172ea0f39390d5e20ecda4266,"DERBY-1886: Remove junit.jar from source distributions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@449695 13f79535-47bb-0310-9956-ffa450edef68"
28c633d82a776c90fd1cd835a0b66d1c8916d31a,"DERBY-1858
contributed by Yip Ng
patch: derby1858-trunk-diff02.txt

Fixes problem that DropSchemaNode's bind phase did not add the required schema 
privilege for it to check at runtime.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@449869 13f79535-47bb-0310-9956-ffa450edef68"
2fd6757f3ca76fe08675bc5d9b0c84dc0d15df96,"DERBY-1883: I18N tests fail on Linux/JVM 1.4.2 when derbyclient.jar is
the first element of the classpath

Grant derbyclient.jar permission to read derby.* properties.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@449930 13f79535-47bb-0310-9956-ffa450edef68"
3cdbd233a0a1c4e5915b24dcdc59206c1b7d1c31,"DERBY-1529: Move LICENSE and NOTICE files to the customary place in an Apache plugin.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450060 13f79535-47bb-0310-9956-ffa450edef68"
f8f6d787caf11567ada60d0bfd596133bcffa295,"DERBY-1890

Fixed gramatical error in XSDFI message.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450129 13f79535-47bb-0310-9956-ffa450edef68"
cdd73ccfd86941b0f85472e631abbc5f5911d6fa,"DERBY-1866
contributed by Army Brown
patch: d1866_v1.patch

Attaching a first patch for this issue, d1866_v1.patch. In short, the problem was that, when pushing predicates to subqueries beneath UNIONs, the predicates were always being pushed to the *first* table in the subquery's FROM list, regardless of whether or not that was actually the correct table. Thus it was possible to push a predicate down to a base table to which it didn't apply, thereby leading to an assertion failure in sane mode and an index out of bounds exception in insane mode.

For details on how this occurred and what the fix is, please refer to the code comments in the patch. The d1866_v1 patch does the following:

1. Adds logic to ensure scoped predicates are only pushed
to the appropriate base tables.

2. Adds one line to OptimizerImpl to solve the hang that
was occuring for the second query shown in repro.sql.
The problem there was just that one variable was not
being properly reset when beginning a new round of
optimization.

3. Adds some test cases to verify the changes for #1 and
#2.

Note that the patch is mostly just explanatory comments for existing and new logic, plus the test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450155 13f79535-47bb-0310-9956-ffa450edef68"
47dd43799c45ba23515588882a398aa6b7c0f203,"DERBY-1878
contributed by Sunitha Kambhampati
patch: derby1878.diff.txt 

 I am attaching the patch (derby1878.diff.txt) to improve some error handling in some of the network server tests.

 1.The execCmdDumpResults used by the five tests timeslice.java,maxthreads.java,testij.java,runtimeinfo.java,sysinfo.java suffer from the same problems that was fixed for testProperties.java namely
 -- the outputstream for the sub process's is not flushed out
 -- there is no timeout handling for the ProcessStreamResult
 2.Eliminate duplication of code in these 5 tests for execCmdDumpResults(String[] args) method. The execCmdDumpResults method basically exec's a new process and then waits for the process to dump the results. A new utility class - ExecProcUtil is added with execCmdDumpResults that is generalized to take the necessary input from the tests as well as fixes the issues mentioned in #1. The OutputStream is flushed out by calling bos.flush and System.out.flush and the timeout is added for ProcessStreamResult.
 3.Make use of the TimedProcess to kill process if process does not exit within the timeout period.
 4.TestConnection.java test has some variation of the execCmdDumpResults and it also adds some testcases into this method. Hence this method in this test is left as is and timeout handling is added.
 5.testij.out has been updated. The previous master file was eating away the last line that was written to System.out, but now that the process's streams are flushed properly, the last line in testij.out test which prints out 'End test'
 is also seen in the output file.

 Also noticed that these tests - like timeslice.java, maxthreads.java all seem to set the properties for the server and then check if the property is set. The functionality of the server when these properties is set is not being tested. It will be good to add tests that test that the functionality itself is working as expected or not. Please note, recently connecting to server with timeslice options discovered some issues with server (see DERBY-1856). 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450508 13f79535-47bb-0310-9956-ffa450edef68"
f512b2fccfeba10412dcb1115a595de19977d24d,"DERBY-1879 Save the EmbedResultSetMetaData object and the case-insensitive column name map in the ResultDescription object
and not EmbedResultSet. This means these objects are created once per compiled plan (as needed) and not once per
EmbedResultSet (as needed). This improves the performance by reducing the overhead for simple queries (DERBY-1876).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450607 13f79535-47bb-0310-9956-ffa450edef68"
a68c63b7be87d28507cad560c7f337ab9891c5d3,"DERBY-1874: update largeDataTests/LobLimits master for new exception names.

Committed for Kristian Waagan <Kristian.Waagan@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450681 13f79535-47bb-0310-9956-ffa450edef68"
6047d9c0892fae20ba40ee771e7d0d7b8e45e599,"DERBY-1891: Fix XN002 to have correct codepoint name: SECTKN

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450687 13f79535-47bb-0310-9956-ffa450edef68"
b3f85e473c4ec5617cdefe63b1f2e7ff49d1977e,"DERBY-1841: Update lang/groupBy.sql masters for j9.

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450736 13f79535-47bb-0310-9956-ffa450edef68"
e6774e2352747b0e62b024fada8c400bef0aed78,"DERBY-1844: Sed out exception diff in blobclob4BLOB.java

Committed for Myrna Van Lunteren <m.v.lunteren@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450738 13f79535-47bb-0310-9956-ffa450edef68"
1a489497a215b248b7144bc7cc23dc1c15dc3c66,"Minor cleanup of query tree ConstantNodes, removing some unused code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@450950 13f79535-47bb-0310-9956-ffa450edef68"
a6f533b2c5c982d246a0cb3cb0ffdf3e2305ad1f,"DERBY-1593: Fix paths for test jars inside of lib-debug distribution.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@451065 13f79535-47bb-0310-9956-ffa450edef68"
985f758ebdd4622b4c89f35989dd039d95c3cab2,"DERBY-729 Scalar time and date functions return 0 instead NULL when argument is NULL. Submitted by Bernt M. Johnsen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@451147 13f79535-47bb-0310-9956-ffa450edef68"
f53b02e09740c69e8270f700289fffb19546a41e,"DERBY-1889: Convert jdbcapi/lobStreams.java to JUnit

Patch contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@451255 13f79535-47bb-0310-9956-ffa450edef68"
81a981be3e5b2ce276fa175f1876e2bfc4edefb0,"DERBY-1899: Fix the release generation problems which Andrew found in the source distributions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@451363 13f79535-47bb-0310-9956-ffa450edef68"
b29239b8fdd73f06bf00eb276e7bcfbfbf63e999,"DERBY-1885: Remove spurious derby.logs from the source distributions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@451432 13f79535-47bb-0310-9956-ffa450edef68"
edc7bce7ceaf19736ea920dd57d388b430cfdbd6,"DERBY-1900: Force filemode on files in -bin to have execute bit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@451466 13f79535-47bb-0310-9956-ffa450edef68"
5ec53b2ae972b598d0f22ba216d922e109f60f43,"Add toursdb.xml and toursdb_readme.html to -src distribution.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@451548 13f79535-47bb-0310-9956-ffa450edef68"
12492565cf9974a42ec6db5da300f14077330a9d,"DERBY-1900: Force execute bit on scripts, attempt number 2.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@451704 13f79535-47bb-0310-9956-ffa450edef68"
76812041210896d560952d5a6bfaeb27aeb78423,"DERBY-1894
contributed by Yip Ng
patch: derby1894-trunk-diff02.txt

The fix is in FromBaseTable's getFromTableByName() method, where it is using 
the resolved synonym table name to do the binding for ORDER BY column. 
Patch includes additional tests.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@452259 13f79535-47bb-0310-9956-ffa450edef68"
e53c04a0046f317fd7d2a2de90b3f59eb9894f76,"DERBY-1921: Miscellaneous improvements to the STATUS file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@452609 13f79535-47bb-0310-9956-ffa450edef68"
41c47beee92bebafc55b93566bc2ff2a38dd4537,"DERBY-1910: OutOfMemoryError happens when jdbcapi/_Suite.junit was
executed as DerbyNetClient (in jvm1.4.2)

The problem was being caused by some of the tests that kept a
reference to a connection object which prevented this object from
being garbage collected. The attached patch (derby-1910.diff) fixes
that problem.

Patch contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@452832 13f79535-47bb-0310-9956-ffa450edef68"
e67fd7a68056b04b54f4a4e8d6fdb88bd1261ce3,"DERBY-1889: Convert jdbcapi/lobStreams.java to JUnit

Removed unused master file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@452983 13f79535-47bb-0310-9956-ffa450edef68"
626d315990127134d383496980b037834e017235,"DERBY-1847
contributed by Mamta Satoor
patch: DERBY1846_V1_diff_AddColumnAndGrantRevoke.txt

 To recap the problem, in SQL Authorization mode, when a new column is added to a table, the rows in SYSCOLPERMS for the table in question were not getting updated to incorporate the new column. This caused ASSERT failure when a non-table owner attempted to select the new column. 

 Some background information on system table involved: SYSCOLPERMS keeps track of column level privileges on a given table. One of the columns in SYSCOLPERMS is ""COLUMNS"" and it has a bit map to show which columns have the given permission granted on them. When a new column is added to the user table, the ""COLUMNS"" need to be expanded by one bit and that bit should be initialized to zero since no privileges have been granted on that column at the ALTER TABLE...ADD COLUMN time. 

 I have fixed this problem by having AlterTableConstantAction.addNewColumnToTable call the new method in DataDictionary called updateSYSCOLPERMSforAddColumnToUserTable. At this point, we know of only the TableDescriptor's uuid which can help us determine all the rows in SYSCOLPERMS for that given table uuid. I get ColPermsDescriptor for each one of those rows and then use the ColPermsDescriptor's uuid to update the ""COLUMNS"" column so SYSCOLPERMS is aware of the newly added column in user table. This fixes the problem because at the time of SELECT, when we do privilege lookup in SYSCOLPERMS, we have info on the newly added column. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@453352 13f79535-47bb-0310-9956-ffa450edef68"
665a8b9a863ab9ac6c7ce31e5b1687c5b893a8c8,"DERBY-1732 1. Make change to GenericStatementContext.isLastHandler() so it will return false for JVM errors thus
allowing the outer contexts to take corrective action.
2. Store transaction context treats JVM errors as session severity. To ensure consistency,
map severity for non StandardException instances to be SESSION_SEVERITY in GenericLanguageContext,
and GenericStatementContext.
Patch contributed by  Sunitha Kambhampati ksunithaghm@gmail.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@453395 13f79535-47bb-0310-9956-ffa450edef68"
ee5857f3cccbf8817bba37c4fd392481357509ba,"DERBY-1489: Provide ALTER TABLE DROP COLUMN functionality

This patch provides support for ALTER TABLE t DROP COLUMN c.

The patch modifies the SQL parser so that it supports statements of the form:

  ALTER TABLE t DROP [COLUMN] c [CASCADE|RESTRICT]

If you don't specify CASCADE or RESTRICT, the default is CASCADE.

If you specify RESTRICT, then the column drop will be rejected if it would
cause a dependent view, trigger, check constraint, unique constraint,
foreign key constraint, or primary key constraint to become invalid.

Currently, column privileges are not properly adjusted when dropping a
column. This is bug DERBY-1909, and for now we simply reject DROP COLUMN
if it is specified when sqlAuthorization is true. When DERBY-1909 is fixed,
the tests in altertableDropColumn.sql should be merged into altertable.sql,
and altertableDropColumn.sql (and .out) should be removed.

This new feature is currently undocumented. DERBY-1926 tracks the documentation
changes necessary to document this feature.

The execution logic for ALTER TABLE DROP COLUMN is in AlterTableConstantAction,
and was not substantially modified by this change. The primary changes to
that existing code were:
 -  to hook RESTRICT processing up to the dependency manager so that
    dependent view processing was sensitive to whether the user
    had specified CASCADE or RESTRICT
 -  to reread the table descriptor from the catalogs after dropping all the
    dependent schema objects and before compressing the table, so that the
    proper scheman information was used during the compress.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@453420 13f79535-47bb-0310-9956-ffa450edef68"
0058068ec5cd8ce3a90f4d385f973abef81f896b,"DERBY-1921: Bring STATUS file uptodate with recent release of 10.2.1.6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@453655 13f79535-47bb-0310-9956-ffa450edef68"
d88a69580fb51cbefc1921188d6860fcb507f6b4,"DERBY-1936 - LocalCalendar Sample Application


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@453845 13f79535-47bb-0310-9956-ffa450edef68"
486f51a8745a871b07aafdfb50084eedbaf3393a,"- DERBY-1610 Resolve difference of type compatibility between Embedded and NetworkServer/NetworkDriver - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@453886 13f79535-47bb-0310-9956-ffa450edef68"
d6e7d39f0dcabd8abc6d5f6b7e10a5e38fd22f11,"DERBY-1940: Remove Ease of Development to conform to recent changes to the JDBC4 api.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@453913 13f79535-47bb-0310-9956-ffa450edef68"
33a2387f6917c2b622e5668a5cdcac3b42d17347,"- DERBY-1610 Resolve difference of type compatibility between Embedded and NetworkServer/NetworkDriver - Updated missed 2 master files. - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@453922 13f79535-47bb-0310-9956-ffa450edef68"
8af8676c1c302672dcbd2d6b36eb7c9a52170358,"DERBY-1716
contributed by Yip Ng
patch: derby1716-trunk-diff03.txt

Unlike other descriptors, when privilege(s) get revoked from user,
the statement is not subject to recompilation, so then we are back to square one
since the previous patch attempts to bring in the permission descriptor(s) into
the permission cache at compilation time to avoid reading from system tables at
execution time.

I believe the proper proposal fix is to use internal nested read-only transaction
when the system is reading permission descriptors from the system tables. At a
high level, a statement undergoes the following typical steps for it to get executed
by the system:

1. Statement Compilation Phase
a) Parse the statement
b) Bind the statement and collects required permissions for it to be executed.
c) Optimize the statement
d) Generate the activation for the statement


2. Statement Execution Phase
a) Check if the authoration id has the required privileges to execute the statement.
b) Execute the statement


The problem lies in permissions checking step at statement execution phase. Before a statement can be executed in SQL authorization mode, the authorization id's privileges needs to be check against the permission cache or if the privileges are not available in the cache, the system needs to read this metadata information from the system tables. But the system is using *user transaction* to do this, so the shared locks that got acquired by the user transaction may not get released immediately; therefore, leading to lock timeout when the grantor attempts to revoke the user's privilege. To resolve this issue, the system now will start an internal read-only nested transaction(same lock space as the parent transaction) to read permission related info from the system tables and release the shared locks
as soon as the permissions check is completed before statement execution. This tackles the root of the stated problem. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@453935 13f79535-47bb-0310-9956-ffa450edef68"
6fddb00d6cded355c8b4be0fa24d0f4c58d7b3f8,"DERBY-1941: Include derbyrun.jar in list of jars needed in the classpath for
testing in java/testing/README.htm

Committed for James F. Adams <derby@xemaps.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@454069 13f79535-47bb-0310-9956-ffa450edef68"
211c9859a82dcb930d1a0c3b6ea6790284ae366f,"- DERBY-1610 Resolve difference of type compatibility between Embedded and NetworkServer/NetworkDriver - Fix to resolve error in jdk13 test of compatibility suite - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@454098 13f79535-47bb-0310-9956-ffa450edef68"
2e609ad444199e76f1a19417c290a6c18966b008,"Fixed days of week, should only be seven days.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@454269 13f79535-47bb-0310-9956-ffa450edef68"
bc52552f4e62dd1ab68d634f318901f4de825661,"- DERBY-1610 Resolve difference of type compatibility between Embedded and NetworkServer/NetworkDriver - adjust index for parameter using checkForEscapedCallWithResult method. - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@454312 13f79535-47bb-0310-9956-ffa450edef68"
801c5156f5f8509ba06b772f32c48f7a494469f7,"DERBY-1939

Bug was already fixed in trunk, merging added tests and new sanity
check from 10.1 codeline to trunk.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@454623 13f79535-47bb-0310-9956-ffa450edef68"
9376c2e4d30eab3a3c9cb718a2ff9e33322896fc,"DERBY-1829
contributed by Myrna van Lunteren

Skipping this test with foundation...Triggers are not officially supported with that jvm.

This patch should also go into 10.2.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@462556 13f79535-47bb-0310-9956-ffa450edef68"
9082f65845e1adb53a4335725fda6d561dbde130,"DERBY-1785
contributed by Myrna van Lunteren
patch: DERBY-1785_20061007.diff

Attaching a band-aid patch for this issue. I chose to comment out the method 
rather than remove as a way to document the quirky behavior.

Having the method setSecurityProps overload the one in jvm.java causes 
problems when running the junit tests - they *do* successfully run with 
securityManager.
Foundation class tests actually run ok with security manager - except when 
useprocess is false. This is caused by a bug in the jvm. See also DERBY-885.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@462607 13f79535-47bb-0310-9956-ffa450edef68"
a2006aed52372145092b64745f0f314631ac1380,"DERBY-1610: Resolve difference of type compatibility between Embedded
and NetworkServer/NetworkDriver

Fixed failures in the JDBC 4.0 tests. Description of the patch:

  * Check for unsupported types before checking incompatibilities
    since JDBC 4.0 specifies that SQLFeatureNotSupportedException
    should be raised for certain types if they are unsupported.

  * Change timing of calls to checkForClosedStatement() to make
    ClosedObjectTest get the expected SQLState when the statement is
    closed.

  * Add type checking to the JDBC 4.0 length-less blob/clob overloads.

  * Since the type checking already checks for closed statement and
    invalid parameter index, remove those tests from
    checkSetterPreconditions(). Since the only code that is left in
    checkSetterPreconditions() after the removal of those checks is a
    call to checkForEscapedCallWithResult(), replace all calls to
    checkSetterPreconditions() with calls to
    checkForEscapedCallWithResult().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@462784 13f79535-47bb-0310-9956-ffa450edef68"
960054b086ad356e09ae40c1f081cbda94c97654,"DERBY-1956: Remove stale code from the statement classes in the client driver

The patch removes escapedProcedureCallWithResult_ and all code that is
only executed when the flag is true. It also removes a couple of
methods that became no-ops, and SQLStates and messages that are never
used.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@463565 13f79535-47bb-0310-9956-ffa450edef68"
37a2f5e8797dc7cebc3356f26a346636a6b14e89,"DERBY-183: Allow unnamed parameters in CREATE FUNCTION

This patch was contributed by James F. Adams (derby@xemaps.com)

The patch does the following:

1) Modifies java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj
    a) Initializes parameterName to """" in procedureParameterDefinition
       and functionParameterDefinition
    b) Makes parameterName optional in procedureParameterDefinition
       and functionParameterDefinition

2) Modifies java/engine/org/apache/derby/impl/sql/compile/CreateAliasNode.java
   to ignore function and procedure parameter names equal to """" when
   checking for duplicate parameter names. 

Tests have been added to lang/functions.sql and lang/procedure.java. 

The parameter name is made optional by surrounding its production with [].

This changes the grammar from:

parameterName = identifier(Limits.MAX_IDENTIFIER_LENGTH, true)
  typeDescriptor = dataTypeDDL()

to:

        [ parameterName = identifier(Limits.MAX_IDENTIFIER_LENGTH, true) ]
        typeDescriptor = dataTypeDDL()

This results in a choice conflict because certain tokens satisfy both
identifier() and dataTypeDDL(). An additional token of lookahead resolves
this conflict. This results in:

        [ LOOKAHEAD(2) parameterName = identifier(Limits.MAX_IDENTIFIER_LENGTH, true) ]
        typeDescriptor = dataTypeDDL()

Expressing this in an alternate form such as:

        (
                parameterName = identifier(Limits.MAX_IDENTIFIER_LENGTH, true)
                typeDescriptor = dataTypeDDL()
        ) | typeDescriptor = dataTypeDDL()

still results in a choice conflict so I opted for the more compact form.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@463982 13f79535-47bb-0310-9956-ffa450edef68"
5d3287e8f9190fa7217052284213c8c8f5ebdd64,"DERBY-183: Allow unnamed parameters in CREATE FUNCTION

This patch was contributed by James F. Adams (derby@xemaps.com)

The lookahead in the grammar of my previous patches did not work for some
parameter types. I have reworked the lookahead to use syntactic lookahead
similar to that used elsewhere in the grammar. I have included an additional
test that would have failed with the previous patch. I have run the
lang/functions.sql and lang/procedure.java using the various frameworks
without error.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464078 13f79535-47bb-0310-9956-ffa450edef68"
2c865dd473428ec50cac0b72ba440882b94ca602,"- DERBY-1942 There exists difference between behavior of setNull(Types.TIME) and setTiime(null) - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464202 13f79535-47bb-0310-9956-ffa450edef68"
16c8b8807fc36939ac5ac49d961cd5d3e13588b1,"DERBY-630: CREATE TRIGGER fails with null pointer exception

This patch was contributed by Yip Ng (yipng168@gmail.com)

The current implementation for CREATE TRIGGER needs to handle null compilation
schema. A compilation schema with null value indicates that the
trigger action statement text does not depend on the current schema. This means:

1. It is safe to compile this statement in any schema since there is no dependency with
    the CURRENT SCHEMA. i.e.: All relevent fields are qualified with a specific schema.

2. The statement cache mechanism can utilize this piece of information to enable
    better statement plan sharing across different schemas; thus, avoiding unnecessary
    statement compilation.

 
So the proposal is:

a) Allow null compilation schema. The system catalog first needs to change the
   compiliation schema id column of SYS.SYSSTATEMENTS and SYS.SYSVIEWS system
   table's nullability to true. This would also require a soft upgrade for the
   previous versions of Derby. This step will resolve the NPE problem of this jira.

b) Handle null compilation schema in statement preparation logic. This can be filed
   as a separate jira as improvement. It may require some work on the SQL parser to
   determine whether the compiled statement depends on the CURRENT SCHEMA or not, so
   that the compilation schema can be properly set. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464215 13f79535-47bb-0310-9956-ffa450edef68"
164e806cc6682c5a843169f22861379db51c2caf,"DERBY-1893 Convert largedata/lobLengthTests.java to junit. Comitted by √òystein Gr√∏vlen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464504 13f79535-47bb-0310-9956-ffa450edef68"
da67b78a4d00048c0bf482ffd488d7695ad7aa1e,"DERBY-737: SYSCS_UTIL.SYSCS_COMPRESS_TABLE should create statistics

This patch was contributed by Mamta A. Satoor (msatoor@gmail.com)

The changes have been very localized in
AlterTableConstantAction.java!updateIndex(). Currently, this method checks
if statistics already exist for an index. If yes, then it sets a flag
updateStatistics to true. Later, the code checks for this flag and drops
the existing statistics and creates new statistics for that index provided
the user table at this point is not empty. So, as we can see, if there is
an index with no preexisting statistics, the flag updateStatistics will be
set to false and hence no statistics related code is executed and hence
even though the user table is not empty at the time of compress, no
statistics get generated for such an index.

I am proposing to fix the problem by still using the flag to see if
an index has pre-existing statistics. If yes, then we should drop
those statistics. Next, whether the index has pre-existing statistics or
not, go ahead and create new statistics for the index provided the
user table is not currently empty.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464551 13f79535-47bb-0310-9956-ffa450edef68"
f106df75be90a0c3190498fb428a85b9fb2ef6cb,"Remove unused import from CleanDatabaseTestSetup

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464592 13f79535-47bb-0310-9956-ffa450edef68"
c40688b674624b92b27c7336072d767982dc1873,"DERBY-1952 (partial) Setup methods in TestConfiguration to allow tests' suite() methods to add tests that
run in the client/server configuration. Change TimeHandlingTest and LangScripts to use these methods
so that by themselves they run embedded and network server tests.
Remove the Client and Embedded top-level suites as that choice is now driven into a test itself.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464607 13f79535-47bb-0310-9956-ffa450edef68"
348cafefe24abe3577a3ea599e8c7d0a17d165c7,"DERBY-1791 Setup the policy file and security manager setup so that the system property
derbyTesting.testjarpath describes the file location of derbyTesting.jar so that ij
can be given permission to read its contents. This is to access the SQL scripts within the resource.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464610 13f79535-47bb-0310-9956-ffa450edef68"
cc24d0b3c93407e22d9a9c3de39f6ab44a800ae1,"DERBY-1952 (partial) Remove the _Suite tests from the old harness suites in order to allow faster
conversion of them to Junit suites that run successfully in standalone mode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464644 13f79535-47bb-0310-9956-ffa450edef68"
eba07fcf99584e5af5fdb710f71bf8627c4d414c,"DERBY-1952 (partial) Add some utility methods in TestConfiguration to allow test classes to easily implement
suite() methods that run in embedded and/or client server.
Convert some tests to use these utility methods. Change NetworkServerTestSetup to create a server console
output file in the logs folder in append mode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464785 13f79535-47bb-0310-9956-ffa450edef68"
9a25abbbc9e9130e7ca86a606b905692df58d835,"DERBY-1953 (Make FOR EACH clause and MODE DB2SQL in CREATE TRIGGER 
           statement optional)

Patch Contributed by Yip Ng.

This patch makes the FOR EACH clause optional in CREATE TRIGGER
statement. Since the changes are mainly in the trigger definition of
sqlgrammar.jj file and to make this backward compatibile with previous 
releasesof Derby, I also addressed DERBY-1770, Make MODE DB2SQL optional.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464970 13f79535-47bb-0310-9956-ffa450edef68"
985662bca2586f1c5524db81d682eb73a98c9767,"DERBY-1952 (partial) DERBY-1971 (partial) Change more of the tests run from jdbcapi._Suite to return suites
that run in embedded and client as primary configurations. Name some of the TestSuites returned from TestConfiguration
to make the hierarchy view in the Swing Test Runner more useful.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@464999 13f79535-47bb-0310-9956-ffa450edef68"
78062b5304778fa5c45327d94be194b3ac5d45ed,"DERBY-1897 Removed the load of DataSourcePropertiesTest from jdbcapi._Suite for J2ME
by requiring that JDBC 3 be supported for that test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@465020 13f79535-47bb-0310-9956-ffa450edef68"
4a90a329c507465513e49fcb7eeb704f03e2706c,"DERBY-1967: UNION (ALL) constraint violation problem

This patch was contributed by Yip Ng (yipng168@gmail.com)

In the bind phase of ConditionalNode (NULLIF), the CAST node is
generated on top of the untyped NULL and it gets the data type
descriptor(DTD) of the left operand. However, the CAST node should
have DTD where its value can be nullable.

BinaryComparisonOperatorNode bcon = (BinaryComparisonOperatorNode)testCondition;

QueryTreeNode cast = getNodeFactory().getNode(
C_NodeTypes.CAST_NODE,
thenElseList.elementAt(0),
bcon.getLeftOperand().getTypeServices(), <=== not nullable!
getContextManager());

The second query:

select nullif('x','x') as f0, f1 from a
   union all
   select nullif('x','x') as f0, nullif(1,1) as f1 from b;

works because it didn't generate a NormalizedResultSet on top of
the PRN on the right hand side of the union since the datatype and
length matches. So it didn't hit the path where it does additional
checking at execution time.

For the first query:

select nullif('x','x') as f0, f1 from a
   union all
   select nullif('x','x') as f0, nullif('x','x') as f1 from b;

The union result column's length does not match with the right hand
side result column, so it generated a NormalizedResultSet on top of
the RHS of the union. When the system retrieves the row from
NormalizedResultSet at execution time, the normalize method is called
on the DTD and checks if the source is NULL and whether its DTD
is not nullable. In this case, the SQLSTATE 23502 is thrown. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@465122 13f79535-47bb-0310-9956-ffa450edef68"
7d6219fc2a5905d3f355ba8fc1ed2d01998726ba,"- DERBY-1535 Trial 2 for DERBY-550, improve use of Engine from NetworkServer and reduce memory usage - Replacing call of setByte() to call of setBinaryInputStream(), which was room to improvement in DERBY-1559. - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@465249 13f79535-47bb-0310-9956-ffa450edef68"
88f1e2603ffcd2844679e16745cb4b5ac3c666df,"DERBY-1895: Convert jdbcapi/blobclob4BLOB.java to JUnit

Patch contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@465601 13f79535-47bb-0310-9956-ffa450edef68"
0c4649df8a80db28a4f5f55478c0a6d871809d6e,"DERBY-1976 New & modified utility methods for JDBC JUnit tests to aid conversions of SQL script tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@465673 13f79535-47bb-0310-9956-ffa450edef68"
341554ea526354a44573e7da8195d5519b42845f,"DERBY-1962: Convert jdbcapi/resultsetJdbc30.java to junit

Patch contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@465694 13f79535-47bb-0310-9956-ffa450edef68"
70b437c6e658b9b069f3a392a18df57504d4453a,"DERBY-1976 Improvements in the utility JUnit JDBC methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@465935 13f79535-47bb-0310-9956-ffa450edef68"
bdf6536c63a79c3560a4a8de819e806e486e8a40,"DERBY-1240 ( creating /restoring a db from backup using createFrom with log at 
             different location copies the log from backup to the db dir also).

Problem was restore code in the RawStore was copying all the files that does 
not exist in the database directory after the restore was completed by the 
data factory and log factory boot methods. Because the log is placed at
different location when an external log location is specified, the log
directory does not exist in the database directory. In this case code in the 
RawStore was incorrectly copying log files also because the log directory does 
not exist in the database directory. This patch fixes the problem by restoring
only the files that are not restored by the other factories. Currently, they
are jar files in the database and backup history file.
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@466221 13f79535-47bb-0310-9956-ffa450edef68"
5110c0a43007b30b7111f6cfd5dc3c1eaadf2c36,"DERBY-1925 : (Add re-encrytion  of database test cases to the upgrade test.)

Merged fix (r452682) from 10.2 branch to trunk. 

This patch adds test cases to the upgrade test to test encryption of an
un-encrypted database and re-encryption of encrypted database.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@466279 13f79535-47bb-0310-9956-ffa450edef68"
4782316e6fa2e32f475a8a2aa5ae431f6b53b011,"Removed outdated comment. There are no RowId classes in the Derby code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@466390 13f79535-47bb-0310-9956-ffa450edef68"
f48e0cdfc67350309014638f4795610271bf5030,"DERBY-1988: Convert jdbc4/TestJDBC40Exception.java to JUnit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@466940 13f79535-47bb-0310-9956-ffa450edef68"
8f0a531ebccddb4d4766bd852a2701f0c943edb4,"- DERBY-1990 Make writeEncryptedScalarStream and writePlainScalarStream methods in org.apache.derby.client.net.Request as private - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@467309 13f79535-47bb-0310-9956-ffa450edef68"
9364ff7411e464ffd739796ca71127fb1b992d46,"DERBY-1995 (partial) Add SQL scripts to create tables, primary key and foreign key constraints for order entry testkit.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@467473 13f79535-47bb-0310-9956-ffa450edef68"
d3b2fe0d8fb41411b4dffc329233ea85d07e2c86,"DERBY-1995 (partial) Add SQL scripts to create tables, primary key and foreign key constraints for order entry testkit.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@467474 13f79535-47bb-0310-9956-ffa450edef68"
5028700c7a73bcd7b40dae3dc06c0afa6158db01,"Fixed to point to the correct download site for JUnit 3.8.1


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@467522 13f79535-47bb-0310-9956-ffa450edef68"
3003182fcc6e9ada606c7e80a8e205f0714684ac,"DERBY-912: OutOfMemory error on continuous execution of SQL statement

Reuse free sort identifiers.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@467578 13f79535-47bb-0310-9956-ffa450edef68"
c050ed4389184bd98d905532a3c1ad5a2c6c6862,"DERBY-815: Prevent unneeded object creation and excessive decoding in
parseSQLDTA_work()

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@467612 13f79535-47bb-0310-9956-ffa450edef68"
e785359830fc93a438b51f080fcd6479f8928d58,"Add test suite names to NistScripts (which is still under development).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@467755 13f79535-47bb-0310-9956-ffa450edef68"
dca0c55dddee95d39892d3c8602ea6e0020b81b8,"DERBY-1377: Add copyright headers to sql test scripts. Adjust canons accordingly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@467793 13f79535-47bb-0310-9956-ffa450edef68"
c61c67d89acf69f238eebe7f00005fb4d3fad551,"DERBY-1952 (partial) Remove the SQL lang tests from the old harness that are run by the JUnit test LangScripts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468046 13f79535-47bb-0310-9956-ffa450edef68"
49213fea9aaf11705ccdc4ea6c3e2df27a25bf23,"DERBY-1952 (partial) Change CanonTestCase to not ignore blank lines in the output. The skipping of blank lines in
the old harness was probably due to the use of sed. Skipping blank lines makes it harder to create a new master
file from the output.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468067 13f79535-47bb-0310-9956-ffa450edef68"
3c8eeb396a3e912c7c5dd12b19e7768f993d16cc,"DERBY-1377: Remove copyright headers from nist sql scripts and canons.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468102 13f79535-47bb-0310-9956-ffa450edef68"
be115c442321b1e28bdaba35706971e49c3a305f,"DERBY-2003 Add a utility method to allow setting the lock timeouts as a decorator building off DatabasePropertyTestSetup.
Use this decorator in BlobClob4Blob to reduce the wait time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468209 13f79535-47bb-0310-9956-ffa450edef68"
5d66268eb840490c4e51a0f3e99e0f33572f5ef3,"DERBY-1989: Convert jdbc4/TestDbMetaData.java to JUnit

The new TestDbMetaData tests everything the old one did, except for
the constants in JDBC40Translation. All but one of them are already
tested in JDBC40TranslationTest, and the patch adds the missing one to
that test.

The patch also makes a couple of small changes in junit/JDBC.java:

  * assertColumnNames:
      - declare it as ""throws SQLException"" instead of ""throws
        Exception""
      - changed order in call to Assert.assertEquals() so that errors
        are not shown with expected/actual mixed up.

  * assertRowInResultSet:
      - since a result set can contain values that vary slightly from
        time to time (for instance, identifiers which contain
        timestamps), one needs a way to accept different values for a
        column. With a small change (only changing the order of a call
        to equals()), it was possible to give assertRowInResultSet()
        an object whose equals() method returned true for all
        acceptable values. This makes it possible to use
        assertRowInResultSet() where the old harness used sed scripts
        to filter out varying values.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468296 13f79535-47bb-0310-9956-ffa450edef68"
552e94e0649d929d809ecafb9835109340ddbec6,"DERBY-2007 (partial) The dropping of tables in CleanDatabaseTestSetup needs to be smarter for
the nist suite since it has tables that depend on each other. This is an incremental change
that copes with tables in the same schema depending on each other except when two tables
reference each other.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468447 13f79535-47bb-0310-9956-ffa450edef68"
d4ce3d1789a202bf7c02951adb8ad06dc7c4e293,"DERBY-2007 (partial) Add setting the lock timeouts for the Nist scripts to match the behaviour under the old harness.
NistScripts is still a work in  progress.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468448 13f79535-47bb-0310-9956-ffa450edef68"
8919a15e31bb40e4953b09f466582ee61fc40674,"DERBY-2007 (partial) Improve CleanDatabaseTestSetup to handle tables in a dependency loop due
to foreign key constraints and simple cases for objects that are dependent across schemas.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468502 13f79535-47bb-0310-9956-ffa450edef68"
3098ab0457a26a007d131dbae5a6fa11692cce0f,"DERBY-1758: Enable xmlSuite to run as part of derbyall for qualified JVMs

This patch was contributed by A B (qozinx@gmail.com)

This patch adds two JUnit tests to lang/_Suite.java. The first test,
XMLTypeAndOpsTest.java, is meant to be a JUnit equivalent to the current
lang/xml_general.sql test. The second test, XMLMissingClassesTest,
tests the behavior of the SQL/XML operators when the required JAXP
or Xalan classes are not in the classpath.

The XML classes can be provided in any of a number of ways:
1) bundled into the JVM
2) installed as endorsed libraries
3) specified in the classpath
Hand-testing was performed to ensure that the new JUnit tests perform
correctly in these various configurations.

If the tests are run in an environment which does not support the XML
features, the tests quietly do nothing.

The patch, d1758_newJUnitTests_v2.patch, also adds a new utility method
and some associated state to JDBC.java for checking two things:
1) that the classpath has JAXP and Xalan classes, and
2) if the classpath has Xalan, check that the version of Xalan meets
the minimum requirement for use of Derby SQL/XML operators.
These methods/flags are then used to determine when to run the new
XML JUnit tests.

NOTE: After this patch has been reviewed/updated and finally committed
I will post a separate patch to remove the old lang/xml_general.sql test
and the corresponding master files. I will then continue addressing the
rest of the tasks for this issue (esp. xmlBinding.java) in incremental fashion.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468503 13f79535-47bb-0310-9956-ffa450edef68"
76432e1105f843ab0284a76ab2a9d46b5109a96e,"DERBY-2007 (partial) Switch NIST suite over to Junit. Removed from old harness suites and added NistScripts
into lang._Suite. Added constraint names to various DDL statements in the nist SQL scripts to produce
constant output. Modify the .out files to match the output under JUnit, including not removing blank lines.
Still cleanup to do including modifying the readme to reflect changes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468514 13f79535-47bb-0310-9956-ffa450edef68"
e89ec4332a45dff7435351f1996e4c8ea202eb74,"DERBY-2007 (partial) Update readme to reflect switch to JUnit for NIST suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468517 13f79535-47bb-0310-9956-ffa450edef68"
5ca30555d2ec2de4da0d19f2f8bbc862f1b00898,"DERBY-2007 (partial) Remove old properties files used by old harness for the NIST suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468553 13f79535-47bb-0310-9956-ffa450edef68"
28698511ec1d973a09a5c3517979d968ff8ca7f3,"DERBY-1930 (partial) Initial addition of information from JDBC paper on the web-site
onto the JDBC package.html page for Derby's published Javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468561 13f79535-47bb-0310-9956-ffa450edef68"
294949231c002c6d4dbd3939a9ed62d5a76dec51,"DERBY-1930 Apply corrections noted in comments by Dag H. Wanvik in DERBY-1930.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468563 13f79535-47bb-0310-9956-ffa450edef68"
b73c2a37546c8f7c6cfc6e84ee68f63a3d8830ef,"DERBY-1758: Enable xmlSuite to run as part of derbyall for qualified JVMs

This patch was contributed by A B (qozinx@gmail.com)

I'm attaching another patch, d1758_followup_v1.patch, that moves the XML
utility methods out of junit.JDBC and into a new class, junit.XML, per Dan's
suggestion (thanks Dan).

Note that I changed the ""haveClass()"" method in JDBC.java from private to
protected so that it can be called from the junit.XML class.  That was the
easiest thing to do. 

Since checking the classpath is not a JDBC-specific operation, the other
option is to move ""haveClass()"" to some other class in the junit package.  If
anyone indicates a preference for doing so and also indicates the class to
which the method should be moved, I can do it this way.  Otherwise I'll just
leave it as it is (i.e. keep it in JDBC.java and make it protected).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468605 13f79535-47bb-0310-9956-ffa450edef68"
9ea9234106fa86b71137d7988eb563b997639bf1,"DERBY-2008: NPE with 2-arg SUBSTR call in GROUP BY clause

This patch was contributed by Yip Ng (yipng168@gmail.com)

For SUBSTR function, there can be 2 or 3 arguments, and in the
case of 2-args, the rightOperand of the TernaryOperatorNode will
be null. In its isEquivalent() method, it did not take care of
this case; thus, the NPE.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468696 13f79535-47bb-0310-9956-ffa450edef68"
64c254cd9ba734b0679d8a9c96e0e4f0896d22b3,"DERBY-2007 Add a convenience method in DatabasePropertyTestSetup that returns a decorator
that sets up BUILTIN authentication with the passed in list of users. Use this for the NIST
test as seemed to be the intention under the old harness. Remove the remaining harness properties
files for the nist suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@468803 13f79535-47bb-0310-9956-ffa450edef68"
5e4e33b58295f5f0c4d4826f4c44b81512f22c0f,"DERBY-1953 Test changes. MODE DB2SQL removed from most tests

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469102 13f79535-47bb-0310-9956-ffa450edef68"
3f965edfcfa0cd90fd3d28551e52ff78af89ffde,"DERBY-1979: Convert jdbcapi/characterStreams.java to JUnit

Patch contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469128 13f79535-47bb-0310-9956-ffa450edef68"
dbe8ee1e90397386e7ef5bd18e963c143f18d3ba,"Move a set of language SQL scripts from the old harness (derbylang suite) to the JUnit test LangScripts.
Tests moved are: aggbuiltin, comparisons, delete, insert, schemas, select, stringtypes, update, valuesclause, views.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469215 13f79535-47bb-0310-9956-ffa450edef68"
05ce59c8ccbe7159d0f7576b37c3bd9ab6e03ea9,"Remove the SQL tests moved to JUnit LangScripts from derbylang.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469272 13f79535-47bb-0310-9956-ffa450edef68"
ca71d9d75140940493200327765b0e9a3d18c945,"DERBY-1991: Misleading stack traces for exceptions raised by the JDBC
4.0 embedded driver

Don't set the stack trace of the SQLException to the stack trace of
the dummy exception in SQLExceptionFactory40.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469410 13f79535-47bb-0310-9956-ffa450edef68"
f8fd911c2f11235344cbbf228378558370beb6f0,"DERBY-1970 Add JDBCPerfTestCase as initial step in adding performance tests to Derby's testing.
Contributed by Sunitha Kambhampati ksunithaghm@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469567 13f79535-47bb-0310-9956-ffa450edef68"
b925e45aa70f21f3accc72ddcfda702d65c6e129,"DERBY-1994 (partial) Add the base POJO classes for the data objects in order entry test toolkit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469572 13f79535-47bb-0310-9956-ffa450edef68"
965a2583280ed25b92091c090b9c9a0630aa95ad,"DERBY-1994 Add the interfaces to execute the business transactions and display the results for the order entry toolkit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469573 13f79535-47bb-0310-9956-ffa450edef68"
76dd0fad69d13e6319f3870ca3b107a7f9156c8d,"DERBY-1987 (partial) Add build.xml files to hook order entry classes into build system.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469576 13f79535-47bb-0310-9956-ffa450edef68"
20c615126622e41ea45f14107bdec5d4f10749e8,"DERBY-1970 Add initial performance test that uses the new JDBCPerfTestCase class.
Contributed by Sunitha Kambhampati ksunithaghm@gmail.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469588 13f79535-47bb-0310-9956-ffa450edef68"
e91ca1658948235e14212d15cdd63c4e34401800,"Name the test suite in the jdbc4._Suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469591 13f79535-47bb-0310-9956-ffa450edef68"
b83e61a0c2225f4a94b3760eceefb99e20fd4e1b,"DERBY-1975 (partial) Add some incremental work to support a single use database for a test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469594 13f79535-47bb-0310-9956-ffa450edef68"
d488449ac98bc4f79928203e37b754fefa93797f,"DERBY-1975 Enhance the single database decorator and DropDatabaseSetup to use a unique database name
and to drop the database at tearDown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469632 13f79535-47bb-0310-9956-ffa450edef68"
260993be063891927569329a596d66be95238a5c,"DERBY-1975 Remove work in progress comments from DropDatabaseSetup.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469634 13f79535-47bb-0310-9956-ffa450edef68"
9fdd4623672b76ede6fb355ce6f2cbd4e5cba4f2,"DERBY-1758 Remove the old lang/xml_general.sql test and the corresponding master files.
That test has now been replaced by lang/XMLTypeAndOpsTest.java, which is a JUnit test.
Contributed by A B qozinx@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469713 13f79535-47bb-0310-9956-ffa450edef68"
2f625cd578ea1bbb6c0b73092f24a99f6ed2e0c9,"DERBY-2028 add names to existing JUnit test suites without a name.
contributed by Kristian Waagan Kristian.Waagan@Sun.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469965 13f79535-47bb-0310-9956-ffa450edef68"
ad6d5f118b522609da226eacdb339d6e44111f7d,"DERBY-1868: Check in derby-1868-merged-v01.diff. This causes the Derby build to consume an xml file of message descriptors and generate the engine's messages_en.properties as well as the SQLState tables for the Reference Guide.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@469975 13f79535-47bb-0310-9956-ffa450edef68"
b194b91831e42c80d73e056b031d7ce4e5952579,"DERBY-1868: Delete generated messages_en.properties at clobber time. Teach subversion to ignore this generated file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470008 13f79535-47bb-0310-9956-ffa450edef68"
c61536a1369c193af6708dcad8ca2cb468a9c7b5,"DERBY-1974 Add utility method TestConfiguration.sqlAuthorizationDecorator to change the default
database to one that has SQL authorization mode enabled. Have PrepareExecuteDDL use this decorator
and add this test to lang._Suite. Fix a bug in assertDrainResults() where the wrong variable
was being used to check an assert.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470024 13f79535-47bb-0310-9956-ffa450edef68"
69855d550f22789251bfa1d2dee437b6e3197a55,"DERBY-1868: Commit Knut Anders' patch to point the compiler at antlibrary.dir rather than ant.home.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470128 13f79535-47bb-0310-9956-ffa450edef68"
a5e73f0afae1bbe19d2728e064b3d5fbc8784ece,"DERBY-1995 Add final base schema script, index.sql for additional indexes required by the test.
Added copy to the build target to copy the scripts to the classes folder.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470142 13f79535-47bb-0310-9956-ffa450edef68"
9fd7e3e5c6dfccdb10dd71b9803cff112c4a2b38,"DERBY-2005 converts the test jdbcapi/Stream.java to Junit.
Contributed by Fernanda Pizzorno fernanda.pizzorno@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470152 13f79535-47bb-0310-9956-ffa450edef68"
bbdb3fd99dfc3d213f03e7128def0005bcfc4cd4,"DERBY-2021 (partial) Fix UpdateXXXTest and ResultSetCloseTest suite() methods to run in client as well.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470221 13f79535-47bb-0310-9956-ffa450edef68"
78aeb85e965d57246864d956b99a3e64f8afa89a,"DERBY-2021 (partial) Wrap each suite (embedded and client) in CleanDatabaseSetup when using the defaultSuite() method.
ResultSetCloseTest required this and it makes better sense than the single wrapping of both suites with a clean database
decorator.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470223 13f79535-47bb-0310-9956-ffa450edef68"
283931ee57fad0c89c16c50ec223e7f37a3f322f,"DERBY-2021 (partial) Change ProcedureTest.suite() to run tests embedded and client. Cleanup
the creation of tables and procedures to use the decorateSQL method of CleanDatabaseTestSetup
rather than a test specific way to drop objects.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470233 13f79535-47bb-0310-9956-ffa450edef68"
1982e59a388ab73b8efef09397e389e9fdf70a7b,"DERBY-2027: JUnit suite All crashes with OutOfMemoryError when running
LobLengthTest

Use LoopingAlphabetStream instead of ByteArrayInputStream to reduce
memory usage. Patch contributed by Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470294 13f79535-47bb-0310-9956-ffa450edef68"
38873e423bd838b5d4246b17ab41610d8126352a,"DERBY-2005: Convert jdbcapi/Stream.java to JUnit

Clean-up patch contributed by Fernanda Pizzorno.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470305 13f79535-47bb-0310-9956-ffa450edef68"
75defd06faadeeeb636a5fd17fced34d831c1fbb,"DERBY-801 (partial) Allow parallel access to data files

Use Derby's own module loading mechanism to load RAFContainer4.
Patch contributed by Anders Morken.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470362 13f79535-47bb-0310-9956-ffa450edef68"
ff22a628c1bacfa1b3611eebffd2f2c393a785a4,"DERBY-1993: Checkin derby-1993-v03.diff, which puts the demo classes in the org.apache.derbyDemo namespace.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470372 13f79535-47bb-0310-9956-ffa450edef68"
a708311a614431bc635cb1437a06a948120e7e21,"DERBY-2021 Fix SURTest.suite() to run client & embedded.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470418 13f79535-47bb-0310-9956-ffa450edef68"
aa2a5daf37a3541fe218744baaf228698d6d1ea5,"DERBY-467 Add a new test for tesing security issues related to server side Java procedures and functions.
New test is lang.RoutineSecurityTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470434 13f79535-47bb-0310-9956-ffa450edef68"
b9989a8565f1773614ab6eb4260647cd15999f34,"DERBY-2032 Convert MathTrigFunctionsTest to use PreparedStatements instead of many compiled Statements
and thus reduce execution time from eighty seconds to around ten seconds.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470463 13f79535-47bb-0310-9956-ffa450edef68"
16c6f358dd569f2f50c912200d4d9fdade425fd2,"DERBY-2021 Fix DataSourceProperties and SURQueryMixTest to runs tests in client and embedded as needed.
Fix DataSourceProperties to actually run some tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470476 13f79535-47bb-0310-9956-ffa450edef68"
4f37d7ca26f197a1df2fbd42129f177ac84db238,"DERBY-2021 Fix ConcurrencyTest to run embedded and client.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470492 13f79535-47bb-0310-9956-ffa450edef68"
af4a9feb76c71660e592079c9717075699d7e851,"DERBY-801 (partial) Allow parallel access to data files

DERBY-801-6.patch remedies the noise from the iosInProgress sanity
checking by checking the committed drop state before croaking.
Patch contributed by Anders Morken.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470573 13f79535-47bb-0310-9956-ffa450edef68"
876622852920882e6c7b359c80334a2ab2b80303,"DERBY-2006: Add a top-level Ant target that runs the junit tests and generates
a report.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470604 13f79535-47bb-0310-9956-ffa450edef68"
115bc28178dae8295646cdd52efc7abcc8493848,"DERBY-2006: Refactor junit-oneclass target to set the jvm from a property,
and set the default to 'java' in junit-init.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470636 13f79535-47bb-0310-9956-ffa450edef68"
4aa24888bc47f0050bab958705a5a2d779575b30,"DERBY-1868: Point message writers to the website for guidance on how to write messages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470862 13f79535-47bb-0310-9956-ffa450edef68"
ec3f1e1c8ce96ea771a1339e131981731f3c30f6,"DERBY-1986 Add Cryptographic Software Notice to the README.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470909 13f79535-47bb-0310-9956-ffa450edef68"
b27da439dae8b2d5cf3d9c56afb0aee478302d8e,"Test committer capabilities by making a small fix to comments
in OptimizerImpl.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470943 13f79535-47bb-0310-9956-ffa450edef68"
36d1b3565cea33bc5c006c3780b0252f4cffe388,"DERBY-2033 (partial) Initial test cases for DatabaseClassLoadingTest but test is not ready to
be added to a suite yet. Fix the no security manager decorator to work correctly as it is
required by this test. Add some utility methods to JDBC for testing result sets.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@470956 13f79535-47bb-0310-9956-ffa450edef68"
9528482005fb21649034f3153bbbbf680543249d,"DERBY-2043 (partial) Cleanup some of the connection methods in TestConfiguration to allow easier
transition of the DataSource code into the junit package. Add a utility shutdownDatabase() method
to TestConfiguration rather than using a getConnection with shutdown=true and duplicated code
for catching the exception and asserting its SQL state.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@471089 13f79535-47bb-0310-9956-ffa450edef68"
a40888d198b35ef6fa49aac38f0b2edbfc3089ea,"DERBY-2033 (partial) Add login in CleanDatabaseTestSetup to unset database properties as
part of the cleanup. Specifcally unset derby.database.classpath for the DatabaseClassLoadingTest
but others can be added in the future.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@471104 13f79535-47bb-0310-9956-ffa450edef68"
d3965ed0cc60591a0b467f41eaf4cbf1bcc82dc5,"Add *.dtd and messages*.xml to list of exclusions for the derbydocs target.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@471366 13f79535-47bb-0310-9956-ffa450edef68"
1d4b49f7545176a9063a2f193ca4a88888b51091,"DERBY-2014: NullPointerException with NULLIF in GROUP BY clause

This change was contributed by Yip Ng (yipng168@gmail.com)

The NPE happens in isEquivalent() method where it does not handle
value is null. (same symptom as DERBY-2008) and the patch addresses
this + additonal testcases.

The isEquivalent() method is used to compare the select column
against the group by with expression. Note that it is comparing
the structural form of the two expressions for equivalence at bind phase
and not comparing the actual row values at runtime to produce a result.

This patch converts all the tests in the previous patch into junit.
Also the javadoc for ValueNode.isEquivalent() method has been updated.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@471459 13f79535-47bb-0310-9956-ffa450edef68"
45da985a2123ee87c07f5a39b9c0a68ea43a6919,"DERBY-2043 DERBY-2047 (partial) More connection utility method cleanup to provide a single consistent
shutdownEngine() method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@471808 13f79535-47bb-0310-9956-ffa450edef68"
f102dab111c498725fd893ac8bbe1b386096711c,"DERBY-2046: Make class org.apache.derby.iapi.store.raw.PageKey final

The methods of the PageKey class are called frequently both from the
lock manager and the cache manager. Since no other classes extend it,
it should be declared final to help the run-time compiler optimize the
method calls.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@471862 13f79535-47bb-0310-9956-ffa450edef68"
ec5ae26da0a0c7d1b4902be7e1fb5027f820531e,"DERBY-2023: Ensure all tests called by jdbc40._Suite run in embedded
and client as required

The attached patch (derby-2023.diff) makes most of the tests in
jdbc4._Suite run in client and embedded. The exceptions are

  - ClosedObjectTest
  - StatementEventsTest
  - XA40Test
  - UnsupportedVetter
  - DataSourceTest

These tests can only run in embedded mode until DERBY-2047 has been
fixed, and I have added a note about it in their suite() methods.

jdbc4._Suite is removed from jdbc40.runall.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472016 13f79535-47bb-0310-9956-ffa450edef68"
cef7d1e0b049f72f0597fb2de04bdfa723de86cc,"DERBY-2036 DERBY-2043 DERBY-2047 (partial) Re-work connection handling in JUnit tests.
Create connection factory Connector with two implementations, DataSourceConnector and DriverManagerConnector.
This ensures that running tests does not attempt to load DriverManager when running tests with JSR169.
Ensure DataSource implementation sets user name and password from configuration for the getConnection()
method to ensure the ChangerUserTestSetup works.
Refactor the setting of data source Java bean properties to be from a HashMap rather than a Properties
object to ensure that no special code exists at the lowest level to deal with different property types.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472187 13f79535-47bb-0310-9956-ffa450edef68"
8ed08b209d02ef3e28538f5c81a341b2a4792424,"DERBY-2023 DERBY-2047 Add JUnit utility class J2EEDataSource to return XA and ConnectionPooling
data source implementations. Split out from JDBCDataSource to ensure no class not found exceptions
when running in JSR169. Changed JUnit tests using the old harness class TestDataSourceFactory
to use the J2EEDataSource and/or JDBCDataSource.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472228 13f79535-47bb-0310-9956-ffa450edef68"
c5eb0bccea9e9ba36086ac8c9a05a1c4d2beb849,"DERBY-2052: JDBC.assertRowInResultSet compares the wrong value if using
trimmed strings and a SMALLINT column exists. 

Patch that 1) moves the locally scoped variables in JDBC.assertRowInResultSet()
into the for loop, and 2) sets the ""obj"" variable through all paths.

Contributed by Dan Debrunner (djd@apache.org) 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472391 13f79535-47bb-0310-9956-ffa450edef68"
25dd7cdc8fb30c9ef27d5965b14c3d9a8b22b07f,"DERBY-2048 Add an additional cleanup step(compression) to cleanDatabase() method.
After objects removal is performed via removeObjects(), object compression is performed in the
new compressObjects() method on the SYS.SYSDEPENDS to compact the system table.
(Currently it only compress this system table.)

Contributed by Yip Ng yipng168@gmail.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472613 13f79535-47bb-0310-9956-ffa450edef68"
e1e749246af09b79dac42c93c16642a8ba4a02fb,"DERBY-2033 (partial) All of the test cases from dcl.sql are converted to DatabaseClassLoadingTest
except those related to jarring up the database and runing tests against that read-only database.
Add DatabaseClassLoadingTest into lang._Suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472704 13f79535-47bb-0310-9956-ffa450edef68"
419724b6aec525aea39fec90e31a6d2604a69156,"DERBY-2047 (partial) Expose the generic data source (bean) property setting method in JDBCDataSource
and change DataSourcePropertiesTest to use it as part of clean up to ensure clean separation between
old harness code and JUnit code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472707 13f79535-47bb-0310-9956-ffa450edef68"
ab894304bf397cfe4d90d0927c92709075ec8bed,"DERBY-1490: Provide RENAME COLUMN functionality

This patch provides a new statement:

  RENAME COLUMN [schema.]table.column TO new-column

The patch contains sqlgrammar.jj changes which implement the new syntax
using the existing execution support in RenameConstantAction.java. The
patch also includes new tests in the lang/altertable.sql test program.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472708 13f79535-47bb-0310-9956-ffa450edef68"
ee7f66845e2f5e9f03bc461caa3da74a390b580f,"DERBY-2047 DERBY-1952 (partial) Implement the ability to run with the default connction coming from
an XADataSource as a decorator via the utility method TestConfiguration.connectionXADecorator.
This will replace the functionality driven by the property derbyTesting.xa.single.
Improved jdbc4.ConnectionTest and PreparedStatementTest to also run their test fixtures with
this XA decorator. This will replace the old harness suite jdbcxa40 which does not seem to be part
of derbyall but the new runs are part of jdbc4._Suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472722 13f79535-47bb-0310-9956-ffa450edef68"
a3006896f38aa95be1181f4d58be4a713d9c4f39,"simple update to the master file specific to ibm 15 jvm. This file 
did not seems to have got updated correctly  with  sql file
copyright changes. 
   



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472738 13f79535-47bb-0310-9956-ffa450edef68"
4882b30510b8c7a645129499bd7f262fb0d235b0,"DERBY-2050: Manipulating CachedItems could be more efficient

Use five boolean fields instead of one int to record CachedItem's
state. Contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472803 13f79535-47bb-0310-9956-ffa450edef68"
2a9fe8a820f1613231d64d1eecbf5bee819f7143,"DERBY-2038: lang/releaseCompileLocks.sql and lang/closed.java fail
under JDK 1.6 in insane mode

Added sed scripts which deleted the differing parts of the stack trace
from the test output.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472859 13f79535-47bb-0310-9956-ffa450edef68"
9d8608efec78f8c14d18e5e36df83b9c1ceac975,"DERBY-2000: Granted permission to create derby.system.home to derby.jar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@472902 13f79535-47bb-0310-9956-ffa450edef68"
3ca3bd453ff91f7cca80cc202f3724350b2027d4,"DERBY-1952 DERBY-2047 Remove the remaining code directly related to derbyTesting.xa.single.
This functionality has been replaced with a decorator.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473079 13f79535-47bb-0310-9956-ffa450edef68"
0c9f73e3c2651556a7a112c02e95ae71828e0575,"DERBY-2063 (partial) Change ShutdownDBWhenNSShutsDown from being a JUnit test run under the old
harness to one that is run as a regular JUnit tests. Add a new _Suite for derbynet and hook it
into suites.All and the ant junit-all target. Required fixing some bugs in the DriverManager
connection handling. Also refactored NetworkServerTestSetup to allow starting the server
from the ""command line"" and to provide some utility methods for tests, e.g. to get
a correctly setup NetworkServerControl.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473123 13f79535-47bb-0310-9956-ffa450edef68"
b1c5200c6045e42850f39d155647876943226b6a,"DERBY-1952 DERBY-2047 Convert store/BootAllTest to run as a standard JUNit test and
not within the harness. Added a store._Suite and hooked it into the suites.All and
the ant junit-all target.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473175 13f79535-47bb-0310-9956-ffa450edef68"
b29215ba3aba0ac592d5ec18c046d0db3e224192,"DERBY-2063 Add comment to BootTestAll related to this bug.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473176 13f79535-47bb-0310-9956-ffa450edef68"
01fe8675aadfa50c21631ebdb2234e295656e719,"DERBY-2047 Remove TestDataSourceFactory and clean up associated code. Functionality
has been replaced by JDBCDataSource and J2EEDataSource which allows clean separation
for JSR169 which does not include the XA and connection pooling data sources.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473366 13f79535-47bb-0310-9956-ffa450edef68"
420f9d687e28a2451281ec76d2c45098e64c6688,"DERBY-2040 (partial) Create the class loaders (JarLoader instances) for database class loading
within a privileged block.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473387 13f79535-47bb-0310-9956-ffa450edef68"
503757a353daaaefcced401978e70173e7c70096,"Add some comments to ConstantActionActivation to inform how the activation gets
hooked up to the ConstantAction.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473396 13f79535-47bb-0310-9956-ffa450edef68"
aa8a764d711528ff321c11a1a0fcaed3725f171d,"DERBY-2055 1) Adds a new class Load.java to execute the schema scripts for OE within the junit framework.
2) Adds a new utility method to BaseJDBCTestCase to take a resource name and execute it using runScript. 
Contributed by  Sunitha Kambhampati ksunithaghm@gmail.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473413 13f79535-47bb-0310-9956-ffa450edef68"
6989c4c7cd575dc4007371da0deea6f6f6fc4091,"DERBY-537 (partial) Cleanup JarUtil removing code that is never called and making class package private.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473416 13f79535-47bb-0310-9956-ffa450edef68"
4d73a7a266a7edaca003310a35c6685d13cf5838,"DERBY-537 Fix JarLoader missed from last commit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473440 13f79535-47bb-0310-9956-ffa450edef68"
c85f934018cc406383281d302c2780db467f3deb,"DERBY-2018: NullPointerException in CREATE VIEW ... VALUES NULL

This patch was contributed by Yip Ng (yipng168@gmail.com)

This fix catches untyped null in CreateViewNode at bind phase (same logic
as CursorNode) and throws the exception. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473603 13f79535-47bb-0310-9956-ffa450edef68"
cb705acc8911e172260e7b123276af68e92787c1,"DERBY-2067: Assert failure in EmbedConnection.restoreContextStack()
when running lang/closed.java

Change the assert so that it doesn't raise an error if the engine has
been shut down.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473687 13f79535-47bb-0310-9956-ffa450edef68"
328846a982eae99ca88787172df239beb3d1eb78,"Fixed wrong class name in copyright header.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473688 13f79535-47bb-0310-9956-ffa450edef68"
273ce5e6c3e318bec9690b6a51ce6394319ff56d,"Add decorator SupportFilesSetup which allows resources to be copied from the classpath
into the extin, extinout & extout folders to match the old harness behaviour.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473778 13f79535-47bb-0310-9956-ffa450edef68"
3cfc85727d0a9c6bdf36397b4aafae4faf3fb289,"DERBY-537 (partial) Change the DatabaseClassLoadingTest to install and replace the jar files using
the SupportFilesSetup decorator so that the engine will have the correct permissions to read the jar files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473780 13f79535-47bb-0310-9956-ffa450edef68"
767541b4c256b177f232589ddabb1fd936c95214,"SupportFilesSetup needs to convert from the File to a URL in a privileged block as
that operation requires the permission to read user.dir.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473783 13f79535-47bb-0310-9956-ffa450edef68"
ed1c2e3b7815ae52afd7eb995d65e2d0ab1a9211,"DERBY-537 (partial) Fix the reading of the jar file (through a URL or file name) for sqlj.install_jar
and replace_jar to be under a privileged block. Switched the order of lookup from the jar path to
be URL and then as a file name. Otherwise a security exception is thrown trying to open the URL
path as a file name.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473828 13f79535-47bb-0310-9956-ffa450edef68"
9fef6397a8f9158d128056dbaf91285ec3092e05,"DERBY-537 (partial) Call FileResource.add in a privleged block when executing code to add a jar,
driven by sqlj.install_jar. Allows one test fixture in DatabaseClassLoadingTest to be executed
with a security manager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@473834 13f79535-47bb-0310-9956-ffa450edef68"
29788637f7303804cb3c98a6ebce45b0485760c5,"Clean up javadoc comments in ClientBaseDataSource to make them more
readable in the published API.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474015 13f79535-47bb-0310-9956-ffa450edef68"
609999f74dd887f883ce28c18d4f45a915b0dcf8,"DERBY-537 (partial) Remove some dead code for handling jar files stored within the database.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474376 13f79535-47bb-0310-9956-ffa450edef68"
43da0260a5f4fbf998a9ec14c4763de1f3276e9f,"DERBY-1495: Error modifying an identity column after altering the column
DERBY-1645: ALTER TABLE SET INCREMENT turns off ""Generated By Default""

This patch changes ModifyColumnNode.bindAndValidateDefault so that it
detects the case(s) where the user is altering aspects of an identity column,
and ensures that the other aspects of that identity column are preserved and
not lost. The crucial issue is that if the column is Generated By Default,
then the DefaultInfoImpl column in the SYSCOLUMNS table needs to get
retained when the user uses ALTER TABLE to change either the start value
or the increment value; otherwise the behavior effectively switches from
Generated By Default to Generated Always.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474502 13f79535-47bb-0310-9956-ffa450edef68"
009a32cecc35e715dd48a2a9dda7c12a51c4ff00,"Add utility methods for JUnit tests to get a DataSource based upon the current configuration
but pointing to a different database and to shutdown a database from a data source.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474552 13f79535-47bb-0310-9956-ffa450edef68"
3e679b4cd3101ff146719914a204ae4c55783525,"Grant permission to read ${user.home}/junit.properties to all. Left it in the
previous section so that this new section just needs to be removed once
CompatibilityTest has been rewritten.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474593 13f79535-47bb-0310-9956-ffa450edef68"
bbf9d12af22c66478a607828aff634cc7b3facd4,"Simplify the interaction between the monitor and the StorageFactory when the
monitor is obtaining a list of services to boot. Cleaner code avoids creating
a new StorageFactory implementation for each file and handles non-directories cleaner.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474619 13f79535-47bb-0310-9956-ffa450edef68"
eadd153467f7c508453608693d81aee821088ba7,"DERBY-2030: 'show tables' should show system tables.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474628 13f79535-47bb-0310-9956-ffa450edef68"
5cc38754a4ce304ad1b2b5d76844882b781699da,"DERBY-801: Allow parallel access to data files

This patch (DERBY-801-7.patch) turns the DEBUG_PRINT messages in
RAFContainer4 into assertions guarding the method entry points.

Patch contributed by Anders Morken.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474695 13f79535-47bb-0310-9956-ffa450edef68"
2ba89c5510fb87efe0582d8a39a68caeb0136283,"DERBY-638 Network driver setTransactionIsolation() causes a commit, but does not complete it locally

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474720 13f79535-47bb-0310-9956-ffa450edef68"
90e68d801e90e828dfc34376a6a234847aaba45b,"DERBY-2054: Rewrite test derbynet/SuicideOfStreaming to JUnit. Moved tests ByteArrayCombinerStreamTest and SqlExceptionTest from old harness to suites.All.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474803 13f79535-47bb-0310-9956-ffa450edef68"
02985805ac403a273fc2bb59ea88f92f5a4fde2e,"DERBY-2033 Convert remaining tests from dcl.sql to DatabaseClassLoadingTest including those
that execute against a database in a jar. Database in a jar tests pass but cause an issue on
clenaup which is entered as DERBY-2083.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474878 13f79535-47bb-0310-9956-ffa450edef68"
d1cecebe9dc5eb94573f088f92849eeb9186a055,"DERBY-2033 Remove the old dcl.sql test from the old harness.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@474884 13f79535-47bb-0310-9956-ffa450edef68"
cbcd40f3dd958529323385ff7da43c3e81556c99,"DERBY-2057
contributed by Yip Ng
patch:  derby2057-trunk-diff02.txt

Fixed SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE() implementation to match
documentation.  Arguments should treat non-zero as ""true"", previous to this
fix only ""1"" was treated as true.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475330 13f79535-47bb-0310-9956-ffa450edef68"
dfdbf62a5da06acc2767138e7a817ea7070a6c0a,"DERBY-2089: jdbc4/VerifySignatures.junit is failing

Adding ""create=true"" so that the test database is created.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475370 13f79535-47bb-0310-9956-ffa450edef68"
bfe700793a706cd5193acc39e4033db648a4d01d,"Remove test cases from functions.sql that are covered by MathTrigFunctionsTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475446 13f79535-47bb-0310-9956-ffa450edef68"
d8a9518743673dd044497cf6026c01bb9dfbb134,"DERBY-1030 (partial) Add a new JUnit test class intended to hold all routine (procedure and function)
test cases. Migrate some test cases from functions.sql related to checking the RETURNS NULL or CALLED
on NULL INPUT clauses for functions. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475449 13f79535-47bb-0310-9956-ffa450edef68"
d2cb094dc7d4f7d7d7c938b549a188ef919af39c,"DERBY-1030 (partial) Add test cases to RoutineTest that demonstrate this bug, where
a function declared as RETURNS NULL ON NULL INPUT can be called when its argument is NULL.
Look for the comment with this bug number.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475490 13f79535-47bb-0310-9956-ffa450edef68"
8a24f4ae868c38a3edb8cf702e85298e0f9c5b39,"DERBY-1030 (partial) Remove test cases from functions.sql that are covered in RoutineTest (junit test).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475492 13f79535-47bb-0310-9956-ffa450edef68"
cbce79786be69ecde3afc2783a13939abce7a84a,"Removed javadoc templates which hid the excellent javadoc for StoredPage.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475724 13f79535-47bb-0310-9956-ffa450edef68"
911b189933c75f7ba1a7d9d4910109add630a810,"Fix javadoc warnings in JarUtil.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475728 13f79535-47bb-0310-9956-ffa450edef68"
21c4432c71bb50e40df6e4245348ce95bfdfac77,"DERBY-927 (partial) StorageFactoryService needs to allow for the return for StorageFile.list()
being null as documented in the api.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475779 13f79535-47bb-0310-9956-ffa450edef68"
0767f34d796432cb9f6a8abc89ccad216a8b221e,"DERBY-927 (partial) Clean up code related to serviceProviders to aid progress towards
merging services and storage factories in the monitor.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475780 13f79535-47bb-0310-9956-ffa450edef68"
7d3ddb176797f181a1b183a88828a0d9aa2f0b9b,"DERBY-1030 (partial) Add some comments to the logic for the RETURNS ON NULL INPUT's state field.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475803 13f79535-47bb-0310-9956-ffa450edef68"
f73afdc0a1042240f53ce9ffb97b813b77724c2f,"DERBY-1693: Log a token in derby.log for LOBs instead of the actual content when derby.language.logStatementText=true (token: ""NULL|[BC]LOB(<length>|<stream class>)"")


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@475817 13f79535-47bb-0310-9956-ffa450edef68"
00b1b6d285035f4cccd8896d8d4c7a82fc5a126d,"DERBY-2084 getTransactionIsolation() in network client should not activate a transaction

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476087 13f79535-47bb-0310-9956-ffa450edef68"
f3271c1255a90d75cebf181e8dfe69826731887c,"Null out the NetworkServerControl in the tearDown method of the
network server decorator. This seems to stop future startups of
the server taking 60+ seconds and causing tests to fail.
Will add a note to DERBY-1966 that this is a possible cause of
network start delays. Also null of the FileOutputStream field.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476180 13f79535-47bb-0310-9956-ffa450edef68"
79db9c5f5483867388f089a2849ccb9a96a34ec5,"Change GroupByExpressionTest to use the standard CleanDatabaseTestSetup rather than
its own mechanism to drop objects.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476182 13f79535-47bb-0310-9956-ffa450edef68"
1573d084e7147158d35c6b90b6cf71aaa0b9faa8,"DERBY-2093

Fixed error in initSlotTable() to print the right page info in case
of error during initialization of page from disk into cache.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476190 13f79535-47bb-0310-9956-ffa450edef68"
b9e26f352153547ee80ab29e2ab358417814a9cc,"Ensure ConcurrencyTest closes the second connection it opens in some fixtures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476195 13f79535-47bb-0310-9956-ffa450edef68"
05101f8b9ebca9021dd80547b4f32d79b8c910f2,"Null out the DDL connection reference in PrepareExecuteDDL on tearDown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476196 13f79535-47bb-0310-9956-ffa450edef68"
f0c2979111b38d6425255efe8fd2fdd0aeefc4fb,"Close some Statement objects left open in XMLTypeAndOpsTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476197 13f79535-47bb-0310-9956-ffa450edef68"
d778f79c654d10a9aa9a5b28f19c6cfdc9547b61,"Clean up some asserts and close a PreparedStatement in SURBaseTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476199 13f79535-47bb-0310-9956-ffa450edef68"
9cd0190075346b663c46c235b94091f1fdaffef9,"Close a PreparedStatement in SURTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476201 13f79535-47bb-0310-9956-ffa450edef68"
5b9d0fb0d58743949aa69da8957b3f48ae90649c,"Clean up some assertTrue(..., false) to fail() in HoldabilityTest,
close some ResultSet's left open and simplify the tearDown method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476204 13f79535-47bb-0310-9956-ffa450edef68"
d273976c235e4c8f8d1c058f444adf16b997f209,"Close a CallableStatement in ProcedureTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476224 13f79535-47bb-0310-9956-ffa450edef68"
aa702e30e5666d916da3c6fb3ee9b26198e5cc63,"Close one of the ResultSets used to clean up databases from CleanDatabaseTestSetup.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476315 13f79535-47bb-0310-9956-ffa450edef68"
4316596d5775861afb1fad4040775d2ad3c7ee29,"Various changes to ensure JDBC objects are closed when running the JUnit tests in the jdbcapi package.
Change UpdateableResultSetTest to become standard and use the connection provided by
the super class.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476316 13f79535-47bb-0310-9956-ffa450edef68"
3b26923126972685a5159c47d30ef9a996a259f9,"Remove reference to the connection once it is closed in derbynet/ShutDownDBWhenNSShutsDownTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476318 13f79535-47bb-0310-9956-ffa450edef68"
d830d176091f29601aa7492d254317a36bcfe63d,"DERBY-2096 (partial) Change the methods in the grammar (sqlgrammar.jj) that return statements to declare thier
return type as the more specific StatementNode rather than QueryTreeNode.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476342 13f79535-47bb-0310-9956-ffa450edef68"
95031f03adc0ee1bee86444d48363ef2ff74be7c,"Remove some unused methods from LanguageConnectionContext,
anyoneBlocked,getAccessFactory,setTransaction

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476353 13f79535-47bb-0310-9956-ffa450edef68"
cd4ba4a7e0eb8db4271599e9cf946b5f01dca6a1,"DERBY-1758 (partial): Adds a new JUnit test to replace the old
lang/xmlBinding.java test. The patch does the following:

  - Adds XML file insertion utility methods to junit/XML.java
  - Creates a new JUnit test called lang/XMLBindingTest.java that
    uses the new utility methods to test various binding scenarios
    with Derby's SQL/XML operators.
  - Overloads the TestConfiguration.defaultSuite() method with a boolean
    signature to allow optional addition of CleanDatabaseSetup.
  - Updates lang/XMLTypeAndOpsTest to use the new overloaded defaultSuite()
    method. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476365 13f79535-47bb-0310-9956-ffa450edef68"
5c058ac183999dd0530f3b658a0b7c61fef8a73a,"DERBY-1849 - grantRevokeDDL and grantRevokeDDL2.sql fail with ibm wctme5.7_foundation (jdkJ2ME Spec v1.0)
- accepting that triggers are not supported with this jvm
- updated masters to latest syntax changes in test
- stopped NPE by adding ij.dataSource properties to grantRevokeDDL2.out



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476425 13f79535-47bb-0310-9956-ffa450edef68"
22bbef72e2c8f5d1dace14c5ae4bb8d8bcb6fddd,"DERBY-2049 - parameterMapping and updatableResultset failing with wctme5.7 foundation
- updated j9_foundation output to reflect new messages
- adjusted test 48 to not run BigDecimal queries



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476548 13f79535-47bb-0310-9956-ffa450edef68"
bea37702bfb98e09b7fe944abb647c716a1d0250,"DERBY-1850 - jdbcapi/SURTest_ij.sql fails on IBM WCTME 5.7 Foundation (jdkJ2ME Spec v1.0)
- added the required ij.dataSource settings 
- added sedding of first CONNECTION line, to avoid extra master



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476588 13f79535-47bb-0310-9956-ffa450edef68"
62cf239f3c9c84c288834a2872e3250c59f27ce8,"DERBY-1850 - SURTest_ij.sql - after sed-ing for j2ME, missed updating client canon



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476645 13f79535-47bb-0310-9956-ffa450edef68"
e917ffceac6b1aaa1f36015eb4365307aad91d06,"DERBY-2099: Make BasePage.getPageId() final


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@476662 13f79535-47bb-0310-9956-ffa450edef68"
401938ad3db9d23513ecf174124acc4dcb95f7d0,"DERBY-1132: Truncation Error with Concat

The Char & Varchar functions were not handled separately to assign to
length for the target type (in the bindExpression() method of
CastNode.java) and thus a default value of 15 was getting assigned to
it (from getColumnDisplaySize() method of DataTypeUtilities class)

Now I added a check for the string types (i.e. both Char & Varchar) in
the source type, and using the operand's maximum length or the maximum
length for that data type (whichever is minimum) and assigning it to
be the length for the target type. Thus avoiding the unwanted
truncation error caused by the default value of 15.

Patch contributed by Saurabh Vyas.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@477168 13f79535-47bb-0310-9956-ffa450edef68"
70371e5ee0dd64064de69af48605842862a778f7,"Delete three node classes that are not used and have not been modified since the initial contribution.
Also removed them from derby.jar.
HashNodeList, QuantifiedBinaryOperator and QuantifiedUnaryOperator.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@477348 13f79535-47bb-0310-9956-ffa450edef68"
cc770d8ff73df897facfabafa0458268dcb70e26,"DERBY-2096 (partial) Rename the bind() method for StatementNode to bindStatement() as a step
in switching the return type of a parse statement to StatementNode. Make bindStatement() void
as no implementation ever switches the type and several implementations did not handle the
type switching anyway.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@477371 13f79535-47bb-0310-9956-ffa450edef68"
d725d435de540d89bad362d9325486aa4cbf3998,"DERBY-2096 (partial) Rename the optimize() method for StatementNode to optimizeStatement() as a step
in switching the return type of a parse statement to StatementNode. Make optimizeStatement() void
as no implementation ever switches the type and several implementations did not handle the
type switching anyway.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@477420 13f79535-47bb-0310-9956-ffa450edef68"
4631dd7dbb60386564b66a493fd2c8202bb0d1cc,"DERBY-2102: JDBC.assertFullResultSet should handle byte arrays

Patch contributed by √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@477645 13f79535-47bb-0310-9956-ffa450edef68"
be0b54fa15075b7cda79aaf6ecf74cb5c4b30eda,"DERBY-2096 (partial) Change the main return type from parsing a statement to a StatementNode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@478031 13f79535-47bb-0310-9956-ffa450edef68"
de7372b8e8a995eaa085708ebd7a5313a47f399e,"DERBY-1758 (partial):

  1. Updates XMLBindingTest to ignore the Windows line-ending character
     (""\r"") when counting characters as part of serialization.

  2. Updates XMLBindingTest to run with NO security manager for now.
     This works toward the ""progress not perfection"" goal of incremental
     development.  Once the questions surrounding the security policy for
     JAXP have been answered the test can be updated to run with the security
     manager.

  3. Creates a new JUnit suite, suites/XMLSuite.java, to run all of the
     XML JUnit tests, and enables that suite to run as part of
     lang/_Suite.java, which in turn means it is executed as part
     suites.All.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@478336 13f79535-47bb-0310-9956-ffa450edef68"
85ac92f8a4d0079a7f064e27e3c6aced24454b85,"DERBY-1758 (partial): Remove the old lang/xmlBinding.java test and the
old xmlSuite.  They have now been replaced with lang/XMLBindingTest.java
and suites/XMLSuite.java, respectively, both of which are run with JUnit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@478348 13f79535-47bb-0310-9956-ffa450edef68"
021d9ab1deaf2b5dd03da392be23076b6058dd68,"DERBY-1089: NPE inserting a join into a table with a generated column
DERBY-2015: NPE in INSERT .. SELECT with IDENTITY column

When an INSERT ... SELECT statement inserts a GENERATED ALWAYS identity
column, the identity column's column reference is NULL, since that
column does not have a corresponding column in the SELECT list. This
NULL expression needs to be skipped over when remapping column references
from the SELECT column list to the INSERT column list. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@478622 13f79535-47bb-0310-9956-ffa450edef68"
57bf1148beaf5350abc87ec712a21b51e6315733,"DERBY-812: Scripts to publish Derby test results

Contributed by Ole Solberg.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@478802 13f79535-47bb-0310-9956-ffa450edef68"
34a7cbefa394ab5d8565ce5a7d4fd18b4724a54a,"DERBY-1434: Client can send incorrect database name to server after
having made multiple connections to different databases.

Patch contributed by Julius Stroffek.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@478877 13f79535-47bb-0310-9956-ffa450edef68"
ce802e1949da2700e3b370d7bc9a89b8f6a82d3a,"DERBY-2115: Some master files don't have the svn:eol-style property

Set the svn:eol-style property to native for these files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@478883 13f79535-47bb-0310-9956-ffa450edef68"
0c0db14fd25cedab4eb91ee4c9c25abe43ef6522,"DERBY-2116: Test files missing svn:eol-style

Set the svn:eol-style property to native.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@478891 13f79535-47bb-0310-9956-ffa450edef68"
51fb033a24b21c1245fd728ece336da12e940a44,"Fixed typo in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@479044 13f79535-47bb-0310-9956-ffa450edef68"
24a4c7936adf9a387a0f9124f0d27adcb1e6b5ed,"DERBY-812: Scripts to publish Derby test results

Added licence headers.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@479119 13f79535-47bb-0310-9956-ffa450edef68"
77d89802f2a2a9cfc79aa5428a4899e810a7346b,"DERBY-2110 - correcting typos in a number of messages
- fix involved also updating MessageBuilder.java, because the resulting
  dita file did not correctly replace all quotes when put into html.
- also corrected BlobClob4BlobTest which has the string of message 40X0D
  hardcoded.
- also updated errorCode.out masters, incl. for j9_13 and j9_22, even though
  that's not really needed anymore.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@479527 13f79535-47bb-0310-9956-ffa450edef68"
8a9344042ff4c6ce4a1d57b08a1bda58cc2668fe,"DERBY-2096 (partial) Move needsSavepoint() to StatementNode, remove QueryTreeNode.bind and optimize.
Have GenericStatement use StatementNode for the head of the statement's query tree.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@479886 13f79535-47bb-0310-9956-ffa450edef68"
a396cb11458739e8e83c4772180b786a94f09c65,"DERBY-2110 - removing innocent spaces in the tags


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@480160 13f79535-47bb-0310-9956-ffa450edef68"
98df2e3a23bdf3324879a81623e0b9210ad7a6d0,"Remove imports that are not required.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@480228 13f79535-47bb-0310-9956-ffa450edef68"
352cdc71fca84aefbed2a46dd84ae3d942dbe2a9,"Fixed some formatting/comments and one bugfix.  Also added svn:ignore
to the proper places so things don't accidentally get checked in.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@480299 13f79535-47bb-0310-9956-ffa450edef68"
871a533aa0a4a40e206f62961914a36307598c79,"javadoc fix, removing @return from a void function.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@480664 13f79535-47bb-0310-9956-ffa450edef68"
21c2a9e3b2e862813605436e1891f74f2a056db6,"DERBY-2123: Remove workaround for old JIT bug from StoredPage


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@480861 13f79535-47bb-0310-9956-ffa450edef68"
effc283aade097e280fa2aea6b51e4ea9ba2355c,"DERBY-1919: Commit derby-1919-v01.diff, pointing index.html at the release notes as well as the NOTICE and LICENSE files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481026 13f79535-47bb-0310-9956-ffa450edef68"
9df5f16db06f4718dd8a153b9ed8d4ef5014e01c,"DERBY-2135 - add a note re modifying number of parameters in messages.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481114 13f79535-47bb-0310-9956-ffa450edef68"
378aa34e080280661bb02792c954fdade1a85de4,"DERBY-2131: Use a privileged block when calling out to the JAXP parser
so that users running with a security manager can insert XML values
that reference external DTDs without encountering security exceptions.

This patch does not include any tests; however, relevant test cases
will be enabled as part of DERBY-1758.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481117 13f79535-47bb-0310-9956-ffa450edef68"
0fe7da6bf5c62e547d417b51eddec3b17ef99ef4,"DERBY-2122: Optimize ContainerLock.isCompatible() and RowLock.isCompatible()

Build a bit mask from the compatibility tables in ContainerLock and
RowLock, and replace look-up in two-dimensional array with bitwise
and.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481181 13f79535-47bb-0310-9956-ffa450edef68"
73e555847f2cb58d2a0e06bd65435953963ecc59,"DERBY-2025 convert lang/updatableResultSet.java to JUnit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481252 13f79535-47bb-0310-9956-ffa450edef68"
354d5e8401a3ce9d89a650799c44ca9d0867606e,"DERBY-2096 Move remaining methods that are limited to StatementNode from QueryTreeNode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481421 13f79535-47bb-0310-9956-ffa450edef68"
4fb136d8c68cdee3ac80e2490b6d67b1b3433c13,"organize imports (using eclipse) in a number of query nodes, cleans up several unrequired imports of DataDictionayContext.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481423 13f79535-47bb-0310-9956-ffa450edef68"
92c7572f3f9e1bbd9152ddee9bd2187b204395a1,"DERBY-2096 Missing file from last commit that broke build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481467 13f79535-47bb-0310-9956-ffa450edef68"
ab3aba68a38e0b4d4e149c5b13932bf81e62c55a,"DERBY-1965 Ensure sockets opened by NetworkServerControlImpl are explicitly closed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481574 13f79535-47bb-0310-9956-ffa450edef68"
38b4bbb178f2d124e5ce117d91a080c312cf6ff2,"DERBY-2094 (partial) Initial partial implementation of the order entry test transactions using the
defined behaviour from the appendix TPC-C specification. Only stock level added.
Also added a JUnit testing frame work to test the functionality of the operations.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481602 13f79535-47bb-0310-9956-ffa450edef68"
c18625c55a1485e656ae668a3cd00e843efee84e,"Add comment to ModuleFactory.getApplicationProperties() describing its functionality.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@481611 13f79535-47bb-0310-9956-ffa450edef68"
0d862f7e01d58c8bd062afc9204084c043bbcb89,"DERBY-2140: BlobClob4BlobTest.testSelfDestructiveClob() fails with
""ERROR X0X95: Operation 'DROP TABLE' cannot be performed on object
'TESTCLOB' because there is an open ResultSet dependent on that
object.""

Close ResultSet and Statement in testSelfDestructiveClob.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482129 13f79535-47bb-0310-9956-ffa450edef68"
b1ed977719be8a5e0a4b2927bb1a486d79047889,"DERBY-2129: Update STATUS and CHANGES files before generating 10.2.2 release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482221 13f79535-47bb-0310-9956-ffa450edef68"
95685b13a897f2aeb5fdfbc3890b6769093ed88b,"DERBY-2131 (partial): Change privileged block in SqlXmlUtil.serializeToString()
so that it contains as little code as possible.  Also adds a catch block
around the privileged block to unwrap security exceptions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482303 13f79535-47bb-0310-9956-ffa450edef68"
0b63f406a85af5518503c721c48b5aa066cad96f,"DERBY-1204: TRIGGER with multi-row INSERT action throws OutOfBounds exception

This patch was contributed by Yip Ng (yipng168@gmail.com)

The statement fails because the bindReferencesClause() method in
CreateTriggerNode did not filter those column references that are not
relevent to the conversion processing for OLD/NEW transition variables.
The above trigger action will have the following parse tree: (roughly)

              InsertNode
                 |
              UnionNode
               /     \
        UnionNode    RowRSNode
         /    \            |
RowRSNode RowRSNode  NumericConstantNode
      |       |                    |
 ColRef    NumericConstantNode    333
      |       |
     n.i     999

Note that the CollectNodesVisitor collects *ALL* the ColumnReferences in
the trigger action. In the above case, it returned 3 column references
nodes. One in the top level Union node, one in top level Union Node's
left child which it is also an UnionNode and the last one is found in
the RowResultSetNode.

The UnionNodes will have a copy of the CRs from its left child and
those CRs will not have its beginOffset set which indicates they are
not relevant for the conversion processing here, so the corrective
action here is to skip these entries.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482358 13f79535-47bb-0310-9956-ffa450edef68"
8b62109d9bbafd32f535008edeaf851ac01d6d8f,"DERBY-2037 - tool to flag possible errors in localized message files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482389 13f79535-47bb-0310-9956-ffa450edef68"
c0ef956b2c06edff3a1d4789ac2d461ff2e69c53,"DERBY-1808 Add inbuilt functions SIGN, SQRT, RAND, RANDOM, COSH, COT, SINH and TANH
Patch contributed by  Richard Wheeldon Email: richard@rswheeldon.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482426 13f79535-47bb-0310-9956-ffa450edef68"
f7abbf44dceaae50a0b88ff55ad629cb8c318d3e,"DERBY-1758 (partial): Enable the lang/XMLBindingTest to run under a security
manager. Changes include all of the following:

 - Updates lang/XMLBindingTest.java so that it will run under the default
testing security manager (i.e. removed the ""noSecurityManager()"" wrapper).

 - Adds a new property, derbyTesting.jaxpjar, to the default testing policy
file. This property holds the location of the JAXP jar picked up from the
classpath _if_ that jar is external to the JVM. If the jar is either embedded
within, or ""endorsed"" by, the JVM then this property is unused.

    The JAXP jar is then given permission to read the ""extin"" testing
directory, which is the directory into which the DTD required by XMLBindingTest
is copied (and thus JAXP has permission to read the DTD file).

 - Adds a new static utility method, ""getJAXPParserLocation()"", to the
junit/XML.java file. This method instantiates a JAXP object and then uses
the implementation-specific class name to try to find out where the JAXP
jar is located.

- Modifies derbyTesing/junit/build.xml so that junit/XML.java will only
build with 1.4 JVMs and higher. This is required because junit/XML.java
now references a JAXP class that is not defined in 1.3.

 - Updates the ""getURL()"" method of junit/SecurityManagerSetup.java to account
for situations where a class ""code source"" is null. Also updates the
""determineClasspath()"" method of that class to set the derbyTesting.jaxpjar
property as appropriate.

 - And finally, moves the build order of the derbyTesting/junit directory
so that it is built *before* the derbyTesting/harness directory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482433 13f79535-47bb-0310-9956-ffa450edef68"
d3864a5e0114412404fc073c8274adc55d07a060,"DERBY-1808 Changes to the metadata test also require the master file for the upgrade test to be fixed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482435 13f79535-47bb-0310-9956-ffa450edef68"
15cefdde4c46f65e28194b3da8e9a7ce1b49411d,"DERBY-1529: Add LICENSE and NOTICE files to the Eclipse plugins, update build
instructions

Committed for Rajesh Kartha <kartha02@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482529 13f79535-47bb-0310-9956-ffa450edef68"
365746274aa79d778c404f6185f0fa401a592195,"Have EmbedResultSet obtain its EmbedStatement's result set concurrency directly rather than
going through the JDBC method api which in turns requires the check on if the Statement is open.
In this case it's known the Statement is open since it is creating the ResultSet.
Mentioned as one of the optimizatons in DERBY-1876.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482717 13f79535-47bb-0310-9956-ffa450edef68"
989754659c5749bd4a4a7335d57c9257ae8090a9,"Add some sanity code to make sure that the connection is indeed idle when the code expects it to. 
Also, enhanced XA related test to make sure that writable XA transaction following a read-only XA 
transaction works correctly.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482806 13f79535-47bb-0310-9956-ffa450edef68"
6fd0016a86d5d1f552f47f83e7f44758bc0bef4b,"DERBY-538 (partial) Initial step in cleaning up JarFile/JarFileJava2 as a step to having a single class since
all environments Derby runs in supports the java.util.Jar package.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482812 13f79535-47bb-0310-9956-ffa450edef68"
e33b3b69b5cd25e0f8ee257ba082bf663e2d33f0,"DERBY-538 (partial) Rename jarFile to InstalledJar so that once JarFileJava2 is merged into it the
java.util.jar.JarFile can be used directly without causing confusion.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482835 13f79535-47bb-0310-9956-ffa450edef68"
3bd91350c9438470ac82b7bfb374f53e39fe6186,"DERBY-538 (partial) Move the jar based code from JarFileJava2 to InstalledJar and remove JarFileJava2.
Since J2ME/CDC/Foundation and J2SE both support java.util.jar there is no need to have a zip based
implementation (which was for the JDK 1.1 no longer supported). More cleanup will be done to completely
switch over to java.util.jar.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482850 13f79535-47bb-0310-9956-ffa450edef68"
7de7ab4ed5efc2ed847b3d8d001e85eb4fdab781,"Fix build error when compiling just with JDK 1.4


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482894 13f79535-47bb-0310-9956-ffa450edef68"
90735aaf979963a523080566678261286f038d2e,"DERBY-2155: checkDataSource and checkDataSource30 fail in the tinderbox test

Update master files for DerbyNetClient and fix typo in test output.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482972 13f79535-47bb-0310-9956-ffa450edef68"
dd611b804fd86db2a70bdb4f46d82ec00505b1b2,"DERBY-1231 LIKE does not match empty strings when used with a prepared statement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@482983 13f79535-47bb-0310-9956-ffa450edef68"
f1599ea2bc1fb2a1ca10d0f154eb50f4fcbc8411,"DERBY-538 (partial) Cleanup the jar loading code to consistently use the java.util.jar classes
instead of the java.util.zip classes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483108 13f79535-47bb-0310-9956-ffa450edef68"
5739bce65001a9fd0c593bac749a29699ae3ae55,"DERBY-538 (partial) Cleanup the setInvalid methods of JarLoader to remove the option of re-creating the
InstalledJar since it was never used.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483148 13f79535-47bb-0310-9956-ffa450edef68"
3a34caeca3458dd738a08eff95ff4db0a5cb292f,"Fixed this so that you can change the user and the calendar, making
this more easily ""demoable"" without having to change code.  Also
fixed svn:ignore properties for stuff we don't want to check in.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483157 13f79535-47bb-0310-9956-ffa450edef68"
cce33f1a35fb0b5496bf2991105aa077805513f7,"DERBY-538 (partial) Move the functionality of InstalledJar into JarLoader since there
was a 1-1 correspondence between the classes following the recent cleanup.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483160 13f79535-47bb-0310-9956-ffa450edef68"
098002cc4cb866bf4813c535c7cb5cd9b8026f3c,"Fix javadoc errors caused by @see tags that referred to http URLs directly instead of through <a href ... /a>

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483296 13f79535-47bb-0310-9956-ffa450edef68"
40b6aedbaff823bfddd4129db43f666f502151ee,"Fix up javadoc warnings in ExecSPSNode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483307 13f79535-47bb-0310-9956-ffa450edef68"
adffd0bbc028907fc7ec3630eafaf0ec94a60d8d,"Add new, empty files for the new localized message files for merge to trunk.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483354 13f79535-47bb-0310-9956-ffa450edef68"
c221b09c6305b939131000420cf8b6da0f8ac0b4,"DERBY-2143: Merge revision 483352 to trunk, adds updated localized messages
developed during 10.2 release cycle to trunk.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483356 13f79535-47bb-0310-9956-ffa450edef68"
a6fa53ba5973e68ef10df13591a28cfc1e4ed0d9,"DERBY-2153:

  1. Create a new JUnit utility file, junit/JAXPFinder.java, that is only
     instantiated when all required XML classes are in the classpath.

  2. Move the import of DocumentBuilderFactory out of junit/XML.java and into
     junit/JAXPFinder.java. This extra level of indirection combined with the
     conditional instantiation of JAXPFinder ensures that we do not attempt to
     instantiate a DocumentBuilderFactory unless we have the necessary JAXP
     classes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483532 13f79535-47bb-0310-9956-ffa450edef68"
68f38f310018230a8f02658c0c25bca471b89b1c,"DERBY-2143: Split engine messages for new locales.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483596 13f79535-47bb-0310-9956-ffa450edef68"
55ffdfb0aefe3444da222baa79a9acd773f1b603,"DERBY-2083 Ensure the store closes the StorageFactory it is using at database shutdown time.
Add shutdown code for the JarStorageFactory to close the jar file it has opened.
Ensure the monitor does not use a stream opened from a StorageFactory after it has called shutdown().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483606 13f79535-47bb-0310-9956-ffa450edef68"
f47fb7b19fd0b18f31b54bd45b6111855bbaad78,"DERBY-2163: Remove service extension entry from locale jars and derbyrun.jar.
Also remove stale references to COPYRIGHT.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483610 13f79535-47bb-0310-9956-ffa450edef68"
d489155636de59038bb0a11734bf4a22125dfcc6,"DERBY-2132: Mention JDBC4.0 in the javadoc for EmbeddedDriver. Also briefly describe driver autoloading under Java SE 6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483628 13f79535-47bb-0310-9956-ffa450edef68"
7ed7c116b668ac970459559acf1e5fb9b3992368,"Remove NLS comments to prevent possible confusion, fix typo in checklocaleinfo
target


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483642 13f79535-47bb-0310-9956-ffa450edef68"
5a1594161fc5f426ba44a5785b5f9f666e14ef39,"DERBY-552 Fix fetching resources from an installed jar when the database itself is a jar file.
The old code did not handle the case when the length of the resource (jar) entry was unknown.
New code reads the resource from the JarInputStream into a local byte array and returns a
stream based upon that to the application. This also provides better isolation between
the application and derby, denying user code the ability to read the entire jar or
to prevent correct shutdown of the database. Added utilities to AccessibleByteArrayOutputStream
to enable copying an InputStream into a local array.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483653 13f79535-47bb-0310-9956-ffa450edef68"
4d0b400e925f8ec29a9948c8032d9aae7bdd0c75,"DERBY-2143 - committing patch DERBY2143_misc for servlet and test docs.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483696 13f79535-47bb-0310-9956-ffa450edef68"
66f66a11e996d1dfbba76976fb37808093c59d3f,"DERBY-537 Fix sqlj.replace_jar and sqlj.remove_jar to work under a security manager.
Add a test to test the simple mechanics of the the sqlj functions separated from
the jar files being active on the database class path.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483738 13f79535-47bb-0310-9956-ffa450edef68"
1e2aae0386f29e5cd68ffc9678231ffc8b375fc7,"DERBY-2138 (partial) Cleanup imports on impl/sql/execute classes that imported
DataDictionaryContext without using it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483761 13f79535-47bb-0310-9956-ffa450edef68"
6fbf6699108981c9658402c4884d90045bc1fc7c,"DERBY-2138 (partial) Organize imports in impl/sql/catalog for classes that import DataDictionaryContext but do not use it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483762 13f79535-47bb-0310-9956-ffa450edef68"
62675ae22cb96546ac37eab8a02ac621bf04edbd,"DERBY-2138 (partial) More import cleanups in iapi/db


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483765 13f79535-47bb-0310-9956-ffa450edef68"
69373d6eb74d9969e81a5b96d856058b535e0b42,"DERBY-2138 (partial) Cleanup imports in functionTests.util that imported DatadictionaryContext but did not use it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483766 13f79535-47bb-0310-9956-ffa450edef68"
dee279caec54d158b6d6e7be5b3d446e9686368d,"DERBY-2138 (partial) Couple of additional import cleanups for classes that imported
DataDictionaryContext without using it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483767 13f79535-47bb-0310-9956-ffa450edef68"
377a3f9271f7e86ba85d6bf38a71e2e05442fecc,"DERBY-2143 - adding quote that broke the build



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483820 13f79535-47bb-0310-9956-ffa450edef68"
1985a1822a639cb691f0b1d0a56492aa7db9f30f,"DERBY-2164 (partial) Remove AccessFactory (store) from LanguageConnectionFactory and
instead code can find the AccessFactory from the Transaction object.
The AccessFactory getAccessManager() method already existed but was not exposed
at the highest level.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@483822 13f79535-47bb-0310-9956-ffa450edef68"
5855202432205ed08fdb6e2c71dccd03bfb2e66c,"DERBY-1856 Added Session.SECACC and Session.CHKSEC to the switch in DRDAConnThread.run()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@484615 13f79535-47bb-0310-9956-ffa450edef68"
5c413c2dbbc1cba625536b3060a483dbd09180d9,"DERBY-2143 - patch DERBY_2143_2110_trunk.diff2; 
  - adjusting the translated messages for changes of DERBY_2110
  - adjusting the translated messages for some removed messages that are
    still present in 10.2 (XJ089, XJ092, 01J03, 01J09, 01J11)
  - modifying message XJ125 to only mention TYPE_SCROLL_INSENSITIVE in all
    languages except ja_JP, zh_CN, zh_TW (don't know those characters enough
    to tell what to remove)
  - reformat DBLOOK_usage message to not wrap in 80 characters



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@484671 13f79535-47bb-0310-9956-ffa450edef68"
2522194858e009cbc76a69aa306c2c9c5ea51444,"DERBY-2083 Fix broken backup/restore tests. Caused by not updating path through code
when a service is directly accessed as a file rather than through the StorageFactory api.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@484672 13f79535-47bb-0310-9956-ffa450edef68"
fb934605b5c5a4a0f7e47df6fcda2db9a9586ece,"DERBY-538 DERBY-2040 Remove the FileResource.getAsStream method as the getAsFile()
method now returns a StorageFile and that class has a getInputStream method.
Incremental step in pushing the JarClassLoader to work off URLs for the jar files
and thus allow use of the standard java.net.URLClassLoader.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@484722 13f79535-47bb-0310-9956-ffa450edef68"
f824190bb03b877d91231529bdd9281fa6b07f06,"DERBY-606 : SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE fails on (very) large tables

Patch Contributed by Mayuresh Nirhali.

Problem was when Allocated Extent associated with last allocated page is being
compressed, All the pages are found to be free, thus new_highest_page is set to
'-1'. Now, when the CompressSpaceOperation is being logged
CompressedNumber.writeInt method is called with value -1. This method is
written to throw exception if the value is less than Zero, hence the 
IOException occurs. 

This patch addresses the problem  by modifying compress 
log record to write the new Highest Page as an uncompressed number, 
if the database is created/hard-upgrade to 10.3. A new Compress Log 
Record Class is created that will read/write new_highest_page in compressed 
format as before 10.3. Old version of compress log Operation is used on 
recovery, if  the log record needs to be replayed on upgrade 
from old-version of the database and also on soft-upgrade to 10.3. 

Test cases for this bug are  added to the existing OnlineCompressTest.java
test and to the upgrade test .




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@484797 13f79535-47bb-0310-9956-ffa450edef68"
4841b0e3e4c4c7cabc93e5c0c384739a848e176b,"DERBY-2138 (partial) Move the booting of the DataDictionary to BasicDatabase from LanguageConnectionFactory
wihc makes more sense once there is a single dictionary per database. Change some calls to obtain a reference
to the DataDictionary from Database instead of looking for the pushed DataDictionaryContext.
DataDictionaryContext context is still pushed, this is an incremental step to removing it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@484841 13f79535-47bb-0310-9956-ffa450edef68"
2b7530f1b67da6b42994581481567e1c3e57b541,"DERBY-2040 (partial) Change the api for jarReader to return the StorageFile rather
than the (potentially) opened jar. Removes the possibility for user code to
access the jar by calling methods of JarReader directly (and hence abusing any
privileged blocks that would be required while opening the jar). Cleans up JarLoader
by having explict calls to open the stream or file within the class loader.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@486201 13f79535-47bb-0310-9956-ffa450edef68"
cacb73f0216a585382c5557e86fefdf76df969c5,"DERBY-2138 (partial) Cleanup DependableFinder and associated classes by removing an unused method
and adding comments to related classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@486240 13f79535-47bb-0310-9956-ffa450edef68"
1b9761e7130008298cb1f9ba282b4982fb41604c,"DERBY-2143 - 1 more master/canon update


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@486321 13f79535-47bb-0310-9956-ffa450edef68"
2bb479f169049e05f3979c64ea138a0fb43851e9,"DERBY-2138 Remove the DataDictionaryContext and instead use the fact there is a single DataDictionary per database.
Cleanup DependableFinder to take a passed in reference to a data dictionary rather than trying to find the data
dictionary from the context.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@487307 13f79535-47bb-0310-9956-ffa450edef68"
616634fd67e652a346e2ee29d3ae77a6449b66f6,"EmbedCallableStatement.executeStatement stuffs the output parameter value into
ParameterValueSet object. But ParameterValueSet object which is fetched at the
beginning of the method might not be the valid object if a new activation object
got created for the Statement because it was invalid. I am making changes such
that a fetch of ParameterValueSet object into a local variable is done after
the possiblity of new Activation object has been accounted for. I have also put
javadoc comments for the users of ParameterValueSet object which is returned
by EmbedPreparedStatement.getParms method.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@487314 13f79535-47bb-0310-9956-ffa450edef68"
0958c84ffda9ed45e9d8ecc8baa8f40ce3f3919f,"DERBY-1644: NPE when inserting values to tbl w/ identity col gen by default

When the VALUES clause encounters multiple rows, it generates a UNION
node tree to combine the rows to be inserted. InsertNode notices the
top-level UNION node and calls the special checkAutoincrementUnion()
method which knows how to recursively traverse the Union tree and
call checkAutoIncrement() on the underlying RowResultSetNode instances
at the leaf level of the tree.

HOWEVER, when the number of columns in the rows in the VALUES clause
is a subset of the number of columns in the table we're inserting into,
the top node of the tree is not a UnionNode, but is rather a
ProjectRestrictNode. This means that we skip past the UnionNode test and
just call checkAutoincrement(), which processes the PRN but doesn't
go down to the RowResultSetNode(s) at the leaf level.

This leaves the ResultColumn instance at the leaf level with a NULL column
descriptor, which causes the NPE during the code generation phase.

And, there is a second, related problem. The enhanceRCLForInsert() call
is also only made at the top level of the tree. However, this call is a
necessary pre-condition for calling checkAutoincrement() because
enhanceRCLForInsert() ensures that the proper ResultColumnList values are
in place prior to the checkAutoincrement() reconciliation of the column lists.

The patch solves these problems by merging the code from InsertNode.bind
together with the current recursive processing in
ResultColumnList.checkAutoincrementUnion() to produce a new recursive
routine, which I have called enhanceAndCheckForAutoincrement(), which will
recursively traverse the ResultSet tree, calling *both* enhanceRCLForInsert()
and checkAutoincrement() on the various nodes in the tree.

Thus the primary ideas involved in this patch are:
 - When an INSERT statement will insert multiple rows from the VALUES
   clause, the compiler will compile the various values into a tree of
   UnionNodes with RowResultSetNodes at the leaves of the three
 - The columns specified in the INSERT statement may be a subset
   of the rows in the table. The ""extra"" columns need to be constructed by
   the INSERT statement, either by generating NULL values for those
   columns which are nullable, or by compiling a default values for those
   columns which have DEFAULT values, or by generating a value for an IDENTITY
   column which is GENERATED. The work of constructing these extra
   column values is done by genNewRCForInsert.
 - For columns which are GENERATED ALWAYS, we must make sure that
   the INSERT statement doesn't allow the user to insert their own value for
   the generated column.
 - The columns which are specified in the INSERT column spec may not match
   the order in which the columns arise in the table. Therefore, the column
   values may need to be re-ordered by the INSERT statement so that they
   occur in the proper order.
 - In the case when the ResultSet which provides the values for the INSERT
   statement is not just a single node, but is rather a tree of UnionNodes, the
   above processing needs to happen throughout the tree, not just at
   the root node. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@487414 13f79535-47bb-0310-9956-ffa450edef68"
312d86c00f2144a8364e53450d2b79e0a46a590e,"DERBY-2179 Temp fix to the test to avoid installing a thread context class loader and
losing the previously installed one. Can be omitted beacuse the actual portion of
the test fixture that uses the class loader is blocked by DERBY-2162.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@487655 13f79535-47bb-0310-9956-ffa450edef68"
cd66ed9251bfbf804b35fb79aaaff331bc1d4fab,"Correct typo in checkForAutoIncrement javadoc

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@487656 13f79535-47bb-0310-9956-ffa450edef68"
dcd3fecf30f97b30adfa7df8a33be63709e26619,"DERBY-2164 Add some comments to EngineType class and clean up its use.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@487742 13f79535-47bb-0310-9956-ffa450edef68"
fefd864fc2675fe51a8f60e4deaf1d9a0b2c4875,"- DERBY-1471 Implement layer B streaming for new methods defined in JDBC4.0 - Patch by Tomohito Nakayama (tomonaka@basil.ocn.ne.jp)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@487788 13f79535-47bb-0310-9956-ffa450edef68"
4e388b42ad5da837045b1e0d0d171050347f6b6a,"DERBY-2147 Enable code that allows pattern and escape in LIKE predicate to be column references

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@488672 13f79535-47bb-0310-9956-ffa450edef68"
5bef2530497b9ec7199908894fbe035c38d67842,"DERBY-2129: Record release of 10.2.2.0 in the STATUS file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@488803 13f79535-47bb-0310-9956-ffa450edef68"
b0db1404d616d0d6309d25b7979f80ab40b514e4,"DERBY-2152: Support diagnostic ""table functions"" for querying Derby diagnostic
VTIs that take parameters.  The table functions are exposed via the TABLE
constructor syntax:

  SELECT <rcList> from
    TABLE ( <sysdiag-schema>.<vti-table-name> (<arg-list>) )
    [ AS ] corrlationName

 Note that:

  a. We only support VTI table function names that are in the SYSCS_DIAG schema
  b. The correlation name *is* required, though use of the ""AS"" keyword
     is optional (section 7.6 of the SQL 2003 spec, ""<table primary>"").
  c. The argument list can be empty if the underlying VTI supports it.

The VTI table names that have been added are as follows:

  SYSCS_DIAG.SPACE_TABLE maps to org.apache.derby.diag.SpaceTable
  SYSCS_DIAG.ERROR_LOG_READER maps to org.apache.derby.diag.ErrorLogReader
  SYSCS_DIAG.STATEMENT_DURATION maps to org.apache.derby.diag.StatementDuration


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@488827 13f79535-47bb-0310-9956-ffa450edef68"
41a93158300e16f4211b5c36013bff8aaa807705,"Remove unnecessary imports from NewInvocationNode.java that were added as
part of svn #488827. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@488834 13f79535-47bb-0310-9956-ffa450edef68"
8564463106b41d3252b3fc53104a64b34b21a15d,"DERBY-2191: Cleanup of FormatableBitSet
Removal of dead code. Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@489053 13f79535-47bb-0310-9956-ffa450edef68"
96fe058bf0b387559e3428a6ba47a23acae47b4c,"DERBY-2152: Support diagnostic vti tables that take parameters, such
as SpaceTable

Fix test failures in jdk6. Patch contributed by A B (qozinx@gmail.com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@489597 13f79535-47bb-0310-9956-ffa450edef68"
58588ddaf8e8370fd393dd1b5cdd802f85c254aa,"DERBY-2199: Use initCause() in BaseJDBCTestCase.assertSQLState().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@489603 13f79535-47bb-0310-9956-ffa450edef68"
6c4eebfd693dec4d1dfffdafb41754c3336a8298,"DERBY-2202: DROP PROCEDURE depends on SET SCHEMA

This patch was contributed by Yip Ng (yipng168@gmail.com)

The symptom of this jira is the same as those described in DERBY-1304
for DROP VIEW except that it applies to DROP PROCEDURE, DROP FUNCTION
and DROP SYNONYM statements. (Their bind logic are centralized in
DropAliasNode.) The DropAliasNode's bindStatement() should have created
a dependency on the statement, so when its associated alias descriptor
gets dropped, the statement can be invalidated accordingly. This explains
why subsequent DROP PROCEDURE statement fails.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@491632 13f79535-47bb-0310-9956-ffa450edef68"
433b42c04e93f98bac779e890d07ed588d29f195,"DERBY-2100: Convert derbynet/prepStmt.java to JUnit

Patch contributed by √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@491768 13f79535-47bb-0310-9956-ffa450edef68"
b71ac67f1e03fd18e2d73276320808b0d54a2689,"DERBY-2149: Replace Vectors and Hashtables with ArrayLists and HashMaps in RAMTransaction


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@491769 13f79535-47bb-0310-9956-ffa450edef68"
c3bf4ea66667f63fed9bac86bff5818737b7f0d6,"DERBY-2200: Add performance tests to Derby using the junit perf framework

This patch (derby2200.p1.diff.txt) adds
-- few simple performance tests using the junit perf framework.
-- small addition to the reporting in JDBCPerfTestCase to indicate the
   framework the test is running in.

Patch contributed by Sunitha Kambhampati.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@491786 13f79535-47bb-0310-9956-ffa450edef68"
78920ffe6666ee37645bc92309e1ad9e73145b87,"Cleanup dead code in CreateAliasConstantAction.
Class is now only used for procedures, functions and synonyms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492249 13f79535-47bb-0310-9956-ffa450edef68"
3e89cb9cda0429b7032947dd023958ffb036e008,"DERBY-2202 - catching up one master/canon change


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492253 13f79535-47bb-0310-9956-ffa450edef68"
0270d3d8979c56e72d6a26474c4654ef5b6f0f5b,"Fix javadoc error, readLOBContinuationStream has no parameters.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492305 13f79535-47bb-0310-9956-ffa450edef68"
25a40e5f4f9f9a64fa9aff3ffd6c8f6d7956f982,"DERBY-2183: Trigger recompilation problem when not qualified with schema

This patch was contributed by Yip Ng (yipng168@gmail.com)

The problem was that the compilation schema for the SPS was never set
during its recompilation, it was using the current schema to perform the
recompilation which is not correct. It should have use the SPS's
compilation schema to do the recompilation when we push the compiler context.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492353 13f79535-47bb-0310-9956-ffa450edef68"
5b125637d8a30cf2ae81e7ee2aaa8a52b09c636e,"DERBY-1673: Remove mention of jikes in build instructions, buildfiles, and code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492393 13f79535-47bb-0310-9956-ffa450edef68"
5d8b25715982c42504acdc40fe7b8042fd3ff648,"DERBY-2195: Trigger problems after maximum trigger count exception

This patch was contributed by Yip Ng (yipng168@gmail.com)

The system is not cleaning up the statement context properly. The
cleanup should have been performed in GenericTriggerExecutor's executeSPS
exception handler. The GenericTriggerExecutor is responsible to make sure
the SPS execution is cleanup correctly.

In addition, there is another potential problem with the exception
handling logic in executeSPS() where it assumes that the SPS has executed
and therefore will have a new statement context and pops it off from
the LCC. This is somewhat dangerous as StandardException can occur before
pushing the new statement context to the stack; hence, this might
result in popping the wrong statement context. So the patch
also addresses this issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492741 13f79535-47bb-0310-9956-ffa450edef68"
21a3353d13c94a7d53109de1f0f0bfe417a9615f,"DERBY-2213 (partial) Add a set of utilities in junit.Derby that allows
test code to determine which Derby functionality is available,
so that tests can exclude themselves if they require tools, engine, client
and/or server. Allows the junit tests to be setup so that they be run
with different classpaths that are a subset of the full set of jars.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492822 13f79535-47bb-0310-9956-ffa450edef68"
c624bbf4a356545c828b44aa37512bd60c3c5f3c,"DERBY-1847: SELECT statement asserts with added column in sqlAuth mode

This is a follow-on patch for DERBY-1847. The problem is that
when DataDictionaryImpl.updateSYSCOLPERMSforAddColumnToUserTable
updates the SYSCOLPERMS table, it updates the table by partial
key value. That means that each time the updateRow() call is made,
the COLUMNS column in SYSCOLPERMS is updated for *all* the
SYSCOLPERMS in that particular table, not just for the particular
SYSCOLPERMS row that we are working with at that instant.

The routine uses a partial key to find all the ColPermsDescriptor
entries for this table, but when it updates those rows, it needs
to use a full key, not a partial key.

DataDictionaryImpl.updateSYSCOLPERMSforAddColumnToUserTable
actually has the correct index row available, because it's just used
that row to fetch the base table row to update. So the fix is 
to pass that index row to the ti.updateRow() call and
specify the COLPERMSID_INDEX_NUM rather than the TABLEID_INDEX_NUM.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492919 13f79535-47bb-0310-9956-ffa450edef68"
aac4640ca699402c11892842d4b042dd895a73b0,"DERBY-2044: Add time, date, jvm, and sysinfo output into the junitreport HTML.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492923 13f79535-47bb-0310-9956-ffa450edef68"
09eb6351e3b4414c6a8ab396070990eae6f3f418,"DERBY-2208: setNetworkServerCP scripts only need to include derbynet.jar in the
classpath. derby.jar is included via the derbynet.jar manifest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492927 13f79535-47bb-0310-9956-ffa450edef68"
28491c951f5d28429c7263c7daa4313bcf63418f,"DERBY-1955: Quote calls to derby_common.bat in other scripts to avoid problems
with paths in spaces to DERBY_HOME.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492930 13f79535-47bb-0310-9956-ffa450edef68"
dba19c89ce0a63ef63a8f009e3f3c986f2577c15,"DERBY-1814: Always compile files in the test hierarchy with debug=""true""


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@492933 13f79535-47bb-0310-9956-ffa450edef68"
a1af992b78a1319f763c9159f0cdaa6b6292ecb7,"DERBY-2215 Change ChangeConfigurationSetup to be an abstract class that allows
subclasses to generate the new TestConfiguration operation at setUp time.
Create three sub-classes to handle changing the database name, changing the
connection handling and switching to a client server configuration.
This ensures that nested changing of configurations works correctly
by creating new configurations based upon the current at the time of setUp.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@493180 13f79535-47bb-0310-9956-ffa450edef68"
5fdf0574828d3ef1fb96c3c3dd3f3307ac28e351,"DERBY-2217 (partial) Cleanup in the junit test configuration to ensure that a copy
of TestConfiguration maintains the connection handling from the copy. All a decorator
to set the default connection handling to use DataSource api.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@493244 13f79535-47bb-0310-9956-ffa450edef68"
10e07a544c2631c76e812a846010adf6283eb08a,"DERBY-2217 (partial) Initial cut at the framework for running the upgrade
tests under Junit. Ues the same class loader approach as the existing test
but only uses a class loader for the old version. The new version is picked
up using  default class loading. Currently only has one real fixture copied
over from the old suite, is not yet intended as a replacement.
Handles multiple old versions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@493247 13f79535-47bb-0310-9956-ffa450edef68"
0aceaa9fb2a3339f69169db7db641c4ad24c3f45,"DERBY-1917: Clob.position fails with search strings longer than 256 chars

This patch was contributed by V. Narayanan (v.narayanan@sun.com)

The position algorithm proceeds in a chunked fashion, searching for 256
byte chunks of the search string at a time. The chunking algorithm contained
two flaws:

  - tmpPatternS = searchStr.substring(patternIndex, 256);
  + tmpPatternS = searchStr.substring(patternIndex , patternIndex + 256);

searchStr.substring(patternIndex , patternIndex + 256); has to actually
return 256 characters starting from patternIndex. This was resulting in
an empty string being returned when the string length exceeded 256.

  - tmpPatternS = searchStr;
  + tmpPatternS = searchStr.substring(patternIndex , patternLength);

Assume that the string length is 258 then in the first iteration it
returned 256. In the the second it was returning the whole string instead
of the remaining two characters. Doing a tmpPatternS =
searchStr.substring(patternIndex , patternLength); corrected this problem.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@493262 13f79535-47bb-0310-9956-ffa450edef68"
cdda215c6a08ac53944daea0bdcd7f482edfe746,"DERBY-2217 (partial) Convert some of the test cases added in 10.2 and 10.3 to the
JUnit upgrade tester.
Change the setup so that the POST_HARD_UPGRADE phase does
not add any fixtures as no connection should be obtained in this mode. This simplifies
most fixtures to not special case the POST_HARD_UPGRADE phase. Explict testing of
this phase still needs to be added.
Have the _Suite skip all tests if the location of the old released jars is not specified.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@494201 13f79535-47bb-0310-9956-ffa450edef68"
daf5fa3f5814974933de48555383222802fb002a,"DERBY-2217 (partial) Add more test cases from the old harness upgrade test.
Change setup for the JUnit upgrade test in UpgradeRun so that version specific
upgrade tests are only run if the old version is older than the version the tests
are intended for. E.g. don't run Changes10_1 tests if the old version is
already at 10.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@494552 13f79535-47bb-0310-9956-ffa450edef68"
d3ebb3c321785d714be70a84d2166d8a8c9ef488,"Cleanup the DataDictionary/LanguageConnectionContext to remove dead code
that allowed the LanguageConnectionContext to define schema names.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@494603 13f79535-47bb-0310-9956-ffa450edef68"
ea8303d41a2174b0dfeac7d910d388fb0acd7aca,"DERBY-2213 Change RoutineTest and TimeHandlingTest not to depend on derbytools.jar.
Ensure IJRunScriptTest runs only if derbytools.jar is present.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@494951 13f79535-47bb-0310-9956-ffa450edef68"
6c7bf48388daf538d2e9037ff217faee33925e8d,"DERBY-2152: Clean-up patch that does the following:

  1. Creates a new ""init()"" method for NewInvocationNode that is specifically
targeted for mapping VTI ""tables"" and VTI ""table functions"" to their
corresponding class names. The new init() method takes both a TableDescriptor
and a TableName, exactly one of which must be null. If the TableDescriptor
is null then we will resolve the TableName to a VTI ""table function""; if the
TableName is null then we will resolve the TableDescriptor to a VTI ""table"".
Thus VTI classes are now consistently resolved inside the NewInvocationNode
class.

  2. Updates NodeFactory.mapTableAsVTI() to make use of the new ""init()""
method in NewInvocationNode. mapTableAsVTI() used to take as a parameter the
resolved VTI class name; now it just passes the received TableDescriptor to
the new init() method in NewInvocationNode and the latter resolves the VTI
class.

  3. Combines the getVTIClassForTable() and getVTIClassForTableFunction()
methods of DataDictionary into a new method, ""getVTIClass()"", that takes a
TableDescriptor and a boolean value. The boolean indicates the kind of
mapping to do--""table"" or ""table function""--while the TableDescriptor holds
the schema and name information used for resolving the class. This resolves
the inconsistency between the argument styles used in the old getVTIClassFor*()
methods.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@494993 13f79535-47bb-0310-9956-ffa450edef68"
11d869953f3d5d57e971f6795515f36d27da386a,"Fix broken link to empty.jar. Needs to be fixed due to new build.sysclasspath
behavior in Ant 1.7.0, which would prefix the jvm classpath to javac tasks if the sysclasspath behavior is not overridden.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495136 13f79535-47bb-0310-9956-ffa450edef68"
68a8372b4cba6d86ee03769861427cc71fe8b5b5,"DERBY-2223: Let BasePage.fetchFieldFromSlot use the special single-col FetchDescriptor ctor.

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495159 13f79535-47bb-0310-9956-ffa450edef68"
bbf601d9016c1b7246489e0338cf731b7e333f5f,"DERBY-2150: Reduce use of synchronized collections in GenericLanguageConnectionContext

Replace Vectors with ArrayLists.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495164 13f79535-47bb-0310-9956-ffa450edef68"
f1fb9310259f52bd241ee1a9e0af4bfc2faa9252,"DERBY-504: SELECT DISTINCT returns duplicates when selecting from subselects

Remove redundant check.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495171 13f79535-47bb-0310-9956-ffa450edef68"
0ae864a6333be73e2193c0f05fd151cc8c1b9f75,"DERBY-2054: Call super.tearDown() in the tearDown-method of the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495213 13f79535-47bb-0310-9956-ffa450edef68"
3334bff1173f54d79c3cdce95967bc73f0e0b198,"Fixed javadoc comment.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495248 13f79535-47bb-0310-9956-ffa450edef68"
c7641f3c3c09a9859f1148abfcea36622e3d6637,"DERBY-1952 (partial) Minor refactoring of jdbc4.VerifySignatures test to make the
checks in the current MethodTestCase use a static method in the parent class.
This is just to set up for the next step where checking will occur without
a test case per method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495301 13f79535-47bb-0310-9956-ffa450edef68"
9f5c33fcf2b2f8a1f19a2bcb098a446ef8af7c30,"DERBY-1952 (partial) Refactor VerifySignatures to run as a single test case per
configuration and thus not rely on the old test harness. Added the test to
jdbc4._Suite and removed from the old jdbc40 harness suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495318 13f79535-47bb-0310-9956-ffa450edef68"
9f608bd0388aafe0bfb8becda67688a26eeb541e,"DERBY-1952 (partial) Copy & refactor AutoloadTest as jdbcapi.AutoloadTest as it
can be used on non-JDBC 4 environments as long as it is not compiled using Java SE 6.
Split into a number of test cases including one to ensure the junit setup is not
autoloading the test (thus potentially hiding real issues) when autoloading is
not enabled. Test runs successfully without the old harness but not yet added
to any ant target as it needs to set the property jdbc.drivers for effective testing.
The jdbc4 version is not removed until this version is running as part of
the ant targets.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495364 13f79535-47bb-0310-9956-ffa450edef68"
3634d6eff239c4388442db7399f3e4445b3d74e6,"DERBY-2121: Remove JDK 1.3 build dependency in network server


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495543 13f79535-47bb-0310-9956-ffa450edef68"
f2e3e69062f983967e593f077cab974185e752b8,"DERBY-1952 (partial) Ensure fixtures in jdbcapi.AutoloadTest are ordered
and add a fixture to test that explicitly loading Derby's JDBC driver works
when auto-loading is enabled. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495603 13f79535-47bb-0310-9956-ffa450edef68"
5e262871d56dfb45ba33aaf48dad2b5604df0706,"Remove classpath element from junit-oneclass target. User should specify the
classpath for what they would like tested.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495657 13f79535-47bb-0310-9956-ffa450edef68"
b2151e8d5dcdc10dc9254b042d5b45d6ac4a2340,"DERBY-2211 Added initial section that describes the on-going migration to
JUnit and points to the wiki for information about running and writing
JUnit tests. An interim solution while the migration is on-going.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495675 13f79535-47bb-0310-9956-ffa450edef68"
814508981dd56172333c37129df15d5943826547,"DERBY-1952 (partial) Add some junit test cases that are wrappers around jdbcapi.autoloadTest
that set jdbc.drivers as a System property before running jdbcapi.autoloadTest fixtures.
These tests are intended only to be run standalone, ie a single run on one test class
in a jvm, as they test autoloading of Derby's drivers by the DriverManager class.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495704 13f79535-47bb-0310-9956-ffa450edef68"
1453acc58b841f81cf7780369a5bf72344249743,"DERBY-64 (partial): Implement CREATE TABLE ... AS ... WITH NO DATA
functionality in accordance with SQL 2003 standards.  In this patch:

 - SQLState.java and messages.xml were modified to add three messages
to flag various errors. These error messages are similar to those
used by CREATE VIEW.

 - sqlgrammer.jj was modified to support the following syntax:

    CREATE TABLE new_table AS subquery WITH [NO] DATA

 - CreateTableNode.java was modified to define a new init method to
take a result column list and a query expression. The bindStatement
method was modified to bind the quiery expression and create the
table element list from the result column list and the query
expression.

 - A new JUnit test, CreateTableFromQueryTest, was added to the lang
suite.

The current patch does not implement the WITH DATA option. 

Contributed by James F. Adams (derby@xemaps.com) 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495750 13f79535-47bb-0310-9956-ffa450edef68"
2a42e33d18be84cf37662e6f020fc88f5dcd9c1f,"DERBY-2217 (partial) Change the property used to locate the old releases to
be 'derbyTesting.oldReleasePath' for the new Junit upgrade test. This is
clearer than the name of the older property for the harness based test and
will allow the tests to be run in parallel while the new junit test is
catching up to all the testing provided by the old one.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@495819 13f79535-47bb-0310-9956-ffa450edef68"
a517b4e51269ddf2c0eb1aaa3255e3d499cd6343,"DERBY-2191: Cleanup of FormatableBitSet

Added unit tests. Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496312 13f79535-47bb-0310-9956-ffa450edef68"
da378dabf16cdea1f995ae351c0e750b5e3dde0e,"DERBY-2242 (partial) Initial class for testing DatabaseMetaData with JUnit.
Only tests a subset of DMD methods at the momement but is added to jdbcapi._Suite
and the build system.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496441 13f79535-47bb-0310-9956-ffa450edef68"
42d8676cb6a12ffff465f6877a17f79e21acabd9,"DERBY-2242 (partial) Add some more test cases and fixtures to DatabaseMetaDataTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496508 13f79535-47bb-0310-9956-ffa450edef68"
19cabb83bd9d2c5dc8cdfcfd0b9e0b88cdacd5a8,"DERBY-2242 (partial) Add more fixtures to DatabaseMetaDataTest that cover almost
all the methods that do not return a ResultSet. Add a utility method
to JDBC to allow simple checking of data types for a returned ResultSet.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496555 13f79535-47bb-0310-9956-ffa450edef68"
83232ed64459c01d4ef8c25b65d26915f9334e13,"DERBY-2228 Ensure that the J2SE data value factory is not booted with J2ME/CDC/Foundation 1.1
which does include java.math.BigDecimal. The J2SE DVF also assumes that JDBC 2.0 is supported
in that it calls setBigDecimal and getBigDecimal methods. Check also that java.sql.Driver is
supported which indicates that JDBC 2.0 or higher is supported.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496567 13f79535-47bb-0310-9956-ffa450edef68"
ff292616e810c0067910036ee531a53c59263fed,"DERBY-2242 (partial) Add more fixtures to DatabaseMetaDataTest and add list of
methods not yet tested.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496580 13f79535-47bb-0310-9956-ffa450edef68"
49b95bc855131059540de3f5c1174f782e974c7b,"DERBY-2157 - test SqlException should not run with JSR169


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496602 13f79535-47bb-0310-9956-ffa450edef68"
6853511976063807d7934ecb9f1c9837905af5d4,"DERBY-2226: Move column bitset computation to IndexToBaseRowNode

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496645 13f79535-47bb-0310-9956-ffa450edef68"
8bb781c875556b30cb3a7c867165d301ad949817,"DERBY-2191: Cleanup of FormatableBitSet

Ensure that value is never null and remove redundant checks for
(value == null). Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496719 13f79535-47bb-0310-9956-ffa450edef68"
835b4700df0aa2167688f942b0cfc6c8f6834d31,"DERBY-2242 (partial) Add more fixtures to DataabaseMetaDataTest and change
 some JDBC.assert methods that check the full ResultSet to
return the number of rows seen in the ResultSet. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496773 13f79535-47bb-0310-9956-ffa450edef68"
e45787f742900dd882538dbb158643b68b391f09,"DERBY-2224 - making old testharness support newer j2ME version


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496847 13f79535-47bb-0310-9956-ffa450edef68"
4ea33cfd4ccdbce829f07a63362cfbff9f6cb44d,"DERBY-2233 - test derbynet/PrepareStatementTest should not run with JSR169


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496911 13f79535-47bb-0310-9956-ffa450edef68"
00d19b58d2c8dc42cdd2a4f75ce1f5239da08566,"DERBY-2197: Remove unused code for locking rows while holding a latch

The patch makes the following changes to the engine code:

1) Removes LockFactory.lockObject(..., Latch) and its implementation in
   SinglePool.

2) Removes LockingPolicy.lockRecordForRead(Latch, ...) and
   LockingPolicy.lockRecordForWrite(Latch, ...) and all their
   implementations.

3) Removes Page.fetch(), Page.update() and Page.delete() and their
   implementations in BasePage.

4) The only caller of Page.update() (GenericScanController.replace())
   has been rewritten to use Page.updateAtSlot(), and an assert has
   been added to check whether row locking is needed.

5) The only caller of Page.delete() (BTreeScan.delete()) has been
   rewritten to use Page.deleteAtSlot(), and an assert has been added
   to check whether row locking is needed.

The unit tests for store and LockFactory have been updated so that
they don't use the removed methods.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@496960 13f79535-47bb-0310-9956-ffa450edef68"
9fdfb4008c23628343ed1e73c0de7d643a68b2c1,"DERBY-2191: Cleanup of FormatableBitSet
* remove unused import
* simplify calculation in numBytesFromBits()
* removed unused variables in toString()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497003 13f79535-47bb-0310-9956-ffa450edef68"
c1e3d96e8b4577bc9c7e93db0d5a00e1abf34fb0,"DERBY-2158 - ensure test.lang.UpdatableResultSetTest runs with JSR169 jvms
- modified test to use JDBC.vmSupportsJSR169 rather than its own mechanisms to
  check for existence of java.math.BigDecimal
- added one more required check



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497026 13f79535-47bb-0310-9956-ffa450edef68"
a985e580557197fa1f1e58e6d34a9fff23273fd5,"DERBY-2241: Removed JDK 1.3 and added Java SE 6 where appropriate. Compatibility test no longer stops on first failure, but continues with next combination.

Patch contributed by Ole Solberg.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497177 13f79535-47bb-0310-9956-ffa450edef68"
6e8ab1f9da16133226ab03ebfd0b05a6742636ae,"DERBY-2095 patch for the load(population) phase for the Order Entry benchmark.

0)Add interface for Load (oe\client\Load.java) so that the load framework is extensible to have different load

implementations.
1)Add the implementation to do the database population using simple insert sql statements per TPC-C specification
Note, this implementation is single threaded. But in future we can add support for multiple worker threads to do the

load phase. (oe\load\SimpleInsert.java)
2) Add cardinality checks for all the tables
3) Add driver that includes performance tests for load phase. (oe\run\Load.java)
4) Add the framework to test the load for a scale of 1 to use it as a functional test. (oe\test\OETest and LoadTester)
5) Remove the earlier skeleton class that loaded only the schema (Load.java is deleted) and instead
Populate.java takes care of providing that functionality.

Contributed by Sunitha Kambhampati - ksunithaghm@gmail.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497297 13f79535-47bb-0310-9956-ffa450edef68"
44370a8d8ce58ad60ec93f5010e727762e7aba24,"DERBY-2150: Reduce use of synchronized collections in GenericLanguageConnectionContext

Use HashMap instead of Hashtable.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497334 13f79535-47bb-0310-9956-ffa450edef68"
72a3df4a95f2dc5ea4c12b1d33e99faf816dc013,"DERBY-2191: Remove unused methods in FormatableBitSet

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497396 13f79535-47bb-0310-9956-ffa450edef68"
aa13c70438d21d9afdee9a7df95cba5379073f24,"DERBY-2191: Make boundary checking more consistent in FormatableBitSet

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497398 13f79535-47bb-0310-9956-ffa450edef68"
740f64e455c6b2fc5a1952ff7e1ed7d115e3840e,"DERBY-2242 DERBY-2217 (partial) Allow the DatabaseMetaDataTest to run from within the
upgradeTests._Suite setup and add it to be run complete when the new engine is being
used (soft upgrade and hard upgrade).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497519 13f79535-47bb-0310-9956-ffa450edef68"
ebb21c442f2140b9e29b5b36bda8ca7e8ff976db,"DERBY-2197 - minor javadoc fixes to problems caused by removing of interfaces
with previous checkin (496960).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497536 13f79535-47bb-0310-9956-ffa450edef68"
76da2f371938c4a8a9fa81d1373ea77c21a67c7b,"DERBY-1952 (partial) Add a test case to the AutoloadTest that sees if when
auto-loading the embedded driver via jdbc.drivers the network server is booted
correctly depending on the state of the property derby.drda.startNetworkServer.
Make the ping network server method in NetworkServerSetup more useful by
splitting it into two, one that pings for 60 seconds and returns if it
made contact, and the previous version which 'fails' if contact could not be made.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497549 13f79535-47bb-0310-9956-ffa450edef68"
01b70561f20db820b3b1fcf0d8e15440f47565ae,"DERBY-2164 (partial) Add Database and Datadictionary objects that support
a 'storeless' engine. This allows use of the JDBC & SQL layers and thus
can execute any SQL statement that does not touch a table, e.g. VALUES 1+1.
The build.xml builds into a separate classes.storeless folder which
separates the code and allows testing of the existing monitor functionality
to use multiple module.properties files. Top-level build changes to
include this code will be in a subsequent commit, to allow it to be backed
out easily if problems arise. Testing will also follow.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497593 13f79535-47bb-0310-9956-ffa450edef68"
e233ac77dafcc5e101ff6f3f6a4115f98154b60d,"DERBY-1952 (partial) Add the Junit tests for testing auto-booting of jdbc drivers into the set run
via ant with their own target junit-autoloadtest. These are also run by the junit-all target.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497609 13f79535-47bb-0310-9956-ffa450edef68"
0e02630a6337734de40f7db226976b4f4fa7daa8,"DERBY-2164 (partial) Build the storeless engine code as part of the main build process.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497615 13f79535-47bb-0310-9956-ffa450edef68"
6120222e7e44700d305693ce3776d02801eddea6,"DERBY-2164 (partial): r497615 broke the build, backed it out.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497644 13f79535-47bb-0310-9956-ffa450edef68"
1462a1309d205342bf3473d47a9eb86bc0c2a85a,"DERBY-2164 (partial) Commit dirs.properties needed by change to build.xml


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497656 13f79535-47bb-0310-9956-ffa450edef68"
6068107758f069d7dff0dbb95409189d40cac410,"DERBY-2164 (partial) Reapply the build.xml file commit (497615) now that the missed change
to the dirs.properties has been committed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497660 13f79535-47bb-0310-9956-ffa450edef68"
a96a2ab6a1fa633fbbadc0fe0528ed04c2ecca6f,"DERBY-2164 (partial) Add the actual storeless implementation files that I thought had
been added under revision 497593 (they were marked as A but did not get added
into the commit for some reason).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497667 13f79535-47bb-0310-9956-ffa450edef68"
0070f97398a1174489b07cf4d23ae3ccfd4740f6,"DERBY-2224 - update j9_foundation master/canons to weme 6.1 (J2ME 1.1) results
- this change includes a change to ij because java.math.BigDecimal
  is now available, but JSR169 does not support methods like 
  ResultSet.getBigDecimal(...).
- this change also accepts incorrect behavior in timestampArith.java, which is
  covered in DERBY-2225.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497678 13f79535-47bb-0310-9956-ffa450edef68"
e55e6be9b35002d2e5fa0c660fa76e376e476125,"DERBY-2216 - enable SimpleApp for J2ME

- patch contributed by Stephen More



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497686 13f79535-47bb-0310-9956-ffa450edef68"
03b3dddb10f30eb579d6284501684669b00fa6de,"DERBY-2236: Three tests from i18nTest fail on SLES with jdk1.4.2 when derbyrun.jar comes before derby.jar in the classpath

Patch contributed by Vemund √òstgaard.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497738 13f79535-47bb-0310-9956-ffa450edef68"
3abe7270cc4010ca75c2b0a9491401841c8501b6,"DERBY-2164: Add classes.storeless to svn:ignore


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497745 13f79535-47bb-0310-9956-ffa450edef68"
1f718563897ea60d83c37801d423a9b120cc2ea0,"DERBY-2166 Implement proper handling of SocketTimeoutException in DRDAConnThread. Submitted by Bernt M. Johnsen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497748 13f79535-47bb-0310-9956-ffa450edef68"
fa4893d84a3185925b57a7e639b0976fe137b84e,"DERBY-2242 (partial) Additional testing of getTypeInfo() for DatabaseMetaDataTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@497919 13f79535-47bb-0310-9956-ffa450edef68"
af4791122782cdba731b289e42555103ca1b681c,"Switch four lang SQL scripts from test harness tests to be run under JUnit with LangScripts
aggregate,bit.sql,LOB.sql and nulls.sql

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498002 13f79535-47bb-0310-9956-ffa450edef68"
a18352f764358f0ade98ba2673364182429876a5,"DERBY-2218: Patch to catch untyped null in SubqueryNode at bind phase.

Contributed by Yip Ng (yipng168@gmail.com) 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498004 13f79535-47bb-0310-9956-ffa450edef68"
e51194c14e1f489819972526e0a31964665c0229,"Add a comment to XMLSuite to indicate it is run via lang._Suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498007 13f79535-47bb-0310-9956-ffa450edef68"
c0d0ae80aa8c57071d69d60b40178a6af364da57,"DERBY-2242 (partial) Remove harness test dbMetaDataJdbc30.java as the new JUnit
DatabaseMetaDataTest covers the tests cases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498013 13f79535-47bb-0310-9956-ffa450edef68"
4a2cd3ce32768da08c4fe4bbde264bcddb489d69,"DERBY-2218: Follow-up patch for additional tests plus removal of an
unneeded call to bindResultColumns in SubqueryNode.

Contributed by Yip Ng (yipng168@gmail.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498689 13f79535-47bb-0310-9956-ffa450edef68"
834e80ecfa732cd5f322a58a002c5b43ea19f749,"DERBY-2242 (partial) More testing for DatabaseMetaData.getTypeInfo

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498710 13f79535-47bb-0310-9956-ffa450edef68"
f68ca1fe50e4d44ae0e9e17d707005fd6c3f77b1,"Convert some language scripts tests to run in the JUnit environment using LangScripts.

cast, floattypes, refActions1, ejbql, synonym, tempRestrictions

Removed some old test scripts.

unlimited (not applicable test of old limited version before open sourcing)
unlimited2 (not run)
ejbql_nonSPS (subset of ejbql)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498716 13f79535-47bb-0310-9956-ffa450edef68"
2f7d49619ae41c83bc51414d29b719cdd34884fd,"DERBY-2243 Modifying the return type for methods like
- supportsANSI92EntryLevelSQL()
- supportsExpressionsInOrderBy()
  in EmbedDatabaseMetaData.java to return TRUE as Derby does support these features
Thus now the behavior is consistent across drivers. 
Contributed by Saurabh Vyas Saurabh.Vyas@Sun.COM

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498732 13f79535-47bb-0310-9956-ffa450edef68"
c7205c15dee596f48e00ea8bcbe257ccbc48ab36,"DERBY-2191: Cleanup of FormatableBitSet

Changed the bitset operator methods or(), and() and xor() so that they
follow the same pattern. All are now performing the operation
bytewise, and there is no special handling of the last partial
byte. The patch also adds a method called invariantHolds() that checks
if the class' invariant is maintained (for use in the unit test).

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498772 13f79535-47bb-0310-9956-ffa450edef68"
8e20531bb20ef1e700c7a66bd440d425622763a1,"DERBY-2217 (partial) Change the upgrade JUnit test to use the non-JDBC 4 data sources
when running in Java SE 6 and against old Derby releases that do not have those data sources.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498816 13f79535-47bb-0310-9956-ffa450edef68"
ee1291ee7201d934f31f675535abe74432de09d8,"DERBY-2242 (partial) Remove duplicate testing from jabcapi/metadata that is now
covered in the JUnit DatabaseMetaDataTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498840 13f79535-47bb-0310-9956-ffa450edef68"
3b11818202b2963da481fc7da7adb5e4f269cdaf,"DERBY-2228 Fix ij's util class to make correct determination if running on J2SE or JSR 169.
Also set DECIMAL parameter in PreparedStatement using setString and retry using setLong if
a conversion error occurs. This fixes the NullPointerExcecption seen in DERBY-680. Previously
the code was using the ResultSetMetaData which was incorrect, as it has no relationship
to the types of the parameters.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498842 13f79535-47bb-0310-9956-ffa450edef68"
561f091a60f73d8564252cf53ee80aa6885b6e12,"DERBY-2243 Modifying the return type for methods like
- supportsANSI92EntryLevelSQL()
- supportsExpressionsInOrderBy()
  in EmbedDatabaseMetaData.java to return TRUE as Derby does support these features
Thus now the behavior is consistent across drivers. 
(forgot this file as part of revision 498732)
Contributed by Saurabh Vyas

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498872 13f79535-47bb-0310-9956-ffa450edef68"
4af67ce232f6a4b68c72409b390568a43bddccb6,"DERBY-2242: Update canons for DerbyNet


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498958 13f79535-47bb-0310-9956-ffa450edef68"
fa8c910d44630c27fd8520dab9eb28b9ca476be3,"DERBY-1704 (partial) Allow more concurrency in the lock manager

  * Made LockSet contain a HashMap instead of extending Hashtable.
  * Fixed some comments about MT/synchronization.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@498999 13f79535-47bb-0310-9956-ffa450edef68"
3df869c3604b945e6be3d98d327196e285ed038b,"DERBY-2087 Create a TestConfiguration.singleUseDatabaseDecorator(Test, String dbName, boolean asDefault)
and also the methods openConnection(databaseName) to BaseJDBCTestCase and all the required infrustructure.
TestConfiguration manages a list of databases in use in a usedDbNames property. The singleUseDatabaseDecorator
creates a new configuration and appends a passed (or generated) database name at the end of the old database list.
Optionally, if specified, the default database might be also changed. 
Renamed the TestConfiguration.getDatabaseName to getDefaultDatabaseName, since it is more accurate now. 
Contributed by Julius Stroffek - Julius.Stroffek@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499100 13f79535-47bb-0310-9956-ffa450edef68"
7a0c00abf3734cc43c85d721f6bac67816d85911,"DERBY-2095 ) Add a new class Checks. This class has fixtures to test for rowcounts, as well as the consistency checks mentioned in Section 3.3.2.1 to 3.3.2.4 of TPC-C specification.
2) Cleanup Load interface to remove the single table loads
3) Remove LoadTester as it is no longer needed
4) Push fixtures to test the rowcounts to the Checks class from the OETest.OETest as well as the Populate test call test fixtures from Checks class.
6) Remove SimpleInsert(Connection,short) constructor as it is no longer needed.
7) Changes in SimpleInsert to make all tables 1 based.
8) Add a new Test Class -Schema to load the schema and cleanup code in OETest and Populate. 
Contributed by Sunitha Kambhampati - ksunithaghm@gmail.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499116 13f79535-47bb-0310-9956-ffa450edef68"
dc66b566c8b924c3ff9e040e45c354636ac719b8,"DERBY-2265 bad code in functionTests.harness.jvm.guessWSHome 
- prevented StringIndexOutOfBoundsException with j9


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499200 13f79535-47bb-0310-9956-ffa450edef68"
089d8429acaa8d7bed3511388d22f6f0585263a3,"DERBY-2103: (workaround) After a Lexical Error due to syntax error, even a simple create table does not work on the same connection.

Patch contributed by Mayuresh Nirhali.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499299 13f79535-47bb-0310-9956-ffa450edef68"
0f57d0e7f813ac4fc690c983364a1e46a808f0cc,"DERBY-1704 (partial) Allow more concurrency in the lock manager

Removed some unused code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499316 13f79535-47bb-0310-9956-ffa450edef68"
01bb780e3547679dabe37834caa94065cf0864eb,"Minor javadoc fixes related to DERBY-2150 and DERBY-2191.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499470 13f79535-47bb-0310-9956-ffa450edef68"
15cbee939707aedd45a469ad19884b44033e3fca,"DERBY-2225 - the problem is fixed in a next version of the jvm, so no further
  need for this master canon.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499506 13f79535-47bb-0310-9956-ffa450edef68"
d56d8eb3b750e0f96f9b12078f2066eeb6959ab8,"Update java/testing/README.htm to
- reflect switch to weme 6.1.1 (from wctme5.7) (DERBY-2224, DERBY-2225)
- reflect stop of support for jdk 1.3.1 based jvms
- add jdbc4 to the list of test suites
- add jdk16 to list of supported jvms in Quickstart section (DERBY-2184)
- add ibm jdk15 to list of supported jvms in Quickstart section
- modify CLASSPATH setting in Quickstart section to reflect theoretical
  split between most derbyjars and derbyTesting.jar. (DERBY-1423)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499590 13f79535-47bb-0310-9956-ffa450edef68"
9f7e88282c9593a66d48b7a6d34f8f8e3a7eec7b,"DERBY-2094 (partial) Add the order status business transaction implementation for oe.direct.Standard.
This implements the transaction using client side JBDC. Now that populating the database is supported
run some test orders status and Stock level transactions in the OETest. Need more validation on the
results of the transactions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499618 13f79535-47bb-0310-9956-ffa450edef68"
8404f5d3c778c2c2746126ead882d53fa7da0b30,"DERBY-2094 (partial) Add implementation of the payment transaction for the order entry test, both as
by name and identifier. Clean up some of the testing to make it easier to run tests of just the transactions
and easier to add scripts.
Fixed an off-by-one error in populating the values for the customer last name.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@499898 13f79535-47bb-0310-9956-ffa450edef68"
155b6a1845849b52d2bd737d7191a3fb1f287f0f,"Fix DropDatabaseSetup to work even if the database was never created.
Previously an assert would fail if the database did not exist at tearDown time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@500142 13f79535-47bb-0310-9956-ffa450edef68"
ddcc51b8e40e37b9e2f4f97af0236ac5952f32cd,"DERBY-2268: AccessControlException when exiting junit.swingui.TestRunner

Grant junit.jar permission to write to .junitsession.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@500171 13f79535-47bb-0310-9956-ffa450edef68"
65a2bbd98f1c2bb613b4a4993245847871dcfbbd,"DERBY-2191: Cleanup of FormatableBitSet

Use unsigned int operations to calculate positions.
Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@500177 13f79535-47bb-0310-9956-ffa450edef68"
24e8abdc556b1f20b9fb379fc9f22216bdc92086,"DERBY-2094 (partial) Add the delivery transactions and a database based queuing system and results file for
those transactions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@500297 13f79535-47bb-0310-9956-ffa450edef68"
b084bcdae35db20b8b1715cab861cb22e9de90eb,"DERBY-2164 (partial) The generic language connection code can be used for the storeless database engine.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@500403 13f79535-47bb-0310-9956-ffa450edef68"
c663c37930213b46e2e2200ebc5f01a1eb76bd26,"DERBY-2242 (partial) Add testing of getTables() to DatabaseMetaDataTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@500439 13f79535-47bb-0310-9956-ffa450edef68"
7be2882c050dd26bf7b9f88c020b77ac3b549210,"DERBY-2242 remove some trace output from DatabaseMetaDataTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@500444 13f79535-47bb-0310-9956-ffa450edef68"
2b3508b2b05f6b616bc78d869ad42199f896f560,"DERBY-1760 - skipping failing tests with remote client


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@500953 13f79535-47bb-0310-9956-ffa450edef68"
17711ecff9ecb0df511188197a978131faf5202b,"DERBY-2191: Cleanup of FormatableBitSet

Re-wrote anySetBit and anySetBit(int beyondBit) to use a single loop
and removed special handling of the last byte.

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501095 13f79535-47bb-0310-9956-ffa450edef68"
59b0bbacb6f956a3b201278e79e87f6c35e82ae0,"DERBY-2191: Cleanup of FormatableBitSet

This patch re-writes the method getNumBitsSet() to do a byte-by-byte
calculation. Contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501334 13f79535-47bb-0310-9956-ffa450edef68"
1a1fb6ae559a8253a5c9f89cd5eae3da5c6300c0,"DERBY-2269 - running tests with SecurityManager with JSR169 support with derbyrun.jar in CLASSPATH causes NoClassDefFounError: javax.naming.Referenceable
- added if (!JDBC.supportsJSR169()) blocks to prevent calls to Class.forName(""org.apache.derby.derby.jdbc.ClientDataSource""). 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501337 13f79535-47bb-0310-9956-ffa450edef68"
c43dca152ae2df0b4ef869069550e146b42d0807,"DERBY-1606 - derbyrunjartest hangs or uses wrong spawned jvm class 
  if code no longer required as we only support foundation and have moved
  the canons so only j9_foundation11 will run without failures; 
  test passes cleanly with weme6.1 (j9 2.3/j2ME 1.1), so no need to skip


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501341 13f79535-47bb-0310-9956-ffa450edef68"
5f9b827cdd9b6390a9563098e4354276cacf723d,"DERBY-2191: Fix javadoc warning


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501350 13f79535-47bb-0310-9956-ffa450edef68"
e9575468e5e0831cc387c33fa669a5117abaaba1,"DERBY-2191: More test cases for FormatableBitSet.getNumBitsSet()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501368 13f79535-47bb-0310-9956-ffa450edef68"
5eee0018151ab7865c76e38d7ef2aca719adcf88,"DERBY-2141 (partial) BlobClob4BlobTest.testPositionBlob() fails with NullPointerException

Preserve original stack trace for exceptions in JDBC 4.0 driver.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501392 13f79535-47bb-0310-9956-ffa450edef68"
d5650e5550ba2ae35e8bb9914d5e456950d71608,"just fixing a few comment typo's - testing out commit configuration from my
machine.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501588 13f79535-47bb-0310-9956-ffa450edef68"
9bbe2e4d82ccfa8d473a22560570a44d7895b666,"DERBY-2134 - add 2 long running system tests to Derby
patch contributed by Manjula Kutty


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501639 13f79535-47bb-0310-9956-ffa450edef68"
d14e499f2a053bf702b7ffadf2ca6f931cee27c4,"DERBY-2279: JDBC3 driver is loaded instead of JDBC4 when running with jdk1.7 (inthe old test harness).

Patch contributed by Vemund √òstgaard.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501833 13f79535-47bb-0310-9956-ffa450edef68"
a72b9de0622e9d10ca342c57d6b3f5cea6f5743b,"DERBY-2277 - enable jdk17 runs with old test harness
 Patch contributed by Vermund Ostgaard


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@501994 13f79535-47bb-0310-9956-ffa450edef68"
8a6ea6dceb1493f32d84f55ff384ef836959f70b,"DERBY-2191: Cleanup of FormatableBitSet

- Fixed bug in shrink() causing some unused bits to not be cleared.
- Fixed bug in shrink() causing ArrayIndexOutOfBoundsException when
  shrinking to 0.
- Throw exception when shrinking to a size larger than the current
  size or growing to negative size.

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@502185 13f79535-47bb-0310-9956-ffa450edef68"
2346370b3616de42c9ac018c6d7429c69da9da0e,"Add some utility decorators/code for the Junit infrastructure to enable easy use
of the default database with SQL authorization and a set of authenticated users. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@502358 13f79535-47bb-0310-9956-ffa450edef68"
4f1a99393ef356c8dd2e38e49d17dc84d13a9b57,"DERBY-1952 (partial) Add a top-level encryption suite EncryptionSuite that runs a set of tests in
encrypted databases with different algorithms. A replacement mechanism for the
encrypted suite in the old harness. Only includes a single test at the moment,
since that is the only converted test that run under the old harness with encrpytion.
EncryptionSuite is not added to suites.All as I'd like to see some more testing
on other platforms before enabling for all.
Added the encryptedDatabase decorators to a new class junit.Decorator to stop
TestConfiguration becoming clogged with decorators.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@502400 13f79535-47bb-0310-9956-ffa450edef68"
e60f8a6148a188e1b094865686a09102df0d3686,"DERBY-2022 Added comment indicating why LobStreamsTest does not run in embedded.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@502409 13f79535-47bb-0310-9956-ffa450edef68"
9eec1fae71d084ec8d563c49b6114b7ed7751a7b,"Fixed typo.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@502527 13f79535-47bb-0310-9956-ffa450edef68"
6254f17a969b53613a505dbb444ddd80c357f484,"DERBY-2242 (partial) Add testing of getColumns() to DatabaseMetaDataTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@502719 13f79535-47bb-0310-9956-ffa450edef68"
03974e3544a67c0bf323799c4e6b55b01296d210,"DERBY-2242 (partial) Add testing of the ODBC getTables to DatabaseMetaDataTest to mimic the old odbc_metadata.java.
Add checking of the nullability of the ResultSets returned for meta data. Includes some utility methods in JDBC.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@502760 13f79535-47bb-0310-9956-ffa450edef68"
10ded9d32853133d22e936b93794ca382c090317,"DERBY-2283 convert lang/currentof.java test to junit test - CurrentOfTest
Contributed by Manjula Kutty mkutty@remulak.net

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@502769 13f79535-47bb-0310-9956-ffa450edef68"
00658db4c9253c0767675016a9fa9f861dcb54ed,"Convert fourteen lang sql scripts to run under LangScripts instead of the old harness.
lang/functions.sql
lang/groupBy.sql
lang/identifier.sql
lang/implicitConversions.sql
lang/innerjoin.sql
lang/intersect.sql
lang/joins.sql
lang/logop.sql
lang/miscerrors.sql
lang/modifyColumn.sql
lang/nonreserved.sql
lang/orderby.sql
lang/positionedDelUpd.sql
lang/precedence.sql

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@502808 13f79535-47bb-0310-9956-ffa450edef68"
363cf3ae1aa5008033dcaa29e761431a68f7711b,"DERBY-2107: Move page latching out of the lock manager

Handle latches locally in BasePage instead of going through the lock
manager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@503440 13f79535-47bb-0310-9956-ffa450edef68"
41fbd581e7d3bd1cf79f96cfef1a44172d37c693,"DERBY-1909: ALTER TABLE DROP COLUMN needs to update GRANTed privileges

When ALTER TABLE DROP COLUMN is used to drop a column from a table, it needs to update the GRANTed column privileges on that table.

The core of this proposed patch involves refactoring and reusing the
DERBY-1847 method which knows how to rewrite SYSCOLPERMS rows
to update the COLUMNS column. The DERBY-1847 version of that code
only handled the case of adding a bit to the COLUMNS column; this patch
extends that method to support removing a bit from the COLUMNS
column as well, then calls the method from the AlterTable execution logic.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@503550 13f79535-47bb-0310-9956-ffa450edef68"
fc2589daa60fb05b0855c976815368549ce41d2b,"Add a JUnit ""adapter"" test that runs old harness "".java"" tests comparing them to a single canon/master
file much like the ScriptTestCase class. Add an concrete implementation for the "".java"" tests in
jdbcapi. Currently an experiment/work in progress, is not hooked into the suites.All and none of the tests
listed by JDBCHarnessJavaTest are removed from being run with the old harness.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@503909 13f79535-47bb-0310-9956-ffa450edef68"
bf49f901ebcb33e655dedfaa04d69625eb741e94,"DERBY-2294: Missing SQL script altertableDropColumn.sql

I removed that test script as part of DERBY-1909, and all of its tests
were moved into altertable.sql, but I forgot to remove the listing for
the file from derbylang.runall. This change removes it from derbylang.runall.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504175 13f79535-47bb-0310-9956-ffa450edef68"
aa02c63983a221b1ac94c62cd59a4455d1d83d2d,"DERBY-2258 DERBY-2259 DERBY-2260 DERBY-2245
1) metadata.properties : Removed entries for LONG NVARCHAR, NATIONAL CHAR, NATIONAL CHAR VARYING data type & added XML data type in getTypeInfo()
2) DatabaseMetaDataTest.java : Removed check for unsupported types (all supported types are specified in supportedTypes array ) from testGetTypeInfo() method & added support for SQLXML type in the test. This requires extending the test to verify the field values for XML data type (like PRECISION, SEARCHABLE etc)
3) connectionJdbc20.out : It requires removing unsupported data types & adding XML data type in the expected output for the test. 
4) Minor changes to getSQLKeywords.
Patch contributed by: Saurabh Vyas Saurabh.Vyas@Sun.COM

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504234 13f79535-47bb-0310-9956-ffa450edef68"
28a04c75093a6daea04d5efb751ad77fe7ec1c37,"DERBY-2258 Modified the assert case for XML data type in DatabaseMetaDataTest.java for precision check.
Patch contributed by: Saurabh Vyas Saurabh.Vyas@Sun.COM

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504241 13f79535-47bb-0310-9956-ffa450edef68"
d9b93a5a7c987695b5d76b4f5cbff15f4d31fac5,"DERBY-2258 patch contained an incorrect master file for connectionJdbc20


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504273 13f79535-47bb-0310-9956-ffa450edef68"
1812ea860ed338df543944eaceb3e6b5c103b954,"Commiting patch DERBY1275EnableClientTracingDiffV5.txt attached to DERBY-1275. This patch adds 2 JVM properties to enable client side
tracing. The properties are derby.client.traceLevel and derby.client.traceDirectory
More info can be found at http://wiki.apache.org/db-derby/UndocumentedDerbyBehavior



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504317 13f79535-47bb-0310-9956-ffa450edef68"
663dfd3a475c1d47213ee98e5f5d65fb8ecc99c4,"Fix security bug in JDBCDisplayUtil where system properties were accessed through
Boolean.getBoolean() without being wrapped in a privileged block.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504430 13f79535-47bb-0310-9956-ffa450edef68"
87f37d63744dea78ba464380aae0e37d47e9cb08,"Updated version of JDBCHarnessJavaTest that includes client/server tests.
Updated version of HarnessJavaTest that supports J2ME/CDC/Foundation.
Initial version of LangHarnessJavaTest that runs 12 tests from derbylang successfully.
These harness test adapters are still not hooked into suites.All and thus the
harness tests they run continue to be run as part of the old derbyall suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504432 13f79535-47bb-0310-9956-ffa450edef68"
01648d6d6af23efbfb6977f410acb2c4f4be1223,"Fixed broken build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504454 13f79535-47bb-0310-9956-ffa450edef68"
3f2dd5cf55c047da6f5b4239ee6e1d91170469c6,"DERBY-2191: Cleanup of FormatableBitSet

Simplified grow() by removing an unneeded special case.
Added ASSERT(invariantHolds()) to grow() and shrink().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504460 13f79535-47bb-0310-9956-ffa450edef68"
1d8153ce81f1ec2c4c9116f39deda88a4d665c07,"DERBY-2107: Move page latching out of the lock manager

Removed the latch methods from the lock manager and the unit tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504462 13f79535-47bb-0310-9956-ffa450edef68"
b2c17727e7811bb1f51fc08b8176e39efe075c48,"DERBY-790: SQLException used by the networked interface to Derby is not serializable

Patch contributed by Francois Orsini.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504630 13f79535-47bb-0310-9956-ffa450edef68"
a86bac7923722eae026d70756d4d443a63924067,"DERBY-2293 - basic conversion of test jdbcapi/batchUpdate.java to junit test jdbcapi.BatchUpdateTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504641 13f79535-47bb-0310-9956-ffa450edef68"
1583d20800374ccfdf5d343c078b6c45661e3bf5,"DERBY-2196: Commit derby-2196-01-print-03.diff, introducing a template Basic policy file for the network server and exposing it in the release in demo/templates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504661 13f79535-47bb-0310-9956-ffa450edef68"
1e4061b14ede4c50c57c50a877bbdb386bb6d671,"DERBY-2277 - adding support for jdk 1.7 - updating testing README.htm.
  Patch contributed by Vermund Ostgaard


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504724 13f79535-47bb-0310-9956-ffa450edef68"
e0e23427b87e9a20deb13a24c01cb12d09534477,"Fix for DERBY-2302
It required granting derbyClient.jar 2 additional set of permissions 
1)Property read permission for user.dir since that's where the Junit test wants to have the client tracing done. 
   permission java.util.PropertyPermission ""user.dir"", ""read""; 
2)Also, in order to read/write in user.dir directory, the client jar needs following additional permission 
permission java.io.FilePermission ""${user.dir}${/}-"", ""read,write""; 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504938 13f79535-47bb-0310-9956-ffa450edef68"
0ceeb86f2a8e07d496f0226741421b101ef620f1,"DERBY-2283 changes to CurrentOfTest; added some more assert methods for client/server mode,
but have some problem, so making the test to run only in embedded mode. 
Contributed by Manjula Kutty  mkutty@remulak.net

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@504951 13f79535-47bb-0310-9956-ffa450edef68"
6da924f1c3fcd4358dbde3f628356261647ee632,"DERBY-2300 Convert lang/streams.java to lang.StreamsTest as a Junit test and remove streams.java from the old harness.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@505019 13f79535-47bb-0310-9956-ffa450edef68"
83d7d005be15a5ad4c8091976fc8b97112a7e37c,"DERBY-2242 (partial) Add ODBC type information checking for getTypeInfo() in DatabaseMetaDataTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@505023 13f79535-47bb-0310-9956-ffa450edef68"
f46f9b8b7087a7b0fdea0e5359611a4a2db0f05f,"Add the top level EncryptionSuite to suites.All. This is meant to replace the encryption suites from the old harness.
Currently does not contain any real tests but does create a number of databases using different
encryption algorithms. Also added to the ant juni-all target.
Made sure no tests are run in J2ME.
Removed LobStreamstest as that test was not previously run with encryption, I got confused between encoding and encryption from the suites.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@505039 13f79535-47bb-0310-9956-ffa450edef68"
febfe57ee170949af78f5613ad5db52b5e933478,"Exclude *.orig and *.policy from engine javadoc build. Prevents error due to
recent server.policy addition, as well as if you have *.orig from failed
patches lying around your source tree.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@505090 13f79535-47bb-0310-9956-ffa450edef68"
5b2089dd6d79db171d190301c68164c4f193ef53,"DERBY-2283: Remove old files related to currentof.java test

Committed for Manjula Kutty <manjula.kutty@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@505131 13f79535-47bb-0310-9956-ffa450edef68"
2d960f8fecbaf745b004c53947e8b88a87ff0e8e,"DERBY-811 Enabling SecurityManager for checkDriver test. This test was running into problems when run with Derby jar files in 
DerbyNetClient framework with SecurityManager. This is because required permissions were not granted to the jar in the policy file.
Fix for DERBY-1275 took care of those permissions and hence checkDriver test can now start running with SecurityManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@505317 13f79535-47bb-0310-9956-ffa450edef68"
b8c1e09f9c591f8623c1074f44fb56db12dafc34,"DERBY-2293 - further adjustments as per patches of Feb. 8 and 9. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@505603 13f79535-47bb-0310-9956-ffa450edef68"
d0b190e48f38f20f4edfd0b2071800769132936c,"DERBY-1752: Update copyright statement in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@505644 13f79535-47bb-0310-9956-ffa450edef68"
2c140d81eb31552064ed43f437ee81362dc39887,"DERBY-2112 - fix NPE on executeBatchRequestX when PreparedStatement has no parameters. 
  Fix suggested by reporter, Cesar Devera.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@505700 13f79535-47bb-0310-9956-ffa450edef68"
738338398735067d35c7553cd26d05a332501ca4,"Cleanup BatchUpdateTest to close its statement objects.
Remove some try catch blocks where the cause of the failure would be lost
(rather than just calling fail(), let the exception be thrown and caught be the test runner)
Use the JDBC.assertSingleValueResultSet utility method in a couple of places.
Removed strange try/catch block in setUp() that indicated a delete could fail the ""first"" time,
the delete should never fail since the table is created by a decorator and there is not ""first"" time
really since the tests are unordered.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506082 13f79535-47bb-0310-9956-ffa450edef68"
6bae90323fa309755b15a9be8ca73d1868fbdd45,"DERBY-811 remove the hard coded ""/"" and replace them with portable File.separator. This change is for client/org/apache/derby/jdbc/ClientBaseDataSource.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506160 13f79535-47bb-0310-9956-ffa450edef68"
e65a7e8ce47fee4a43c7da84adc5b6d4270c51f4,"Add some comments to indicate how initializeConnection works.
Add utility method to check (assert) the number of rows in a table given a table name. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506272 13f79535-47bb-0310-9956-ffa450edef68"
0225aacac5281a6da8883eaec54a02252bad5186,"Change BatchUpdateTest to use the new utility method to check the number of rows in the table
rather than repeating the same code in many fixtures. Clean up with some additional closing
of opened statements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506276 13f79535-47bb-0310-9956-ffa450edef68"
ad0df6fa73165bff3c947441b91ab931031317bc,"Missed closing one prepared statement in BatchUpdateTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506284 13f79535-47bb-0310-9956-ffa450edef68"
1ccacc86d57b0880c8f1b1f2c8bdfe2d51bde74e,"Close the secondary connections open in BatchUpdateTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506563 13f79535-47bb-0310-9956-ffa450edef68"
f42f1b78f6b4d017eb25b1abc8744526dc305504,"Moved javadoc comment to the right place.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506593 13f79535-47bb-0310-9956-ffa450edef68"
b3da2d32eb4f7d3bcc2674f5ddd20f4a220c7146,"Moved javadoc comment to the right place.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506615 13f79535-47bb-0310-9956-ffa450edef68"
c872753ece8cba13ca93edcb5db17a1abae51aa3,"DERBY-2299 convert cursor.java to JUnit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506709 13f79535-47bb-0310-9956-ffa450edef68"
0d6b409944a227625eccb457b7de782496be022e,"DERBY-2278 Adds a new class OEChecks that does the cardinality checks in order to separate out the OE code
logic into its own class and separating it out from the junit test framework that we have.
This leads to modification in implementation of the fixtures in the Checks.java to appropriately call
the methods from the OEChecks.
Adds a new class - DriverUtility that can be used to populate the OE database given the drivername and 
the database connection url and then perform checks on it.

Assumption is that the schema is already loaded into the database.
Contributed by Sunitha Kambhampati  -- ksunithaghm@gmail.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506748 13f79535-47bb-0310-9956-ffa450edef68"
0aa776920c2ba9699ff8ef0cc1b906523c7dab28,"DERBY-2196: Commit derby-2196-02-install-01.diff, which installs a security manager when the network server is booted without one.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506751 13f79535-47bb-0310-9956-ffa450edef68"
b91cfb2207e4c3884211302d6c626a424112fae4,"DERBY-2107: Move page latching out of the lock manager

Added test case.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506899 13f79535-47bb-0310-9956-ffa450edef68"
b2b30ec54415bac38bc3337a06d1d6fb90a66bd8,"DERBY-2247: Provide set-methods for Blob in the embedded driver.

Patch contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@506918 13f79535-47bb-0310-9956-ffa450edef68"
a609b8190d4b7dff4b1d2e7f5a10bf6bce65b0e1,"DERBY-2318 Cleaned up the code that gets the stack trace, but didn't change anything that would change the behaviour.
I don't see any failure on WEME 6.1 though.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507093 13f79535-47bb-0310-9956-ffa450edef68"
d029255cd19db98b9b78fce8e8543ab1b1449676,"Switch a number of tests in jdbcapi to run under JUnit using JDBCHarnessJavaTest
(and removed them from the old harness suites).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507151 13f79535-47bb-0310-9956-ffa450edef68"
7358413f88e2c10aa528b4cfd07352920ec21cd4,"DERBY-2299 enable for client and reformat tabs to spaces


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507208 13f79535-47bb-0310-9956-ffa450edef68"
dfe413c60431ce58f9c75e51b2c1ad09520008a8,"Add old harness lang tests that successfully run under the JUnit infrastructure using the LangHarnessJavaTest.
Separate commit will remove the files from the old harness.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507242 13f79535-47bb-0310-9956-ffa450edef68"
d25032a3588b8e0772dfd0ef805ac9dcfcb024f4,"DERBY-1709: Mark frameworks scripts as deprecated.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507308 13f79535-47bb-0310-9956-ffa450edef68"
cad82b63d42126a65157c35a6124150e86efc822,"DERBY-1709: Add missed file from revision 507308


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507312 13f79535-47bb-0310-9956-ffa450edef68"
7a0cbb445e3925b85faa298253337435793786c8,"DERBY-1704 (partial) Allow more concurrency in the lock manager

Modified LockSpace so that it doesn't extend Hashtable.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507428 13f79535-47bb-0310-9956-ffa450edef68"
6bc2e251ab43a1a2af5902a7da9bb23b25215b4c,"DERBY-2108 Implement SSL/TLS communication between client and server
- Implemented the SSL functionality in client and server
- Rewrote ClientThread
- Removed two unused routines in NetworkServerControlImpl 
  (startDatabase and shutdownDatbase) 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507488 13f79535-47bb-0310-9956-ffa450edef68"
06f0810603a8b57383c00a1b3ba7b926832b349a,"DERBY-2328 (partial) Removed unused method.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507500 13f79535-47bb-0310-9956-ffa450edef68"
3e5168c0d239ab2da9e7dd929e3ac3cf9bc87bb7,"Fixed javadoc warnings.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507533 13f79535-47bb-0310-9956-ffa450edef68"
8ea13c6159b88999b90e295e42b6246178b5c345,"update comment to reflect jira issue number.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507738 13f79535-47bb-0310-9956-ffa450edef68"
777cc86c62c7021ce6d4131671dc00abf736fe66,"DERBY-2339 Fixed mistake in ClientThread

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507920 13f79535-47bb-0310-9956-ffa450edef68"
ee9c8035a6aad7694d8d950587886b88457aa903,"Fixed some javadoc comments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@507959 13f79535-47bb-0310-9956-ffa450edef68"
2fa8526df67e8cb06c2d6c2a5a69730cd2a06a85,"DERBY-2341 Ensure modules booting after the store by the database receive the correct properties
object that also includes the set of database properties.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508163 13f79535-47bb-0310-9956-ffa450edef68"
be41d87c76c4606c9bbe14332fb58b82eece3b14,"DERBY-1952 (partial) Remove jdbc4/autoloadTest. It has been replaced by the version in jdbcapi.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508175 13f79535-47bb-0310-9956-ffa450edef68"
f98f842b4bbddcd45abee941fc868232dc84c3a9,"Remove the set of language tests that run under JUnit in LangHarnessJavaTest from being
run under the old harness.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508177 13f79535-47bb-0310-9956-ffa450edef68"
a43ee19f5a02df8d9013c80e7a5147a87a7998cb,"DERBY-2332 (partial) Initial JUnit test for statement caching. New utility decorator
method for setting a single database property and re-booting.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508186 13f79535-47bb-0310-9956-ffa450edef68"
5e94b1c4f491b08ad1bb995ea2ff8935d2b99bd3,"DERBY-2332 (partial) Add some more testing to StatementPlanCache and remove old harness tests that overlap.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508208 13f79535-47bb-0310-9956-ffa450edef68"
d291384890f9c52e05eff5b6e2c3457a5bddb7a7,"DERBY-2332 Remove stmtCache3 as testing is covered by StatementPlanCacheTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508225 13f79535-47bb-0310-9956-ffa450edef68"
912793e4158c6b9ebf0d65cae51bfca5cf53e639,"DERBY-2305: Convert tests in derbynet that will run via HarnessJavaTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508231 13f79535-47bb-0310-9956-ffa450edef68"
f2fe81a9f8d1213caefdc66652316e353db14ea8,"DERBY-2343: Update sysinfo_api to current JUnit usage. Includes a note about the
classpath issue discovered while updating the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508328 13f79535-47bb-0310-9956-ffa450edef68"
99c733c782c475ce42dad975d993fab175fb1724,"DERBY-2315 compatibility/testScript.xml should include 10.2.2 in the server/client combinations
DERBY-2329 Compatibility test fails in all combinations with 'serverTrunk'

Patch contributed by Ole Solberg.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508383 13f79535-47bb-0310-9956-ffa450edef68"
3a781d5963a966e9d692cc7ef502b8b84cc345ff,"Improve the JDBC.assertSameContents to use the assertEquals() methods for Blob and Clob in BaseJDBCTestCase.
Create a SQLXML constant in JDBC for the tests to use rather than using engine code.
Add an initial version of utility method to DatabaseMetaDataTest that returns a JDBC type identifier from java.sql.Types
given a SQL type name.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508418 13f79535-47bb-0310-9956-ffa450edef68"
8aa8c9b021031ead04a6d90573e6997e69a61b85,"DERBY-1102 (partial) Add an initial TriggerTest. Only fixture is to ensure that all datatypes
work in an action statement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508442 13f79535-47bb-0310-9956-ffa450edef68"
7f76a941e4f3f3538d7737fca3eda2e1d2db8bf5,"Make NetHarnessjavaTest run no fixtures if network server is not in the classpath.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508555 13f79535-47bb-0310-9956-ffa450edef68"
daff67fb0d82e571dac366eced685a92463fe05a,"Close some JBDC objects left open in BlobClob4BLobTest.java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508558 13f79535-47bb-0310-9956-ffa450edef68"
4ba425d2d18c76767a8be36a5ade2d56bc2cf45f,"DERBY-1108 (partial) More datatypes testing in TriggersTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508593 13f79535-47bb-0310-9956-ffa450edef68"
0d77ee625b637e2774d46b6ee4b2f325ed08dce3,"DERBY-2349 Add comment to TriggersTest to link work-around the reported bug.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508600 13f79535-47bb-0310-9956-ffa450edef68"
a7f52a6ea56e4a32d937626f8d298f0823d28750,"DERBY-1102 Add missing classes for TriggerTest and latest version of test with reference to DERBY-2350.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@508639 13f79535-47bb-0310-9956-ffa450edef68"
593d60a3adb2b5bf8a1c08f30c9a9fd4f33320ec,"Clean up a couple of comments in TestConfiguration.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509246 13f79535-47bb-0310-9956-ffa450edef68"
e5c9e58c42171da5c9b5aa9844a0ecabcfe4495d,"DERBY-2087 Uses logical database names in additionalDatabaseDecorator method
(which replaces singleUseDatabaseDecorator with database name).
Contributed by Julius Stroffek Julius.Stroffek@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509258 13f79535-47bb-0310-9956-ffa450edef68"
218fbcb9d4fe3c6d57e70af4344e809c33d9d378,"Fix incorrect type id return for DOUBLE type in DatabaseMetaDataTest utility method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509261 13f79535-47bb-0310-9956-ffa450edef68"
c05d2fc55bc6d4b836b778dd3ba73b2923a7b598,"DERBY-2333 Convert parameterMapping to JUnit
partial checkin. not yet integrated into the suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509361 13f79535-47bb-0310-9956-ffa450edef68"
27be4fc0c08a350e51d7be28cb313e862f5aebac,"DERBY-2345: Fixed bug where Blob.truncate(long) did not work if the blob was materialized in memory. A test was also added.

Patch contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509375 13f79535-47bb-0310-9956-ffa450edef68"
163f6b83065567d8c804649230f4d6b69500bf17,"DERBY-2333 (partial): Temporary fix to stop the build from breaking (missing code).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509389 13f79535-47bb-0310-9956-ffa450edef68"
26b12facc573226f3ef3641215950c97f174a2f5,"DERBY-2295 Change DropDatabaseSetup to be explicit about which database it is removing and
ensure that database is shutdown first. Does not assume the current database
is the one to be shutdown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509419 13f79535-47bb-0310-9956-ffa450edef68"
0c186b3d406be572ab61468023a44b78fb127d69,"Add workaround in DatabaseMetaDataTest for DERBY-584 to stop DatabaseMetaDataTest failing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509420 13f79535-47bb-0310-9956-ffa450edef68"
13e0e08acc4a5dc211ed8dfc1d2bf7cf0e7cbf5c,"DERBY-1102 (partial) Add more tests cases for all data types (including streaming values) in action statements.
Add tests for trigger ordering.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509421 13f79535-47bb-0310-9956-ffa450edef68"
dda212dbb39bd2f95aaca817a9d9603012251085,"DERBY-1102 (partial) Remove triggerStream test, test of data types in action statement is now in TriggerTest
and covers more situations using the correct apis. Found two or three bugs with the new test.
Remove old utility code that used the old TriggerExecutionContext api.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509423 13f79535-47bb-0310-9956-ffa450edef68"
e0f1ffe2fc7615b75e869d19af8890db0b14b68b,"DERBY-2196: Commit secure-server tests in derby-2196-03-tests-01.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509693 13f79535-47bb-0310-9956-ffa450edef68"
0f564cc83a0168c77331b8119d1c43aa21590f2e,"DERBY-1983 (partial) Add some comments to compilepath.propeties explaining the base and JSR169 compile paths.
Change one use of java13compile.classpath to java14compile.classpath.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509739 13f79535-47bb-0310-9956-ffa450edef68"
b81d5b3b2c47a08f43a89b6756467242896e7a39,"DERBY-1983 Remove some uses of java13compile.classpath that do not require code changes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@509863 13f79535-47bb-0310-9956-ffa450edef68"
6afb55c6ae9806a861348ebc44547abeeebb8920,"DERBY-2324: convert StmtCloseFunTest to JUnit

Made ClosedObjectTest run under more JVMs.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510012 13f79535-47bb-0310-9956-ffa450edef68"
cbb48fb6def9fd5c4fd84d42485aa40602574335,"DERBY-1983 (partial) Remove use of java13compile.classpath and add extra JDBC 3 methods to Blob/Clob
test implementations in tests.junitTests.compaibility.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510087 13f79535-47bb-0310-9956-ffa450edef68"
df380db9c923bd226dfa88d75e5ae7682e91a924,"DERBY-1983 (partial) Change the iapi.jdbc build to use java14compile.classpath, which then
requires a number of JDBC 2.0 classes to become abstract. DERBY-1984 is entered for re-factoring
the JDBC classes so that the abstract and concrete JDBC 3 classes could be combined.
Removes embedded support for JDBC 2 (JDK 1.3) as there is no longer a non-abstract driver for JDBC 2.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510093 13f79535-47bb-0310-9956-ffa450edef68"
b918c3822c663618b0783077329caaac6414762b,"DERBY-1983 (partial) Remove last uses of java13compile.classpath from build.xml files.
Requires making some JDBC 2.0 classes abstract, DERBY-1984 is entered to re-factor
the JDBC 2.0 classes (e.g. merge with JDBC 3).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510102 13f79535-47bb-0310-9956-ffa450edef68"
5c572944df57c79b4fb935f824d187e97f3a82c3,"DERBY-2324 Fix ClosedObjectTest so as to not throw NullPointerExceptions on J2ME.
Caused by returning the wrong suite when running in J2ME. Changed the baseSuite method
so that the check is a positive one for the JDBC environment, which lead to clearer
code that fixed the bug.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510140 13f79535-47bb-0310-9956-ffa450edef68"
674c2a4c7d52ab846a474c13d32f95228bbac56e,"DERBY-2264: Commit Dag's DERBY-2264-1.diff patch, which restricts database shutdown to the DBA.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510173 13f79535-47bb-0310-9956-ffa450edef68"
f49994f3fd3319f1634f44da465f01dc10c46a7c,"DERBY-2333 partial checkin ParameterMappingTest junit conversion


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510250 13f79535-47bb-0310-9956-ffa450edef68"
8613ed243de3079ef06e57949fb65bf9981ea8b2,"DERBY-2333 partial checking paramterMapping conversion



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510264 13f79535-47bb-0310-9956-ffa450edef68"
47404f483e43cfd32c83c312956730c4f0508375,"DERBY-2368: Modify compatibility/testScript.xml to not run
embedded/jvm1.3 case any more - not valid after r509863

Patch contributed by Ole Solberg.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510462 13f79535-47bb-0310-9956-ffa450edef68"
fa09146014a640ce238fcf5e35f093e5afd93c84,"DERBY-2359 (partial): Removed unused imports (from impl.store.access.*), moved a few blocks of class JavaDoc and fully qualified class-names in some @see tags.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510538 13f79535-47bb-0310-9956-ffa450edef68"
61c43d9651c741f96056a3285f1ae964c0637718,"DERBY-2196: Commit derby-2196-10-renameOption-01.diff, which renames the security-disabling option to noSecurityManager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510549 13f79535-47bb-0310-9956-ffa450edef68"
df597d115fd8e7c13f31eae34defd6d23c0c282c,"DERBY-2264: Committed Dag's DERBY-2264-2.diff patch, which addresses some minor comments on the previous patch.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510586 13f79535-47bb-0310-9956-ffa450edef68"
1c44e7382698e4d4e3054cd782a3c20629a5b3cc,"DERBY-2366 Add checks to ensure SecureServerTest is run only when the server code is in the classpath
and NetHarnessJavaTest works correctly in J2ME. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510593 13f79535-47bb-0310-9956-ffa450edef68"
37b3a36bc62230464a8d0c8b88dcb9752fc124e5,"DERBY-1983 (partial) Changes to make some of the JDBC 2.0 classes/methods abstract in preparation
for switching the base compile level to JDK 1.4. Note DERBY-1984 is entered to cleanup the JDBC
objects to remove JDBC 2.0 split.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510595 13f79535-47bb-0310-9956-ffa450edef68"
c22596489917e66778ff2d9618e43f7ff91132b8,"Remove a couple of invalid checks on just allocated byte arrays in the store.
Checks were invalid because neither condition could ever be true, the
java new byte[] operator will always return an object of the correct size
or throw an exception.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@510963 13f79535-47bb-0310-9956-ffa450edef68"
9d0dd8f8b96cad65c31d830a53eb523676289da5,"Improve comment in CachedPage.setPageArray() about garbage collection order.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511121 13f79535-47bb-0310-9956-ffa450edef68"
fbc46afd6cdb018d52337638e528736b201d08aa,"Re-factor the Load and SimpleInsert for the oe system test kit to support addition of a multi-threaded loader implementation.
Fix a bug in the Schema.java test that did not report times for the executions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511126 13f79535-47bb-0310-9956-ffa450edef68"
df4020df3c04d1730a39dd8d4f1f39bcaadef014,"Javadoc the test tree.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511226 13f79535-47bb-0310-9956-ffa450edef68"
e4f6fe118a9a39dbeea0ef9f6d5d48532d0308d7,"Javadoc jdbc4 test suite if jdk16 is available.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511228 13f79535-47bb-0310-9956-ffa450edef68"
0f6d6d6ec4b638c14ae75d903d408f6457c0f9f8,"Fix javadoc errors in ResultSetTest in jdbc4 suite


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511229 13f79535-47bb-0310-9956-ffa450edef68"
45dcf318652bde2a2fb1fd34de51940bea418809,"Also substitute the source attribute for the different JVM revisions in the
source attribute for the javadoc task


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511232 13f79535-47bb-0310-9956-ffa450edef68"
ed89134c755f5b9fb6ddb93ea0834b035e8c1643,"DERBY-2334 Accept the new collation attribute and store it as a database property. Will be used for language based collation ordering.

This patch has code for new JDBC url attribute collation in DataDictionaryImpl.java'boot method. Once the value for this attribute is validated, it is converted to database property derby.database.collation. This property will get saved in the property conglomerate. 


Patch description in brief 
1)Changes in DataDictionaryImpl.java will validate the value for the optional collation attribute and use the default UCS_BASIC if no value supplied (this is all at database create time). This JDBC url attribute will be saved as database property derby.database.collation in the property conglomerate. 
2)All the JDBC url attributes are defined in Attribute.java. Added collation to that file. Removed existing attribute collate which is not
used anywhere in the Derby code. Removal of unused ""collate"" attribute will save confusion in future between the new ""collation"" attribute 
and unused ""collate"" attribute.
3)The 2 valid values for collation attribute are defined in Property.java. They are UCS_BASIC and TERRITORY_BASED. Also, the database property is defined in this file for collation attribute. 
4)Changes in Driver20 class adds the new string attribute so it can be detected by the generic GUI tools through getPropertyInfo method. 
5)Added new SQLState and message id for new attribute in messages.xml, SQLState.java and MessageId.java 
6)Needed to update master GetPropertyInfoTest.out so it is aware of the new collation attribute. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511283 13f79535-47bb-0310-9956-ffa450edef68"
51e8282d9c76d4687b25ea80467aac3b82344ef1,"DERBY-2369 Use a single socket for shutdown down the network server and the ping to ensure
it is shutdown. Reduce the sleep time between pings to allow faster recognition that the
server is down.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511353 13f79535-47bb-0310-9956-ffa450edef68"
5b5091ffc3b1b5128a024d9600247d85773aecf1,"DERBY-1966 (partial) Cleanup of some code in DRDAServerStarter. Add some comments
and remove use of priv blocks to access public methods in public classes. Step
in an incremental approach to clarify the interaction between this class
and NetworkServerControlImpl.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511360 13f79535-47bb-0310-9956-ffa450edef68"
47efb18033447f61147020ab78856f236b4ccf50,"Remove unused import from DeleteNode.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511361 13f79535-47bb-0310-9956-ffa450edef68"
e4fa8cb59e7a4941ef1feafddc4d7e6098141f53,"Cleanup of some of the ConstantAction classes including removing GenericConstantAction
which was basically an empty class since true constant actions are not formattable.
Added comments to WriteCursorConstantAction indicating how it is not really a ConstantAction
but just a set of constants, since its executeConstantAction() method is never called,
which is the only method on ConstantAction interface.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511367 13f79535-47bb-0310-9956-ffa450edef68"
88809ad80914ca5f9e3067aee7cfbd4f95cb0cca,"Add a multi-threaded loaded (ThreadInsert) that is an extension of SimpleInsert to the OE test toolkit.
Add a ThreadPopulate JUnit class that uses the ThreadInsert like Populate uses SimpleInsert.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511368 13f79535-47bb-0310-9956-ffa450edef68"
37ce91b85082235362d6222d212aa15b7f7fac93,"DERBY-2356 Make SSL server authentication optional (submitted by Bernt M. Johnsen)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511785 13f79535-47bb-0310-9956-ffa450edef68"
017a20ad5e63fc77e29dbe0cce015ec77c9db35c,"DERBY-862: Fix a javadoc warning in ThreadInsert.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@511860 13f79535-47bb-0310-9956-ffa450edef68"
df9bd6e59a54b28aeef9ec486a39c1b6d3fdef5b,"DERBY-2371: Altering VARCHAR default fails when column contains data

Using ALTER TABLE to modify the default value for a VARCHAR column when
the column already contains data throws ERROR 22018: Invalid character
string format for type long. 

The problem arises in AlterTableConstantAction.modifyColumnDefault, which
only understands two types of modifications that can be made to a
column's default value:
 - changing the INCREMENT BY value for a generated IDENTITY column
 - changing the RESTART WITH value for a generated IDENTITY column

But there is a third type of modification that can be made to a column's
default value, which is simply to change the default value that is to
be used for an ordinary column if no value is provided when inserting
a new row into that table.

The fix is to add a new ColumnInfo modification type code:
   MODIFY_COLUMN_DEFAULT_VALUE
and to teach ModifyColumnNode and AlterTableConstantAction what to do
for modifications of type MODIFY_COLUMN_DEFAULT_VALUE. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512019 13f79535-47bb-0310-9956-ffa450edef68"
1ad3b32f42d755cdf6f1c9cd6ab701551cd5f87a,"DERBY-47 (partial): First incremental patch for the multi-probing (""mp"")
approach described in Jira comments. As mentioned in that comment, we need
to be able to distinguish between ""true"" relational predicates and ""probe
predicates"" so that we do not incorrectly perform certain operations on
probe predicates. This first patch adds the logic to allow such distinction.
In particular it:

  - Adds a new method, ""isRelationalOpPredicate()"", to Predicate.java that
    only returns true if the predicate is a ""true"" relational predicate; i.e.
    it will return ""false"" for probe predicates.

  - Updates several ""if"" statements in Predicate.java and PredicateList.java
    to use the new method.

  - Updates several utility methods in BinaryRelationalOperatorNode to distinguish
    ""true"" relational operators from ones that are created internally for probe
    predicates.

There should be no functional changes to Derby as a result of this patch.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512079 13f79535-47bb-0310-9956-ffa450edef68"
84e347a915aa312a88b85d225626089c41d3a80d,"DERBY-378 (partial)
This patch adds some code required to support import/export of table with
clob, blob(large objects) data types. Clob/Blobs data can be exported to 
an external file that different from the main export file. Location of the 
lob data in the external file will be written to the main export file. 
When writing the lob data to an external file, no conversion is done for the 
binary data , clob data will be written using the user specified code set. 

1)This patch implements following two new procedure to support 
exporting LOBS to an external file name:

SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_IN_EXTFILE(..)
SYSCS_UTIL.SYSCS_EXPORT_QUERY_LOBS_IN_EXTFILE(..)

2)This patch implements following two new procedure that allow
 import of large object data  stored in a external file.
(for example exported previously using the above export procedures). 

SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_IN_EXTFILE(...)
SYSCS_UTIL.SYSCS_IMPORT_TABLE_LOBS_IN_EXTFILE(..)

3) import/export of table with clob,blob types will also work 
with single input/output file, using the exiting import/export
procedures. In this can binary data is converted into hex format before 
exporting and the data hex is converted to binary on import. 
Clob data is exported similar to other char types. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512109 13f79535-47bb-0310-9956-ffa450edef68"
848a3f03fe9a12ac49076b8f56ffaf7de38f74f2,"DERBY-2324: Removed StmtCloseFunTest since there's already a JUnit
test (ClosedObjectTest) which tests the same things.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512172 13f79535-47bb-0310-9956-ffa450edef68"
a1d9aacd1a1a92aa3d56e76b763f5cc192c17c29,"Fixed typo in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512260 13f79535-47bb-0310-9956-ffa450edef68"
24b23a8670e2f153c8ecdbf0c53f7965983c1c22,"DERBY-2333 Convert parameterMapping to junit
Completed conversion and Enabled for embedded 
Still need to resolve protocol error when run with client so that is disabled for now.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512517 13f79535-47bb-0310-9956-ffa450edef68"
535667b2287083824e8eb346ee70948ae46f1198,"DERBY-2333
Add in junit BigDecimalHandler



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512520 13f79535-47bb-0310-9956-ffa450edef68"
af48baeea6def93696e95aa9058df11f766ace37,"DERBY-47 (partial): Add some additional IN-list test cases to the
lang/inbetween.sql test.  These test cases all currently behave
correctly; by adding them to inbetween.sql we can ensure that
they will continue to behave correctly once the DERBY-47 changes
have been completed.

The underlying notion here is to make sure IN list behavior is
correct when the left operand is a column reference that is a
leading column in one or more indexes.  The DERBY-47 changes
will ultimately make it so that most of the new test cases
result in an index-probing execution plan, thus we want to make
sure that we're testing as many of the various index-based use
cases as possible.

Note that these test cases are just testing correctness of results;
additional tests will be added later to verify that indexes are in
fact being chosen as a result of the DERBY-47 changes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512534 13f79535-47bb-0310-9956-ffa450edef68"
b1dcf4035ace4a850ce7121c2026ee0840f5efca,"DERBY-378 (partial) 

Master updates to import/export tests for the jcc client, missed these in my previous checkin. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512582 13f79535-47bb-0310-9956-ffa450edef68"
bf538e5859750e0ddd77b3ba553d6e0d40fcd111,"DERBY-2304 (partial)  Convert derbynet/callable.java to JUnit.

Tests now run in both embedded and client. The suite explicitly runs four
tests that use DriverManager or BigDecimal only if JDBC2 is available.

All tests in derbynet/callable.java were converted except for testBatch, 
which is commented out in the original with the note ""Temporarily take out 
testbatch until jcc bug is fixed (5827)"". I'll do a little research to see 
if it should now be expected to run successfully.

The test that outputs a message to System.out is not currently enabled
because I'm not sure it makes sense to run it in the junit environment. 
But it would be easily enabled by changing the method name from 
norun_testSystemOutPrintlnProc to testSystemOutPrintlnProc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@512905 13f79535-47bb-0310-9956-ffa450edef68"
3c1f6341ab433e37ddee977eb85db269f3f48128,"DERBY-2328: Reduce monitor contention in SinglePool

Removed the Hashtable in SinglePool and made each transaction have a
direct pointer to its lock space.

Description of the changes:
  - New method in LockFactory: createCompatibilitySpace()
  - New (almost empty) interface CompatibilitySpace to be returned
    from createCompatibilitySpace()
  - LockSpace implements CompatibilitySpace and is returned by
    SinglePool.createCompatibilitySpace()
  - SinglePool no longer extends Hashtable. Now it casts the supplied
    compatibility space object to LockSpace and uses it directly.
  - Modified signatures of all methods/variables that used
    compatibility spaces (Object -> CompatibilitySpace)
  - Modified code that assumed compatibility space objects were
    transaction objects (virtual lock table and code that locked an
    object with the transaction as lock group)
  - Code that tested space1.equals(space2) was changed to
    (space1 == space2)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513222 13f79535-47bb-0310-9956-ffa450edef68"
b94099f0d9b469d56ee7a6fce6c33fe11449801b,"DERBY-2383: ReuseFactory should use the constants in java.lang.Boolean


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513233 13f79535-47bb-0310-9956-ffa450edef68"
08d2c15c493bd56b103401c84b06b59901f62fd5,"Remove the Dependent.makeValid() call. No calls are made to makeValid() through this interface.
Can be seen by the fact that most of the implementations are empty and not covered by the
code covergae with the tests, as well as there is no path to them. The one version
that was called was for GenericPreparedStatement in CurrentOfNode, but a better method
is the rePrepare() method on PreparedStatement.
Related to DERBY-2380.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513401 13f79535-47bb-0310-9956-ffa450edef68"
fffce91c2d466591f9ffefa256c04bfc80d9a932,"DERBY-2382 partial checkin.
Converted to JUnit for checking if valid casts work.
No output check.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513423 13f79535-47bb-0310-9956-ffa450edef68"
ee0904b7c15b27707e74c132ef974cc0a66d7013,"DERBY-2249 (partial): Initial commit of files for a new test ""toolkit"" with
the following potential uses:

 - run a lot of optimizations to look for memory leaks, etc. in the optimizer
 - run queries that take a long time to optimize, to try to understand why
 - run queries that are quite complex, to determine whether we select the
   ""best"" query plan
 - run queries that take a long time to execute 
 - run queries on different versions to see the performance gain/loss

Contributed by Manjula Kutty (mkutty@remulak.net)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513562 13f79535-47bb-0310-9956-ffa450edef68"
5e9a33599f78fb2f1bd3dca608e8d4452d2caa98,"DERBY-2382: Make ""suite()"" method of CastingTest public instead of private to
fix broken build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513573 13f79535-47bb-0310-9956-ffa450edef68"
a5430ddb9f324e71e5dd00388dddb583e678a01f,"DERBY-2311 DERBY-2309: Dynamically generate BLOB/CLOBs, add buildfiles and 
remove unnecessary resource jars for the mailjdbc and sttest packages, and
hook them into the build.

Committed for Manjula Kutty <manjula.kutty@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513583 13f79535-47bb-0310-9956-ffa450edef68"
35888a6874ab60dd40d7208c90d96c331bb619d0,"DERBY-827: Performance can be improved by re-using language ResultSets
across Activation executions.

Added JUnit test which tests repeated execution of PreparedStatements.

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513679 13f79535-47bb-0310-9956-ffa450edef68"
83802657f2664517462ff59d019df639ba86b3cb,"DERBY-47 (partial): Update the logic for cost-based optimization (CBO) and
modification of access paths (MoAP) to recognize IN-list ""probe predicates""
and to handle them appropriately. More specifically this patch adds code to
do the following:

  - During costing, recognize when we're using a probe predicate as a
    start/stop key and adjust the cost accordingly. This means multiplying
    the estimated cost and row count for ""column = ?"" by the number of values
    in the IN-list (because we are effectively going to evaluate ""column = ?""
    N times, where N is the size of the IN-list, and we could return one or
    more rows for each of the N evaluations).  We also want to make sure that
    the resultant row count estimate is not greater than the total number of
    rows in the table.

  - When determining which predicates can be used as start/stop keys for the
    current conglomerate, only consider a probe predicate to be a start/stop
    key if it applies to the _first_ column in the conglomerate. Otherwise the
    probe predicate would end up being generated as a store qualifier, which
    means we would only get rows for which ""column = ?"" was true when the
    parameter was set to the _first_ value in the IN-list. That means we would
    end up with incorrect results (missing rows).

  - If cost-based optimization is complete and we are modifying access paths
    in preparation for code generation, then take any probe predicates that are
    *not* going to be used as start/stop keys for the chosen conglomerate and
    ""revert"" them back to the InListOperatorNodes from which they were built.
    Those InListOpNodes will then be generated as normal IN-list restrictions
    on the rows returned from store. If we did not do this reverting then the
    predicates would ultimately be ignored (since they are not valid qualifiers)
    and we would therefore end up with incorrect results (extra rows).

  - If we're modifying access paths and we have chosen to do multi-probing of
    an index then we disable bulk fetching for the target base table. Logically
    this is not a requirement. However, it turns out that bulk fetch can lead
    to poor performance when multi-probing an index if the number of probe
    values is high (several hundred or more) BUT that number is still just a
    small fraction of the total number of rows in the table.  By disabling
    bulk fetch for multi-probing we avoid this performance slowdown.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513839 13f79535-47bb-0310-9956-ffa450edef68"
2e2a046deff3d21eac2563dfd6548ee584f8a9ed,"DERBY-2310: Update system test readmes to reflect dynamic generation of BLOBs/
CLOBs from DERBY-2311.

Committed for Manjula Kutty <manjula.kutty@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513882 13f79535-47bb-0310-9956-ffa450edef68"
201c0122d7f8997fd11c38262ec7b1a9e0821b08,"Clean up imports on some classes in iapi/sql/dictionary

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513918 13f79535-47bb-0310-9956-ffa450edef68"
4bbdd92ccb21695b55e908d0eae1775ef6697c63,"Change the name of a fixture in CurrentOfTest and update its javadoc comments
to correctly reflect what it is testing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513967 13f79535-47bb-0310-9956-ffa450edef68"
49cfc7de2a6416ce77ffc94a49fc5d52d843b4f4,"Move the read only positioned update/delete tests into their own fixture instead of being in the testUpdate fixture.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@513980 13f79535-47bb-0310-9956-ffa450edef68"
ef9dc999157ff23764af52168c5be7896c3dea48,"DERBY-2312: Remove unnecessary printlns from single table test.

Committed for Manjula Kutty <manjula.kutty@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514024 13f79535-47bb-0310-9956-ffa450edef68"
7777dbda08f40c2c4083a10d0862fdd9f7bd3044,"Add some comments to the method BaseActivation.checkPositionedStatement based upon
some understanding I gained while adding fixtures to CurrentOfTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514027 13f79535-47bb-0310-9956-ffa450edef68"
7907d9fb64188a9a08c471bae01a18bfa0765300,"Add some fixtures to CurrentOfTest to expand the testing of positioned statements
when the cursor is changed after the positioned statement is compiled.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514028 13f79535-47bb-0310-9956-ffa450edef68"
ec0828804417129128efe2decf1c2702d4c015ce,"Don't pass the prepared statement name into CurrentOfResultSet since it was never used.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514029 13f79535-47bb-0310-9956-ffa450edef68"
db2c1c24c7199fcef3a5774010f3b8e29c9e896d,"DERBY-2342: convert importExport.java to junit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514040 13f79535-47bb-0310-9956-ffa450edef68"
e3b11635264ca18b3bb64562d56cbb08ab7cf969,"DERBY-2304 (partial)  Convert derbynet/callable.java to JUnit.

The old testBatch, which was commented out, is replaced by two new junit tests: 

  - xtestBatchUpdate() batches up calls to a SQL procedure that updates a
    row in a table.
  - xtestBatchUpdateError() does what the first test does, only now one of
    the commands in the batch tries to update the row to a value that violates 
    the constraint check.

The old test is mildly complicated, with a two table schema and primary/foreign
keys. It looked to me like the test had two goals: test a batch that includes 
calls to a sql procedure, and test a batch that does an sql update that 
violates a constraint. (Incidently, the sql update seemed out of place in a 
file that otherwise tests sql procedures and functions.)

I simplified the test for the junit conversion, and it now uses a single table 
with a check constraint on column to test what happens when the constraint is 
violated.  Also the constraint violation is split into a separate test and 
tested in the context of a sql procedure call (in keeping with the rest of 
the tests).  

Left to do: remove derbynet/callable.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514043 13f79535-47bb-0310-9956-ffa450edef68"
893dc003beee61e0544eb60dad09741ad4853ee2,"DERBY-2342: Remove importExport.java from old harness suites


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514095 13f79535-47bb-0310-9956-ffa450edef68"
9213b4231756c5bd2d351f174a97b6591b307e8a,"DERBY-2397 (partial) Move the drop logic for TriggerDecsriptor and ViewDescriptor to be centralized
in each class as an instance method. The methods do not yet have a common signature,
more investigation is needed for the ViewDescriptor's relationship to its TableDescriptor.
Added some comments to CreateViewNode to describe the set of descriptors and dependencies it creates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514416 13f79535-47bb-0310-9956-ffa450edef68"
cfb77b1d5ee2e2e4610e23195b8698ae15b72da4,"DERBY-2304 (partial)  Convert derbynet/callable.java to JUnit.

Clean up code comments so the javadoc is more clear.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514507 13f79535-47bb-0310-9956-ffa450edef68"
506105b0f98f229b4a763b4fb4113fc2371b6660,"DERBY-2304: Remove callable.java from old harness.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514537 13f79535-47bb-0310-9956-ffa450edef68"
e1cf3d57443bb0a35b5b6d94e8e2b3a0de28443b,"DERBY-2264: Committed Dag's DERBY-2264-3 patch, eliminating error message garbling for clients.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514836 13f79535-47bb-0310-9956-ffa450edef68"
0bcd16d3fe63ceb966a5047a26a257bebc8a4661,"DERBY-2382 convert casting.java to JUnit.
Add testing for explicit cast output.  Remove casting.java from derbylang


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514846 13f79535-47bb-0310-9956-ffa450edef68"
c0a5de2f109796fa5fdd9c6373b0d7a66bfdabc7,"DERBY-2399 convert setTransactionIsolationIsolation to JUnit
Fix  setTransactionIsolation output to have single master and 
include in JDBCHarnessJavaTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514877 13f79535-47bb-0310-9956-ffa450edef68"
b8d1d8ab0b67013be0fe114508381baab910efbd,"DERBY-2248: Add Network Server system test.

Committed for Manjula Kutty <manjula.kutty@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514882 13f79535-47bb-0310-9956-ffa450edef68"
3cf7fcf9e36d28895a87c15c9cc55c0750aeb18b,"DERBY-378 (partial): Master update that was missing from svn 512109.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514898 13f79535-47bb-0310-9956-ffa450edef68"
e8c8d010320775475073c8b4e5c1309310fc93cf,"DERBY-2399 (partial): revert addition of setTransactionIsolation to 
JDBCHarnessJavaTest.  There appears to be a security exception issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@514922 13f79535-47bb-0310-9956-ffa450edef68"
50924b9f29024feb25048ef81d2a0d8aa3b8dc93,"DERBY-2064: Updated javadoc for EmbedConnection.setTransactionIsolation() to
reflect that transactions are not committed if the isolation level remains
unchanged.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515011 13f79535-47bb-0310-9956-ffa450edef68"
b3eb01a49505278a2ca0083663433b3134823cd7,"DERBY-2327 (partial) Reduce monitor contention in LockSet

Encapsulated more of the lock table functionality in LockSet:
  - created a new interface (LockTable) which LockSet implements
  - replaced all references to LockSet with references to the new
    LockTable interface
  - moved code that explicitly synchronized on the LockSet object from
    LockSpace.unlockReference() and SinglePool.zeroDurationlockObject()
    to LockSet so that the granularity of the synchronization can be
    controlled by the LockSet implementation alone
  - added setter methods for deadlock timeout and wait timeout


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515040 13f79535-47bb-0310-9956-ffa450edef68"
6c9dac8af848beceff050430ae2d0c0ef2f3fc49,"DERBY-2405: Remove @author tags from the source files.

Patch contributed by Saurabh Vyas.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515102 13f79535-47bb-0310-9956-ffa450edef68"
30644c890f277557129e48d6c5d8a3ecd5427c88,"DERBY-2378: Committed derby-2378-01.diff, removing SecureServerTests's dependencies on non-public apis.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515136 13f79535-47bb-0310-9956-ffa450edef68"
6aa0b127eae6560305121bcf2d2e712578b5b017,"DERBY-2257: Implementing the stored procedures called by the LOB
related JDBC methods

Patch contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515139 13f79535-47bb-0310-9956-ffa450edef68"
166c272870597288e59728fe4dd4f0371697e8d6,"DERBY-2404: Remove hardcoded hostname / port in BadConnectionTest, get
the hostname and port from TestConfiguration at setUp time instead.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515297 13f79535-47bb-0310-9956-ffa450edef68"
99b7123a4a65ae67645aeeafd75db00babc71c86,"DERBY-2342: Hook new ImportExportTest into the tools._Suite


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515309 13f79535-47bb-0310-9956-ffa450edef68"
360f88e10448a7308430e9025d213e67a03a83a7,"Reduce prepStmtMetaData to a single master so that it can be run under the
adapter


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515320 13f79535-47bb-0310-9956-ffa450edef68"
39a36d8e90dce94d521616153be8addfc371a8b9,"Fix javadoc errors in test hierarchy


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515356 13f79535-47bb-0310-9956-ffa450edef68"
4b16d4c89ceeb79858d4fc32e7ed508325508f04,"Add some additional test cases for positioned update and delete in CurrentOfTest.
Testing that the positioned statement successfully recompiles due to various changes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515442 13f79535-47bb-0310-9956-ffa450edef68"
5fe468c663c36ded5e927ae7e00aaf9069504e4f,"DERBY-2257: Implementing the stored procedures called by the LOB
related JDBC methods

Improved comments. Patch contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515488 13f79535-47bb-0310-9956-ffa450edef68"
a2567fa161db475140c19304135bfb3c3c8c507d,"DERBY-2382: Convert casting.java to JUnit

Made sure the Connection object was nulled out by tearDown(). Added
some explicit calls to ResultSet.close(). Used the utility methods in
BaseJDBCTestCase to create statements and commit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515490 13f79535-47bb-0310-9956-ffa450edef68"
c8d5b99f352db14d2ba2884398dee92e0fdb7c02,"DERBY-2399: Convert setTransactionIsolation.java to JUnit

Fixed failure when running the test under DerbyNet.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515508 13f79535-47bb-0310-9956-ffa450edef68"
ad7199e8764dbd17e50d839062b39cdc6f749e08,"DERBY-2347: Add code to support request and return of locators over DRDA.

Patch contributed by √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515563 13f79535-47bb-0310-9956-ffa450edef68"
ea980d307e22c29d42d87084bd8c91cc996322e7,"DERBY -378 (partial)
This patch adds code required to support import/export of a table with
CHAR FOR BIT DATA, VARCHAR FOR BIT DATA,  LONG VARCHAR FOR BIT DATA
data types. Data of this type of columns is exported to the main export 
file as hex strings. On import data is also expected to be in hex strings 
in the main export file for these type of columns. This patch also 
disallows use of hex decimal characters (0-9 , a-f , A-F) as 
delimiters for import/export procedures. 

Maximum data length of these types is only  32700 ( 254 bytes for CHAR FOR 
BIT DATA , 32,672 for VARCHAR FOR BIT DATA and  32700 LONG VARCHAR FOR BIT DATA). 
Because max length allowed is less than 32k, I think providing import/Export
using an external file for these types may not add much value. No external 
file support will be provided for these types. It can be added later, 
if some one thinks it is required. 

Tests:
Added a new junit test to test the import/export of these binary types. 


It would be great if someone can review this patch.  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515708 13f79535-47bb-0310-9956-ffa450edef68"
2c218431d64a2d40879db08aad3be8445697c063,"DERBY-2400 (partial): Remove mention of Cloudscape in javadoc. This commit takes
care of the top-level engine packages, except iapi and impl.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515789 13f79535-47bb-0310-9956-ffa450edef68"
555a5c52b55f132a3dbbae590c0f3b824e66feba,"DERBY-2403 Disable ParameterMappingTest for JSR169 for now.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515792 13f79535-47bb-0310-9956-ffa450edef68"
27ff1694a40f33812154fdec45bd257afe563edf,"DERBY-2400 (partial): Replace references to Cloudscape with Derby. This commit
takes care of the rest of the separate source trees, except for engine, build
and testing.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515793 13f79535-47bb-0310-9956-ffa450edef68"
cbdc90cfb01fafa1034f35e7fe589c4ec5b1c749,"DERBY-47 (partial): Code generation patch that does the following:

  1 - Moves the code for generating a list of IN values into a new method,
    InListOperatorNode.generateListAsArray()"". The new method is then called
    from two places:

     A. InListOperatorNode.generateExpression(): the ""normal"" code-path for
        generating IN-list bytecode (prior to DERBY-47 changes).

     B. PredicateList.generateInListValues(): new method for generating the IN-list
        values that will serve as the execution-time index ""probe"" values. This
        method also generates a boolean to indicate whether or not the values
        are already sorted (i.e. if we sorted them at compile time, which means
        they all must have been constants).

  2 - Adds code to ParameterNode that allows generation of a ""place-holder""
    value (instead of the ParameterNode itself) for probe-predicates. This is
    required because a probe predicate has the form ""column = ?"" where the right
    operand is an internally generated parameter node that does not actually
    correspond to a user parameter. Since that parameter node is ""fake"" we can't
    really generate it; instead we need to be able to generate a legitimate
    ValueNode--either a constant node or a ""real"" parameter node--to serve as
    the place-holder.

  3 - Updates the generateExpression() method of BinaryOperatorNode to account
    for situations where the optimizer chooses a plan for which a probe pred is
    *not* a useful start/stop key and thus is not being used for execution-time
    index probing. In this case we simply ""revert"" the probe predicate back to
    the InListOperatorNode from which it was created. Or put another way, we
    ""give up"" on index multi-probing and simply generate the original IN-list
    as a regular restriction.  This patch also removes the now unnecessary
    ""revertToSourceInList()"" calls from PredicateList.java.

  4 - Adds logic to NestedLoopJoinStrategy to generate a new type of result set,
    MultiProbeTableScanResultSet, for probing an index at execution time. The
    new result set does not yet exist (incremental development) but the code to
    generate such a result set is added as part of this patch.

  5 - Adds a new method, ""getMultiProbeTableScanResultSet()"", to the
    ResultSetFactory interface. Also adds a corresponding stub method to
    GenericResultSetFactory. The latter is just a dummy method and will be
    filled in with the appropriate code as part of a subsequent patch.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515795 13f79535-47bb-0310-9956-ffa450edef68"
6d94ad6cc4aa4f82f892dd1870c0071e6989c146,"fix copyright for CastingTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515805 13f79535-47bb-0310-9956-ffa450edef68"
f19e86d2edbb66442c8ca0ce3ae95e2544ad0058,"DERBY-2411 convert scrollCursors2.java to junit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515808 13f79535-47bb-0310-9956-ffa450edef68"
c5c85bbb5a3d4bdbb5f87a20326f999781c5f399,"DERBY-2394: Add readme for new optimizer test.

Committed for Manjula Kutty <manjula.kutty@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515847 13f79535-47bb-0310-9956-ffa450edef68"
97fb9592d90534cb9ef1f6aa6d119a511ea6c7ec,"DERBY-2376: Make Derby Eclipse plugin .classpath entries reference the 
ECLIPSE_HOME variable instead of using absolute paths.

Committed for Aaron Tarter <ajtarter@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@515864 13f79535-47bb-0310-9956-ffa450edef68"
57d7d1389446a9cf729b161e9fe27d000da8ba92,"DERBY-2406: Add comment explaining the setting of XA state

Patch contributed by Julius Stroffek.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516009 13f79535-47bb-0310-9956-ffa450edef68"
7a9732b4861ee26d8c36b9c7f7cb2e72ba8b249f,"Add a test fixture to CursorTest that tests Statement.setCursorName only effects the next execution.
Doesn't work on client due to DERBY-2417.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516075 13f79535-47bb-0310-9956-ffa450edef68"
329f167792fd8634e0c88cb5d556a89e7daba825,"Minor cleanup in EmebedResultSet to fetch the lcc once in insert/update/deleteRow.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516076 13f79535-47bb-0310-9956-ffa450edef68"
e8c84af82c918f5e2afd0f4c173dfaeee274b080,"DERBY-2411 Update for review comments from Knut.  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516116 13f79535-47bb-0310-9956-ffa450edef68"
7c20bd096601a15d06acef6aed20565851799041,"DERBY-378 (partial)
This patch checks for invalid hex strings in the import file 
while performing import into a table with CHAR FOR BIT DATA, 
VARCHAR FOR BIT DATA,  LONG VARCHAR FOR BIT DATA data types.
Import will throw an exception if it  detects any invalid hex 
strings during import. 

Tests:
Added a new junit test case to ImportExportBinaryDataTest.java 
to test for the invalid hex strings in the import file. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516145 13f79535-47bb-0310-9956-ffa450edef68"
3fd26f3708da87be9e71193b6f84e129d078a387,"DERBY-2400: Replace references to Cloudscape with Derby


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516194 13f79535-47bb-0310-9956-ffa450edef68"
94f158a5fb1169dee6c754e3b2c271dda5c88f59,"DERBY-2400 (partial): Replace Cloudscape references with Derby where appropriate.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516196 13f79535-47bb-0310-9956-ffa450edef68"
4ef879d558ae9d5f87d4c09e56777b100b80e988,"Javadoc cleanup from recent checkins...


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516223 13f79535-47bb-0310-9956-ffa450edef68"
4793bcc0a9fbe4b7d95c71d72ff3845c90f85b83,"DERBY-2380 (partial) Change language PreparedStatement to not implement the Provider
interface from the DependencyManager. This is a step to cleaning up the life-cycle
of a PreparedStatement so that it will act like a Java object, if one has a reference
to it then it can be used. Remove the single use of any object being dependent
on a PreparedStatement which was a PreparedStatement for a positioned delete/update
being dependent on the current statement the cursor maps to. This is already handled
in a more general case since the positioned statement must cope with the statement
for the cursor changing completely without any invalidation. Also the positioned
statement has its own dependency on the table being modified so will be recompiled
through that mechanism if the table changes in any way.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516285 13f79535-47bb-0310-9956-ffa450edef68"
3b45118981489567631f2ba3238128b6a9c725dd,"DERBY-2380 (partial) Add the test changes for the change of PreparedStatement no longer bing a provider.
(missed from last commit). Changes are as a result of there is no such state as a closed
cursor, only open or non-existent, so no longer throw a cursor is closed message, but
instead a cursor not found error.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516286 13f79535-47bb-0310-9956-ffa450edef68"
3be157520c0348d1577be44d84d1aa8d87b82481,"DERBY-1983 (partial) Add some of the new methods added in JDBC 3.0 to UpdateableVTITemplate
which is the base class for the trigger transition table virtual tables.
Don't add the getParameterMetaData method yet as it will cause issues on JSR169
since ParameterMetaData is not part of JSR169.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516296 13f79535-47bb-0310-9956-ffa450edef68"
026fbdd08f7a71e5376db9e2c85d34bf763e7464,"DERBY-2411: convert scrollCursors2.java to JUnit

Fixed eol-style.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516322 13f79535-47bb-0310-9956-ffa450edef68"
a4441663b3aceafcfbbaae05f281d9c7cbd34841,"DERBY-2411: convert scrollCursors2.java to JUnit

Removed javadoc comment for deleted method.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516323 13f79535-47bb-0310-9956-ffa450edef68"
d5ef90671c5c1dd03ed00a755df797a0731a72bf,"DERBY-681: Remove the ""wrap group by's in a subselect"" rewrite in the parser.
This patch preserves the having clause through bind and optimize phases and
then, during the final rewrite for aggregates in the GroupByNode, it transforms
the having clause to a valid restriction. See text file attached to the Jira
for more information.

Contributed by Manish Khettry (manish_khettry@yahoo.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516454 13f79535-47bb-0310-9956-ffa450edef68"
886218283079642da37a7da9b6006cf22a6cda29,"DERBY-1983 (partial) Change the default base compile level to JDK 1.4 including
changing the target/source flags for the compiler to be 1.4 instead of 1.3.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516518 13f79535-47bb-0310-9956-ffa450edef68"
6bdd06e1aebe227620268fc9d8eac21a709c81de,"DERBY-1983 (partial) Remove most references to jdk13 in the build and any requirement
to download it or the optional components from JDK 1.3.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516554 13f79535-47bb-0310-9956-ffa450edef68"
6d9a817b4ed4856e52d9ec75f31768fa01c64f16,"DERBY-1983: Update Mac OS X build instructions to reflect 1.4 as base level


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516596 13f79535-47bb-0310-9956-ffa450edef68"
72a917ac8d914c7e2fd79a92cd9857b57b74c7ea,"DERBY-2094 (partial) Add the new order transaction plus a better way of handing the many PreparedStatements
needed by the oe.direct.Standard class.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516613 13f79535-47bb-0310-9956-ffa450edef68"
d0ed190eb4131f9706776e0d10890e2d83c77dc7,"Patch for DERBY-2416 : Provide a shell for a subclass of SQLChar which will use the passed Collator to do the collation rather than 
SQLChar's default collation of UCS_BASIC

This patch introduces a new class called CollatorSQLChar which extends SQLChar. The new class has a RuleBasedCollator associated with it
and that Collator object determines the collation. A new format id is added for this class and code regarding format id has gone into 
RegisteredFormatIds, StoredFormatIds and DTSClassInfo. 

The new class is bare minimum at this point and new collation related methods will be added to this class in later patches. This new class
does not get used in Derby at this point. The query compiler code will need to be changed so that this class can get some action. This will 
happen in upcoming patches.

Dan had some suggestion on creating collation elements as required rather than doing it all upfront. Dag also had suggestion on alternative
implementation for array handling involved with collation element creation. We agreed on tackling these issues once the basic functionality 
is in for language based ordering.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516864 13f79535-47bb-0310-9956-ffa450edef68"
219004dbcbff7a7d8ad2a361d3e46bcf6e5ab5b9,"Checkin for DERBY-2416

DTSClassInfo and RegisteredFormatIds are referring to the new subclass of SQLChar by it's old name which is not correct. The new class
should be referred to as CollatorSQLChar. This checkin fixes the problem.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@516869 13f79535-47bb-0310-9956-ffa450edef68"
4a2b0d9a02439fbe5d8e1f7a76f22a5632d198cc,"DERBY-2359 (2a): Rename methods starting with uppercase letters (Code cleanups for the org.apache.derby.impl.store.access.* packages).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517129 13f79535-47bb-0310-9956-ffa450edef68"
09b38be4a5f319faa8aa2cff7145ce3c574a430e,"DERBY-2220: Uncommitted transactions executed through XAResource will
hold locks after the application terminates (or crashes during the
transaction).

Abort the global transaction on a derby server when the network socket
is closed.

Patch contributed by Julius Stroffek.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517131 13f79535-47bb-0310-9956-ffa450edef68"
8b6bd40d0c9a61cae21c8910f5cad4cce8f196aa,"DERBY-2262: DatabaseMetaData.getTypeInfo returns incorrect MAXIMUM_SCALE value for DECIMAL and NUMERIC types (changed from 32767 to 31).

Patch contributed by Saurabh Vyas.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517132 13f79535-47bb-0310-9956-ffa450edef68"
5d68e5f6b0ebe99b06ee7a7b421af0bc7ca31e65,"Removed unused import.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517219 13f79535-47bb-0310-9956-ffa450edef68"
180546e3c6bdd211c1e6d9bf1a0721941cc64485,"DERBY-2380 minor cleanup in dependency manager. No code changes apart from making some
fields final, but added comments to main objects in BasicDependencyManager as my understanding
of the code grows.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517221 13f79535-47bb-0310-9956-ffa450edef68"
028077ebd670b383b919fda0810e8d5027cd45b1,"DERBY-47 (partial): Patch to implement execution-time ""probing"" given a probe
predicate ""place-holder"" and a list of IN values. This patch creates a new
execution-time result, MuliProbeTableScanResultSet, to perform the probing.

At a higher-level the changes in this patch make it so that repeated calls to
MultiProbeTableScanResultSet.getNextRowCore() will first return all rows matching
probeValues[0], then all rows matching probeValues[1], and so on (duplicate probe
values are ignored). Once all matching rows for all values in probeValues have
been returned, the call to getNextRowCore() will return null, thereby ending
the scan.

In order to accommodate the above behavior, the following changes were made to
existing files:

 1 - Add correct instantiation logic to the ""getMultiProbeTableScanResultSet()""
   method of GenericResultSetFactory, which was just a stub method before this
   patch.

 2 - Overloaded methods in TableScanResultSet to allow the passing of a ""probe value""
   into the openScanController() and reopenScanController() methods. The methods
   then use the probe value (if one exists) as the start/stop key for positioning
   a scan, instead of using the start/stop key passed into the result set constructor.

 3 - Made the iapi.types.DataType class implement the java.lang.Comparable interface
   for the sake of easy sorting (just let the JVM do the sort). Since DataType (the
   superclass of all datatypes and base implementation of the DataValueDescriptor
   interface) already has a ""compare()"" method that returns an integer to indicate
   less than, greater than, or equal, all we have to do is wrap that method inside
   a ""compareTo()"" method and we're done.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517470 13f79535-47bb-0310-9956-ffa450edef68"
c774a1c494d9fd7cbee1ad84c2a20a012b44a4f3,"DERBY-1496 - (initial checkin) 
  Add tests that will replace the various *users* tests, as well as dataSourcePermissions* and testSecMec.java. 
  Some test cases were moved from dataSourcePermissions(_net) to checkDataSource.java.
  The *AuthenticationTests can not yet be run successfully, because the junit framework's tearDown() attempts to call ds.shutdownDatabase which is not available with ClientDataSources.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517483 13f79535-47bb-0310-9956-ffa450edef68"
53444cd20e1e4c3bec1d86cc7079391acff2ba53,"DERBY-2430: setObject(int targetType, Blob source) and setObject(int
targetType, Clob source) should disallow updates on all targetTypes
except BLOB and CLOB respectively

Patch contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517577 13f79535-47bb-0310-9956-ffa450edef68"
d11ededb202ef3128c2493b6387bae5b358af4fd,"DERBY-2327 (partial) Reduce monitor contention in LockSet

Refactor SinglePool to make it easier to have lock factories with
different LockSet implementations.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517586 13f79535-47bb-0310-9956-ffa450edef68"
15fbc15a97eba28c2c05992b4c458d8a1ac9b0e2,"DERBY-1704: Allow more concurrency in the lock manager

Simplified LockControl.popFrontWaiter().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517588 13f79535-47bb-0310-9956-ffa450edef68"
43059cd4eff1ff4e9584d6e85f0a1c51a9c4eb2f,"Fixed javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517610 13f79535-47bb-0310-9956-ffa450edef68"
ec53257783d91dda22a120c40d67dcc560db9afb,"Fixed javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517614 13f79535-47bb-0310-9956-ffa450edef68"
3ba8a9a0ca5e87ee98751d6924109692750a3230,"DERBY-2327 (partial) Reduce monitor contention in LockSet

Make the deadlock detection code work on AbstractPool instead of SinglePool.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517680 13f79535-47bb-0310-9956-ffa450edef68"
4112e91aa432f57850dcb30d302f7642ef9070c7,"DERBY-2397 (cleanup) Move drop code to SchemaDescriptor and AliasDescriptor and clean up
various comments related to these objects.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517756 13f79535-47bb-0310-9956-ffa450edef68"
c2a81618f53769b5ca92ccf3506fc1295253a600,"DERBY-2397 (refactor) Refactor the implementation of the SQLJ routines (INSTALL_JAR,
REMOVE_JAR and REPLACE_JAR) so that the methods for the system procedures directly
call the code to install, remove or replace a jar file. Previously these routines
created ConstantActions and executed those, resulting in four extra classes that
just routed the procedures to the real code. Since these executions are not DDL
statements they should not use ConstantAction, no Activation was available (since no
compilation) which meant that executeConstantAction() was called with null which
is not the intended api for a ConstantAction. This resulted in NPEs if modifying
code in these jar constant action to use the activation as might be expected from
looking at other ConstantAction implementations.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517770 13f79535-47bb-0310-9956-ffa450edef68"
e6458615e5318bed72260c36a36d780b22f36f5e,"Minor cleanup to remove a throws clause from TupleDescriptor.getDataDictionary().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@517773 13f79535-47bb-0310-9956-ffa450edef68"
7b8eea6ffc80c8545d603694f7717072831db8da,"DERBY-1704 (cleanup)
  * Remove unused imports
  * Make classes package private
  * Remove check for condition that is always true
  * Simplify parameter lists


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518052 13f79535-47bb-0310-9956-ffa450edef68"
a67b87776f449f10d6758835e96f974f6d5d4b01,"DERBY-1704 (cleanup) Remove unused Hashtable.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518073 13f79535-47bb-0310-9956-ffa450edef68"
af7f5e2b672f77a100cd0f48d67af4b8153685f3,"DERBY-2264: Commit Dag's patch DERBY-2264.5.diff, which restricts encryption powers to the DBA.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518214 13f79535-47bb-0310-9956-ffa450edef68"
aa53134a2896ff1706ae3703818a2ea3d7c03fb9,"DERBY-2429 : Convert resultset.java to JUnit.

Tests migrated to new test: ResultSetMiscTest
- Tests of metadata on columns of different types.
- Tests of correlationnames and metadata calls.
- Tests of autocommit behaviour
- Test for Float.MAX_VALUE behaviour

Tests removed
- Test getXXX calls on different data types. This is already covered in ParameterMappingTest.java so I won't convert.

Tests moved
- Tests for mixed type NULLIF statements  moved to new test NullIfTest.java. Dan suggested I just reference the tableg in Casting.java instead of making a copy.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518228 13f79535-47bb-0310-9956-ffa450edef68"
9df640995d70b77877df3451a2d1dced85936917,"DERBY-2429  Add Utilities file missed with first checkin


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518240 13f79535-47bb-0310-9956-ffa450edef68"
7777c5ddc43547b70aba60f0a7d973ebc3b4f054,"DERBY-47 (partial): Patch that adds logic to create IN-list ""probe predicates""
during preprocessing, thus allowing the code changes in all previous patches
for this issue to take effect. With this patch Derby will now re-write IN
lists as probe predicates and, if the optimizer thinks it is best to do so,
will do index ""multi-probing"" at execution time to avoid excessive scanning.
The changes in this patch affect ""preprocessing"" logic as follow:

  1. Replaces ""A"" with ""B"", where ""A"" is existing logic that creates a BETWEEN
     node for IN-lists containing all constants, and ""B"" is new logic that
     creates a ""probe predicate"" for IN-lists containing all constants *and/or*
     parameter nodes. The probe predicates are then used throughout optimization,
     modification of access paths, code generation, and execution time (as
     appropriate) in the manner described by previous patches for this issue.

  2. Adds some additional logic to OrNode preprocessing to allow the conversion
     of queries like:

        select ... from T1 where i in (2, 3) or i in (7, 10)

     into queries that look like:

        select ... from T1 where i in (2, 3, 7, 10)

     This is really just an extension of the existing logic to transform a
     chain of OR nodes into an IN-list.

  3. Adds logic to PredicateList.pushExpressionsIntoSelect() to correctly
     copy ""probe predicates"" so that the left operand (column reference)
     is pointing to the correct place when we do static pushing of one-
     sided predicates (which is what a ""probe predicate"" is).

  4. Adds a new method to ValueNodeList that is used for checking to see if
     a list of IN values consists solely of constant and/or parameter nodes
     (there are no other expressions or column references).

This patch also incorporates all of the test master updates required as a
result of the new multi-probing functionality.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518322 13f79535-47bb-0310-9956-ffa450edef68"
0cd484d7c4a9ae856c8305fa734b9018bcfbb87a,"DERBY-2429 Remove old resultset.java and related masters



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518331 13f79535-47bb-0310-9956-ffa450edef68"
14299573c14887c10e302772442eb8f7b19e4f2b,"DERBY-2397 (refactor) Move drop code for ConglomerateDescriptor into ConglomerateDescriptor.drop().
Add various comments from information gained while refactoring code and minor cleanup.
One more dropping of a ConglomerateDescriptor needs to be modified to use the drop() method
but requires some cleanup for DERBY-1343

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518343 13f79535-47bb-0310-9956-ffa450edef68"
5698f98f4beebbb5a0fc9bc28b25966806cbdfed,"DERBY-2452 Convert prepStmtMetaData.java to junit.
remove prepStmtMetaData.java and replaced with PrepStmtMetaDataTest.java
This is a direct translation of the test.  We could use some additional
checking with PreparedStatements that return ResultSets.  I may add that
in a separate checkin.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518360 13f79535-47bb-0310-9956-ffa450edef68"
ffdaf1e6cb91bbd9fb300ff961aa266b0663a9f6,"DERBY-378 (partial)
This patch adds code to handles NULL (SQL NULL) data while 
performing import/export of table with column types blob, clob.  
Checks for invalid hex strings in the import file while performing 
import into a table with Blob column. Import will throw an exception 
if it detects any invalid hex strings in the import file for blob column. 

Tests:

1) Added a new junit test ImportExportLobTest.java  to 
tests import/export of clobs and blob data. 

2) Wrapped  BufferInputStream/BufferedReader around the streams
   used in BaseJDBCTestCase.java:assertEquals() methods to compare 
   clobs/blobs. Without buffering these assert method were really slow. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518427 13f79535-47bb-0310-9956-ffa450edef68"
442b53025605fb330277a5196cb67b54a5c92bd3,"Some cosmetic changes to CollatorSQLChar. Changed the class comment to get rid of the copy and paste from the superclass's class comment.
Changed the comments for class fields to javadocs. Changed one of the class field's name so it indicates it's purpose rather than it's
field's type. And lastly, added additional comments to the like() method.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518479 13f79535-47bb-0310-9956-ffa450edef68"
362b5324653c6f620c35d061564e64b5b402198d,"DERBY-2393: Change the test name from RunLangTest to RunOptimizerTest.

Patch contributed by Manjula Kutty.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518577 13f79535-47bb-0310-9956-ffa450edef68"
d73bd78a733a542ef34fee31a30bda336891fceb,"DERBY-2452: Disabled prepStmtMetaData in JDBCHarnessJavaTest, since it has been rewritten to JUnit and the file has been deleted.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518618 13f79535-47bb-0310-9956-ffa450edef68"
5bc123ad5d32b8004b425793e7e17341ee4df4ea,"DERBY-2452 (partial) move createAndPopulateAllDataTypesTable to JDBC so it can 
be used by multiple tests.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518672 13f79535-47bb-0310-9956-ffa450edef68"
8443b6fcbc2a3243cc58f0c34cbba3866fd97b1a,"DERBY-681 (followup): Make the visibleSize() method of ResultColumnList less
restrictive by taking into account all generated columns, not just those added
in GroupByList#bindGroupByColumns.  Also, add an example query to subquery.sql
that shows why this change is needed.

Contributed by: Manish Khettry (manish_khettry@yahoo.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518687 13f79535-47bb-0310-9956-ffa450edef68"
7c22a6264b272f92f4833ab202d8f12c3c2d36f7,"DERBY-2452 add some tests for PreparedStatement.getMetaData when a ResultSet is returned.  Previously the test only had tests for statements without ResultSets returned.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518718 13f79535-47bb-0310-9956-ffa450edef68"
df3ba0988b00c1782a0268ba980541e2d88d9623,"Add test utility method to clear (set to null) a string Java bean property for a data source.
Use this in AuthenticationTest to simplify data source creation and ensure data sources created
are based off the current configuration.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518728 13f79535-47bb-0310-9956-ffa450edef68"
2b0fe6677a392edf4ca35d39a77c83a6f1aeb899,"DERBY-2392: Add verbose option to RunOptimizerTest.

Committed for Manjula Kutty <manjula.kutty@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518785 13f79535-47bb-0310-9956-ffa450edef68"
1d7133ec6a51f214f131c6df511b94ebcee7280a,"DERBY-2318 - preventing a difference between jvms in how a new Throwable stack trace is presented to cause a false test failure.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518814 13f79535-47bb-0310-9956-ffa450edef68"
310379075c1a64275c1ac9a51e148094854b2b97,"DERBY-2456 (partial) 

temporarily disabling a test case that is making 
ImportExportTest.java test fail due to bug DERBY-2456.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518816 13f79535-47bb-0310-9956-ffa450edef68"
d4c62dac3192baea009464258182d22b4b37df1d,"Add some comments to JDBC (for junit test) to clarify the JDBC.vmSupports() methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518861 13f79535-47bb-0310-9956-ffa450edef68"
ca1a8f26a79f77578dac6863062d7e904cfa5a34,"DERBY-2217 Add the test of trying to encrypt an upgrade non-encrypted database from the old
upgrade test to the new upgrade Junit based test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518863 13f79535-47bb-0310-9956-ffa450edef68"
afff7e0f8a3642049f53c5109a2abbdaa8d46ea7,"DERBY-1982 - 
  jdbcapi/_Suite.java: 
    now that the build level is jdk14, we don't need a separate section
    anymore for jdk13/jdk14 built tests. 
    Also removed the vmsupportsJDBC20 section and moved the one test to 
    section supportsJDBC30.
    Also added a very few whitespace changes; all addsuite statements 
    in the main section now have 2 tabs in front of them. 

DERBY-1496 -
  (prematurely) checked in some changes:
  derbynet/_Suite.java: added NSSecurityMechanismTest
  derbynet/NSSecurityMechanismTest: modified sleep times, adjusted some
    comments and replaced non-executed assertSQLState.
  jdbcapi/checkDataSource.java: adjusted whitespace
  jdbcapi/AuthenticationTest.java: added comments to test methods, added
    emptying of databaseName for system shutdown test method


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518875 13f79535-47bb-0310-9956-ffa450edef68"
461d0d635573c4c013ddb372ea914206aaa31724,"DERBY-1496 - backing out premature change (went in with revision 518875)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@518978 13f79535-47bb-0310-9956-ffa450edef68"
c9c3c8e8da1348a2e4e180106ca759a8fa78676c,"DERBY-2435: Commit derby-2435-01.diff, making NetworkServerControl pick up properties from derby.properties as needed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519004 13f79535-47bb-0310-9956-ffa450edef68"
b1cb2cc622c39bbbaf09d92641130cd9aa9ee2bd,"Fix javadoc warnings in ResultSetMiscTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519028 13f79535-47bb-0310-9956-ffa450edef68"
7db4c08a6cccd90ec6940c0637aa6afd11c7e5df,"Add comments to BUILDING.txt to clarify which compiler is used from which JDK when build.compiler is not set.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519039 13f79535-47bb-0310-9956-ffa450edef68"
e6cce75b5b88979d3c92979fac5c2def2d741bad,"DERBY-2217 Add check to ensure that non-encrypted database can be encrypted after a hard upgrade.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519068 13f79535-47bb-0310-9956-ffa450edef68"
918e8b08621551cd204db7411321fd31bbb93a31,"DERBY-2217 convert upgrade test fixture that re-encrypts an existing encrypted database dueing upgrade.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519185 13f79535-47bb-0310-9956-ffa450edef68"
497f79d93e2750b9f782a80ccb857809c26c0791,"DERBY-2427: Disable ClobStoredProcedureTest and BlobStoredProcedureTest for
weme6.1 since they are intended for client/server testing and weme6.1 is not
currently supported for that framework.

Contributed by: V. Narayanan (v.narayanan@sun.com) 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519190 13f79535-47bb-0310-9956-ffa450edef68"
f07c8c713d797c2388d587930f1ccc95cad3e297,"DERBY-2114: Let Clock embed a HashMap rather than inherit from Hashtable

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519644 13f79535-47bb-0310-9956-ffa450edef68"
41943bbb71905b73e6f8c0d398d13a8492381873,"DERBY-2442: Remove code made redundant by DERBY 681.

Patch contributed by Manish Khettry.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519936 13f79535-47bb-0310-9956-ffa450edef68"
6264d1e3cb56fc0f0bfda04e19f871d4bef504b4,"DERBY-2419: Refactor some code in TestConfiguration so that SecureServerTest does not need to access TestConfiguration constants which ought to be private.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519945 13f79535-47bb-0310-9956-ffa450edef68"
24390c92840750bc31f6a85b0a02cd09cbb8130d,"DERBY-2217 Add test fixture to JUnit test case that tests a connection cannot be made to the
upgraded database from the old version.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519950 13f79535-47bb-0310-9956-ffa450edef68"
c5571dfa6ccdf39df7204cda76c755c5d6de9303,"DERBY-2217 Make sure the encryption fixtures do not run in J2ME for the Upgrade test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519967 13f79535-47bb-0310-9956-ffa450edef68"
23201b8d9f520a99368bd1114d015dc089a1ff57,"DERBY-2217 Add tests.upgradeTests._Suite to suites.All with indication that it requires
a system property derbyTesting.oldReleasePath to run any tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@519972 13f79535-47bb-0310-9956-ffa450edef68"
2bb13aca19c3e795999f777952fb587448e42d18,"DERBY-1861: ASSERT when combining references and expressions in ORDER BY

An ORDER BY clause wihch combines both column references and expressions
causes the sort engine to throw an ASSERT failure in sane builds.

The data structure problems that are exposed by DERBY-1861 both have to do
with the duplicate elimination processing. When the duplicate pulled-up
columns are eliminated from the result column list, the OrderByColumn and
ResultColumn instances may both end up with incorrect values.

The OrderByColumn class contains a field named addedColumnOffset. This
field records the offset of this particular OrderByColumn within the
portion of the result column list which contains pulled-up columns.
Each time a column is pulled up into the result column list, its
addedColumnOffset is set; thus the first pulled-up column has
addedColumnOffset = 0, the second pulled-up column has
addedColumnOffset = 1, etc.

However, later, when duplicate pulled-up result columns are detected
and removed by bind processing, the addedColumnOffset field is not
re-adjusted, and ends up with an invalid value. 

The ResultColumn class contains a field named virtualColumnId. For columns
which are not directly from the underlying table, but rather are the result
of expressions that are computed at runtime, the columns are assigned a
virtualColumnId. For reasons similar to those of the addedColumnOffset,
this field also ends up wiht an invalid value when the duplicate
pulled-up columns are detected and removed from the result column list.

I decided that the best thing was to arrange to call each of the
OrderByColumn instances and ResultColumn instances at the point that
the duplicate result column is detected and removed, to give each of
those objects a chance to adjust its addedColumnOffset and
virtualColumnId value to reflect the removed column. Although this change
required a number of small changes, none of them was terribly complicated,
and the effect of the fix is that the data structures are as desired.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520038 13f79535-47bb-0310-9956-ffa450edef68"
e3c5119776778edd9247b84133cb6cc777925707,"DERBY-2217 Remove old harness based upgrade test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520044 13f79535-47bb-0310-9956-ffa450edef68"
aeec33f82cf0a72c856a0219a0765d4ae025bfb5,"Remove gump split targets, no longer necessary to build Derby with gump
since the JDK 1.3 dependencies have been dropped.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520063 13f79535-47bb-0310-9956-ffa450edef68"
fa3b4252c01d83dd252c8ef1a6c9acfcd2cec223,"DERBY-1620: Changes to look more closely at the ""then"" and ""else"" nodes
of an SQL CASE statement and, in situations where one or more SQL NULLs
exist, to cast the NULLs to an appropriate type (instead of just casting
them to CHAR, which is what Derby did previously).

Contributed by: John Peterson (john.peterson@pega.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520173 13f79535-47bb-0310-9956-ffa450edef68"
9d82913018bca9e7d19aef0b480ce11e605d2015,"DERBY-47 (cleanup): Cleanup patch which does the following:

  1 - Changes Predicate.isRelationalOpPredicate() so that it just calls
      the already existing method ""isRelationalOperator()"" on the left
      operand of the predicate's AND node.  This ultimately comes down
      to a simple check for a null variable in BinaryRelationalOperatorNode,
      which is cheaper than the old check.

  2 - Adds a new method, ""isInListProbeNode()"", to ValueNode. The default
      case returns ""false"", while BinaryRelationalOperatorNode returns true
      if it has a source IN-list associated with it.

      Also adds a corresponding method called ""isInListProbePredicate()""
      to Predicate.java. This method allows for simple (and relatively
      cheap) checking of a predicate to see if it is an IN-list probe
      predicate.

  3 - Modifies Predicate.getSourceInList() to return the underlying
      InListOperatorNode for probe predicates AND for ""normal""
      IN-list predicates (i.e. an IN-list that could not be
      transformed into a ""probe predicate"" because it contains
      one or more non-parameter, non-constant values)

      This then allowed for some cleanup of other related code in
      PredicateList.java.

      Also adds a second version of getSourceInList() that takes a
      boolean argument; if true, then it will only return the source
      IN list for a predicate *if* that predicate is an IN-list
      probe predicate.

  4 - Changes PredicateList.generateInListValues() to account for the
      fact that it only ever gets called when we know that there is
      a probe predicate in the list.

  5 - Shortens a couple of lines in FromBaseTable that were added with
      earlier patches but were longer than 80 chars. Also rewrites
      one Sanity check in that class to avoid construction of strings
      when no error occurs (per recent discussions on derby-dev). 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520188 13f79535-47bb-0310-9956-ffa450edef68"
ab72e354bee28908ada31616855254cf9e2ea15f,"DERBY-47 (partial): Patch which creates a new JUnit test based on the repro
program attached to the Jira.  The test creates the same kind of table and
data as that repro, and then runs three types of queries with larger and
larger IN lists. The three types of queries are:

  1 - ""Markers"" : same as in the repro program
  2 - ""Literals"" : same as in the repro program
  3 - 'MixedIds"": IN list has a combination of parameter markers and literals.

For each query we check to make sure the results are correct and then we look
at the query plan to determine whether or not the optimizer chose to do multi-
probing. If the results are incorrect or if the optimizer did *not* choose
multi-probing then the test will fail.

The test determines that ""multi-probing"" was in effect by looking at the query
plan and verifying two things:

  1. We did an index scan on the target table AND

  2. The number of rows that ""qualified"" is equal to the number of rows that
     were actually returned for the query.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520191 13f79535-47bb-0310-9956-ffa450edef68"
e3dbf4362cbd7dea9da6d0091ede41aa65b1420b,"DERBY-2242 Add pattern testing to DatabaseMetaDataTest for the getColumnsModify() fixture,
hopefully in a way that will allow easy additon of other pattern matching tests for
other metadata methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520193 13f79535-47bb-0310-9956-ffa450edef68"
3568cea19fff7b2b43cff594883ff3b8c71f73b4,"DERBY-378 (partial)
This patch adds some code required to support import/exoprt of lob data.
1) Addded  code to read clob data using getCharacterStream()
instead of getString() while importing clob data from an extern file. 
(Note: Clobs are read using getString() until DERBY-2465 is fixed).
2) Made some code changes to make each lob column has it it's own file handle to
   the lob file to read the data, otherwise streams can get corrupted when 
   there are more than one clob/blob type column in the table.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520197 13f79535-47bb-0310-9956-ffa450edef68"
c7fdf722ae4a64be752a0911414f6355ca9a1755,"DERBY-2398 (partial): converts jdbcapi/autoGeneratedJdbc30.java to JUnit.

Converts all tests in autoGeneratedJdbc30.java to JUnit fixtures: 
- Unlike the original test, each fixture is a standalone test, so there's no
  longer a visible progression of incrementing keys like there was in the old
  master. Instead, the Setup() method resets keys to 1 before each fixture is 
  run.
- Runs in both embedded and client.
- An empty suite is returned if the VM doesn't support JDBC 3.0.
- Warning: the testResultSetGarbageCollection() fixture takes a noticeable
  amount of time to run.

Also adds a prepareStatement(String sql, int autoGeneratedKeys) utility method 
to BaseJDBCTestCase.java

To do: remove old harness files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520230 13f79535-47bb-0310-9956-ffa450edef68"
95c67a5430c46f5fb7a34ce28305a9d52e4de0de,"DERBY-2217 Run the Changes10_3 fixture that inserts 94,000 rows in non auto-commit mode for the upgrade test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520268 13f79535-47bb-0310-9956-ffa450edef68"
f7914e17f66246e6b9bcc7289182e0d9d5a07c6d,"Update mainline STATUS file to reflect Dag's election as a Derby committer.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520475 13f79535-47bb-0310-9956-ffa450edef68"
9f0e44537f95c45754b827aabde99fa0f7eba1fa,"DERBY-2463 Create runtime statistics parser for JUnit tests
Create SQLUtilities.getRuntimeStatisticsParser and
executeAndGetRuntimeStatisticsParser for use by tests.
Also move createAndPoplulateAllDatatypesTable to SQLUtilities



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520613 13f79535-47bb-0310-9956-ffa450edef68"
9a6609b33e5196b78ad5e05c6583ed4a355fd249,"DERBY-2399 convert setTransactionIsolation to junit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520617 13f79535-47bb-0310-9956-ffa450edef68"
b4bf66f6b712335aa843f815e4761539430a5080,"DERBY-2398: remove jdbcapi/autoGeneratedJdbc30.java from old test harness,
replaced by jdbcapi/AutoGenJDBC30Test.java JUnit test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520622 13f79535-47bb-0310-9956-ffa450edef68"
1122f0105ef0e347614d1d1f45ef9e31f9ff0267,"DERBY-2463 Add SetTransactionIsolationTest to _Suite


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520628 13f79535-47bb-0310-9956-ffa450edef68"
74592e2ed0ff4aa29c7fda63843be96e2b97d269,"DERBY-2283 convert lang/currentof.java test to junit test

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520662 13f79535-47bb-0310-9956-ffa450edef68"
eb10a33bd276c90a7b9d40242e0ca69333d88489,"Set Throwable.initCause() in a couple of locations at the JDBC level where we setup nested SQLExceptions.
This means that automatically the stack trace for a database failed to start includes the reason
for the failure, rather than just ""see next exception"". This is a great help when running
JUnit tests and getting failures to start a database.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520663 13f79535-47bb-0310-9956-ffa450edef68"
052d75767ad519df27d310f3a1febc8413da52d4,"DERBY-2456 (export file stream was not closed when export fails due 
to an invalid codeset).

This patch closes file streams correctly, if any exception occurs 
while setting up the streams required to perform export. Re-enabled the test 
case in ImportExportTest.java that was disabled earlier due to this bug.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520684 13f79535-47bb-0310-9956-ffa450edef68"
b92fb1dcbbd38f75a787307f9a60af40673705d6,"DERBY-1861: ASSERT when combining references and expressions in ORDER BY

Follow-on patch to ensure that SanityManager references are only generated
in SANE builds. A call to SanityManager.ThrowAssert was not enclosed in
a SanityManager.Debug test, and so was not being optimized out of
insane builds.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520699 13f79535-47bb-0310-9956-ffa450edef68"
77de125d1534366c39109a30a52ff57dbaec3477,"DERBY-2458 (partial): Convert lang/unaryArithmeticDynamicParamter.java to junit.

Patch committed for Manjula Kutty <mkutty@remulak.net>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520709 13f79535-47bb-0310-9956-ffa450edef68"
d0a3d020cfed2923baa6a58eac7f345ccf2279a5,"Clean up error messages for new JDBC.assertParameterTypes() to indicate a problem
with parameters and not columns if a failure occurs. This will just reduce confusion
for anyone debugging a test failure.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520739 13f79535-47bb-0310-9956-ffa450edef68"
c5925e91c682d73304f8fdd6853a4d0bc9e3af49,"DERBY-2472 (partial): Backed out initial commit that broke tests under Java SE 6.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520826 13f79535-47bb-0310-9956-ffa450edef68"
b3bf9cab31eb31332b07a45a4335a6a70ec2d336,"DERBY-2442: Remove code made redundant by DERBY 681.

Patch contributed by Manish Khettry.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@520885 13f79535-47bb-0310-9956-ffa450edef68"
f570970e4f49707f3a62c00e4a35ce592a85ed84,"DERBY-2458 : remove old lang/unaryArithmeticDynamicParamter.java test.
Patch committed for Manjula Kutty <mkutty@remulak.net>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521036 13f79535-47bb-0310-9956-ffa450edef68"
1b46090f15105ca8056e12cf0f2533fa9a5e4daf,"DERBY-1496: committing patch DERBY-1496_20070321.diff. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521055 13f79535-47bb-0310-9956-ffa450edef68"
b17e04d6ede5b596d17e1f76fa10eed38c53095f,"DERBY-2464 convert lang/ShutdownDatabase.java to junit, added new test lang.ShutdownDatabaseTest.
Only runs in embedded due to DERBY-2477
Contributed by Manjula Kutty - mkutty@remulak.net


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521056 13f79535-47bb-0310-9956-ffa450edef68"
19ea3276f0012829be3474d4f76872375b2be091,"DERBY-2264 (followup): Disable jdbcapi/DboPowersTest for JSR169 since
Derby does not support database encryption for that platform (per
the specification for JSR169 attached to DERBY-97).

Contributed by: Dag Wanvik (dag.wanvik@sun.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521401 13f79535-47bb-0310-9956-ffa450edef68"
dfc6a7a03b4499fda193214af106778313c5ea89,"DERBY-1496: preventing NSSecurityMechanismTest to be loaded with JSR169 - it imports javax.sql.ConnectionPoolDataSource which isn't available with JSR169.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521422 13f79535-47bb-0310-9956-ffa450edef68"
97734e3e04d6eb5d9566477ee6696ccaf1ee9272,"DERBY-2410: convert grantRevoke.java to JUnit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521432 13f79535-47bb-0310-9956-ffa450edef68"
c96b7998205646c873ba2baf55f112b13923f65e,"DERBY-2422 convert lang/holdCursorJava.java to junit.
Contributed by Manjula Kutty



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521453 13f79535-47bb-0310-9956-ffa450edef68"
284ec4f65f4e8fb3f6e3ad67ad616f138473faaa,"DERBY-2458: fix javadoc warning in the class doc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521455 13f79535-47bb-0310-9956-ffa450edef68"
ea8eec08dc53df7ef863af62ae3ab02f0a05f5db,"DERBY-2348: Move testProtocol.java back to running in the old harness
due to differences in output on IBM JVMs


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521558 13f79535-47bb-0310-9956-ffa450edef68"
0d841f1af41a3b74348ed1811f110e52f7879929,"DERBY-2220: Local variable hides instance variable

Patch contributed by Julius Stroffek.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521609 13f79535-47bb-0310-9956-ffa450edef68"
a21540eeb1e624edf06ac5c13b7894e7f4133784,"DERBY-2348: disable testProtocol.java for the moment until I can figure out a
good way to easily switch the test between the old harness and JUnit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521614 13f79535-47bb-0310-9956-ffa450edef68"
bb29639794225589106415eab7300ca5375f16b2,"DERBY-2474: Convert jdbcapi/XATest.java to junit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521854 13f79535-47bb-0310-9956-ffa450edef68"
95e850d9fbf323e6a9c427b511230d700eef7dc1,"DERBY-827 (partial) Clean up generation of execute() method of activation to ensure
that if the ResultSet is re-used then the execute actions are still called per-execute
instead of once when the result set is created.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521882 13f79535-47bb-0310-9956-ffa450edef68"
68be5f6865020cba31749f45449418f04b3eb006,"DERBY-2348: Put testProtocol.java back in the old harness for now.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521949 13f79535-47bb-0310-9956-ffa450edef68"
9e3ce38b84824886fffe5533b5da70544dfcc31c,"DERBY-2418: testProtocol should not use a hardcoded port number

Committed for Julius Stroffek <Julius.Stroffek@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521977 13f79535-47bb-0310-9956-ffa450edef68"
da6a934309020be3ab266c7aafe6039ae6d33aff,"Updated javadoc in Clock to reflect the changes made in DERBY-2114.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@521991 13f79535-47bb-0310-9956-ffa450edef68"
fef20ca262d4e742de2402fa0aa616fa28474be7,"DERBY-378 (partial)
This patch adds code required to enable new system procedures added to 
support import/export of lob data on hard upgrade from versions before 
10.3. Added a new test case to the 10.3 upgrade test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522077 13f79535-47bb-0310-9956-ffa450edef68"
83606560b940a82aa1880a8fcdef1cef7b5a479a,"DERBY-2118: Cleanup of ArrayInputStream

- Patch which improves the clearLimit() method by removing the
  possibility that the byte array is ever null.

- Instead of using null when creating an empty ArrayInputStream an
  empty array is used instead.

- Remove some unused methods.

- Change some callers of the 2-arg setLimit() to the 1-arg setLimit()
  as it is more efficient.

- Fix a bug where setData() would not reset the position to zero
  (previously it was unmodified at a potentially invalid position)

Contributed by Daniel John Debrunner.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522167 13f79535-47bb-0310-9956-ffa450edef68"
84178905ea7776e833c6705536013e80897b14e7,"DERBY-2486 Rename SortController.close to completeInserts which better matches its current use
and future use once SortController is used to completely control a sort.
Also some minor protection changes of methods in the sort implementation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522280 13f79535-47bb-0310-9956-ffa450edef68"
d1862781ea0ae759237f64b653bdc7dba52d754f,"DERBY-2486: Fixed missing method-rename.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522292 13f79535-47bb-0310-9956-ffa450edef68"
edf1a953fc9879ccdae4cb8772249dbe60f855cb,"DERBY-2450: Clob.Position returning wrong value when operating on Reader. Pattern-search algorithm rewritten.

Patch contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522440 13f79535-47bb-0310-9956-ffa450edef68"
f962ae714eacd82925bfcb344d0691d2665c886d,"DERBY-2359: Removed a workaround for a problem in mssdk302


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522442 13f79535-47bb-0310-9956-ffa450edef68"
c6012226c0210b8e2b231f517a03b91aaf8b0e2b,"DERBY-1876: Move conversion of query timeout to milliseconds out of
EmbedResultSet's constructor, and get column count without creating a
meta-data object


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522445 13f79535-47bb-0310-9956-ffa450edef68"
dbcd4c1761aaca689949681e66dd25d05cbd9812,"DERBY-2450: JavaDoc rewrite/-format for EmbedClob.position(String,long).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522447 13f79535-47bb-0310-9956-ffa450edef68"
59a5a70a2cd50033cca9474314c417148b5167a7,"DERBY-2466: Introduce system procedure which reloads the security policy file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522515 13f79535-47bb-0310-9956-ffa450edef68"
0a0ec5c1d88bbaeefef02545ae2f3e09ea4018cb,"DERBY-2466: Separate the template security policy from the default policy used by the secure-by-default server.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522579 13f79535-47bb-0310-9956-ffa450edef68"
2093babb3dd2fb4de68bcf86de2850be6fa83187,"Put procedures for ParameterMappingTest in the test.
Old test paramterMapping.java is still being run so don't remove from 
util/ProcedureTest.java/SimpleProcedure.java  just yet.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522639 13f79535-47bb-0310-9956-ffa450edef68"
968443669920fbbf2db3222db4ac67ae83723a16,"DERBY-2474  Remove tests that are redundant with XATest.java.
These tests had been left to run with jdk1.3.1, but jdk1.3.1 testing is no 
longer required.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522648 13f79535-47bb-0310-9956-ffa450edef68"
0975b04693e0ff9c28c8b1f2d432d0fd4bf5ed6f,"DERBY-2485 Example code for a simple transaction listener scheme. Not yet used or
compiled by the build.xml files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522655 13f79535-47bb-0310-9956-ffa450edef68"
f06ca0f068e8f3ea3fcac1265cefc1c1b632514e,"DERBY-2485 Example code for a simple transaction listener scheme. Not yet used or
compiled by the build.xml files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522656 13f79535-47bb-0310-9956-ffa450edef68"
87f528da3a0382e36da60a7b0ca2ff342f15dc52,"DERBY-2422 - activate for JSR169. Also fixed a javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522683 13f79535-47bb-0310-9956-ffa450edef68"
1b318a681f14dcb379b252e3187ade7faf032e25,"Fix javadoc errors in test hierarchy.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522767 13f79535-47bb-0310-9956-ffa450edef68"
2099e21501a125335fb548b6320bbcd08984239e,"DERBY-2484: Convert syscat.sql to JUnit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522772 13f79535-47bb-0310-9956-ffa450edef68"
2420903ed7c96f0a6cef6f7ccbd955ffe783c289,"DERBY-2247: Provide set methods for blob in embedded driver

Fixed some review comments. Patch contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522789 13f79535-47bb-0310-9956-ffa450edef68"
45fdfa32a4222a11042171f80d4359bd41a494ce,"Add license header to new SystemCatalogTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522795 13f79535-47bb-0310-9956-ffa450edef68"
43319b571e6c4b001aa8e943ac2a8626ec867cc4,"DERBY-2472: Use Throwable.setStackTrace() in EmbedSQLException


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522866 13f79535-47bb-0310-9956-ffa450edef68"
89459c8f64cd5dc864ffb620739ffc8c958f55e5,"DERBY-2443: Implement ResultSet updateClob/updateBlob methods on the
NetworkClient

Patch contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522873 13f79535-47bb-0310-9956-ffa450edef68"
2d2cb5f932a9310a15730472d8093195451a2195,"DERBY-1496 - removing 
  jdbcapi/users.sql
  jdbcapi/users2.sql
  jdbcapi/secureUsers.sql
  jdbcapi/secureUsers1.sql
  jdbcapi/dataSourcePermissions.java
  derbynet/dataSourcePermissions_net.java
  derbynet/testSecMec.java
     They've been replaced by junit tests:
  jdbcapi/AuthenticationTest.java
  jdbcapi/DriverMgrAuthenticationTest.java
  jdbcapi/PoolDSAuthenticationTest.java
  jdbcapi/XADSAuthenticationTest.java
  derbynet/NSSecurityMechanismTest.java
   (some test cases from dataSourcePermissions_net were moved to checkDataSource.java)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522923 13f79535-47bb-0310-9956-ffa450edef68"
58a3f06ded6ce79962b9f8b26365ba3aab695898,"DERBY-2466: Only run the SecurityPolicyReloadingTest if we are running against jar files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@522982 13f79535-47bb-0310-9956-ffa450edef68"
c8f894e53f7f3463ad64c2fb301c57e48d0b45f2,"DERBY-378 (partial)
This patch changes the names of the new system procedures added to 
support import/export of lob data. New procedure names are :

SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE(..)
SYSCS_UTIL.SYSCS_EXPORT_QUERY_LOBS_TO_EXTFILE(..)
SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE(...)
SYSCS_UTIL.SYSCS_IMPORT_TABLE_LOBS_FROM_EXTFILE(..)

Removed the test cases added earlier to  ieptests.sql test 
for this issue, now those test cases are covered by the 
new junit tests. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523028 13f79535-47bb-0310-9956-ffa450edef68"
ba10abaca56fa712bdf1fb5a390b8c0cc24293c0,"Fixed formatting of code example in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523037 13f79535-47bb-0310-9956-ffa450edef68"
ff9a9cff5aba620c112476409b95fc77ed59dca3,"DERBY-2460 (partial): Created the home for package-private class tests. Sub-packages should be created and removed as appropriate as tests are added or removed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523255 13f79535-47bb-0310-9956-ffa450edef68"
a4b21b3b15f2c0021eb08bb3568bbb199f841839,"Added myself to STATUS.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523340 13f79535-47bb-0310-9956-ffa450edef68"
dc0953480ee0032966246164c5008181eefb817d,"DERBY-2466: Add upgrade test for new policy-reloading procedure.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523399 13f79535-47bb-0310-9956-ffa450edef68"
0b0252d86695907ee65b28767d0b422953b9ffbb,"DERBY-2256: Make sure that IN-list comparisons are done with the ""dominant"" type
when two values have different type precedences. More specifically:

  - When determining the ""judge"" type in InListOperatorNode.preprocess(),
    iterate through all of the values to find out what the dominant type is,
    and then use that as the ""judge"" for sorting. Prior to these changes we
    just used the type of the left operand as judge, but that was not correct.

  - At execution time (i.e. in DataType.in()), add logic to ensure that all search
    comparisons are done using the dominant type of the values being compared.

  - Add appropriate test cases to lang/inbetween.sql.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523411 13f79535-47bb-0310-9956-ffa450edef68"
b9c2e8792dcc5944d87632a116b0f3cdba4e50f0,"Clarify nested connection behaviour in TransactionController following some discussion in DERBY-2490.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523450 13f79535-47bb-0310-9956-ffa450edef68"
0b2eeba7bcd6d93ae08dbea17672b180078bf562,"DERBY-2491 (partial): Add new DistinctTest, not wired
in to _Suite due to one failing test case related to
DERBY-47 that merits investigation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523454 13f79535-47bb-0310-9956-ffa450edef68"
b07c100fa55631463ec5ded16bf8cd6f1c6d7af9,"DERBY-2316: Ole's first cut at making a JUnit test out of the compatibility test driver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523505 13f79535-47bb-0310-9956-ffa450edef68"
0edfef6ec6874851dd226d29d8a5bcbbcfdcb1db,"DERBY-2491: Add DistinctTest to lang/_Suite, remove old distinct tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523546 13f79535-47bb-0310-9956-ffa450edef68"
1523f049b9c074e34bc893794577c1670949163d,"DERBY-2493 (partial) Use unsynchronized collections in BackingStoreHashtable

Updated some tests so that they are not sensitive to the order of the
rows in the returned ResultSet.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523621 13f79535-47bb-0310-9956-ffa450edef68"
a8ccb07f5bf6c3ae9487c02fee111d60c4b4f858,"DERBY-2493 (partial) Use unsynchronized collections in BackingStoreHashtable

Updated some tests so that they are not sensitive to the order of the
rows in the returned ResultSet.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523691 13f79535-47bb-0310-9956-ffa450edef68"
9b046c6f939b7da853f460fe758e734631429cf6,"DERBY-2490 (partial) Cleanup in GenericLanguageConnectionContext for the current use
of read-only nested transaction. Part of a series of changes to align the LCC use
of nested transactions with the api provided by the store, including moving
all calls to get a nested transaction for an LCC to be through the LCC and not via
its transaction directly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523884 13f79535-47bb-0310-9956-ffa450edef68"
2d2140b0ec8815df6939662e71af76ff8a723c99,"DERBY-2502: Commit patch which closes result sets in the JUnit tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523887 13f79535-47bb-0310-9956-ffa450edef68"
128eeb6e99e388f9da2055d93b268ea41eb84b42,"DERBY-1102 More progress in converting triggerGeneral to Junit, testing of ordering of triggers with constraints.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523935 13f79535-47bb-0310-9956-ffa450edef68"
54a710dc985d80fae52949c1fdbd6acff9cdb697,"DERBY-1102 More testing of constraint violations for TriggerTest and remove test cases in triggerGeneral.sql that are covered by the TriggerTest JUnit test

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@523945 13f79535-47bb-0310-9956-ffa450edef68"
83e4e39248212fbf26fcb602cf98c410c3baf221,"Add a junit top level target (junit-all-codeline-jars) that runs the junit-all test from a codeline setting the classpath to include the derby jar files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@524179 13f79535-47bb-0310-9956-ffa450edef68"
f35adc58a0a5555b65d122a36e4b7576e89cde68,"DERBY-2466: Attempt to fix NPE during run of SecurityPolicyReloadingTest on some environments.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@524252 13f79535-47bb-0310-9956-ffa450edef68"
f309c7df5579cb5c509520a4502a693d5c6228da,"Add logic to build.xml so that the build fails for target junitreport if the tests fail.
This allows better integration with tools like CruiseControl that can report automatically upon failures.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@524273 13f79535-47bb-0310-9956-ffa450edef68"
3a2db6bc26697cac3059bdb1521b239adafeae59,"This commit provides collation sensitive subclasses of SQLVarchar, SQLLongvarchar, SQLClob namely, CollatorSQLVarchar, CollatorSQLLongvarchar and CollatorSQLClob. This new classes differ from their superclasses in how a non-default Collator is used for collation sensitive methods. 

The main problem that I came across while working on this patch is that Java does not allow multiple inheritence. Currently, the iapi.types package has  SQLChar as the base class. From this SQLChar, we have 2 subclasses, namely, CollatorSQLChar and SQLVarchar. At the moment, CollatorSQLChar overrides the collation sensitive methods(currently, there is only one collation sensitive method in CollatorSQLChar called like. More will be added later) from SQLChar. In order to provide a non-default collation implementation of SQLVarchar, I need to subclass SQLVarchar, but I can't simultaneously inherit from CollatorSQLChar method to get the collation sensitive implementation of the like method. Becuase of this limitation, one option is to duplicate the implementation ofcollation sensitive methods from CollatorSQLChar into CollatorSQLVarchar. That also means that we will have to duplicate the code in Collation sensitive subclasses of SQLLongvarchar and SQLClob. That is code duplicaiton in 4 classes. 

In order to avoid this code duplication, I am introducing a new helper class called WorkHorseForCollatorDatatype. This new class will keep the Collator and the SQLChar object whose data needs to be collated. The new class's like method will user the Collator object on SQLChar to do the comparison. Now, the non-default collation implementation of SQLChar and SQLVarchar can simply instantiate the new WorkHorseForCollatorDatatype class and delegate all the work for like method to WorkHorseForCollatorDatatype. This will avoid the code duplication and will keep the code in one central place. 

In addition, I have added a new interface called CollationElementsInterface. This interface should be mplemented by all the non-default collation implementation subclasses. The methods defined in the interface will be used by the like method(and other collation methods in future) in WorkHorseForCollatorDatatype. 

These new non-default collation implementations for all the char datatypes are not hooked into Derby at query compile phase and hence they do not currently get used. More code to follow later to make these classes active in Derby. 

One other change in this package is to remove the formatid for CollatorSQLChar. These formatid changes for CollatorSQLChar went into revision 516864. But since then, we have changed the design and rather than adding new datatypes for non-default collation implementations, we will simply associate a RuleBasedCollator with them and this collator will get used during collation at runtime. Because of this design change, I am removing the changes related to new formatid that went in revision 516864. This impacts RegisteredFormatIds.java, StoredFormatIds.java and CollatorSQLChar.java 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@524545 13f79535-47bb-0310-9956-ffa450edef68"
81f2fcc113d3ed2f16675b7e795fed014ab2be25,"DERBY-2476: Convert lang/forbitdata.java to Junit

Committed for Ramandeep Kaur <ramandhindsa@gmail.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@524933 13f79535-47bb-0310-9956-ffa450edef68"
0f0f8ade5b353c095ecd4c7e2f13a9b2b94559d0,"DERBY-1852: Fix ""modification of access paths"" code in TableOperatorNode
so that the final query tree accurately reflects (and generates) the
necessary modified nodes.  Patch also adds corresponding test cases
to lang/union.sql and updates master files accordingly.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@524940 13f79535-47bb-0310-9956-ffa450edef68"
1cf9854d5264fd47ce01549e9b7179147864e4d4,"Change build.xml target junit-all-codeline-jars back to calling junit-all after mistaken change to junitreport

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@524956 13f79535-47bb-0310-9956-ffa450edef68"
251688a3e8f42bcd897af67f725d23a61075f17c,"DERBY-2521: Add level settings for all <echo>s in the build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525286 13f79535-47bb-0310-9956-ffa450edef68"
93ce86581eee70c7122e4e7560378f64bd3c31aa,"Change the ant junit test running to not use antcall, just multiple <test> tags in the junit task.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525324 13f79535-47bb-0310-9956-ffa450edef68"
38520af26380540185da2b4af4f153eb84e59c39,"DERBY-2505 (partial): Convert derbynet/testij.java to JUnit. Getting an NPE
looking for the test script when running with jars, need to resolve that before
hooking it into the derbynet _Suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525326 13f79535-47bb-0310-9956-ffa450edef68"
c9bb465064e095e5ce7e0a13c969bd0bdb7c18f7,"DERBY-2522 Convert jdbcapi/procedureJdbc30.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525331 13f79535-47bb-0310-9956-ffa450edef68"
fdb0ac33277128720e29c3981f3a8aa4aca2f09c,"DERBY-2461 Convert lang/procedure.java to junit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525332 13f79535-47bb-0310-9956-ffa450edef68"
d4c820686926ecd4a12e40b9eaf395eb268b7676,"Remove converted tests from old harness suites


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525408 13f79535-47bb-0310-9956-ffa450edef68"
962db2d5415071ef623bb2fb225b837a85245a93,"DERBY-2386 Change {fn timestampdiff} to return a BIGINT.
Contributed by Mayuresh Nirhali Mayuresh.Nirhali@Sun.COM

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525549 13f79535-47bb-0310-9956-ffa450edef68"
7752cf6db948724e9ae38f9ed6218d4152b23757,"This patch is for DERBY-2524 (DataTypeDescriptor(DTD) needs to have collation type and collation derivation. These new fields will apply 
only for character string types. Other types should ignore them.) and it does following 2 things
1)Add collation type and collation derivation attributes and apis to TypeDescriptor interface and it's implementations.
2)Save the collation type in the scale field of character types in writeExternal method of TypeDescriptorImpl. And read the scale field into 
the collation type for character types in readExternal method of TypeDescriptorImpl. 

svn stat -q
M      java\engine\org\apache\derby\iapi\types\DataTypeDescriptor.java
M      java\engine\org\apache\derby\catalog\TypeDescriptor.java
M      java\engine\org\apache\derby\catalog\types\TypeDescriptorImpl.java

Details of the patch
1)Added getters and setters for collationType and collationDerivation in TypeDescriptor. In addition, TypeDescriptor has new constants
defined in them which will be used by the rest of the collation related code in Derby. One of the constants is COLLATION_DERIVATION_INCORRECT
I am initializing the collation derivation for all the data types to COLLATION_DERIVATION_INCORRECT in TypeDescriptorImpl. This should get 
changed to ""implicit"" or ""none"" for character string types before the runtime code kicks in. For all the other types, it will remain set to
COLLATION_DERIVATION_INCORRECT because collation does not apply to those data types.
2)DTD implements the new apis in the TypeDescriptor interface.
3)2 set of changes went into 
a)TypeDescriptorImpl has 2 new fields, namely, collationType and collationDerivation. collationDerivation is initialized to 
TypeDescriptor.COLLATION_DERIVATION_INCORRECT. For character string types, these field should get set correctly. In addition, there are apis 
to set and get values out of these 2 fields.
b)The next change for this class is in writeExternal and readExternal methods. I would like community's feedback on my assumption for this
particular change. The collation type of a character string type will get saved in the existing scale field since scale does not apply to 
character string types. My question is about collation derivation. The collation derivation infromation does not get saved like collation 
type. But may be that is ok because I am assuming that writeExternal and readExternal get called only for the persistent columns (ie columns 
belonging to system and user tables). Collation derivation of such character string columns (coming from persistent tables) is always 
implicit. And, hence in readExternal, for character string types, I can initialize collation derivation to be implicit. My assumption is 
that readExternal and writeExternal methods will never get called for character string types with collation of none or explicit. Today we 
don't have explicit as one of the possible values for collation derivation, but a character string type will have the collation derivation 
of none if it was the result of an aggregate method involving operands with different collation derivations. This comes from item 11) from 
Section Collation Determination section at http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478

Questions
1)I have included all the constant definitions related to collation in TypeDescriptor. If anyone has suggestion on a better place to 
define them, let me know. Wonder if there is already a class to define miscellaneous constant definitions like the ones I have added. 
TypeDescriptor does look like a good place for these constants defined by me because these constants all belong to the data type world.
2)Is it right to assume that readExternal and writeExternal methods in TypeDescriptorImpl will get called only for persistent columns?



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525568 13f79535-47bb-0310-9956-ffa450edef68"
ce97577d495d826486a27841098d78ac10d634cb,"DERBY-2505: Convert derbynet/testij.java to JUnit. Updates the policy file
to allow ij to read/write/delete from the extinout dir and added a comment
about why ij needs PropertyPermission * read.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525649 13f79535-47bb-0310-9956-ffa450edef68"
6813da0a9a63109054ce76cccc78622f265a1d3c,"Move URLCheck into impl/tools/ij, it shouldn't be in the public API package.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525650 13f79535-47bb-0310-9956-ffa450edef68"
96a630c7c8e5b2ee49b8c907961cc4b73a09c60b,"Submitting a patch (DERBY2524_Collation_Info_In_DTD_v2_diff.txt) attached to DERBY-2524. This is a followup to the earlier commited patch (DERBY2524_Collation_Info_In_DTD_v1_diff.txt svn revision 525568) 

svn stat -q
M      java\engine\org\apache\derby\iapi\types\DataTypeDescriptor.java
M      java\engine\org\apache\derby\iapi\types\StringDataValue.java
M      java\engine\org\apache\derby\catalog\TypeDescriptor.java
M      java\engine\org\apache\derby\catalog\types\TypeDescriptorImpl.java

The patch does following to address feedback received on the earlier patch in thread http://www.nabble.com/-jira--Created%3A-%28DERBY-2524%29-DataTypeDescriptor%28DTD%29-needs-to-have-collation-type-and-collation-derivation.-These-new-fields-will-apply-only-for-character-string-types.-Other-types-should-ignore-them.-p9842379.html 
1)Moved the constant definitions from TypeDescriptor to StringDataValue.
2)Added javadoc comments for all the constants. One big javadoc comment for one of the constants in the related constants and other 
constants in that group will just have a javadoc of @see. 
3)I had used string costants for collation derivation since they are more verbose. But that is more expensive than simply using
int. As a middle ground, I have defined collation derivation constants as int but the names of the constants are verbose :)
I also changed the api for collation derivation to work with int rather than String. Finally, changed collationDerivation from
String to int in TypeDescriptorImpl.
4)Rather than using ""error"" to indicate incorrect collation derivation, we will just initialize collation derivation to ""none"".
For all character string types, the collation derivation should get changed to ""implicit"" unless we are working with aggregate
result type of character string type and the operands to the aggregate have different collation types.
5)Currently, I only save collation type of a persistent character string type column into SYSCOLUMNS's COLUMNDATATYPE column. Collation
derivation for such character string type is assumed as ""implicit"" because that is the only possible option in Derby 10.3 for persistent
columns. But in some future release of Derby, when we will start supporting SQL COLLATE clause, we will want to differentiate between 
""explicit"" and ""implicit"" collation derivation for such persistent columns. So, may be it will be good for us to start saving collation 
derivation too. For now, I have added this task as a line item under wiki page http://wiki.apache.org/db-derby/BuiltInLanguageBasedOrderingDERBY-1478 under ""Performance/Desirable items"" section.
6)I caused several javadoc errors for using @see Classname.methodname rather than @see Classname#methodname. Sorry about that. Fixed 
those errors in this patch.

I think with this patch, I have taken care of all the feedback received on the earlier patch DERBY2524_Collation_Info_In_DTD_v1_diff.txt.

Again, if anyone has any comment on this committed patch or earlier commit svn revision 525568, please send your feedback on
Derby mailing list.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525729 13f79535-47bb-0310-9956-ffa450edef68"
91495aad71df3bc5c95a84a0df9344513e6bae67,"checking formatting changes for inconsistent tab/whitespace usage, separating
this from my real changes coming soon.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525870 13f79535-47bb-0310-9956-ffa450edef68"
031843a03ca7fdc91cf6c98f63e1bbf46c5375dd,"DERBY-2502: Fix error in XMLTypeAndOpsTest introduced by ResultSet-closing patch.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525924 13f79535-47bb-0310-9956-ffa450edef68"
435c451f4aed9c33fdd947c5b2384e6202118999,"DERBY-2500: Fix PredicateList.orderUsefulPredicates() to recognize when we're
doing a hash join and to explicitly avoid generating probe predicates in that
case.  Also re-enable the ""testResultSetInOrderWhenUsingIndex()"" fixture for
lang/DistinctTest.java and add some additional test cases.  Finally, update
comments where appropriate to better explain the need for this restriction
on probe predicates.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525925 13f79535-47bb-0310-9956-ffa450edef68"
ccce12c3978b056ba27a06475b79fc89f87f36ce,"DERBY-2502: Add a header comment to XML.java, explaining how to configure your environment so that the XML tests run. Also fix a javadoc warning in BaseJDBCTestCase.java.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@525933 13f79535-47bb-0310-9956-ffa450edef68"
61bcf0eba8f4c4016257bf6cc8110df024e71d03,"DERBY-2467: Convert lang/updateCursor.java to JUnit.

Committed for Ugo Matrangolo <matra@santippe.dyndns.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526070 13f79535-47bb-0310-9956-ffa450edef68"
b343735475736eef7e920c4de4e46b887a048aad,"DERBY-2492 - initial check in for converted checkDataSource.java and checkDataSource30.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526087 13f79535-47bb-0310-9956-ffa450edef68"
7e5a9435ada267e647440a36fe7347f30f8bc0c6,"This commit is for DERBY- 2528 Set the correct collation type in SchemaDescriptor. The collation type will be UCS_BASIC for system schemas but it can be 
TERRITORY_BASED/UCS_BASIC for user schemas.

The patch implements the correct default collation type for schemas with following design
DataDictionary(DD) now has two additional fields and two additional apis. The field names are
int collationTypeOfSystemSchemas 
int collationTypeOfUserSchemas 
The apis associated with them are
public int getCollationTypeOfSystemSchemas() 
public int getCollationTypeOfUserSchemas() 
DD in it's boot method initializes the collationTypeOfSystemSchemas to StringDataValue.COLLATION_TYPE_UCS_BASIC In the same boot method, it checks the 
collation property supplied through optional JDBC attribute COLLATION and set collationTypeOfUserSchemas to StringDataValue.COLLATION_TYPE_UCS_BASIC or 
StringDataValue.COLLATION_TYPE_TERRITORY_BASED. This covers the changes made in DD. 
  
Now coming to SD. SD has a new field 
int collationType 
It also has a new api called 
public int getCollationType() 
This new field gets initialized in SD's constructor. SD's constructor already gets DD and isSystem passed to it. SD can use these 2 parameters to 
initialize collationType. The additional code in SD's constructor looks like this 
if (isSystem) //check if I am a system schema 
   collationType = DD.getCollationTypeOfSystemSchemas(); 
else 
   collationType = DD.getCollationTypeOfUserSchemas(); 


The reason I am having SD's constructor call DD to get the collation type rather than collationType simply getting passed to SD's constructor is that the 
later approach would require us to change all the places where a SD object is created and have them pass the additional collationType parameter to it's 
constructor. I searched through the code and there are several places where we create a SD. 
  
With the approach of this patch , we have to change code in only one place and that would be in SD's constructor (and ofcourse we need changes in DD as 
explained in my mail earlier. But the changes in DD are required no matter how SD gets the right value in it's collationType field). 

svn stat -q 
M java\engine\org\apache\derby\impl\sql\catalog\DataDictionaryImpl.java 
M java\engine\org\apache\derby\iapi\sql\dictionary\SchemaDescriptor.java 
M java\engine\org\apache\derby\iapi\sql\dictionary\DataDictionary.java 

Following describes individual file changes
1)The changes in DataDictionary(DD) involves adding 2 new apis. These apis is how a SchemaDescriptor in it's constructor will get the correct collation type
from DD. The 2 apis are as follows 
public int getCollationTypeOfSystemSchemas(); 
public int getCollationTypeOfUserSchemas(); 
2)The changes in DataDictionaryImpl(DDimpl) involves adding 2 new fields and implementation of the apis added in DD. The 2 new fields are 
private int collationTypeOfUserSchemas; 
private int collationTypeOfSystemSchemas; 
These 2 fields get initialized in DDimpl's boot method. Since the primary purpose of these 2 fields is to have correct collation type for user and system 
schema so a SchemaDescriptor(SD)'s constructor can call the apis on these 2 fields, these 2 fields should get initialized before SDs start loading into the 
system. 
It is easy to set collationTypeOfUserSchemas because in Derby 10.3, it is always UCS_BASIC. I do this initalization before DDimpl's boot method calls 
getBuiltinSchemas. This method was used to load SYS SDs along with SESSION SD(which is used for global temporary tables. But global temporary tables are 
user defined temporary tables and hence SESSION schema should be considered a user schema rather than system schema. But the collation type of user schemas 
can't be determined at this point in the boot method and hence for this reason, 
I have taken out SESSION SD creation out of getBuiltinSchemas. Later, in DDimpl's boot method, I go through the code of looking at COLLATION property(for 
existing database)/attribute (for database that is getting created) to determine the user schema collation. Once that is determined, we are safe to load 
a SD for SESSION schema. 
3)The change in SD is to have a field called collationType and this field gets initialized in SD's constructor using the 2 new apis on DD. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526237 13f79535-47bb-0310-9956-ffa450edef68"
9a1149dc3a994d86f2e2bf2892bec97b3051208a,"Fix the build failure caused by checkin 526237. EmptyDictionary in the storeless package needs to implement the 2 additional methods added
into DataDictionary interface as part of checkin 526237


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526243 13f79535-47bb-0310-9956-ffa450edef68"
bb1179492b26016e8b540f4588521080cc3d17d3,"Correction from a previous patch in TypeDescriptorImpl. The collation derivation should be initialized to none. It will be the job of the Derby code to initialize it correctly to implicit where ever it applies.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526313 13f79535-47bb-0310-9956-ffa450edef68"
6e48cbee380fffd6ca317c6091d406f037a4ebba,"Committing the patch DERBY2530_create_alter_table_collation_type_v1_diff.txt attached to DERBY-2530. This patch changes alter table and 
create table code so that the persistent user defined character types will have collation type of their schema.

svn stat -q
M      java\engine\org\apache\derby\impl\sql\compile\AlterTableNode.java
M      java\engine\org\apache\derby\impl\sql\compile\CreateTableNode.java
M      java\engine\org\apache\derby\iapi\sql\dictionary\SchemaDescriptor.java

This patch includes following changes
1)If a character type is getting added by alter table statement then AlterTable node needs to set the collation type of that character 
column to same value as schema descriptor's collation type. Collation derivation of this column will be set to implicit.
2)For all the character columns that get added by create table statement, CreateTable node should set their collation type to same value 
as schema descriptor's collation type. Collation derivation of such columns will be set to implicit.
3)Provide a method called getCollationType on SchemaDescriptor so that AlterTable node and CreateTable node can call that method.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526385 13f79535-47bb-0310-9956-ffa450edef68"
b3140c26c887049654257651a6446e6dc64bd2fd,"Typo in previous patch.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526454 13f79535-47bb-0310-9956-ffa450edef68"
48e423743a6c158281aa86fac6646a83afb1f102,"DERBY-2492 - adding DataSourceTest to jdbcapi/_Suite.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526662 13f79535-47bb-0310-9956-ffa450edef68"
0cab10f1ff0c7512aedac06b5ee7dcb1f41b09d8,"I am committing an intermediate patch for language based ordering. This patch is also attached to DERBY-2534 as 
DERBY2534_getValue_On_StringDataValue_v1_diff.txt. The patch adds a new api to StringDataValue interface and the new api looks as follows
public StringDataValue getValue(RuleBasedCollator collatorForComparison);

The new api will be needed in quite a few different places. 2 distinct uses that I can see at this point are
1)Store will have a format id and collation type when it is trying to construct a DVD template. Using the formatid, we will first
always get the base class DVD for char datatypes namely SQLChar, SQLVarchar, SQLLongvarchar or SQLClob. But, if the collation type
is not 0  ie it is not UCS_BASIC, then we want to use Collation sensitive DVDs of base char DVDs because we want to use the passed
Collator for collation rather than the default UCS_BASIC Collator. The collation sensitive DVDs of char datatypes are CollatorSQLChar, 
CollatorSQLVarchar, CollatorSQLLongvarchar and CollatorSQLClob. In order to derive these collation sensitive DVDs of character datatypes, 
we will use this new api called getValue on base character DVDs. The getValue method will have the Collator object as parameter to it. 
If the Collator object is null, then we can continue to use the base DVD. But if the Collator object is not null, then we want to 
construct collation sensitive DVD. The new api on StringDataValue will help achieve this behavior.
2)Another place which I can envision using this new api is in DataTypeDescriptor.getNull() method which returns a DVD. Currently, the
implementation of this method looks as follows
	public DataValueDescriptor getNull() {
		return typeId.getNull();
	}
So, if the typeid of DTD is character data type, this method will always return base char DVD, no matter what is the collation type of
the DTD. But, if the DTD has a territory based collation set for it, then this method should return collation sensitive char DVD. This 
functionality can be achieved by using the new api on StringDataValue.

I do not anticipate this new method ever getting called on collation sensitive DVDs in Derby 10.3 In future, when Derby will start 
supporting SQL standard COLLATE clause, this method might get called on the collation sensitive DVDs but for Derby 10.3, the new api
in collation sensitive DVDs is just a place holder.


Another change to note is I have changed all the collation sensitive subclasses to have their method setCollator changed from private to
protected. This is so that the getValue method from their correspoding base classes can call the setCollator method on subclasses.

The files changed by this commit are
svn stat -q
M      java\engine\org\apache\derby\iapi\types\SQLLongvarchar.java
M      java\engine\org\apache\derby\iapi\types\StringDataValue.java
M      java\engine\org\apache\derby\iapi\types\CollatorSQLChar.java
M      java\engine\org\apache\derby\iapi\types\CollatorSQLClob.java
M      java\engine\org\apache\derby\iapi\types\CollatorSQLVarchar.java
M      java\engine\org\apache\derby\iapi\types\SQLChar.java
M      java\engine\org\apache\derby\iapi\types\SQLClob.java
M      java\engine\org\apache\derby\iapi\types\SQLVarchar.java
M      java\engine\org\apache\derby\iapi\types\CollatorSQLLongvarchar.java

The code compiles ok with my changes. None of the tests should get impacted because currently, this new api on StringDataValue is 
not called by any other code in Derby. 

If anyone has any feedback, please let me know.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526668 13f79535-47bb-0310-9956-ffa450edef68"
1b4dc97ebdd9a301005fbb6bb756bf0379a08f4c,"DERBY-2492 - removing old checkDataSource* files and references


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526775 13f79535-47bb-0310-9956-ffa450edef68"
c6751c92fd3da7626097129fdac3d8ebeae3ff61,"DERBY-2429 - remove file belonging to old resultset test (converted to junit, into ResultSetMiscTest, NullIfTest, and pieces into CastingTest)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526828 13f79535-47bb-0310-9956-ffa450edef68"
66fb979928d57643cd0c970dba60f35f0f7edf2a,"DERBY-2395 - csPrepStmt testing cases are covered in other (junit) tests; PrepareStatementTest and parameterMappingTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526833 13f79535-47bb-0310-9956-ffa450edef68"
3adfe759f3e42d4cec0d970eff734440ac0ed292,"DERBY-2492 - fix javadoc warning in DataSourceTest.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@526857 13f79535-47bb-0310-9956-ffa450edef68"
13117b07d807f42b3104116dfe3aa5c545073c4f,"My earlier commit 525568 caused grantRevokeDDL.sql to fail because in TypeDescriptorImpl's equals method, I was comparing the collaiton 
type and derivation for non-character datatypes to derive equality. Collation type and derivation should only be checked for character 
datatypes. This commit addresses that problem. I ran the derbyall suite and noticed no new test failures because of this patch.
The patch is being tracked as part of DERBY-2524


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527033 13f79535-47bb-0310-9956-ffa450edef68"
2ca9dc6bbda85da89711272b791c8706bee86614,"Adding a new api on DVF which will make Locale object available to DVF. This new api on DVF will get called by the boot method of 
BasicDatabase after BasicDatabase has finished booting DVF. This Locale will be either the Locale obtained from the territory attribute 
supplied by the user on the JDBC url at database create time or if user didn't provide the territory attribute at database create time, 
then it will be set to the default JVM locale. This Locale object will be used by DVF to construct the Collator object if user has requested 
territory based collation. 
The new api looks as follows
        void setLocale(Locale localeOfTheDatabase); 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527034 13f79535-47bb-0310-9956-ffa450edef68"
4cc03fcb8a2ebe6d2432f2e3ab90a10f55deb6f9,"DERBY-2395 - remove reference to deleted test csPrepStmt from 2 more suites.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527144 13f79535-47bb-0310-9956-ffa450edef68"
9230159e47229d1a3ab535661c39a309fc6077d8,"DERBY-2523  convert jdbcapi/LOBTest.java to Junit.
Moved parts of the test into BlobClob4Blob and CastingTest.java.  Metadata already covered by ResultSetMiscTest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527162 13f79535-47bb-0310-9956-ffa450edef68"
50bd23bfe29253cfce43a81359b0e04efff19407,"Let BasicDatabase set the locale of DVF by uncommenting the code in BasicDatabase's boot code that does the setting. This change is being
tracked in DERBY-2535.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527199 13f79535-47bb-0310-9956-ffa450edef68"
cf391af89034fdcdbd6ab3850f9c01f9b4f1f2d9,"Adding comments in GenericLanguageConnectionFactory to reflect the face that BasicDatabase is the first one to create DVF and then it 
sets the locale on the DVF. Later in it's boot code, BasicDatabase creates LanguageConnectionFactory which causes a call to 
GenericLanguageConnectionFactory.boot. When GenericLanguageConnectionFactory asks Monitor to get DVF, Monitor return the already created 
DVF which has the locale set on it. So, although we see Monitor code getting called twice for DVF, the 2nd time around we get the same 
instance that was created by the first call. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527235 13f79535-47bb-0310-9956-ffa450edef68"
c9e90d72bbf7d8e3686e8692fd910e6f7ff9f93f,"The constants declared in StringDataValue should be final because their values should not be allowed to change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527250 13f79535-47bb-0310-9956-ffa450edef68"
dcbaa6c3098ac50bac172dc9c337a6e00c442f2f,"prevent pinging a live host by switching to a fictitious apache location


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527286 13f79535-47bb-0310-9956-ffa450edef68"
c7c71f2013347bd6a29ad9783abb6a484e1ca7df,"DERBY-2492 - convert checkDriver test to junit test DriverTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527317 13f79535-47bb-0310-9956-ffa450edef68"
e17a43de1ca76104ddefaee622264612d737cc30,"DERBY-378 (partial)
This patch makes lob file to be created in the same location 
as main export file , if the specified lob file name is 
unqualified. i.e fileName string just contains the name 
of the file. And also improved error messages for couple
of user error cases. 

Added test cases for the above and also modified some existing 
test cases to perform import/export using different codeset. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527319 13f79535-47bb-0310-9956-ffa450edef68"
fedee299ad7f268150cb1f3882d8a7951ca63d58,"Fix testclientij in some environments. The script is loaded by getResourceAsStream, so need to use all forward slashes instead of File.separator to specify the
file name. Also get a couple of ij properties using util.getSystemProperty instead of putting the access in their own priv blocks. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527339 13f79535-47bb-0310-9956-ffa450edef68"
0b3c2c9d8ab363a5174d6de28d14b9fb0b20102f,"DERBY-2493 (partial) Use unsynchronized collections in BackingStoreHashtable

Replace Hashtable with HashMap.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527402 13f79535-47bb-0310-9956-ffa450edef68"
487531a1e4aad31b575710bba5b4a96fc8415aac,"DERBY-2497 - convert coalesceTests.java to junit test CoalesceTest.java.
   patch contributed by Ramandeep Sanghera


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527500 13f79535-47bb-0310-9956-ffa450edef68"
60fbce698e3a8bbfeb2a047c4757ee9d7d2edfa8,"Added my pgp public key to KEYS


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527504 13f79535-47bb-0310-9956-ffa450edef68"
395272b2681460fa1fd411b89314a14fc8e716f7,"Cleaned up javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527517 13f79535-47bb-0310-9956-ffa450edef68"
b08ebba7784941d1fb49388418ce72c11fade942,"DERBY-2536 Convert lang/procedureInTrigger.sql to JUnit

Added new test ProcedureInTriggerTest.java and removed old test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527668 13f79535-47bb-0310-9956-ffa450edef68"
e8668b9b47da11abb9ed1ba9f1b344bb72c5624d,"DERBY-2536 add ProcedureInTriggerTest to suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527715 13f79535-47bb-0310-9956-ffa450edef68"
ca42415a0b30cb8a7c236b4c3f38af8a27a635cd,"DERBY-2118: Make ArrayInputStream.setLimit(int,int) void


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527830 13f79535-47bb-0310-9956-ffa450edef68"
18176ce7687cacccc4f9cb514797a333784ccb9f,"DERBY-2359: Reduced visibility of a number of fields.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527842 13f79535-47bb-0310-9956-ffa450edef68"
79e77903864215bf7552fd0c5d8794d5245332d5,"Removed unused imports.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527892 13f79535-47bb-0310-9956-ffa450edef68"
25c47f75dea60d2f3e7608fe4f02d8cd052c7450,"Removed unused imports.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527893 13f79535-47bb-0310-9956-ffa450edef68"
e4f7ee9405cea6ffc288edf8776f4479e815ea3f,"Fixed javadoc warnings.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527910 13f79535-47bb-0310-9956-ffa450edef68"
4f0a685c08965f6be83c16e209a694a778a1f0c7,"DERBY-2193: Fix array index exception in import.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@527944 13f79535-47bb-0310-9956-ffa450edef68"
b61f8765f07a3febb1e4edf3150b6d331d9c34a0,"DERBY-2537, 1st incremental checking for this issue.  This changes builds
the framework for storing/retrieving the collation metadata in store and for
passing that info down from language into store.  Some paths still have
default collation hard coded and have been marked TODO-COLLATION.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528033 13f79535-47bb-0310-9956-ffa450edef68"
b5e133197c9194811621b000481dc38fb79ead37,"Committing patch DERBY2535_Return_Collator_api_On_DVD_v1_diff.txt attached to DERBY2535. This patch adds the api on DVF to return the 
Collator object depending on the collation type. The new api looks as follows 
RuleBasedCollator getCharacterCollator(int collationType); 

If the collation type is UCS_BASIC, then Collator object returned by the new api above will be null. If the collation type is 
TERRITORY_BASED, then Collator object returned will be the one based on the territory of the database. 

This new api will be used in a method on DataValueFactory(DVF) which will take format id and collation type and return a DVD based on 
those 2 values. That method on DVF will first consturct a DVD using just the format id. For character trype format ids, this means that 
the DVF will always be SQLChar/SQLVarchar/SQLLongvarchar/SQLClob. This is ok if we are dealing with collation type of UCS_BASIC. But if 
the collation type is TERRITORY_BASED, then we shoould construct a DVD of type 
CollatorSQLChar/CollatorSQLVarchar/CollatorSQLLongvarchar/CollatorSQLClob. In order to construct these collation sensitive DVDs, the method 
on DVF will call the new api on DVF (getCharacterCollator) and it will use the return Collator from getCharacterCollator to construct the 
right kind of character DVD. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528070 13f79535-47bb-0310-9956-ffa450edef68"
3ef9ee0e21720b076d7a2224a610fd3fb834078f,"DERBY-2536 - modify ProcedureInTriggerTest for behavior because of existing bug when running with jdk16.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528254 13f79535-47bb-0310-9956-ffa450edef68"
c4e95b5db80d1bb77e110dbff640a4648eab72f5,"DERBY-2264 Patch DERBY-2264-7.diff, which restricts database hard upgrade to the database owner.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528274 13f79535-47bb-0310-9956-ffa450edef68"
03f15c03ba86933788d886c742ce02293a04fcee,"DERBY-2114: Remove double synchronization in Clock

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528370 13f79535-47bb-0310-9956-ffa450edef68"
bd34a3ac82251697bc79ba4897be4988ee98dea1,"DERBY-2493: Use unsynchronized collections in BackingStoreHashtable

Store the duplicates in ArrayLists instead of Vectors.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528374 13f79535-47bb-0310-9956-ffa450edef68"
032cad819757b586f33539ee68e7566077ca2a05,"Fixed javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528464 13f79535-47bb-0310-9956-ffa450edef68"
97fdc36e735b81528dcaeddc21b2435d890b9746,"DERBY-2193: Add line numbers and file names to import error messages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528492 13f79535-47bb-0310-9956-ffa450edef68"
483783f33fc06b55c2108654bea1116f331bd7a1,"DERBY-2544: Disable SecurityPolicyReloadingTest because it fails in the tinderbox environment on java 6 when run in the suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528494 13f79535-47bb-0310-9956-ffa450edef68"
c9382f06df8112b325eb1602a69e80d37689a006,"DERBY-2444: Implement not implemented methods
Blob.getBinaryStream(long pos, long length) and
Clob.getCharacterStream(long pos, long length) in the Network Client

Patch contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528546 13f79535-47bb-0310-9956-ffa450edef68"
9584a61216401f87fba3614f33d0dd366b2c8a99,"DERBY-2543: remove testVirtualMemoryHeap from the nightly runs until it can be fixed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528670 13f79535-47bb-0310-9956-ffa450edef68"
4d83c528f4ba98d103cd8c30645ecbbb81906df4,"DERBY-2543: Wrapping the original SystemPropertyTestSetup in a DatabasePropertyTestSetup that shutdowns and restarts the engine allows the new setting for maxMemoryPerTable to be properly set for testVirtualMemoryHeap. Reenabling the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528677 13f79535-47bb-0310-9956-ffa450edef68"
c005646fb6f8e58786db43790f79d108b2a3f67f,"DERBY-2492 - modifications to DriverTest and DataSourceTest.java;
  - closing resultsets, connections
  - adding tearDown() to DatasourceTest
  - adding super.tearDown to DriverTest.tearDown
  - extra test cases


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528760 13f79535-47bb-0310-9956-ffa450edef68"
a3363333e2869462f9f1070da8534175cd1f48d7,"DERBY-827 (partial) Make MultiProbeTableScanResultSet reusable across
executions. Patch contributed by A B <qozinx@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528973 13f79535-47bb-0310-9956-ffa450edef68"
5efc1eacc43badadf267945058a0912b1aa79adc,"Turned some ordinary comments into javadoc comments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@528978 13f79535-47bb-0310-9956-ffa450edef68"
36ee5b2dbaf1194f558c78acff38ca4fd2492737,"DERBY-2478: 'Invalid transaction state...' in jdbcapi.SetTransactionIsolationTest

Close Statement and ResultSet.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529162 13f79535-47bb-0310-9956-ffa450edef68"
6de69bd3e64cb9057173d8f702a7f2f50978368f,"DERBY-2495: Create framework for calling locator related stored procedures from client. Note that most of this code must be enabled in a later commit.

Patch contributed √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529185 13f79535-47bb-0310-9956-ffa450edef68"
f18bc35097e83cc15a21895e9657f0084830994c,"Corrected typo.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529208 13f79535-47bb-0310-9956-ffa450edef68"
892e782f127d4bcf94f20aec9ab727c26ce0a8c6,"DERBY-2544: Let policy files for JUnit tests live outside the classpath and be identified by URLs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529241 13f79535-47bb-0310-9956-ffa450edef68"
74eba43171237de4eb522af3f769278100819a1b,"DERBY-2495: Followup patch improving JavaDoc and removing use of a String constructor.

Patch contributed by √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529259 13f79535-47bb-0310-9956-ffa450edef68"
d6d16dca28811335ab3f1ad1f89fd049761fbf23,"The same encryption algorithm was run twice, changed one of the tests to use another variant (CBC -> OFB).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529267 13f79535-47bb-0310-9956-ffa450edef68"
40d333e6884cd66d93769e95fca0b0f89051f1fa,"DERBY-2544: Re-enable the SecurityPolicyReloadingTest in the lang suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529277 13f79535-47bb-0310-9956-ffa450edef68"
ca42bbe10d0480a63bd7106523573941620b8c04,"DERBY-2193-03: Adjust the import/export lob tests which assert different results based on the vm level.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529322 13f79535-47bb-0310-9956-ffa450edef68"
32dba1c1c5809f57745cb78d84cf1009c70172cc,"DERBY-2541 Create initial testing framework for Junit Collation testing



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529368 13f79535-47bb-0310-9956-ffa450edef68"
1d94b69c74737cbf84df9c030b87d4c779f46b73,"DERBY-2542  convert lang/scrollCursors1.sql to junit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529435 13f79535-47bb-0310-9956-ffa450edef68"
f7b3a7aab62c23f4f2b7b7813f51914026ed91bf,"DERBY-2296 - implement setShutdownDatabase, getShutdownDatabase, setCreateDatabase and getCreateDatabase methods for client datasources.
  Also added a new junit test, DSCreateShutdownDBTest, and converted the only test that was affected by the client code change, dataSourceReference.java, to junit test DataSourceReferenceTest.java.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529505 13f79535-47bb-0310-9956-ffa450edef68"
459e1d016225b9b1e782b334f839bfe0c225309f,"DERBY-2193: Add comment explaining the usage of a synchronized Hashtable.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529654 13f79535-47bb-0310-9956-ffa450edef68"
4f76c3c2c87b9b074c8f45b760bdf888ebbe4fe4,"DERBY-2296 - the converted test DataSourceReference hits a nullpointer exception in the tinderbox tests...commenting out test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529665 13f79535-47bb-0310-9956-ffa450edef68"
767d65627cb8e719328a1d137fcc0718fe4bc457,"This change provides a new interface on DataValueFactory(DVF) which will be used by Store. Store has format ids and collation types and needs 
to have Objects created based on that information. This object creation will be supported by the new interface on DVF and it is called
getInstanceUsingFormatIdAndCollationType. 
DVF will keep an array of InstanceGetters for all the format ids supported by Derby. Initially, this array won't have anything. Every time
this new interface is called on a new format id, the InstnaceGetter obtained will be saved in that array so next time around, we don't need
to create a new InstanceGetter for the same format id. The next time around, the new interface will find the InstanceGetter in the array
and will use that to create an object based on format id. If the collation type passed to the interface is UCS_BASIC, then the new interface
will simply return that object. If the collation type is territory based and the object returned for the format id is of type 
StringDataValue, then the new interface will create a new DVD which is based on the territory based collation by calling
DVD.getValue(TerritoryBasedCollator).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529697 13f79535-47bb-0310-9956-ffa450edef68"
7fb2efb554ef4e686ae528dc7508d462657e8305,"DERBY-2554 convert lang/supersimple.sql to JUnit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529758 13f79535-47bb-0310-9956-ffa450edef68"
cb7b81e502fd8e6664bba9b16929e7225582b662,"DERBY-2117
This test was incorrectly depending on the exact free page state subsequent
to a delete.  This state is very timing dependent on when the post commit
thread can run so should not be used in tests to be run across a wide range
of platforms/machines.  I just got rid of the select of the state after the
delete, and left the rest of the test case.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529764 13f79535-47bb-0310-9956-ffa450edef68"
5694a4b9188a9a4fc968b0ee585877c3c898feba,"DERBY-2554 convert supersimple.sql



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529766 13f79535-47bb-0310-9956-ffa450edef68"
40c2e1dbb84080916ecdc0765de177219b1956e8,"DERBY-2561 convert simpleScroll.sql to JUnit
Rename ScrollCursors1.java to ScrollCursors1Test.java
incorporate simpleScroll.sql in to ScrollCursors1Test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529795 13f79535-47bb-0310-9956-ffa450edef68"
90f367e1d88c4df90de6d5fec6c5d6670af326d2,"DERBY-2296 - reinstate test DataSourceReferenceTest into jdbcapi._Suite.java, after making most of the test skip with jdk16 (with bug reference). Also removed stray comment left in ClientBaseDataSource.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529797 13f79535-47bb-0310-9956-ffa450edef68"
fc87a439f365978366bee811d49e3d966849cccc,"DERBY-2560 Missing asserts in ProcedureInTriggerTest
fix missing asserts and enable for network server.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529801 13f79535-47bb-0310-9956-ffa450edef68"
6404cdeff6db482f09a9ec094ffd33447c4b71a4,"DERBY-2537
This checkin changes the way store allocates new objects.  It changes all
allocations to be based off of DataValueDescriptor.getNewNull() and removes
direct use of InstanceGettor and direct use of getClass.newInstance().  This
checkin is in preparation for using the new DataFactory routines to allocate
correct collation based objects.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529815 13f79535-47bb-0310-9956-ffa450edef68"
d641aff3a8f6d6518342ffe4c9aa7eb5a910bd79,"DERBY-2296 - ensure values for createDatabase and shutdownDatabase get reset when the value is invalid. Add test case to DSCreateShutdownDBTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529838 13f79535-47bb-0310-9956-ffa450edef68"
d19a66fe4a3f7aa93c87f41d37f0fafda29cc3b6,"The previous patch for DERBY-2557 (revision 529697) had a bug in it. After getting a collation sensitive DVD, the new method on DVF
(getInstanceUsingFormatIdAndCollationType) was still returning the DVD with UCS_BASIC collation. This patch fixes that problem. More info
on this can be found in DERBY-2557.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529866 13f79535-47bb-0310-9956-ffa450edef68"
105543188051f5648892d894e087ba8d51d27bab,"Turned comments into javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529933 13f79535-47bb-0310-9956-ffa450edef68"
4b66efc84235fd5caae5d8eb810609258d95b303,"DERBY-595: Using derby.language.logStatementText=true can mask certain exceptions and lead to incorrect behavior in some cases. Streams will no longer be exhausted/read when logging values.
The format of the log strings for data values in derby.log has been slightly changed.

Patch contributed by Mayuresh Nirhali.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529983 13f79535-47bb-0310-9956-ffa450edef68"
9c7c51284c3f9826a807a7c4a185a867900f3ace,"DERBY-2444: Clean up boundary checks for LOBs

Patch contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@529987 13f79535-47bb-0310-9956-ffa450edef68"
2ef245a2d210a6b8e032cc3d52cc079b70c66145,"DERBY-2540 Restructure code for Blob/Clob length in client to prepare for locator implementation
Committed patch derby-2540_2. 

Contributed by Oystein Grovlen (Oystein.Grovlen@Sun.COM).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530070 13f79535-47bb-0310-9956-ffa450edef68"
e1fc78359d3b59e614fcb434c94b34493125826a,"DERBY-2346: Provide set methods for clob for embedded driver.

Patch contributed by Anurag Shekar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530085 13f79535-47bb-0310-9956-ffa450edef68"
745c37a6f3e8c8157d33f5513616e9a94eb59d15,"DERBY-2560 Missing asserts in ProcedureInTriggerTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530087 13f79535-47bb-0310-9956-ffa450edef68"
b0889fc6c3ec8ec98520a1149a7dc51b5a698804,"DERBY-2480: getConnection leaks memory when connecting to non-existent db

This patch was contributed by Jeff Clary (jclary@actuate.com). The test
program was contributed by John Embretsen (John.Embretsen@Sun.com) based
on the original reproduction program contributed by Jeff Clary.

The issue is that repeated calls to java.sql.DriverManager.getConnection(
""jdbc:derby:C:\\DOES_NOT_EXIST"") leak memory and eventually lead to an
OutOfMemoryError.

This bug is similar to DERBY-1947 in that ContextManager objects are not
getting removed from the HashSet. 

The change adds a call to cleanupOnError to EmbedConnection's constructor.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530159 13f79535-47bb-0310-9956-ffa450edef68"
aa1fd1ca5674bf52746b742d7f56c70c52c9ed32,"DERBY-2151: Add utility to aid in converting .sql tests to JUnit.

Patch originally contributed by A B <qozinx@gmail.com> with additional
modifications and comments by me.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530182 13f79535-47bb-0310-9956-ffa450edef68"
9f3bf4bc6ee217798e0de661cff6af7db228c8f8,"DERBY-827 (partial) Fix close() methods for some language result sets
to allow re-use.

Contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530343 13f79535-47bb-0310-9956-ffa450edef68"
4eafcf820dcae04b9958bbd03d2619f8c6becbfc,"Deleted outdated javadoc comment.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530361 13f79535-47bb-0310-9956-ffa450edef68"
2ea638413a4145cc7624ec719490832956a193b9,"DERBY-967
changed lock checking query to ignore locks that may have been requested by
background threads.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530516 13f79535-47bb-0310-9956-ffa450edef68"
57cb99863272706db07b37d4183dc6ab9707d49c,"DERBY-2557 : This commit renames getInstanceUsingFormatIdAndCollationType method on DVF to getNull. It also changes the implementation of 
the that method so that it bypasses the InstanceGetter. This implementation is much simpler than the old one because there is no 
InstanceGetter involved. Lastly, the code associated with getting a DVD from a format id is moved out of DTSClassinfo into a static
method on DataValueFactoryImpl. This static method will be called by DTSClassinfo.

The changes made in the patch are as follows 
1)DataValueFactory 
Changed the name of the new interface from getInstanceUsingFormatIdAndCollationType to getNull. This interface now returns a DVD rather 
than an Object. The functionality of the interface remains the same but the implementation has changed. 
2)DataValueFactoryImpl 
a)Removed the class level array and the code associated with InstanceGetter. 
b)Added a new static method called getNullDVDWithUCS_BASICcollation(int formatId). This static method handles all the format ids associated 
with DVDs with the exception of Decimals. The class to be returned for Decimals depends on what VM is being used. This dependency on the VM 
is handled by getNullDecimal defined on DVF. But since getNullDecimal is not a static method, it can't be called by static method 
getNullDVDWithUCS_BASICcollation. I could go the path of defining getNullDecimal as static but that will require changes in 
NumericTypeCompiler.nullMethodName method. Also, all the other getNullXXX on DVF are non-static So, the code for returning the right DVD 
for Decimal is not in getNullDVDWithUCS_BASICcollation. Rather it is in the calling method, getNull. For other format ids associated with 
DVDs, getNull will check if the DVD is of type StringDataValue and the collation type is territory based and if so, then it will return 
((StringDataValue)returnDVD).getValue(getCharacterCollator(collationType)); 
3)DTSClassInfo 
This class now calls the static method in DVF to get the DVDs. But if the format id is not for a DVD, then it checks if it needs to return 
TypeId. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530546 13f79535-47bb-0310-9956-ffa450edef68"
36ab2b01cc0b5d37aaacf611b2f95ecb8a4f3ad2,"DERBY-2540 Single javadoc fix


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530616 13f79535-47bb-0310-9956-ffa450edef68"
2ee904618069a76b8cb47c6170851bc4cf53ca73,"DERBY-827 (partial) Fix wrong variable name in TemporaryRowHolderImpl

Contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530723 13f79535-47bb-0310-9956-ffa450edef68"
d617193c746ab83ee2443cb03c8f77f1be562d7e,"DERBY-2020 (partial) Move check for JVM bug (DERBY-1) into separate method.
Patch contributed by Olav Sandst√•.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530807 13f79535-47bb-0310-9956-ffa450edef68"
14ed86a424b49bb25ffaec0434fc83ac95d1b0d5,"DERBY-2296 - reinstating setShutdownDB in JDBCDataSource after implementing it for ClientDataSource; simplifying *AuthenticationTest by removing if(usingEmbedded()) and usingDerbyNetClient()) blocks for shutdown is now possible.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530863 13f79535-47bb-0310-9956-ffa450edef68"
48154b2d9eb0a2db8f018bde676e6f968ded4931,"DERBY-2567  convert lang/errorcode.sql to JUnit
Converted errorcode.sql. Changed individual bug queries to print fatal errors tojust print the SQLExceptions with Errorcode >= 40000.
Added a method showResultSet(rs) to org.apache.derbyTesting.junit.Utilities
which will print out a resultSet in two dimensional array format.  This 
can be used to make converting tests easier.

Moved ij ""DRIVER"" testing to ij.sql



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530868 13f79535-47bb-0310-9956-ffa450edef68"
ee44f39ab6fd22ca6c05687d4dadc8ffe05efadd,"DERBY-2568: Removed LobStreamsTests from the suite encodingTests in the old harness. The test is still run in JUnit, but not with special encoding. Started failing because both the old harness and the new JUnit framwork were starting/stopping the networkserver (configuration changed from embedded only to embedded pluss client/server at the JUnit level).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530903 13f79535-47bb-0310-9956-ffa450edef68"
878ca294d94e364cc2dd907207def6abc2c9774b,"DERBY-2567 convert errorcode.sql to junit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530906 13f79535-47bb-0310-9956-ffa450edef68"
2bb198ae78f89806e7693e3e8137ccf99b5ef922,"DERBY-2569 Basically, this commit moves the logic for comparable method from various TypeCompiler implementations into DTD. This is because 
now we need collation information also to determine if 2 types are comparable or not and that information is not available to TypeCompilers. 
In addition, ofcourse, all the callers of TypeCompiler's comparable method now call DTD.comparable. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530910 13f79535-47bb-0310-9956-ffa450edef68"
e4983ff5bfd3f2ff1693e2c21bc49082af5c1d52,"DERBY-2346 (partial): Small JavaDoc cleanup, removing the JavaDoc warnings.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530912 13f79535-47bb-0310-9956-ffa450edef68"
b01b9ac34e4fa262dd754a880d0f171de0a64938,"Temporarily disabled a test addition in the lang suite, because the test itself is missing - which broke the build (of the tests).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530920 13f79535-47bb-0310-9956-ffa450edef68"
32cefc3ba37445f719009937c3f4d7261b61b42d,"DERBY-2517 convert lang/forUpdate.sql to JUnit

contributed by Ramandeep Kaur  (ramandhindsa@gmail.com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530946 13f79535-47bb-0310-9956-ffa450edef68"
e58d6d203d8b5d5b631334c89e8e512bc9158c01,"DERBY-2517 remove forupdate.sql from suite



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530948 13f79535-47bb-0310-9956-ffa450edef68"
9c9a3ab0cc2e0b77085a4cfa9b7fce08c684007f,"DERBY-2518 convert lang/releaseCompileLocks.sql to JUnit

contributed by Ramandeep Kaur (ramandhindsa@gmail.com)
I modified the original patch to remove the old test and masters.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530951 13f79535-47bb-0310-9956-ffa450edef68"
e0dd1f730cb7a95007f146ff710a0b9d4afd9fab,"DERBY-2567 convert lang/errorCode.sql to JUnit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@530972 13f79535-47bb-0310-9956-ffa450edef68"
8fcae923b6caec345c0853b33010dad64b1e37e5,"DERBY-2488: Patch to ensure that JDBC 4 Pooled and XA connections are returned
from JDBC 3 DataSources if the app is running with Java SE 6.  In particular:

  1. Adds two methods, ""getNewPooledConnection()"" and ""getNewXAConnection()"",
     to the Driver30 class and makes those methods return JDBC 3 objects.

  2. Overides the two methods from #1 in Driver40 to return JDBC 4 objects.

  3. Changes the ""createPooledConnection()"" method and ""createXAConnection()""
     methods in EmbeddedConnectionPoolDataSource and EmbeddedXADataSource
     (respectively) to call the new methods on the DriverXX object returned
     from the existing ""findDriver()"" method.

  4. Removes the now unused ""createPooledConnection()"" method from
     EmbedConnectionionPoolDataSource40, and removes ""createXAConnection()""
     from EmbedXADataSource40.

  5. Changes ClientXADataSource, which had a problem similar to the Embedded
     data sources, to match the behavior of ClientConnectionPoolDataSource
     so that client now correctly returns JDBC 4 objects for Java SE 6 apps.

  6. Includes a new test, jdbc4/JDBC4FromJDBC3DataSourceTest, which verifies
     that JDBC 4 connections will be returned from JDBC 3 data sources if the
     JDK in use is JDK 1.6. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531129 13f79535-47bb-0310-9956-ffa450edef68"
8567c355e4c334d30d080885bd3e6314e8a6d557,"DERBY-2578 I am starting to think about the code generation for DERBY-1478 language based ordering. Depending on the collation type of 
the DTD, we might want to generate CollatorSQLChar rather than SQLChar for instance. In order to centralize this code, I am changing 
CurrentDatetimeOperatorNode's generateExpression so that it goes through ExpressionClassBuilder.generateDataValue rather than doing 
TypeCompiler.generateDataValue. This way, hopefully, I will only have to change ExpressionClassBuilder.generateDataValue to take care of 
the collation dependency of DVD generation. All the other classes which need to generate a DVD already go through 
ExpressionClassBuilder.generateDataValue. The tests have passed with no new failures. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531138 13f79535-47bb-0310-9956-ffa450edef68"
c9346829698135a60357af0f67588bb07b51d130,"DERBY-2566: OutOfMemory/Sanity-assert failed when updating database

Close activations in insertRow(), updateRow() and deleteRow().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531170 13f79535-47bb-0310-9956-ffa450edef68"
f5d9f6c9109121f3e4e4a52ae4a14158c372c90e,"DERBY-827 (partial) Make sure MiscResultSet picks up a new
ConstantAction after a recompile.

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531349 13f79535-47bb-0310-9956-ffa450edef68"
2dabeef0568b7875e7997d445eeb67cb93657707,"DERBY-2551: Global Xid value garbled in syscs_diag.transaction_table

Fix contributed by Julius Stroffek.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531468 13f79535-47bb-0310-9956-ffa450edef68"
e162ad67794b3551208c8b0dadb692d685da0c96,"fix javadoc warning



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531491 13f79535-47bb-0310-9956-ffa450edef68"
4493d693f8044b941e7cbcf368ce4c07f194468b,"Cleanup of JavaValueNode, remove setClause() method which was never called and did nothing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531505 13f79535-47bb-0310-9956-ffa450edef68"
d999928daa05864148228df0e9c217dde0b708d2,"Minor cleanup in MethodCallNode, remove two unused methods and change a static method call to correctly use the class name.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531558 13f79535-47bb-0310-9956-ffa450edef68"
9954dd2c4ffbfc5d1340cefcc4cb6f4b45657780,"update master for j9_foundation



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531567 13f79535-47bb-0310-9956-ffa450edef68"
6c0fb2bbd21f357e5ca318eb525609e74c65324e,"DERBY-2539 convert lang/timestampArith.java to JUnit

contributed by Ugo Matrangolo (matra@santippe.dyndns.org)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531571 13f79535-47bb-0310-9956-ffa450edef68"
42f92630115cdf273e167fa3a17bfcda725634c1,"DERBY-2376: Make classpath entries portable in Eclipse plug-in

This patch was contributed by Aaron Tarter (ajtarter@gmail.com)

This patch contains modifications to the Eclipse plug-in documentation
to provied modified screen-shots. The new screen-shot images show
the new format of the classpath entries, relative to ECLIPSE_HOME.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531595 13f79535-47bb-0310-9956-ffa450edef68"
928dc0cf04f204b453bb00de2716b5f59b02013f,"SQLToJUnit utility would try to print an array for an empty result set if a
row count followed the empty result set. Fix it so that the row count line is
completely ignored.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531596 13f79535-47bb-0310-9956-ffa450edef68"
10f111c78dc15113f39caebde1b835e89ebe5e16,"DERBY-1947 OutOfMemoryError after repeated calls to boot and shutdown a database

Committed DERBY-1947-4.diff.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531638 13f79535-47bb-0310-9956-ffa450edef68"
c66c4e1d361b84b5eb09f98c34085b7827a06ab2,"DERBY-827 (partial) Test recreating the tables and changing the isolation
level between executions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531820 13f79535-47bb-0310-9956-ffa450edef68"
1b482f445b59f96ac469dee4844936858a2304f1,"DERBY-2579: AssertFailure class should use JDK's built-in chaining of exceptions


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531822 13f79535-47bb-0310-9956-ffa450edef68"
a41c1fa1410ff20b98fc2c57b32162bcb9639b58,"DERBY-2580: SanityManager.THROWASSERT(String,Throwable) ignores message argument

Use message argument and rewrite the one-arg THROWASSERT methods to use
the 2-arg method.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531825 13f79535-47bb-0310-9956-ffa450edef68"
e7d2a4236982d402a0fb07de790aaa2c5cb44cf7,"DERBY-2581: Callers of SanityManager.THROWASSERT should chain the exceptions when possible


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531827 13f79535-47bb-0310-9956-ffa450edef68"
722a8895795bd6449a8421736c7b8c6c8a308a4d,"DERBY-2537
This checkin implements the store code to call the new object allocation
interface that correctly sets the collation for the objects created.  After
this checkin persistent object created internally by store and initialized
by doing readExternal should correctly reflect the collation that the
columns are created with.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@531971 13f79535-47bb-0310-9956-ffa450edef68"
59c44b214f5d6f3eb4064a0bdffa06f123d84ae3,"DERBY-2492 - reinstating check for format for connection info printing in test DataSourceTest.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532005 13f79535-47bb-0310-9956-ffa450edef68"
ba7683ca1785d080c6fefc9613aa10496aaa9ff9,"DERBY-2583 This commit mainly addresses how code generation should account for collation type when generating DVDs for character types. In 
the past, there was one to one correspondance between a character DTD and the corresponding DVD that got generated for it. Starting 
Derby 10.3, a DTD associated with a character type can generate one of the 2 different kinds of DVDs and the DVD chosen will depend on the 
collation type of the DTD. Note that this applies only to character types. 

Character types that will have a collation of UCS_BASIC associated with them will continue to generate what was generated in Derby 10.2 ie 
SQLChar/SQLVarchar/SQLLongvarchar/SQLClob. But the character types that will have collation type of territory based associated with them 
will now generate CollatorSQLChar/CollatorSQLVarchar/CollatorSQLLongvarchar/CollatorSQLClob. This dependency of DVD type on collation type 
will be handled in classes ExpressionClassBuilder and in TypeCompiler implementations. 

CastNode, ConstantNode, NotNode, ResultColumn, SpecialFunctionNode, JavaToSQLValueNode, UnaryComparisonOperatorNode, UserTypeConstantNode, 
CurrentDatetimeOperatorNode, CurrentRowLocationNode, CoalesceFunctionNode, ConcatenationOperatorNode, ResultColumnList : All of 
these compile time classes require code generation of DVDs. These classes now need to pass the collation type of the DTD for which a DVD 
needs to be generated. This collation type will be used to generate code for correct DVD. 

The actual changes for generating the correct DVD went into CLOBTypeCompiler and CharTypeCompiler. These 2 classes will first generate a 
DVD for character types w/o taking the collation type into consideration. Then it will call a new method which is defined on the base class 
BaseTypeCompiler and that new method is called generateCollationSensitiveDataValue. This new method will check if the collation type is 
UCS_BASIC and if yes, then it will simply return because we have already generated code for DVD with collation type of UCS_BASIC. But if 
the collation type is territory based, then it will generate the additional code of 
DVDwithUCS_BASIC.getValue(DVF.getCharacterCollator(collationType)); 
This generated code will make sure that the DVD generated has territory based collator associated with it and the new DVD class will be of 
type CollatorSQLChar/CollatorSQLVarchar/CollatorSQLLongvarchar/CollatorSQLClob. In order to generate the additional code above, we need to 
have DVF on the stack. This pusing of DVF on stack will be done by the private method pushDataValueFactory defined on BaseTypeCompiler 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532082 13f79535-47bb-0310-9956-ffa450edef68"
1315d5e99f3edba0941fcaa34c460ac5ffc12d0e,"DERBY-2586 Buffer input streams in UTF8Reader to improve performance for position fetches on CLOB.
Contributed by Anurag Shekhar anurag.shekhar@sun.com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532127 13f79535-47bb-0310-9956-ffa450edef68"
c176298c417d077e8a12270ff60cd703ba3fa977,"Add a cibuild target to the top-level build.xml file, suitable for a continuous integration build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532136 13f79535-47bb-0310-9956-ffa450edef68"
96c0a0e87a244ecf7c57dbbaa2197ec3f97c3976,"DERBY-2425 ResultSetMetaData.getColumnDisplaySize() returns a negative value for BLOB columns for client

After multiplication (by 2 ) if the display size overflows int range, then assign Int.MAX_SIZE to display size.
This behavior is same as that in Embedded mode. 


Contributed by Mayuresh Nirhali (Mayuresh.Nirhali@Sun.COM)




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532404 13f79535-47bb-0310-9956-ffa450edef68"
66e6d3659dff7a1cae85ed11e956c47e910bf8c9,"Rewrite the junit-all-codeline-jars target in build.xml so that it fails if one of
the junit test fails.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532473 13f79535-47bb-0310-9956-ffa450edef68"
d2e9303e1becfa68f09a458846259b4735bbb489,"DERBY-2440 DerbyNetNewServer should specify port when it starts a server to avoid requiring 1527 to run
Committed patch d2440.diff.

Contributed by Julius Stroffek (julius.stroffek@sun.com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532498 13f79535-47bb-0310-9956-ffa450edef68"
0787955aa8ff61c3cfcb1131f9c358e73a009eab,"DERBY-2370: Fix incorrect results for EXISTS queries with SET operator
expressions.  In particular:

  1. Adds the ability to mark a FromList as ""transparent"", and updates
     FromList.bindExpressions() to pass the outer FROM list down (instead
     of ""this"") if the FromList is transparent.
  2. Updates FromList.expandAll(...) to account for the fact that outer
     FROM tables might now appear in a nested FromList (as a result of
     ""transparent"" FromLists; see code comments for details).
  3. Modifies the ""setResultToBooleanTrue()"" signature to return a
     ResultSetNode (it was ""void"" previously).
  4. Modifies ResultSetNode.setResultToBooleanTrue() to always return ""this"".
  5. Modifies SetOperatorNode.setResultToBooleanTrue() so that it now creates
     an internal ""SELECT *"" query whose FROM list contains just the
     SetOperatorNode. Then we transform the ""*"" for the new SELECT into ""TRUE""
     and leave the SetOperatorNode's result columns UN-transformed. Finally,
     mark the new SelectNode's FromList as ""transparent"" and return the new
     SelectNode. 
  6. Updates tests where necessary (including changed behavior in union.sql)
     and adds a new JUnit test, lang/ExistsWithSetOpsTest, to verify new
     behavior.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532509 13f79535-47bb-0310-9956-ffa450edef68"
467230f89557cbb77571e290cb17b1c6d1d27aea,"upload new key


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532519 13f79535-47bb-0310-9956-ffa450edef68"
b3a80f017873c0a784f35bc73acbf33c56128901,"DERBY-2577 convert jdbcapi/resultSetStream.java to junit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532539 13f79535-47bb-0310-9956-ffa450edef68"
3af7c7ba715322c9fede0ac9ecd0264c9867dc3f,"DERBY-2525: Convert grantRevokeDDL.sql and grantRevokeDDL2.sql to JUnit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532547 13f79535-47bb-0310-9956-ffa450edef68"
38cc87a5baaffb74b3626af7af46c516215797bf,"DERBY-2577 - fixing build problem by removing odd imports


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532581 13f79535-47bb-0310-9956-ffa450edef68"
2d32bab3955dad7e281aeb7503c2ce2dbce1c107,"This is more of a code cleanup for DERBY-2569.
Rather than using switch statement to check for individual format ids, this patch uses isXXX methods wherever applicable to determine if two
types are comparable or not. This is because with format id checking, in future, when say another numeric type is added, we will have to 
modify the switch statement to look for that new numeric type's format id. Instead, if we check for isXXX() method, then the formatid checks 
won't have to be maintained because the new numeric type will fall into existing isXXX() umbrella.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532627 13f79535-47bb-0310-9956-ffa450edef68"
a1c5a3612bbb6d3a067b083de50aa4d9bb2af9de,"DERBY-2020 (partial) Change file option for syncing log file to disk
from rws to rwd

1. Rename the method called supportsRws() to supportWriteSync() in
   WritableStorageFactory and all of its implementations.

2. Fixed code comments referring to ""rws"" to also include ""rwd"" so
   that the comments also will be valid if rwd is used.

Patch contributed by Olav Sandst√•.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532635 13f79535-47bb-0310-9956-ffa450edef68"
ab4e752a6943544eb8dae0033df7b871c878ef3f,"DERBY-2107: Move page latching out of the lock manager

Added assert which throws error on attempts to latch the same page twice.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532636 13f79535-47bb-0310-9956-ffa450edef68"
b811525722d65c0e11d259c2e7e2c7072f2adee9,"DERBY-2591 Change from Calendar.HOUR to Calendar.HOUR_OF_DAY in DataDictionaryImpl.getSystemSQLName()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532723 13f79535-47bb-0310-9956-ffa450edef68"
5b7c05399e7c091fee488f329e5446b5f2c44964,"Fixed regression test failure when running from insane jars.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532838 13f79535-47bb-0310-9956-ffa450edef68"
927ce7275e7e359dac83d13dc47ab3dde096bb75,"Fix the junit targets to put the TEST*.xml report files in the specific junit directory.
Was broken by change that ran the tests directly instead of by ant calls.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532841 13f79535-47bb-0310-9956-ffa450edef68"
5f5e00dd5181693189c7af3290e82e6223f4fe22,"Convert ieptests, iepnegativetests, and checkSecMgr to JUnit. Remove unneeded
masters and empty directories, minor improvement to SQLToJunit to prevent
multiple line SQL statements from becoming malformed in conversion.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532853 13f79535-47bb-0310-9956-ffa450edef68"
2e7ac6fd5edd6c2f7f21c32a5ab0ab596e3804b3,"Resurrect iepnegativetests.sql for use with i18n/iepnegativetests_ES.sql,
temporarily disable derbynet/CheckSecurityManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@532992 13f79535-47bb-0310-9956-ffa450edef68"
b56d957e45952a57467eb1954e330f80ac7a89df,"DERBY-827 (partial) Performance can be improved by re-using language
ResultSets across Activation executions.

Set members to their initial values in ScrollInsensitiveResultSet's
openCore() method.

Contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533003 13f79535-47bb-0310-9956-ffa450edef68"
d18c1af6c6e078fa5b02ee9c4e4406f0f057462e,"DERBY-2595: JUnit tests use getExportedKeys with table name null

Rewrote invalid usage of DatabaseMetaData.getExportedKeys() in
JDBC.dropSchema().

Contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533175 13f79535-47bb-0310-9956-ffa450edef68"
34f44bc77060359dc7bebcea65b0ce2da523f540,"DERBY-1922: Updated readme under frameworks directory. Patch derb-1922.diff was contributed by me. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533181 13f79535-47bb-0310-9956-ffa450edef68"
1a66a1aa7aa4b35e25f8fbb4ad49e38b7e98cba0,"DERBY-2496: Commit Oystein's blob_v2.diff patch, adding locator support for Blob methods and getXXX() methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533268 13f79535-47bb-0310-9956-ffa450edef68"
ccee53153f7d8df04a495eb1cab2b3d435b38c91,"DERBY-827 (partial) Performance can be improved by re-using language
ResultSets across Activation executions.

Move code that marks a temporary table as modified from
fillResultSet() into the execute() method of result sets that perform
update/delete/insert on the table.

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533314 13f79535-47bb-0310-9956-ffa450edef68"
b224e664b70fac89c7955f0aa035e6515d8f0716,"DERBY-2519: Commit Oystein's derby-2519.diff, cleaning up the BlobClob4BlobTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533785 13f79535-47bb-0310-9956-ffa450edef68"
d8a1a68e60a17082ff5d08b23d3e70355ca0f403,"DERBY-2566: Commit Narayanan's BrokeredMethodsNeedForwarding.diff, which forwards various internal operations on LOB locators to the wrapped connection.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533835 13f79535-47bb-0310-9956-ffa450edef68"
068071b827c24bd1d357422fe785b6911cfe4f21,"Fix javadoc error in TypeCompiler. Put SanityManager assert in BlobLocatorInputStream inside an if (SanityManager.DEBUG) block.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533876 13f79535-47bb-0310-9956-ffa450edef68"
1146ea1a7649a0a4f58c006e64dd02a76ce16291,"DERBY-1496 - speeding up NSSecurityMechanismTest by shutting down database before bouncing server, so sleeping is not necessary. Also made methods private where possible.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533889 13f79535-47bb-0310-9956-ffa450edef68"
bbe895f925ac7dc78dce09859e5436ab53c97a8e,"DERBY-2385: Commit Narayanan's upgrade_v4.diff patch, which adds LOB-specific procedures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@533893 13f79535-47bb-0310-9956-ffa450edef68"
f19b703b918720eba85e3565d352fdbe4f31204a,"DERBY-2599 : This patch will have the collation type default to UCS_BASIC. It can be set to TERRITORY_BASED wherever applicable using DataTypeDescriptor.setCollationType.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@534157 13f79535-47bb-0310-9956-ffa450edef68"
2ecd63089a5d4bb3c8a5e4b1cb1376d07ac2f961,"DERBY-2525: cleanup 2 no longer needed files, and prevent test from running with JSR169.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@534198 13f79535-47bb-0310-9956-ffa450edef68"
0b4d2c5f77242dfb87b8fea3bf46c01e1bf96766,"DERBY-2385: removing javadoc param, now incorrect (after rev. 533893)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@534223 13f79535-47bb-0310-9956-ffa450edef68"
149fa347accc6f5041e3839f004036e1705fd75d,"DERBY-2506: Committed Narayanan's PreparedCallable_DRDA_v5.diff, adding some BLOB locator support.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@534610 13f79535-47bb-0310-9956-ffa450edef68"
b6d2a1c0ef64de88a8f0aa02ac4791ad4e4c0764,"DERBY-2600: Committed Narayanan's RemoveTemporaryCode_v1.diff patch, taking out some code which short-circuited CLOB locator processing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@534824 13f79535-47bb-0310-9956-ffa450edef68"
6eb504290552561e19e2d314d273250a5522daad,"DERBY-2381 ParameterMappingTest fails due to ArrayIndexOutOfBoundsException executing a procedure

Formerly, the server would rely on the input parameter type information received from the client to determine the output parameter type. This patch changes the server to look at the parameter metadata to determine the drda type to send.
It also enables the test ParameterMappingTest for client. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@534985 13f79535-47bb-0310-9956-ffa450edef68"
f9d583cadec34159c3fb7c302a827f9a47915752,"Remove some residual support files for xaSimplePositive which was
incorporated into XATest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@534986 13f79535-47bb-0310-9956-ffa450edef68"
4c3f40eac9101601eaeb80e31a5d96fa850ff4c6,"DERBY-2333 Convert ParameterMapping to junit

Removing parameterMapping.java from tests since ParameterMappingTest now
runs with client.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@534987 13f79535-47bb-0310-9956-ffa450edef68"
c720ff62dd1b2ef55e9d5c450dfce5a0e54e105b,"DERBY-2496: Commit Oystein's blob-followup_v2.diff patch.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535027 13f79535-47bb-0310-9956-ffa450edef68"
4d0965048e2a79e7bfe36907194c548831bc5f50,"DERBY-2501: Windows batch scripts should not report extraneous errors.

Original patch by John H. Embretsen <john.embretsen@sun.com>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535039 13f79535-47bb-0310-9956-ffa450edef68"
62db2ae86145ac47b4c448f6fd99fd155eccb77f,"DERBY-2020: Change of mode for opening log files from ""rws"" to ""rwd"".

Patch contributed by Olav Sandst√•.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535270 13f79535-47bb-0310-9956-ffa450edef68"
61aec235b373c74bd3615b86f7bf889feedb56e9,"DERBY-2604: Commit Naryayan's ClobLocatorWork_v1.diff, adding locator support to clobs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535319 13f79535-47bb-0310-9956-ffa450edef68"
e243142c83ba4b0ea7a71286875911e48ca71258,"DERBY-2606 Derby should print the parameters to failed statements to the derby.log when it logs the error



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535373 13f79535-47bb-0310-9956-ffa450edef68"
0ba46a7f367855607788a41109af6da2f5f51a90,"DERBY-2611

Fixed upgrade test when run against 10.3 to not try and use in place compress
in version 10.0.  This feature was added in 10.1.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535429 13f79535-47bb-0310-9956-ffa450edef68"
c243be1470cb01b1a6e3adbe4198e53568658d3e,"DERBY-2613

Upgrade of 10.0 to 10.3 was failing because system procedures were being
created, and as part of the creation some updates were attempted to catalogs
that were not created yet.  Fixed in full upgrade by first creating the
new system catalogs and then creating the procedures.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535466 13f79535-47bb-0310-9956-ffa450edef68"
eb9f9c64c10353f5a960e22493c325f6c4cead6a,"DERBY-2598

Fixes upgrade bug in writeExternal of Heap, it was writing the wrong 
conglomerate format id in the case of a hard upgrade accessing an 
existing Heap from an old database.  It was writing out the hardcoded
new format
id when it should have been writing out the dynamic one in the class's
state.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535521 13f79535-47bb-0310-9956-ffa450edef68"
765b3e42d81b3b48f8e4974ac4d931258400992e,"DERBY-2616

Increase the maximum wait time for tests that start the server.  On my 
windows XP system I would get intermittent failures at the old 60 second
max.  I believe the issue is turnaround time on the port, rather than a
specific startup issue in the code.  Setting the max to 300 seconds allowed
me to pass a complete nightly test and also passed a reiterated test 30 times
that would previously fail every time at the 60 second level.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535572 13f79535-47bb-0310-9956-ffa450edef68"
2378df14848946e0aea415ba4c499da350afe8dd,"Fixed inaccuracies in comments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535573 13f79535-47bb-0310-9956-ffa450edef68"
3841b98d79a33bd8ca08f6e1da54319a40b16408,"DERBY-2334 : Commiting patch(DERBY2335_correct_collation_for_constants_persistent_column_v1_diff.txt) attached to DERBY-2334 which does 
couple of things 
1)It puts the correct collation type for character constants and for persistent character columns. For character constants, the collation type will be the collation type of the schema in which the query is getting compiled. This happens in 
CharConstantNode.bindExpression. The setting of collation type for the persistent columns happens in a constructor for the DataTypeDescriptor. This could be found in the patch which has changes for DataTypeDescriptor and TypeDescriptorImpl. 
2)Collation related methods (like and stringCompare) on collation sensitive DVDs has been copied into WorkHorseForCollatorDatatypes. These methods get called by CollatorSQLxxx classes. 
3)The final change went into CollationTest. The change now allows this test to test collations for Norway, English and Polish. 
I will add more tests for these changes in a subsequent patch. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535738 13f79535-47bb-0310-9956-ffa450edef68"
f767f68e0e035875e0004b3aaf11442a0840dabf,"DERBY-2537

This checkin fixes create index, alter table, and bulk insert to correctly
set the collation in the persistent tables and indexes that they create.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535770 13f79535-47bb-0310-9956-ffa450edef68"
41d69da486797cce2e65c5fbc2c6d6d3664098e8,"DERBY-2327: Reduce monitor contention in LockSet

Added a new LockSet implementation which uses the classes in
java.util.concurrent to achieve more concurrency.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535851 13f79535-47bb-0310-9956-ffa450edef68"
97105d683374a73f2314aa2cca084ef6d4cc9fa5,"DERBY-2597: Language result sets should not reuse current isolation
level across executions

Let HashScanResultSet, TableScanResultSet and LastIndexKeyResultSet
refresh the isolation level on each open.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535860 13f79535-47bb-0310-9956-ffa450edef68"
3f3b5e6a695331a45aea96880cd89958f9cc8027,"DERBY-806

Rather than allocating a scratch RowPosition for every delete/replace/fetch,
changed to use a single copy of a RowPosition allocated on demand per 
openGenericConglomerateController.  If multiple calls to delete, replace, 
and/or fetch are made in the same open controller only one of these objects
will be allocated.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535878 13f79535-47bb-0310-9956-ffa450edef68"
538a24f226bbbdb8409c9caf2615c6c4bd77e697,"DERBY-2570: Check in template file for release note entries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535894 13f79535-47bb-0310-9956-ffa450edef68"
e47c2166a2618c9db86412610b0141f713481c01,"DERBY-1054: NetServlet does not allow binding to non localhost interface

This change modifies the NetServlet.java class to allow for a ""host""
parameter to be passed in via the web.xml file. That way we can control
the listening interface. The sample web.xml is enhanced with additional
information about how to set the host parameter.

Note that there are security implications to setting a non-localhost
value for the host. Such a server should be properly configured so that
access to it is authenticated and secured. A separate docs patch enhances
the NetServlet documentation to note these considerations.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535910 13f79535-47bb-0310-9956-ffa450edef68"
fefc3986114d6bf055a78529088862bf39d618bf,"DERBY-2230 AssertFailure: ByteCode Conditional then/else stack mismatch
The compiler/bytecode generator code does not load classes to check relationships or any other information. This is making things difficult to fix this bug. Also, I think it is not worth to go this way for a simple check that too in a DEBUG block.

Check for non-matching return types of then and else blocks in Conditional statement is made during bindExpression call and 42X89 is thrown if false. Hence, During byte code generation, check for non-matching return types is not required. I believe the assert check was included just to make sure that the stacks are consistent. But, it seems they do not consider a valid case where the two return types can have different vmNames (StringValue, ConcatableDataValue) which are assignable.

I have created a patch that works around this problem by adding another check for vmTypes. One of the reasons I chose vmType is because I saw BCMethod making its casting decision based on vmType. 

Contributed by Mayuresh Nirhali (Mayuresh.Nirhali@Sun.COM)




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535949 13f79535-47bb-0310-9956-ffa450edef68"
bff5312950e44238df0a4b1852a0fd371e1d7b90,"DERBY-1025 / DERBY-2620 test cases
Make sure statement is created with holdability CLOSE_CURSORS_AT_COMMIT when testing if xa_start commits the transaction.  Exempt embedded from running DERBY-1025 test because of 08003 - No current connection 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@535973 13f79535-47bb-0310-9956-ffa450edef68"
67549f0da963434c03352b2b8820fdecba5788d0,"DERBY-827 (partial) Performance can be improved by re-using language ResultSets across Activation executions

The patch makes two changes:

1) Adds a call to RowChanger.close() in
   DeleteResultSet.cleanUp()

2) In DeleteCascadeResultSet.open() it moves the call to
   cleanUp() (which in turn calls DeleteResultSet.cleanUp()) into
   the finally block so that it gets called even when an
   exception is thrown.

Contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536007 13f79535-47bb-0310-9956-ffa450edef68"
78f94f1393d0ade499df6867d7f14cb22e67ff84,"DERBY-2492 - removing some unnecessary (because never reached because of expected failures) statements and removing some unnecessary try blocks.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536065 13f79535-47bb-0310-9956-ffa450edef68"
7b5fc1ef0b35930ad079e19e87fced1519772bed,"DERBY-2222: 'show indexes in SCHEMANAME' does not work with the client driver.
Patch file: DERBY-2222-3.diff

Patch contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536100 13f79535-47bb-0310-9956-ffa450edef68"
e5ca925a8e898e611ed0324db3aa3533de75f502,"DERBY-2222: JavaDoc/formatting fixes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536111 13f79535-47bb-0310-9956-ffa450edef68"
ffb93173cd596ca7373fe3c02e808904d8555c4d,"Removed copyright lines from the source file headers. According to current policy, copyright lines (for Apache, ASF) should not be included in the source file header. No non-Apache copyright notices were removed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536122 13f79535-47bb-0310-9956-ffa450edef68"
219a290b00ad57dacecfffe58405e8c1bcb48c34,"DERBY-2622: Fix build problems related to locator work.
Patch file: BuildproblemsFix_v1.diff

Patch contributed by V.Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536146 13f79535-47bb-0310-9956-ffa450edef68"
39f35f57b64321164dffd75ca8faac1b1c41238d,"DERBY-1001: Rewrite 'store/encryptionKey.sql' to a JUnit test.
Patch file: derby-1001-2a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536156 13f79535-47bb-0310-9956-ffa450edef68"
892caf4269fc1ad77ffd6dc42e5ce5459ba4cca8,"DERBY-2019: IJ describe command does not handle quotes very well

IJ's describe command already accepted a string for the table name,
but there were several problems with the handling of the table name
in single quotes:
1) The table name was unnecessarily forced to upper case.
2) The command only worked properly if you gave both schema and table name.
3) It had a rather bizarre behavior with an empty string

This patch removes the force-to-upper, cleans up the schema name handling,
addresses the empty string case by treating it as an error,
adds a simple '*' feature as a wildcard, and adds some new tests.

With the patch,
   describe 'CamelCaseTable';
can be used to describe a table with a mixed-case name. 

A separate patch will update the documentation to describe the behavior.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536227 13f79535-47bb-0310-9956-ffa450edef68"
4621c99a1a12e2cf0b6eb9e8beb574a6000a318e,"DERBY-1025 - remove comment re bug from test DataSourceTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536277 13f79535-47bb-0310-9956-ffa450edef68"
bb0c274e993796659efb8f2f6f5ad1aaba084099,"Fix files with missing/inaccurate/wrong license header.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536492 13f79535-47bb-0310-9956-ffa450edef68"
88fa8fb28a5af245823504fdc44a95ecdfd4c4a1,"DERBY-1001 (post-commit cleanup): Remove empty files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536493 13f79535-47bb-0310-9956-ffa450edef68"
fb60d0613db7fa621f0e387486f56c96e25b1c39,"DERBY-2621: Fix javadoc issues related to locator work.
Patch file: JavadocFix_v1.diff

Patch contributed by V.Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536511 13f79535-47bb-0310-9956-ffa450edef68"
01c5d8991caf27fe58ea60994ff869a82956a01d,"DERBY-2584: Creating a database with JPOX SchemaTool sometimes gives
ArrayIndexOutOfBoundsException when getIndexInfo() is called

Make sure meta-data queries are properly written to the database when
the first attempt to compile them fails with a lock timeout.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536516 13f79535-47bb-0310-9956-ffa450edef68"
af9a439490d44c640166956f3dcbd79da593e3ef,"DERBY-2632 - attempt to fix some failing upgrade tests with JSR169 by preventing them from running.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536598 13f79535-47bb-0310-9956-ffa450edef68"
c90be97f2b1b83767c42feeb4774d1abd5e7e292,"DERBY-2597: Language result sets should not reuse current isolation
level across executions

Added test case which tests changing of isolation level between
executions of UpdateResultSets.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536613 13f79535-47bb-0310-9956-ffa450edef68"
90c4f40f972c525750ca7f029ee2d65b13286bc7,"DERBY-1001: Rewrite 'store/encryptionKey.sql' to a JUnit test. Fix the failing test.
Patch file: derby-1001-3a-fixtestfailure.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536621 13f79535-47bb-0310-9956-ffa450edef68"
70765682cfde868271da75a64a387aeabab6b499,"DERBY-2335 This commit adds some basics tests and fixes a bug that I came across while writing the tests. The problem is that
SQLChar has a method called stringCompare(SQLChar, SQLChar). This method compares the 2 passed parameters. When I 
implemented this method for CollatorSQLxxx classes, I was making the assumption that first parameter SQLChar is same
as the SQLChar object on which the method is getting called and hence I was ignoring the 1st parameter and comparing
the object on which stringCompare is called with the 2nd paramter to stringCompare method. But that assumption is not 
correct. I discovered that when I wrote a test like following
select id, name from customer where 'a'='b' 
The where clause for territory based collated db always returned true because of the bug/wrong assumption.
This is because stringCompare was getting called with first parameter as SQLChar 'b' and 2nd parameter as SQLChar 'a' and 
stringCompare was getting called off of the object for 'a' and hence, at runtime the comparison was happening between 2 'a's 
rather than 'a' and 'b'. In order to fix this, I am having stringCompare on ColatorSQLxxx methods use both the passed SQLChars 
to do the comparison rather than ignorning the first SQLChar(just like what we do for existing SQLChar classes). This fixes the problem.

In addition, I have enabled the testing for territory based collated db in CollationTest added by Kathey (Thanks for 
starting this test off, Kathey). There are 3 databases with territory based collation, for Polish, Norway and English.

And lastly, I have added 2 simple character constant tests for each of the 4 databases (3 territory based collated dbs and 
one default collation db). One of these 2 simple tests will give different results based on the collation used.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536661 13f79535-47bb-0310-9956-ffa450edef68"
0c41dd145337b99fa2bccef266710e201351e118,"DERBY-2556 Code paths for db restore do not use doPrivileged-calls, causing SecurityException

Add priv blocks for File.exists() calls in restore.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536677 13f79535-47bb-0310-9956-ffa450edef68"
c37b454accbaf83925e5e970442f2ccb14fc4012,"DERBY-2555 Remove use of doPrivileged in EncryptionKeyTest

Contributed by Kristian Waagan



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536682 13f79535-47bb-0310-9956-ffa450edef68"
4cc7145a2b9890f8bfbdfff6dcd3a3dd5093ee64,"DERBY-2555 Remove use of doPrivileged in EncryptionKeyTest
patch 2 - Remove some debug statements added to the test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536701 13f79535-47bb-0310-9956-ffa450edef68"
763e014eab67ba6e96809ee746cc79c14e830064,"DERBY-2594: Revoking a privilege from an SQL Object should invalidate
statements dependent on that object

Patch contributed by Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536767 13f79535-47bb-0310-9956-ffa450edef68"
27c7e012c62834a747ec8debaf6a4787f69be1d3,"DERBY-2556: Replaced tabs with spaces and updated JavaDoc for method privExists.
Patch file: derby-2556-2a_whitespace-javadoc.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536856 13f79535-47bb-0310-9956-ffa450edef68"
51eb28beeb66e89ae107411635708417eb61f86e,"DERBY-2555 backout change until tinderbox failures are resolved.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@536972 13f79535-47bb-0310-9956-ffa450edef68"
58e3b263b1ce557670ceb78651a4c102e1ac3c4c,"DERBY=2554 - the original test supersimple.sql has been converted to junit (although _app.properties and _derby.properties are still there), but this test is referenced in the java/testing/README.html as a simple test that always runs. 
This change reinstates supersimple.sql for that purpose. It should not be added to any suites.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537052 13f79535-47bb-0310-9956-ffa450edef68"
f7823f71723eddd04b3d7f506d40dfa8b669023a,"DERBY-2496 - fixing up one SANITY build message by adding if (SanityManager.DEBUG) block around a SanityManager.ASSERT(...) call.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537055 13f79535-47bb-0310-9956-ffa450edef68"
3fb95155a7010deb5565c258b15cae18e0ecb17f,"DERBY-2141

Made BaseContainerHandle.close() synchronized as it may be called concurrently
by a stream passed outside the store and an abort triggered concurrently.  
Making it synchronized will allow the first close to do the proper work and
the subsequent calls will just return with no work to do.
Also made some of the fields private to convince myself no-one outside the
class was counting on something being changed during close.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537091 13f79535-47bb-0310-9956-ffa450edef68"
6369b54cb89ff232279f44ca389e2b7c8dad05b6,"DERBY-2597: Language result sets should not reuse current isolation
level across executions

1) Move the static method UpdateResultSet.decodeLockMode() into
DMLWriteResultSet and make it non-static. This makes it possible to
add debug code that checks that it is only called when the
{Update,Delete,Insert}ResultSet has been opened (to prevent calls at
ResultSet construction time).

2) Move UpdateResultSet's call to decodeLockMode() from the
constructor to open().

3) Make the NoRowsResultSetImpl class hierarchy maintain an isOpen
variable that is set to true on open and to false on
close. Previously, an isClosed variable was used, which was false
until the first call to close(), after which it would be true forever
even after the RS was reopened. This change was necessary to be able
to assert that the result set had been opened in decodeLockMode().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537128 13f79535-47bb-0310-9956-ffa450edef68"
b16fdc6130c88954975d5d1e8b66470f60fe146a,"DERBY-2587: Commit Narayanan's ConnectionLocatorWork_v3.diff patch, adding support for Clob locators.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537218 13f79535-47bb-0310-9956-ffa450edef68"
bde122076fee3688858f43bbb2808339cfa4e66f,"DERBY-889 with client getTimestamp on a TIME column will print the date 1900-01-01 instead of the current date

Committed Bryan's fix unchanged and enabled test cases in TimeHandlingTest
Contributed by Bryan Pendleton



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537252 13f79535-47bb-0310-9956-ffa450edef68"
50227f1d8b48b22140d304bcc574119ba41155f3,"DERBY-2604: Implement Clob support for locators

Follow-up patch which fixed problems with string encoding and boundary
checking. Contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537291 13f79535-47bb-0310-9956-ffa450edef68"
dbfbecb4f623e5e1f8120fa27b1dd5d68173e931,"DERBY-2335 Committing patch DERBY2335_More_tests_And_Fix_getNull_v1_diff.txt attached to DERBY-2335 which addresses 3 issues and adds some tests
1)Easiest first, fixed the javadoc error in WorkHorseForCollatorDatatypes.java
2)CharConstantNode in it's bind method does the collation setting based on the compilation schema. But it didn't do the switching
of it's value from SQLChar/SQLVarchar/SQLLongvarchar/SQLClob to CollatorSQLChar/CollatoSQLVarchar/CollatoSQLLongvarchar/CollatoSQLClob
if the collation type for it ends up being territory based. By default, the value associated with CharConstantNode is always
UCS_BASIC collation. It should get switched to territory based and my fix in this class does that job.
3)DataTypeDesciptor.getNull value currently gets the DVD using typeId.getNull(). But we should check if we are dealing with
territory based collation and if yes, then we should change the DVD type returned by typeId.getNull from
SQLChar/SQLVarchar/SQLLongvarchar/SQLClob to CollatorSQLChar/CollatoSQLVarchar/CollatoSQLLongvarchar/CollatoSQLClob. My change
in DataTypeDescriptor.getNull does that job.
4)In addition, I have added tests in CollationTest class to do some persistent character columns testing. Some tests are 
commented out and will be added later.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537296 13f79535-47bb-0310-9956-ffa450edef68"
0c91b1926210dea56015669b94f2f79670ced2de,"DERBY-2537

Fixed assert that did not work with collated database, it needed to be updated
to take collation id of template into account.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537349 13f79535-47bb-0310-9956-ffa450edef68"
109cb266fcd091fe8b7ab5a038f9816d03af53b6,"DERBY-827 (partial) Performance can be improved by re-using language
ResultSets across Activation executions

Reset candidate row array between executions. Based on patch/ideas
from Dyre Tjeldvoll.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537353 13f79535-47bb-0310-9956-ffa450edef68"
a4cfe45c4f42495dfb198ceec4a1c58b3b891f68,"DERBY-2537
remove some debugging I left when I committed 537349.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537354 13f79535-47bb-0310-9956-ffa450edef68"
e257b0e2e0f88a15efa49e0aaf76fa4650575e22,"DERBY-2635: intermittent failure in T_RawStoreFactory unit test

Disabled the interrupter thread which sometimes caused stray
interrupts in sane builds.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537409 13f79535-47bb-0310-9956-ffa450edef68"
e70c716c39889a7ea2b6d1f922fea47dcb2e5064,"DERBY-2472 (partial) Use Throwable.initCause() to improve error reporting

Replace StandardException's implementation of exception chaining with
initCause/getCause.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537412 13f79535-47bb-0310-9956-ffa450edef68"
109518324dc5e74db8aabf33fadf647d2df0b39d,"DERBY-2472 (partial) Use Throwable.initCause() to improve error reporting

Let EmbedSQLException use initCause/getCause instead of getJavaException.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537592 13f79535-47bb-0310-9956-ffa450edef68"
9ba17d840e6a32b8958ac52a5efda491251222e0,"DERBY-2612 - making running of DatabaseMetaDataTest in upgrade test more selective - not all fixtures can be run with all older versions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537728 13f79535-47bb-0310-9956-ffa450edef68"
63b1dd7a8a2c025e87fd195d00861c6e694cf168,"DERBY-2556: Code paths for db restore do not use doPrivileged-calls, causing SecurityException. Modified patch by correcting a few spelling errors of mine and deleted a blank line.
Patch file: derby-2556-4a_alternative-patch.diff (M)

Patch contributed by Kathey Marsden and Kristian Waagan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537735 13f79535-47bb-0310-9956-ffa450edef68"
4088872832ba06b1472359159179b44eda90387a,"DERBY-2472 (partial) Use Throwable.initCause() to improve error reporting

Chain exceptions from EmbedConnection.createDatabase() and
EmbedConnection.bootDatabase() properly.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537753 13f79535-47bb-0310-9956-ffa450edef68"
f5caa93d4036210cfaa28cc8a8a963ddb47d1479,"Make licence header non-javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537759 13f79535-47bb-0310-9956-ffa450edef68"
e5b15ce7710d8364911b29e156c007679db964a1,"DERBY-2346: JavaDoc updates/fixes.
Patch file: derby-2346-4a_javadoc.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537831 13f79535-47bb-0310-9956-ffa450edef68"
8f3b0b95eff0043e721e9570d4e9f490532f6b6a,"DERBY-1828: Access rule violations should use a SQL state starting
with '42' according to the SQL standard.
DERBY-2633: Authorization error codes have been moved. Translated
messages must be moved accordingly.

Patch contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537850 13f79535-47bb-0310-9956-ffa450edef68"
14cec7cce4eb5936907b72093d3da899288bdc4c,"DERBY-1484: Client and embedded behave differently when the table name is null in DatabaseMetaData methods.
Patch file: DERBY-1484-4_ExcFact.diff

Patch contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537882 13f79535-47bb-0310-9956-ffa450edef68"
316ddc4314d7b3dd34cecb84b2e2dce60a9020f9,"DERBY-2335
CharConstantNode (and every QueryTreeNode) has a getLanguageConnection() method that provides access to the current language connection. That call should get used in bindExpression rather than ConnectionUtil to get current language connection.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@537940 13f79535-47bb-0310-9956-ffa450edef68"
82cb5d3217502d6a55a7338ae08101de726d3bf4,"DERBY-2124 Incorrect method name in error message for Connection.setTransactionIsolation method

Contributed by Raman Moazeni 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538036 13f79535-47bb-0310-9956-ffa450edef68"
9078aae5886511f25d7eaffa740bac684165d273,"DERBY-2610: Queries in metadata.properties allow tablepattern for JDBC methods that do not allow patterns. Patterns are now disallowed, except for in one of the queries (see Jira issue for details).
Patch file: DERBY-2610-1.diff

Patch contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538072 13f79535-47bb-0310-9956-ffa450edef68"
52f1d6473826af7ef7b37a1994ff0087a9198035,"DERBY-2555: Remove use of doPrivileged in EncryptionKeyTest.
Patch file: derby-2555-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538138 13f79535-47bb-0310-9956-ffa450edef68"
e3bd4bbd7a41dfd359596b7c3edb4f57815db4e5,"DERBY-2631: Expose existing auto-generated key functionality through more JDBC
APIs in embedded mode. 

 1. Updates the following JDBC methods so that they no longer throw a ""Feature
     not implemented"" error in embedded mode. Instead they make calls to an
     already existing internal method and pass in the appropriate arguments:

      Connection.prepareStatement(String sql, String[] columnNames);
      Connection.prepareStatement(String sql, int[] columnIndexes);

      Statement.execute(String sql, String[] columNames);
      Statement.execute(String sql, int[] columIndexes);

      Statement.executeUpdate(String sql, String[] columnNames);
      Statement.executeUpdate(String sql, int[] columnIndexes);

  2. Changes the (already existing but not currently used) code in
     sql/execute/InsertResultSet that handles autogen column indexes/names
     to throw an error for any target column that is not an auto-increment
     column. This is because Derby's implementation of getGeneratedKeys()
     internally maps to the IDENTITY_VAL_LOCAL() function, which only returns
     keys for identity (autoincrement) columns. So if the user specifies
     something else, we'll throw an error.

  3. Changes the names of two existing (but unused) errors to more accurately
     reflect their intended use (they are now called by the changes for #2).
     Also changes the text for those errors as the old text seemed a tad
     awkward. No regression impact here because the two errors in question
     were never exposed to users before now.

  4. Makes a slight change to jdbcapi/statementJdbc30.java (a test) to
     reflect the new behavior (we no longer throw ""Feature not implemented""
     errors).

  5. Adds test cases for the newly supported APIs to the JUnit test
     lang/AutoGenJDBC30Test.java. This involved adding two more utility
     methods to junit/BaseJDBCTestCase.java, as well. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538260 13f79535-47bb-0310-9956-ffa450edef68"
1036269b358f670b505fa65c2c01954b8bf0e077,"DERBY-2537

Check in intermediate version of a new test to test changes associated with
this issue.  There is still more test cases to add.  It is not ready to 
be included in the all suite.  It passes after the 
DERBY2335_Use_PushDataValueFactory_in_ExpressionClassBuilder_v1_diff.txt 
patch of DERBY-2335 is applied - otherwise fails with Class cast exceptions.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538300 13f79535-47bb-0310-9956-ffa450edef68"
685a14740ffe65b35e8700fc473059dbc9d18343,"DERBY-2618 (partial) Make ClobAsciiStream honour the contract for OutputStream.write(int) by ignoring
top 24 bits. Optimize ClobAsciiStream by re-using an array rather than recreating one for each write(byte[]) call.
Fix ClobStreamControl to correctly process a Derby UTF8 encoded stream.
Does not fix the issue, fixes are being worked on by others under related bugs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538311 13f79535-47bb-0310-9956-ffa450edef68"
869152fa28eec38f4626498113e42937699f5c07,"DERBY-2335
Made changes such that rather than having a new method in BaseTypeCompiler to push the DVD on the stack at code generation time, we use the
existing method that accomplishes the same task in ExpressionClassBuilder. The junit tests have run fine with these changes and the stack
trace experienced by Army in DERBY-2335 has been fixed by this fix. The reason for stack trace was that the lifetime of a BaseTypeCompiler
is longer than a single class generation and I was trying to hold a reference to a declared method from MethodBuilder.describeMethod across
the generated classes. This discussion can be found at 
http://www.nabble.com/DERBY-1478-subtask-DERBY-2583---need-help-in-debugging-stack-trace-thrown-during-code-generation-p10611184.html


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538325 13f79535-47bb-0310-9956-ffa450edef68"
a57602b4eb98318273a347211eaed9ec4a53e6f3,"DERBY-1985 (partial) Cleanup code in getTime,getDate & getTimestamap for the date-type
types by adding utility methods, sharing code and using the Calendar.getTimeInMillis() to avoid
creating a java.util.Date object during conversion.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538349 13f79535-47bb-0310-9956-ffa450edef68"
5e3c8748bcb8135365c064647345bee49d68ab93,"DERBY-2558: Client throws JDK exception rather than parameter out of range

The client implementation throws an ArrayIndexOutOfBoundsException rather
than the expected: ERROR XCL13: The parameter position '2' is out of range.
The number of parameters for this prepared statement is '1'. 

The issue is that the 4-argument overload of setObject was missing the
code to validate the parameterIndex; this code is present in the other
overloads of setObject.

This change adds the parameterIndex validation call, and also adds tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538413 13f79535-47bb-0310-9956-ffa450edef68"
7257ae6d164732e984f971cb2bd90cd6783579dd,"DERBY-2641: Convert lang/staleplans.sql to JUnit

Added StalePlansTest and enabled it as part of the lang suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538441 13f79535-47bb-0310-9956-ffa450edef68"
cf71534bd9f841062ba5ae545cc823dbdc535b01,"DERBY-2641: Convert lang/staleplans.sql to JUnit

Deleted the old lang/staleplans.sql test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538444 13f79535-47bb-0310-9956-ffa450edef68"
1e762f524bb77f7c29a4679d3bdaf81b1c4967e6,"DERBY-2462 Committed DERBY-2462-4, which fixes this issue and improves the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538572 13f79535-47bb-0310-9956-ffa450edef68"
29c4be66a98215d399126b9685012846f3e9c455,"DERBY-2335
Adding test cases so that one can check what is the collation on a database. It should be either UCS_BASIC or TERRITORY_BASED.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538640 13f79535-47bb-0310-9956-ffa450edef68"
20dc1eac3372264024711507f2454b92c52963f1,"Make JDBC.assertUnorderedResultSet() work on empty result sets.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538653 13f79535-47bb-0310-9956-ffa450edef68"
b4fdbf819daed52d243eca876a45addeb27fa221,"DERBY-1746 - removing svn:externals property from <trunk>/tools/testing, adjusting upgrade tests to by default attempt to access https://svn.apache.org/repos/asf/db/derby/jars for the older version's derby.jar files; removing dependency on 'lib' in old version's directory structure. Also adjusted comments.  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538724 13f79535-47bb-0310-9956-ffa450edef68"
c2b437d06b5ee51226140f810f9049a17dce81a9,"DERBY-2551: Global Xid value garbled in syscs_diag.transaction_table

Added test. Patch contributed by Julius Stroffek.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538770 13f79535-47bb-0310-9956-ffa450edef68"
60426a1751387bddd53fe786f8c18e4b1c30580b,"DERBY-2551: Disable XATransactionTest in J2ME


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538818 13f79535-47bb-0310-9956-ffa450edef68"
33877ab6fd18cd6e811ae1473a6c0809e94032b6,"DERBY-2570: Check in first rev of a tool for generating the Release Notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538929 13f79535-47bb-0310-9956-ffa450edef68"
9a6e26bffe60b014e7ff3030b5962216c4df7ede,"Add comments to upgradeTests._Suite indicating how to check out the release jars from svn
and use them with the upgrade test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538983 13f79535-47bb-0310-9956-ffa450edef68"
624d867da903cee66517b537e581f80b4c02a5d3,"Remove unused & trivial methods in ExecutionFactory related to old replication code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@538996 13f79535-47bb-0310-9956-ffa450edef68"
4119c42db67cd4a2c8efeca20ea4357de9b86493,"DERBY-2661 (partial) Remove some unused and trivial methods from ExecutionContext and GenericExecutionContext.
Knock onto effect to other methods which no longer need to pass in an execution context.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539007 13f79535-47bb-0310-9956-ffa450edef68"
1b42d4cebad0a43a3fd6b79aa777b3f884e6bd17,"javadoc fixes for some collation tests.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539027 13f79535-47bb-0310-9956-ffa450edef68"
45535b5493e4237ce2533076dff9694e1cca7473,"Cleanup a couple of cases in query tree nodes to remove unnecessary casting of a DataValueDescriptor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539050 13f79535-47bb-0310-9956-ffa450edef68"
fc245d8f6057cd4475031d8716327ea1dc124344,"DERBY-2599
Committing the patch DERBY2599_correct_collation_for_cast_v1_diff.txt attached to DERBY-2599 which will ensure that when an operand is 
CASTed to string datatype, the result type will take the collation of the current schema. So, if current schema is user schema for a 
database with territory based collation, then a comparison between a persistent character column from system table and a constant character 
string will fail because persistent character column from system table will have the collation of UCS_BASIC but the constant character 
string will pick up it's collation from current schema which is user schema and hence the collation will be territory based. Since the 2 
collations don't match, we will get a compilation error for the query. To get around this, a user can rewrite the query to CAST persistent 
character column from system table to one of the character types and that resultant character type will pickup it's collation from current 
schema, so now both the operands will have collation of territory based and the query will execute without collation mismatch failure. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539060 13f79535-47bb-0310-9956-ffa450edef68"
997ee7f3cfdfb3ce410f34bc8c432254f035003d,"DERBY-2397 (partial) Move drop code for constraints and indexes into their descriptors
as drop() methods instead of static methods in constant actions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539071 13f79535-47bb-0310-9956-ffa450edef68"
10062e2e99a38c1da8acc1a842163ae02c9988a1,"Remove unused constants from TupleDescriptor

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539073 13f79535-47bb-0310-9956-ffa450edef68"
9ea4a568f447e1e4d5eb2d66484ada7b09f8fd11,"Remove unused Calendar object & code in ClassSizeCrawler.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539080 13f79535-47bb-0310-9956-ffa450edef68"
a57c2804aa8125e54c20fe4c17d5e7b6e9a0e653,"Cleanup TypeCompiler.generateNull() and generateDataValue() to not pass the base class name since
it is not required. Add comments to BaseTypeCompiler's implementation of these methods
describing what they are doing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539142 13f79535-47bb-0310-9956-ffa450edef68"
d25aee089a992d34409bd7951e935c1f57995dea,"DERBY-2605: Patch to add compile-time checking of columns created from a
""CREATE TABLE AS ... WITH NO DATA"" statement, to ensure that the resultant
table only includes columns with types that a user can create him/herself.
In particular this blocks indirect creation of BOOLEAN columns, Object
columns, and DECIMAL columns with precision greater than 31.

Contributed by: James F. Adams (derby@xemaps.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539164 13f79535-47bb-0310-9956-ffa450edef68"
ac20f64caa7595d30f636201c1e88a151e1cb1ef,"Add updateTests._Suite to the tests run by the ant target junit-all (junit-core)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539181 13f79535-47bb-0310-9956-ffa450edef68"
702674b4664fdd42ee5a339361f8db9fc06db4d9,"DERBY-2434 Ensure the output for HarnessJavaTest is written using the expected output encoding to
match the master files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539249 13f79535-47bb-0310-9956-ffa450edef68"
6c000e85e16a90d6a27983bc81c8f62a5e1cca2e,"DERBY-2661 (partial) Change some callers of the ExecutionContext to get the ExecutionFactory directly
using the language connection context. Remove the getResultSetFactory from ExecutionContext.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539254 13f79535-47bb-0310-9956-ffa450edef68"
f5354d6c9878d250eb4f8012b816a5618a97b0e4,"Make JDBC.assertFullResultSet() work on empty result sets.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539315 13f79535-47bb-0310-9956-ffa450edef68"
bb5fc0b42b0db36be822f747e5a4946cf6015b2f,"DERBY-2663

Needed a j9 specific master update to account for changes added to base
test script as part of the fix for DERBY-2558.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539561 13f79535-47bb-0310-9956-ffa450edef68"
66a4fc47d1639dd14d4140832a3026f785d29b66,"DERBY-2644 disable EncryptionKeyXXXTests for now until we resolve the permissions errors. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539598 13f79535-47bb-0310-9956-ffa450edef68"
0bf1c7cfafce585ab99be9ce47378bdfa1c86637,"DERBY-2671 Ensure messages generated while starting the network server are sent to
the PrintWriter provided to the NetworkServerControl.start() method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539602 13f79535-47bb-0310-9956-ffa450edef68"
ed75fddb7f579c190171f48a07c888a0ab0f17ed,"Update comment in AllPackages to reflect change in how upgradeTests._Suite finds the old jar files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539605 13f79535-47bb-0310-9956-ffa450edef68"
040b128617715752fa3f78e42b87f64d8772a12d,"Change ClientSideSystemPropertiesTest to use mkdir() instead of mkdirs()
to avoid permissions error.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539608 13f79535-47bb-0310-9956-ffa450edef68"
023768a5068f2a5f4c4bb27f42ba9b28089f3f24,"DERBY-2673 If derby.system.home does not exist then first attempt to create it with File.mkdir() to
avoid requiring read permission on the parent folder.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539614 13f79535-47bb-0310-9956-ffa450edef68"
1e9e9251708ba43256a05aa0b195f957a321ae1b,"Fix javadoc errors.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539628 13f79535-47bb-0310-9956-ffa450edef68"
64ee17c1a95709ac5dedb44d49fa4fb0cf609006,"DERBY-2647: .lang.ErrorCodeTest fails with 'Required Derby DataSource
property {0} not set.'

ResultSet returned by the test has only partially defined order. Using
assertUnorderedResultSet() instead of assertFullResultSet() to solve
the problem.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539642 13f79535-47bb-0310-9956-ffa450edef68"
74d40b2140038ab16344e48c90607ac7829ee688,"DERBY-2642 (partial) Convert lang/dynamicLikeOptimization.sql to JUnit

First version of DynamicLikeOptimizationTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539744 13f79535-47bb-0310-9956-ffa450edef68"
05d610e3cb0708572669ad2d4954f667aa933eed,"DERBY-2496: Implement Blob support for Locators

Modified Blob tests so that they also work when locators are
enabled. Fixed two bugs in the network protocol. Patch contributed by
√òystein Gr√∏vlen.

File-by-file explanation of changes:

M java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java
    - Adjusted tests to not expect Blob objects to be valid after
      transaction commit.

M java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/PreparedStatementTest.java
    - Adjusted tests to not expect Blob objects to be valid after
      transaction commit.
    - Rewrote testSetBlobLengthless to take advantage of the existence of
      Connection.createBlob

M java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ResultSetTest.java
    - Adjusted tests to not expect Blob objects to be valid after
      transaction commit.

M java/client/org/apache/derby/client/net/NetCursor.java
    - If the column value is zero, a locator was not sent. Instead, this
      means that the length of the LOB is 0. Changed locator() to return
      INVALID_LOCATOR when the column value is zero.

M java/client/org/apache/derby/client/net/NetStatementRequest.java
    - If column is not nullable, a non-nullable locator must be requested.
      Otherwise, the server will send an extra byte for nullability which
      is not expected by the client.

M java/client/org/apache/derby/client/am/BlobLocatorOutputStream.java
    - Added an assert that checks that the underlying Blob object is
      locator based.

M java/client/org/apache/derby/client/am/Blob.java
    - Add buffering for InputStreams by wrapping BlobLocatorInputStream in
      a BufferedInputStream. (Doing the same for OutputStreams is not that
      straight-forward since that requires that the stream is flushed
      before the statement is executed.)

M java/client/org/apache/derby/client/am/BlobLocatorInputStream.java
    - Removed a TAB. Client code is supposed to be a TAB-free zone!


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@539784 13f79535-47bb-0310-9956-ffa450edef68"
47510ba8633506bf8a2341c93cc98bad49aa1cef,"DERBY-2646: Cleanup of Clob control/support structures. Removal of trailing space characters. This patch *only* deletes spaces.
Patch file: derby-2646-01a_trailing_space.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540083 13f79535-47bb-0310-9956-ffa450edef68"
79b7c0860ab29e7d253e6f5261fdd712b4fb058f,"DERBY-2674 (partial) Stop running jdbc40 tests in the old test framework

The attached patch removes the TestPreparedStatementMethods test and
associated files that are not used by other tests.

An inspection of PreparedStatementTest showed that testing of
isPoolable/setPoolable on a closed PreparedStatement was omitted when
the test was ported to Junit. The patch adds test cases for this to
PreparedStatementTest.

Contributed by √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540150 13f79535-47bb-0310-9956-ffa450edef68"
244952e1d511ed258b728d60ebf2f06e02613564,"DERBY-2599
Commiting patch attached to DERBY2599_Set_collation_for_aggregates_v1_diff.txt which does the job of setting the correct collation type and 
derivation for aggregates. As per SQL standard, if the operands of the aggregate methods are string operands and they do not all have the 
same collation derivaiton and type on them, then the resultant string operand will have collation derivaiton of NONE. One thing that is 
missing is as per SQL spec, in a comparison operator, as far as there is one operand with non-NONE collation derivation, the comparison 
should work. I do not have that part working yet. If the two operands of the comparison operator do not have the same collation, the 
comparison will fail. Also, if both the sides of the comparison operator have NONE collation, the current DERBY10.3 code will not catch 
that. Both of these issues can go as a subsequent patch. 

The aggregate methods that are covered by the patch are COALESCE, CONCATENATE, NULLIF, CASE 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540201 13f79535-47bb-0310-9956-ffa450edef68"
403684d32045aef65af72a71450a54a1b5f3f952,"Minor cleanup in the types packages. Make the collation specific classes package-private as
there is no need to expose the classes outside the package. Cleanup some comments.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540202 13f79535-47bb-0310-9956-ffa450edef68"
d794aa441f5c337fc3aa0f2289e311b885d793d3,"Fix typo in comment update for SQLChar that said SQLChar represented a VARCHAR instead of a CHAR.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540221 13f79535-47bb-0310-9956-ffa450edef68"
f90d44908d36da8d8265342e909f335ff6715c4c,"DERBY-2599
Commiting patch DERBY2599_Set_collation_for_aggregates_v1_diff.txt attached to DERBY-2599. This patch sets correct collation type for
MAX and MIN aggregate functions. These 2 aggregate functions can return string datatype and this return datatype should take it's collation
from it's operand. It appears that these 2 functions can't be used in where clause but even then, I think they should have correct collation 
set on them.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540237 13f79535-47bb-0310-9956-ffa450edef68"
74c2b8d9ab0753b0660f774abddefabc48823d03,"Cleanup some code related to setting up security managers for JUnit tests.
1) Remove some checked exceptions that are never thrown.
2) Name a couple of empty test suites.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540252 13f79535-47bb-0310-9956-ffa450edef68"
f576b26f86c148842e65b18ddad1ac6c3dcbce25,"DERBY-2549
contributed by Mayuresh Nirhali

Fix null pointer when running inplace compress.  Change code to correctly
handle when more than 100 rows are moved from a single page.  The new code
returns to the caller after processing the 100 rows, and the next trip 
through the loop picks up the scan where it left off on that same page.
Test case was added to existing test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540657 13f79535-47bb-0310-9956-ffa450edef68"
2ddf3764c34ca72fee923130939564bdb1b93e3d,"Patch to not attempt to reload the security policy if no security manager is installed by
the SYSCS_UTIL.SYSCS_RELOAD_SECURITY_POLICY procedure.
Also cleanup the procedure implementation to be self contained by using an anonymous inner
class for the privilege block. This removes a security hole where other code could use the
previous public class to perform policy refreshes. Also fix the exception handling to correctly
catch SecurityException, previously the code only caught checked exceptions which are not thrown
by Policy.getPolicy().refresh().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540658 13f79535-47bb-0310-9956-ffa450edef68"
b2a0e896e914169aa08b6dd3f9f81f18a33c8393,"Improve some comments for DataValueFactory.getCharValue() and DataValueDescriptor.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540665 13f79535-47bb-0310-9956-ffa450edef68"
68f9f47a0d403638a7f987e092b5113efaf44302,"DERBY-2599
Committing patch DERBY2599_getNull_should_set_collation_info_v1_diff.txt attached to DERBY-2599. This address the correct collation setting 
for ConstantNode created through QueryTreeNode's getNullNode method. This method currently creates a ConstantNode using the passed typeId. 
We need to set the correct collation type and derivation on this ConstantNode. This is accomplished by having the caller of this method 
pass the correct collation type and derivation. The junit tests have run fine with no problems. derbyall is almost finished with no new 
failures.

In addition to the above change, this patch also fixes some comments in DataTypeDescriptor.java and TypeDescriptorImpl.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540667 13f79535-47bb-0310-9956-ffa450edef68"
9fd642e10af32e98f36d5c7e8fa7c7d720f93749,"Remove unused class LOBConstantNode - LOBs cannot be constants in Derby's SQL.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540674 13f79535-47bb-0310-9956-ffa450edef68"
eb47bdba218ceb4eec74c63350cbf1c024352ac1,"Change the DataDictionary implementation for Derby to use SQLChar/SQLVarchar directly
as all system columns are UCS_BASIC collation based. This removes one level of indirection
for creating objects in the system catalogs, ie. instead of using DataValueFactory.
See also package.html for the iapi.types package on the reason for using some types directly.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540689 13f79535-47bb-0310-9956-ffa450edef68"
26b9e3ccc14c214dac64720aaa663d5a2d931006,"DERBY-1816 (partial): Pre-patch ""cleanup"" that does the following:

  1) Replaces each of the recyclable Date, Time, and Timestamp arguments
     with a recyclable java.util.Calendar object in client/am/Cursor.java.

  2) Modifies the relevant code in client/am/DateTime.java to call methods
     on the recyclable Calendar object instead of on Date, Time, and
     Timestamp objects. The benefit to doing this is that we are now using
     non-deprecated methods.

Note that even with this patch we are still creating a new instance of
Time/Timestamp/Date for each method--the cleanup patch does not change that.
Instead, the cleanup patch adds the instantiation of a new Calendar object
(one per client/am/Cursor) and then (re-)uses that object to replace the
deprecated calls.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540740 13f79535-47bb-0310-9956-ffa450edef68"
6f30d2c1847b503500de4073d06296c93f46aea0,"Fix javadoc error in WriteCursorConstantAction

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540770 13f79535-47bb-0310-9956-ffa450edef68"
d8069710b48e881af11feae76e642f44c060dce5,"Fix javadoc errors in TypeDescriptor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540772 13f79535-47bb-0310-9956-ffa450edef68"
d0bb3169e0b3385b27d8a83be89da719f461124e,"DERBY_1465  NetworkServerControl.start() should throw an exception and not just print exceptions if the server fails to start



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540779 13f79535-47bb-0310-9956-ffa450edef68"
b700deb3c4c513ebbc080bf7380438b6f04f46cd,"DERBY-1465 NetworkServerControl.start() should throw an exception and not just print exceptions if the server fails to start


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540789 13f79535-47bb-0310-9956-ffa450edef68"
c8c15510150e31db430de41166550139b7a0fda3,"Remove some unused methods in DataValueFactory that fetched new DataValueDescriptors without passing
in a holder object.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540791 13f79535-47bb-0310-9956-ffa450edef68"
056e43e931946e0f8d9901b9fc3ba27ffdbae637,"DERBY-1465 NetworkServerControl.start() should throw an exception and not just print exceptions if the server fails to start

Backout change until changes from review comments from Dan can be incorporated.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540809 13f79535-47bb-0310-9956-ffa450edef68"
cd1bd879b72c57de7a7fce647dfa6c5f82a91bab,"DERBY-2642: Convert lang/dynamicLikeOptimization.sql to JUnit

Added missing test cases and removed the old test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540856 13f79535-47bb-0310-9956-ffa450edef68"
fe68e748b3e1720bd1a2935c27fbcd984f568ed8,"Fixed javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540872 13f79535-47bb-0310-9956-ffa450edef68"
fbf13816681c38b7a8aa5707cadcc6e501112c47,"DERBY-827: Performance can be improved by re-using language ResultSets
across Activation executions

This patch enables re-use of language ResultSets.

Contributed by Daniel John Debrunner.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540921 13f79535-47bb-0310-9956-ffa450edef68"
726b66f0f09e7778317c3a4686f8e8bd4c605ce4,"Minor cleanup in the collator character types to ensure that a collator DVD is always
created with collation information and share setup code for setting its collator
by having the constructors call the setCollator() method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540971 13f79535-47bb-0310-9956-ffa450edef68"
9373fed91f051ec93e1ffb5547e44164abeac407,"Add methods to DataValueFactory to get character values based upon a collation.
These methods are unused at the moment but a subsequent commit will utilise
them in the generateDataValue() call of BaseTypeCompiler.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@540986 13f79535-47bb-0310-9956-ffa450edef68"
e88294e41e1876cab343c19cc6362555bf9a27d8,"Minor cleanup in database cleanup related code in JDBC.java.
Use constants for the table type passed to DatabaseMetaData.getTables.
Optimize the dropUsingDMD code by bailing out of the method early if there
are no objects to drop.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541030 13f79535-47bb-0310-9956-ffa450edef68"
25a9abc627159d3c4534dfaab1ffe75336b3f528,"Cleanup CreateTableFromQueryTest to create its base tables once per run rather
than once per fixture.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541033 13f79535-47bb-0310-9956-ffa450edef68"
c7f3642c1edb3bb3457a4428f0546d6d99658874,"Cleanup some language JUnit tests, some minor cleanups on decorateSQL() methods
such as not closing the passed in Statement (it is closed by the decorator)
and closing other objects created in the method. Change a couple of the 
language tests to only run embedded since they are testing server side logic.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541038 13f79535-47bb-0310-9956-ffa450edef68"
4c80863e9f25b08b4edd1681e00fc700a3eeb656,"More JUnit test cleanup related to use of CleanDatabaseTestSetup.
Also fix typo in CleanDatabaseTestSetup where exception was ignored.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541041 13f79535-47bb-0310-9956-ffa450edef68"
23c0fedea36bcfaa3d07a20930af4f0190a27d78,"DERBY-2000 Add a BaseTestSetup class that installs the security manager so
that it is in place during the decorator's methods. Changed the various
Derby decorators to extend this new class.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541044 13f79535-47bb-0310-9956-ffa450edef68"
bf448519bad2956fbf67a51f1920ec4d83406ce2,"Fix build error.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541053 13f79535-47bb-0310-9956-ffa450edef68"
44fad02b2cceef38c7184be52fe735b4a1ad41f1,"Generate data values for collated types using the new three argument DataValueFactory.getCharDataValue
method (and for the other character types). This avoids the need to push the DataValueFactory again
and pass ExpressionClassBuilder into TypeCompiler.generateDataValue.
A subsquent commit will make similar changes for generateNull.
A last commit will remove passing ExpressionClassBuilder and make that class non-public again.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541061 13f79535-47bb-0310-9956-ffa450edef68"
fffde777788b7f832a21bc935051ea2d83ebbfea,"DERBY-2618: EmbedClob.setAsciiStream does not handle non-ascii characters correctly. Now also and-ing bytes in write(byte[],int,int) with 0xff.
Patch file: derby2618_partial_v5-ontopofv4.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541315 13f79535-47bb-0310-9956-ffa450edef68"
33a279940606653b3bf0e182def44359b6344087,"DERBY-1816: ResultSet.getTime() on a SQL TIMESTAMP should retain millisecond
precision.  Patch does the following:

  1. Separates the timestamp parse logic in client/am/DateTime.java into a new
     method called ""parseTimestampString()"". The new method takes a timestamp
     string and a Calendar object, and sets the fields of the Calendar based on
     the fields that are parsed from the timestamp string.  The method also
     returns the parsed microseconds value since that cannot be set on a
     Calendar object (the precision of a Calendar is milliseconds).

  2. Modifies timestampBytesToTimestamp(...) to call the new method for
     parsing timestamps.

  3. Changes the timestampBytesToTime(...) method so that it now parses the
     full timestamp (via the new parseTimestampString() method) instead of
     just parsing the hours, minutes, and seconds. Then a java.sql.Time
     object is created from the Calendar object into which the timestamp
     string was parsed. This allows us to preserve the sub-second resolution
     that is parsed from the timestamp.

  4. Re-enables the relevant test case in lang/TimeHandlingTest.java so that
     it now runs in client mode. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541333 13f79535-47bb-0310-9956-ffa450edef68"
44aecca77c0d9af52db89214f9f9858a6bf60bd3,"DERBY-2537 (partial)

Some more test cases and adding CollationTest2 junit test to nightly suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541339 13f79535-47bb-0310-9956-ffa450edef68"
a1aaa63b3e1c45c8dcff6ce31e79586ee73f05d4,"Add DataValueFactory.generateNull*Char() methods that take a collation type.
Use these methods in TypeCompiler.generateNull() to avoid having to push
another data value factory instance at generation time. ExpressionClassBuilder
no longer needs to be passed to the generate methods of TypeCompiler thus
that argument is removed and the class becomes package private again.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541370 13f79535-47bb-0310-9956-ffa450edef68"
b31849d10eb37d98f413a0f7fa560efb9b9718f9,"Cleanup imports on a number of classes in o.a.d.impl.sql.execute

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541376 13f79535-47bb-0310-9956-ffa450edef68"
45f198b37a1dabcb76b00e8b58652b3d4996d368,"ResultColumn's convertConstant method has 2 calls to DataValueFactory.getVarcharDataValue(String) which will always create SQLVarchar
and disregard any collation information that it should be using. This gets called for an INSERT statement while trying to do
column type and length matching from the source resultset into the target. The change through this commit makes sure we set the correct 
collation type and derivation. Some background information on this change from a thread titled ""Possible missing collation info for DVDs?"" 
on Derby dev mailing list (http://www.nabble.com/Possible-missing-collation-info-for-DVDs--tf3798563.html#a10745343)

Snippet start from the thread mentioned above.
I looked at ResultColumn's convertConstant method which has the 2 calls to DataValueFactory.getVarcharDataValue(String). This method gets 
called in following sequence
convertConstant(TypeId, int, DataValueDescriptor) - org.apache.derby.impl.sql.compile.ResultColumn
 columnTypeAndLengthMatch(ResultColumn) - org.apache.derby.impl.sql.compile.ResultColumn
  columnTypesAndLengthsMatch(ResultColumnList) - org.apache.derby.impl.sql.compile.ResultColumnList
   bindStatement() - org.apache.derby.impl.sql.compile.InsertNode
 
It looks like InsertNode's bindStatement method calls columnTypesAndLengthsMatch to make sure that the source and target column types and 
lengths match and if not, then it should insert a NormalizeResultSetNode  on top of the source. If the source happens to have constants, 
then we try to convert the constant to the type of the target(this happens in ResultColumn's convertConstant method). 
 
Since none of this code flow happens for a collation operation, in theory, it will be ok with not setting the correct collation type and 
derivation and hence the code should not run into any problem even if it stayed as it is. If my understanding is wrong about how the 
constants in the insert statement can't be part of a collation operation, then please let me know. Ideally though, it will not hurt to 
have the correct collation type and derivation setting on constants in this case whether or not they get used in a collation method. So, 
I will go ahead and do that. 
Snippet end from the thread mentioned above.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541381 13f79535-47bb-0310-9956-ffa450edef68"
e5bbea454c81a1ceecd50322b72fb61cef0996df,"DERBY-2661 Remove one use of ExecutionContext and instead obtain the ExecutionFactory directly
for TableDescriptor.getEmptyExecRow.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541393 13f79535-47bb-0310-9956-ffa450edef68"
f1701004fc9949aaf794c5b408fe7304d4780d74,"Remove unused fields from T_ConsistencyChecker.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541394 13f79535-47bb-0310-9956-ffa450edef68"
8bae7cffa26619739400b86cdae04d014af39a93,"Cleanup some more imports from SQL code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541396 13f79535-47bb-0310-9956-ffa450edef68"
b0894ba3e205c6226aa052e988ab2691964007ca,"DERBY-2537 (partial)

test cases for bulk table insert into empty table and build table insert 
replace.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541401 13f79535-47bb-0310-9956-ffa450edef68"
49912a99094d7a3a2ea43a4b8752e79c2a184df2,"Remove unused imports.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541410 13f79535-47bb-0310-9956-ffa450edef68"
de3b10877b7aae812b94c6999b295a5a8365a07a,"DERBY-1440: jdk 1.6 client driver omits SQLStates and chained exceptions in
error messages

While working on DERBY-2472 I found out what caused this difference between
the JDBC 3.0 driver and the JDBC 4.0 driver. There are three
problems. Firstly, StandardException.unexpectedUserException() doesn't
recognize that an SQLException is generated Derby since it is not an
EmbedSQLException. Secondly, TransactionResourceImpl.wrapInSQLException()
invokes SQLException.setNextException() explicitly so that the required
chaining/ferrying logic in the exception factory and in EmbedSQLException's
constructor is not used. Thirdly,
SQLException40.wrapArgsForTransportAcrossDRDA() puts a standard
SQLException, not an EmbedSQLException, in the argument ferry's
next-exception chain, which prevents the network server from seeing it as a
Derby exception.

The attached patch fixes the problem by

  1) using SQLExceptionFactory.getArgumentFerry() to find out whether the
     exception is a Derby exception in unexpectedUserException()

  2) using factory methods instead of setNextException() to do the chaining
     in wrapInSQLException()

  3) improving Util.javaException() so that it sets up a next-exception
     chain if the Java exception contains nested exceptions

  4) changing wrapArgsForTransportAcrossDRDA() to create an argument ferry
     whose next exception is the argument ferry of the main exception's next
     exception

This patch also fixes all the JUnit tests that contain code looking like this:

    assertStatementError(JDBC.vmSupportsJDBC4() ? ""38000"" : ""42X62"", cSt);

Now, the check for JDBC level is not needed anymore for those tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541435 13f79535-47bb-0310-9956-ffa450edef68"
ceb12d3fd728f68f88f2a79efe3db9b329bc5bea,"DERBY-2661 (partial) Remove one use of ExecutuionContext with a direct use of ExecutionFactory.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541732 13f79535-47bb-0310-9956-ffa450edef68"
7d06a439439e6a1647efd24419299d8df52b2d2c,"DERBY-2570 - some adjustments for the 10.3 release


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541803 13f79535-47bb-0310-9956-ffa450edef68"
879eca088dff7186f21ac95fb901d8c9107f328e,"DERBY-2570 - some adjustments for the 10.3 release


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541807 13f79535-47bb-0310-9956-ffa450edef68"
f18b8d0e65bf1d7512ef13ff37b0a3bc600b4fa2,"DERBY-2670

Changed WorkHorseForCollatorDatatypes to not cache info about the collation
elements across calls to like on the object.  This info needed to get 
invalidated when object for a column was reused to process the next row.
Added a test to CollationTest2 based on bug report.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541822 13f79535-47bb-0310-9956-ffa450edef68"
613392c3cba74886c7be82707a7b72a7e62f3d8e,"DERBY-2701: many sealing violation errors in ibm142 and ibm15 jvm test
runs of junit tests

Removed references to StandardException from java/tools.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541977 13f79535-47bb-0310-9956-ffa450edef68"
233326255774e6a1634e0d322019c6a0455d6f4a,"DERBY-2379: Encrypt temporary files for LOBs if database is encrypted

Contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@541981 13f79535-47bb-0310-9956-ffa450edef68"
71d73dd6df074a7f4d59f0f776416bae6c951705,"DERBY-2686: Brushed up two skip methods; one to return 0 when a negative amount to skip is passed in, the other one will now break when 0 is returned from the underlying stream. No assumption is made about EOF, this is still up to the higher level streams, but the skip method will no longer hang forever if there is less bytes than requested in skip. Also removed some unused imports.
Patch file: derby-2686-3a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542005 13f79535-47bb-0310-9956-ffa450edef68"
5b7bb25deb121abd266f43ad58a6aaf2d31f3cac,"DERBY-2496: Implement Blob support for Locators

The attached patch, enableblobloc.diff, contains the the necessary
changes to enable the use of locators for Blob. The patch addresses
the following issues:

   * Enable the use of locators.
   * Modification of tests that experience changed behavior with locators
   * If stored procedures reports that the given locator can not be
     found, it is assumed that this is because transaction has been
     terminated and an ""Blob accessed after commit"" error is
     reported. This makes the client driver and the embedded driver
     report the same error for this case.

Contributed by √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542011 13f79535-47bb-0310-9956-ffa450edef68"
9b529367aac2f2f3cab8ff74ed79a151e458776e,"DERBY-2707: Inadequate clean-up in many jdbc4 tests

Fixed the tearDown() methods in many of the jdbc4 tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542016 13f79535-47bb-0310-9956-ffa450edef68"
33402314bdc6cd310e831e23e5ca5dc4048f26d1,"DERBY-2708: CanonTestCase keeps output from test in memory after it has finished

Added tearDown() method to CanonTestCase.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542019 13f79535-47bb-0310-9956-ffa450edef68"
5470256075fbfe22b197a66af178b024d04c37ed,"DERBY-2703 (partial)
Checking in a test to show problem with calling getColumn().  The test is
disabled on 1.4.2 where it breaks.  To reproduce bug need to change test to
run the runDERBY_2703() test case under 142, and run the test under either 
sun or ibm 1.4.2 jvm.
It also disables the import/export based tests in this test for 1.4.2 as they
are also not working because of this issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542020 13f79535-47bb-0310-9956-ffa450edef68"
98ceb6ff440efbc677a285aad98a7327448f61b0,"DERBY-2709: lang/ShutdownDatabaseTest, lang/StatementPlanCacheTest and
lang/SysDiagVTIMappingTest keep references to closed JDBC objects

Fixed tearDown() methods.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542023 13f79535-47bb-0310-9956-ffa450edef68"
ac1f6f114997d00767b942b7f79b7d604bfdbe13,"DERBY-1797 - Building toursdb would go a little faster if it used autocommit off. Patch contributed by James F. Adams.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542080 13f79535-47bb-0310-9956-ffa450edef68"
12cf96ff4c24d8a9e50751fd989a0d57eb5b2765,"DERBY-2703: Fixed errors in Tinderbox

CollationTest2 calls SanityManager.DEBUG_PRINT() without checking that
SanityManager.DEBUG is true.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542153 13f79535-47bb-0310-9956-ffa450edef68"
d987b257e8aa7d5fce80e1f840a1a399ed37feac,"DERBY-2701: many sealing violation errors in ibm142 and ibm15 jvm test
runs of junit tests

Sealed org.apache.derby.iapi.error and org.apache.derby.impl.jdbc in
derby.jar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542155 13f79535-47bb-0310-9956-ffa450edef68"
888ae01fa5bf262772a2170819a1749e8df4eef0,"DERBY-2669 
add test case to CollationTest2 to test case of setting teritory based 
collation without setting territory attribute.  I tried to make it so 
that the test will run in norway, english and polish territory where the
test can handle results and not run in other territories - but sort of 
hard to test.  Let me know if the testDefaultJVMTerritoryCollation() fails, 
and what the value of territory is for the vm it failed in.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542175 13f79535-47bb-0310-9956-ffa450edef68"
1641c38b540e5e727ff47b7acf18c9b5a4d0946b,"Fixed javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542187 13f79535-47bb-0310-9956-ffa450edef68"
2b22c7f13210c46458933571c2dce09f2d005a59,"DERBY-1440: jdk 1.6 client driver omits SQLStates and chained
exceptions in error messages

Follow-up patch which simplifies wrapInSQLException() and improves the
comments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542232 13f79535-47bb-0310-9956-ffa450edef68"
fe1130b670435c70067cc6e8f45257f86fbc5c9b,"DERBY-2868: Changed UTF8Reader to return 0 instead of -1 in skip when EOF is reached. Changed usages in EmbedClob accordingly.
Patch file: derby-2686-2a-reader.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542269 13f79535-47bb-0310-9956-ffa450edef68"
eb0cea2a282b9267555a3df095403361bcd6a239,"added comments and fixed inconsistent tab/space usage.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542276 13f79535-47bb-0310-9956-ffa450edef68"
d61b68f3da65151732b9ba9d29e22aef444692f5,"fix whitespace for ascii graphs in comments.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542282 13f79535-47bb-0310-9956-ffa450edef68"
1870e8fa7f0329bd454fe14af496f5f6de826257,"DERBY-2472 (partial) Use Throwable.initCause() to improve error reporting

Fix some unsafe calls to initCause() by catching IllegalStateException.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542446 13f79535-47bb-0310-9956-ffa450edef68"
e0f042af9d302628ec6d4f5db234f3a48233ccf1,"DERBY-2714: SecureServerTest spends five minutes waiting for a server to start

Abort waiting for the server to come up if the server process has terminated.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542449 13f79535-47bb-0310-9956-ffa450edef68"
5d54436528188370877f1a796137fcf6ebd0b5b2,"DERBY-2247: provide set methods for blob in embeded driver

Addressing follow-up comments. Contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542473 13f79535-47bb-0310-9956-ffa450edef68"
2c77aa2b610709accf9a27d4264f50b46e9154b4,"DERBY-2710

disabled < and >= lik ooptimization for non unicode default collated databases.  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542553 13f79535-47bb-0310-9956-ffa450edef68"
8716d1179bae262b2d93570e256518b9381a8cdc,"DERBY-2646 (partial): Checked in new interface for internal Clob objects. The interface is added to separate concerns into different classes. The implementation classes will be added later, and EmbedClob will be rewritten to use the new interface. The initial idea is to add two different internal Clob representations; one that is read-only and operates on streams from store, and one that is read-write and stores a Clob temporarily (in memory or on disk).
Patch file: derby-2646-03a-internalclob.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542641 13f79535-47bb-0310-9956-ffa450edef68"
7c5fbc414a1cec8f31738cf07ea3b105bfa0286a,"DERBY-2599
Commiting the patch which makes sure that JDBC parameters take their collation type from the schema in which they are getting
compiled. This involved quite a few classes. I have added quite a few test cases. Test cases are required for LIKE, user defined
functions, IS NULL.
The commit also implements the fact that the result character string types from UPPER, LOWER, TRIM(LTRIM, RTRIM), SUBSTR will have the same 
collation as their operand.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542646 13f79535-47bb-0310-9956-ffa450edef68"
ea2bbddb04df671368b2f657a5a1bba2c22c1090,"DERBY-2716

fixed bad parsing of java version argument.  In the process also discovered 
that J2ME environment also reproduces DERBY-2703, so changed the test case
to also not run in this enviroment.   I just brute forced the java version
check, hopefully 2703 will get fixed before needing to add more jvm's to 
ignore.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542697 13f79535-47bb-0310-9956-ffa450edef68"
dec40257be09b90908c8882f0e2bdceb03ff8c62,"DERBY-2646: Fixed two errors in the JavaDoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542817 13f79535-47bb-0310-9956-ffa450edef68"
d9e0247479bdaa50a0eb748fa435bff9f89e3d25,"DERBY-2433: Change the message which the network server prints if it needs to install a security manager but you have not configured a user-authorization scheme.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542866 13f79535-47bb-0310-9956-ffa450edef68"
a3da76ec6aab14567a754efd01611d5a827712c9,"DERBY-2526: Fix code in the ""remapColumnReferencesToExpressions()"" method of
ColumnReference so that it updates the remapped column reference's *column*
number in addition to updating its table number.  Add appropriate test
cases to lang/joins.sql.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542867 13f79535-47bb-0310-9956-ffa450edef68"
d6948ead68d89dbafeba25fb27184ee2ad9dbff4,"DERBY-2695: Oystein's soft upgrade support for LOB locators.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542925 13f79535-47bb-0310-9956-ffa450edef68"
75476a07d42c9ce93a551e240ca859940858afb0,"DERBY-2645; failures in upgrade test with J2ME/JSR169 when upgrading from 10.0 because 10.0 did not have support for JSR169. Disabling that part of the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@542984 13f79535-47bb-0310-9956-ffa450edef68"
2e1b5e84dbf2acdc5379a1b4642c8270ba24aa71,"Minor cleanup of QueryTreeNode.verifyClassName() to remove old code and comments
that was related to the old non-standard class aliases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543057 13f79535-47bb-0310-9956-ffa450edef68"
20d5490f20969a98f7525298a5105db718cb3ccd,"Cleanup some comments in QueryTreeNode.getSchemaDescriptor() to indicate these
methods must be used to get schemas during compilation and to indicate that
passing null returns the current compilation schema.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543063 13f79535-47bb-0310-9956-ffa450edef68"
a9a738974bc5f23004135826079a44951d3768c2,"Escaped non-ASCII characters in CollationTest2.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543077 13f79535-47bb-0310-9956-ffa450edef68"
96889c19d3e83fe5a3eb84d507027f7a7f0caa79,"DERBY-2692: Client driver doesn't chain exceptions received from the server

This patch makes the client recreate the chain of exceptions sent by
the server instead of concatenating the messages.

Description of the changes:

* java/client/org/apache/derby/client/am/Sqlca.java:

  - added a message number parameter to the methods that retrieved
    mesage and SQL state

  - fixed SqlErrmc parsing (used the correct delimiter) and renamed
    sqlErrmcTokens_ to sqlErrmcMessages_ since the SqlErrmc was split
    into its separate messages, not its tokens

  - added a string array called sqlStates_, which keeps the SQL states
    for each message in the chain

* java/client/org/apache/derby/client/am/SqlException.java

  - added a message number field to keep track of which message in the
    SQLCA to use

  - changed the constructor that takes an Sqlca argument so that it
    recursively builds the chain of exceptions when the Sqlca contains
    many messages

* java/client/org/apache/derby/client/am/ExceptionFormatter.java

  - removed the printing of SqlErrmcTokens in printTrace(), because
    (a) that method was renamed, and (b) it contains the exact same
    information as SqlErrmc which is printed anyway

* java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java

  - changed assertSQLState() so that it checks nested exceptions on
    the client the same way as on embedded

* java/testing/org/apache/derbyTesting/functionTests/tests/lang/ProcedureInTriggerTest.java

  - enabled an assert that previously only worked on embedded


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543090 13f79535-47bb-0310-9956-ffa450edef68"
8ee828b42616bd735d3df0803d12573bf97bb439,"Fixed bug in LoopingAlphabetStream.read(), where the return value was not and-ed with 0xff.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543095 13f79535-47bb-0310-9956-ffa450edef68"
8ae64be14287f856def0e1ace34d3320174926a8,"Removed trailing spaces.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543097 13f79535-47bb-0310-9956-ffa450edef68"
649830ff276bdddac0e89196c8525491e6fb32e4,"DERBY-2722
Committing changes which will make sure that we set the collation to current schema's collation for the return character string from XMLSERIALIZE.
Don't have to make any changes for CHAR and VARCHAR functions because these functions gets translated into CAST by the parser and I have
already checked in changes for the result of CAST to have the collation of current schema.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543183 13f79535-47bb-0310-9956-ffa450edef68"
f178a86523ea77b21147fcb528ef03b4bb77f0af,"Minor cleanup on jdbcapi.AuthenticationTest and its sub-classes.
Change static fields to be either final or remove their use where local
variable will suffice. Close several JDBC objects that remained open.
Use the utility method to set a system property in the parent class
instead of multiple privileged blocks. Setup connections to have
auto-commit off by default which is what the test seems to expect.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543206 13f79535-47bb-0310-9956-ffa450edef68"
bcb6e16abdc0427f3ef973e2590d544903ae4cb6,"DERBY-2722
Before making call to XMLSERIALIZE, we should check if the classpath includes the required Xalan/JAXP classes. Otherwise the test will fail
with jvms, where these classes can't be found.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543209 13f79535-47bb-0310-9956-ffa450edef68"
cca0f77e40e472be1c291ac5d89974f7db1fdba4,"Add an assert for Connection isReadOnly() and read-only connections set through connection
level authorization. Added comment for DERBY-2738 indicating that network client always
returns false.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543213 13f79535-47bb-0310-9956-ffa450edef68"
72b93c59c1a64282e342bf09c6c148ccd78611ce,"DERBY-2735 (partial) Add the system procedure & function for connection level authorization
with SYSCS_GET_USER_ACCESS mostly implemented and SYSCS_SET_USER_ACCESS as a stub.
Add some testing of SYSCS_GET_USER_ACCESS. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543254 13f79535-47bb-0310-9956-ffa450edef68"
f63b7da8a8c1607eac4b35410b5275a8fde3c426,"DERBY-2599
There are few character string types that should take their collation type from compilation schema. I had earlier checked in code for them
to use current schema rather than compilation schema (For reference http://www.nabble.com/more-on-system-schema-vs.-user-schema-and-character-constants.-p10885286.html)
With this commit, I am adding an utility method in ValueNode called setCollationUsingCompilationSchema(int) which will use the compilation
schema's collation type for it's DTD. And it will use the passed int value to set its DTD's collation derivation. This utility method will
be used by the subclasses of ValueNode to set their DTD's collation type to compilation schema's type wherever required. Note that NOT all the
character string types take their collation from the compilation schema. For instance, persistent character string type column from a
table will take the collation type from the schema their table belongs to rather than the compilation schema.

I have run the 2 collation related tests, CollationTest and CollationTest2 and they run with no problems. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543266 13f79535-47bb-0310-9956-ffa450edef68"
2ee5c4101314a3dfc0403acb6a53e756e649254f,"DERBY-2562 Convert lang/SpillHash.java to junit

contributed by Ugo Matrangalo (matra@santippe.dyndns.org)




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543271 13f79535-47bb-0310-9956-ffa450edef68"
0d4b4001121ffab4c94ac8bc63c3cf55dce00b4c,"DERBY-2735 (partial) Basic working implementation of the SYSCS_SET_USER_ACCESS and tests for it.
Need more cleanup work including checking invlaid parameters for the procedure and function.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543281 13f79535-47bb-0310-9956-ffa450edef68"
9cf7d230a5e9c679bf4843a23b7a35bd780098c8,"DERBY-2735 (partial) More tests and fix the return from SYSCS_GET_USER_ACCESS when default connection
mode is not set.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543302 13f79535-47bb-0310-9956-ffa450edef68"
f12802f771198ffe6d9493c853bed9dc800a5365,"Remove unused and old JDK 1.3 code that have explicit com.ibm and com.sun class names for crypto.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543303 13f79535-47bb-0310-9956-ffa450edef68"
63616ccaebc43516ee9d49556815a2c2fc62059a,"DERBY-2718 - LobStreamsTest and BlobClob4BlobTest fail with JSR169 because missing support for encryption. Now, only running encryption part with vms supporting JDBC3 and higher.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543343 13f79535-47bb-0310-9956-ffa450edef68"
7478b0dd7a23854743fe4b235db3b3c0b68a250c,"DERBY-2472: Use Throwable.initCause() to improve error reporting

Fixed some callers of SQLException.setNextException() so that the
original exception would be visible without traversing the chain with
getNextException().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543424 13f79535-47bb-0310-9956-ffa450edef68"
55d4cdfaeca33ce500ad2c46f284bc4b900b977c,"DERBY-2692: Client driver doesn't chain exceptions received from the server

Always use initCause() to chain exceptions, also when they are chained
with setNextException().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543428 13f79535-47bb-0310-9956-ffa450edef68"
5839503b41a929f9470d28061cd24a04088c2c0f,"DERBY-2273 Implement SSL flag in datasource objects. Code changes

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543435 13f79535-47bb-0310-9956-ffa450edef68"
ff0d59fea9af0cb818ebbb0beccad56f32aa54ed,"Fixed overflow bug in LoopingAlphabetStream, where a negative number ended up being used in System.arraycopy.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543440 13f79535-47bb-0310-9956-ffa450edef68"
680c9ad75862c7f30c91de3bf5f6d53d10928834,"DERBY-2379: Reduced number of calls to length() in EncryptedLOBFile

Contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543483 13f79535-47bb-0310-9956-ffa450edef68"
065d697a3f8310bea90072b1b4750d118ec9e68e,"Change ValueNode.setCollationUsingCompilationSchema() to use the getSchemaDescriptor() method
that does not fail if the schema does not exist, e.g. when preparing statements the current
user's schema and that schema does not exist. Fixes the failures in AuthenticationTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543499 13f79535-47bb-0310-9956-ffa450edef68"
46ecfcfae6ff424bed24374773f8f870ec227afb,"DERBY-538 (partial) Switch the parent class loader for JarLoader to SecureClassLoader.
Add the restriction that javax. and org.apache.derby. classes
cannot be loaded from installed jars. Add test cases for loading various illegal
classes (java, javax and org.apache.derby) to DatabaseClassLoadingTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543524 13f79535-47bb-0310-9956-ffa450edef68"
d36746b52d64362a1e9745e55dffb40e1f47a50e,"DERBY-2735 Fix the JDBC 4 TestDbMetaData test including simplyfying it a little
so that the builtin functions can be defined once the the sub lists generated
from that, rather than having three separate lists to keep up to date.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543531 13f79535-47bb-0310-9956-ffa450edef68"
3f677d159def8282d8e06e56e59f72108629c5e0,"DERBY-2744 DERBY-2242 Remove the testing of the new JDBC 4.0 DatabaseMetaData functions from
the harness based metadata tests that are already covered by the JUnit jdbc4.TestDbMetaData test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543544 13f79535-47bb-0310-9956-ffa450edef68"
ec2b8d17d7d14687bb478eb20fa3c428b6ff46d1,"DERBY-2717
Throw new error if operands of LIKE do not have matching collations.
Adds tests for this case in CollationTest2.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543554 13f79535-47bb-0310-9956-ffa450edef68"
6fc71fbd54fbff1c2f6153f849dfbeb2342f6b4e,"DERBY-2040 Open the JarFile for the installed jar (in JarLoader) using a privileged block.
Change various tests that failed with a security manager due to this issue to run with
the security manager. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543565 13f79535-47bb-0310-9956-ffa450edef68"
bc739f781b86cbca73a8e806fd4897517a93ca1b,"DERBY-2717

Change DataTypeDescriptor.getCollationName() to call 
typeDescriptor.getCollationName().



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543590 13f79535-47bb-0310-9956-ffa450edef68"
a7623009c04f5033c364b3f61807158cdfe33652,"DERBY-2645 - remove semicolon at end of if statement to cause skipping of upgrade test from 10.0 with JSR169.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543809 13f79535-47bb-0310-9956-ffa450edef68"
4af38b43caaa657a5d02a0f4c1e6eab4cce8e84b,"DERBY-2609 - add testing for show indexes in schemaname with client; add ToolScripts suite for testing ij syntax through sql scripts.
Patch contributed by Jorgen Loland (sorry about the missing / through the O)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@543858 13f79535-47bb-0310-9956-ffa450edef68"
beecb26b1113c02665267dbfd0406290e5b2ff99,"DERBY-2587: Implement support for returning locator-enabled CLOBs from
Connection.createClob() in the network client. The new code is
currently disabled.

Contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544084 13f79535-47bb-0310-9956-ffa450edef68"
d21179222064b53b33b43f3ca705eda6ae8cd875,"DERBY-2646 (partial): Added StoreStreamClob, UTF8Util and added more JavaDoc for InternalClob. This code is still not enabled. When it is, it will be used to operate on Clob represtented as a stream in store.
Patch file: derby-2646-04b-storestreamclob_utf8util.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544111 13f79535-47bb-0310-9956-ffa450edef68"
a6f48ddd697ca81dfcf019f918d28dab897f672c,"DERBY-2604: Implement Clob support for locators

Fixed some bugs found when running JUnit tests with locators
enabled. Simplified handling of length in the reader and the input
stream. Wrapped streams/readers in buffered streams/readers.

Contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544119 13f79535-47bb-0310-9956-ffa450edef68"
8c502aefb141214e2db95acb9ba55b36e504fd55,"Reduced derby.locks.waitTimeout for UpdatableResultSetTest because one
of the test cases gets a lock timeout in an internal transaction
(compilation of a trigger statement). The hang is probably caused by
DERBY-177.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544155 13f79535-47bb-0310-9956-ffa450edef68"
9fd3c00440a4fdd73d932a3d55deca99397d4aae,"DERBY-2740: Set start and stop keys correctly when multi-probing an index that
is defined on more than one column.  Patch also adds appropriate test cases.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544175 13f79535-47bb-0310-9956-ffa450edef68"
353feeeb0f7c737c25e58be9054829df035f0abb,"DERBY-2724
Commiting changes so that the resultant character string from CURRENT ISOLATION, CURRENT_USER, SESSION_USER, SYSTEM_USER, CURRENT SCHEMA 
and CURRENT SQLID will take the collation type of UCS_BASIC.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544180 13f79535-47bb-0310-9956-ffa450edef68"
b34ea45aa837310c49327a85e4079764254cc49c,"DERBY-2751 Compile the java files in test jar dcl_java.jar using jdk14 to allow tests to run on 1.4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544183 13f79535-47bb-0310-9956-ffa450edef68"
f81f61030f7cc671ec239e478b242397dadffc9c,"DERBY-2694: Checkin Anurag's patch to correct the truncation of large utf-8 strings sent over the network.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544195 13f79535-47bb-0310-9956-ffa450edef68"
f949e07fa5dd13007c948606c9ff3e6236a9238f,"DERBY-2753: DDMWriter might swallow unexpected exceptions

Replaced generic ""catch (Exception e)"" clauses with more specific
""catch (UnsupportedEncodingException e)"" clauses.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544403 13f79535-47bb-0310-9956-ffa450edef68"
10b53378604f7ba2f3cdbaf501438c718084d440,"DERBY-2694: Removed unused variable and unused imports in DDMWriter


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544407 13f79535-47bb-0310-9956-ffa450edef68"
394a70e361d54824da8680bbfbf5845b51b46fe4,"DERBY-2646 (partial): Whitespace changes only to EmbedClob. Whitespace changes cluttered the coming patch too much, so I chose to fix them up front. Fixed: Replaced tab with spaces (mostly spaces in file already), deleted empty lines, corrected indentation level (mostly in JavaDoc, but also one method).
Patch file: Not submitted.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544420 13f79535-47bb-0310-9956-ffa450edef68"
faf6742ef38b3fc5b1e094f7e0f612849d4ee305,"DERBY-1519: 'setAsciiStream' uses different encodings for embedded and client. Client changed to use ISO-8859-1 to comply with JDBC and the embedded driver. This change can cause incompatibilities for certain applications (see release notes).
Patch file: derby-1519-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544424 13f79535-47bb-0310-9956-ffa450edef68"
cb2e1a468bef360b2c79ea4473264b12acb5e4a9,"DERBY-2646: Cleanup of Clob control/support structures. Added more tests.
Patch file: derby-2646-05b-tests.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544445 13f79535-47bb-0310-9956-ffa450edef68"
8f00ae5e7c658d299ce261a6ee9832d4b3f10a2e,"Fixed mark-up in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544447 13f79535-47bb-0310-9956-ffa450edef68"
59a2580b28d02a5ebd4fd898bf7cadb841a9d4bf,"Fixed mark-up in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544456 13f79535-47bb-0310-9956-ffa450edef68"
fc6ce840a5088a610a94e74feed048a4d33ec39d,"DERBY-2760: Clean-up issues for UTF8Util.java. Removed unused private method.
Patch file: derby-2760-1a-remove_unused_method.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544463 13f79535-47bb-0310-9956-ffa450edef68"
d3e6a71a87e58832634b94a82abfc33d508c8494,"DERBY-2702: Enable Clob locator support between NetworkServer and NetworkClient

Patch contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544481 13f79535-47bb-0310-9956-ffa450edef68"
45ba22ff795534a5c9f165f31ac4433025785830,"DERBY-2646: Removed redundant checks in constructor and updated the JavaDoc.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544503 13f79535-47bb-0310-9956-ffa450edef68"
475f87e407b97c47b7e77290333d2187ed91c3b5,"DERBY-2459: Ordering on a CASE expression causes NPE when using UNION

When an order by clause involves a CASE-expression, in a situation when
two or more select statements are combined in a union (or union all),
a NullPointerException is thrown.

In the original problem report, the CASE expression included qualified
column references:
   CASE WHEN t2.value IS NOT NULL THEN t2.value ELSE t1.value END 
This is invalid, because the ""t1"" and ""t2"" references are not applicable
to the result of the UNION operator. So an error message should have been
issued for the query from the DERBY-2459 description, due to the qualified
column references.

However, with the current implementation, CASE expressions as a whole are
not allowed in the ORDER BY clause of a *UNION* select. CASE expressions seem
to work correctly for a non-UNION select. I believe that Derby's current
behavior here is too restrictive; I think that there are valid CASE
expressions for a UNION select that *ought* to work (such as those which
use only unqualified column references to valid columns in the UNION's target
list), but the current implementation is lacking.

For the original query posted in the problem description, since the intent
was to order the results of the union by the second column in the union,
a column position expression can be used successfully: ORDER BY 2.

This patch causes Derby to issue a comprehensible error message which
reflects reality accurately, as this is preferable to crashing with an NPE. 

The patch also adds a number of additional ORDER BY test cases to the
ORDER BY test, demonstrating various query constructions, both those which
currently work, and those which currently do not work.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544532 13f79535-47bb-0310-9956-ffa450edef68"
9174d61fb4eb6e6993e20735b12852b7fdb55e0a,"DERBY-2735 Make 28502 exception statement level severity so that IDUtil.getUserAuthorizationId()
can be used anywhere a valid authentication identifier is required. Ensure a non-session level severity
exception during a connection creation failure is handled as a session level severity.
Add testing of invalid authentication identifiers to  SYSCS_GET_USER_ACCESS.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544684 13f79535-47bb-0310-9956-ffa450edef68"
3a09a1902925d89ccf766934c8c5b77c4bc56c04,"DERBY-2735 Remove old UserUtility class and its old test. Has been replaced by
the new procedures SYSCS_SET_USER_ACCESS and SYSCS_GET_USER_ACCESS. Testing is
in the junit jdbcapi.AuthenticationTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544693 13f79535-47bb-0310-9956-ffa450edef68"
126b96c35cdcf8815c999bbf3f8043603bd00d2f,"DERBY-2729 temporary lob file should be cleaned when the transaction or connection is no longer valid. Submitted by  Anurag Shekhar

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544777 13f79535-47bb-0310-9956-ffa450edef68"
a78e683ae83fcbfe2884f999fdeeb75745f5dca4,"DERBY-2646: Cleanup of Clob control/support structures. Added new versions of EmbedClob and ClobStreamControl. This commit enables the code committed earlier for this issue. This is the last major patch, and bugs/remaining work will be handled under separate Jiras.
Patch file: derby-2646-06b-embedclob_clobstreamcontrol.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544814 13f79535-47bb-0310-9956-ffa450edef68"
5bb6623a6844ba1c07c4de56f7bcdfb5ba6301f2,"DERBY-2770: Fixed BlobClob4BlobTest from failing by changing the expected SQLState.
Patch file: derby-2770-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544856 13f79535-47bb-0310-9956-ffa450edef68"
9484ceb26029fbc27951c78cdbe3f7a3d0fc8f68,"DERBY-2768: Do cleanup (closing stmts., conns.) on failures in
jdbcapi/BlobClob4BlobTest.java

jdbcapi/BlobClob4BlobTest.java should cleanup when detecting failures
['fail(""FAIL - ...."");']. When failures occur, as when doing
compatibility testing for Blob/Clob locator support, other failures
will occur later. Missing cleanup makes subsequent tests fail.

Contributed by Ole Solberg.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544861 13f79535-47bb-0310-9956-ffa450edef68"
166e69507be0e677ac0f9343b1c68a192c22c070,"DERBY-2109: Committed Martin's patch which creates the Derby permissions and principal classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544870 13f79535-47bb-0310-9956-ffa450edef68"
3243663a1822c386ab08e5d8fb82365bd789f770,"DERBY-2735 Test that the new routines to get the user's connection access level are restricted to the database owner.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544890 13f79535-47bb-0310-9956-ffa450edef68"
0fe6de65c996f1a433a9a8217c203a075a4fe080,"Updated Mac instructions to include alternate setting for 
compile classpath


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544908 13f79535-47bb-0310-9956-ffa450edef68"
84f4b0ae08506dca2fdd0d48065bb1f11571715f,"DERBY-2757: No longer flunk server boot when authentication is not enabled.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544934 13f79535-47bb-0310-9956-ffa450edef68"
0eff5f730e96387cdda91d95be3daf008c03147f,"Add more to the message associated with an ASSERT to help debug DERBY-2755.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544946 13f79535-47bb-0310-9956-ffa450edef68"
a1d6109b9cd9576d62e4e96c203057d872447492,"DERBY-1620: Minor cleanup to follow svn # 520173, plus a new JUnit test to
verify the behavior fixed with DERBY-1620.

Contributed by: John Peterson (john.peterson@pega.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544974 13f79535-47bb-0310-9956-ffa450edef68"
293a5e65f183efc2502d5d99d51ba4d73e20f4f5,"DERBY-2772 Add system procedure SYSCS_UTIL.SYSCS_EMPTY_STATEMENT_CACHE() that ages statements
out of the cache.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@544993 13f79535-47bb-0310-9956-ffa450edef68"
0e43d78c6c8287d3619da20eb41f466d1507fb9d,"DERBY-2772 Add test to ensure SYSCS_EMPTY_STATEMENT_CACHE procedure is limited to database owner
with sql authorization.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545045 13f79535-47bb-0310-9956-ffa450edef68"
e604a710c19f2eba46871b78efc7a6f86eaf4693,"DERBY-2330 Disallow user-defined routines from calling methods internal to Derby.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545178 13f79535-47bb-0310-9956-ffa450edef68"
d2b4fdb0c09536b2932b618947c40110ee6c94eb,"DERBY-2713: Ensure that a temporary file is not created for a lob
obtained from resultset unless user updates it.

Contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545197 13f79535-47bb-0310-9956-ffa450edef68"
90eecadc6155e73fc82d47d502c19334723e002f,"DERBY-2754 Client connections should not fail if permission is not granted to read derby.client.traceLevel and derby.client.traceDirectory

Ignore properties if there is no permission to read them.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545251 13f79535-47bb-0310-9956-ffa450edef68"
63385d475a9e090a1a4d8246596c0e29bd159c1d,"DERBY-2777
Fixed the combination of IN operator and parameters so that the parameters take their collation from the context and not from the current
compilation schema.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545319 13f79535-47bb-0310-9956-ffa450edef68"
fde4b69afaed294211c0768d1695e077c0ff916a,"DERBY-2758: Update ODBCMetadataGenerator to create an ODBC version of the
getCrossReference metadata query.  This is required because, as of DERBY-2610,
the JDBC version of that query no longer allows pattern matching on table
names.  Since the ODBC SQLForeignKeys function, which is mapped onto the
getCrossReference metadata query, depends on pattern matching for correct
behavior, we now create an ODBC-version of getCrossReference that allows
pattern matching as in pre-10.3 releases.  The SQLForeignKeys function is
then mapped to the new, ODBC-specific version of the query.

Contributed by: Jorgen Loland (jorgen.loland@sun.com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545321 13f79535-47bb-0310-9956-ffa450edef68"
8cf0ef9bd3474566e94166b4fbf1eaebd9a1e118,"DERBY-2777
Fixed the combination of binary operator and parameters so that the parameters take their collation from the context and not from the current
compilation schema. eg ? = TABLENAME


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545323 13f79535-47bb-0310-9956-ffa450edef68"
c6148c9048f186cdb22518a84e45ef67f98c142e,"DERBY-2784 AutoloadedDriver.acceptsURL() does not need the real driver booted to indicate
which URLs it supports.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545329 13f79535-47bb-0310-9956-ffa450edef68"
987f4fd7279133e6db24e70c991fdb8737262a90,"DERBY-1952 Add a check to the AutoloadTest that indicates in a somewhat non-internal way that Derby's
embedded engine was actually booted in not. Will replace the use of internal apis and checking
for a NPE in the jdbc4 version of the test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545332 13f79535-47bb-0310-9956-ffa450edef68"
8c9e99ffb35f49b189a9cc64e1d81900a8115c15,"DERBY-1952 Remove the jdbc4/AutoloadBooting.test as the final JUnit test run as a '.junit' test through
the old harness. Test has been replaced by the generic jdbcapi.AutoloadTest and its siblings.
The variants of the autoload tests are run through the ant junit target as they require a clean jvm.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545334 13f79535-47bb-0310-9956-ffa450edef68"
e9ec32271e360fbeed72726036b0e23b0d97887e,"Cleanup some code related to ValueNode.getSourceResultColumn().
Method can be simply called through ValueNode rather than casting
nodes to an explicit sub-type.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545338 13f79535-47bb-0310-9956-ffa450edef68"
0a29524ef8406c2594d7a08abfb9d0752de42cd4,"DERBY-2777
Fixed the combination of COALESCE and parameters so that the parameters take their collation from the context and not from the current
compilation schema


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545347 13f79535-47bb-0310-9956-ffa450edef68"
ca5edbb87d5d99bd84042023fe735226041a80ec,"DERBY-2264 Committed DERBY-2264-9.* which restricts database owner
powers enforcement to only such cases as when both
derby.database.requireAuthentication and
derby.database.sqlAuthentication are enabled, based on feed-back from
community over upgrading compatibility concerns.

Also fixes an issue with interference between feature checking and hard upgrade.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545370 13f79535-47bb-0310-9956-ffa450edef68"
553cb1d0e8d2c5ad2b42dda2883ff822f3439079,"DERBY-2678
There are some test cases in CollationTest.java which should pass after rule 1b) in DERBY-2678 is fixed. They should all pass but they do 
not because we just check if the 2 sides of the collation operation have same derivation or not and if not, then we throw an exception. But 
for the case where one side has collation derivation of NONE and the other side has IMPLICIT, we should do the collation using the collation 
type of the side that has collation derivation of NONE. Once we fix this, the CollationTest will fail and will need to be fixed. I am adding
comments in CollationTest.java wherever the rule 1b) should apply. Please fix these comments in the test when you are implementing rule 1b)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545381 13f79535-47bb-0310-9956-ffa450edef68"
168a4f8d612476d1dac163126bdf28a5f02cdc28,"DERBY-2777
Fixed the combination of CONCATENATION and parameters so that the parameters take their collation from the context and not from the current
compilation schema




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545443 13f79535-47bb-0310-9956-ffa450edef68"
7fba0e1d92c1e9bfccedc7fba442fdff813307ea,"DERBY-2748 TimeSlice and Socket-Timeout bounds checking wrong

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545454 13f79535-47bb-0310-9956-ffa450edef68"
3d7af4e8139bb9d7aab094b7832e3fd0ccefe7fe,"DERBY-2711: If large blob is updated after InputStream is fetched (using getBinaryStream), the stream continues to point ot old data. Stream will now point to new data.
Patch file: derby-2711v2.diff

Patch contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545495 13f79535-47bb-0310-9956-ffa450edef68"
f302c7851e7a5ea873372c4421901a5109638383,"DERBY-2711: Added missing throw, made variable blob final, misc. JavaDoc/documentation changes.
Patch file: derby-2711-3a-additional.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545501 13f79535-47bb-0310-9956-ffa450edef68"
a469215533e46fd368dbfa68fe5a055cef98b78c,"DERBY-2109: JavaDoc @see-tag fixes.
Patch file: derby-2109-03-javadoc-see-tags.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545514 13f79535-47bb-0310-9956-ffa450edef68"
77b824bff82b9f08a292af4d67a18238fa9dd669,"Clean up some javadoc warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545530 13f79535-47bb-0310-9956-ffa450edef68"
906808e9653c9d5fb929c4e1d062d4cebdd823db,"DERBY-2788 (quick fix) Make acceptsURL return false if the driver has been shutdown.
Quick fix because I think there are some issues with the behaviour of this class.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545553 13f79535-47bb-0310-9956-ffa450edef68"
ef158f22e03f5bca3f7e7adc4dd0242036be7525,"DERBY-2775 (partial) Some cleanup of type handling in ValueNode towards the aime that the
type of a node is defined by getTypeServices() consistently so that sub-classes can override
getTypeServices() and ensure all other code will get the correct type.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545566 13f79535-47bb-0310-9956-ffa450edef68"
9871768fdfe452e1b04cd6c09ee0b41126c6f578,"DERBY-2230 : test added to verify fix of assert thrown in ByteCode Conditional on then/else stack mismatch.
Patch contributed by Mayuresh Nirhali.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545573 13f79535-47bb-0310-9956-ffa450edef68"
81de188489692940b83157307fc0b69214a9eb83,"DERBY-2775 (partial) Remove the setCollation methods from TypeDescriptor as it presents a read-only view
of a type.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545579 13f79535-47bb-0310-9956-ffa450edef68"
1c87333275e24aa2c6813a7fa9130514209bf83e,"DERBY-2777
Fixed the combination of IS NULL and parameters so that the parameters take their collation from the context and not from the current
compilation schema. Also, the earlier checkin for test case of CONCATENATION was incorrect. This commit fixes that too.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545593 13f79535-47bb-0310-9956-ffa450edef68"
32812bde1890bc5a389f8d6b74f329626ffa58a2,"DERBY-2775 (partial) Add getNullabilityType() method to DataTypeDescriptor to return
a DataTypeDescriptor with the nullability changed. Returns the same object if the
nullability would be unchanged.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545609 13f79535-47bb-0310-9956-ffa450edef68"
39885647b9a2e06a964b312d5cf5312fb96d9dcd,"DERBY-2777
Fixed the combination of LENGTH operator and parameters so that the parameters take their collation from the context and not from the current
compilation schema. In fact, it appears that LENGTH operator is not allowed to take a parameter and user would get sql exception 42X36 if
LENGTH was used with a parameter. I have added a test case for that.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545621 13f79535-47bb-0310-9956-ffa450edef68"
c7f7349e88a5b355ce486f3fae7fc2735beb6389,"DERBY-2777
Unary arithmetic operators ""+"",""-"",""SQRT"", ""ABS/ABSVAL"" only take numeric parameters and hence no need to worry about collation information
on parameters to these operators.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545629 13f79535-47bb-0310-9956-ffa450edef68"
07423834868eedda0b69ef8d0ade814461cc3b58,"DERBY-2777
I realized that there are no negative test case for parameter inside XMLSERIALIZE funciton. Adding them as part of this checkin. Parameters
are not supported inside XMLSERIALIZE and that's what the new test cases are checking. No collation involved for parameter inside this
function because parameter inside XMLSERIALIZE will fail at compilation time.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545639 13f79535-47bb-0310-9956-ffa450edef68"
9953d37d190fd3fefa25baa9954254bd89dc545c,"DERBY-2775 (partial) Remove old sanity check in ParameterNode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545663 13f79535-47bb-0310-9956-ffa450edef68"
2dabb854bf71a7c4315bb889ff6fb47e0df1b46e,"DERBY-1355 - ClientDriver ResultSetMetaData.isAutoIncrement(column) now returns appropriate value. 
Patch contributed by Mayuresh Nirhali.
In addition, corrected text to be printed out in case of a failure in one of the test cases in test AIjdbc.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545681 13f79535-47bb-0310-9956-ffa450edef68"
2364fd8e788438e41c510ffb1cd9944fe93742a7,"DERBY-2599
Committing changes explained by following paragraphs

DataTypeDescriptor has a method called getDominantType which compares itself with the DTD passed as parameter to getDominantType and creates a new DTD with the dominant type of the 2 DTDs, But, while doing so, It was not setting the collation information on the new DTD based on the 2 involved DTDs. I have made changes into the method which now will set the correct collation information on the new DTD. The algorithm, as copied from the method javadoc, is as follows 
* If dealing with character string types, then make sure to set the 
* collation info on the dominant type. Following algorithm will be used 
* for dominant DTD's collation determination. Each of the steps of the 
* algorithem have been numbered in the comments below and those same 
* numbers are used in the actual algorithm below so it is easier to 
* understand and maintain. 
* 
* Step 1 
* If the DTD for ""this"" node has the same collation derivation as the 
* otherDTS, then check if their collation types match too. If the 
* collation types match too, then DTD for dominant type will get the same 
* collation derivation and type. 
* 
* Step 2 
* If the collation derivation for DTD for ""this"" node and otherDTS do not 
* match, then check if one of them has the collation derivation of NONE. 
* If that is the case, then dominant DTD will get the collation type and 
* derivation of DTD whose collation derivation is not NONE. 
* 
* Step 3 
* If the collation derivation for DTD for ""this"" node and otherDTS do not 
* match, and none of them have the derivation of NONE then it means that 
* we are dealing with collation derivation of IMPLICIT and EXPLICIT and 
* hence the dominant DTD should get collation derivation of NONE. This is 
* not a possibility in Derby 10.3 because the only 2 possible collation 
* derivation supported are IMPLICIT and NONE. 
* 
* Step 4 
* If the collation derivation for DTD for ""this"" node and otherDTS match, 
* then check if the collation types match too. If not, then the dominant 
* DTD should get collation derivation of NONE. 


Now, note that ValueNodeList has a method called getDominantTypeServices where it could deal with any number of DTDs to determine the dominant DTD. It calls DataTypeDescriptor.getDominantType on 2 DTDs at a time. At the beginning, the 2 DTDs are the first two in it's vector. It gets an intermediate dominantDTS back for those 2 DTDs. Next, it calls DataTypeDescriptor.getDominantType with the intermediate dominantDTS and the 3rd element in it's vector and so on and so forth. It is not enough to just use 2 DTDs at a time to determine the collation info for the final dominantDTS. We need to consider all the DTDs in the vector together to determine the correct collation info for the final dominantDTS. The algorithm used by ValueNodeList.getDominantTypeServices is in that method's javadoc and included here for reference 
* Algorithm for determining collation information 
* This method will check if it is dealing with character string datatypes. 
* If yes, then it will check if all the character string datatypes have 
* the same collation derivation and collation type associated with them. 
* If not, then the resultant DTD from this method will have collation 
* derivation of NONE. If yes, then the resultant DTD from this method will 
* have the same collation derivation and collation type as all the 
* character string datatypes. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545706 13f79535-47bb-0310-9956-ffa450edef68"
0f58b38647e6baaf22b54a6c8738567dbebeb1c2,"DERBY-2777
Make sure that for operators like BOOLEAN, the collation information is picked from the context and not from the current compilation schema.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545708 13f79535-47bb-0310-9956-ffa450edef68"
35cdd9ba4fce2241e81cebe932cf57649b481eb2,"DERBY-2777
Earlier checkins 543266 and 542646 were incorrectly trying to set collation for DATA and TIME DataTypeDescriptors. With this checkin, I am
removing that code. Collation only applies to character string types. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545709 13f79535-47bb-0310-9956-ffa450edef68"
89a444e1589f7230330d049bd2fd27ff497c71bf,"DERBY-2777
ResultColumn was using current compilation schema's collation if there is a parameter involved. Instead, let the parameter pick up it's
collation from it's context.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545712 13f79535-47bb-0310-9956-ffa450edef68"
deed49a7b4f3d5b50efafdf8f4732a90a98dc4fc,"DERBY-2777
ResultSetNode was using current compilation schema's collation if there is a parameter involved. Instead, let the parameter pick up it's
collation from it's context.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545716 13f79535-47bb-0310-9956-ffa450edef68"
2d3034fbf850b8e60ed53c20acabd8d6fff85172,"DERBY-2546 - avoiding running a section of the test that hits a CharConversionException with JSR169 (weme6.1)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545846 13f79535-47bb-0310-9956-ffa450edef68"
3bdf6de70a0fa06e96f73ab16e01960a11c4b864,"DERBY-2758: ODBC metadata function ""SQLForeignKeys"" returns different
results in 10.3.

Added test case. Contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545865 13f79535-47bb-0310-9956-ffa450edef68"
0ce4bbb66a543cbda6c7cd91f6f6e21b77a710c9,"DERBY-2799: Intermittent failure in lang/deadlockMode.java

Fixed problem with ordering of the output. Also added main method to
LangHarnessJavaTest to allow easier testing of a single harness test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545873 13f79535-47bb-0310-9956-ffa450edef68"
855f0de61c129c2cb6b51e6221f161dbc0116e6e,"DERBY-2770: testBlobAfterCommit(....jdbcapi.BlobClob4BlobTest) fails
with 'Unexpected SQL state. expected:<XJ[073]> but was:<XJ[215]>'

Changed error message to reflect that XJ215 is used both after free()
has been called on a Lob and after the lob's transaction has been
committed.

Changed SQL state when locators are invalid from XJ073 to XJ215 on the
client driver.

Patch contributed by √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545910 13f79535-47bb-0310-9956-ffa450edef68"
895501ed6bbee7d18d5d9faaa1e3d2fb14c1ed77,"Close statements used in ProcedureInTriggerTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545916 13f79535-47bb-0310-9956-ffa450edef68"
77549642b82ffb7645cfdfefc2dd551db6aa50a8,"DERBY-2777
MethodCallNode was using current compilation schema's collation if there is a parameter involved. Instead, let the parameter pick up it's
collation from it's context.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@545950 13f79535-47bb-0310-9956-ffa450edef68"
002cd8896dd25bab929e4aa01df5cc128c146716,"DERBY-2777
SetOperatorNode was using current compilation schema's collation if there is a parameter involved. Instead, let the parameter pick up it's
collation from it's context.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546002 13f79535-47bb-0310-9956-ffa450edef68"
aaa63257084256b4f4a39f9d879d8adadb394ee1,"DERBY-2777
StaticMethodCallNode was using current compilation schema's collation if there is a parameter involved. Instead, let the parameter pick up it's
collation from it's context.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546007 13f79535-47bb-0310-9956-ffa450edef68"
6a521504439fe6ca3dc87466ae84328569f14c54,"DERBY-2777
CastNode was using current compilation schema's collation if there is a parameter involved. Instead, let the parameter pick up it's
collation from it's context.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546023 13f79535-47bb-0310-9956-ffa450edef68"
c99cc56d5036b9c0f9011d6974c4448af4864d59,"DERBY-2789: DatabaseMetaData.locatorsUpdateCopy() should return true

Contributed by √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546126 13f79535-47bb-0310-9956-ffa450edef68"
fb3b06097f6ad2a4d0a6537d564921015465c66b,"DERBY-1623: Add support for an ANSI TRIM function as defined in SQL 2003
standard:

  <trim function> ::= TRIM <left paren> <trim operands> <right paren>
  <trim operands> ::= [ [ <trim specification> ] [ <trim character> ]
    FROM ] <trim source>
  <trim source> ::= <character value expression>
  <trim specification> ::= LEADING | TRAILING | BOTH
  <trim character> ::= <character value expression> 

Patch contributed by: Manish Khettry (manish_khettry@yahoo.com) 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546183 13f79535-47bb-0310-9956-ffa450edef68"
0ab3f6e9479eb416ddf5701e83e8f7cf5f2d9b99,"DERBY-2795 Unable to bring up server with SSL peer authentication enabled. Code fix.
Checking sslMode values both on server and client.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546217 13f79535-47bb-0310-9956-ffa450edef68"
c4b18e65a58ead1b0a34bb5afa95988d257ffc62,"DERBY-2758: Add a JUnit test case to the existing JUnit DatabaseMetaDataTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546312 13f79535-47bb-0310-9956-ffa450edef68"
cb8f1093291d0144b3f8090ba6751632f2d97566,"DERBY-2775 (partial) Cleanup of type handling in ColumnDefinitionNode & its sub-class and uses.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546372 13f79535-47bb-0310-9956-ffa450edef68"
ba50299972fc24579ad529a3658ab37373148d06,"DERBY-2800: Implement Clob.truncate for embedded driver. Also added a test.
Patch file: derby-2800v2.diff

Patch contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546404 13f79535-47bb-0310-9956-ffa450edef68"
0ed8291ed7028e3c8a902777a04f22bbd051aa00,"A general code formatting cleanup: Trailing whitespace, lines longer than 80 characters and fixed some outdated JavaDoc descriptions. No functional changes have been made.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546409 13f79535-47bb-0310-9956-ffa450edef68"
03e83ca190178e7ec69f67466947c603ac08eb29,"DERBY-2657: Performance regression after check-in of svn 531971

Fixed regression by making Xact.getDataValueFactory() return the value
of the dataValueFactory field instead of calling
Monitor.findServiceModule().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546440 13f79535-47bb-0310-9956-ffa450edef68"
e4c7740a49f7139c981371120f9b34724c0458bf,"DERBY-2802: LOBStreamControl.replaceBytes can throw null pointer exception while trying to access databytes after calling init.
Patch file: derby-2802.diff

Patch contributed by Anurag Shekhar.
--ThiB line, and those below, will be ignored--

M    LOBStreamControl.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546444 13f79535-47bb-0310-9956-ffa450edef68"
85ddc17f0b3b91d9fd8c66805fc558c2661fd372,"DERBY-2775 (partial) Change AggregateDefinition to use a DataTypeDescritor as the
declared type instead of a TypeDescriptor. Code using the api assumed the object
was a DTD anyway.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546478 13f79535-47bb-0310-9956-ffa450edef68"
32d1091f5d1621d9706cd30d257056f3c18eb038,"DERBY-2726 convert lang/AIjdbc.java to JUnit

Contributed by Ugo Matrangolo



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546644 13f79535-47bb-0310-9956-ffa450edef68"
a0f12c0eeddf818a38a8e3d15ffbe6cfa408de74,"DERBY-1623: Fix javadoc errors caused by svn 546183. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546652 13f79535-47bb-0310-9956-ffa450edef68"
127ff35c9e9a4adf36dc76f4f1997e22da457d6c,"DERBY-2109: Commit Martin's refinement of DatabasePrincipal wildcarding.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546683 13f79535-47bb-0310-9956-ffa450edef68"
503ce75fc71e48365cfd2a49005abe3bbdfcdf93,"DERBY-2272 Added ssl to NetworkServerControl Javadoc

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546771 13f79535-47bb-0310-9956-ffa450edef68"
80424bf69e050341b5a64011d234563d3d97e3eb,"DERBY-2712: If large Clob is updated after getting a Reader, the reader continues to point to old data.
Patch file: derby-2712v3.diff

Patch contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546831 13f79535-47bb-0310-9956-ffa450edef68"
78afc5bc0390fd46afa3934755e1b25affc66175,"DERBY-2730 Embedded method Blob.getBinaryStream. Submitted by V.Narayanan

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546838 13f79535-47bb-0310-9956-ffa450edef68"
5a9d5966ce94f344921879c3580fc63027957931,"DERBY-2274 Implement testing for SSL communication

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546861 13f79535-47bb-0310-9956-ffa450edef68"
83deb879040db85a57a81abb9ffd14998e0f92df,"DERBY-2788: Clarify javadoc header of AutoloadedDriver and clean up some javadoc warnings in another class.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546866 13f79535-47bb-0310-9956-ffa450edef68"
7696c746da9f44d169dcdc6575b2021235348a72,"DERBY-2787 make entry for clob in connection so that temporary file is removed when a connection is closed or transaction is commited/rolledback. Submitted by Anurag Shekhar

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@546881 13f79535-47bb-0310-9956-ffa450edef68"
6e1c9cd23796bd326f65a84b5c7772bdc245281c,"DERBY-700 Derby does not prevent dual boot of database from different
ClassLoaders on Linux



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547042 13f79535-47bb-0310-9956-ffa450edef68"
8a393ceeb9952992bcf5c55046aa99bc1785778f,"DERBY-700 part 2 add ClassLoaderBootTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547046 13f79535-47bb-0310-9956-ffa450edef68"
48ceb6e4e406e2a27547b93fd90f6a4a409a086a,"DERBY-700 backout change pending discussion on StorageFile changes.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547062 13f79535-47bb-0310-9956-ffa450edef68"
cf530d5cf77383c6f181cfe0611b0acbd065b86c,"DERBY-2805: Fix FromVTI to not throw an ASSERT when sort elimination occurs.
In particular this patch does the following:

  1 - Renames the ""markOrderingDependent()"" method and related variables to
      reflect their use, which is to indicate that the optimizer has eliminated
      a sort and thus that the underlying result sets *may* need to make
      adjustments to compensate for the dropped sort.  At the moment the only
      result set node which needs to make such an adjustment is
      IndexRowToBaseRowNode.

  2 - Updates comments where appropriate to more explicitly describe the
      intended use of the ""adjustForSortElimination()"" method (which is
      what ""markOrderingDependent()"" was renamed to).

  3 - Adds a void implementation of ""adjustForSortElimination()"" to the
      FromVTI class since that class doesn't need to make any adjustments.
      This void method is what solves the failure reported in DERBY-2805.

  4 - Adds appropriate test cases to a new fixture in the existing
      lang/SysDiagVTIMappingTest JUnit test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547066 13f79535-47bb-0310-9956-ffa450edef68"
7dca0be5ec5feda2c61c0a814da83a649e973c55,"DERBY-2733: prevent ij with J2ME from encountering a NullPointerException.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547069 13f79535-47bb-0310-9956-ffa450edef68"
6b79c2b55fb5b66573926d81639fc6747a139728,"Added missing license header.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547147 13f79535-47bb-0310-9956-ffa450edef68"
cd727e77c437383a24a447963a8850e038b5d38e,"DERBY-2730 Embedded method Clob.getCharacterStream. Submitted by V.Narayanan

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547203 13f79535-47bb-0310-9956-ffa450edef68"
7fb68b4d094f94013d71c1762314d76aa0281388,"DERBY-2723
The RoutineAliasInfo for user defined function stores the collation infomraiton about it's return type and parameters if they happen to be
character string type. This commit makes sure that for those DTDs, we use the collation of the schema in which the function is getting 
defined. The existing code creates these DTDs at the parse time but the SchemaDescriptor for the function is not available at that stage. To
get around this, at the bind time, we check in CreateAliasNode if we are dealing with any character string types in the function definition.
If yes, then we create new DTDs which are based on the ones created during the parse time, but we set the correct collation informaiton on
them. And then we recreate a new RoutineAliasInfo using the infomration from parse time RoutineAliasInfo and the newly created DTDs. I have
added a CREATE FUNCTION using character string types in CollationTest. Code to use this collation information correctly when the function
gets used inside a sql will go in as a separate patch.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547206 13f79535-47bb-0310-9956-ffa450edef68"
f69e1a28ff750a7cd550363d1e409f44c7ccb60a,"DERBY-2811: Handle special 0.0.0.0 wildcard as host parameter when installing the server's security manager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547230 13f79535-47bb-0310-9956-ffa450edef68"
d6844ab5c6cf0b596add00e080449873716abe51,"DERBY-2604: Implement Clob support for locators

Minor clean-ups. Contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547236 13f79535-47bb-0310-9956-ffa450edef68"
6b5cc244b57ec8de0e3bc4378a41016ac03716ef,"DERBY-2818: Rewrite ClobUpdateableReader constructors. Preparation for DERBY-2806.
Patch file: derby-2818-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547296 13f79535-47bb-0310-9956-ffa450edef68"
c722b36571b0e38e58c36dc88ee41ef48e4ff142,"DERBY-2331 (cleanup) Cleanup some code in the loading mechanism for installed jar files,
mainly adding comments. Add some testing of the order of loading classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547305 13f79535-47bb-0310-9956-ffa450edef68"
31d9b6fb87a3bca8442777527c97d8b6cfa2e214,"DERBY-2331 (testing) Add some more testing of java class loading order from installed jars.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547345 13f79535-47bb-0310-9956-ffa450edef68"
306fdfe7ca7e9211d8d404128c7dd7093b7fe53a,"DERBY-2658 Convert jdbcapi/parameterMetaDataJdbc30.java to JUnit

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547349 13f79535-47bb-0310-9956-ffa450edef68"
27104723bb153b4e32a2b2897ea3d143f4b2a9dc,"Add Apache License header to the helper XML files used for XML testing, and also to the
AnsiTrimTest.java file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547352 13f79535-47bb-0310-9956-ffa450edef68"
a8908bdc39295e1ef7c6d49327cf53f5a6128dce,"DERBY-2763: Commit Narayanan's patch coordinating simultaneous reads and writes to a LOB.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547382 13f79535-47bb-0310-9956-ffa450edef68"
ce145efdaf4b0f0fdeeb1295246c828586b0611c,"DERBY-2715: Fix assertionFailedError in LobStreamsTest and 
  ClobUpdateableReaderTest.
  Patch contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547394 13f79535-47bb-0310-9956-ffa450edef68"
a412791cba9ce4528e632d07ce46e84e8ca2a0d1,"DERBY-2817: Error messages for deadlocks contain less information than
in 10.2

Print the owner of a compatibility space instead of the space object.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547408 13f79535-47bb-0310-9956-ffa450edef68"
f839f5e0846aff81b0df35f8ecd01beda63477a0,"DERBY-2806: Added a position-aware stream that can be repositioned on request. This was needed to support multiplexed operations on Clob, specifically involving streams. The code is isolated to Clobs on top of a stream from store (read-only), with the exception of UTF8Reader which is also used for other Clobs (temporary, modifiable ones).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547422 13f79535-47bb-0310-9956-ffa450edef68"
dbdd270dade901450f35e058adc964290bf62a2e,"update/add license headers in a number of .txt and .java files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547425 13f79535-47bb-0310-9956-ffa450edef68"
fcdce555869756d494c0bca7d1b7e4de159bc551,"DERBY-2823: Rename ClobUpdateableReader to ClobUpdatableReader. Also includes the test class, and all affected classes.
Patch file: derby-2823-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547433 13f79535-47bb-0310-9956-ffa450edef68"
ddb70fe3203e560a3a39cb20a52cf0eac3626a67,"DERBY-2806: Fix a test failure in ClobUpdatableReaderTest (testMultiplexedOperationProblem). The patch also cleans up the tests in general (the diff is so large because I removed a try - finally and had to reindent the block).
Patch file: derby-2806-3a-test_fix_and_cleanup.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547461 13f79535-47bb-0310-9956-ffa450edef68"
872647655e32c30c06183c00105a9905aa0704d8,"DERBY-2811: Use internal variable name for host parameter in default security policy; and handle hostname wildcard ::

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547521 13f79535-47bb-0310-9956-ffa450edef68"
c17e9953eb2cb35fed5828d6645a3b884b63e61e,"DERBY-2811: Remove debug diagnostic introduced by previous checkin.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547527 13f79535-47bb-0310-9956-ffa450edef68"
4b862bf4066df6351ac8c12e9302def857742560,"DERBY-1377 - asf header files for various properties and txt files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547566 13f79535-47bb-0310-9956-ffa450edef68"
f17077e68d4e663c3eec23c07fd398316f084f3d,"DERBY-2658: Convert jdbcapi/parameterMetaDataJdbc30.java to JUnit

Disabled the test in JDBCHarnessJavaTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547567 13f79535-47bb-0310-9956-ffa450edef68"
c9ef071f340b051e924c4b8e647a5c1b3dbc64e0,"DERBY-1377 - 2 more asf license headers in build/source properties files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547571 13f79535-47bb-0310-9956-ffa450edef68"
94ebe10f7e6ce7db1fed69659235126a5a714241,"DERBY-2817: Error messages for deadlocks contain less information than
in 10.2

Fixed printing of XID in lock table dumps on wait timeout.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547640 13f79535-47bb-0310-9956-ffa450edef68"
ebb8b8b54cf218c63abb4358b00dbabeeb4e57b5,"DERBY-2824: Improve error reporting, fix whitespace/formatting issues and replace tabs in UTF8Reader. Replaces the tabs with spaces.
Patch file: derby-2824-1a-tabs_to_spaces.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547653 13f79535-47bb-0310-9956-ffa450edef68"
b0c495f82f9b0c57ce0ae1914ee31242107cdb6a,"DERBY-2827: Rename ClobStreamControl to TemporaryClob. Updated all affected classes.
Patch file: derby-2827-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547657 13f79535-47bb-0310-9956-ffa450edef68"
05524f732a5b25741485b5dcff1881b9f4602bea,"DERBY-2811: For privilege granting, map variants of 0.0.0.0 (like 0.00.000.0) as hostname wildcards too.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547662 13f79535-47bb-0310-9956-ffa450edef68"
cccf5ddad8fcfa582938b6437011e38d2f6c229e,"DERBY-2432: Implement transaction timeout for XA transactions

Contributed by Julius Stroffek.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547674 13f79535-47bb-0310-9956-ffa450edef68"
fe27d9d402f5cb42abea0f869c7a52055726a443,"DERBY-2824: Improve error reporting, fix whitespace/formatting issues and replace tabs in UTF8Reader. Whitespace changes only.
Patch file: derby-2824-2a-whitespace_changes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547694 13f79535-47bb-0310-9956-ffa450edef68"
168957e94bc101b51d2d4fa2413d9430f3f8c7d8,"DERBY-2812: Accessing blob (when it's linked to DVD stream, ie large blob) corrupts stream fetched prior to this access.
Patch file: derby-2812v3.diff

Patch contributed by Anurag Shekhar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547704 13f79535-47bb-0310-9956-ffa450edef68"
d75689021c1ebbbd9f4a83ac861547670c0bc841,"DERBY-1377: add asf license headers to .properties, .subsql, .sql1 and .sql2.
  Adjust masters for affected tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547712 13f79535-47bb-0310-9956-ffa450edef68"
a535ea9049446e065e8efe2521d6db1a735fc731,"DERBY-2830: Rename UpdateableBlobStream to UpdatableBlobStream. Also renames the corresponding test class and all affected classes.
Patch file: derby-2830-1b.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547715 13f79535-47bb-0310-9956-ffa450edef68"
fb8cf6e47b4c6e242abae9193cf3ad24d7c3426f,"Update the javadoc for the jdbc classes to no longer indicate support for JDBC 2.0/JDK 1.2/1.3.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547728 13f79535-47bb-0310-9956-ffa450edef68"
b314297d384d6dbdbf4869efda31fff5a81fe3ef,"DERBY-2377: backing out change to ij.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547734 13f79535-47bb-0310-9956-ffa450edef68"
c33ef39e56abf6a23d4c8ac2848827bb86b439bd,"DERBY-2331 Disable classes in installed jar files from referencing Derby's internal classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547739 13f79535-47bb-0310-9956-ffa450edef68"
89a7369c69fadfb1805aa49caf3fcd5977f43e39,"removing removed masters from bumpversion script


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547775 13f79535-47bb-0310-9956-ffa450edef68"
afc13dada5d4770fcd3b1298113a983807a15509,"bumping version number to 10.4.0.0 alpha


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547808 13f79535-47bb-0310-9956-ffa450edef68"
994a2959604b9a2c50a787e22ddb3323cb5b48ff,"DERBY-2570: Make the release note generator report notes which have badly formatted summaries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547957 13f79535-47bb-0310-9956-ffa450edef68"
3455c754757313a3cdfed9a870e85f93ad70a1f0,"DERBY-2570: adding the JiraConnector. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547965 13f79535-47bb-0310-9956-ffa450edef68"
286c99fcad37ac31b94147351f3029f0d7f854ae,"DERBY-2570: Improve error reporting for release note generator--now it buffers up problems detected while parsing the individual notes. This is better than failing on the first bad note.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547969 13f79535-47bb-0310-9956-ffa450edef68"
2981b19054b3a10e1e8077e57a84a244aa61853f,"DERBY-2570: Create a lint tool which people can use to satisfy themselves that their release notes can be digested by the release note generator.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@547982 13f79535-47bb-0310-9956-ffa450edef68"
920fea5062b4a355fa4ffa6a161bf0ffabc83a44,"DERBY-2607 DatabaseMetaData is not consistent about throwing SqlException when tablename=null

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548251 13f79535-47bb-0310-9956-ffa450edef68"
2a0eb8d87cd92740f3fd65f5d0ab8d5671037ed0,"DERBY-2796 Obscure error messages when using SSL in various combinations

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548301 13f79535-47bb-0310-9956-ffa450edef68"
01ab42f7181c22a2a2deda69dabd07484a9b013d,"DERBY-2331 Add test fixture to DatabaseClassLoaddingTest to test that code in installed jars
cannot call Derby's internal code directly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548424 13f79535-47bb-0310-9956-ffa450edef68"
3a7cee2012d0ed6fb806986edd459d3a59672f12,"DERBY-2570: In the summary section, treat <releaseID/> and <previousReleaseID/> as variables which the ReleaseNotesGenerator substitutes with appropriate values.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548432 13f79535-47bb-0310-9956-ffa450edef68"
5110b31d805560a9a67506114267272ea4feef9a,"DERBY-2658 Convert jdbcapi/parameterMetaDataJdbc30.java to JUnit

Add javadoc and cleanup
Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548442 13f79535-47bb-0310-9956-ffa450edef68"
9db681b9ecb12afa5f4142d0b8f88ae2dd9b2144,"update javadoc comments per Dan's comments in DERBY-700



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548465 13f79535-47bb-0310-9956-ffa450edef68"
7c8805349afb16a50bcc2500b36846744fd27d1e,"DERBY-2829: Write a test which verifies that timeout errors contain
information about the locks involved

Regression tests for DERBY-2817.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548696 13f79535-47bb-0310-9956-ffa450edef68"
628fa8c46f70414c6269ef797788f9ba36bf92c9,"Remove code which handles lang tests with target level 1.4. The
removed code doesn't do anything currently, and it is not needed since
1.4 is the minimum level supported by Derby.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548702 13f79535-47bb-0310-9956-ffa450edef68"
90543a46671a0691cdfd56b2cd59455ff826e411,"Fix various javadoc warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548720 13f79535-47bb-0310-9956-ffa450edef68"
4c14d1b00f233ac57ca4d865fa2839c93a6570c6,"DERBY-2570: Construct nice link text from summary paragraphs which have interesting markup in them.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548781 13f79535-47bb-0310-9956-ffa450edef68"
3233189a04a8029e5ccae6721a25a92651e74577,"DERBY-2809 (cleanup) Rename bind method to bindOperand() in UnaryOperatorNode since that correctly
reflects its role. Change sub-classes to call the node correctly. Move some of the logic from
UnaryOperatorNode.bindOperator() to the actual sub-classes where it logically lives.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@548822 13f79535-47bb-0310-9956-ffa450edef68"
219dc90785bc4f2b7f98afdbc1c43795ccb710dc,"DERBY-2839; adjusting references to no longer existing workingwithderby manual
 and fixing references to pdf documents.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@549267 13f79535-47bb-0310-9956-ffa450edef68"
bec02c52e7666a4a896ac18d02e323e227fbc4ba,"DERBY-2839 item 3; adjusting example source comments to refer to Getting
   Started Manual.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@549279 13f79535-47bb-0310-9956-ffa450edef68"
c0a44909cb0129c7631fc69fc4750b30ef8502de,"DERBY-2839 : item 3, one more reference to Working with derby.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@549288 13f79535-47bb-0310-9956-ffa450edef68"
265ba2fa43a8103b78223278d73e5b463b0ddf4a,"DERBY-1573: Unsafe synchronization in NetworkServerControlImpl

Contributed by Thomas Nielsen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@549412 13f79535-47bb-0310-9956-ffa450edef68"
7695060b98d372c2cbc0da2d1f7094b0d17c65e1,"DERBY-2858: Export exceptions swallow useful information

Link the actual IOException to the SQLException.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@550478 13f79535-47bb-0310-9956-ffa450edef68"
003a313bbcc4b3eb51eb7fdb9c7829bfa90c56e6,"DERBY-2727  convert lang/AggregateClassLoading to JUnit.

Contributed by Ugo Matrangolo



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@550544 13f79535-47bb-0310-9956-ffa450edef68"
7e60c2ab0d6d3b59f6538533a91f22b9647315a1,"DERBY-2867 Convert lang/CharUTF8 test to JUnit

Contributed by Ugo Matrangolo



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@550553 13f79535-47bb-0310-9956-ffa450edef68"
8425c88515e99f866d781d3c8d85c58ba9a1b8fc,"DERBY-2870: iepnegativetests_ES.sql fails: new canon needed?

Added sed script which removes differences in output between different
platforms.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@550794 13f79535-47bb-0310-9956-ffa450edef68"
0049cca5af156326197364d9d5674a4655dbcc3b,"DERBY-2867 Convert lang/CharUTF8 test to JUnit
Remove from LangHarnessJavaTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@550808 13f79535-47bb-0310-9956-ffa450edef68"
402a0033eecb041a50a26169f69f715cb7d1f618,"DERBY-2619; add doc src to src distribution


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@550893 13f79535-47bb-0310-9956-ffa450edef68"
6c9ce644b02df27f6f1d3d6eae8ade44df0af606,"DERBY-2727 backout change to convert AggregateClassLoading.java until IBM 1.5 failures are resolved.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@550950 13f79535-47bb-0310-9956-ffa450edef68"
ed7a4d63db1db0ef4b9ade7945e65e1a7b90b047,"DERBY-2862 ParameterMetaDataJdbc30 fails for weme6.1

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@550990 13f79535-47bb-0310-9956-ffa450edef68"
15ad03d78e807133be3f84e11848b245fc8c82a9,"DERBY-2492, DERBY-1496 remove no longer existing files from build.xml


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551031 13f79535-47bb-0310-9956-ffa450edef68"
d8b9ea30cad4cd867096243be9d3b21f2cd55de0,"DERBY-2776 Internally generated CAST nodes should not pick up the collation of the current schema. In order to implement this, the CAST
nodes generated directly by the user sql (parser) will set a flag on the cast node to indicate that they are externally generated CAST
nodes. During the bind phase of a CAST node, we will check if the node is externally generated. If yes, then we will have it pick up 
the collation of the compilation schema otherwise we will leave the collation unchanged.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551033 13f79535-47bb-0310-9956-ffa450edef68"
923d01d43cbb9c61bb9fe08e1bc6fc58060ce818,"DERBY-2145 Remove LIKE tweak from metadata.properties. Submitted by Thomas Nielsen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551124 13f79535-47bb-0310-9956-ffa450edef68"
c103d7531707f7c0d4f153b70945c81dec80be19,"DERBY-2868: Added missing files to the list of installed jars in
BUILDING.txt, and moved the paragraph below the last section it refers
to.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551150 13f79535-47bb-0310-9956-ffa450edef68"
645c78db39ea12d2092d7c8f3c46bd310f85969b,"Cleanup some unrequired abstract methods in the JDBC drivers. Add a comment to AutoloadedDriver
to clarify some of its behaviour.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551180 13f79535-47bb-0310-9956-ffa450edef68"
e2f08d227fcde3d6fe009660d9076dfb8468edde,"DERBY-2809 (partial) Cleanup the handling of nodes under UnaryOperatorNode to ensure
parameters (nodes requiring type to be set from the context) are handled consistently.
This includes moving logic to the node (UnaryArithmeticOperatorNode) that ""owns"" it rather than having it in the
parent class (UnaryOperatorNode).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551183 13f79535-47bb-0310-9956-ffa450edef68"
172a27766317410dce8b0497af7099a14b068b4d,"replacing key for which I forgot passphrase, with new one. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551374 13f79535-47bb-0310-9956-ffa450edef68"
4622bd17999cdb2f7c31e3e680805b418e5add26,"Fix javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551539 13f79535-47bb-0310-9956-ffa450edef68"
e8e04bf86330ad02810a66f1750ed4efb91b5994,"Cleanp related to the old interface Storable. Now a row is passed around in many cases
as DataValueDescriptor[] hence its contents must be Storable, so no need for casts.
Change BackingStoreHashtable to use DataValueDescriptor[] instead of Object[] to
remove needless casts.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551728 13f79535-47bb-0310-9956-ffa450edef68"
7e0823d51c77c6b4658b4aa48256328fc5826999,"DERBY-2727 Re-commited converion of AggregateClassLoadingTest with version that works
with IBM JVMs by not clearing the context class loader but instead resetting it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551732 13f79535-47bb-0310-9956-ffa450edef68"
b9599450e44e27ca1307e4d6ea3afba8719ed00e,"DERBY-2809 Add test cases for non-boolean unary operators in case expressions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551764 13f79535-47bb-0310-9956-ffa450edef68"
0c33e95ef51af46e1af5719e0d8cd1324089c91c,"Minor cleanup in PrepStmtMetaDataTest and SQLUtilities.
A utility method that takes a Statement obeject should not
close it unless it explicitly states that.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551780 13f79535-47bb-0310-9956-ffa450edef68"
7183159d4f3d8df316a179449f8aa7a82b489471,"DERBY-2831 Creating a function that returns a character string literal inside a schema that doesnot exist should not give
a null pointer exception. This was happening while we were trying to look up the collation. The collation lookup should be
done using the super class's getSchemaDescriptor method.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551793 13f79535-47bb-0310-9956-ffa450edef68"
2279e1ff87b1483ad2a9597073b7f8955905b96a,"DERBY-2145 Fixed EmbedDatabaseMetaData.getFunctionColumns to match the changed numbers of parameters in the query

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551878 13f79535-47bb-0310-9956-ffa450edef68"
23a9af0ac7c8d2e5c19e2ed90464ad59e959fc66,"DERBY-2145 Remove the no more needed PreparedStatement in EmbedDatabaseMetaData.getFunctionColumns()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551882 13f79535-47bb-0310-9956-ffa450edef68"
47efb9bf9250d093f16348dbf00f7fd7a33f3c5d,"DERBY-2878 (partial) Scan protection handle could be cached in BasePage

This patch is the first step towards eliminating the allocation of
protection handles. It adds a method to Page/BasePage called
getProtectionRecordHandle(). This method creates a new record handle
if it hasn't been called before and returns a cached value
otherwise. B2IRowLocking3.lockScan() and lockScanForReclaimSpace()
have been modified to use the new method.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551933 13f79535-47bb-0310-9956-ffa450edef68"
fc7482febb1e22ccba70e7385a9627ff9bdb8915,"Cleanup some language junit tests to use utility methods, close statement objects and
not use fields for statements/connection.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551940 13f79535-47bb-0310-9956-ffa450edef68"
62299081f8fd3a44883e737f06d7f95510be6cc5,"DERBY-2831 
Forgot to enter a test case during 551793 checkin. This commit just creates a function in non-existent database to  ensure 
we don't throw null pointer exception.

 In addition, this commit also makes sure that we associate correct collation information with the character string parameters to procedures when the procedure gets created in CreateAliasNode. We already do this for function but similar work needs to happen for procedures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@551942 13f79535-47bb-0310-9956-ffa450edef68"
d5ce63a76476d92d35470c1e3d4a593fc5b33ecc,"DERBY-2775 (cleanup) Change CastNode to store the type in the facility provided by its
super-class ValueNode, and not store the type twice.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552038 13f79535-47bb-0310-9956-ffa450edef68"
9b3e79eebdac9d700fba440b10ce6b12840845c4,"Remove old test file casting.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552040 13f79535-47bb-0310-9956-ffa450edef68"
8cd67f55fc8f83572acb669d53c204bd9a8e8040,"DERBY-2667: Create more robust junit TestRunner for running derby tests

Added property derby.tests.trace which enables printing of test name
and time spent.

Contributed by Ole Solberg.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552046 13f79535-47bb-0310-9956-ffa450edef68"
857ee8000c84c0801a28c78316c34b88e6178994,"DERBY-2667: Create more robust junit TestRunner for running derby tests

Make FormatableBitSetTest extend BaseTestCase so that it recognizes
the derby.tests.trace property.

Contributed by Ole Solberg.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552047 13f79535-47bb-0310-9956-ffa450edef68"
9bf3e1a49732dd815bdfe7e9a71be623084d66f7,"DERBY-2316 (partial) Convert compatibility/testScript.xml to JUnit

Allow CompatibilityCombinations to run other test suites than the
default (...).junitTests.compatibility.CompatibilitySuite.

Contributed by Ole Solberg.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552051 13f79535-47bb-0310-9956-ffa450edef68"
ac12b1fcf89055e979383e8aa64d614138f70e75,"DERBY-2809 (cleanup) Remove need for specific method indicating a node is a unary +/- with a
parameter node, it can be handled consistently by the method ValueNode.isParameterNode().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552070 13f79535-47bb-0310-9956-ffa450edef68"
23c83d2613bd3caf36fe470560ab4241012aff22,"DERBY-2809 (cleanup) getParameterNode() should be based upon its operand being a parameter
not requiresTypeFromContext as logically they are different concepts (but closely related).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552079 13f79535-47bb-0310-9956-ffa450edef68"
df357b52957054a3493f0ef963e79748b9777014,"DERBY-700 (partial) Update policy files with new required permission



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552210 13f79535-47bb-0310-9956-ffa450edef68"
fd06dfd28e23db0dfb43f057eb10c130164c7748,"DERBY-2885: Wrong connection object used in EmbedConnection.clearLOBMapping()

Check the value of lobHashMap for the correct EmbedConnection, and
don't create a map if none is needed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552282 13f79535-47bb-0310-9956-ffa450edef68"
b576d15dcdc2da65f1b03c51c6b9ed845c57e1a8,"DERBY-2884: CtxStack should only create unmodifiable view once per instance


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552323 13f79535-47bb-0310-9956-ffa450edef68"
9858f6f440777d48f663fc8312c9762533c5e12f,"DERBY-2885 (cleanup)

Some more cleanup of EmbedConnection.clearLOBMapping():
  1) Store the map in a local variable instead of calling
     getlobHMObj() a number of times.
  2) Replace two disjoint if statements with if/else-if + THROWASSERT
     if none of them matches.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552325 13f79535-47bb-0310-9956-ffa450edef68"
5e87471824bfb72b3d4ecd810f487dd4781a79c5,"Fixed broken HTML in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552428 13f79535-47bb-0310-9956-ffa450edef68"
a9dbccec69ae05f29430fac4974e07b0d2ec6d1e,"DERBY-2879

Derby currently requires all the character columns in a table to have the same collation as the collation of the schema in
which the table is getting defined. In order to implement this behavior, CreateTableNods's bind method will check the
collation of it's character columns against the schema's collation and if there is a mismatch, an exception will be thrown.

In addition, this patch does minor cleanup. The string constants for the 2 collation types in Derby were declared in both
StringDataValue.java and Property.java I have removed it from StringDataValue so we don't have duplicate constants.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552531 13f79535-47bb-0310-9956-ffa450edef68"
0631531d7a21dac964ddca29ebdad2b141daa685,"Fixed HTML in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552598 13f79535-47bb-0310-9956-ffa450edef68"
d4cbc63f7e100be4b0868bf8cca8dc2f59af4c63,"DERBY-2871; modifying timeout in test XATransactionTest.
  Patch contributed by Julius Stroffek


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552621 13f79535-47bb-0310-9956-ffa450edef68"
fabdf9387c255f17c7ab657b2c89569892665950,"DERBY-2878 (partial) Scan protection handle could be cached in BasePage

Factor out common code in BTreeScan for unlocking the current scan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552677 13f79535-47bb-0310-9956-ffa450edef68"
1a3795ecb4ecb63f387094e78548406ce8314f90,"Fixed broken HTML in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552696 13f79535-47bb-0310-9956-ffa450edef68"
debc0fc6b0f0e65ada83c79e547978da3d2daf71,"DERBY-2890: Simplify handling of maxPos in UpdatableBlobStream and ClobUpdatableReader


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552702 13f79535-47bb-0310-9956-ffa450edef68"
b80f8aeddb698c527a9b85976dee1183bcd729db,"DERBY-2765

Dan found that Cast Node was using the collation of current schema rather than the compilation schema. This commit fixes that problem.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552908 13f79535-47bb-0310-9956-ffa450edef68"
f3110edeb9c407d00e4302e9376ed2fce4194a39,"Cleanup GrantRevokeTest test
 do not use runSQLCommands and check for thrown exceptions as exceptions are not thrown by the method.
 add some fail() asserts in try catch blocks to ensure that the priviledge was not granted.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552922 13f79535-47bb-0310-9956-ffa450edef68"
ab91c046c2d55d803752f4ac247384ecd3a87baa,"DERBY-2893 Add comments to GrantRevokeTest to indicate why the fail asserts are commented out.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552927 13f79535-47bb-0310-9956-ffa450edef68"
9961d751ccd82ee4b6a2e8e24f93da1edf23f6fd,"DERBY-2874: Improve port-wildcarding for socket permissions involving ipv6 hosts.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552977 13f79535-47bb-0310-9956-ffa450edef68"
5f07346b447d8f3d99296593cbb9933b5732cc25,"Add a decorator that creates a database with terrority collation and switch CollationTest
to use that collator. This then makes CollationTest fit the normal pattern of single 
connection tests that get their JDBC objects from the utility methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@552999 13f79535-47bb-0310-9956-ffa450edef68"
7a840586d7a05d50ab79c6de28d2d7b2236aeb24,"DERBY-2896 (test) Add code to show the bug for DERBY-2896. Change the SQL used in JDBC.dropSchema()
so that it will run successfully in a terrority collated database.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553004 13f79535-47bb-0310-9956-ffa450edef68"
ff2af5c691e91ad40ea4038c7929d1258c0138da,"Remove a couple of old query tree node names where the node class no longer exists.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553006 13f79535-47bb-0310-9956-ffa450edef68"
75f38efc5242c0764ace70d7097829291927f65b,"Allow the class holder code to support a different major/minor version if the class is read in.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553008 13f79535-47bb-0310-9956-ffa450edef68"
b1d6f8e9fc2ea0b6c1988439130d84dcb863aa9a,"DERBY-2871 - revert revision 552621, it causes an intermittent problem.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553028 13f79535-47bb-0310-9956-ffa450edef68"
77603a1ddd62f2036a474a46dd8bfce651df2f99,"DERBY-2689: Deadlock with GenericPreparedStatement

Move logic that closes unused activations out of region synchronized
on the GenericPreparedStatement.

Contributed by Manish Khettry.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553101 13f79535-47bb-0310-9956-ffa450edef68"
5b41e4587c7e65f3637c1ac5cd5bf271c7a916e6,"DERBY-2891: Clob.getCharacterStream(long,long) ignores position
parameter for large (>32k) CLOBs

Fixed hard-coded start position in ClobUpdatableReader's constructor.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553111 13f79535-47bb-0310-9956-ffa450edef68"
227eaef85835ae41b8a6be707100d7ed978aacdb,"Fixed broken HTML in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553180 13f79535-47bb-0310-9956-ffa450edef68"
12f2b05432243a596ff7d6af37428548b09369f3,"DERBY-2793

This method fixes LikeEscapeOperatorNode so that it will check the collation derivation too rather than only checking the
collation type. This fix will make sure that if one side of the LIKE operation has collation derivation of NONE and the
other side has collation derivation of IMPLICIT, then we should throw an exception. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553395 13f79535-47bb-0310-9956-ffa450edef68"
f1224882896b5ad67f5e5c431f3bfa1fffbc3861,"DERBY-2777

Currently, the parameters in LIKE clause always pickup their collation from the compilation schema. That logic is not 
complete. I am fixing that logic here along with addition of some tests.

For the sake of explanation, let me use the following syntax for LIKE clause
receiver LIKE leftOperand ESCAPE rightOperand
With the fix in this patch, if receiver is a parameter, it will set it's collation using following logic
1)check if leftOperand is not a parameter. If yes, then receiver will pick up collation from leftOperand. If not, goto step 2
2)check if rightOperand is not a parameter. If yes, then receiver will pick up collation from rightOperand. If not, goto step 3
3)receiver picks up the collation of the compilation schema because everything in the LIKE clause is ?

Next, if leftOperand is a parameter, it will set it's collation using receiver. By this time, even if receiver is a
parameter, we have set correct collation for receiver and hence leftOperand can simply rely on receiver for correct
collation IF leftOperand is a parameter.

Next, if rightOperand is a parameter, it will set it's collation using receiver. By this time, even if receiver is a
parameter, we have set correct collation for receiver and hence rightOperand can simply rely on receiver for correct
collation IF rightOperand is a parameter.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553557 13f79535-47bb-0310-9956-ffa450edef68"
a8c85c000e54864b1fb41755540163f20c62d77f,"adding testProperties.out back in the list of files to receive a version bump.
  was removed erroneously by me with revision 547808.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553617 13f79535-47bb-0310-9956-ffa450edef68"
8e2ea180ec2c1eece224997e4197dc88dbeac64e,"fixing up javadoc error resulting from revision 551870 - cleanup of test PrepStmtMetaDataTest.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553648 13f79535-47bb-0310-9956-ffa450edef68"
becaaeb93d15634c1e89c2925e3cfd5600bf0e2e,"Fix javadoc error in CollationTest.java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553654 13f79535-47bb-0310-9956-ffa450edef68"
80fc24db2fd118ac3924d66239897a26956ef1b5,"DERBY-2777

A trivial change to CollationTest2 test. Rather than relying on the number of rows in SYSCOLUMNS for the test validity,
I am changing it so that no rows get selected from the LIKE test. This is so that over the time, if we end up changing
the SYSCOLUMNS so that it will have more rows than what we have in the codeline today, we won't have to go and fix the
test. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553703 13f79535-47bb-0310-9956-ffa450edef68"
c613c72576afd34c7a9836bd86fc01cfd57468fd,"Cleanup in LangProcedureTest to use utility methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553717 13f79535-47bb-0310-9956-ffa450edef68"
db9ad0111432d1d88ba9b8e7b39c988bb0a49a63,"DERBY-2777

Currently, the parameters in TRIM clause always pickup their collation from the compilation schema. That logic is not
complete. I am fixing that logic here along with addition of some tests.

For the sake of explanation, let me use the following syntax for TRIM clause
TRIM (leftOperand FROM receiver)
With the fix in this patch, if receiver is a parameter, it will set it's collation using following logic
1)check if leftOperand is not a parameter. If yes, then receiver will pick up collation from leftOperand. If not, goto step 2
2)receiver picks up the collation of the compilation schema because everything in the TRIM clause is ?

Next, if leftOperand is a parameter, it will set it's collation using receiver. By this time, even if receiver is a
parameter, we have set correct collation for receiver and hence leftOperand can simply rely on receiver for correct
collation IF leftOperand is a parameter.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553727 13f79535-47bb-0310-9956-ffa450edef68"
133d0fbee29a8a871cbd38c677963858634af941,"DERBY-2777

TernaryOperatorNode was incorrectly setting up collation for non-character string type. Collation only applies to character
string types. Also, fixed a comment to be more meaningful.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553735 13f79535-47bb-0310-9956-ffa450edef68"
5edac9184306a1a6618181eb51e44965a416633e,"removing doube quote slipped in with revision 525286 which would prevent build 
  of toursdb.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553776 13f79535-47bb-0310-9956-ffa450edef68"
de4d4c5469bb331ee2f1df2ed5052e4d92856f23,"DERBY-2777 

Currently, the parameters in LOCATE clause always pickup their collation from the compilation schema. That logic is not 
complete. I am fixing that logic here along with addition of some tests. 

For the sake of explanation, let me use the following syntax for LOCATE clause 
LOCATE (receiver, leftOperand) 
With the fix in this patch, if receiver is a parameter, it will set it's collation using following logic 
1)check if leftOperand is not a parameter. If yes, then receiver will pick up collation from leftOperand. If not, goto step 2 
2)receiver picks up the collation of the compilation schema because everything in the LOCATE clause is ? 

Next, if leftOperand is a parameter, it will set it's collation using receiver. By this time, even if receiver is a 
parameter, we have set correct collation for receiver and hence leftOperand can simply rely on receiver for correct 
collation IF leftOperand is a parameter. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553784 13f79535-47bb-0310-9956-ffa450edef68"
dcca4df4b3b80932928c1545fc35f23b17654229,"DERBY-2777

No changes required for SUBSTR because SUBSTR has only one character string operand and hence if that character string
operand is a parameter, it's context for collation will be the current compilation schema. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553788 13f79535-47bb-0310-9956-ffa450edef68"
9841c0ddb4950fec9f8c8618f31c72ec68c5df5a,"DERBY-2777

We were incorrectly trying to set collation info on non-character string types. This commit will remove that code.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553793 13f79535-47bb-0310-9956-ffa450edef68"
2e5d7c5f523d0bef2faa917598054feddb5d97ec,"DERBY-2725

If both the character string operands involved in DataTypeDescriptor.comparable() have collation derivation of NONE, then
such 2 DTDs can't be compared. I am adding code to implement that behavior and added a test case for this.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553834 13f79535-47bb-0310-9956-ffa450edef68"
1a74b279eccc1271459aa3286c34ac9e39bd123f,"DERBY-2908: Give default and template policies permission to read the user.dir property in case the customer sets derby.system.home to a . 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553949 13f79535-47bb-0310-9956-ffa450edef68"
442f69671a30e182d1df4b53f3156b30f2a12f17,"DERBY-2907 Close Statement objects opened by utility methods in BaseJDBCTestCase at tearDown time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553994 13f79535-47bb-0310-9956-ffa450edef68"
6e8d910ad76a3dbd0c4ae94ab93d711be7b373ee,"Do not compress tables (SYSDEPENDS) on CleanDatabaseTestSetup.tearDown.
The setUp() method performs the compression to ensure a clean environment
for the decorated tests. The cleanup on shutdown is to ensure any failures
in dropping objects can be easily associated with the tests that created them.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@553997 13f79535-47bb-0310-9956-ffa450edef68"
ba1b7ec2e976da528e496b19edf6f16dcd1f8ff3,"DERBY-2775 (partial) Clarify some type handling for ResultColumn and its expression by making
callers explictly get the expression's type from the expression, rather than having
a method in ResultColumn that doesn't do what it indicates it did.
Make VirtualColumnNode's type just refect its source node.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@554012 13f79535-47bb-0310-9956-ffa450edef68"
a3acaa59bc40aecf7310f8148f33db93d219109b,"Add test for verification of DERBY-255 fix that ResultSet.getString(), ResultSet.getCharacterStream(), ResultSet.getBytes(), and ResultSet.getBinaryStream() do not hold locks after the ResultSet is closed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@554073 13f79535-47bb-0310-9956-ffa450edef68"
afd4b2f10e55de088c6f982181393b27f54e93c8,"Disable LargeDataLocksTest for client until DERBY-2892 is fixed



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@554079 13f79535-47bb-0310-9956-ffa450edef68"
96630371e7c897488bc7fba0adcea55659aa3dfa,"Fix test failure in AutoloadTest on non-JDK 6 virtual machines.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@554397 13f79535-47bb-0310-9956-ffa450edef68"
ed824068e216a52cc696569b80126dd2639eedf9,"DERBY-2775 Cleanup ValueNode.getTypeServices to not throw an exception and cleanup some implementations
of getTypeServices to be clear on what they are returning. Change the language compile code to
use the new immutable method to get a nullable DataTypeDecriptor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@554399 13f79535-47bb-0310-9956-ffa450edef68"
2acb99a2538db9fbe81ee70e425fa9f745f80cbc,"fixing up MessageBuilder; there no longer is a conrefs.dita specific to the ref
  manual.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@554487 13f79535-47bb-0310-9956-ffa450edef68"
ef9ae00ad5dde713c6629582905f5bf7b1489a5b,"Reformat LargeDataLocksTest with spaces.  Accidentally committed with mixed tabs/spaces.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@554710 13f79535-47bb-0310-9956-ffa450edef68"
7dda5d5aa2dac145ea48f8037b48b0b14d2ed1d0,"DERBY-2775 Change ColumnDefinition to have a getType() method and a setNullability() method to move
towards having an immutable DataTypeDescriptor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@554824 13f79535-47bb-0310-9956-ffa450edef68"
ba4b6db69f45c2403141ce8cfc910c199c8ccc9c,"DERBY-2902: can't use Long.MIN_VALUE as the start value for a generated column

When creating a table
    AS IDENTITY (START WITH -9223372036854775808)
fails but
    AS IDENTITY (START WITH -9223372036854775807)
succeeds.

The problem was that the parser was handling the +/- sign separately
from the start value, and was trying to call
Long.parseLong(""9223372036854775808"") and then negate the return value,
which fails because 9223372036854775808 is greater than Long.MAX_VALUE.

The fix is to push the handling of the ""-"" sign into the call to
Long.parseLong(), where it is handled correctly. We have to be careful
not to push the ""+"" sign into parseLong(), though, because it doesn't
accept a leading ""+"" sign, only a leading ""-"" sign.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@554996 13f79535-47bb-0310-9956-ffa450edef68"
2afe5788b24bac9b6b40633dbefc859cb56d7147,"DERBY-2775 Add some comments to the main type classes to indicate their roles:
TypeId Information about the type without specific attributes
TypeDescriptor Catalog type descriptor
DataTypeDescriptor Runtime type descriptor

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555028 13f79535-47bb-0310-9956-ffa450edef68"
4aef9b04e91d22b153899700a3a295b686039a22,"DERBY-716: Commit first increment of VTI work, enabling DDL for table functions and their invocation in simple SELECTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555032 13f79535-47bb-0310-9956-ffa450edef68"
a8347d0d8a0b4c72485af1a8326242ededc9015b,"DERBY-2917 DERBY-2775 Modify creating of system routines to use TypeDescriptors consistently
and not DataTypedDescriptors.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555074 13f79535-47bb-0310-9956-ffa450edef68"
3ce8a04ea3d06403aedfed8c8f9dd5cf60f3b28c,"DERBY-2893 Fix GrantRevokeTest to use correct user for assertInsertPrivilege



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555075 13f79535-47bb-0310-9956-ffa450edef68"
2939b68933baa30cd5770078c7bcc299e6bbfed8,"DERBY-2351: Certain ORDER BY clauses should be rejected as invalid

This change modifies the ORDER BY clause so that it rejects certain
queries as invalid: specifically, queries which:
a) specify the set quantifier DISTINCT,
b) and also contain an ORDER BY clause which refers to a column
or expression which is not in the query result.

The problem with such queries is that we are told to return only
a single instance of the DISTINCT columns, but since the ORDER BY
clause refers to columns which are not in the DISTINCT set, if there
should be multiple candidate rows from which we choose the DISTINCT
result, we don't know which of those rows to use for the ORDER BY
processing.

When the DISTINCT and ORDER BY clauses are in conflict, Derby should
reject the query. This change modifies Derby to do so.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555096 13f79535-47bb-0310-9956-ffa450edef68"
1ea5daccc4cbde2794af171451baf040adc10647,"DERBY-2893 Fix update privileges for testColumnPrivileges test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555137 13f79535-47bb-0310-9956-ffa450edef68"
1350ae21560870aa9782bb971a8640b050d9ba0b,"DERBY-2841 Convert jdbcapi/nullSQLText.java to JUnit

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555319 13f79535-47bb-0310-9956-ffa450edef68"
c3697a9d8b1081060b9353ed30d0c0c9b55865a3,"DERBY-2841 add NullSQLTextTest.java

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555325 13f79535-47bb-0310-9956-ffa450edef68"
9ecae7fb0d2515a6be051c20c49f39db35be99f1,"DERBY-2703

This tests passed running against ibm1.4.2 where it previously had failed
reproducebly.  I am changing the test to always run the test case.  If anyone
see's this test fail in the database metadata call report it.  I am not sure
what change fixed the problem.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555421 13f79535-47bb-0310-9956-ffa450edef68"
acaa764f25a6f1b2b8942b4cd35585ad3f719125,"DERBY-2915 - make test NoConnetionAfterHardUpgrade accept XSLAP or XSLAN errors.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555441 13f79535-47bb-0310-9956-ffa450edef68"
bdd93c5cc499a8098393999a5d97fa0bd0f5dcee,"DERBY-2931

In soft upgrade mode the format id of the new heap format was being written
out along with the old format metadata.  On reboot system would try to read
new format and fail.  Problem was that wrong format id was associated with
the soft upgrade version of the heap conglomerate class (Heap_v10_2.java).

The code change is just changing that format id from 
StoredFormatIds.ACCESS_HEAP_V3_ID to StoredFormatIds.ACCESS_HEAP_V2_ID.  The
rest of the changes is comments in the code and updates to the upgrade test
suite.  The changes to the upgrade suite showed the problem before the fix in
both 10.3 branch and trunk and then passed once the fix was applied.  Adding
those tests actually caused some other tests in the upgrade suite to fail 
which passed previously, and those cases were also fixed by this change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555778 13f79535-47bb-0310-9956-ffa450edef68"
db85ee3a9ebd08409e6cf6d57a116dde2d926d3e,"DERBY-2931 move test case to BasicSetup



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555806 13f79535-47bb-0310-9956-ffa450edef68"
7ff69a30f30c2444596a755af00b7fe8c0e524f7,"Fixed javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555927 13f79535-47bb-0310-9956-ffa450edef68"
6022eddd9dac264a2c58f7e4c0306a3e6e116d3c,"DERBY-2923: Incorrect reading of nullable Blob/Clob columns during
soft upgrade with client/server

Fix contributed by √òystein Gr√∏vlen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555956 13f79535-47bb-0310-9956-ffa450edef68"
ec4692062244299fefcbad10ca7a560aa35f24ed,"DERBY-2932: Connection.createClob() and Connection.createBlob() throw
a procedure not found exception and do not switch to non-locator code
upon soft upgrade

Fix contributed by V. Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@555960 13f79535-47bb-0310-9956-ffa450edef68"
8127e307cc7c8708c54f11a228f47fd2fdcebfe5,"DERBY-2376; a (minor) change in the plugin should cause the version to change.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@556084 13f79535-47bb-0310-9956-ffa450edef68"
f70d617858a883287e74943ffe2aaa0648fe8668,"DERBY-2842: making slightly different output with some jvms accepted by masking.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@556189 13f79535-47bb-0310-9956-ffa450edef68"
ab5516b08bba898f73926fe72c93b91c434f6d92,"DERBY-2918: accepting string 'exported' as valid value for test output


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@556199 13f79535-47bb-0310-9956-ffa450edef68"
298ff5e476642f501af5debdb10d78fc404bb2f3,"DERBY-2936 (partial) Use java.nio.ByteBuffer for buffering in DDMWriter

Wrap the byte array in a java.nio.ByteBuffer and use the utility
methods for encoding primitive types.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@556583 13f79535-47bb-0310-9956-ffa450edef68"
4d416238a7fbc3b3f8d09e3d3d7faeff93ca4fe8,"Fixed javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@556589 13f79535-47bb-0310-9956-ffa450edef68"
504e4296e69eb0bb0b4d67f8a41a43d2489715d9,"DERBY-2941 With 10.2, Closing a resultset after retrieving a large > 32665 bytes value with Network Server does not release locks

Port to 10.4. Verified with 10.2 client running LargeDataLocksTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557032 13f79535-47bb-0310-9956-ffa450edef68"
3237ef57a14244dd9cca654fc5590bad5034ed7d,"Cleanup of some code in the language ResultSet implementations.
Don't store the LCC in each BasicNoPutResultSetImpl as it is available through
the activation. Re-write comments for NoRowsResultSetImpl and make its ""rows"" methods
final where possible to ensure sub-classes don't implement them, since they have no
meaning for a result set that does not return rows.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557290 13f79535-47bb-0310-9956-ffa450edef68"
2d461fa653e8aaab6e0442daf40deb435f57055b,"DERBY-2397 (partial) Remove old unused drop all meta data statements method. Code is never called
and has been copied into the upgrade code for use there.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557301 13f79535-47bb-0310-9956-ffa450edef68"
b1f37df63e31dbffd171d1e238a3a4226d96ff0a,"DERBY-2896

Metadata calls getTables and getUDTs were failing when run from a user schema in a territory based collated database.
The reason for it is that these metadata calls were not getting compiled in SYS schema when they were executed from
a user schema. Metadata calls should always compile in SYS schema no matter what the current schema might be. The
reason getTables was not getting compiled in SYS schema was because we were trying to modify it's metadata sql on
the fly and then were compiling that modified sql in whatever the current schema might be. I have changed the 
metadata sql for getTables in metadata.properties so that we do not need to modify it on the fly anymore. This will
allow getTables to follow the same codepath as other metadata queries which will also ensure that the sql gets
compiled in SYS schema.

As for getUDTs, it was merely a coding bug that we didn't follow the same logic as other metadata queries for it.
I have changed getUDTs implementation to follow the same codepath as other metadata queries.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557334 13f79535-47bb-0310-9956-ffa450edef68"
9fa19f49f77b8ec385012d242638c1c7c6cf9bb6,"DERBY-2518 - adjust junit test ReleaseCompileLocksTest to call appropriate
  methods and report failures where needed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557423 13f79535-47bb-0310-9956-ffa450edef68"
a44271c8f52c23739cdf8b3345a2b28baa3fe117,"DERBY-2518 - remove unnecessary try/catch blocks - JDBC.assertFullResultSet 
  will take care of failing the test if there is different behavior.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557424 13f79535-47bb-0310-9956-ffa450edef68"
9f8e1ebc19375cecf22c1813e0c7dfacdc360dbe,"DERBY-2936: Use java.nio.ByteBuffer for buffering in DDMWriter

Use java.nio.charset.CharsetEncoder instead of String.getBytes() to
encode strings.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557506 13f79535-47bb-0310-9956-ffa450edef68"
bbcc9236ae2f88a79067cc9f3169882b78cb89a7,"DERBY-2878: Scan protection handle could be cached in BasePage

Don't allocate a new RecordHandle and PageKey in unlockScan().

  1) Replaced the field current_scan_pageno (a long) in
     BTreeRowPosition with current_scan_protectionHandle (a
     RecordHandle which is cached in BasePage)

  2) Changed the signature of BTreeLockingPolicy.unlockScan() to take
     a RecordHandle

  3) Removed unused method OpenBTree.makeRecordHandle()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557507 13f79535-47bb-0310-9956-ffa450edef68"
24d0b90160bf2f040da01a8fd129fe640fb31fd3,"DERBY-2935: DDMReader.readLengthAndCodePoint() decodes long integer incorrectly

Use long arithmetic instead of int arithmetic.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557513 13f79535-47bb-0310-9956-ffa450edef68"
197b3d3c387b52faf05d9fd143df41636e5106f5,"This commit has 2 simple fixes (DERBY-2951 which gives assert failure and DERBY-2959 The table will have collation type UCS_BASIC which is different than the collation of the schema TERRITORY_BASED hence this operation is not supported.)

The failure in DERBY-2951 is because in store, we were not using correct format id and hence collation information was not getting written out and read from disk. Added a test case for this in CollationTest.

The failure in DERBY-2959 was because of the bug that we were comparing collation type for non-character types. Collation is only applicable to character types and hence we should check for character types before comparing the collation info. Added a test case for this one too.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557693 13f79535-47bb-0310-9956-ffa450edef68"
27791253ba7569db40e97dafecc5323be97254a9,"DERBY-2955

We used to set the collation type of character string columns in the generate phase rather than the bind phase of create table. But this will cause problem with following query
	CREATE TABLE STAFF9 (EMPNAME CHAR(20),
	CONSTRAINT STAFF9_EMPNAME CHECK (EMPNAME NOT LIKE 'T%'))
For the query above, when run in a territory based db, we need to have the correct collation set in bind phase of create table so that when LIKE is handled in LikeEscapeOperatorNode, we have the correct collation set for EMPNAME otherwise it will throw an exception for 'T%' having collation of territory based and EMPNAME having the default collation of UCS_BASIC. The change in this commit will ensure that character string columns get their collation set early on in the bind phase so when the bind code for LIKE kicks in, we are all set with correct collation information.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@557886 13f79535-47bb-0310-9956-ffa450edef68"
358acf6fc25320e8323b40bf1d4d6ea2b31de2f1,"DERBY-2960

""select"" query failed because we were generating SQLVarchar rather than CollatorSQLVarchar
create table alltypes (c char(10), v varchar(50)); 
insert into alltypes values ('duplicate', 'is duplicated'); 
select substr(c||v, 1, 4), count(*) from alltypes group by substr(c||v, 1, 4) ; 

To fix the problem, I needed to override StringDataValue getNewVarchar() in CollatorSQLVarchar. Without this new method, we were generating SQLVarchar in territory based databased when the collation type was territory based.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@558036 13f79535-47bb-0310-9956-ffa450edef68"
96c3cce8d1e0e2f33e85f24072521842c2b7f5ea,"DERBY-2962 Change functional tests to use casts for System table queries to avoid conversion errors when run with TERRITORY_BASED collation



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@558801 13f79535-47bb-0310-9956-ffa450edef68"
38bd5dedf0d0ae7057ce5b8b3235e9bb2eae265b,"Use DataValueDescriptor[] in RowUtil methods since now a row is always passed to
it as a DataValueDescriptor[].


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@558823 13f79535-47bb-0310-9956-ffa450edef68"
274e189e147e576b837e016a5486c2afd4a83455,"DERBY-2966 

We need to have context set up inside a moveToInsertRow code because that code tries to do DTD.getNull and getNull needs to find RuleBasedCollator which is found by relying on the context. Putting the context fixed the problem.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@559125 13f79535-47bb-0310-9956-ffa450edef68"
efb1bd262641361dd20754a0b4bce13255c55b55,"Minor cleanup in the DRDA code. Remove several methods that are not called.
Remove the JDBC3 version method from EngineConnection as JDBC3 is the minimal supported level now.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@559143 13f79535-47bb-0310-9956-ffa450edef68"
33971ae948af26b46b0baaade4bd4cd28ec818e5,"attempt to show in KEYS that my KEY has been signed


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@559144 13f79535-47bb-0310-9956-ffa450edef68"
bfca21f53c75ee83449a51a3f4ff6bdee1920f1f,"removing old KEY 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@559149 13f79535-47bb-0310-9956-ffa450edef68"
927ad05b123bb9ff5bb83c8e187d492ec523e790,"DERBY-2925 Prevent export from overwriting existing files

Contributed by Ramin Moazeni
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@559169 13f79535-47bb-0310-9956-ffa450edef68"
348065dcc8aff13f7fb51faa25b6c6b62b99e5ef,"DERBY-2963 Extending SocketPermission to all hosts (""*"") in the default policy file
to make server start compatible with pre-10.3 versions which allowed any host to connect
if no security manager was used.
Also added comment that user may want to restrict this permission.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@559436 13f79535-47bb-0310-9956-ffa450edef68"
c53d18addc5645624ebd9f41d34301ca9a7714af,"DERBY-2656 Add some tests with fixed bugs to CollationTest 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@559917 13f79535-47bb-0310-9956-ffa450edef68"
e5072297e5225c8d9a9e7b6ceceabca2f851e9b7,"DERBY-2942 Convert jdbcapi/statementJdbc30.java to JUnit

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@560005 13f79535-47bb-0310-9956-ffa450edef68"
cca81bd98ef393560a8e058f8cbce5f3568a49b1,"release work: adding ChangesFileGenerator, and adding a target into the
  tools/release/build.xml to generate it. Also adds CHANGES.html to be part of 
  the release artifacts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@560061 13f79535-47bb-0310-9956-ffa450edef68"
93b320dcd0ef20ae2ade4b5db7a965dd188a8558,"DERBY-2973

ALTER TABLE MODIFY COLUMN should maintain the collation info when the column being altered is character string type. The changes for this went into as a new method in ModifyColumnNode which gets called during the bind phase.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@560289 13f79535-47bb-0310-9956-ffa450edef68"
81faa101942783ad8e231838edef615bb81c609d,"DERBY-2942 Convert jdbcapi/statementJdbc30.java to JUnit
Fix test failure

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@560299 13f79535-47bb-0310-9956-ffa450edef68"
89ed7a41eb40b5ddcec1565aed63da29d1827a37,"DERBY-2980  (partial) three test failed with 'java.security.AccessControlException
Fix some tests that failed after checkin of DERBY-2925
Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@560424 13f79535-47bb-0310-9956-ffa450edef68"
1198ab7dc890e2d02ca411febc32e409ee8e28c5,"DERBY-2350

Fix XML in triggers by changing code generation to generate different code
in the case of XML of the form when referencing old and new column values.:
XMLPARSE(DOCUMENT
CAST (org.apache.derby.iapi.db.Factory::
getTriggerExecutionContext().getNewRow().
getString(<colPosition>) AS CLOB)
PRESERVE WHITESPACE) 

Also change XML.setValueFromResult() to validate the character stream and
set the xType as appropriate after parsing the stream.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561189 13f79535-47bb-0310-9956-ffa450edef68"
b359ecce871749062f444653f917639f32b08d75,"Remove old incorrect comment in StorageFactoryService about a method setting a db2j property.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561332 13f79535-47bb-0310-9956-ffa450edef68"
d08d1a5bf8d00d1faa9b52671ea0ae6a294f038c,"Minor cleanup in the client code, make some fields non-public and don't use super to
call a method when not required.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561338 13f79535-47bb-0310-9956-ffa450edef68"
5d769a143257b1c97c5538704e6ffaec7adce48a,"DERBY-2793

Collation comparison algorithm for LIKE is incorrect. Rather than duplicating the code in 2 places, I am including a genric method in DataTypeDescriptor which can be called whenever needed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561494 13f79535-47bb-0310-9956-ffa450edef68"
ba2ee2865a090d14e88fa7f84b27b359cdf0ddc3,"Adding comment to the function that was added for DERBY-2793



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561514 13f79535-47bb-0310-9956-ffa450edef68"
a5235f60cf1b12c7fe5d8e622cfd32c28fc90b42,"DERBY-2925  Prevent export from overwriting existing files

Resolve test failures



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561546 13f79535-47bb-0310-9956-ffa450edef68"
49b500980675d7458233304ea5bfc4e403757422,"DERBY-2945  convert lang/primarykey.sql to JUnit

Contributed by Ravinder Reddy



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561621 13f79535-47bb-0310-9956-ffa450edef68"
9355b96c0a40cdf9407feeac1b33061ace14f234,"DERBY-2793

Another commit for comments involved with DTD.compareCollationInfo method. Derby's behavior is a subset of SQL standard when it comes to comparability rules involving collation derivation of IMPLICIT and collation derivation of NONE. The additional comments for the method explains that.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561668 13f79535-47bb-0310-9956-ffa450edef68"
d1fbe3c3578b6f3c4eae1c06257baaf610d9bda7,"In tracing the types of various nodes created by the failing query for DERBY-2937 I saw
that some nodes had types of CHAR(0) which makes no sense. These were NULL constant nodes
where no type attributes were being passed in. Change QueryTreeNode.getNullNode() to
have a DataTypeDescriptor as a parameter and set the type of the constant node to be that type. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561806 13f79535-47bb-0310-9956-ffa450edef68"
8fe956165ad530bc88f85f23c12dc4ca46862843,"DERBY-2937 Add a test case for the error seen in this bug and ensure that when a column reference
is created for an aggregate node that it points to its source.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561860 13f79535-47bb-0310-9956-ffa450edef68"
05c785723f0cbdfa5fd76db5af529937d303e0c8,"DERBY-2945 convert lang/primarykey.sql to JUnit
Remove test from suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@561881 13f79535-47bb-0310-9956-ffa450edef68"
123bb561e092f77bc66cc6a91a02a92e73906f72,"DERBY-2916 Fix wisconsin canon file due to changes that allowed a valid optimization to the plan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@562113 13f79535-47bb-0310-9956-ffa450edef68"
7677e6e6374183261027b8b9305e6354968d9ff7,"DERBY-2962 Change functional tests to use casts for System table queries to avoid conversion errors when run with TERRITORY_BASED collation.

fix miscerrors.sql failure



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@562178 13f79535-47bb-0310-9956-ffa450edef68"
ca2807d4a8ee18dcd7c688316ba96529fc40664b,"DERBY-2750 Convert lang/declareGlobalTempTableJava.java to JUnit

Contributed by Ravinder Reddy



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@562217 13f79535-47bb-0310-9956-ffa450edef68"
b672fd0e29a9e70ebbb228866e628666d41f1a8c,"DERBY-2933 (partial) When network server disconnects due to an I/O Exception it does not always log the exception that caused the error

Committing change for IOExceptions during writeScalarStream().  There also may be exceptions during disconnect of a session when the server shuts down and I left these unlogged.  






git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@562524 13f79535-47bb-0310-9956-ffa450edef68"
5c83d3048c8535f2e73dde2d7c3decea7deb8374,"DERBY-2988: Add max heap memory setting for spawned JVM in junitreport target

This patch was contributed by John Embretsen (John dot Embretsen at Sun dot com)

This change adds a max heap size setting in the junit-core target of the
top-level build.xml file. The setting is:

   maxmemory=""512m""

This eliminates junitreport-related OutOfMemoryErrors.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@562604 13f79535-47bb-0310-9956-ffa450edef68"
3b598ee5981354d1fd49a91c1037c4e2b6bd9dab,"DERBY-2668 At the time of compilation of a comparison operation, if the collation types of the operands do not match, then we should throw a meaningful error message.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@562863 13f79535-47bb-0310-9956-ffa450edef68"
768e56f2080baff1056463694df531cc03c80e0a,"DERBY-2983: Add missing FUNCTION_TYPE column to the ResultSet returned by DatabaseMetaData.getFunctions().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@563172 13f79535-47bb-0310-9956-ffa450edef68"
a9c86b8987c3cbd4ccc039d498d51d6a0dac77cb,"Add test to Collation where = and like are different for TERRITORY_BASED collation vs UCS_BASIC.  For a TERRITORY_BASED collation french database, differences between pre-composed accents such as ""\u00C0"" (A-grave) and combining accents such as ""A\u0300"" (A, combining-grave) should match for = and like. But they do not match for UCS_BASIC. We insert both into a table and search based on equal and like. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@563256 13f79535-47bb-0310-9956-ffa450edef68"
8ffa2f4b520fa82cfbc93933a6d24a3c66a08ea8,"startNetworkServer and stopNetworkServer should allow the user to pass
additional arguments on the command line.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@563340 13f79535-47bb-0310-9956-ffa450edef68"
7008b638dc609a6a73b213fb3a0659458553222f,"Cleanup the setting of constructorTime in BasicNoPutResultSetImpl
implementations to have a single method to set it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@563985 13f79535-47bb-0310-9956-ffa450edef68"
5c2b1a200a4219727871e346d0669cd3b920ff35,"DERBY-2985 In suites.All, certain test orders cause AccessControlException

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564204 13f79535-47bb-0310-9956-ffa450edef68"
d753aef77167ebb6beead4b364db918ad19c1c57,"DERBY-716: DatabaseMetaData for Table Functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564208 13f79535-47bb-0310-9956-ffa450edef68"
985487421d68aa28290e7f03203fdfb7176cf07a,"DERBY-2968 convert lang/renameTable.sql to JUnit

Contributed by Ravinder Reddy



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564323 13f79535-47bb-0310-9956-ffa450edef68"
01b078036f222a4f639f36c09b1daecb8144e6ff,"Fix the comments for DataDictionary.getSchemaDescriptor(UUID,...) to reflect reality.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564376 13f79535-47bb-0310-9956-ffa450edef68"
797dfa4547c2d17d369107d1ef687a963d071f99,"DERBY-2996 iepnegativetests_ES.diff fails with J2ME Foundation

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564667 13f79535-47bb-0310-9956-ffa450edef68"
ea5f4ab78afa617977d137da24264a28cceb0a90,"DERBY-2982: Update STATUS file to reflect the publication of 10.3.1.4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564774 13f79535-47bb-0310-9956-ffa450edef68"
d6e40016c7031bee9dc16a37b0f8026031d125be,"Merge 564783 from 10.3 branch to trunk


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564784 13f79535-47bb-0310-9956-ffa450edef68"
10c172e736925960076cff03e519b5eb8b06ea1d,"Pass the transaction into the getSchemaDescriptor() on a SetSchemaConstantAction.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564790 13f79535-47bb-0310-9956-ffa450edef68"
b77f82ee4afff2f2a6f42b53ac3c08b34b869eeb,"DERBY-2917 Add a method to get a DataTypeDescriptor from a TypeDescriptor

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564791 13f79535-47bb-0310-9956-ffa450edef68"
7dd08d1be72a415212b16dea951d111d45a1bfbe,"DERBY-1734 (partial) Switch to simpler definition of system columns for a number of system tables

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564792 13f79535-47bb-0310-9956-ffa450edef68"
b3691c28d970a0c0f4e070dce09d0fe3780b88d4,"fix a couple javadoc warnings



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564793 13f79535-47bb-0310-9956-ffa450edef68"
c6c266bacd3b7ac0fd5b3ce9438cc24e0b2a0cec,"DERBY-716: Exclude summary row 0 from getFunctionColumns() result for Table Functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@564800 13f79535-47bb-0310-9956-ffa450edef68"
dc38336131841f0d745ebaba8981b3f2802a34b0,"DERBY-1734 Fix incorrect nullability states in SYSSTATEMENTS - error in previous commit for this issue. Caused SystemCatalogTest to fail.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@565902 13f79535-47bb-0310-9956-ffa450edef68"
082459a4252818d4527e083fc22d61f5ae789e36,"DERBY-1734 Change remaining implementations of CatalogRowFacotry to use the cleaner mechanism to build system columns

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@565926 13f79535-47bb-0310-9956-ffa450edef68"
68db840fa2b6a5317bc99b699628fab27e51f0e3,"DERBY-3008 (partial) Create a boolean forCreateTable flag in the CrreateConstraintConstantAction (set at compile time). Activation still has such a field, will be removed in future changes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@565930 13f79535-47bb-0310-9956-ffa450edef68"
96ae6f3a6c2b358fbfc5a0bd1c1c5c4f298bf628,"DERBY-1734 Remove now unused constructors of SystemColumnImpl

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@565933 13f79535-47bb-0310-9956-ffa450edef68"
48d262916bdb086df2c0454929e2c162095f4293,"Minor code cleanup, removing some unused methods/fields.
Making activation private final in some classes.
Related to DERBY-2661


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@565966 13f79535-47bb-0310-9956-ffa450edef68"
f799f50285f739e7d6b71fa56b5d7c9681161553,"DERBY-2906: derbynet.jar & derbytools.jar incorrectly have a META-INF/services/java.sql.Driver entry. All jar build targets now delete the content of the lists directory before creating the jar.
Patch file: derby-2906-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566216 13f79535-47bb-0310-9956-ffa450edef68"
5e32892edd0c8b28d2087b043c2c0036699c3b2a,"DERBY-2986: Fix performance regression for queries involving CASE statements
that have multiple WHEN clauses.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566217 13f79535-47bb-0310-9956-ffa450edef68"
4c2072ebb4c6e3142bea89c14b31b7cb1d010ad7,"DERBY-2986: Add regression test case to lang/CaseExpressionTest.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566235 13f79535-47bb-0310-9956-ffa450edef68"
51f60c64bb642c6a54965042bff164f620b62e46,"Minor cleanup in Index* classes. Remove an unused variable that included creating an unused object, and make a constructor non-public tomatch its use.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566288 13f79535-47bb-0310-9956-ffa450edef68"
50b185ec12891d3d73a6e396e563e906f4030c8a,"fix showResultSet for null values



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566290 13f79535-47bb-0310-9956-ffa450edef68"
4fb75d3fde63651a3a3a5d33aca12ec9d5ec4252,"DERBY-2995  convert lang/renameIndex.sql to JUnit

Contributed by Ravinder Reddy



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566300 13f79535-47bb-0310-9956-ffa450edef68"
b408ff8d0b2eb1e57b6223f0b3b5efe66a018826,"DERBY-1876 Change currentRow in EmbedResultSet to be null if not on current row, otherwise be a reference to the current row of the top-level language result set. Avoids an object allocation per-EmbedResultSet that was never used.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566311 13f79535-47bb-0310-9956-ffa450edef68"
09787898f7454b5ef5084860fce5111d7d55b163,"DERBY-3012 Pass in TransactionController to DataDictionary.getTableDescriptor(String name). Mainly a signature change, more changes needed to use the pass in transaction

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566318 13f79535-47bb-0310-9956-ffa450edef68"
524f03d69fd7fb6034341fea161f76fee9d7581b,"Fix compressTable master file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566353 13f79535-47bb-0310-9956-ffa450edef68"
af2718a803bb67dd56126682997bd256281aab53,"DERBY-3000 - getTables() call with 10.3 causes java.sql.SQLException: The parameter position '8' is out of range. The number of parameters for this prepared statement is '7'.

DERBY-1790 - DatabaseMetaData.getTables() with passed in table type of SYNONYM returns system tables and not SYNONYMS



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566359 13f79535-47bb-0310-9956-ffa450edef68"
8a6cb02a1ce4b7675409f522916a6e73d4c557d6,"DERBY-2900 convert lang\bug5054, lang\bug4356 and lang\bug5052rts to JUnit

Contributed by Ugo Matrangolo



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566376 13f79535-47bb-0310-9956-ffa450edef68"
1b41764b399551820e950f437aeb9bfeb52d28f7,"DERBY-3008 Set forCreateTable state of CreateIndexConstantAction at compile time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566425 13f79535-47bb-0310-9956-ffa450edef68"
9ef4ce8b0f811d3e2439a2767d0e80a6ba6bbeef,"DERBY-2906: Trivial fix replacing a block of code with a method call that does the (in the derbyrunjar target in build.xml).
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566660 13f79535-47bb-0310-9956-ffa450edef68"
caaa5eb8d30d5ba28690028b8d1b7c25c7809911,"DERBY-2900 Remove bug5054 from derbynetmats



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566677 13f79535-47bb-0310-9956-ffa450edef68"
4f278dd37004fb8f3e2b1886d15d4a8f362228ad,"DERBY-3004: Get rid of the finalizer in EmbedResultSet

Moved code from EmbedResultSet.finalize() to EmbedStatement.finalize()
to make allocation and garbage collection of EmbedResultSet objects
cheaper (ResultSets are normally allocated more frequently than
Statements).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566981 13f79535-47bb-0310-9956-ffa450edef68"
dfce41fe945f45cdfd9aace7a13885c744384cfa,"Make javadoc comments visible.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@566987 13f79535-47bb-0310-9956-ffa450edef68"
354870ea2beecabf3476cb39efd8fc56a2ce62f1,"Minor cleanup -remove some unused variables and cleanup imports for some aggregator classes

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@567094 13f79535-47bb-0310-9956-ffa450edef68"
1302ca5cd3f8c53253c006438282a40902ad9379,"DERBY-2981 Convert jdbcapi/prepStamtNull.java to JUnit

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@567126 13f79535-47bb-0310-9956-ffa450edef68"
392f30384778c7ae932745494e0a1cf7ae21e714,"DERBY-2854  Convert jdbc4/TestResultSetMethods.java to JUnit

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@567136 13f79535-47bb-0310-9956-ffa450edef68"
cc30c0c4897709d602ac914ad43e0622b33ac412,"DERBY-2887: NULLS FIRST/LAST for ORDER BY

This change implements the SQL Standard 10.10 Sort Specification List feature:

  <null ordering :== NULLS FIRST | NULLS LAST

The implementation adds a new boolean argument to the DataType.compare()
function to allow control over whether NULL values should be compared
as lower than non-NULL values or as higher. The change also adds code to
the parser to recognize the new syntax, and to pass it to the execution
layer via the compiler data structures.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@567314 13f79535-47bb-0310-9956-ffa450edef68"
27f9fd6030f092e05f16028e347833f23e152300,"DERBY-2961
This commit fixes the ASSERT failure thrown by the SELECT statement in following query
CREATE TABLE T_MAIN1 (ID INT  GENERATED ALWAYS AS IDENTITY PRIMARY KEY, V XML);
INSERT INTO T_MAIN1(V) VALUES NULL;
SELECT ID, XMLSERIALIZE(V AS CLOB), XMLSERIALIZE(V AS CLOB) FROM T_MAIN1 ORDER BY 1;
The SELECT statement was resulting in Assert Failure because the StringDataValue generated for V AS CLOB was not taking collation type into consideration ie it was always generating collation insensitive StringDataValue. I have fixed that problem by passing the current compilation schema's collation type to SqlXmlExecutor which then will get used in determining whether for instance we should generate SQLChar vs CollatorSQLChar. This collation information is required only for character string types.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@567735 13f79535-47bb-0310-9956-ffa450edef68"
a1f00681bf54157ca7ba515b130cd9fbf92568a5,"DERBY-2936 (partial) Use java.nio.ByteBuffer for buffering in DDMWriter

Description of the patch:

  * replaces all occurrences of bytes[xxx] with absolute buffer.get/put methods

  * replaces calls to Arrays.fill() + buffer.position() with calls to
    the existing padBytes() method

  * makes CcsidManager.convertFromUCS2() take a ByteBuffer instead of
    byte array + offset

  * removes the original writeBigDecimal() method and renames
    bigDecimalToPackedDecimalBytes() to writeBigDecimal()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@568039 13f79535-47bb-0310-9956-ffa450edef68"
2dce4aba94feb95d5cc8be7ee82e84d7aa933769,"DERBY-2824: Improved error reporting when encountering invalid encodings and other error situations.
Patch file: derby-2824-3b-improved_error_reporting.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@568086 13f79535-47bb-0310-9956-ffa450edef68"
2957f69a40cd510c4ae44b0323424208b2f85553,"DERBY-2926: Replication: Add a log buffer for log records that should
be shipped to the slave

Contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@568121 13f79535-47bb-0310-9956-ffa450edef68"
954af7751124b1df5783cc5215abb6c8af2f1997,"Fixed typo in JavaDoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@568580 13f79535-47bb-0310-9956-ffa450edef68"
0b25b1ad2d76ca72154fe3b238a5b9d05dd4b10d,"DERBY-2926: Replication: Add a log buffer for log records that should
be shipped to the slave

Simplified code for reallocation of output buffer and prevented
reallocation when the buffer already had the correct size.

Contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@569014 13f79535-47bb-0310-9956-ffa450edef68"
a0adefe5ee51f6c94880d8699fca714dd38aa2e3,"DERBY-2936: Use java.nio.ByteBuffer for buffering in DDMWriter

Removed the bytes field from DDMWriter. Also

  - updated comments which contained references to the old field

  - made endDdm() use ByteBuffer.put(byte[],int,int) instead of
    System.arraycopy()

  - made writeScalarStream() use buffer.array() instead of the old
    field

  - removed unused variables and narrowed the scope of others in
    writeScalarStream()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@569661 13f79535-47bb-0310-9956-ffa450edef68"
37236a2d86e993fce0b9921c025aee3f08fa1fa3,"DERBY-3027
The XML test was failing because the test was not checking for the correct output. This checkin should take care of that problem.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@570003 13f79535-47bb-0310-9956-ffa450edef68"
81507923f5093c4580fe105c925b4b2f6daa0514,"DERBY-2989 Insert into table with constraints fails if the table name is ""indicator"" (or any other SQL keyword)
Patch DERBY-2989-2. Based on original patch contributed by Dmitry Gusev.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@570285 13f79535-47bb-0310-9956-ffa450edef68"
96bae2af7e36eca52707c1f0d1dc60b63498cbe9,"Updated canon for test that failed after check-in of DERBY-2989.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@570328 13f79535-47bb-0310-9956-ffa450edef68"
cfdc68f173b03a926e87e6c6ca7e3abf0fbdcf90,"Fixed the comments for getDominantTypeServices() method in ValueNodeList. The comments were using an example of concatenation operation but concatenation operation does not call this method to find the dominant type of it's 2 operands. Instead, concatenation operator implements it's own simple algorithm in ConcatenationOperatorNode. This is because ConcatenationOperatorNode does not work off of a ValueNodeList. I have reworded the comments for getDominantTypeServices() to describe what is doing.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@570482 13f79535-47bb-0310-9956-ffa450edef68"
d9b61925c09e967ed28443311992b881b487c900,"DERBY-2910 SimpleStringOperatorNode in it's bindExpression method generates a character string CAST if required but does not set the correct collation.

This change changes implicit casts in SimpleStringOperatorNode, ConcatenationOperatorNode, and TernaryOperatorNode to use the current schema collation when doing an implicit cast. Since the SQL Spec had no specific rules for implicit casts, I matched the explicit cast behavior described in 6.1.2 (10).





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@570546 13f79535-47bb-0310-9956-ffa450edef68"
1c0881385de96f5d8fc6558174ea6991217c9924,"DERBY-3016 Replication: Add code that parses a chunk of log records (byte[]) into individual log records

Patch slave_logscan_2. Contributed by Jorgen Loland.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@570589 13f79535-47bb-0310-9956-ffa450edef68"
cb29d72648bebee5311134077f2173f5640a247d,"DERBY-3025: NPE when connecting to database with securityMechanism=8

Use an internal attribute name when passing security mechanism from
the network server to the embedded driver. This prevents confusion if
an embedded connection is established with securityMechanism specified
(in which case the security mechanism should be ignored).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@570663 13f79535-47bb-0310-9956-ffa450edef68"
fff1af0cac1ee83ddef9feab2476d61414c221dd,"DERBY-2906: Fixed spelling error ('unneccesary' -> 'unnecessary').


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@570673 13f79535-47bb-0310-9956-ffa450edef68"
721f89590c0f3edc7baa56ea8cb492ff55f151fa,"DERBY-2911 (partial) Removed unused methods from the CacheManager and
CacheFactory interfaces


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571055 13f79535-47bb-0310-9956-ffa450edef68"
1cf00e6049bb14cf54021503d8b897331aa09717,"DERBY-3034 Address testing todo items in CollationTest.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571208 13f79535-47bb-0310-9956-ffa450edef68"
082bf1367edecc26021dbcb35302975e232818e7,"Add project folder for NetBeans 6

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571312 13f79535-47bb-0310-9956-ffa450edef68"
4756e087e7b2b84851a74ce8eda5e4401bb290a8,"Added README for NetBeans support


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571314 13f79535-47bb-0310-9956-ffa450edef68"
0db6420895341a1b4d0f3f00cd2711ada267a69d,"Ignore the private folder


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571315 13f79535-47bb-0310-9956-ffa450edef68"
83113ee4957a57a0a0dfb4ddf53c6571f36e10ec,"Added project directory for NetBeans 5.5


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571316 13f79535-47bb-0310-9956-ffa450edef68"
c0c33cd39e58403e4b95dc99c6182b5d50c18596,"DERBY-2917 (partial) Move collation derivation to DataTypeDescriptor from TypeDescriptor as it is only a runtime attribute. Derivation has no meaning within a catalog type.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571567 13f79535-47bb-0310-9956-ffa450edef68"
33cf670abe3b70d440d31cbb69559e303134b7be,"Remove dead code from ValueRow and IndexRow that supported formattable

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571568 13f79535-47bb-0310-9956-ffa450edef68"
10dc4fc5d817630a4a5648f901dba10734f8a852,"DERBY-3036

10.4 Codeline should mark data dictionaries at revision 10.4 rather than 10.3. This is in preparation for some upgrade testing from 10.3 to 10.4 release.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571603 13f79535-47bb-0310-9956-ffa450edef68"
baca7855cba2821f6726b30be1f173b8dc4103d7,"DERBY-2917 (partial) Ensure that the type defintion for a table function (MULTISET) writes out catalog types (TypeDescriptor) and not runtime types (DataTypeDescriptor)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571611 13f79535-47bb-0310-9956-ffa450edef68"
6b90f280a7621191e0c393863540784b09087019,"Remove INdexRow/ValueRow from the set of registered classes for format identifiers, since they don't implement Formattable anymore

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@571612 13f79535-47bb-0310-9956-ffa450edef68"
65241d51435a6937ded59b7455d352f16cdb56bb,"DERBY-3042: Remove Java 1.3 specific code in NetworkServerControlImpl.setUpSocket()

Removed the workaround since the network server does not run under
Java 1.3 any more.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572001 13f79535-47bb-0310-9956-ffa450edef68"
c06280c2f625aec21114b48346dbce62800d8c54,"DERBY-3041 (partial) Removed the classes utilMain14 and Main14.

utilMain14.createStatement() was moved to
utilMain. utilMain.setHoldability() and utilMain.getHoldability() were
removed since they serve no purpose now that we don't support Java 1.3.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572058 13f79535-47bb-0310-9956-ffa450edef68"
29e9328b1fdecd759936181693885ab80dcbafd9,"DERBY-3040 
This commit provides a basic framework to do 10.4 upgrade testing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572234 13f79535-47bb-0310-9956-ffa450edef68"
ccf72fbf6c3e989950529cf54675a1aa1bb56840,"DERBY-3041: Removed the createStatement() method in utilMain and
factored out common error checks in operations on scrollable
cursors. These changes also removed workarounds for problems in very
old versions of WebLogic and JCC.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572244 13f79535-47bb-0310-9956-ffa450edef68"
2d1e64efaed4b394f23884f49b5f6c755a58b6c8,"Fixed javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572268 13f79535-47bb-0310-9956-ffa450edef68"
3fac131ff46b5921ca866ba65884a768af2ff1f5,"Fixed typo/incorrect reference (SYSFUC -> SYSFUN).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572346 13f79535-47bb-0310-9956-ffa450edef68"
97c9489e492ff8602b5623ac84dc7a1fb6478369,"Added myself to the list of committers in the STATUS file


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572563 13f79535-47bb-0310-9956-ffa450edef68"
73a34db606620568a330fa447ca4893d8a43eddb,"DERBY-2911 (partial) Added a partial implementation of a buffer
manager using the java.util.concurrent utilities. Only basic
operations to fetch objects from the cache are implemented. For the
other methods there are stubs only. The code is currently disabled.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572645 13f79535-47bb-0310-9956-ffa450edef68"
67e1463d2a8ee1dcc40729dc60225e0b03747b37,"DERBY-2658   Convert jdbcapi/parameterMetaDataJdbc30.java to JUnit

Fix SQLState assertions

Contributed by Ramin Moazeni



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572662 13f79535-47bb-0310-9956-ffa450edef68"
a8544646191546fada0a318e29f1eb171104f7f8,"DERBY-2911 (partial) Implemented CacheManager.values() for ConcurrentCache


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572693 13f79535-47bb-0310-9956-ffa450edef68"
78cb2da6196dc83523fa65e959cc3c2548bda806,"DERBY-3032   Derby
java.lang.ClassCastException returning null from a case statement in subquery



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572738 13f79535-47bb-0310-9956-ffa450edef68"
4ef86215d9ba1ea0ba01046888fd4119f7bd65ea,"DERBY-3049 (partial) Change EmbedResultSet to get a ResultDescription from the activation. Cleanup some ResultSet implementations of getResultDescription()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572753 13f79535-47bb-0310-9956-ffa450edef68"
90e70fe0d20d15e6f9405d5dd51f7ebc8bf1f4a0,"DERBY-2905 (partial) Add test fixtures to test that after an embedded shutdown that no
Derby driver is left registered and that a subsequent load of the embedded driver succeeds.
The assert for no driver left registered is disabled until DERBY-2905 is fixed.
Inspired by Ramin Moazeni's patch v3 attached to the Jira issue.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572822 13f79535-47bb-0310-9956-ffa450edef68"
ea5ca3f8a0ba24e96d993c1b37ab28800bdf7eeb,"DERBY-2946

The character string literals take their collation from the current compilation schema. Derby's metadata queries have lots of comparisons where a character string literal is compared with a character string column from SYS schema. The character string columns from SYS schema have the collation of UCS_BASIC. If the metadata queries get run with user schema as current compilation schema, then the character string constants in metadata queries will get a collation of territory based and this mismatch in collation of character string constants and character string columns will cause the metadata queries to fail. This situation can arise in the current softupgrade code. In softupgrade mode, we do not ensure that the current compilation schema is SYS schema. A simple change in GenericLanguageConnectionContext(GLCC) takes care of that problem. In GLCC, with this checkin, we check if the query being executed is a metadata query and if yes, then we should set the current compilation schema to be SYS schema for that metadata query execution. This takes care of the soft upgrade problem. Outside of soft upgrade mode, we do not have problems with metadata queries because during a normal run/hard upgrade, we go to SYSSTATEMENTS to run metadata queries and that code path ensures that the current compilation schema is SYS schema.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572880 13f79535-47bb-0310-9956-ffa450edef68"
f419481dc4693784a89190f3fe0be3aadd6c7536,"DERBY-2954: Add commands to NetworkServerControl for interacting with
            the replication functionality
Contributed by Narayanan



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572944 13f79535-47bb-0310-9956-ffa450edef68"
4aeada8e82aa1943430659ac7a6101d30a04b4e3,"DERBY-2977: Add the basic code to Derby so that the master controller
            can be booted as a service when a ""startmaster"" command is
            issued to NetworkServerControl 
Contributed by J√∏rgen L√∏land


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572951 13f79535-47bb-0310-9956-ffa450edef68"
e4501308086263ef7ec285df46fc8372c167e2a1,"DERBY-2911 (partial) Implemented CacheManager.shutdown() in ConcurrentCache


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@572953 13f79535-47bb-0310-9956-ffa450edef68"
85fc221dcc56edf92b8d9e9702c79e556e7b7710,"Remove the setup transaction methods from the system test order entry Operations class. This allows the SQL text of the statement to be in-line with the code that uses it, making the logic easier to understand

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@573029 13f79535-47bb-0310-9956-ffa450edef68"
454ea63cc1a64ea90a597d8ba09e8818c075a73d,"Add a class to submit Order Entry business transactions through an Operations class

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@573054 13f79535-47bb-0310-9956-ffa450edef68"
80570d63638be5986c0e593574d356f31f11f4e3,"Fix eol style on Submitter.java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@573055 13f79535-47bb-0310-9956-ffa450edef68"
d5376da5df546d643e61ef202ec4e8d92801a0ee,"Fix some javadoc warnings



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@573102 13f79535-47bb-0310-9956-ffa450edef68"
b5ca246ad0844c280c504d4762642f3c0dfa726b,"DERBY-2911 (partial)
Improved some javadoc comments in the CacheManager interface and made
them match what's actually implemented.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@573196 13f79535-47bb-0310-9956-ffa450edef68"
76c452e52b8bbfbbb6a69f70a2dff10f45adf2f3,"Various improvements in the Order Entry setup, consistent random number handling to match TPC-C spec. Add a option to load the database using multiple threads for the run.Populate class

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@573329 13f79535-47bb-0310-9956-ffa450edef68"
6c3076f6e830a1cf446c72ab402506ee0589c68a,"DERBY-3056; making test run with JSR169, although not exactly testing what test was designed to test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@573418 13f79535-47bb-0310-9956-ffa450edef68"
bf9a1af0380e3fae3d70e16f1716d03c1b026b1f,"DERBY-2151: Fixer-upper utility to help convert ij canon tests to JUnit

This patch modifies SQLToJUnit.java so that it quietly skips entirely
blank lines. Prior to this patch, such lines could cause SQLToJUnit to
throw a NullPointerException. An example of a canon with entirely
blank lines is tests/lang/groupBy.sql.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@573432 13f79535-47bb-0310-9956-ffa450edef68"
c36dd384a4685b09f65a9e470f2354321edab906,"Fix javadoc warning



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@573717 13f79535-47bb-0310-9956-ffa450edef68"
042f338f712b40a0163b34d38ed8eef0e85a51e6,"DERBY-2855 Convert jdbc4/TestConnectionMethods.java to JUnit

Contributed by Ramin Moazeni




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@574053 13f79535-47bb-0310-9956-ffa450edef68"
524a8b4d443b992438d55bf70a809fd690c202b8,"DERBY-716: Add optimizer support for Derby-style Table Functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@574276 13f79535-47bb-0310-9956-ffa450edef68"
72abc725fc5fa36a7f6cb569bf014d7c38d4c936,"DERBY-2972 Update or select with function in the where clause causes with TERRITORY_BASED collation fails with ERROR 42818: Comparisons between 'VARCHAR' and 'VARCHAR' are not supported.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@574590 13f79535-47bb-0310-9956-ffa450edef68"
70f168c9060e1f8d2a1b6deba615450d462c9bec,"DERBY-3061: Fix wrong results regression caused by incorrect sorting of
""probe predicates"" prior to code generation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@574635 13f79535-47bb-0310-9956-ffa450edef68"
035169b3f9354f017339988f1df5c390df32570b,"DERBY-2972 (followup) Change postive lock table test to use parameter markers instead of casts 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@574726 13f79535-47bb-0310-9956-ffa450edef68"
1c70964076b334fb9bce45441371ede599d5891b,"DERBY-3038 SYSCS_IMPORT_TABLE FAILS with No current connection after shutdown/reconnect to encrypted database : 10.3.1.4 regression

Patch DERBY-3038-2, will merge into 10.3 branch too.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@574733 13f79535-47bb-0310-9956-ffa450edef68"
99422a7c886f520e895e8e2c2a6c2410a7766a5d,"DERBY-3060: Network Server incorrectly assumes that all SQLExceptions
            with error code 08004 are caused by an authentication failure.
Contributed by J√∏rgen L√∏land


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@574870 13f79535-47bb-0310-9956-ffa450edef68"
3953c9e55de5856d09e08deecbddad34304b3247,"DERBY-716: Expose VTICosting and VTIEnvironment in Derby's public api.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@574945 13f79535-47bb-0310-9956-ffa450edef68"
faf585861c7f8adfa5ab725d1aad124785533a76,"DERBY-716: Apply UTF8 encoding to Strings created from byte arrays in TableFunctionTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@575060 13f79535-47bb-0310-9956-ffa450edef68"
af27f3c855e8c26e0f4b2cd87a4001b02b4b39b2,"DERBY-3057 - enabling test TableFunctionTest.java to run with j2ME/CDC/JSR169.
- adjusted method equals(Object) in junit.JDBC$GeneratedID to implement
  a similar check for JSR169 as is achieved with String.matches() (which is
  not available with JSR169)
- implemented method BinaryDecimal.setValueFromResultSet() which gets executed
  by the test (also adjusted javadoc referring to non-existing CDCDecimal)
- adjusted test TableFunctionTest to call an appropriate method instead of
  ResultSet.getBigDecimal() (which is not available with JSR169).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@575364 13f79535-47bb-0310-9956-ffa450edef68"
1b6c3f0b313d79df53dbbccad76f5785192c729a,"Add some utility methods for the oe system test framework and implement the submitter logic for the new order transaction

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@575382 13f79535-47bb-0310-9956-ffa450edef68"
183bfa599929ce175d9472e921c0481dc1fada6c,"Fix accidental removal of @return comment in Submitter.java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@575388 13f79535-47bb-0310-9956-ffa450edef68"
1a143fc858421461c9f751d120d4ef80d2005c37,"DERBY-2972 

Fix javadoc warning



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@575426 13f79535-47bb-0310-9956-ffa450edef68"
a0ab25a851caf8c0485b06e8cff5adc0c197574f,"DERBY-2911 (partial) Updated class javadoc for CacheEntry with
information about its different states and how to lock more than one
entry without risking deadlocks.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@575607 13f79535-47bb-0310-9956-ffa450edef68"
c69a3f5f7167273baee207479a7a9a5588b2bb1f,"DERBY-716: Change SQL name of row multi set so that dblook will emit re-playable DDL for table functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@575660 13f79535-47bb-0310-9956-ffa450edef68"
49653bedbdeb78cae88c215e4e94e6223f467fd6,"DERBY-3021: Add a ReplicationSlave controller that will manage
            replication on the slave side
Contributed by J√∏rgen L√∏land


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@575670 13f79535-47bb-0310-9956-ffa450edef68"
0666c6b4274f8f2adf380dab5bb64529fa603a42,"DERBY-3021 (follow-up). Missing update to ErrorCodeTest when error message was changed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@576288 13f79535-47bb-0310-9956-ffa450edef68"
850679f9220ea3edaafa0115192289d842885fa3,"Clean up description of how to build JDBC4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@576482 13f79535-47bb-0310-9956-ffa450edef68"
507841dc926a911abc87248fcaf0a6cb5a761000,"DERBY-3074 Database shutdown exception 08006 throws SQLTransientConnectionException instead of SQLNonTransientConnectionException

DERBY-3075 Client error: 08001 Error connecting to server.. throws SQLTransientConnectionException instead of SQLNonTransientConnectionException




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@576546 13f79535-47bb-0310-9956-ffa450edef68"
c414a36195dc9da3f1c45225145c087b0d7c9dd2,"DERBY-3051: Modify logging subsystem to append log records to the replication buffer when in replication master mode
Contributed by Jorgen Loland


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@576835 13f79535-47bb-0310-9956-ffa450edef68"
137e3a1a58d94125fa27ff25a166cd7b251b7cee,"DERBY-3077 Trying to reconnect with derby client after bringing server down throws SQL Exception 58009 rather than 08XXX exception

Per Knut's suggestion, it changes expected client side errors such as SocketExceptions and IOExceptions to throw 08006 exceptions instead of 58 class exceptions.
DRDA_CONNECTION_TERMINATED
SOCKET_EXCEPTION
COMMUNICATION_ERROR
CONNECTION_FAILED_ON_DEFERRED_RESET
NET_INSUFFICIENT_DATA
NET_LOB_DATA_TOO_LARGE_FOR_JVM

This leaves only protocol exceptions in the 58 class. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@576936 13f79535-47bb-0310-9956-ffa450edef68"
05efdaf90d35828564c5c0f4fdcfc862187188ca,"DERBY-3077 

Fix SQLState in SSLTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@576982 13f79535-47bb-0310-9956-ffa450edef68"
b9d138dc16f4cb25a33e16966d6066c4805a2beb,"Fixed typos, javadoc errors and removed unecessary imports

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@577216 13f79535-47bb-0310-9956-ffa450edef68"
dbc7584c69793a42bf0ec913413d7b7fca4d9e4a,"DERBY-2911 (partial) Implement a buffer manager using java.util.concurrent classes

Changed signatures of ConcurrentCache.findFreeCacheable() and ConcurrentCache.removeEntry().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@577224 13f79535-47bb-0310-9956-ffa450edef68"
b78d88bbeba32ec08178a6d104a9f752a2ca4763,"Removing empty directory added in revision 576835.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@577250 13f79535-47bb-0310-9956-ffa450edef68"
bfde6e09c0b866fad6aa1ef3dc6f182960afb779,"Fixed javadoc marker.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@577716 13f79535-47bb-0310-9956-ffa450edef68"
77323ec8fa2e56dccb2eb72552f3a4d22cb2f30d,"DERBY-2921: Add a network service that connects the master and slave Derby instances. Contributed by Narayanan

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@577731 13f79535-47bb-0310-9956-ffa450edef68"
b0a922f1d4bdb26913408656bea8cbb75cfdff3c,"DERBY-3077 (2nd checkin) Trying to reconnect with derby client after bringing server down throws SQL Exception 58009 rather than 08XXX exception

propogate message changes to all locales.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@577791 13f79535-47bb-0310-9956-ffa450edef68"
df17cb0418910337b992ea435ba0f9a31062c861,"DERBY-2911 (partial) Implement a buffer manager using java.util.concurrent classes

Remove entries from the cache if a failure occurs while setting the
identity of the Cacheable.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@578006 13f79535-47bb-0310-9956-ffa450edef68"
4769df5a915d9f72e29c40afca12c5d6fc2db4e6,"Fixed Class javadoc

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@578082 13f79535-47bb-0310-9956-ffa450edef68"
e9ff7be535d758ee807be2831e8131ba0ded3c2b,"DERBY-716: Prevent table function creation after soft-upgrade, verify with a regression test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@578452 13f79535-47bb-0310-9956-ffa450edef68"
4d3f22c4c9a6c7e5177cd98a23d2ab49b4444737,"Needs ant.jar in tools/java when using NB6

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@578761 13f79535-47bb-0310-9956-ffa450edef68"
1f050ca7c305140546fd89a2282552a700ec4326,"DERBY-716: Change error message emitted when we disallow table functions at soft-upgrade time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@578822 13f79535-47bb-0310-9956-ffa450edef68"
73d44eb0224976eee2dc607fd0263a5410c77114,"DERBY-3082 - modify verification pattern in DataSourceTest to accept negative
   values for the hashcode string; this is what gets generated on iseries.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@578942 13f79535-47bb-0310-9956-ffa450edef68"
c2624ec3f50cb0d0fed8115c9acd2d138c1c631b,"Adding myself to the list of committers

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@579211 13f79535-47bb-0310-9956-ffa450edef68"
10b43853c65658d5d0dc049393ecb485a703977d,"DERBY-2939: Log file is flushed every time a log buffer gets full
Contributed by J√∏rgen L√∏land


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@579511 13f79535-47bb-0310-9956-ffa450edef68"
7b398e919fc8415cd7ee672860071635fe213df3,"DERBY-3069: Support varargs in user code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@579653 13f79535-47bb-0310-9956-ffa450edef68"
15007f612b11b8f565d4d1193bc4dec3d6897327,"Adding my public key

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@579699 13f79535-47bb-0310-9956-ffa450edef68"
2278311d76a3ed920d5b7c7fdf23249445ece5b5,"DERBY-3081 cannot create instance of generated class because of java.lang.VerifyError in 4 tests on iseries
Change ansiTrim argument from 
- mb.upCast(leftInterfaceType);
to
+ mb.cast(leftInterfaceType);

to properly cast the argument to StringDataValue. Essentially what we were ending up with in the generated code was this:

  public Object e2()
        throws StandardException, Exception
    {
        ConcatableDataValue concatabledatavalue = ((StringDataValue)getColumnFromRow(2, 2)).substring(getDataValueFactory().getDataValue(1, null), getDataValueFactory().getDataValue(1, null), e3, 16);
        e3 = concatabledatavalue;
        StringDataValue stringdatavalue = ((StringDataValue)getColumnFromRow(2, 2)).ansiTrim(2, concatabledatavalue, e2);
....

So we were passing a ConcatableDataValue instead of a StringDataValue to ansiTrim. Changing from upCast to cast forces the cast so that ansiTrim gets called.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@579781 13f79535-47bb-0310-9956-ffa450edef68"
778e733f014c98b452e0d98183e72cbb83444f24,"DERBY-3055 - workaround a jvm issue by not running runBulkInsert test with J2ME/JSR169.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@579848 13f79535-47bb-0310-9956-ffa450edef68"
44305f705d33dccfd4a86c790ee69f2447added4,"DERBY-3082 - (afterthought) in case there ever really is a mismatch, would be nice to get the output and expected format printed out with the assert.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@579853 13f79535-47bb-0310-9956-ffa450edef68"
7a816cbddf56ea3035b218e918d68fa25c1980ff,"DERBY-2911 (partial) Implement a buffer manager using java.util.concurrent classes

Added replacement algorithm in the new buffer manager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@580252 13f79535-47bb-0310-9956-ffa450edef68"
788599fc06cc693c8c193e96465e54b6ab9ab0cc,"DERBY-3085 Fails to handle BLOB fields with a PreparedStatement with size >32750 bytes

Store a reference to the stream for the streamed parameter in the DRDAStatement.paramState and then drain the stream after statement execution if needed. There is only one parameter ever streamed, so only one field needed to be added. I added a test for both BLOB's and CLOB's to Blob4ClobTest.java.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581012 13f79535-47bb-0310-9956-ffa450edef68"
a1d8de84a92c6f0a06d23f2de3c85b6c1f03a41e,"Add fork=""yes"" when propertyconfig is run in derby.jar target.
This is needed for buildjars target to run in NetBeans 6.0 due to
some security manager stuff.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581520 13f79535-47bb-0310-9956-ffa450edef68"
eeeece4b5f6a1530bdf686ac3495875ca9843e8b,"DERBY-3064: Implement the LogShipper that will enable the shipping of Log records from the master to the slave
Contributed by Narayanan

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581534 13f79535-47bb-0310-9956-ffa450edef68"
d0a804ec93516c95adaa364516a8c55bef082caa,"DERBY-3099: Fixed cleanup code in T_RawStoreFactory.P042() so that it
doesn't hide the actual error and make the test hang for an hour. Also
removed an unused variable.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581544 13f79535-47bb-0310-9956-ffa450edef68"
a1c99065f63fe26d965529830124b64238bcf71e,"Fixed javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581614 13f79535-47bb-0310-9956-ffa450edef68"
16b9059c61ce31b7cde269db07717268515442e8,"DERBY-3100: java.lang.NumberFormatException in test lang.TableFunctionTest

Use locale-sensitive number parsing with NumberFormat instead of
Double.parseDouble().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581704 13f79535-47bb-0310-9956-ffa450edef68"
8d5293ad5a6fd977286c63b977c6d1daa5f657af,"Remove source=1.4 from engine javadocs, as engine classes may use JDK 1.5
syntax now. javadoc for the engine now needs to be built using JDK 1.5
or higher compiler.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581776 13f79535-47bb-0310-9956-ffa450edef68"
48152c29b26574030f0fdbed0e8a3445891a2b07,"DERBY-2824: Improve error reporting, fix whitespace/formatting issues and replace tabs in UTF8Reader. This commit fixes and improves the JavaDoc.
Patch file: derby-2824-4a-javadoc.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581934 13f79535-47bb-0310-9956-ffa450edef68"
9247f313449c367d8b0b6927b3157cec0c781ee0,"DERBY-3033: NullPointerExceptions with flattening of NOT EXISTS subqueries

This patch modifies the behavior of queries which contain correlated
subqueries using a NOT EXISTS predicate. For example:

   select ... from a, b where <join criteria> 
       and not exists (select from c where c.col = b.col)

Depending on various conditions, subqueries may be ""flattened"", which is
a term used to describe an internal rewriting process in which the
subquery is converted into a same-level join with the parent tables.

For many types of queries, such flattening results in multiple tables
equijoined together, and the optimizer may recognize, via transitive
closure of the equijoin predicates, additional opportunities for join
predicates.

However, when a NOT EXISTS table is in the join's from list, join
predicates that mention the NOT EXISTS table cannot be used for such
transitive closure, because these are not equijoin predicates, they
are equi-NON-join predicates: the join succeeds when there are NOT
matching rows in that table.

Prior to this change, Derby might incorrectly infer an equijoin predicate
in such a situation, which could lead to wrong results, or to crashes
during query execution when the join processing attempted to access the
non-existing rows. This change modifies the PredicateList processing to
note when a join predicate includes a NOT EXISTS table, and to omit
that join predicate from transitive closure processing.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581943 13f79535-47bb-0310-9956-ffa450edef68"
6c248652acfd21744108f15c930a5e80f350b5b3,"DERBY-1931: Derby JAR files should be grouped as a single library in Package Explorer
Contributed by Aaron Tarter



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@581971 13f79535-47bb-0310-9956-ffa450edef68"
832361ae764921076026f7a36c57ccdc23e25653,"Add ibm16.java for IBM JDK 1.6



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@582567 13f79535-47bb-0310-9956-ffa450edef68"
f89f5c65f608fe573d72cf7b6d5df0141be94308,"Fixed class name in header.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@582625 13f79535-47bb-0310-9956-ffa450edef68"
5bf56162d2c9d7dcb861a5660c0ad53fa12996fa,"DERBY-957: Long passed into an exception gets displayed using locale specific formatting. i18n/locale issue

Check the SQLSTATE of expected exceptions instead of printing the message.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@582733 13f79535-47bb-0310-9956-ffa450edef68"
7814db2cf87d946e4a568cc178f54c21b7ef134b,"Removed unused imports and fixed an ambiguous method-call (null without cast). The call works okay now because we compile with Java 1.4, but an error will be thrown if compiled with/against Java SE 6.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@582834 13f79535-47bb-0310-9956-ffa450edef68"
94abb7f704bd3ba9e98ae00fbd85d5a574381ce8,"Record recent votes in STATUS file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@582859 13f79535-47bb-0310-9956-ffa450edef68"
0b7569e7cd428bf39df1097888fee7e3ac0f1f63,"DERBY-3026: remove deprecated frameworks directory, scripts, and text file 
  patch contributed by John H. Embretsen


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@583324 13f79535-47bb-0310-9956-ffa450edef68"
67dd207008cf40df7bad1b2d31fa35c10b698896,"DERBY-3026; really remove the frameworks dir and DEPRECATED file


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@583336 13f79535-47bb-0310-9956-ffa450edef68"
1309add84f562f4485b5e8b43cf9374159696bc6,"DERBY-3099: Pages not freed on rollback to savepoint

Ensured that slotFieldSize and slotEntrySize are properly initialized
before StoredPage.initSpace() is called.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@583691 13f79535-47bb-0310-9956-ffa450edef68"
30e531794c4144e8d38b789e4448c2213531d221,"Fixed javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@583823 13f79535-47bb-0310-9956-ffa450edef68"
c7a1a7ee3e2d09487191efafc1d348a98d315487,"DERBY-3117: Require a Java 5 (or higher) compiler to build Derby.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@583824 13f79535-47bb-0310-9956-ffa450edef68"
4177c4f3ecd82a918f00e9290500ff025ab16a3e,"DERBY-3122: Remove dead code in Clob


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@583921 13f79535-47bb-0310-9956-ffa450edef68"
8b66ba7bc3441a1bd984436b207e622658cce5a0,"DERBY-3079: Database name is printed twice in derby.log on rollbacks when logStatementText is enabled.
Patch file: derby-3079-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584051 13f79535-47bb-0310-9956-ffa450edef68"
7c490a6263f5a6a2c61be003a5e8b934a1843398,"DERBY-3113: Use Arrays.fill() in StoredPage.clearSection()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584093 13f79535-47bb-0310-9956-ffa450edef68"
db31b6082343c81a68aa396965a9f040a44b542d,"DERBY-3123: Style sheet (CSS) references in demo HTML files are incorrect

Fix contributed by John H. Embretsen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584104 13f79535-47bb-0310-9956-ffa450edef68"
0438d2b56a141f012ed90ba489ec713dd2212192,"DERBY-3013 column-definition WITH DEFAULT should accept CURRENT_USER, SESSION_USER in addition to USER

Patch DERBY-3013.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584249 13f79535-47bb-0310-9956-ffa450edef68"
da0b88f069c582388b1d5647314d0ecb7bea6e5b,"DERBY-3107: Client: Clob.free() needs to tell server to release locator. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584717 13f79535-47bb-0310-9956-ffa450edef68"
7ecfe407eeef70e46c3435d94b5d0b5e032525ec,"Fixed broken html tag in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584718 13f79535-47bb-0310-9956-ffa450edef68"
305269aa6875a61c1d530823f85da2b8035ef181,"DERBY-3073 SQL roles: add parser support

Patch DERBY-3073c. This patch adds support for roles to the parser, plus tests for the
new syntax.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584738 13f79535-47bb-0310-9956-ffa450edef68"
d779ab17bf56db13e962ce000a9032bf8db01516,"DERBY-3003: ArrayInputStream.skipBytes() may throw EOFException which
is disallowed by java.io.DataInput

Fix contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584773 13f79535-47bb-0310-9956-ffa450edef68"
f6973263d492a7a4e59cb4aac26e105b227766ed,"DERBY-3098: If allowed by transaction isolation level, release locks whenn [BC]lob.free() is called.

This changes the following files:
M      java/engine/org/apache/derby/impl/jdbc/EmbedClob.java
Only initialize storeStream once.

M      java/engine/org/apache/derby/impl/store/raw/data/OverflowInputStream.java
Do not lock for entire duration anymore, but until corresponding
BaseContainerHandle has been closed.  Also, make sure that locking
only happens once.

M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/BlobTest.java
Add tests to test locking of Blob after free() for different isolation
levels.  Also, moved code from setUp that is only relevant to one test
case to that specific test case.

M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbc4/ClobTest.java
Add tests to test locking of Blob after free() for different isolation
levels.  Also, moved code from setUp that is only relevant to one test
case to that specific test case.

M      java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/BlobClob4BlobTest.java
Test that locks on Blob/Clob are released when transaction commits.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584777 13f79535-47bb-0310-9956-ffa450edef68"
b773e48c924e97d5ced8b82033c45505823c1921,"DERBY-3126 nserting BigDecimal value in PreparedStatement with setBigDecimal into double column loses fractional digits

Get scale and precision from BigDecimal data value.  Adjust scale to zero for BigDecimal with negative scale.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584815 13f79535-47bb-0310-9956-ffa450edef68"
0bace1aa9b50c036f3ba5d1ae4218e5317748f24,"Test for DERBY-2576 createDatabase and shutdownDatabase for ConnectionPoolDataSource, XADataSource



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@584930 13f79535-47bb-0310-9956-ffa450edef68"
6a317f01d0d43503f50748c96559505b795019dc,"DERBY-2911 (partial) Implement a buffer manager using
java.util.concurrent classes

Changed the replacement algorithm so that the cache will never grow if
there is an unused entry that can be reused.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@585060 13f79535-47bb-0310-9956-ffa450edef68"
f148f1f5c9f48f5323dc70a81a9423c5ba71e727,"DERBY-2967

Commiting the patch (DERBY2967_Oct11_07_diff.txt) attached to DERBY-2967. The implementation of LIKE for UCS_BASIC and territory based character string types do not differ much(based on SQL standard as explained in comments to 
this Jira entry). I have been able to change the existing code for LIKE (in Like.java) for UCS_BASIC character strings to support territory based character strings. The existing method in Like.java now gets a new parameter and it is RuleBasedCollator. For UCS_BASIC strings, this will be passed as NULL. We check if the RuleBasedCollator is NULL and if so then we do simple one character equality check for non-metacharacters in pattern and correspnding characters in value string. But if RuleBasedCollator is not NULL, then we use it to get collation element(s) for one character at a time for non-metacharacters in patterns and corresponding characters in value string and do the collation element(s) comparison to establish equality. 

In addition to the above mentioned change in Like.java, I have changed the callers of the method in Like.java to pass correct value for the RuleBasedCollator. 

Additionally, I have added a test to CollationTest.java for the code changes. Existing like tests in CollationTest2.java were very useful in the testing of my changes. And lastly, I changed few of the existing tests to use different character string values so that when we run the full collation tests, we do not see some of the test failures which are genuine because of the nature of their data. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@585261 13f79535-47bb-0310-9956-ffa450edef68"
cd2b901b79a8805f665ea6ddd6bddf8f481fdeca,"DERBY-2979; fix IllegalArgumentException in system test mailjdbc.
  Patch contributed by Manjula Kutty


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@585297 13f79535-47bb-0310-9956-ffa450edef68"
2d3677b5ee095b756ee3369e8f3fc03df673b80d,"DERBY-716: Datatype tests and fix to collation of string columns returned by table functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@585710 13f79535-47bb-0310-9956-ffa450edef68"
5235dfd278f116ddf38a84e3c0337108a8603454,"DERBY-2977 (Contributed by Jorgen Loland): Fixes a problem with the way log is appended to the repliation buffer. Previously, LogToFile#appendLogRecord was used to write log to the replication master log buffer. However, the LogAccessFile class that wraps write operations to log file also write checksums. We need these checksums at the slave because without them, the log instants on the slave and master will differ, in turn making recovery impossible (undo operations refer to a specific instant, which will not be correct).

With this patch, log is appended to the repliation log buffer in LogAccessFile, not LogToFile like now. The patch modifies the following files:

M java/engine/org/apache/derby/impl/services/replication/buffer/LogBufferElement.java
M java/engine/org/apache/derby/impl/services/replication/buffer/ReplicationLogBuffer.java

The buffer now accepts chunks of log records from LogAccessFile#writeToLog (i.e., appended to replication buffer in the same method that writes the log to disk) instead of single log records from LogToFile#appendLogRecord

M java/engine/org/apache/derby/impl/services/replication/slave/ReplicationLogScan.java

Modified the slave-side log parser to read the new chunk of log record format

M java/engine/org/apache/derby/impl/services/replication/master/MasterController.java
M java/engine/org/apache/derby/iapi/services/replication/master/MasterFactory.java

Modified appendLog signature to accept log from LogAccessFile instead of from LogToFile

M java/engine/org/apache/derby/impl/store/raw/log/LogAccessFile.java

Can be set inReplicationMasterMode, in which log is appended to MasterFactory

M java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java

Removed the code that appends log to replication log buffer, and tells LogAccessFile to go into replication master mode when needed. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@585900 13f79535-47bb-0310-9956-ffa450edef68"
479bbb70517fafa6ac7754f2499dc792f1d0bb34,"Fixing javadoc errors. This is for DERBY-2967



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586033 13f79535-47bb-0310-9956-ffa450edef68"
7906a282c279d3151b343b1d29e062f9dc6204bd,"DERBY-3126 omit negative scale testing for jdk 1.4.2



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586049 13f79535-47bb-0310-9956-ffa450edef68"
254492261d6c947593b90d1ef97cbdaf0fd3a0da,"DERBY-857 LDAP Does not work under security manager.

Wrap InitialDirContext and debug tracing in privilege blocks. Disable debug tracing if an exception occurs.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586052 13f79535-47bb-0310-9956-ffa450edef68"
36659bbfb42828674faabb55320d124eab4eb746,"DERBY-3135
Committing patch derby-3135-01-jsr169numerics-aa.diff generated by Rick. This patch enforces the expectation that Derby will call getString() when reading DECIMAL/NUMERIC columns from a table function. Thanks for the patch, Rick.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586265 13f79535-47bb-0310-9956-ffa450edef68"
e24d8efb35a3a2a30a69c60dba6b23e117d6bd86,"DERBY-3132: Added @deprecated javadoc tag to implementations of
deprecated methods


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586313 13f79535-47bb-0310-9956-ffa450edef68"
129b07657e8112c8a1e58bc7d35bfb0cc77d3620,"DERBY-3132: Changed some calls to deprecated methods

  Properties.save(OutputStream, String)
        -> Properties.store(OutputStream, String)

  URLDecoder.decode(String) -> URLDecoder.decode(String, String)

  ResultSet.getBigDecimal(int, int) -> ResultSet.getBigDecimal(int)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586317 13f79535-47bb-0310-9956-ffa450edef68"
53d64978a748e4e7e7ac4b580a7aaa01bd4c0f2a,"DERBY-3046

This commit fixes the null pointer exception by making sure that we do not try to access the object's elements if the object is null. I have also added a test case for this fix. 

Additionally, while working on this, I found that we return different sql state for parameter being out of range for PreparedStatment.setObject and Preparedstatement.setXXX calls in Network Server. I have entered a Jira entry for that issue DERBY-3139.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586596 13f79535-47bb-0310-9956-ffa450edef68"
9c68d5445470eb6b22336c2027906b62ede294a3,"DERBY-857 Inline FileOutputStream privilege block. Fix javadoc warning



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586599 13f79535-47bb-0310-9956-ffa450edef68"
952a1a04d5e68c6412c46242d58c6787acbe8123,"Fixed class name in header.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586904 13f79535-47bb-0310-9956-ffa450edef68"
98d82d9eb0f7fe85b3aefb5d2ebe2d4396846b58,"DERBY-3093: Intermittent transaction failure caused by internal duplicate savepoint name for triggers

Don't use hashCode() to generate unique savepoint name.

Contributed by James F. Adams.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@586956 13f79535-47bb-0310-9956-ffa450edef68"
554be499985f02aa1cd629892e66f729798ac012,"DERBY-2065 Network and embedded difference in SQLSTATE and message when Connection.close() with open transaction

Patch derby-2065_1. As a result of this patch
SQLState.LANG_INVALID_TRANSACTION_STATE and the testsing framework's
equivalent SQLStateConstants.INVALID_TRANSACTION_STATE_NO_SUBCLASS are
now unused, but I leave them declared since the constant 25000 is defined
in the standard and may find some future use.

Patch committed by Jorgen Loland.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587040 13f79535-47bb-0310-9956-ffa450edef68"
efd17a12388125ff4cc44a9ac7f8ad955aa669e9,"DERBY-974: ClientDriver can lose some connection properties

Use Properties.propertyNames() instead of Properties.keys().
Contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587056 13f79535-47bb-0310-9956-ffa450edef68"
ffb9d0cc7153c51633cb312b00f1f617a277c093,"DERBY-3140 InListMultiProbeTest creates 30000 DataRow objects that do not get released during suites.All run

Null out foreignIdToRowsMap in teardown()



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587138 13f79535-47bb-0310-9956-ffa450edef68"
3bbcfabe84523e52d417a1f18db917e834a6a114,"DERBY-3138: Fix for this bug is to use the correct overload of accept() during preprocessing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587230 13f79535-47bb-0310-9956-ffa450edef68"
32b1a7480e821d8591e20aa9e0291b20c9250c9f,"DERBY-3073 SQL roles: add parser support

Patch DERBY-3073-part-2. Check role ids max 30 long, string allowed for SET ROLE.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587458 13f79535-47bb-0310-9956-ffa450edef68"
83ce7fb7afa13905f810e588363cb8b061cf5116,"DERBY-716: Add test verifying correct behavior of table functions in subqueries with correlated references to outer query blocks.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587491 13f79535-47bb-0310-9956-ffa450edef68"
7d788ea691bc70ddc02a1afb22a0e18e95392e7d,"DERBY-3054 

The non-junit test, synonym.sql, tests the synonym dependency. The particular test case 2 views dependent on it. 
Depending on the jvm being used, the 2 exceptions(with same sql state but different object dependency in the sql
message text) thrown for dependency might be in different order and that causes test failure. In order to fix this,
I have carved out that test from synonym.sql into a new junit test and since in junit test, we can simply assert
the sql state, the order of 2 exceptions does not matter. I will migrate this fix into Derby 10.3 soon.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587553 13f79535-47bb-0310-9956-ffa450edef68"
b7ecfd929dd3bb1e769e4f746b645121b62af53b,"DERBY-3129: Demo code for table functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587652 13f79535-47bb-0310-9956-ffa450edef68"
7dc887ca28b00336e4019c3fd5e192824cb7658a,"DERBY-3129: Fix build problems introduced by previous submission.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587905 13f79535-47bb-0310-9956-ffa450edef68"
744f7966d933d080964765b1f240c58faa8ddf6c,"DERBY-3088 (partial); remove the version number test in jdbcapi/metadata* 
    as it's already tested in junit test jdbcapi/DatabaseMetadata.java.
    Removed metadata masters from list of files to be updated during release
    generation process.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587953 13f79535-47bb-0310-9956-ffa450edef68"
9096e2124f8e7ca34be7fa64e09e2fe59890c63e,"DERBY-3145 Master updates



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@587961 13f79535-47bb-0310-9956-ffa450edef68"
d0edfdc81d6c19f223be5c09ecc0182ec48faa01,"DERBY-3136

Cut down on unnecessary String and CollationElementIterator objects creation in Like.java class by changing the way
we compare the character in value string vs character in the pattern string. 

When working with database with UCS_BASIC collation, the 2 characters should be the same otherwise we will return 
FALSE. 

When working with territory based collation, if the 2 characters are the same, then we can simply return TRUE 
because their collation elements will have to be same. But if the 2 characters are not same, then use the 
RuleBasedCollator for the territory to see if those 2 different characters match (ie they have same collation 
element(s) corresponding to them).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588147 13f79535-47bb-0310-9956-ffa450edef68"
f69564397068c648e09343f7025fd4332d9227e1,"Utilized generics to avoid the unchecked operation warnings.
Should be okay to use Java 5.0 code here, as the package private tests are optional to run. This is a preparation step for making build targets for compiling and running the package private tests.
Patch file: n/a



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588161 13f79535-47bb-0310-9956-ffa450edef68"
3c099fa0230d1cc229416c01588b700d9f192a69,"DERBY-3093: Intermittent transaction failure caused by internal duplicate savepoint name for triggers

Use LanguageConnectionContext.getUniqueSavepointName() to get a name
that is unique within the transaction instead of a globally unique
name. This removes a global synchronization point.

Contributed by James F. Adams.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588202 13f79535-47bb-0310-9956-ffa450edef68"
f69021c1ff1f98f4b8ecc0795c9b1e54ebccc1b4,"DERBY-3071 (Contributed by Jorgen Loland):: 
1. LogToFile is put in slave mode automatically during boot (if property SlaveFactory.SLAVE_MODE is set), 
    but a method is needed to take LogToFile out of recovery mode.
2. SlaveFactory will receive log records from the master and use LogToFile#appendLogRecord to write these to disk. While in 
    slave mode, only SlaveFactory will be allowed to append log records.
3. The thread running LogToFile#recover will recover (redo) one log file at a time (like now), but will not be allowed to open a 
    log file X until that file is no longer being written to. Thus, while appenLogFile writes to logX.dat, recover will be allowed to        read all log files up to and including logX-1.dat but will then have to wait until appendLogRecord starts writing to logX+1.dat.
4.  adds a method initializeSlaveReplication that sets up the log file so that log records received from the master can be applied     to the slave log files. In a normal bootup of a database, the log file is initialized in LogToFile.recover() after the redo loop. 
    That is too late for the slave functionality to work since the recovery thread will get stuck in that redo loop for the duration
    of the slave mode.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588210 13f79535-47bb-0310-9956-ffa450edef68"
2bbaf40f6fda25b7c68be6690bfa1595216ee397,"DERBY-3150 Add some testing of user identifier casing for JDBC connection requests including two commented out cases that fail.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588304 13f79535-47bb-0310-9956-ffa450edef68"
3b5204b3d0ae25c45ef44051a1279091b4784999,"Add testing of DatabaseMetaData.getUserName() with various user names to AuthenticationTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588312 13f79535-47bb-0310-9956-ffa450edef68"
4ee3a2323fecdaf304a78025a8120728d8b42a3f,"Add some clarification as to how user/passwords are set up for the junit builtin authentication utility method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588313 13f79535-47bb-0310-9956-ffa450edef68"
c806fce61dadac319992338243b698e65fbb160f,"DERBY-2903 (partial); add junit test to test all options of sysinfo -cp.
   This should then replace the brief old harness test that was in demo.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588322 13f79535-47bb-0310-9956-ffa450edef68"
7a127763dfb9bdcdbfc10845ceae38ff67419f4b,"DERBY-2903 - removing demo/RunClassPathTester and masters.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588327 13f79535-47bb-0310-9956-ffa450edef68"
7d4ca19c1d1894cc7d1d1c0bd5f97d9d476922ce,"DERBY-1670: Check in Felix jar file so that osgi support is always built.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588375 13f79535-47bb-0310-9956-ffa450edef68"
6870e87f9435ebd64a6a6194bd8371dcd5df45b4,"DERBY-3147 (partial) Remove unused code that allowed lower-casing for SQL identifiers in the system catalogs. Derby's identifiers are always upper cased.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588385 13f79535-47bb-0310-9956-ffa450edef68"
31ad846c4545e30a2ed3f536f6dfc23b80a06ca7,"Minor improvements in OE test framework.
  - Add a Submitter that executes using multiple threads
  - Add a clear counts method to the Submitter and when reporting only print transaction counts for those transactions that were executed.
  - Fix same bug in Standard transaction implementation for payment and order status by name where the incorrect customer was selected.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588389 13f79535-47bb-0310-9956-ffa450edef68"
7bee3c6ab4463359844f1336947f121373a9a0e3,"DERBY-3046
This commit will ensure that setObject returns the same exception in both Network Server and Embedded WHEN the 
PreparedStatement has no parameters associated with it at all. Without the changes that are going in this commit,
following sql will return different exceptions in Embedded and Network Server (this test case is copied from 
derbynet.PrepareStatementTest). 

ps = prepareStatement(""insert into WISH_LIST(WISH_ITEM) values ('bb')""); 
ps.setObject(1,""cc"",java.sql.Types.VARCHAR); 

ps.setObject in Embedded will throw SQL State 07009 whereas in Network Server, it will throw SQL State XCL13. 
As part of this commit, in the example case above, we will always throw SQL State 07009 in both Embedded and 
Network Server. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588527 13f79535-47bb-0310-9956-ffa450edef68"
3db1716ba04a9d2982a349813c16a79400ed8d2a,"DERBY-1670 Netbeans 6.0 project file changed to incorporate felix.jar

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588632 13f79535-47bb-0310-9956-ffa450edef68"
64e8bd342f91fb0ddb7ff9299cb10b04ff8c761f,"DERBY-3148: Fix JUnit test code that searches for Xalan version to
avoid ""Malformed \uxxxx encoding"" errors when the user's classpath
has ""\u.."" in it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588698 13f79535-47bb-0310-9956-ffa450edef68"
1be0ead57dd2a0bfa5e7ccf7fb64038f9c6091ca,"DERBY-3152 - commenting out test added for DERBY-2903


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588765 13f79535-47bb-0310-9956-ffa450edef68"
03f03b633b55ca3e70b9f4b042395eec30a7d083,"DERBY-3147 (partial) Remove unused code to support lower-case regular identifiers from the language connection context code and the parser.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588788 13f79535-47bb-0310-9956-ffa450edef68"
73bff1b93ad7665fc0ed7dd2740d2c489e86b537,"Allow derbyTesting.oldReleasePath to be set as an ant property (e.g. in ant.properties) and then be picked up when the tests are run through ant.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@588789 13f79535-47bb-0310-9956-ffa450edef68"
c1c16e15182c40c6741b28ba31bb04c9b6c8a86b,"DERBY-3117: Move compiler-level check to buildsource target so that junit tests will continue to run under the ant harness on jdk1.4 and j2me.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589624 13f79535-47bb-0310-9956-ffa450edef68"
499aca3436675f905f8f8312c00eb6dc24fba492,"DERBY-1670 Netbeans 6.0 project file changed to incorporate felix.jar (Fixed a typo)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589635 13f79535-47bb-0310-9956-ffa450edef68"
0fd9a50e508b4884afe72c04f0a83b3047254602,"DERBY-3147 Add some comments to ParseId.java to clarify behaviour

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589712 13f79535-47bb-0310-9956-ffa450edef68"
90676624ee7ce51ac9548f4e118023db52105195,"DERBY-3147 Remove some unused lower identifier casing code, clarify some methods in IDUtil by renaming them. Add some tests for duplicates in the read only and full access lists as database properties.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589749 13f79535-47bb-0310-9956-ffa450edef68"
057ae4605eaa6f9534842b9ab85128accf323b05,"DERBY-3119: Commit James Adams patch for resolving functions which return the Java object versions of the primitive datatypes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589766 13f79535-47bb-0310-9956-ffa450edef68"
7206fbcb6413901d1483d5af9129bdca76a42c49,"DERBY-3147 Add some tests for duplicates in the read only and full access lists as database properties.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589796 13f79535-47bb-0310-9956-ffa450edef68"
9ac3a768ed38280881b9b73d5de2edfe5272410a,"DERBY-3147 (partial) Clean of handling user identifiers and renaming some IdUtil methods with comments to make behaviour clearer.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589804 13f79535-47bb-0310-9956-ffa450edef68"
9fbf2cbbd6cba0b7565828b29dbff001e23488af,"DERBY-3147 (partial) Add two user names to AuthenticationTest that must be represented as delimited identifiers in SQL due to an @ sign or the user being 123.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589829 13f79535-47bb-0310-9956-ffa450edef68"
ce018f393bf5391e11d898d980b002d4b8ab196d,"DERBY-3158 DERBY-3159 Ensure that SYSCS_SET_USER_ACCESS: 1) always sets the user name in the lists in its delimited form. 2) Allows repeated calls to set the permission for the same user by always clearing both lists of that user name before adding. 3) Allows user names with characters that require quoting in SQL by not validating the name as a SQL identifier since the passed in user name is a normalized user name.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589894 13f79535-47bb-0310-9956-ffa450edef68"
c33061f508da4d0b19b24f1b8d0960ebd6da25bc,"DERBY-3147 Add more tests for various user names and the connection authorization

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@589902 13f79535-47bb-0310-9956-ffa450edef68"
9bc69c7ac6540f1b35a5381402585ecc7e83f189,"DERBY-2065 Network and embedded difference in SQLSTATE and message when Connection.close() with open transaction

Patch DERBY-2065-2; remove unused error message ""25000"".


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@590046 13f79535-47bb-0310-9956-ffa450edef68"
dfa772af99efc753b05a91bd20443660239a0abf,"DERBY-2242 (partial); implementing the TODO re testUnimplementedSQLObjectAttributes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@590476 13f79535-47bb-0310-9956-ffa450edef68"
bbba1c74d64d9e61be88b7adccc638256e403494,"DERBY-3160 Make SYSCS_GET_USER_ACCESS treat the passed in user name in its normal form, as for example would be passed by using the expression CURRENT_USER

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@590720 13f79535-47bb-0310-9956-ffa450edef68"
aa438ff0a54c31ccbf49c6050034eb5dc133efb2,"DERBY-3147 Remove last traces of lower-cased identifiers from IdUtil and StringUtil.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@590730 13f79535-47bb-0310-9956-ffa450edef68"
615b8c70b6638a0cc8af14c731931e165a8b0cdb,"DERBY-3147 Fix javadoc error in IdUtil

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@591401 13f79535-47bb-0310-9956-ffa450edef68"
288915ea24ee02d445b398768ab17a31c459a250,"Fix javadoc error in AuthenticationTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@591415 13f79535-47bb-0310-9956-ffa450edef68"
9a31bbf171e570e64b50c5325afa258a8f2ab716,"DERBY-3165: Committed improvements to BUILDING.txt submitted by Henrik and Svein Erik.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@591470 13f79535-47bb-0310-9956-ffa450edef68"
5028317c007b9b51dc177504f7bd8ded43dcf14d,"DERBY-3110 server hangs after trace on command fails
If there is an error in turning on tracing for any of the sessions, we fail to turn global tracing on and return an error to the client. The change also wraps the tracing in a privilege block.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@592111 13f79535-47bb-0310-9956-ffa450edef68"
30f8bce05b0bcd61615763c79416d7e90be7003f,"DERBY-2242 (partial) - convert tests for getBestRowIdentifier from bestrowidentifier.sql and metadata.java - step 1; add to DatabaseMetaDataTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@592240 13f79535-47bb-0310-9956-ffa450edef68"
c0c371654be2318c51cf872b38992c0381c91200,"DERBY-2255 - ij will now show a different prompt while in a multi-line interactive statement. Patch contributed by Anders Morken.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@592500 13f79535-47bb-0310-9956-ffa450edef68"
2216a4006d61a1d5cbb069c3b9a470e26659e07c,"DERBY-3178
This commit modifies DataSourceTest.java to ensure that expected Connection events are fired to the 
ConnectionEventListener.
The changes have been implemented by having AssertEventCatcher in DataSourceTest.java keep track of what events 
it received. This state is kept in boolean gotConnectionClosed and boolean gotConnectionErrorOccured flags in
AssertEventCatcher. The test then checks the state of AssertEventCatcher after the test has done firing the events
to make sure AssertEventCatcher got the expected events.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@592544 13f79535-47bb-0310-9956-ffa450edef68"
66a8763aec8c968a890cc5664797e686ea617785,"DERBY-1272 (partial) Log sysinfo to derby.log with derby.stream.error.logSeverityLevel=0

Does not include test at this time because of test ordering problem.
Contributed  by Andrew McIntyre, Ramin Moazeni.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@592590 13f79535-47bb-0310-9956-ffa450edef68"
1a2a78d2b75092e6d49a8215d2ad607883aa0dbf,"DERBY-2242 (partial) test for getBestRowIdentifier modifications; 
  adding bug numbers; splitting off helper methods; adjusting comments; 
  reinstating table brit17 into main test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@592626 13f79535-47bb-0310-9956-ffa450edef68"
c3f5d637805dff4ecc8369fdd262fadb2f28272a,"DERBY-2242 (partial) - removing bestrowidentifier.sql as it's now part of 
  DatabaseMetaDataTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@592633 13f79535-47bb-0310-9956-ffa450edef68"
63adae87bd5909785b2755e567cb1abee7c64c37,"DERBY-3086: More permissions and privilege blocks so that the server tracing and sysinfo will continue to work when the server automatically installs a security manager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@592758 13f79535-47bb-0310-9956-ffa450edef68"
de3a568a2cfb5d0fbf29a6f7fffa5e3e588d67e1,"DERBY-3174 DERBY-3183  (partial) Remove test until permission errors are resolved.
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593192 13f79535-47bb-0310-9956-ffa450edef68"
412e7b72c7b534389c7acad41f93d3570730a771,"Fix bug in order entry ""by name"" transactions, where if the last name matched to a single row an ArrayIndexOutOfBoundsException was thrown. Code did not cater for that specific case, rounding beyond the midpoint led to a array index of 1 for a 1 element array.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593318 13f79535-47bb-0310-9956-ffa450edef68"
f73c63e9cf1161b1ce46fa8c9b17fd17cd21399e,"Have the order entry MultiThreadSubmitter clear the transaction counts for its submitters before starting a run. Thus ensuring the submitter's counts represent a single run.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593324 13f79535-47bb-0310-9956-ffa450edef68"
0e883c8ccd31358282b27540a6a65ff0deba9705,"DERBY-3149: Add ant targets for building and running the package private tests against the classes directories. Added two targets; 'pptesting' and 'junit-pptesting'. Package-private tests are currently only run against the classes-directory, and the have to be run manually. They are not part of any other target/suite yet.
Patch file: derby-3149-1b.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593571 13f79535-47bb-0310-9956-ffa450edef68"
d1b8db2c9f6f3207e8a3dff623c1e55db92cdf1d,"DERBY-2903 ; adding init() to sysinfo.Main.java's call to 
   LocalizedResource.getInstance() ensures that if sysinfo has a clean 
   one that does not get affected by any earlier calls to init.
   After this, the redirections of system.out work correctly in a loop, so
   adjusting the test to do away with the hoky annotating and unraveling of
   the output; also now sequence of tests in tools._Suite no longer matters.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593635 13f79535-47bb-0310-9956-ffa450edef68"
0c8386dad77ca493ccc896a177a1f2b1cdeedbcf,"DERBY-2903 ; addressing some review comments


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593643 13f79535-47bb-0310-9956-ffa450edef68"
7ca0b34cc6554e0d902abf0bb80583414ab42b44,"DERBY-1272 Backout change 592590 which was causing Exception initializer error with classes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593654 13f79535-47bb-0310-9956-ffa450edef68"
5e8fe1c7bc8f0f4673b00679ba874691a12ee1c2,"DERBY-3187 - backing out changes made with DERBY-2216 to support SimpleApp
  with j2ME as the implementation causes trouble with client and does not 
  work properly with all JVMs.
  patch contributed by John H. Embretsen. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593673 13f79535-47bb-0310-9956-ffa450edef68"
7d10f01372d66c530a48d4a1edbd17ca644d42cc,"DERBY-3183 Error starting tracing' in testTraceCommands(org.apache.derbyTesting.functionTests.tests.derbynet.NetworkServerControlApiTest) on Windows...
Replace / with ${/} in test specific policy file.

DERBY-3174 NetworkServerControlApiTest fails with java.security.AccessControlException if not run as first test

Change SecurityManagerSetup to perform a policy refresh after changing the policy file so that the new policy file gets loaded properly.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593676 13f79535-47bb-0310-9956-ffa450edef68"
3d3a8fe7dafdb84366fd2e6ec12f4e71db17d8c5,"DERBY-3182 ; test comments re functioning of nullisok flag (5th parameter to
  getBestRowIdentifier) were incorrect. Adjusting test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@593931 13f79535-47bb-0310-9956-ffa450edef68"
86bc9d55545e53e5fa21215e963666336e188d5a,"DERBY-3199: Minor cleanup of DRDAProtocolTest.
Patch file: derby-3199-1a-minor_cleanup.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594118 13f79535-47bb-0310-9956-ffa450edef68"
262a5366f484b2c8c7ae67a364a1adfbe6bcc30f,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit. Copied the existing TestProto to new location for further work.
Patch-file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594156 13f79535-47bb-0310-9956-ffa450edef68"
d381d8b44ad2e99542007eb5629a78a637185fc4,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit. Replaced tab-characters and added some blank lines between methods.
Patch-file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594157 13f79535-47bb-0310-9956-ffa450edef68"
ee59de8528b2bf6a3b98c6ef9dccbfcc74b385d3,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-2. Adds basic catalog support for SQL roles.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594158 13f79535-47bb-0310-9956-ffa450edef68"
ecd42d96653b9937ac54448730431e80792d85fd,"DERBY-3156: Convert testing of derby error stream to JUnit

Contributed by Vemund √òstgaard.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594169 13f79535-47bb-0310-9956-ffa450edef68"
05e9c291aa74280efe009b3e9af54020bf44871b,"DERBY-3176: Re-enable support for running Derby on phoneME small device platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594184 13f79535-47bb-0310-9956-ffa450edef68"
739bf87598ef4b081df648e6c6007cec88b6186e,"Disable installation of default testing policy file because test installs its own initial policy file.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594365 13f79535-47bb-0310-9956-ffa450edef68"
34c4f4246602a87da8025de7b79253f4600ca8a0,"DERBY-2903 ; adjusting test to run ok with CDC Foundation / JSR169


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594393 13f79535-47bb-0310-9956-ffa450edef68"
4c5705aecf63ebc51d312e9b92d62688016ae0ff,"DERBY-2903 ; logic in previous check-in was off, prevented any of the test 
  cases to run with J2ME/JSR169 instead of skipping just client/server jars.   


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594397 13f79535-47bb-0310-9956-ffa450edef68"
45c3f035c3308aa68a499bbf9953da2ff1aa9fb4,"DERBY-3175: NullPointerException on INSERT after ALTER TABLE DROP COLUMN

The implementation of ALTER TABLE DROP COLUMN needs to adjust the
SYSCOLUMNS information for some of the columns in the table. Specifically,
columns with a higher column position than the dropped column need to
have their column position adjusted (decremented by 1).

The algorithm which did this column position adjustment was flawed,
because it was losing the auto-increment information for generated columns.

The code adjusts the column position by:
 - reading the old column information into a ColumnDescriptor
 - deleting the old column information from SYSCOLUMNS
 - modifying the ColumnDescriptor to set the new column position
 - adding the new column information to SYSCOLUMNS

But the generated column information in the ColumnDescriptor was not being
preserved properly in this process.

The fix involved ensuring that the ColumnDescriptor information was
accurate for generated columns, and ensuring that SYSCOLUMNSRowFactory.makeRow
was correctly loading the generated column information into the new row.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594727 13f79535-47bb-0310-9956-ffa450edef68"
e716884e24dc6644da3d345de29caef5118f0521,"Changed javac option 'debug=""true""' to 'debug=""${debug}""' to be in line with other non-testing build targets.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594806 13f79535-47bb-0310-9956-ffa450edef68"
37d0c44f85ea2af8c78eb79ded2a0b2339dfd189,"DERBY-3149: Add ant targets for building and running the package private tests against the classes directories. Made the compilation of the classes conditional, i.e. don't compile them again if it is not necessary.
Patch-file: derby-3149-2a-conditional_compilation_fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594809 13f79535-47bb-0310-9956-ffa450edef68"
a40513660cf63450446a988b7953a8b1296dfe31,"DERBY-3073 SQL roles: add parser support

Follow-up patch DERBY-3073-part3, which reorders two checks for the roles statements:
hard upgrade check goes before sqlauthorization check.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594822 13f79535-47bb-0310-9956-ffa450edef68"
57964be481e2d5f1c5edf807d48b4c5ca2ab8e6a,"DERBY-3202: 'AccessControlException: access denied
(java.io.FilePermission C:\....\file-2.log read)' in ErrorStreamTest.

Problem was that getCanonicalPath() needed a security permission on
Windows (but not on Solaris/Linux). In addition the Derby engine had
to be shut down before derby.log could be deleted on Windows.

Fix contributed by Vemund √òstgaard.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@594894 13f79535-47bb-0310-9956-ffa450edef68"
cb47a36e345e3625499ccd01be340d72dc4db37a,"DERBY-3172

Change the Network Server code so that when the Network Server is shutdown, any api on Connection object will 
raise a Connection error event (similar to what is done in embedded mode). This also required me changing the
disconnectError from -4999 to 40000(to match embedded). This change was made client.am.SqlCode. I have added tests
for all the apis on Connection object in DataSourceTest. Had to change couple tests which were testing for
-4999. Now they look for 40000. I will merge this change into 10.3 and run tests there before committing the changes
in 10.3 codeline.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595047 13f79535-47bb-0310-9956-ffa450edef68"
57403e722ce45efc504b2e4d01fc4ea799d0ab04,"Re-use data model objects in the order entry standard transaction implementations to reduce garbage collection effects introduced by the application (since this framework is intended to test Derby's performance)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595178 13f79535-47bb-0310-9956-ffa450edef68"
479ef91b2e8a56c7fba8a12c63b085487018c68c,"Fix array out of bounds exception when submitting a new order transaction due to setting the invalid item identifier at the incorrect position in the array.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595385 13f79535-47bb-0310-9956-ffa450edef68"
a6358d6ed676b0df58a6b7d4d7d8895e520dfbf2,"Add a couple of simple primary key tests that work in the oe (tpc-c) framework. These transactions are not part of the specification but allow testing of basic functionality against an order-entry database

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595387 13f79535-47bb-0310-9956-ffa450edef68"
9e356f18f40957466694a23e9a43355dc049315f,"DERBY-3189: Replication: Add connection url command options for
starting and stopping master

Attaching patch v1a, handling startMaster and startSlave url commands
in EmbedConnection. Waiting for DERBY-2954 before stopMaster can be
activated (a single code line has been commented out).

Patch contributed by J√∏rgen L√∏land.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595591 13f79535-47bb-0310-9956-ffa450edef68"
a4d3e58daedd013a18db57d03acc557f6250fb16,"DERBY-1749 Implement Bracketed SQL comments (/*...*/ comments)

Patch Derby-1749-4.diff implements SQL feature T351 and adds a test.
Thanks to James F. Adams for help with the change and for providing
the test. I added some extra test cases.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595662 13f79535-47bb-0310-9956-ffa450edef68"
836fc7bd1c61224120fd2b848cb9488c3d46ab01,"This is a followup checkin to checkin(595047) was committed for DERBY-3172. The DataSourceTest had started failing
under JDK1.6 after 595047. The particular test case that was failing was for Connection.getTypeMap The reason for
failure was that this method was overridden in a subclass which kicks in only when JDBC4.0 is available. The
overriden method was not sending the correct connection error event as expected by the test and hence the failure.
While fixing this, I realized that there are several new JDBC4.0 apis that need to send the correct events to
ConnectionEventListeners. This checkin takes care of those apis. More info on what was changed in this commit is
as follows.

New JDBC4.0 api, setClientInfo, wraps SQLException inside SQLClientInfoException but we were not copying the 
error code of SQLException into SQLClientInfoException. Without the correct error code, we would not send 
connection error event because the severity has to be fatal for us to send connection error event. Because of this, 
I had to change several places where SQLException is wrapped inside SQLClientInfoException to pass SQLException's
error code to SQLClientInfoException. The classes changed because of this are EmbedConnection40, 
BrokeredConnection40, NetConnection40.

For methods that throw SQLClientInfoException, we were not notifying the connection error events. I made changes to 
fix this.

Several of new JDBC4 apis on connection object were not sending error events so I changed those methods in 
BrokeredConnection40 and LogicalConnection40. 

BrokeredConnection40 implements new JDBC4 methods on Connection object but these new methods did not follow the
same logic as the other existing pre-JDBC4 methods to check for connection close and that caused the events to
be not sent correctly. The problematic apis were createBlob, createClob, isWrapperFor, unwrap and I fixed those.

Not all the new JDBC4 apis have been implemented (they throw not implemented exception) so the tests written for 
those apis just catch the unimplemented exception. These methods include createArrayOf, createNClob, createSQLXML, 
createStruct.

In JDBC4, Connection object has two methods isWrapperFor and unwrap which do not go to the server when Derby is
being accessed in client server mode and because of this, we never detect that the server is down and hence no
connection error event is thrown in client server mode for these 2 apis. But when the same apis are called in 
embedded Derby after the engine is shutdown, we get connection error event. I have added the test for these 2 apis 
to count for the different in behavior but I am not sure if this is the expected behavior difference between the 
2 configurations of Derby. I will enter a Jira entry for this.

And lastly, the new JDBC4 api isValid on Connection object has different behavior in client server mode and
embedded mode. They both throw exception that the connection is down but the connection close and error events
are not dealt the same way in the 2 configurations. In embedded mode, after the engine is shutdown, an isValid 
call on Connection object raises a connection closed event and no connection error event. In client server mode, 
after the Network Server is shutdown, an isValid call on Connection object does not raise any event. In both the 
configurations, we do get a SQLException stating that connection is down. Again, I am not sure if this is expected 
bahavior difference between the 2 configurations of Derby. I will enter a Jira entry for this too. In addition, as 
per Connection.isValid api Java specification, a SQLException is thrown under following condition which is not
being followed in embedded and client-server mode
Throws: 
SQLException - if the value supplied for timeout is less then 0
Based on this, I am not sure if our behavior is correct to throw an SQLException if the server/engine is down. I 
will include this information in the Jira entry that I will make.

The tests for all these new JDBC4 apis are in jdbc4/DataSourceTest.  

I moved the AssertEventCatcher class implementation from jdbcapi/DataSourceTest into a class of it's own. This way,
it can be shared by jdbcapi/DataSourceTest and jdbc4/DataSourceTest.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595803 13f79535-47bb-0310-9956-ffa450edef68"
6d8a24d96f0a3757f71b8e2d28d3b07de4531f4e,"DERBY-2564 calls to Thread.interrupt need privilege blocks

Changed calls to Thread.interrupt to occur in privilege blocks.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595861 13f79535-47bb-0310-9956-ffa450edef68"
7e8544950d18543e0fccc70478b4b2f189a70882,"DERBY-2242 (partial) adding tests for getColumnPrivileges and getTablePrivileges


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595876 13f79535-47bb-0310-9956-ffa450edef68"
449a1ebad5145bbc9096499a779d1cb8b3bdda48,"DERBY-1749 Implement Bracketed SQL comments (/*...*/ comments)

Fixed wrong class name in the comment header.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595892 13f79535-47bb-0310-9956-ffa450edef68"
e071963eca9e6060c475d083a09c500caa75c1aa,"DERBY-3021:  Contributed by Jorgen Loland 
Extend the functionality of the SlaveController to make use of the modifications to store.raw.log made in derby-3071. 

It touches the following files:

M      java/engine/org/apache/derby/impl/services/replication/net/ReplicationMessageReceive.java
   Constructor now throws StandardException
   initConnection now times out if connection is not established
M      java/engine/org/apache/derby/impl/services/replication/slave/SlaveController.java
   Localhost is now used to set up the network socket
   Added thread that applies log chunks received from the master
   Functionality to start replication slave mode
M      java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java
   Adds public methods for switchLogFile and applyLogRecord. 
   rename initializeSlaveReplication() to initializeReplicationSlaveMode() for consistency
M      java/engine/org/apache/derby/iapi/services/replication/slave/SlaveFactory.java
   Added property keys: DB_NAME and SLAVE_HOST
M      java/engine/org/apache/derby/loc/messages.xml
M      java/shared/org/apache/derby/shared/common/reference/SQLState.java
M      java/shared/org/apache/derby/shared/common/reference/MessageId.java
   Added messages and exceptions
A      java/engine/org/apache/derby/impl/services/replication/ReplicationLogger.java
   Utility for logging to derby.log for replication components
   

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@595900 13f79535-47bb-0310-9956-ffa450edef68"
73e0fab3b5278bd815562439d74782409b6835ed,"DERBY-2242 (partial) tests for getIndexInfo. Also modified some comments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596033 13f79535-47bb-0310-9956-ffa450edef68"
eb7b09f971e01437acab5319d575bdb4d68a22e3,"removing orphaned test files; metadataJdbc20.java test was removed (merged into
  metadata.java) with revision 356562 for DERBY-572.
  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596037 13f79535-47bb-0310-9956-ffa450edef68"
040d4bd4b91994298f500fad538bbfbbb03ae7f7,"DERBY-2242 (partial); adding tests for *AreVisible and remainder for 
  *AreDetected tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596070 13f79535-47bb-0310-9956-ffa450edef68"
948b7e19f369a55d1111dbcb486e721d20df2b9a,"DERBY-2242 (partial); add some comments


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596177 13f79535-47bb-0310-9956-ffa450edef68"
4a868384a220a0b036b46cecc9acfe5bd8c05874,"DERBY-3208: Callers of DaemonService.serviceNow() assume behaviour not
guaranteed by the interface

Expanded the javadoc comment in the interface so that it guarantees
what the callers implicitly assume.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596262 13f79535-47bb-0310-9956-ffa450edef68"
651fa21e9ae23aca22b81656d4a18a4270094f87,"DERBY-2911 (partial) Implemented background cleaner for ConcurrentCache

Created a background cleaner which enables the user threads to request
that the cleaning of a cached object happens asynchronously in Derby's
service daemon.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596265 13f79535-47bb-0310-9956-ffa450edef68"
47174a11bec52da73e5c79dc3b8a13a3b7c3b106,"DERBY-3156: Convert testing of derby error stream to JUnit

Remove the old tests. Contributed by Vemund √òstgaard.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596285 13f79535-47bb-0310-9956-ffa450edef68"
3c0c3eed1dc6dce6cf65890d0f07864d885d06ef,"DERBY-3117: Automatic setting of compiler classpath properties.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596304 13f79535-47bb-0310-9956-ffa450edef68"
23d21a3b8badcf05f87dd58b645de9a1230854f7,"DERBY-3194 LOCALIZEDDISPLAY of CURRENT_TIMESTAMP returns only the TIME

Patch DERBY-3194.diff.

The problem is that LocalizedResource#getTimestampAsString uses a time
rather than a timestamp formatter.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596389 13f79535-47bb-0310-9956-ffa450edef68"
011514c579cc003cdcf3b79be0de4d5f2528f59e,"DERBY-2242 (partial) edit comments


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596396 13f79535-47bb-0310-9956-ffa450edef68"
61dad1dc1acf87a7d278df3ca4d364078bfe2195,"DERBY-3117 Fix compile when j14lib and j15lib are set but vm is not a vendor recognized by PropertySetter. Bug was incorrect property names being passed into setClasspathFromLib()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596405 13f79535-47bb-0310-9956-ffa450edef68"
beb1faafdaeb39c17105e03e079b633fb9ebc2bf,"DERBY-3117: Improve portability of grandparent lookup in PropertySetter.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596438 13f79535-47bb-0310-9956-ffa450edef68"
f9b0b0541b4ae943e4a5fc1136e74993975d6511,"DERBY-3117: Adjust master build script to require the Java 5 compiler
to build Derby

Added extra directory in which to search when building on
Solaris. This increases the chance of finding JDK 1.4.2, since the
default location for JDKs on Solaris changed with JDK 5.0.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596478 13f79535-47bb-0310-9956-ffa450edef68"
29f4885ab61c5954b79648b7d87541561fe4c8a3,"DERBY-2242 (partial) moved over tests from metadata_test.java for get*Keys,
  getCrossReference.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596577 13f79535-47bb-0310-9956-ffa450edef68"
1ead1aaef20d87928a82ce97bef3402e9ef3b9ac,"DERBY-3149: Fixed JavaDoc warning.
Patch-file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596598 13f79535-47bb-0310-9956-ffa450edef68"
e706cf3b1bb42689f193f636052f5156fa41e310,"Add junit_* to svn:ignore for trunk.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596773 13f79535-47bb-0310-9956-ffa450edef68"
cce9e61b994c2cf838021c244ec8262f7617056f,"DERBY-3190 - new SimpleMobileApp Demo for Java ME platforms. 
  Patch contributed by John H. Embretsen


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596792 13f79535-47bb-0310-9956-ffa450edef68"
36932863aeb9019d0192f0fc30cde19341aca32d,"DERBY-2242 (partial) remove 2 test files orpahned with revision 498013


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596816 13f79535-47bb-0310-9956-ffa450edef68"
3d56c74163baf11579e4bc8ecf5149dcefcb13a2,"DERBY-2352: Assertion failure with order by and group by on SUBSTR expression

For a query plan which involves a sort, the compilation system generates a
method called a ""row allocator"" which allocates a template row of the
correct shape (correct number of columns of the correct data types) to hold
the row that is being provided to the sorter. The row allocator determines
the data type of the column in the row allocator by examining the 
ResultColumn's type, which in turn is computed by the compilation system
during bind processing.

For the SUBSTR expression, TernaryOperatorNode.substrBind() is called, and
the logic in that method was determining that the data type of the SUBSTR
result depended on the data type of the operand on which SUBSTR was called;
i.e., a SUBSTR of a CHAR became a CHAR, while a SUBSTR of a VARCHAR became
a VARCHAR. But this is incorrect; SUBSTR always returns a VARCHAR type,
unless it is called on a BLOB/CLOB object.

This patch modifies the substrBind() processing to perform result data type
analysis in the same way as is done for the trim family of methods in trimBind.





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596824 13f79535-47bb-0310-9956-ffa450edef68"
ddeb0005d5bd624ed0762029933706b101698447,"Fix tearDown method for jdbcapi.ConcurrencyTest to ensure it commits the DROP TABLE it executes. Add a utility method for junit tests that want to drop a table regardless of if it exists or not

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596847 13f79535-47bb-0310-9956-ffa450edef68"
ba778a7d940931c83ef8b26d8230399c8d992a05,"DERBY-3215 Potential NullPointerException in CachedPage class

Patch DERBY-3215.diff. Fixes two erroneous usages of 
StandardException.newException(SQLState.FILE_WRITE_PAGE_EXCEPTION,..)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596853 13f79535-47bb-0310-9956-ffa450edef68"
93d16adf01dc59cc542f7b38ee70f273c9c2c0f2,"Fix the OERandom constructor that creates a OERandom from another not to have an identical seed to another created at the same time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596877 13f79535-47bb-0310-9956-ffa450edef68"
d56052562c81c47c96e8ccb9417c17d093c6816f,"DERBY-3086: Remove derbyTesting.jar permissions block from default server policy.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596880 13f79535-47bb-0310-9956-ffa450edef68"
7ae0ee5a641e1ea4171a1258b34ccd8d25505375,"DERBY-3096 SSL handshake throws bad_certificate when server tries to authenticate client.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@596983 13f79535-47bb-0310-9956-ffa450edef68"
0ea0f3d839ac2838ab42648058699d66836024b1,"Converted a batch of comments into JavaDoc by adding another star. Made minor changes to text/comments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597110 13f79535-47bb-0310-9956-ffa450edef68"
90daaabd50c47495285e31ef2a4e0a26895fc651,"DERBY-3215 Potential NullPointerException in CachedPage class

Patch DERBY-3215b; code cleanup follow-up, no semantic change.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597123 13f79535-47bb-0310-9956-ffa450edef68"
7093bb679a49a53041e8e3cd2ff521d0be90539e,"DERBY-3083: To fix regression introduced by DERBY-2196, do not fail server startup if derbynet.jar cannot be found.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597125 13f79535-47bb-0310-9956-ffa450edef68"
b12505f2e5818f645b56ec7ec7a0201ca793f52a,"correct name in header


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597215 13f79535-47bb-0310-9956-ffa450edef68"
44937d7464ab6ebadaa3a6da08309c374fa5b0d3,"DERBY-2016 ArrayIndexOutOfBoundsException for COALESCE with aggregate functions

Patch DERBY-2016d.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597278 13f79535-47bb-0310-9956-ffa450edef68"
8a700dcdfa9f56442adbd6e39178fe60555bba1f,"DERBY-2242 ; remaining TODOs for databasemetadata test conversion to junit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597311 13f79535-47bb-0310-9956-ffa450edef68"
659f564e37214a8467690d964cfdc555bce17431,"DERBY-3192: add new JUnit test jdbcapi.CacheSessionDataTest 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597352 13f79535-47bb-0310-9956-ffa450edef68"
744825e5141aacf1a961ad1917c4ac0d746b0564,"DERBY-3156: Removed canons for logStream and errorStream tests


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597356 13f79535-47bb-0310-9956-ffa450edef68"
315edd559a951915946d4c3647294cde918ad460,"Fixed javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597395 13f79535-47bb-0310-9956-ffa450edef68"
aaa1403229744caf3b3e867f4a0a05fae77d4f67,"DERBY-3191 SQL roles: add upgrade support

Patch DERBY-3191b; adds hard upgrade code for the new roles system table SYS.SYSROLES,
plus tests for this functionality to the upgrade tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597409 13f79535-47bb-0310-9956-ffa450edef68"
52b11faf5f2949be3165aeb4c5fcdf31d8f3e28a,"DERBY-3211 ; convert NSinSameJVM to junit
  patch contributed by Manjula Kutty


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597456 13f79535-47bb-0310-9956-ffa450edef68"
1ba0984da6ce7a9f6cc456c55e4d6ed8a85d3329,"DERBY-2242 ; remove metadata.java, metadata_test.java and odbc_metadata.java.
  Test has been converted to junit test DatabaseMetaDataTest.
  Also removed master file PhaseTester.out, orphaned from rev 407396 (DERBY-514)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597464 13f79535-47bb-0310-9956-ffa450edef68"
ef49498efd530a0da8c8935f5c07ed34b1e42b86,"DERBY-3211; remove old test after conversion to junit NSinSameJVMTest.
  Also adjusted tools/release/build.xml 
  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597466 13f79535-47bb-0310-9956-ffa450edef68"
3f3db193476e955e35a3bc2e594311bdc8e3c090,"DERBY-3224 ; adjusting https to http to enable test runs on Phone ME platform


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597467 13f79535-47bb-0310-9956-ffa450edef68"
1519bb7db1124af44dee39bfa54ac577dd789b38,"DERBY-3190 ; minor changes to document and comments
  Patch contributed by John Embretsen


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597475 13f79535-47bb-0310-9956-ffa450edef68"
925ae9928d9486353ec55bb4f0f9b6d15e944ff9,"DERBY-3220 <transition table or variable list> (ReferencingClause) in CREATE TRIGGER statement not SQL compliant

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597604 13f79535-47bb-0310-9956-ffa450edef68"
9a55084e7ddfd3a31a8f448d75d06375ccd00ec6,"DERBY-3142: sysinfo ignores derby.ui.locale

Fetch sysinfo's resource bundle from LocalizedResource, which
recognizes derby.ui.locale, instead of directly from
ResourceBundle.getBundle(), which only considers the JVM's default
locale.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597610 13f79535-47bb-0310-9956-ffa450edef68"
d4a1ecd2288478b3b811b56ff201fdc156245f02,"DERBY-3192: followup to disable the test for JSR169 and use more harness helper methods.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597630 13f79535-47bb-0310-9956-ffa450edef68"
56d8e514ee2e9d41e51534c8d8fe8ab76e957115,"DERBY-3118: Simple demo is out of date

  a) Eliminate errors and outdated information in documentation and code

  b) Eliminate Java code that is generally discouraged in the
     community, such as
        - catch (Throwable) {}
        - leaving resources open if an error occurs
        - not using PreparedStatement for repeated executions of the
          same SQL statement

  c) Make it easier for users to find the demos, especially the simple
     demo. More work is needed for other demos.

Patch contributed by John H. Embretsen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597661 13f79535-47bb-0310-9956-ffa450edef68"
63bc195f9ac001fa9892c49760cb121793031a6f,"DERBY-3216

If btree post commit thread can not get table level lock for row cleanup and
possible tree merging, then instead attempt just row level row purging.  Without
this change some stress tests were seeing post commit queue continuous grow
as there was always some thread with a lock on the index, and thus the items
could never get executed.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@597865 13f79535-47bb-0310-9956-ffa450edef68"
0489adb1c4258ff8f68baa9834d032f36caccafb,"DERBY-3216

Address comment concerning return in finally block of added code.  Removed it
and let natural void return happen.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598092 13f79535-47bb-0310-9956-ffa450edef68"
1318511b9214580dd2fb0bda5d10f1ace0a7c97d,"Made javadoc comment visible.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598176 13f79535-47bb-0310-9956-ffa450edef68"
408abd58539b37d2764f644cf2751257f851aaab,"Remove unncessary if statement in RowResultSet.getnextRowCore(). The field currentRow is set to null on entry to the method so the subsequent check for it being null will always be true.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598418 13f79535-47bb-0310-9956-ffa450edef68"
4358952dd9dad5b85faba134bea7f7d4801d2dbd,"Remove some unused fields and methods in the base language ResultSet implementation classes

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598419 13f79535-47bb-0310-9956-ffa450edef68"
4aa7869100a97ba4c42842bf3b3dc3856c7dbf14,"DERBY-3229: Make SysinfoLocaleTest print more information on failure


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598456 13f79535-47bb-0310-9956-ffa450edef68"
1952e602901708734ba25e83bc19b7307185a3c2,"DERBY-3226: BlobLocatorInputStream.read() and ClobLocatorInputStream.read() don't mask out sign bits


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598458 13f79535-47bb-0310-9956-ffa450edef68"
49f3f24c80a34337bdf18b5a9217879a43baf370,"Remove unused argument (always passed as null) from BasicNoPutResultSetImpl.getCompactRow()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598468 13f79535-47bb-0310-9956-ffa450edef68"
4e784bb15648d257c9502b7a074cd432ac11e3f2,"Clean up code where NoPutResultSetImpl.setCurrentRow() was called and the caller set currentRow field explictly. The setCurrentRow() method actually sets the currentRow field.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598483 13f79535-47bb-0310-9956-ffa450edef68"
cda55ef7daf5d3e8bebe2570f5b3e057a622560e,"DERBY-3202:
Workaround for failure in ErrorStreamTest on Windows Vista and Sun JDK 1.4.2.

Contributed by Vemund √òstgaard.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598626 13f79535-47bb-0310-9956-ffa450edef68"
2ec36d1d69fc20f03bf121d9453aba5ff9df64aa,"Consolidate the accessedCols field in the super-class ScanResultSet for the scan implementations

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598716 13f79535-47bb-0310-9956-ffa450edef68"
7abac021213a3a5bd15cc2f0dd920741f1e70b4c,"Add some comments to ScanResultSet to indicate some of its expected behaviour

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598731 13f79535-47bb-0310-9956-ffa450edef68"
d2814625fdeb48ca1500c843277f19ee809946f9,"Remove unnecessary closing of result set in EmbedStatement execute method since it will have already have been closed by clearResultSets() method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598737 13f79535-47bb-0310-9956-ffa450edef68"
88bb146decf340064597deb0d0452dc4d4fcef88,"DERBY-3049 (partial) More cleanup related to removing the confusing (language) ResultSet.getResultDescription() method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598739 13f79535-47bb-0310-9956-ffa450edef68"
7c3cc8299859d2ec498ef236503a9c4860fa0376,"Remove some unused fields in IndexRowToBaseRowResultSet and organize its imports

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@598825 13f79535-47bb-0310-9956-ffa450edef68"
908f4405726f48919fc1585475cd64b964f27a45,"DERBY-3234: Commit John Embretsen's patch which corrects the public api's description of our supported platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599007 13f79535-47bb-0310-9956-ffa450edef68"
544f6a4080ea44c0a889e53bd6312b11e2cdfe96,"DERBY-3232 Update top-level index.html for a release to remove references to JDBC 2.0 and JDK 1.3

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599079 13f79535-47bb-0310-9956-ffa450edef68"
fb6b9e8d3baf4454048fc9e6de0ceac17b736147,"DERBY-3083: Revert 597125.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599086 13f79535-47bb-0310-9956-ffa450edef68"
6b1417215044752245ee6338aa10d63d059834ed,"DERBY-2807: Patch adds BLOB/CLOB testing to the compatibility testing
framework



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599836 13f79535-47bb-0310-9956-ffa450edef68"
53cef0fd66047ab000244c03c3e8738ed9ec9897,"DERBY-2807: Forgot to set svn:eol-style on new files 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599837 13f79535-47bb-0310-9956-ffa450edef68"
3091cefd0df0af67375222d52fd2e83f3858268e,"Close opened connection in derbynet/executeUpdate test

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599893 13f79535-47bb-0310-9956-ffa450edef68"
be7095f33b6d3503f5849d195a60b7579db50126,"Close opened statement objects in derbynet/DRDAProtocolTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599895 13f79535-47bb-0310-9956-ffa450edef68"
e055384f84b5aada9603a624bdaf8dd12e74a314,"Cleanup derbynet/BadConnectionTest including adding fail() asserts if a connection attempt succeeds

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599896 13f79535-47bb-0310-9956-ffa450edef68"
26ed4f998977fc9afe75306513a92ff7cab25c47,"Add utility methods to BaseTestCase to remove a directory.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599897 13f79535-47bb-0310-9956-ffa450edef68"
a30f4ad814d2b2efc854f18d95472d2593541464,"Merging change(599933) from 10.3 codeline into trunk for DERBY-3222 The commit comment for checkin into 10.3 
codeline was as follows

The test will fail depending on the timing. It inserts CURRENT_DATE into a column and then compares that
column with whatever the CURRENT_DATE might be during the run of compare sql. If the insert happened right before
midnight and comparison happens right after midnight, the comparison of the dates will return FALSE. Since the main 
purpose of the test is to make sure that Derby derives correct collation type for CURRENT_DATE and 
UPPER(CURRENT_DATE), it really does not matter if the 2 current dates actually match or not. Because of this, I 
have changed the test to look for <= while doing date comparison rather than =. This should resolve the timing 
related fact of the test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@599973 13f79535-47bb-0310-9956-ffa450edef68"
fba5285110b17f7fec138649bc1e90a888fedfcd,"DERBY-3229: testSysinfoLocale fails if derbyTools.jar is first in the classpath

Added derbyLocale*.jar to derbytools.jar's classpath.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@600456 13f79535-47bb-0310-9956-ffa450edef68"
73bd5d4068bd72d2476ca696fcb9094604f97e4b,"DERBY-3131: Background cleaner has no daemon service after database creation

Give the page cache and the container cache a background cleaner also
when no recovery was performed during database boot.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@600457 13f79535-47bb-0310-9956-ffa450edef68"
c2603ccc4d98eb51e8526163445f9ab2b988fce0,"DERBY-2815: ij doesn't start with J2ME / JSR169 / weme6.1
Patch file: DERBY-2815.diff2
Patch contributed by Myrna Van Lunteren


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@600460 13f79535-47bb-0310-9956-ffa450edef68"
a4910686110f3ebf64ba6897b79c7e4f7a624f25,"Remove tets utility methods to get XA & ConnectionPooling data sources from JDBCDataSource because the existing class J2EEDataSource already had suitable methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@600674 13f79535-47bb-0310-9956-ffa450edef68"
e76a6fb2f7929056dfa49d1f069ad63a153f6ce8,"Close a connection in NSSecurityMechanismTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@600675 13f79535-47bb-0310-9956-ffa450edef68"
eb0321201eb5700d05598960043f2a2a438db3ea,"Allow re-use of the Address object in the order entry test framework

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@600676 13f79535-47bb-0310-9956-ffa450edef68"
51572c874dc8161fd1c58ce3363c4b529c56a8d7,"DERBY-3049 (partial) Cleanup of some unused fields/variables in ResultSet implementations that leads to some ResultDescription related methods being no longer used and hence removed

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@600678 13f79535-47bb-0310-9956-ffa450edef68"
f73162d5c54922ea0cb0093ace382ceff4bf3e83,"DERBY-3241: No syntax error when compiling statement with unterminated comment

Patch contributed by James F. Adams.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@600990 13f79535-47bb-0310-9956-ffa450edef68"
1c5e43e13ea1672ce3f08fa1fe67be933d1c8586,"DERBY-2998: Add support for ROW_NUMBER() window function 
Starting point for a JUnit test for the ROW_NUMBER() functionality. Not run
as part of lang._Suite yet.
Patch file: d2998-test.diff
Patch contributed by Thomas Nielsen


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601021 13f79535-47bb-0310-9956-ffa450edef68"
fafbff839487e78b8ca8d59e9da1c1380fddb7d0,"Add JDBC.assertGeneratedKeyResultSet() to verify the type and concurrency of ResultSets returned by Statement.getGeneratedKeys. Add a commented out test case in AutoGenJDBC30Test.java that shows the bug DERBY-3249.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601044 13f79535-47bb-0310-9956-ffa450edef68"
aee2d0518a19456babddbad04163761023cf0b8e,"DERBY-3203: Convert jdbcapi/statementJdbc20.java to JUnit
Patch file:  DERBY-3203v2.diff
Patch contributed by Ramin Moazeni


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601058 13f79535-47bb-0310-9956-ffa450edef68"
d2d2e684f9cd7367e38d79c676b038acf24e58e0,"DERBY-3238 When table contains large LOB values (> ~32K) trigger execution fails for that row with ERROR XCL30: An IOException was thrown when reading a 'BLOB'

When a trigger is present, unchanged columns with be part of the UpdateResultSet. These columns are present twice in the result set as a before and after value. There was code to ""objectify"" the before value but the after value was not getting updated. Changed objectifyStream to make sure after values point to data value and not the stream after objectifyStream occurs.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601110 13f79535-47bb-0310-9956-ffa450edef68"
75d1fb19cd514d874aa0ab1f355402d2738423d8,"DERBY-3238 minor cleanup in TriggerTest to remove getConnection() calls



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601118 13f79535-47bb-0310-9956-ffa450edef68"
89e7a2657779211f269262b25efbc3b025ee844a,"Fix javadoc warning in BaseTestCase



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601122 13f79535-47bb-0310-9956-ffa450edef68"
9c86d822a158d2363dcd276650ab75a0000fbbb0,"DERBY-3246: Minor cleanup in the Derby JUnit classes - removal of unused imports.
Patch file: derby-3246-1a_unused-imports.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601306 13f79535-47bb-0310-9956-ffa450edef68"
1f2a256dd2dd96ddf9df65acb81fba02922ffe21,"DERBY-2998: Use utility methods for statement creation in OLAPTest,
and don't lower lock timeouts.

Patch contributed by Thomas Nielsen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601309 13f79535-47bb-0310-9956-ffa450edef68"
25e562cca73de15213a7b25e6329363d682e19aa,"Fixed typo


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601311 13f79535-47bb-0310-9956-ffa450edef68"
35452cf3f10c0abe13496ed72e778054998951c4,"Derby-3206: Replication: Add various commands from master to slave
            using the replication network connection. 
Contributed by Narayanan. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601331 13f79535-47bb-0310-9956-ffa450edef68"
41514afecacaa8fcc46071a8c8a53e28cd18fc26,"DERBY-3246: Removal of unused imports.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601336 13f79535-47bb-0310-9956-ffa450edef68"
d51a6d79891e54854d9fe6b14465b079c4670cdb,"DERBY-3217: ErrorStreamTest failing on ibm j9 jvm
Patch file: 3217-diff 
Patch contributed by Vemund Ostgaard


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601361 13f79535-47bb-0310-9956-ffa450edef68"
e836c591a9144225377d1b81722c1dda08616339,"DERBY-3247 Mark the activations for dynamic result sets as single use once they are returned to the applications JDBC statement. Ensures that the close of the ResultSet will close the activation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601386 13f79535-47bb-0310-9956-ffa450edef68"
24e3f7e93c8df4ffb5addb8c35416d515d65dde5,"DERBY-3049 Remove final traces of language ResultSet.getResultDescription(). Method was being removed as the result description was not specific to the ResultSet and thus was confusing. The ResultDescription is specific to the statement and is available through the activation or prepared plan.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601395 13f79535-47bb-0310-9956-ffa450edef68"
a3a55b3ac4382774d490e4f0d970b6b9cdb43c2e,"DERBY-3129: Add another demo vti; this turns a flat file into a one-column table whose rows are just the lines in the file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601492 13f79535-47bb-0310-9956-ffa450edef68"
b725412c3d667891b55740b051707be7a665fba9,"DERBY-3190 ; fix tiny mistake in simplemobile demo readme.html.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601515 13f79535-47bb-0310-9956-ffa450edef68"
d8bdc4cbc5ff2144b7a635cdc417c39e364a51e3,"DERBY-2911 (partial) Implement a buffer manager using java.util.concurrent classes

Add functionality to shrink the cache when it has grown bigger than
its specified maximum size.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601680 13f79535-47bb-0310-9956-ffa450edef68"
a660147e652b072893aa9ab317e7e1d48796d222,"DERBY-3037

This commit makes sure that EmbeddedResultSet.close() calls Language Resultset.close rather than Language 
Resultset.finish. This change caused few tests to fail. The tests had runtime statistics on but the code to dump 
the runtime statistics was in Language Resutlset.finish and not in Language Resultset.close. To fix this, I have 
moved the code to dump runtime statistics from Language Resutlset.finish into Lanugage ResultSet.close This has 
fixed the test failures. 

As for the 2nd part of this jira entry which is to have activation.close() call Language Resultset.finish(). This
already happens in impl.sql.execute.BaseActivation.close() and hence no work was needed for the 2nd part.

Will merge this change into 10.3 codeline soon.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@601830 13f79535-47bb-0310-9956-ffa450edef68"
b24134e65aed4aec5aa8de74b01fba1f0b120319,"Cleanup jdbcapi.ProcedureTest to use utility methods and not use usingDerbyNet in its suite() method. Add a utility method to JDBC to drain a result set and assert it contained at least one row.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602185 13f79535-47bb-0310-9956-ffa450edef68"
343bc346033151a98ab299232845cad4ae52fb17,"Cleanup jdbcapi.CallableTest to use utility methods and not use usingDerbyNet in its suite() method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602187 13f79535-47bb-0310-9956-ffa450edef68"
3078764380300331af574de11d25364a43dad50b,"Make jdbc.DriverTest fixtures non-static as is the norm.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602190 13f79535-47bb-0310-9956-ffa450edef68"
e55cf9a8bb54e613a33f0c868588803f4f381cf9,"Remove some dead code in derbynet.SSLTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602201 13f79535-47bb-0310-9956-ffa450edef68"
5008de7bf9331e45bc05a25bf02ba96df8c1847f,"Remove some dead code in DerbyNetNewServer.java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602204 13f79535-47bb-0310-9956-ffa450edef68"
49c16da396903a781a326455ecdec7ced2db5964,"Cleanup NetworkServerTestSetup to use utility methods when setting and reading system properties which will ensure the code works with a security manager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602206 13f79535-47bb-0310-9956-ffa450edef68"
3450bb7e98c6e0637a5e6f63371617ebc532a007,"Minor cleanup in BaseTestCase to get the current test configuration once instead of twice from the thread local.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602208 13f79535-47bb-0310-9956-ffa450edef68"
ac7d8901e6f6a618359ab9cfea32e0f2e1c281b5,"TestConfiguration.start/stopNetworkServer indicated they use the server defined by the current configuration, but they didn't. Changed the code to use the utility method provided by NetworkServerTestSetup to obtain a NetworkServerControl configured to the current configuration.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602213 13f79535-47bb-0310-9956-ffa450edef68"
29c10e34d0988521a38c30a202ec7af121f8a58e,"DERBY-3198: Using setQueryTimeout will leak sections
Patch file: derby-3198.v6.diff
Introduce a separate varable to track the Section object used by 
writeSetSpecialRegister. The Section is allocated on demand and freed 
when the Statement is closed or reset.
Adds a new test case to StatementJDBC30Test to catch future regressions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602495 13f79535-47bb-0310-9956-ffa450edef68"
5b2b352af9f40aa884d538e301a4405a9a2685b5,"DERBY-1585 For a CALL statement that generates dynamic result sets add code so that the result sets are closed if they are inaccessible following the SQL Standard.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@602991 13f79535-47bb-0310-9956-ffa450edef68"
048eb34b71f59e90957b856bfe85199c6dd3ec4f,"DERBY-1585 Remove meaningless comment 'if b'.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603030 13f79535-47bb-0310-9956-ffa450edef68"
433c058ea66703ed75b73f3cfcac66ab11454187,"Add some comments to NetworkServerTestSetp and change one constructor so that it no longer incorrectly implies that it can start the network server within the same virtual machine.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603088 13f79535-47bb-0310-9956-ffa450edef68"
864d9d119323b2da24e1bd11664cf7fd7ff40649,"Derby-3064: Patch that handles the integration of the log shipper and the master controller.
Contributed by Narayanan.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603260 13f79535-47bb-0310-9956-ffa450edef68"
bf9ee9ff30c8e096e22995b4b79cec577d6518ad,"DERBY-3264 Update status with 10.3.2.1 release



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603301 13f79535-47bb-0310-9956-ffa450edef68"
5faf131d7f59fe8125d385f000c8af8c74bd5478,"DERBY-3244

In the case of a wait for a latch while traveling left at leaf level, and
a subsequent wait for either a lock or another latch while looking for row
to lock then one path through the code would get a null pointer.  The code
was trying to release a latch that had already been released and was tracked
by ""current_leaf == null"".

I could not get this to fail in my environment, but did force it by code
inspection and changing the path through the code by hand to mimic latch
waits.  My assumption is that intermittently on some platforms this single
threaded test is competing for these latches with background deleted row
cleaner thread, probably on a fast multiple processor machine.

-

M    java/engine/org/apache/derby/impl/store/access/btree/index/B2IRowLocking3.java
M    java/engine/org/apache/derby/impl/store/access/btree/BTreeLockingPolicy.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603375 13f79535-47bb-0310-9956-ffa450edef68"
45c4ca4ab5fed097ecba2101adb14c6e323039a9,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes

Release the ReentrantLock on the CacheEntry while the identity of the
Cacheable is being set. Otherwise, we may run into a deadlock if the
Cacheable's setIdentity() or createIdentity() method accesses the cache.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603491 13f79535-47bb-0310-9956-ffa450edef68"
87fd70221c3f4ca0d63ba4699a843b44f235b6b5,"DERBY-3214: Account for loss of precision that can occur when very
large cost estimates are added to, and then subtracted from, relatively
small cumulative estimates during Optimizable ""pull"" processing.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603659 13f79535-47bb-0310-9956-ffa450edef68"
7e374135c0e4e42b2dc6406b54cd015f34d6ca44,"DERBY-3261 and part of DERBY-3037

The outerjoin.sql was failing because the part of the runtime statistcis info was getting erased before
LanguageResultSet.close() code collected it all. I moved the erasing of runtime stat code so that it happened
once the stat was collected successfully.

In addition, I removed redundant code of closing and finishing the LanguageResultSet from EmbedResultSet.java
because these steps happen as part of activation.close

I will merge this into 10.3 codeline and fire the tests there.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603823 13f79535-47bb-0310-9956-ffa450edef68"
761f2b8636a98969dfb6cc6acfb279ad8c6d028a,"DERBY-2484: change test fixture testNoUserDDLOnSystemTables to use
assertStatementError instead of try/catch blocks.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603855 13f79535-47bb-0310-9956-ffa450edef68"
71b56308eff6f2679028d7c78af33ee46512f7a0,"DERBY-3231: Sorting on COUNT with OR and GROUP BY delivers wrong results.
Patch contributed by: Manish Khettry.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@603954 13f79535-47bb-0310-9956-ffa450edef68"
9696c22c09e306621d6c1ab1435897581e7c0c31,"DERBY-3238 Add test cases when the lob columns are referenced and referenced multiple times.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@604042 13f79535-47bb-0310-9956-ffa450edef68"
65eb19ad45caeeacc26ac8cb2d47372d8a701e69,"DERBY-3273 convert derbynet/testconnection.java to junit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@604074 13f79535-47bb-0310-9956-ffa450edef68"
5928aa310e2c76a086faf6ad060395a7ee864191,"DERBY-3273: Remove testconnection from derbynetmats.runall and j9derbynetmats.runall


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@604123 13f79535-47bb-0310-9956-ffa450edef68"
d7a1ddda47f785b69c4aa3cd069f9cad9396ce07,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes

Use the initialSize parameter that is given to
CacheFactory.newCacheManager() to specify the initial capacity of the
ConcurrentHashMap in ConcurrentCache and the ArrayList in ClockPolicy.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@604153 13f79535-47bb-0310-9956-ffa450edef68"
86ba91080d69946a321fec426e7c1f82c5895447,"Fixed broken html tag


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@604432 13f79535-47bb-0310-9956-ffa450edef68"
c741a20a00c3162b1c7c7223abaf6223bb754ee7,"DERBY-3214: Follow-up patch to fix a bug in the first commit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@604513 13f79535-47bb-0310-9956-ffa450edef68"
b4d1d9c8cd327d69108634b8e375f2eeb12c6950,"DERBY-3280: Poor distribution of hash values from RecordId.hashCode()

Auto-generated RecordId.hashCode() and PageKey.hashCode() with
NetBeans so that they return values distributed (more) evenly over the
whole 32-bit range.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@604818 13f79535-47bb-0310-9956-ffa450edef68"
ad72a2b54c859696bc300ee9268489b15eed3e5c,"DERBY-3242: ij doesn't understand bracketed comments

Fix contributed by James F. Adams.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@604871 13f79535-47bb-0310-9956-ffa450edef68"
0f4ab9103ea0c4dde7b95368fec0165ed8ff2bcf,"DERBY-3037

EmbedStatement.executeStatement at line 1276 was calling finish rather than close on the Language Resultset. I fixed
that to make a call to close. In addition, I also had to move the code for collecting the stats from finish to
close method in NoRowsResultSetImpl.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@604976 13f79535-47bb-0310-9956-ffa450edef68"
b860e32f90bfa2d36de98d7166ac76c2486e8212,"DERBY-3117: Make the new automatic property setting the default behavior of the Derby build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@605224 13f79535-47bb-0310-9956-ffa450edef68"
88ff3fa91142fa1690be0cb58d9ba3702da4a12e,"DERBY-2760: Clean-up issues for UTF8Util.java. Added tests. Added internal result-holder class to UTF8Util.
Patch-file: derby-2760-2b-inner_class.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@605531 13f79535-47bb-0310-9956-ffa450edef68"
0f8eece11dec431156c62725d4fcfaf9bde2a921,"DERBY-3235: Implement the replication stop functionality.
Contributed by Narayanan.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@605556 13f79535-47bb-0310-9956-ffa450edef68"
019c40a89896e6642767a4d9e86b2c8270f9bfd8,"Followup to DERBY-3235: Fix Javadoc to reflect that stopMaster no longer throws exception.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@605595 13f79535-47bb-0310-9956-ffa450edef68"
32edb61bd5e90f1546ae84751163b93734b4f7ab,"DERBY-3253: Fix NPE for IN list operator when the probe predicate is
pushed into a subselect but then multi-probing does not occur.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@605616 13f79535-47bb-0310-9956-ffa450edef68"
06c6a70030c72f78093a4f3f94d35ee99afd7230,"Followup to DERBY-3211, addressing some review comments.

Patch contributed by Manjula Kutty.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@605719 13f79535-47bb-0310-9956-ffa450edef68"
49e9a9bb42b6cae0b7c4e5f4de3ac8df686da844,"DERBY-3037
With this commit, I am removing the Language Resultset.finish from AlterTableConstantAction. In addition, since
what's being created in this part of AlterTableConstantAction is a single use activation it should be closed when 
its language Resultset is closed. In order to achieve that, I have added following code in NoRowsResultSetImpl.close
to take care of the activation 
+ if (activation.isSingleExecution()) 
+ activation.close(); 

The derbyall and junit tests have run with no problems. Will merge this into 10.3 codeline later.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@606106 13f79535-47bb-0310-9956-ffa450edef68"
496d935454be6cf5601a4e3cde2484e8f0410ca5,"DERBY-3117: Commit changes to build instructions to accompany the change in default build behavior effected by 605224.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@606323 13f79535-47bb-0310-9956-ffa450edef68"
6424aac5f49cad8bbd5358d01d7f2d30908f43e5,"Fixed javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608039 13f79535-47bb-0310-9956-ffa450edef68"
e621aee20118c7a4af1d6454b9679d8462d3bb2e,"DERBY-3250 : making NetworkServerTestSetup using a Runtime.exec(String[]) rather than Runtime.exec(String) to prevent trouble with spaces in arguments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608140 13f79535-47bb-0310-9956-ffa450edef68"
c458b05c2dd90e3918d0ffe1285f8f390b95347d,"Contributed by Jorgen Loland (DERBY-3184): I encountered a few bugs while working on a new implementation of the Database interface. The attached patch fixes these bugs, which are all part of the replication functionality and is not in use in non-replicated databases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608419 13f79535-47bb-0310-9956-ffa450edef68"
a7db9dfa35295238a908ebfe7858318102ad922b,"DERBY-2359: Code cleanups for the org.apache.derby.impl.store.access.* packages. Removed a self-assignment and an unused variable.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608466 13f79535-47bb-0310-9956-ffa450edef68"
d1e9d3cb61dcb55077d34f7aec8df5ad6526ed69,"DERBY-2775 (partial) Remove one use of DataTypeDescriptor.setNullability() that was not required. Nullabilty was being set for system columns that needed to be upgraded in old databases from an incorrect value. Using the nullability of the original definition is already correct and avoids redundant setting. Changed the name of the method as it is now a generic fix a system column rather than being specific to nullability. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608580 13f79535-47bb-0310-9956-ffa450edef68"
177c065c86af8e0fb81159f37b65e248c38f7bdb,"DERBY-3088 - initial conversion of testProperties to ServerPropertiesTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608633 13f79535-47bb-0310-9956-ffa450edef68"
89a3e2b210306de8a41fcfd021bc2ae466ca1326,"Clean up CommentTest to not use a field to hold a Statement object (no need).
Also to use assertCompileError() instead of assertCallError() since that's actually what it being tested (a compile failure). This meant checking for the correct SQL state, not an incorrect one, this was previously hidden by a bug in assertCallError().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608688 13f79535-47bb-0310-9956-ffa450edef68"
20a900f0bac77798e1b52111d96f620c8a47a81c,"Fix bug in assertCallError() that did not validate the SQL state for the expected exception and change assertCallError() to be non-static and use the default connection and thus be inline with other similar methods such as assertCompileError().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608690 13f79535-47bb-0310-9956-ffa450edef68"
7aea8a06af36327ba83a1f9a98e42dd4a371fa50,"Clenaup CollationTest to use more of the utility methods rather than duplicating functionality.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608702 13f79535-47bb-0310-9956-ffa450edef68"
73f04f39d069c4c2ff711f486cd8e42c3c6c3b8f,"DERBY-3088 - adding the test ServerPropertiesTest failed in the Tinderbox; commenting out in derbynet._Suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608709 13f79535-47bb-0310-9956-ffa450edef68"
80a3a909bf3d281bda2355b2d3ad3b279168e55b,"DERBY-2775 (partial) Remove unused DataTypeDescriptor parameter in uniqueSpecification method in SQL parser.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608898 13f79535-47bb-0310-9956-ffa450edef68"
b25481fa024ab11ea427be60cd66f249bbeaf7ea,"DERBY-2775 (partial) Add a method to obtain an logically immutable DataTypeDescriptor based upon a DataTypeDescriptor but with different collation settings. Add setCollationInfo methods in ValueNode to change its collation settings and hence its (soon to be) immutable data type. Use ValueNode.setCollationInfo for the simple cases where a node's collation is set from another type.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608901 13f79535-47bb-0310-9956-ffa450edef68"
4268858f9f0fa458836c9515f534c9be999f2bab,"fix javadoc warning resulting from cleanup of revision 608702


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608965 13f79535-47bb-0310-9956-ffa450edef68"
bd66456946d7b6dd256d7795e66bbe8fa8371702,"DERBY-2775 (partial) Remove a couple of cases where DataTypeDescriptor.setNullability() was being called and replace with the immutable DataTypeDescriptor calls.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@608966 13f79535-47bb-0310-9956-ffa450edef68"
85253df22a8fcf8d11245c0a5ae7eb3dddcf8815,"Improve CollationTest2 to use the existing decorator to create territory collated databases rather than having multiple mechanisms to create such databases. This will then allow the test to use the standard utility methods rather than duplicated standard code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@609020 13f79535-47bb-0310-9956-ffa450edef68"
53ce71e9fc394b5061077b5f9b2d9eb09095182d,"DERBY-2661 (partial) Move getting of the run time statistics factory from the ExecutionContext to the ExecutionFactory. Remove the LanguageConnectionContext.getExecutionContext() method as it is no longer used.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@609053 13f79535-47bb-0310-9956-ffa450edef68"
04db16002ba65a55b7619fabcaef691ef84558c9,"DERBY-2359: Code cleanups for the org.apache.derby.impl.store.access.* packages. Removed unused method init(), removed unused import, removed variable and fixed a little JavaDoc.
Patch file: derby-2359-4a-OpenConglomerateScratchSpace.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@609543 13f79535-47bb-0310-9956-ffa450edef68"
57a0040e773fc478202a35237ebcf97b9f0f4d6e,"DERBY-2359: Code cleanups for the org.apache.derby.impl.store.access.* packages. Removed unused argument from method getDynamicCompiledConglomInfo in interface
Conglomerate.
Patch file: derby-2359-5a-Conglomerate_API_change.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@609558 13f79535-47bb-0310-9956-ffa450edef68"
aa9d3d86a8bd71fc2a290bcae46d235c8e7503e6,"DERBY-3149 change javac executable to build with jdk16 since compilepath is jdk16.  Ultimately this should be jdk15 once the infrastructure to specify a jdk15 build is in place.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@609800 13f79535-47bb-0310-9956-ffa450edef68"
47cbf26e40f5649370a3d1928a197dede86a3785,"DERBY-1368 EOFException when reading from blob's binary stream

This patch just adds a  test. Bug was fixed previously with 10.2. I am not sure exactly which checkin fixed it.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610094 13f79535-47bb-0310-9956-ffa450edef68"
84eabadb68cb8d2ebe7df775b03fd554bd34ea2d,"Minor addition of testing to ProcedureTest to assert the return value from Statement.getMoreResults including adding a new utility method JDBC.assertNoMoreResults.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610108 13f79535-47bb-0310-9956-ffa450edef68"
a66fdc1ac99599c9b240fddbef517c3a0a3e230b,"Add additional test to ProcedureTest that tests a procedure call within a procedure call, the outer returning the dynamic result sets of the inner.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610184 13f79535-47bb-0310-9956-ffa450edef68"
f62cb688bdc6b02e1939a97d357e62eb881f7ea5,"DERBY-3305 Ensure that a processing a ResultSet into a dynamic result marks the application statment result set as the correct one, based upon the statement the result set is transferred to. Add asserts to jdbcapi.ProcedureTest to check that ResultSet.getStatement returns the correct Statement object.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610238 13f79535-47bb-0310-9956-ffa450edef68"
c943ab326d7f3eb78cdbeec7cc6070b6272662f1,"Cleanup CollationTest2 to use utility methods to make it clear it is a simple single connection test (for each fixture). Includes adding a utility method to BaseJDBCTestCase to read a database property.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610244 13f79535-47bb-0310-9956-ffa450edef68"
edab7252751eb37691f47ed887cce4aff7443e07,"DERBY-3117: Added section about j15lib in build instructions for ant.properties.
Patch file: derby-3117-08a-j15libBuildingInstr.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610304 13f79535-47bb-0310-9956-ffa450edef68"
9e06fd5e7cb72adbb54f2badee0b2a684006fae2,"DERBY-3149: Add ant targets for building and running the package private tests against the classes directories. Made the targets compile against Java SE 5.0 libraries.
Patch file: derby-3149-4a-compile_against_15_libraries.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610358 13f79535-47bb-0310-9956-ffa450edef68"
cc3806501fd739f4e372ffcd4d813a5e8ce1ae44,"DERBY-3309: Removed unused imports in ClientPooledConnection40.
Patch file: derby-3309-1a-unused_imports.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610404 13f79535-47bb-0310-9956-ffa450edef68"
0c60857246e9b547a76a7a6ecb2e259260a413a9,"DERBY-2733 ; adding update() to the non-arg constructor, similar to what's happening in ReferenceableDataSource/EmbeddedDataSource, so the NPE doesn't occur because jdbcurl gets a default value. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610484 13f79535-47bb-0310-9956-ffa450edef68"
6a375dd3fe43a4dfbea8305198862f79bed9641e,"DERBY-3305 Add an additional assert in ResultSetTest to ensure the ResultSet.getStatement() matches the Statement that executed the CALL for dynamic result sets.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610500 13f79535-47bb-0310-9956-ffa450edef68"
9460d4cc9b898845c9772a5266b9cf4f574f9410,"DERBY-3302 The user was running into null pointer exception at the time of database recovery
because Derby was trying to get the Collator object through database context. But the 
Collator object is already available in the territory sensitive character classes and we
do not have to go to database context to get it. I changed the code to use that collator 
object rather than look into database context. The reason for null pointer exception was 
that database context was not loaded yet during database recovery.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@610846 13f79535-47bb-0310-9956-ffa450edef68"
669492d570100a818463a07d96fbcd2171f1ad06,"Cleanup unnecessary check in DRDAConnThread.writeSQLCINRD() and remove code that fetched the prepared statement but never used it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@611272 13f79535-47bb-0310-9956-ffa450edef68"
00b43c19c2967d0db68379a5bd407c1683feeb76,"Adding a test case for DERBY-3302. There are two sub-test case classes involved here,
col_rec1.java and col_rec2.java

The purpose of col_rec1 test and col_rec2 test is to create a territory based database and 
create some objects with collation sensitive character types. Then, make the database crash 
so that during the recovery, store engine has to do collation related operations. Those 
collation related operations are going to require that we use correct Collator object. 
DERBY-3302 demonstrated a npe during this operation because Derby was relying on database 
context to get the correct Collator object. But database context is not available at this 
point in the recovery. With the fix for DERBY-3302, the Collator object will now be 
obtained from collation sensitive datatypes itself rather than looking at database context 
which is not available at this point in recovery. 

col_rec1 class will do the steps of create a territory based database and create some 
objects with collation sensitive character types. Then, make the database crash. 
col_rec2 class will do the part of rebooting the crashed db which will require store to go 
through recovery.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@611295 13f79535-47bb-0310-9956-ffa450edef68"
836ab975815fdb85a6c0f8efbf612656d6dc818a,"DERBY-3184: Replication: Connection attempts to a database in slave mode must fail (Contributed by Jorgen Lovland)
The attached patch, v2a, adds a new implementation of Database to Derby. The new implementation is called SlaveDatabase and is booted if startSlave=true is specified in the connection url. The following files are modified:

A java/engine/org/apache/derby/impl/db/SlaveDatabase.java
M java/engine/org/apache/derby/modules.properties

The new Database implementation ""SlaveDatabase"" to Derby.

M java/engine/org/apache/derby/impl/db/BasicDatabase.java

Removed the old ""if (inReplicationSlaveMode) throw exception"" code. This is now handled in SlaveDatabase.

M java/engine/org/apache/derby/impl/store/raw/log/LogToFile.java

Adds slave replication pre mode

M java/engine/org/apache/derby/iapi/services/replication/slave/SlaveFactory.java

Minor changes

M java/engine/org/apache/derby/impl/services/monitor/UpdateServiceProperties.java

Make StorageFactory volatile to make sure concurrent threads detect that it is set.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@611759 13f79535-47bb-0310-9956-ffa450edef68"
66149fa01c503c117415b4c28fcd7ca8c110e444,"DERBY-3309: Minor cleanups in ClientPooledConnection40 and ClientPooledConnection. Removed unused constructor.
Patch file: derby-3309-2a-remove_unused_constructor.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@611841 13f79535-47bb-0310-9956-ffa450edef68"
54be3b4c89369f0e118949e79ef33e66973f90e4,"DERBY-3189: Replication: Add connection url command option for stopping master (Contributed by V Narayanan)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612081 13f79535-47bb-0310-9956-ffa450edef68"
9f04bd3a949e646b0b8c9ca867280109f519adb7,"DERBY-3294 - convert test checkToursDB to junit CheckToursDBTest. 
   Patch contributed by Manjula Kutty.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612218 13f79535-47bb-0310-9956-ffa450edef68"
3abb572200ca5b6de497c3557fd88bbaf8abb971,"DERBY-3316  Leak in client if ResultSet not closed

The leak was in SectionManager.positionedUpdateCursorNameToResultSet_ which kept a reference to the ResultSet so it wouldn't get garbage collected. The solution was to use a WeakReference to the ResultSets in positionedUpdateCursorNameToResultSet_ so that they can be garbage collected.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612262 13f79535-47bb-0310-9956-ffa450edef68"
2d2911ea150fbee54652132ecd1f3fd22f92d85a,"DERBY-3023: When remapping column references to their underlying expressions
during Derby preprocessing, make sure that a ColumnReference whose source
expression is a virtual column sets its column position based on the virtual
column id (instead of basing it on the column's position in the base table).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612504 13f79535-47bb-0310-9956-ffa450edef68"
111785f14c0c86da8d2cb567c125370b31a5e644,"DERBY-2720 and DERBY-3315
Removing the disabled national character related code. This will make it easy to maintain
the territory based code.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612525 13f79535-47bb-0310-9956-ffa450edef68"
982c61c85988325cd987d1da6f3350796c33f42e,"DERBY-2674 - remove some final references to jdbc40 suite


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612531 13f79535-47bb-0310-9956-ffa450edef68"
b1c5a643113cbdb85e4bc379c4dc354f165b6eb4,"DERBY-3294 - put simpledemo (which was only thing left in demo.properties) in derbyall.properties 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612536 13f79535-47bb-0310-9956-ffa450edef68"
044179c39f78d912b7fb6e01d3483e1062bc3130,"DERBY-3088 - improvements to ServerPropertiesTest and related changes - adds 
  an assertExecJavaCmdAsExpected method to BaseTestCase.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612684 13f79535-47bb-0310-9956-ffa450edef68"
57efc9fab6e92ca5ff810bd02388b9502f0bc89d,"DERBY-3088 commenting out the print in NetworkServerTestSetup again


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612685 13f79535-47bb-0310-9956-ffa450edef68"
a5c9ae819d4e7648c30b8390d1c5b5e99dd0d5a5,"replacing the gif files used in the MAPS table in toursdb example database.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612827 13f79535-47bb-0310-9956-ffa450edef68"
fca5be58fb8679d19b258277cab2b1a3f8880886,"DERBY-3230 Selecting data from a Table raises Error XN008: Query processing has been terminated due to an error on the server

The solution was to move the retrieval of all of the data associated with the QRYDTA before the ResultSet is marked as closed on the server. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612849 13f79535-47bb-0310-9956-ffa450edef68"
0ea561ac44c6c1608e6f83bf3cf557df59a3f47e,"While working on DERBY-2720, I removed national datatypes as one of the unsupported data
types(revision 612525) and that caused the test failure for SetObjectUnsupportedTest since 
we stopped recognizing national dataypes as one of the unsupported datatypes. The fix 
required changes in only one class which I had modified incorrectly in revision 612525.
This test failure was not caught earlier by my local runs of the test because I had used
JDK14 which has JDBC3 support and this paritcular test requires JDBC4 support. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612865 13f79535-47bb-0310-9956-ffa450edef68"
a720567364b581a4b70bfdc5271a40c0a1b77d62,"further adjustment of toursdb test after replacing gif files.   


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@612960 13f79535-47bb-0310-9956-ffa450edef68"
813a7fd547d618143bb17d5d2bd3bba7eac2c351,"DERBY-3205: Implement connection url attribute for starting slave. 
(Contributed by Jorgen Loland)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@613097 13f79535-47bb-0310-9956-ffa450edef68"
2a31ed91e0cfdf53367f907ec62c14a2185359a3,"DERBY-3221: &quot;java.sql.SQLException: The conglomerate (-5) requested does not exist.&quot; from Derby 10.3.1.4 embedded within Eclipse 3.3 and RAD 7.0
Patch file: derby-3221.v3.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@613116 13f79535-47bb-0310-9956-ffa450edef68"
d6209a80ac5e53d27bd4157202f6397ca6b6c250,"DERBY-3311: Client ResultSet.getHoldabilty will return incorrect value when the ResultSet is obtained from a procedure call
Patch contributed by Daniel John Debrunner
Patch file: derby_3311_diff.txt 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@613169 13f79535-47bb-0310-9956-ffa450edef68"
160d3953e754ac17ea98dfaa83d3050f57fdfcf8,"DERBY-3294 - returning empty test suite for JSR169 with CheckToursDBTest because
  test tries to call PreparedStatement.setBigDecimal which is not supported in
  that environment.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@613201 13f79535-47bb-0310-9956-ffa450edef68"
28e643f6c7ebb5fd3e55b5f2a69e8c85001c2b85,"DERBY-3323  ComparisonFailure in derbyStress

The test intentionally does not close ResultSets to test for a leak, but this 
was causing an error dropping the table. Changed the test to close the last ResultSet and gc() to avoid the drop table error.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@613275 13f79535-47bb-0310-9956-ffa450edef68"
3cea1b98c7cd3ce3a6bdfaef9d0c443f285a457d,"DERBY-3336 jdbcapi/derbyStress.java no longer runs with low memory heap so does not provide testing for leak scenarios

Moved the test back to derbyall, so it will run with 64MB heap. 
Ran derbyall and JDBCHarnessJavaTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@613318 13f79535-47bb-0310-9956-ffa450edef68"
3b7ed34c6d76b2f92c2739393104c79d545d2e0e,"Add a simple ""test"" that displays (as fixture names) some of the environment checks that the Junit tests uses, such as JDBC.vmSupportsJDBC3. Add this to suites.All.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@613333 13f79535-47bb-0310-9956-ffa450edef68"
387d1fb4395b3e09b4c46ca4c5d2e4633ad1133f,"DERBY-3260: NullPointerException caused by race condition in GenericActivationHolder

Hold the synchronization lock on the GenericPreparedStatement until
the activation class has been retrieved. This prevents other threads
from setting the activation class to null before we have retrieved it,
and thereby prevents the NPE.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@613815 13f79535-47bb-0310-9956-ffa450edef68"
d159b2e31a13292ecea8bcd43ec0866bee8bcc55,"DERBY-3235: Stop LogShipper when Master is stopped.  Contributed by V Narayanan


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@613866 13f79535-47bb-0310-9956-ffa450edef68"
2e556fe3d03142a5e9ee48f7e0849e7d9d813049,"DERBY-3257 SELECT with HAVING clause containing OR conditional incorrectly return 1 row - should return 2 rows - works correctly with 10.2 DB

Normalize the havingClause before calling preprocess.  This made it necessary to explicitly exclude having subqueries from flattenning, before they were implicitly excluded because the clause was not normalized. Army Brown contributed the main part of the fix to normalize the having clause.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614017 13f79535-47bb-0310-9956-ffa450edef68"
99d7d8b345483aee04eb75af567cef72ac43dfb7,"DERBY-3327 SQL roles: Implement authorization stack

Patch DERBY-3327-3 which implements the authorization stack for SQL roles.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614071 13f79535-47bb-0310-9956-ffa450edef68"
f717f7995c12070e67af09db2809e07ea9806260,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-uuid adds a UUID column to SYS.SYSROLES. The new column is needed for 
implementing persistent dependencies on role definitions and grants.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614273 13f79535-47bb-0310-9956-ffa450edef68"
59678316dec3403a8a43f29c0b228c019b4a8946,"DERBY-3233 ComparisonFailure in derbyStress

Change test to close connection to ensure all result sets are closed before dropping the table.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614277 13f79535-47bb-0310-9956-ffa450edef68"
039b8cdfc433993e76ecb97e80e05ff982f88471,"Adding a junit test for the standalone test case provided by Dag for DERBY-3304. Here, we 
are adding a Java procedure which does a commit and then returns a resultset back to the 
caller. The resultset should not get closed as part of the commit.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614292 13f79535-47bb-0310-9956-ffa450edef68"
f7850aebdefa5441b3451ffd40d2b44442baa6fb,"DERBY-3340: Add debug target to Netbeans 6.0 project file.
Patch file: d3340-1.diff

Patch contributed by Thomas Nielsen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614445 13f79535-47bb-0310-9956-ffa450edef68"
0217bc63abfc32524460a5a2db818f73601a745e,"DERBY-3254: Implement the replication failover functionality.  Contributed by V Narayanan


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614514 13f79535-47bb-0310-9956-ffa450edef68"
e5b0435feea700a5c75a1e5a447e74c6c406988b,"DERBY-3308: Broken synchronization for event handling in ClientPooledConnection40.
Patch file: derby-3308-1b-eventlisteners_synchronization.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614536 13f79535-47bb-0310-9956-ffa450edef68"
696377a1135ffe62b2cb75dd69c5ea2f9450f6b5,"DERBY-3184: Add error handling to SlaveDatabase. Contributed by Jorgen Loland



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614549 13f79535-47bb-0310-9956-ffa450edef68"
cdb51b5032c506e658b0162127de24c5ed7ce050,"DERBY-3050: Convert groupBy.sql to JUunit

This change modifies GroupByTest.java to include the various GROUP BY
tests which were formerly contained in groupBy.sql. The change also
deletes groupBy.sql and its master files.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614596 13f79535-47bb-0310-9956-ffa450edef68"
92736e1c14aa56e761f084aa350c84aed4364450,"Add checks to the JUnit utility methods in JDBC that process ResultSets to ensure that if a ResultSet column is returned as SQL NULL then the ResultSetMetaData for the column allows NULLs

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614745 13f79535-47bb-0310-9956-ffa450edef68"
c0a8467f03a73139a3017386d3e7f23976c9dce5,"DERBY-3068 testImportExportProcedureNegative(org.apache.derbyTesting.functionTests.tests.tools.ImportExportProcedureTest)junit.framework.ComparisonFailure: Unexpected SQL state. expected:<38000> but was:<XIE0S>

Changed unexpectedException in import to close the stream first.
Changed ImportExportProcedureTest to delete files immediately after the test instead of before the test that recreates the file.
Changed deleteFile to fail if it cannot delete the file.

Ran suites.All on IBM 1.5 3 times without errors, and on jdk16.  There may however still be a problem with import as I did see the unchanged test fail on IBM 1.5. With the new test structure it should be easier to identify the source of the problem if it happens again.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@614893 13f79535-47bb-0310-9956-ffa450edef68"
cda991b34c3f32eb7d178165d404201089cdf291,"Minor cleanup of DatabaseMetaDataTest:
1) Remove double running of two fixtures
2) Use DatabaseMetaData fields for scope in getBestRowIdentifier rather than 0,1,2
3) For a number of DMD calls move the code that was testing the shape of the returned ResultSets into the useful methods that get the JDBC & ODBC versions of the ResultSet. This puts the shape checking in one logical position and removes some amount of duplicated code where the asserts for the shape were called after the JDBC/ODBC utility method in many places.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@615080 13f79535-47bb-0310-9956-ffa450edef68"
f04dc447ad7595de991af088dd7eeb2b74e93f24,"DERBY-3327 SQL roles: Implement authorization stack

Some javadoc bugs fixed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@615109 13f79535-47bb-0310-9956-ffa450edef68"
28ce266374184d13134b7cf14f0f1a838783ea5c,"DERBY-3343: Subsequent calls to PreparedStatement cause SQLIntegrityConstraintViolationException on column that is ""Generated always""

Patch file: d3343.v3.diff

Modifies the logic in ResultColumn.getOrderableVariantType() so that it behaves
correctly even when a default column is explicitly mentioned in an insert statement.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@615203 13f79535-47bb-0310-9956-ffa450edef68"
b6594e1f4bedde97bd1c20c793edbd52a2a11ed3,"DERBY-3309: Minor cleanups in ClientPooledConnection40 and ClientPooledConnection. Documentation changes and additions in ClientPooledConnection.
Patch file: derby-3309-3a-cpc_documentation_changes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@615846 13f79535-47bb-0310-9956-ffa450edef68"
50ce77a9d4b3e978f873da866c00735ad5a50caa,"DERBY-3326: Introduce a caching logical connection and logical prepared statement in the client driver. This commit is a preparation step to allow for reuse of existing tests by adding a decorator that creates pooled connections with statement pooling enabled. Note that the decorator can be used even if statement pooling is not supported, as the current situation is for the embedded ConnectionPoolDataSource.
Patch file: derby-3326-1b_cpds_testing_preparation.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@615861 13f79535-47bb-0310-9956-ffa450edef68"
8e2a812e01f5bcfc2739041a6f341974b1eacbbc,"DERBY-3129: Improve vti which parses property files - don't choke on lines which don't have an = in them as occurs in the message properties for DRDA in 10.2 and 10.3.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@615953 13f79535-47bb-0310-9956-ffa450edef68"
e5ddb68698cccfa735a3554b99a280b1703c5b0d,"Partial cleanup of jdbcapi,jdbc4.DataSourceTest to use utility methods to obtain already configured data sources. The static database name field is not a correct approach since it will be set once when the class is loaded and thus incorrect if the test is executed in a decorator that changes then configuration. The utility methods return a correctly configured data source.
Clarify that the utility methods that return data sources return a new one.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616121 13f79535-47bb-0310-9956-ffa450edef68"
20bd3c03d9d5d3e1b255a057e924439f155d886d,"DERBY-3279: Add logic for execution-time sorting of IN list values
into DESCENDING order when required.  This is necessary when doing
IN-list ""multi-probing"" on some column C for which a DESC sort has
been eliminated (by the optimizer). In such a case the row values
will come back in the order in which they appear in the IN List,
which means the IN list values must themselves be sorted in the
correct (descending) order.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616126 13f79535-47bb-0310-9956-ffa450edef68"
e57849fb3a397b27948bf535cc157bcf7a263474,"DERBY-2142 NullPointerException while using XAConnection/PooledConnection in a heavily contended multithreaded scenario

core fix contributed by Asif Shahid with further suggestions from Dan Debrunner 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616141 13f79535-47bb-0310-9956-ffa450edef68"
1fd325f1f05e39fb96071e780f028f3befacc34f,"Partial cleanup of jdbcapi.DataSourceTest to reduce uses of the static field dbName which may hold the incorrect database name for the test by using the utility methods to get data sources which are correctly configured.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616171 13f79535-47bb-0310-9956-ffa450edef68"
fec3a1dec5f543646a7b8ddb4c9b19b4ae669343,"DERBY-2142 (test) Add a fixture (testPooledReuseOnClose) to DataSourceTest that tests the fix to DERBY-2142. It failed before revision 616141 and passed after for embedded, but fails for network client so it is disabled for that env.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616177 13f79535-47bb-0310-9956-ffa450edef68"
78944d578b3715b7af0a0f3bcaceea84384b77c6,"DERBY-3324: JDBC statement cache implementation. This is the core cache functionality for the JDBC statement cache feature. Nothing is enabled or used yet. Also note that the tests are not enabled.
Patch file: derby-3324-1e-jdbc_statementcache.diff 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616373 13f79535-47bb-0310-9956-ffa450edef68"
50a8c6260c2123dbe8bb5814395a9e298d0a2175,"DERBY-3350 Ensure that CAST inherits the nullability of its value expression since a cast of a non-null value is always not null. Changes the nullability of a number of JDBC DatabaseMetaData columns since many are derived from CAST expression in the SQL query that forms the result set.
Updated canons where the nullability changed, since if the column display size was less than four but nullable, ij would increase the display size to four to allow for NULL. Once such columns become not nullable their display size drops to less than four.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616473 13f79535-47bb-0310-9956-ffa450edef68"
221210c96a813679238da7be5332250a42493131,"Move the checking of the shape of DMD.getProcedure*() result sets into the code that generates them in DatabaseMetaDataTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616479 13f79535-47bb-0310-9956-ffa450edef68"
99682a294b3a07aeb8a5231a9714e065631212ff,"Minor cleanup in DatabaseMetaDataTest in some cases when the shape of an ODBC result set is different to that of JDBC. Rewrite the code to make the differences stand out rather than have the code reader try to mentally compare two arrays.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616489 13f79535-47bb-0310-9956-ffa450edef68"
b69adb546357daa0d82f5d322f9d965662efd7c3,"More cleanup in DatabaseMetaDataTest related to making the differences between odbc and jdbc result sets easier to see from the test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616504 13f79535-47bb-0310-9956-ffa450edef68"
fcc90e7f1868e068b481b0e96fda3693a4cdfc53,"Fix mistake made in commit for DERBY-3350 where DatabaseMetaDataTest was only run for embedded. The fix to DERBY-3350 exposes a couple of more columns that are incorrect due to DERBY-3171.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616514 13f79535-47bb-0310-9956-ffa450edef68"
4ea1420f2eb3368049346e9e41db59c8a3bc34e0,"adding the demo._Suite (added for DERBY-3294) to ant target junit-all


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616537 13f79535-47bb-0310-9956-ffa450edef68"
63e9d7484ab23f0e46c7921729a7128119640ac8,"Fix dml149.out master file, missed in commit for DERBY-3350, correct nullability after a CAST.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616565 13f79535-47bb-0310-9956-ffa450edef68"
7106c74ec208cf43f1416166ff04bd8d5b870730,"DERBY-2142 NullPointerException while using XAConnection/PooledConnection in a heavily contended multithreaded scenario

Update code comments.
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616575 13f79535-47bb-0310-9956-ffa450edef68"
a8452cff1ab3e066d2a098653b3babde38be079e,"DERBY-2760: Clean-up issues for UTF8Util.java. Added a few more tests to improve test coverage.
Patch file: derby-2760-3a-extra_tests.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616786 13f79535-47bb-0310-9956-ffa450edef68"
701af66dcf1f7ddd95f958140d71efb7c8d06ad1,"DERBY-2760: Clean-up issues for UTF8Util.java. Added 4 lines of comments, adding binary representations for the hexadecimal numbers.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616788 13f79535-47bb-0310-9956-ffa450edef68"
94ae668e29a56b3a69e6716e047e549526c1c456,"DERBY-3203: Convert jdbcapi/statementJdbc20.java to JUnit

This change deletes statementJdbc20.java and statementJdbc20.out. It is
a follow-on to revision 601058, which deleted all the content of those
files but didn't delete the actual files themselves.

Patch contributed by Ramin Moazeni (rmoazeni at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616834 13f79535-47bb-0310-9956-ffa450edef68"
7a361f26068bd59f55d596795e4363e17c870f31,"DERBY-2775 Remove last use of DataTypeDescriptor.setNullability() to make DTD's use immutable wrt nullability. Fixes DERBY-3346 and DERBY-3342 which were cases when a query was getting the incorrect nullability for some columns due to the mutability of DTD when shared across nodes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616853 13f79535-47bb-0310-9956-ffa450edef68"
f5efedc1d7a9afdaca8dfb74216bc2c69fa6a78e,"Add some test cases for nullability of the value from a CASE expression. One of the cases failed before revision 616853 for DERBY-2775.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616873 13f79535-47bb-0310-9956-ffa450edef68"
ae196bc4c6d7aabdf44ef049b5331fa80e3b6e57,"DERBY-2775 Remove setNullability methods on TypeDescriptorImpl and DataTypeDescriptor to make the types actually immutable wrt nullability.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616908 13f79535-47bb-0310-9956-ffa450edef68"
b8780802f969365d1d1d1f290c66bde24ed1d05a,"Complete the set of utility methods that return JDBC statements in BaseJDBCTestCase.
Ensure all the statement utility methods close the statement at teardown time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616924 13f79535-47bb-0310-9956-ffa450edef68"
0c8f7b8cd2dfc5c12b779e035739b3db7b8be1a5,"DERBY-3088 - (partial) follow up patch to convert testProperties to junit test
  ServerPropertiesTest.
  This change reworks the first fixture (ttestSetPortPriority) to take advantage
  of NetworkServerTestSetup; to do so there are changes to 
  NetworkServerTestSetup. Also modified method execJavaCmd in junit.Utilities to
  do something in addition to the assertExecJavaCmdAsExpected in BaseTestCase
  and made use if it.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@616982 13f79535-47bb-0310-9956-ffa450edef68"
2e54aa630cb4d97ed57914a580a8e1d1c3df7ada,"DERBY-3324: JDBC statement cache implementation. Removed trailing whitespace.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617095 13f79535-47bb-0310-9956-ffa450edef68"
45f24f8fbab7a8cfbd00fbcff2c70ad155d3b923,"DERBY-3324: JDBC statement cache implementation. Reordered some arguments in two methods for consistency. Update test accordingly.
Patch file: derby-3324-2a_argument_reordering.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617099 13f79535-47bb-0310-9956-ffa450edef68"
55570ef287623bfb91d3410b5113df473b72125a,"DERBY-3324: JDBC statement cache implementation. Fixed missing argument reordering from 617099.
Patch file: derby-3324-3a_argument_reordering_additional.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617110 13f79535-47bb-0310-9956-ffa450edef68"
9ed7c4dffcdf029e4fc1bbdf8ce266cc9cc7822a,"DERBY-2775 Make DataTypeDescriptor immutable by removing the set methods for collation type and derivation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617162 13f79535-47bb-0310-9956-ffa450edef68"
a065d09dbb9e6d2ac8c360c9cc7499f6fb81da05,"DERBY-3088 ; removing references to testProperties after conversion to junit
  test ServerPropertiesTest. Also removed checkToursDB from tools/release/build
  as it was converted to junit also (see DERBY-3294).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617168 13f79535-47bb-0310-9956-ffa450edef68"
036b3ed0d0b49c9c8700b71c29fa7b8b1f6826ba,"DERBY-3129: Make the property-file reading VTI handle continuation lines.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617170 13f79535-47bb-0310-9956-ffa450edef68"
456b8a1c54a3f0f035203f68d5e67ea0fd02e301,"DERBY-3365 Network Server stores a duplicate entry in the lob hash map for every lob

Change network server to use existing lob hash map entry instead of creating a second entry.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617186 13f79535-47bb-0310-9956-ffa450edef68"
42aa1d624d2eb839976de660468ac78439c0e2c0,"Remove upgrade test code that provided test cases for the PH_POST_HARD_UPGRADE phase, since in that mode the old database engine is being against the upgraded database and hence the connection will fail. (This is tested).
Added comments to the definition of PH_POST_HARD_UPGRADE indicating that no tests cases needed be added for it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617234 13f79535-47bb-0310-9956-ffa450edef68"
e3f85451d9fbaa765bcb4419fe4abef61a44a290,"Add the setting of derbyTesting.oldReleasePath to the name of the top-level suite returned by upgradeTests._Suite.suite(). Allows a quick check to see if the property is being picked up (if it isn't the tests run from the apache svn which can be slow).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617236 13f79535-47bb-0310-9956-ffa450edef68"
d66ce7bc3ca341dd6d64cdad0a6a5aab4ff6ce63,"DERBY-2917 (partial) Cleanup of code relating to row multi-set types (used as the return type for Derby's table functions.
1) Add methods to the api (TypeDescriptor) side to fetch information about the row's types and column names, rather than have all callers have knowledge of the type implementation.
2) Treat a row multi-set type as only a catalog type (TypeDescriptor). Runtime types only make sense for the types of the individual columns (when used in a query).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617238 13f79535-47bb-0310-9956-ffa450edef68"
4cdfc96a5e4374e6a89525a8beea5177c5146ddb,"An attempt to restore history for EmbedBlob.java after being replaced
rather than updated by check-in for DERBY-3365.

$ cd java/engine/org/apache/derby/impl/jdbc
$ cp EmbedBlob.java EmbedBlob.java.old
$ svn remove EmbedBlob.java
$ svn copy -r 617185 EmbedBlob.java .
$ cp EmbedBlob.java.old EmbedBlob.java
$ svn ci


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617294 13f79535-47bb-0310-9956-ffa450edef68"
5b20343abe5011bf81517108d6d34f47510e3d36,"DERBY-3357: Reduce runtime of jdbcapi.DataSourceTest. Reduced lock timeouts.
Patch file: derby-3357-1a-lower_lock_timeout.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617486 13f79535-47bb-0310-9956-ffa450edef68"
a8d30d780f8ee29ece61dd87fea4e96248e42f90,"DERBY-2559: recreating a datasource using javax.naming.Reference from a ClientDataSource40 fails. Incremental commit, which enables the factory to create all Derby (client) datasources. However, some mechanisms to avoid throwing exceptions must be added, for instance if a null object is passed. The test that was disabled has been enabled again.
Patch file: derby-2559-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617492 13f79535-47bb-0310-9956-ffa450edef68"
b9c57d5037b5e1cc744cdf9c23271b5e5add38b6,"DERBY-3205: Add the functionality for stopSlave=true. Contributed by Jorgen Loland



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617501 13f79535-47bb-0310-9956-ffa450edef68"
50567fe25f408a1f6621c367301878e4c2676053,"DERBY-3279: Add logic for execution-time sorting of IN list values
into DESCENDING order when required.

This is a follow-up patch to add an implementation of the
adjustForSortElimination(RequiredRowOrdering) to IndexToBaseRowNode,
which was missing from the previous commit (svn # 616126).  This
commit also adds more test cases to InListMultiProbeTest.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617548 13f79535-47bb-0310-9956-ffa450edef68"
979af35d041bb8deba908f473d53326913f43339,"DERBY-3372: Adjust demos build.xml to avoid recompile sample apps

This change modifies the ""srcdir"" and ""includes"" values on the
javac Ant task invocation that compiles SimpleApp.java and
SimpleMobileApp.java. Since these two Java programs are not
inside of a package, Ant is happiest if we specify their srcdir
directories fully.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617567 13f79535-47bb-0310-9956-ffa450edef68"
0eb588eb7cbffb7a7fe9f0cad4c49029182cfa9b,"DERBY-3366: Various formatting erros in L10N property files
Patch file: derby-3366.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617574 13f79535-47bb-0310-9956-ffa450edef68"
8f948b4907f9afbb313c17443e08f4e3b823b28a,"Minor cleanup in TableFunctionTest to not catch exceptions that indicate failure and report them with a fail message. This is not required, an uncaught exception will cause the test to fail anyway, and it makes debugging harder as the stack trace of the failure is lost

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617661 13f79535-47bb-0310-9956-ffa450edef68"
01b596153a9a5ff7612545e11db6ca8b5c2cc3e7,"DERBY-2775 DERBY-2917 (partial) Remove final set method (setCollationType) on TypeDescriptor to make TypeDescriptor and DataTypeDescriptor logically immutable. Required cleanup to ensure that a routine definition is only passed catalog types (TypeDescriptor) and also resulted in a cleanup of CreateAliasNode by encapsulating collation changes within the type system and RoutineAliasInfo. Also required that the tyep system use a valid JDBC Types constant for the XML type, using the Types.SQLXML from JDBC4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617665 13f79535-47bb-0310-9956-ffa450edef68"
b6dc1ff83c178b48b2832b00332fee5a4f5544a8,"DERBY-3355: Alter Column Not Null ignores double quotes around column name

AlterTableConstantAction.validateNotNullConstraint
is internally generating and executing a statement of the form:

    select count(*) from tab where not (col is not null)

The code which generates this SQL staement was not properly enclosing
the column name in double quotes, so the compiler converts the column
name to upper case, and gets a no-such-column error. 

The fix is to use IdUtil.normalToDelimited to delimit the column name
in the internally-generated SQL.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@617818 13f79535-47bb-0310-9956-ffa450edef68"
8bc0bec62d418e940c99da05dee8353a25dbc4d9,"Fixed some JavaDoc errors.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618292 13f79535-47bb-0310-9956-ffa450edef68"
3e92fd96f5e78b4552f0084e5ff3ad7fab56f845,"DERBY-3371 (partial) Made T_AccessFactory.alterTable() run with both
temporary and non-temporary conglomerates to get better test coverage
in RAMTransaction


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618299 13f79535-47bb-0310-9956-ffa450edef68"
212a1264815e658c26ec6214f5fce97ebc7840fb,"DERBY-3243 (jdbc net client) exception during normal iteration through ""ResultSet"" of ""select * from t""

Allow locators > 32K.  Exclude extended length values 0x800x so that lob by value will work with older versions. Exclude negative and 0 locators.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618431 13f79535-47bb-0310-9956-ffa450edef68"
cb69fa9d7303b656e9f7076c29463cd494732c16,"DERBY-3088 - rewrite NetIjTest.java (which uses canon testclientij.out) to
  not use ij.main, but ij.runScript, so it no longer prints the version into
  the output. 
  Remove regex.masters target from tools/release/build.xml


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618472 13f79535-47bb-0310-9956-ffa450edef68"
0fccc4c93c6ac147f82c6d2926de6b634a9499ae,"DERBY-3117: Improve the PropertySetter so that it will work on Mac OS X with both the 10.4 and 10.5 versions of the operating system.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618476 13f79535-47bb-0310-9956-ffa450edef68"
8a319fbe657110285b24f8b3e607dad8e87fdddb,"DERBY-3224 - modifications to enable running with phoneME advanced platform;
  changes are as follows:
  - org/apache/derby/iapi/tools/i18n/LocalizedInput.java - 
    Performance of ij tests improved by using a BufferedReader on top of the 
    InputStreamReader when ij read from its scriptfiles. 
    The reason is the use of some buffers when doing character conversion. 
    Every time the buffer is full, an exception object would be created, thrown and caught; for instance, during LangScripts test, when ij read 1 char at a time from the InputStream, this would happen 1.5 million times. Using the BufferedReader reduced the number of exceptions to 92, and made the test run a lot faster on this platform. 
  - GrantRevokeTest - clean up code was added (on phoneME advanced tests run in opposite order. )
  - CollationTest.java and CollationTest2.java - Added code to not run the tests for non-english locales if the locales are not supported
  - ForBitDataTest.java - clean up code was added
  - ScrollCursors1Test.java - clean up code was added
  - ForUpdateTest.java - Moved code from a test to general setup as it was needed by more than one test and thus fixtures were not independent of order.
  - UpdateCursorTest.java - clean up code was added
  - upgradeTests/_Suite.java - added code to prevent upgrade from 10.3.1.4
    because 10.3.1.4 doesn't boot on this platform (DERBY-3176).
  - BaseJDBCTestCase - added method to compare Time objects
patch contributed by Vermund Ostgaard 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618507 13f79535-47bb-0310-9956-ffa450edef68"
964abfa75dc2f0447b7ace0c97ac2409c34906fc,"DERBY-3189: Propagate the master database name from EmbedConnection to
RawStore where the MASTER_DB property is initialized before the master
controller service is booted. Contributed by Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618584 13f79535-47bb-0310-9956-ffa450edef68"
de519067f73b7d0a5487dcc84ffccbbc2b31a183,"DERBY-3301: Incorrect result from query with nested EXIST
Prevent the optimizer from flattening subqueries that 
need to be evaluated to get correct results.

Patch contributed by Thomas Nielsen
Patch files: derby-3301-8.diff, derby-3301-test-master-2.diff,
derby-3301-test-3.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618586 13f79535-47bb-0310-9956-ffa450edef68"
665f8d8fc6f3595cf97e73c187901ca2b40a53fb,"DERBY-3369: Extend jdbcapi.DataSourceReferenceTest to handle data sources with differing property sets. This version of the test should test a little bit more than the previous version, but in general the approach is the same.
Patch file: derby-3369-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618587 13f79535-47bb-0310-9956-ffa450edef68"
057053419d5a79a7baaf80faa4556ff62e44a16e,"DERBY-2592: Wrong description of IndexName field in public JavaDoc for LockTable.
Patch file: DERBY-2592_v2.diff

Patch contributed by Jazarine Jamal.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618614 13f79535-47bb-0310-9956-ffa450edef68"
fd20d6b98778ee9adc1456f1410317303e44bcab,"DERBY-3205 :Replication: Add connection url command option for failove. Contributed by Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618632 13f79535-47bb-0310-9956-ffa450edef68"
180aeb038e19cdd9aca1e271c87cd76baee69d6e,"DERBY-3345 ; skipping section in lang.RolesTest testing setting roles from 
  within a stored procedure with JSR169. The stored procedure uses 
  DriverManager connection to jdbc:default:connection, and DriverManager is not
  supported with JSR169.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618722 13f79535-47bb-0310-9956-ffa450edef68"
cbc650d0c3a2a1bcd29990aa914d4417fb19f4e8,"DERBY-3304

This commit addresses two issues. 

First of all, it cleanups up reset method in BaseActivation which was doing more than just bringing the Activation back 
to pre-execution state. The method had to make itself aware of holdability and what
kind of resultset it was dealing with 
before closing or clearing the row of the resultset. The reason for this behavior 
is commit code path was relying on 
Activation.reset to do more than just bringing the activation to pre-execution state.
 I fixed this by moving this code 
from BaseActivation.reset to GenericLanguageConnectionContext.resetActivations.



Additionally, in the new code in GenericLanguageConnectionContext.resetActivations, I added the code to not close the

language result sets associated with activations that do not return rows even if activation may have holdability set to

false. This will ensure that a commit inside a java procedure will not inadvertantly close the resultset associated with

the java procedure call.

 Additionally, I copied some of the cleanup work(as shown below) from BaseActivation.reset into 
new code in GenericLanguageConnectionContext.resetActivations 
   a.clearHeapConglomerateController(); 
   if (!a.isSingleExecution()) 
      a.clearWarnings(); 

This code above was always getting executed at the time of commit before my commit and because of that, I decided to copy 
it in GenericLanguageConnectionContext.resetActivations. If anyone has any comments on this, please let me know.

(Andrew trying to change commit message for Mamta)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618788 13f79535-47bb-0310-9956-ffa450edef68"
00679884ccc2e603aed5fe60183877d10e190e7b,"DERBY-3288: Fix optimizer dependency tracking logic so that it
correctly enforces join order dependencies between Optimizables,
even when plan ""short-circuiting"" occurs.  This patch also fixes
a bug in FromVTI's referenced table map (which affects dependencies)
and does a slight refactoring of the ""pull Optimizable"" code for
the sake of clarity.  And finally, it adds an appropriate test
case to the existing lang/subqueryFlattening.sql test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618841 13f79535-47bb-0310-9956-ffa450edef68"
9c84cf3258c0ef95a1537dec810ab65eaa5729f7,"Add a couple of asserts to LangProcedureTest to verify number of results sets and warnings related to a procedure returning too many result sets

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618843 13f79535-47bb-0310-9956-ffa450edef68"
334e9a30396dec0e011a6dffdace2e4ad8e6ecb1,"DERBY-3361: Make the startSlave connection wait until slave replication mode is confirmed started or until an error occurs.
In addition, this patch adds host and port information to a derby.log message and a few exceptions for easier debugging. DERBY-3356 is also fixed by this patch.
Contributed by Jorgen Loland



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618944 13f79535-47bb-0310-9956-ffa450edef68"
81061c38e62f88fa6d80e42e08b9d178d6e55d78,"Made javadoc comment visible.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@618990 13f79535-47bb-0310-9956-ffa450edef68"
ff17507111b5a5128ca62b521e0c1ea785ac2296,"DERBY-3304

This is a followup commit for DERBY-3304 based on various comments. It does following
1)The existing method resetActivations in GenericLanguageConnectionContext has been renamed to better reflect it's
functionality. It will be now called endTransactionActivationHandling since it gets called for commit/rollback.
2)The javadoc comments for resetActivations(now called endTransactionActivationHandling) were not valid. Fixed that in 
this commit.
3)Took out the redundant code about setting the holdability to false if we were in rollback. It was needed earlier
because the method that took care of activations at rollback time needed to check the holdability. That method
(BaseActivation.reset) does not check holdability anymore and hence we do not need to set the activations to false
holdability when we are dealing with rollback.
4)Lastly, JDBC api for Connection.commit does not ask for clearing of warnings and hence we should not have code to
clear the warnings at the time of commit. I removed the warning clearing code from resetActivations(now called 
endTransactionActivationHandling) in GenericLanguageConnectionContext.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619279 13f79535-47bb-0310-9956-ffa450edef68"
20626ecba7f4ed1928fa7ca986072110293ccc13,"DERBY-3324: JDBC statement cache implementation. Added asserts (for sane builds) to check validity of StatementKey arguments (for instance result set holdability and concurrency). The asserts are added because there are so many integer arguments, and they can easily be mixed up.
Patch file: derby-3324-4a-statementkey_asserts.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619306 13f79535-47bb-0310-9956-ffa450edef68"
106ea47bb7c253dbacd948f8b5c8e1ad14d123df,"Checked in the performance tests used in DERBY-1961 and DERBY-2911.

The following command prints information on how to run the tests:

    java org.apache.derbyTesting.perf.clients.Runner


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619404 13f79535-47bb-0310-9956-ffa450edef68"
7b9a6c098f8bfdab4092346a872f3533894421c8,"DERBY-3301: Follow-up patch to fix comments in subqueryFlattening.sql so
that they match/explain the printed query plans, which changed slightly
as a result of DERBY-3301.

Contributed by Thomas Nielsen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619591 13f79535-47bb-0310-9956-ffa450edef68"
0c7de0fee2e643022f1017caa8959e4520fb6d60,"DERBY-3357 ; improving run time of test DataSourceTest by only creating 
  database objects once and by deciding in suite methods whether to run with 
  network server and/or client, rather than within the fixtures.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619667 13f79535-47bb-0310-9956-ffa450edef68"
e46ccc50884b3e0df1303de3fb7e24aaf732bb15,"Expand the DataSourceTest testing added in DERBY-2142 to include closing the PooledConnection during a callback resulting from a close on its logical connection.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619695 13f79535-47bb-0310-9956-ffa450edef68"
decb600ebf0d8cada40d311f9b30dcf29a550c07,"DERBY-3357; fixing up a few minor mistakes in DataSourceTest - forgot to change
  comments referring to renamed (to baseSuite) method getRunTwiceSuite, failed
  to add testXAHoldability, and I had tested testAutoCommitOnXAResourceStart 
  against both client and server but forgot to remove it from the client suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619722 13f79535-47bb-0310-9956-ffa450edef68"
2771113218d2ec65fe79ccc02455c93445ed2c0c,"DERBY-3304

Some code cleanup in GenericLanguageConnectionContext.endTransactionActivationHandling so the code is more readable.
No functionality change, just consolidated various if statements and used some local variables to replace repeated
method calls like a.getResultSet() and a.getResultSet().returnsRows()



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619772 13f79535-47bb-0310-9956-ffa450edef68"
819c1bd015166193a25576fd2626e20bc5967fb8,"DERBY-3117: Use JDK 1.5 to compile classes that depend on java.util.concurrent


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619828 13f79535-47bb-0310-9956-ffa450edef68"
58f22ba541289367ffe9bb1800b043dd39ee1b7a,"DERBY-3391 Remove dead code that restored isolation level during a compile, since isolation cannot be changed by a compile

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619981 13f79535-47bb-0310-9956-ffa450edef68"
2f817f3f88222685afd57e4088245b05cfbf486d,"Add commented out code that exposes the bug described by DERBY-3401. Removing a listener from a pooled connection during logical connection close processing causes other listeners to be ignored.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619991 13f79535-47bb-0310-9956-ffa450edef68"
2e83f13ae6a7a6526a4e2b868e01846457adad33,"DERBY-2917 Changed the runtime type DataTypeDescriptor to no longer be a TypeDescriptor (catalog type) but instead only have a catalog type (TypeDescriptor). Added code to handle upgrade issue of DataTypeDescriptor's being written as catalog types in RoutineAliasInfo.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@619995 13f79535-47bb-0310-9956-ffa450edef68"
dd55fd828b07a67704b81d9083a7b4b613c650a0,"DERBY-3383: Replication: Make sure stopSlave does not boot the database if not already booted.
Contributed by Jorgen Loland



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@620444 13f79535-47bb-0310-9956-ffa450edef68"
2146e784a92956a77f7c756b46d0e469218f9878,"DERBY-3359: Replication dynamically adjust shipping interval for LogShipper.
Contributed by Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@620453 13f79535-47bb-0310-9956-ffa450edef68"
59e127aa11d3ba899cb88045aba23bfc9d9aaf1a,"Removed unused, private field 'accumulatedSetReadOnlyWarning_'.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@620469 13f79535-47bb-0310-9956-ffa450edef68"
9cf3fb5e66a56be2715364d34bad8b0134324097,"DERBY-3306: jdbc4.StatementEventsTest cannot be run individually in a clean environment. This is in fact a more general fix for tests using a DataSource obtained through the JUnit framework utility classes to create connections. The connections will now default to create the database if it does not exists. The accompanying test changes were required to get a clean suites.All run, and falls into three categories; test doesn't want to create db, asserting on zero warnings or uses connection attributes that conflict with db creation.
Patch file: derby-3306-1c-create_db_by_default_and_test_fixes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@620480 13f79535-47bb-0310-9956-ffa450edef68"
01150e0fb1edf117a6617799b7be60876e318624,"DERBY-3359: Make sure to initialize mf in constructor.
Contributed by Narayanan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@620483 13f79535-47bb-0310-9956-ffa450edef68"
45a24ecd62dad3de783f79cfe4a73acbc7cb5d6d,"DERBY-3309: Minor cleanups in ClientPooledConnection40 and ClientPooledConnection.
This patch fixes the broken synchronization of the list of connection event listeners, and also replaces the Vector with an ArrayList.
Patch file: derby-3309-4a-cpc_listeners_synch.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@620485 13f79535-47bb-0310-9956-ffa450edef68"
921ac6e1f32a28c8a24b8e307fea61a6bae461d0,"DERBY-3359: Make mf final and some other minor clean-up.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@620499 13f79535-47bb-0310-9956-ffa450edef68"
f4e6edee1f69210e941eac504dedbead900e3054,"DERBY-3392: Performing failover on a database not being replicated should give a more meaningful error message.
Contributed by Narayanan.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@620522 13f79535-47bb-0310-9956-ffa450edef68"
4c4c239a39690049306662ebc2b5de254c180027,"DERBY-3384: Replication: startMaster now unfreezes the database. 
Contributed by Narayanan.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@620819 13f79535-47bb-0310-9956-ffa450edef68"
b8d76faeffe33bef48cf35d80aa812d1cab58b25,"DERBY-1387 (partial) Initial JMX support including obtaining the platform mbean server and registering a single Version mbean for the embedded engine. JMX functionality enabled by derby.system.jmx, need follow on work for derby's builtin policy files.
Based upon contributions by Ole Gunnar Borstad, Bernt M. Johnsen, John H. Embretsen and Dan Debrunner. (all have icla's on file).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627062 13f79535-47bb-0310-9956-ffa450edef68"
c970168c08cd3bb1ccaf77167b985bac2c26bebd,"DERBY-1387 (partial) Establish a pattern of registering a Derby mbean using StandardMBean. This allows the MBean interface and implementation class to be in separate packages (and if required have unrelated names). This means the public api org.apache.derby.mbeans is not forced to contain the implementation of the MBeans and thus have references to other classes that are not part of the public api.
Fix the build order for o.a.d.mbeans to be early since it does not depend on internal classes and should not require JDK 1.5.
Added a version string attribute to the VersionMBean that shows the full version.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627131 13f79535-47bb-0310-9956-ffa450edef68"
00364eb9e91ea6f95c48a5fc8dc1e3a9f73badcc,"Add a utility JDBC assert to test that a SQLWarning (typically returned from a method like Connection.getWarnings) is null, ie. no warnings. If the assert fails then the message will contain the text of the warning. Replace the previous use of assertNull() which leaves no traces as to what the warning was.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627203 13f79535-47bb-0310-9956-ffa450edef68"
35dff7c20d2d6de849d9be7af3923c59c7dced1e,"DERBY-2917 add upgrade test fixture for a routine that's created by 10.4 and executed by older releases

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627210 13f79535-47bb-0310-9956-ffa450edef68"
0f9b58430011ec60deaee5018408a0955d5bf54e,"DERBY-3410 - splitting off ConnectionPoolDataSource and XADataSource testing
  from DataSourceTest into J2EEDataSourceTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627297 13f79535-47bb-0310-9956-ffa450edef68"
efa5857208c14c89c8ae0d49684eb9a0bc88dc04,"DERBY-1318: Add an upgrade test to verify that DataSources can be serialized by the previous release and then correctly deserialized by the current release.
Added a test that performs basic tests on serialized data sources from old Derby releases.
The data files added were generated by running testData/serialized-data-sources/SerializeDataSources.java with Derby versions 10.0.2.1, 10.1.3.1, 10.2.2.0 and 10.3.2.1 on the classpath (one version at a time).
Patch file: derby-1318-1b-for_comments.diff + serialized-data-sources.zip


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627356 13f79535-47bb-0310-9956-ffa450edef68"
d91d11e993fe0662f78e19916ccc3fbfd3183d16,"DERBY-3325: Add 'maxStatements' property to ClientConnectionPoolDataSource.
The patch adds the maxStatements property, but it will not have any effect before DERBY-3329 has been committed.
Adjusted the DataSourceReferenceTest to account for the new property, and added a simple test that tests that the property is handled correctly in the data source.
Patch file: derby-3325-1b-maxStatements.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627380 13f79535-47bb-0310-9956-ffa450edef68"
ae2cdc26110f7999e6fc74782225c8eab1590502,"DERBY-2917: Fixed JavaDoc warning and removed some unused imports.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627419 13f79535-47bb-0310-9956-ffa450edef68"
87fd55c95ee172e6248a5680d3cbc2c7b6b4a65f,"DERBY-2128: The word 'class' appears twice for the message SIF01.V


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627466 13f79535-47bb-0310-9956-ffa450edef68"
002bf942c4227f2cc3464b502ff34f6ccb2cc7f7,"DERBY-3304 and DERBY-3414

This serves as a test case for both the jira entries above. 

Number of code changes for transaction ending time went in as part of DERBY-3304 and this 
new test will check those code changes for specific case of rollback inside a java procedure 
call. 

The test case is currently disabled for network server because the rollback inside the 
procedure is not closing all the resultsets and DERBY-3414 is to track this behavior of 
network server. Once DERBY-3414 is fixed, we should enable the test for network server.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627673 13f79535-47bb-0310-9956-ffa450edef68"
8f89c0966aa48b77c5017b9a4e99bea92ab9b7d8,"DERBY-3415: 'DataSourceSerializationTestjunit.framework.AssertionFailedError' on Windows.
Added closing of the FileInputStream to the test. Without it, the test failed on Windows platforms during tear down, and it is of course good practice to always clean up :)
Patch file: derby-3415-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627734 13f79535-47bb-0310-9956-ffa450edef68"
ce1139c9f200c47510056f149b2feedaf4b106cc,"Removed unnecessary import.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627776 13f79535-47bb-0310-9956-ffa450edef68"
fb98ba4906a3a57893f294fba1351196af2d25e3,"DERBY-3213: SQLChar.trim method is unused and could be removed
Patch contributed by Deepthi Devaki A R
Patch file: DERBY-3213.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627791 13f79535-47bb-0310-9956-ffa450edef68"
7c49997e224d9d38e95961fd65d4dfbb62c335e0,"DERBY-1387 Fix bug where the JDK 1.5 compiled class was being loaded in JDK 1.4. The modules.properties entries for the JMXManagementService was missing jdk. Cleaned up one other case missing jdk and added comments for the newer possible values for derby.env.jdk.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627826 13f79535-47bb-0310-9956-ffa450edef68"
cf870799e85cbdf96f8f0cbe66fdfc25e5cb3dc8,"DERBY-3299 (incremental: Changes/additions to CreateIndexConstantAction.java
so that it can support the creation of ""replacement"" conglomerates, which
will be necessary when the physical conglomerate for an index has been
dropped but the index descriptor still exists.  This can happen if multiple
indexes share a physical conglomerate but then the conglomerate is dropped
as part of ""drop index"" processing for one of the indexes. (Note that
""indexes"" here includes indexes which were created to back constraints).
In that case we'll need to create a new ""replacement"" physical conglomerate
to support the existing descriptor.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627836 13f79535-47bb-0310-9956-ffa450edef68"
5c4e302bf6b610fd427e070ba042fe9012bb0b6f,"DERBY-1387 Expose an api in ManagementService to register and unregister Mbeans. Use this for a simple JDBCMBean that reports some information about the JDBC driver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@627877 13f79535-47bb-0310-9956-ffa450edef68"
7cdf43a4c72febcc77a19f46bbdaed917b13fca3,"Renamed directory 'serialized-data-sources' to 'serializedDataSources'.
The directory was traversed by JavaDoc as part of ant target 'javadoc', and it failed because the old name was not a valid Java package name.
Updated references to the directory.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628038 13f79535-47bb-0310-9956-ffa450edef68"
b843fcef3e423d74ecaaca0190f018f6a6cc0ec7,"DERBY-3163: Derby JUnit test framework adaptions to run existing tests against replicated databases
Contributed by Ole Solberg.

- TestConfiguration:
Add decorators which takes server host and port, for running tests in a
server/client configuration, where a server has already
been started on a that host and port.

- CleanDatabaseTestSetup:
Added a constructor which takes server host and port, for an already started server in a
client/server configuration, to run the SQL decoration on that server.

- AnsiTrimTest, CreateTableFromQueryTest:
Factored out the SQL statement execution for database content setup to
be able to reuse the same code in other TestCases which add the same
test method in their 'suite()' method. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628073 13f79535-47bb-0310-9956-ffa450edef68"
d588984fbedcea269a202f093c5f535d791a4f5e,"DERBY-3406: Fix unsynchronized calls to notify
Contributed by V Narayanan


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628078 13f79535-47bb-0310-9956-ffa450edef68"
181c56abbb0d898e0bf2bc7be7ff265832270da0,"DERBY-3325: Add 'maxStatements' property to ClientConnectionPoolDataSource.
Enabled the test jdbcapi.ClientConnectionPoolDataSourceTest, removed two unused imports from _Suite and removed the workaround for DERBY-3306.
Patch file: derby-3325-2a-enable_test_and_remove_workaround.diff 
(I added one missing space character to the diff)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628102 13f79535-47bb-0310-9956-ffa450edef68"
0f45070527c283410297ac6ea8c6704b0139c3c4,"DERBY-3304
DERBY-3037
DERBY-1585

I am adding a test case to check for the resultset from the java procedure call when the
java procedure has done a rollback inside it. This test shows that in trunk, after checkin 
602991 for DERBY-1585, a procedure does not return a resultset if there was a rollbck 
inside the procedure with resultset creation before rollback. This behavior is different 
than what happens in 10.2 codeline. In 10.2, a procedure will return a *closed* resultset 
if there was a rollback inside the procedure. But a procedure should not return closed 
result sets, so it appears that trunk is behaving correctly and 10.2's behavior was 
incorrect.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628130 13f79535-47bb-0310-9956-ffa450edef68"
f8bc0199898bd6bbd7ccfd926cd4db153bf1715d,"DERBY-3424 (partial) Add initial apis and bean implementations for a management
mbean to control Derby's JMX behaviour. Start and stop the management are
present as operations but currently do nothing. Also fix a bug in DERBY-1387
where shutting down Derby would fail with jmx when multiple mbeans were registered.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628142 13f79535-47bb-0310-9956-ffa450edef68"
2841be2479ecf3c54ee4c3b5a05b6ac0de48ec08,"DERBY-1387 Add org.apache.derby.mbeans to the published javadoc. Includes
a package.html that could be expanded.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628148 13f79535-47bb-0310-9956-ffa450edef68"
8935ca15c2154786b9352514f9ae19b4ba348b6a,"DERBY-3400 testgetTypeInfo Fails with ibm16 while running the UpgradeTests

Workaround for IBM JVM issue. Make new arrays for ODBC nullability instead of doing arrayCopy.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628151 13f79535-47bb-0310-9956-ffa450edef68"
c92685eef80656a937fcd7de0ea6d16be079893e,"DERBY-3299 (incremental): Add several utility methods to
DDLSingleTableConstantAction.java that can be called by the various
ConstantAction subclasses to drop a constraint and/or a conglomerate
descriptor. In addition to performing the drop as before, these
utility methods also check to see if dropping the constraint or
index necessitates the ""update"" of a shared physical conglomerate.
If so, the new methods will take the necessary steps to create
create a new (""replacement"") physical conglomerate that correctly
satisfies all remaining conglomerate descriptors--i.e. all of the
ones that were sharing the dropped physical conglomerate.

Note that a) Derby does not currently have logic to recognize when
a shared physical conglomerate needs to be updated (that's coming
in a subsequent patch), and b) there are currently no calls to the
new utility methods.  Thus this commit should not have any effect
on Derby yet (incremental development).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628181 13f79535-47bb-0310-9956-ffa450edef68"
0746b5ac37299788f003778e62e33d1a28d2fbe5,"DERBY-1318: JavaDoc fixes for DataSourceSerializationTest. I also made the utility class SerializeDataSources be built and included in derbytesting.jar.
Patch file: derby-1318-2a-javadoc_and_build.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628482 13f79535-47bb-0310-9956-ffa450edef68"
576556054f8ccc37ab1c283c0fb675ecf8e595f8,"DERBY-3424 (partial) Improve JMXManagementService to spearate registering of mbeans with Derby's management service from registering with the JMX service. This allows the ManagementMBEan to correctly implement the stop and start management service to unregister (from the platform mbean server) Derby's MBean when the stopManagement() is called and then re-register them when startManagement() is called.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628585 13f79535-47bb-0310-9956-ffa450edef68"
0b884ead897c9ddd774ff9ff0370e4f09934285d,"DERBY-2559: recreating a datasource using javax.naming.Reference from a ClientDataSource40 fails.
A followup patch to avoid throwing an exception when the input arguments are not as expected. The point is to allow another factory to try recreating the object, which will not happen if an exception is thrown. Null will now be returned for null objects and objects whose class does not start with ""org.apache.derby.jdbc.Client"".
Patch file: derby-2559-2a-defenses.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628647 13f79535-47bb-0310-9956-ffa450edef68"
af93171976e6dd1210fa54948565a9e6a35e3fa8,"DERBY-2559: recreating a datasource using javax.naming.Reference from a ClientDataSource40 fails.
Documentation / JavaDoc changes (contents and formatting).
Patch file: derby-2559-3b-documentation.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628654 13f79535-47bb-0310-9956-ffa450edef68"
7ad8ff6b36b37b6c1546a872edd0dfdd08b1139f,"DERBY-3421: Remove unused code for caching of connect bytes.
Patch file: derby-3421-1b-removal.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628679 13f79535-47bb-0310-9956-ffa450edef68"
cd8df94060f437848a1bfd4fe065adc831416dfc,"DERBY-3349: Nested WHERE EXISTS queries need improved testing
Patch contributed by Thomas Nielsen
Patch file: d3349-3.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628686 13f79535-47bb-0310-9956-ffa450edef68"
08010c53aaa74b86314921f3bf7805108a0fcfe0,"DERBY-3425: J2EEDataSourceTest throws away stack trace for many errors

Preserve stack trace on error by throwing the original exception
instead of using fail() to report the error.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628746 13f79535-47bb-0310-9956-ffa450edef68"
eab188226da84b4b28af3dbac4f7268cd708367b,"DERBY-3426 Remove unused code for autogenerated keys columnNames



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628780 13f79535-47bb-0310-9956-ffa450edef68"
d2a6cce892ad3cf7e59fed5590c736822d2a8a3f,"DERBY-3303: Fix OrderByColumn.java to account for ""pulled"" GROUP BY columns
when a) checking to see if the user has specified a valid ORDER BY column,
and b) trying to resolve ""pulled"" ORDER BY columns to their underlying values.
Also, add some relevant test cases to the existing lang/orderby.sql test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628823 13f79535-47bb-0310-9956-ffa450edef68"
e4f7f9e757848334f042c47f2e7521f3c06996a1,"DERBY-1387 Cleanup some details of the ManagementService api based upon feedback from John Embretsen. Mainly rename 'nameAttributes' to 'keyProperties' to match JMX terminology

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628836 13f79535-47bb-0310-9956-ffa450edef68"
3505778f189059283e7da3d3c991be9b0af90984,"DERBY-1378 DERBY-3424 Hide the implementation class for Derby's MBeans from JMX clients and add more information to the javadoc under org.apache.derby.mbeans

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628866 13f79535-47bb-0310-9956-ffa450edef68"
59872251c33b5c792ab41d32c594ba3f8400ff17,"DERBY-3424 Add org.apache.derby.mbeans.Management to derby.jar

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@628943 13f79535-47bb-0310-9956-ffa450edef68"
2204336435db29912bffff5fc007090fdee26565,"DERBY-1824: Permission/privlege names in exceptions should be in upper case as keywords, not lower case.
Patch contributed by Jazarine Jamal
Patch file: DERBY1824.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629024 13f79535-47bb-0310-9956-ffa450edef68"
c437565fa998d3747014d9fda70a617de2717ab9,"DERBY-3299 (incremental): Updates ConglomerateDescriptor.java to include
logic for detecting a conglomerate ""replacement"" scenario, and adds logic
to drop the old (shared) conglomerate in those scenarios. Also changes
the various ConstantAction classes which rely on the ""drop(...)"" methods
of ConglomerateDescriptor and ConstraintDescriptor so that they use the
utility methods added as part of svn # 628181.  This commit is the one
which ""activates"" the previous changes for this issue and ultimately
changes Derby's behavior to fix the problem.  Test cases will be added
in a subsequent commit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629160 13f79535-47bb-0310-9956-ffa450edef68"
aadfc186fafe3002aeca05e324f9478e24248de4,"DERBY-2653 (partial)Expose existing auto-generated key functionality through more JDBC APIs in Derby Client.

Enables API's that take columnNames.

Connection.prepareStatement(String sql, String[] columnNames);
Statement.execute(String sql, String[] columNames);
Statement.executeUpdate(String sql, String[] columnNames); 

To get generated keys, user must specify an array of one column name, which 
should be the identity column.  Client actually ignores the contents at this
time.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629171 13f79535-47bb-0310-9956-ffa450edef68"
6597e56919e6067da10f50f40d3b6b1eb1fa47a5,"DERBY-1387 (partial) Add a VersionMBean for the network server code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629278 13f79535-47bb-0310-9956-ffa450edef68"
cd903151eef96fe2e0446614d24a46dc3877f49b,"DERBY-3422: Embedded returns wrong value for DatabaseMetaData.autoCommitFailureClosesAllResultSets()

Return the correct value (true) and update the test so that it is able
to detect differences between returned value and actual behaviour.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629395 13f79535-47bb-0310-9956-ffa450edef68"
e193cf8e15092b2a63c9e0929bf022e0f0d4aaaa,"Restore the verbosity level in UnsupportedVetter's tearDown() method.

Without this change, subsequent tests print messages to the console
when they start the network server.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629452 13f79535-47bb-0310-9956-ffa450edef68"
ea799de466cf64dfe039bcb4aa54da3da9d2e49b,"DERBY-3324: JDBC statement cache implementation.
Added a check for null reference when evicting an entry.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629457 13f79535-47bb-0310-9956-ffa450edef68"
b2d726148cb495d2e30cdc4ec188a227c76daae4,"DERBY-3299 (incremental): Add formal test cases for the changes
made to resolve this issue.  In particular:

  1. Add a new JUnit test, lang/ConglomerateSharingTest.java, which includes
     a test fixture for the ""convert to non-unique"" scenario described by this
     Jira. It also includes a fixture for testing the various scenarios in
     which a constraint can be dropped, to verify that the logic surrounding
     ""drop and re-create conglomerate"" processing is correctly executed (or
     skipped) as appropriate.

  2. Add a new fixture to lang/GrantRevokeDDLTest.java to verify behavior
     when a REVOKE statement leads to the dropping of a foreign key.  More
     specifically, we want to make sure that the ""drop and re-create conglom""
     processing behaves as expected if the foreign key that is dropped
     shares a conglomerate with another constraint.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629527 13f79535-47bb-0310-9956-ffa450edef68"
fbefd2572d36d98a0872aa85506aebf6cfdee9e8,"DERBY-3435 Add NetworkServerMBean interface for JMX monitoring of network server.
Contributed by John H. Embretsen Email: John dot Embretsen at Sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629536 13f79535-47bb-0310-9956-ffa450edef68"
cb68a0348dd3e082fbba75ae2e8704c0828e58c4,"DERBY-3435 Add implementation of NetworkServerMBean interface for JMX monitoring of network server.
Contributed by John H. Embretsen Email: John dot Embretsen at Sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629537 13f79535-47bb-0310-9956-ffa450edef68"
1507da7a16734299861b54467052b20927998b7e,"DERBY-3435 move the o.a.d.mbeans.drda package to java/drda (hopefully).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629556 13f79535-47bb-0310-9956-ffa450edef68"
b52081a4ac3dbca345c2aa22b11fdccefbcd4f7c,"DERBY-2653 Expose existing auto-generated key functionality through more JDBC APIs in Derby Client.

Add client support for columnIndex API's:

  Connection.prepareStatement(String sql, int[] columnIndexes);
  Statement.execute(String sql, int[] columIndexes);
  Statement.executeUpdate(String sql, int[] columnIndexes);



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629566 13f79535-47bb-0310-9956-ffa450edef68"
83dd5e6e90e89cdd4174d8d51cb50eae0477aaf8,"DERBY-1387 Add permissions to the default server policy file (and template) to
allow Derby to register its MBeans.
Contributed by John H. Embretsen Email: John dot Embretsen at Sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629575 13f79535-47bb-0310-9956-ffa450edef68"
a3203bfb637f46dd41d0fa6b94579072823f09f9,"DERBY-3430 Inconsistency in JDBC autogen APIs between Connection.prepareStatement(...) and Statement.execute(...)

Change prepareStatement to treat empty arrays for columnNames or columnIndexes as NO_GENERATED_KEYS



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629578 13f79535-47bb-0310-9956-ffa450edef68"
3e0434678c6db15530a75a0737d32e70b203ebd5,"DERBY-3443 With IBM 1.6 derbynet/sysinfo.java,
derbynet/sysinfo_withproperties and derbynet/getCurrentProperties fail
with missing line ""listing properties""

Added sed file to delete the line and updated masters.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629661 13f79535-47bb-0310-9956-ffa450edef68"
5a17d020f5964840bd9eee5bc49dceb50192e5fd,"DERBY-3404: EmbedResultSet.getString() returns wrong value after auto-commit with CLOSE_CURSORS_AT_COMMIT

Made EmbedResultSet.checkIfClose() detect that the language ResultSet
had been closed because of the auto-commit, and throw an SQLException.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629712 13f79535-47bb-0310-9956-ffa450edef68"
1beab6cf802c95c785ae77f150c84b235c72f303,"DERBY-3326, DERBY-3328: (partial) Introduce a caching logical connection and logical prepared statement in the client driver & Extend client JDBC object factory with methods to create objects required for statement pooling.
Adds the basic machinery to support statement pooling. There are known defects in the code, but no code has been enabled yet.
The most important defect is the action taken on statement reset, which is currently Statement.reset(true) (a full reset). This will be changed very soon.
Patch file: derby-3326-3c-new_classes.diff, derby-3328-1a-extend_jdbc_objectfactories.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629734 13f79535-47bb-0310-9956-ffa450edef68"
4397a191158e833b77448d8e51ea27fc9125b319,"DERBY-3328: Introduce a caching logical connection and logical prepared statement in the client driver.
Renamed method ClientPooledConnection.trashConnection to informListeners.
Patch file: derby-3326-2a-method_rename.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629739 13f79535-47bb-0310-9956-ffa450edef68"
7e4dcd98530e6458f0ac643b912b2d0135321418,"DERBY-3423: Minor cleanup in DatabaseMetaData implementation classes
  - removed providesQueryObjectGenerator()
  - removed unused variables and imports
  - fixed signatures for getSchemas(String,String) and
    getClientInfoProperties() to match the signatures in the interface


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629785 13f79535-47bb-0310-9956-ffa450edef68"
18ef52e53191b912fc4e95521714a37609c9c619,"DERBY-3325: Create the in the test database if it does not exist.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629839 13f79535-47bb-0310-9956-ffa450edef68"
7fe51c327c2e000e861e0f879771976d4c2502d6,"DERBY-3306 (+DERBY-3412): jdbc4.StatementEventsTest cannot be run individually in a clean environment.
This commit backs out the previous patch committed for this issue (revision 620480). Manual work was required because J2EEDataSourceTest has been split off DataSourceTest in the mean time.
This patch also fixes StatementEventsTest by setting the createDatabase to create.
Patch file: derby-3306-2a-backout_and_alternative_fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629894 13f79535-47bb-0310-9956-ffa450edef68"
782354ace6b60bac8e35d534ad9aa61bcf3d2593,"DERBY-3304

The main purpose of this patch is to fix the rollback handling for resultsets that do not
return rows. An example case for this is a java procedure which has a Connection.rollback 
inside it. When the user calls the java procedure, and Connection.rollback is made inside 
of it, Derby should not be closing the resultset assoicated with the java procedure call 
(that resultset is a CallStatementResultSet). In other words, a user initiated rollback 
through JDBC Connection object should leave the resultsets that do not return rows open. In 
order to implement this, I had to make changes to ignore resultsets that do not return rows 
in 
GenericLanguageConnectionContext.endTransactionActivationHandling. As a result of this
change, for the eg case given above, the activation assoicated with the java procedure
will not be reset (which also means that, CallStatementResultSet.close will not be called)
inside GenericLanguageConnectionContext.endTransactionActivationHandling. 

But the code inside CallStatementResultset.close() took care of the closed dynamic resultset
and it took out the closed dynamic resultset from the list of resultsets that would be
available to user through the Statement.getResultSet api. With my changes through this
patch, we are going to skip the CallStatementResultset.close during
GenericLanguageConnectionContext.endTransactionActivationHandling which means that we have
to deal with those closed dynamic resultsets on our own. I did that part of logic 
changes in EmbedStatement.processDynamicResults

EmbedStatement.processDynamicResults used to check if the JDBC Resultset is closed by
directly checking the field isClosed in the EmbedResultSet. But it is not sufficient to
check only JDBC Resultset. We need to check the underlying language Resultset too to
determine if the dynamic resultset is closed. There is no direct api on EmbedResultset 
which will return a boolean after checking the JDBC Resultset and language Resulset. Instead,
there is a method called EmbedResultSet.checkIfClosed. This method will throw an exception
if it finds the JDBC ResultSet or language ResultSet closed. So, my changes in 
EmbedStatement.processDynamicResults make a call to EmbedResultSet.checkIfClosed and if 
there is an exception thrown, then we know that the resultset is closed and hence we should
move to the next resultset. 

In addition to these code changes, I have added a new test to LangProcedureTest. The new
java procedure is defined to return 2 dynamic resultsets. One of these resultsets is 
created before Connection.rollback inside the java procedure. The other dynamic resultset
is created after Connection.rollback. As as result of Connection.rollback, the first
dynamic resultset will be closed but the second one will remain open. The test makes sure
that only one dynamic resultset is returned by the java procedure.

Also, made one minor change in LangProcedureTest for an existing test. The test at line 804 
was getting a resultset from the Statement object without asserting that there are no more
resultsets. The resultset object would have been null anyways in this test because there
are no open resulsets from the Java procedure. Because of this, I took out the redundant
code of getting null resultset object from Statement using getResultset,



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629926 13f79535-47bb-0310-9956-ffa450edef68"
21d3cb8e5fc07034bc94e590d7cc6ff1e9edde9b,"DERBY-3326: Fixed incorrect method call.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629938 13f79535-47bb-0310-9956-ffa450edef68"
dd4094659ade248652cfb0d48a3c7fe65b7b7e60,"Fixed JavaDoc warning (introduced by r629926).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@629972 13f79535-47bb-0310-9956-ffa450edef68"
66fe22b01d92575df030d1763ba41f6531fbfcd3,"DERBY-3243 (jdbc net client) exception during normal iteration through ""ResultSet"" of ""select * from t""

Add test retrieving more than 32K lobs. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630036 13f79535-47bb-0310-9956-ffa450edef68"
02c89761cb905eebbe8d07bc1a47417238951078,"DERBY-2667 - improve junit test runs - save off derby.log for failing fixtures.
  patch (DERBY-2667_diff_02_21.txt) contributed by Manjula Kutty.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630077 13f79535-47bb-0310-9956-ffa450edef68"
5990b20b28b3acd665e0e3ee50ae143e399895c2,"DERBY-3073 SQL roles: add parser support

Patch DERBY-3073-part4, which:

- lifts restriction on role names to 30 chars; it is now 128 as
  for other identifiers, cf. discussion with Dan in DERBY-2207.
- reserves the SYS prefix on role names

RolesTest is updated with modified/new tests for this. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630124 13f79535-47bb-0310-9956-ffa450edef68"
ef7f9a14e8160c3c7c3169b62320b0a0d572a8e3,"DERBY-3073 SQL roles: add parser support

Small cleanup of GRANT <role> production to a position we are sure it is a role
grant that is attempted.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630149 13f79535-47bb-0310-9956-ffa450edef68"
ce887a5895b5154506b9cbc5b9520443167c22f1,"DERBY-3173 SQL roles: add catalog support

Bug fix: Moved transaction start up to before the first dictionary access.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630150 13f79535-47bb-0310-9956-ffa450edef68"
5d1201527d2b4a19a8bbc9a72a39d8e883b72abb,"Fixing svn:eol-style on *.java files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630161 13f79535-47bb-0310-9956-ffa450edef68"
29fd25c8b14f13353b0b1cb85eb66704bf6692eb,"DERBY-3382: Slave must inform master if DBs are out of sync.
Adds a check of the log files to the replication initialization so that replication does not start if the log files are out of synch. The master will be notified whether or not the log files are synched.
Tidies up if starting of replication fails.
Contributed by Jorgen Loland


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630207 13f79535-47bb-0310-9956-ffa450edef68"
c3834d82e6efbd3822602e1feb242283db4e8d3b,"Add a top-level ant target (junit-system-mini) to run a basic form of any system tests that run under junit. This is to allow the ability to ensure that the system tests continue to work against Derby (and vice-versa). It's not intended to be a long (e.g. days) running test, just enough to cover the functionality of the system test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630301 13f79535-47bb-0310-9956-ffa450edef68"
68573fc401234e7a90d487ecb9623f061a705bbc,"DERBY-3069: Backing out this feature.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630351 13f79535-47bb-0310-9956-ffa450edef68"
b85a45040b765f77742ee79f5d8e0712f2b4ec1e,"DERBY-2667 - modifying mix of tabs & spaces to only spaces in recently added
  code (revision 630077).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630354 13f79535-47bb-0310-9956-ffa450edef68"
ef786d1e126183ac026a96c6c8c913c274556170,"Remove errant comment. See http://mail-archives.apache.org/mod_mbox/db-derby-dev/200802.mbox/%3c54ac72d70802221624y104c5dcw53f5609fdc51cabf@mail.gmail.com%3e


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630395 13f79535-47bb-0310-9956-ffa450edef68"
9fbd20b5755c2fd8358ca125f30fd76bb690dac5,"DERBY-3326: Removed a word from comment sentences.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630447 13f79535-47bb-0310-9956-ffa450edef68"
d6cf8846e9a6efced50b61502691b7615a87053b,"DERBY-3328 (DERBY-3326): Change factory method signatures and affected classes in preparation for later changes.
Patch file: derby-3328-2a-change_signatures.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630507 13f79535-47bb-0310-9956-ffa450edef68"
69765d556a26da0699aeb721e4cd3d4afb85e55f,"DERBY-3326: Enabled the package private test client.am.LogicalStatementEntityTest to be run as part of the junit-pptesting target.
Patch file: derby-3326-5a-enable_logicalstmtentity_pptest.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630512 13f79535-47bb-0310-9956-ffa450edef68"
0dfa31cd86db2377d6b10ab9a3766dd09299e830,"Cleanup related to DERBY-3310. Simplify ResultSetNode.genNormalizeResultSetNode to always work on itself by producing a NormalizeResultSetNode that wraps it. That is how the function worked and was imlemented.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630643 13f79535-47bb-0310-9956-ffa450edef68"
2e105f0d2a8cad524297fd2f60adbd91867e84a2,"Add some comments to ResultColumn related to investigations for DERBY-3310 explaining some more about how the column can have a different type to the expression it refers to.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630645 13f79535-47bb-0310-9956-ffa450edef68"
d3ebdb33cb878ca2d88b739a0923043a30094f9d,"Fix tabs in build.xml for new targets junit-system-mini

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630657 13f79535-47bb-0310-9956-ffa450edef68"
0736f950991566ef891763abb09f7fd685c4a273,"Removed reamining tabs for new target junit-system-mini


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630757 13f79535-47bb-0310-9956-ffa450edef68"
142b9afe3780b915f9228cd73e14af35d77ae5c1,"DERBY-3446: Make ResultSet.getStatement return the correct statement when created by a logical statement.
Made LogicalStatementEntity constructor set itself as the statement owner in am.Statement, and ResultSet return the owner of the creating statement if set. If not set, the statement itself will be returned (as before).
Patch file: derby-3446-2c_rs_getstatement_alternative.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630784 13f79535-47bb-0310-9956-ffa450edef68"
9e88b9d9def0f73c2443d7a541d313de50edcb95,"DERBY-3205:Add failover functionality to the slave-side.
Contributed by Jorgen Loland


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630806 13f79535-47bb-0310-9956-ffa450edef68"
342793bf00bf3053b546fa15c751e2044cec8a0a,"DERBY-3451 A new interface called DerbySQLException has been added to org.apache.derby.iapi.error.
The EmbedSQLException class has been modified to implement this interface.
The StandardException calls the isSimpleWrapper method on the DerbySQLException interface, thereby avoiding a need to reference EmbedSQLException.

A new static method getArgumentFerry() has been added to StandardExcepion. This performs the same task as the current getArgumentFerry() method in SQLExceptionFactory and SQLExceptionFactory40.
SQLExceptionFactory.getArgumentFerry() has been amended to call StandardException.getArgumentFerry().
SQLExceptionFactory40.getArgumentFerry() has been removed.
StandardException.getArgumentFerry() now handles the pre-JDBC3 and post-JDBC4 scenarios (in the pre-JDBC4 scenario, the passed argument is a DerbySQLException, which is returned immediately), so there is no need to override this functionality.

This change allows us to avoid having a dependency between StandardException and Util.
As the getArgumentFerry() method now checks for DerbySQLException rather than EmbedSQLException, it is able to avoid dependency on EmbedSQLException.

Patch contributed by Dibyendu Majumdar Email: dibyendu at mazumdar dot demon dot co dot uk (no ILCA on file but minor patch - reorganizing existing code, ALv2 flag checked on patch in jira attachement)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@630903 13f79535-47bb-0310-9956-ffa450edef68"
9f9a13ab2d61d93e020e3b3cf835c69850ab725f,"DERBY-3304

When a SQL exception is thrown, make sure that rollback caused by it closes all the resultsets 
irrespective of whether they return rows or not. This cleanup was not happening for
CallableStatementResultSet. To fix this, in CallableStatementResultSet class, I have changed 
the no-op cleanup() method to call close(). Without this, the locks held by the resultsets 
created inside the Java procedure method were not getting released.

I have added a test case to make sure that this code change is tested. I have created a
Java procedure which creates a dynamic resultset, a local resultset and then does an 
insert which will cause duplicate key exception. As part of rollback for exception, Derby
closes the dynamic resultset and local resultset along with the CallableStatementResultset.
And the test case is able to drop the tables which were used by the dynamic and local
resultset without running into locking issues.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631108 13f79535-47bb-0310-9956-ffa450edef68"
39c64b86f48471333e5d7c720ffa545f1f8cc700,"DERBY-3326: Introduce a caching logical connection and logical prepared statement in the client driver. 
Implemented the Connector.shutEngine in CPDSC, as a step in running existing tests with statement pooling enabled.
Patch file: derby-3326-4a-cpdsc_shutEngine.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631123 13f79535-47bb-0310-9956-ffa450edef68"
89e0c0807deae2cab1eda4166e4fbb873393d116,"DERBY-3438: Allow SQL query text to be null in StatementKey.
Patch file: derby-3438-1a-allow_sql_null.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631217 13f79535-47bb-0310-9956-ffa450edef68"
4e03030ea95eb29b8b78bf1184b16068bfeecd2a,"DERBY-2911: Fixed incomplete @return tag in javadoc


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631225 13f79535-47bb-0310-9956-ffa450edef68"
2159c6a011a90ce1f72db0c362cebfcc8a0d5840,"DERBY-3326: Introduce a caching logical connection and logical prepared statement in the client driver.
Fixed an obvious NPE I overlooked, and also synchronized the close method in CachingLogicalConnection[40].
Patch file: derby-3326-6b-npe_fix_synch_CLC.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631258 13f79535-47bb-0310-9956-ffa450edef68"
9dc398ab400293285395633c4c45568f68a61889,"DERBY-3465: Removed a number of try-catch clauses that caught exceptions and printed a generic message without any information about the exception itself.
Patch file: derby-3465-1a-remove_try_catch.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631286 13f79535-47bb-0310-9956-ffa450edef68"
7b80aba02b14d3ab6c4d0c9365345a7747a350b7,"Fixing the typo in the tests where I was referncing the incorrect jira entry. These tests
were added for DERBY-3304



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631307 13f79535-47bb-0310-9956-ffa450edef68"
2864d17a20b5bf3e882b5f93d7ade012cffaf321,"DERBY-3429 Remove system property derby.system.jmx and always have Derby attempt to register MBeans. Allows for dynamic management.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631335 13f79535-47bb-0310-9956-ffa450edef68"
89c881d13a824d76988e8d4362f7f9e4edb430fa,"DERBY-3385 Initial patch for JMX testing with testing of the VersionMBean. Not added into suites.All yet due to existing failure and it being a work in progress.
Contributed by John H. Embretsen Email: John dot Embretsen at Sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631339 13f79535-47bb-0310-9956-ffa450edef68"
adb927d0e37ab5f84b98dfe254446400fcfc4a88,"DERBY-3385 Split VersionMBeanTest into an abstract base class for MBean tests called MBeanTest and the MBean specific VersionMBeanTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631343 13f79535-47bb-0310-9956-ffa450edef68"
a3ffa1e0304ac75f54a57f9c50b0a3e7efa1c9ef,"DERBY-1387, DERBY-3385, DERBY-3435 Add a ManagementMBeanTest which requires some refactoring of the MBeanTest to have the JMX setup moved from VersionMBeanTest. Fix VersionMBean not to have the BuildNumberAsInt attribute and rename MaintananceVersion to match the spec and the tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631372 13f79535-47bb-0310-9956-ffa450edef68"
cae4ed4f5af97f0b771ac0a9c4a9fa228f0300b4,"DERBY-3448 Minor cleanup of DbTasks class

 - no need to implement Thread since it is never used as a thread
 - don't set system property for authorization as it is set in the required derby.properties
 - fix mt issue for getting connections (remove shared properties object)
 - don't have if != null checks for objects that cannot be null.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631402 13f79535-47bb-0310-9956-ffa450edef68"
184189f577f7966c417dd24d4fc3a60019189432,"DERBY-3385 Add a higher level JMX test class that will contain fixtures that test the whole of Derby's JMX system rather than specific MBeans.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631440 13f79535-47bb-0310-9956-ffa450edef68"
e1c58c7a1fbe3862af2b8ec5e066aa4ca36aec2f,"DERBY-3385 Add testing to ManagementMBean to ensure Derby's MBeans register and unregister when management is started and stopped

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631448 13f79535-47bb-0310-9956-ffa450edef68"
a68377ce2a012c0c4ed9ceccbc3c3725a496c915,"Checking in code cleanup for DERBY-3304. This code cleanup is based on Knut's review of my
earlier commit 629926. No functionality has changed, but code will be now much easier to
read.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631481 13f79535-47bb-0310-9956-ffa450edef68"
36adcbf6e0e219f874e2ef21b3bc12edd8b65365,"DERBY-3441: Minor am.Statement and am.PreparedStatement refactorings.
Used Arrays.fill where appropriate, and removed some unnecessary throws clauses.
Patch file: derby-3441-2a-minor_am_refactoring.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631515 13f79535-47bb-0310-9956-ffa450edef68"
679997421f47f1c70626513e3d1f7e270c8c6696,"DERBY-3455: Move replication methods from org.apache.derby.database.Database to org.apache.derby.iapi.db.Database
Contributed by V Narayanan


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631527 13f79535-47bb-0310-9956-ffa450edef68"
4e96df7a94c0f9820e2e453ee1dd24d330295ce0,"Removed trailing whitespace.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631533 13f79535-47bb-0310-9956-ffa450edef68"
5d5aab5f5b9bb45b9916fa7cc68375febb609784,"DERBY-3364: Replication failover implementation must be modified to fail at the master after slave has been stopped
Contributed by V Narayanan
Changes:
M java/engine/org/apache/derby/impl/services/replication/net/ReplicationMessageTransmit.java
* Set a timeout on the socket that is translated as a timeout on the
  reads on the I/P streams 
M java/engine/org/apache/derby/impl/services/replication/master/MasterController.java
* Stop log shipment and tear down network both with successful and
  non-successful failover.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631534 13f79535-47bb-0310-9956-ffa450edef68"
d835d9ae54ad14ebc3d433024f651bd29d43a0b6,"DERBY-3326: Introduce a caching logical connection and logical prepared statement in the client driver.
Fixes a bug where all statements prepared with prepareStatement(String,String[]|int[]) in CachingLogicalConnection were returning auto-generated keys.
Patch file: derby-3326-7a-prepare_column_indexes_names_fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631569 13f79535-47bb-0310-9956-ffa450edef68"
869c85a525fa9d52713f1a16cee19f61c3495374,"Fixed JavaDoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631576 13f79535-47bb-0310-9956-ffa450edef68"
8a0018d224295b831be78951229d1cb215c68508,"DERBY-3457 (partial): Closing a caching logical connection must close all associated logical statements.
This partial patch adds a list of open logical statements in SCI. The logic for maintaining the list when statements are closed, and for closing remaining open statements when the caching logical connection is closed, will follow in another patch.
Patch file: derby-3457-2a-stmt_registration.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631577 13f79535-47bb-0310-9956-ffa450edef68"
c6c4d4de6412a61475b671cbe61a6f67e02e6a60,"DERBY-3192: Cache session data in the client driver 
Piggy-backs the current isolation level and the current schema onto 
messages going back to the client. The client caches this information so that
it can be returned to a user (app) without an extra round-trip.

See also http://wiki.apache.org/db-derby/Derby3192Writeup

Patch file: derby-3192-mark2.v8.diff  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631593 13f79535-47bb-0310-9956-ffa450edef68"
04adc295c26b2858615915e85222381cc98810f2,"DERBY-3385 Add some support classes (not used yet) to allow decorators that can change the mechanism of how to get a JMX MBeanServerConnection object. Thus supporting local and remote testing of MBeans and eventually tests with JMX authentication.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631685 13f79535-47bb-0310-9956-ffa450edef68"
498f26edc8d7b8e7869ee53ec889c2d6797e3a8b,"DERBY-3385 Switch the way a JMX connection is opened to be driven by a decorator, step towards having a local mode for the MBeans as well.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631711 13f79535-47bb-0310-9956-ffa450edef68"
ffd9cf9ed0f2eb922dc8cc2540894bff37b18f9e,"DERBY-3385 Add framework for running the MBean tests using the platform MBeanServer but don't enable those tests yet. Error occurs when the tests are run standalone due to Derby not running.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631734 13f79535-47bb-0310-9956-ffa450edef68"
b0ec63ab2c1ee378b5e4a45631275396635f026d,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes

Enabled the new buffer manager for JDK 1.5 and higher.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631930 13f79535-47bb-0310-9956-ffa450edef68"
1ab256e5c743703f66f30b81b30558a5213cdc80,"DERBY-3435 Added some live data to the network server MBean

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@631997 13f79535-47bb-0310-9956-ffa450edef68"
f787ab90e805cbfad66e354440415fb8009bdb02,"DERBY-3375: Localize new error messages added in 10.3 
Adds localizaton for some of the new error messages, and fixes some errors and 
typos in the already localized error messsages.

Patch file: derby-3375.v2.diff  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632032 13f79535-47bb-0310-9956-ffa450edef68"
9f690674fd5e792e68dd1577e144be1ecb32ff39,"DERBY-3466 Add a system identifier to the ObjectName of MBeans registered by Derby to allow disambiguating Derby's MBeans when multiple systems are loaded through different class loaders.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632059 13f79535-47bb-0310-9956-ffa450edef68"
2e8051d442ea559d65d6caed6fa7cae6e2a5f622,"DERBY-3326: Introduce a caching logical connection and logical prepared statement in the client driver.
Enabled the use of the cache session data, more specifically the current schema name.
Patch file: derby-3326-8a-use_session_data_caching.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632088 13f79535-47bb-0310-9956-ffa450edef68"
989263842f5cef931b198a0c5116287c03b6b3b8,"DERBY-3329 (partial): Enable statement pooling in the client JDBC driver.
NB! This patch does not enable statement pooling.
Made sure state is initialized before the reference to self is published, and also moved some code not throwing exceptions out of try-catch blocks.
Added method isStatementPoolingEnabled.
Patch file: derby-3329-1b-enable_statement_pooling.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632093 13f79535-47bb-0310-9956-ffa450edef68"
77a3bd13ce1a46ffd2d5d1e47cb40d223f84f891,"DERBY-3457: Closing a logical connection must close all associated logical statements.
Patch file: derby-3457-1c-stmt_closing.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632112 13f79535-47bb-0310-9956-ffa450edef68"
b5f6067053da792efa0896ca5352e03ffd071fa3,"DERBY-3445 Adds ant targets to run the junit-all tests with EMMA code coverage.
Fixes some permission issues in tests when running coverage with EMMA.
DERBY-3153 Allows the junit-all tests to be run with ant 1.7 

Patch contributed by Vemund √òstgaard Email: vemund at sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632125 13f79535-47bb-0310-9956-ffa450edef68"
7132626f55665decd594511b20130f00e67d6e75,"DERBY-3452 The classes ShutdownException and ErrorStringBuilder have been moved from org.apache.derby.iapi.services.context to org.apache.derby.iapi.error, as they are more about errors than about contexts.
Contributed by Dibyendu Majumdar Email: dibyendu at mazumdar dot demon dot co dot uk

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632129 13f79535-47bb-0310-9956-ffa450edef68"
1e67bdad5fa4ddbf4d5ab624bce90634b8b47041,"DERBY-3480 Update masters for new message files.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632173 13f79535-47bb-0310-9956-ffa450edef68"
31d80c00e8dbd862e1de2276ecb09006cd98846b,"DERBY-3094: Grouping by expressions causes NullPointerException

This change modifies GroupByNode.addUnAggColumns to process the expressions
in the GROUP BY list in descending order of complexity, as measured by the
number of column references in the GROUP BY list element. This ensures
that when we are matching up expressions in the SELECT list with expressions
in the GROUP BY list, that we choose the best match, and don't erroneously
match a sub-expression.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632221 13f79535-47bb-0310-9956-ffa450edef68"
2aa6cce8110bb33a3145ab2f174385ae511b6cc1,"DERBY-3441 (partial): Determine and implement a proper procedure for resetting a prepared statement for reuse in a statement pool.
Extracted an internal method setTransactionIsolationX from setTransactionIsolation, basically to avoid checking for closed connection multiple times.
Also cleaned up JavaDoc and some formatting issues.
Patch file: derby-3441-3a-extract_setTransactionIsolationX.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632279 13f79535-47bb-0310-9956-ffa450edef68"
122ac2041598d6ed6d3f95b3bab07628aa9d9749,"DERBY-3375: Localize new error messages added in 10.3 
Update the master files for 
lang/LOBDB2compatibility.sql
lang/datetime.sql
lang/db2Compatibility.sql
lang/inbetween.sql

Patch file: derby-3375.master.v1.diff  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632307 13f79535-47bb-0310-9956-ffa450edef68"
e1d02a0f133f89214614cf9480b966a20512a3d7,"DERBY-3329: Enable statement pooling in the client JDBC driver.
Adds some tests for statement pooling. The tests are not yet enabled.
Patch file: derby-3329-3b_stmtpooling_tests.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632317 13f79535-47bb-0310-9956-ffa450edef68"
76af6ed27743548e49ed6b989b0a3b0b0cde5321,"DERBY-3441: Determine and implement a proper procedure for resetting a prepared statement for reuse in a statement pool.
Patch file: derby-3441-1c-statement_reset.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632334 13f79535-47bb-0310-9956-ffa450edef68"
f3f832cbe227594e38f76423ed211aa5d4029b5f,"DERBY-3329: Enable statement pooling in the client JDBC driver.
Enabled statement pooling for the client CPDS, and also enabled the tests.
Patch file: derby-3329-2b-enable_statement_pooling-cpds.diff 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632338 13f79535-47bb-0310-9956-ffa450edef68"
1c72cdc5d00dd15199e4a1aab8d47e49244030be,"DERBY-3329: Missed comment in patch 2b.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632342 13f79535-47bb-0310-9956-ffa450edef68"
5a6acbff43ee8023bc3eaff02481f79336e3ea4a,"DERBY-3428: Doing a replication failover should shutdown the database and the connection should no longer be available
The shutdown exception needs to be a StandardException in order to shut down the database (SQLException does not work)
After failove, unfreeze the database before trying shutdown.
Contributed by V Narayanan




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632369 13f79535-47bb-0310-9956-ffa450edef68"
db8dae7dbf09741622ed1040336ab91dd730aed9,"DERBY-3162: Create a framework for replication tests
Contributed by Ole Solberg



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632371 13f79535-47bb-0310-9956-ffa450edef68"
b69d62b9f95036cd39207c9b5297563ab81b28a8,"DERBY-3424 Change getSystemModule() to return null if the monitor is not booted, rather than a NullPointerException

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632398 13f79535-47bb-0310-9956-ffa450edef68"
4cfcb9b875209459b36a993a6b61f5c599498f34,"DERBY-3484 Remove an unused JDBC20Translation class and some unused JDBC translation constants. Note that the minimum JDBC level is JSR 169 which is a subset of JDBC 3. and includes most (but not all) of the constants from JDBC 3.0

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632410 13f79535-47bb-0310-9956-ffa450edef68"
1a4ea31f0900f1da3ebf848c0cc43d11b87563c0,"DERBY-3484 For JDBC 3.0 java.sql.Types constants use directly instead of through JDBC30Translation as JSR169 supports all the types

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632413 13f79535-47bb-0310-9956-ffa450edef68"
a0118e1cf57e34ec548bd877935fd9fdfeba3858,"DERBY-3484 For JDBC 3.0 java.sql.Statement constants use directly instead of through JDBC30Translation as JSR169 supports all the types

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632414 13f79535-47bb-0310-9956-ffa450edef68"
c0052e0a3d24e8b9a3bea25e79505aa4d7d1182a,"DERBY-2109 Security Principals and Permission classes to support system level permissions in Derby through standard Java security policy.

Committed a sub-set of patch 12 related to the security code without enabling any functionality.
Note that the SystemPrivilegesPermissionTest is not added into the _Suite (as the complete patch does)
as I think it will fail under J2ME. It passes with classes but fails with jars but that is to be expected
as the Derby's permissions classes are not yet added into the jars, this will occur once they are used.

Patch contributed by: Martin Zaun Email: martin dot zaun at sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632419 13f79535-47bb-0310-9956-ffa450edef68"
b679de158438954bbed0ac97f299101c2bcee173,"Suppress compile warning in MBeanTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632445 13f79535-47bb-0310-9956-ffa450edef68"
d623e3573aff9ee268b1929226d8bb4bdf30f54d,"Build o.a.derby.security earlier in the build process using a jsr169 target as these permissions might be required on JSR169 and should be independent of other code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632447 13f79535-47bb-0310-9956-ffa450edef68"
d72e3bef07dcc0e13b3806b5255dff3f34e2f5d1,"DERBY-3435 Add StartTime and Uptime attributes to NetworkServerMBean, identical to the Runtime platform MBean.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632448 13f79535-47bb-0310-9956-ffa450edef68"
5a9d458a1bcc34b96d89ceeca7ff14f0f91e1473,"DERBY-2109 Another sub-set of code from the 12 patch in the issue.
Framework code in InternalDriver and sub-classes to check permissions.
Code to enforce engine shutdown permission in InternalDriver but commented out. Need to understand which test code in the patch may be affected.
New error messages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632452 13f79535-47bb-0310-9956-ffa450edef68"
1e8a20fb6de5a3372789860f4bf596a90103f4a7,"DERBY-3484 For JDBC 2.0/3.0 java.sql.ResultSet constants use directly instead of through JDBC[2,3]0Translation as JSR169 supports all the types

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632456 13f79535-47bb-0310-9956-ffa450edef68"
c723732a6432b0e2534c21549a190360f3f0d531,"DERBY-2998 (partial): Initial drop of code to support the OLAP
""ROW_NUMBER () OVER ()"" syntax and functionality within the result
column list of a SELECT query.  This commit adds the functionality,
enables it, and provides an initial set of test cases.

Follow-up work addressing remaining issues will be committed as
it is ready.

Contributed by: Thomas Nielsen (thomas dot nielsen at sun dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632494 13f79535-47bb-0310-9956-ffa450edef68"
204c0402421686914df67a635bf2f9d180c467ee,"DERBY-2109 Major sub-set of patch 12 that requires a user name and password for network server shutdown.
Also includes the code to check a permission when shutting down the network server but
the actual call to check the permission is commented out.

Contributed by: Martin Zaun Email: martin dot zaun at sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632502 13f79535-47bb-0310-9956-ffa450edef68"
d8aa619d2bcfe59281f9260291cf4f040b93e6bf,"Add a simple header (Apache Derby M.m) to each javadoc page for the published api and use Derby's logo on the index pages. Also update the copyright to be 2004-2008 since modifications have been made this year

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632526 13f79535-47bb-0310-9956-ffa450edef68"
e2d4a9e3f1421ef79b632c6b16fa928f94531dfc,"DERBY-3484 build the shared constants in reference using jdk14 compile classpath as they include JDBC 3.0 constants. JSR169 can read the .class files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632527 13f79535-47bb-0310-9956-ffa450edef68"
6300421e3c50521aad03fee93449a76d64dcd6fb,"DERBY-2998: Add support for ROW_NUMBER() window function
Patch contributed by Thomas Nielsen
Patch file: d2998-followup-issue1.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632988 13f79535-47bb-0310-9956-ffa450edef68"
95461055987ee9f027c1de152eb26aa68010e67d,"DERBY-2998: Add support for ROW_NUMBER() window function
Removing unnecessary pointsToWindowNode() in PredicateList.java
Patch contributed by Thomas Nielsen
Patch file: d2998-followup-2.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@632992 13f79535-47bb-0310-9956-ffa450edef68"
585cf5c93038ca60a564e50cf9228e2d8a50f6b8,"DERBY-3192: Cache session data in the client driver
Remove special handling of SYNCCTL in sanity-check ASSERT. Since the final 
version of the real patch piggy-backs changes caused by SYNCCTL there is no 
longer any need to omit the sanity check after SYNCCTL.

Patch file: derby-3192-fup.v1.diff
  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633011 13f79535-47bb-0310-9956-ffa450edef68"
c085d07b60fe39b458ed22c5d5d078ee92617c2c,"DERBY-3454:All the public methods of ReplicationMessageTransmit and ReplicationMessageReceive should
ensure that the socket connection exists (is not null) before performing the respective operations. 
Contributed by V Narayanan



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633026 13f79535-47bb-0310-9956-ffa450edef68"
3920fb472815f3f8cbd4a7fe7e6e3e9a81950864,"DERBY-3433: Change default replication port from 8001 to 4851 (as registered with IANA)
Contributed by Jorgen Loland.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633036 13f79535-47bb-0310-9956-ffa450edef68"
d9d733ad3724ad1a117df2bd7b488c12995b251b,"DERBY-3205: Slave failover follow-up
Contributed by Jorgen Loland.
M java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java
 - ensures that no other operation is used in the same conn
   attempt as failover (also added this check for all other
   repliation operations)
 - checks that the caller of master-side failover is db
   owner (also added to other master-side replication commands)
M java/engine/org/apache/derby/impl/services/replication/slave/SlaveController.java
 - replication network connection is shutdown (including streams
   and socket) when failover is processed

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633043 13f79535-47bb-0310-9956-ffa450edef68"
f0fbf762a9e4c1392d43326c1db7816b47b4685e,"DERBY-3364: If the call to flushBuffer in stopMaster fails, teardownNetwork() is not called.
Contributed by V Narayanan

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633045 13f79535-47bb-0310-9956-ffa450edef68"
08feb26e4e8ca254e6c1a08b8d01d31ee245050a,"DERBY-2998: Add support for ROW_NUMBER() window function
Add OLAPTest to the lang suite.
Patch contributed by Thomas Nielsen
Patch file: d2998-followup-testsuite.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633058 13f79535-47bb-0310-9956-ffa450edef68"
8dd309ebfa1504ab32cbc75ea574d06e0cbf4eaf,"DERBY-3472: Move the mf.workToDo call outside the synchronized block to avoid deadlocks.
Contributed by Jorgen Loland

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633063 13f79535-47bb-0310-9956-ffa450edef68"
3ecd2067e8627386c22f93ee11457acc759296a4,"DERBY-2998: Add support for ROW_NUMBER() window function
Add new queries to the OLAPTest.
Patch contributed by Thomas Nielsen
Patch file: d2998-followup-issue4.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633067 13f79535-47bb-0310-9956-ffa450edef68"
676af8fcec2d1e275185d36af0c0ed5d0c6592cf,"DERBY-3445: Make it easier to use the EMMA tool to measure the code coverage of the Derby testing
Allow SysinfoLocaleTest to run witout emma jars in the classpath.
 
Patch contributed by Vemund &#xD8;stgaard
Patch file: 3445-SysinfoLocaleTest-diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633101 13f79535-47bb-0310-9956-ffa450edef68"
2640427fdd4c8f4420c0a367d57d7cfdc5af4ab9,"DERBY-3445: Make it easier to use the EMMA tool to measure the code coverage of the Derby testing
Added a task <junit-single> which is in turn used by a task <emma-single>. 
Both need the property derby.junit.testclass set to some classname that will 
be attempted run as a junit test/suite. 
 
Patch contributed by Vemund &#xD8;stgaard
Patch file: 3445-singletest-diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633135 13f79535-47bb-0310-9956-ffa450edef68"
b260d954e199c1514fc0dc0c016d789d9deedc6d,"DERBY-2917 TypeId is not longer Formattable as there is no requirement for it to be. Simplify TypeId by having the constants for the supported SQL types simply initialized rather than initialized on first access.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633172 13f79535-47bb-0310-9956-ffa450edef68"
4343e2eb74eb8aff214efca886e6ba0ac3c49d99,"DERBY-2998 (cleanup): Fix some javadoc errors introduced from an
earlier commit (esp. svn # 632494).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633251 13f79535-47bb-0310-9956-ffa450edef68"
e8aba8252f6ba48e3bd1c7bb2cd8cb84944c2ae1,"DERBY-3461 The class EmbedSQLWarning is really an SQLWarning factory class. Therefore, it has been renamed to SQLWarningFactory.
The unused method generateCsSQLWarning() has been removed.
The remaining methods have been renamed to remove the reference to 'Embed'.
Since the re-factored class is generic, it has been moved to org.apache.derby.iapi.error package. 
Contributed by Dibyendu Majumdar Email: dibyendu at mazumdar dot demon dot co dot uk

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633290 13f79535-47bb-0310-9956-ffa450edef68"
fbb0d4fb116ad38f2f2cc7e78711aa2eb1913c75,"DERBY-2917 Cleanup of TypeId to localize creation of a TypeId from a TypeDescriptor in TypeId. Lead to RowSetMulti being an attribute of a catalog type (TypeDescriptor) only, and not a runtime type (DataTypeDescriptor).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633308 13f79535-47bb-0310-9956-ffa450edef68"
6e2e8c0cf9b2ba18e20b11d558db4a7e9f7041eb,"DERBY-2917 Remove now unused BaseTypeIdImpl.wrapperTypeFormatId method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633332 13f79535-47bb-0310-9956-ffa450edef68"
0a805cc169816da197c8d262d71e53bb8238c0f9,"DERBY-3475: Ensure that the control file is not updated when the database is booted in slave pre mode by disabling checkpointing.
Contributed by Jorgen Loland

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633419 13f79535-47bb-0310-9956-ffa450edef68"
41a2601b65fd5f16f5ee86c164a60111f9286550,"DERBY-3437:Give all replication threads meaningfull names
Contributed by Serge Tsv.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633451 13f79535-47bb-0310-9956-ffa450edef68"
5d24c78c8dc6f00eeecd14069bf41b4790487f47,"DERBY-3126
1. Handle that startMaster now correctly gets ""XRE04"" while slave is not yet ready after startSlave.
2. Create {user.dir}/[db_master|db_slave] if not existing.
3. Start servers via rt.exec().
4. New ReplicationRun_Full which handles the distributed case with replication state tests
    and optional load on servers. 
Contributed by Ole Solberg

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633466 13f79535-47bb-0310-9956-ffa450edef68"
28e234d055de9d7ce51cda4b29558392e16a78ef,"DERBY-3330
committed on behalf of Anurag Shekhar

Committed modified versions of patch derby-3330v13.diff and 
db2Compatibility-v2.diff.  The modifications are mostly changed and/or
added comments along with some code formatting changes to make the 
new code match the surrounding code style.

This checkin adds the functionality to
create unique constraints on a key that contains one or more nullable
columns.  This constraint will all inserts of all keys that contain
one or more columns with the null value.  All keys that contain no columns
with null values are constrained to be unique in the table.  

The underlying implementation for this new type of unique constraint uses
the existing btree non-unique index with a small modification to do 
checking at insert time to provide the described unique behavior for null
and non-null keys.  The sorter has also been modified to provide this
support for creating the index.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633560 13f79535-47bb-0310-9956-ffa450edef68"
007d9ee53053a5a9b6ac641ebbaf8582420f34e9,"DERBY-3385 Test MBeans through the platform mbean server, ie. from within the same virtual machine using the same test fixtures as the remote tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633599 13f79535-47bb-0310-9956-ffa450edef68"
8f1b7c50b666532fa275a8b9d08d0db17650b333,"Add XML test checks to the EnvTest used to record some environment information when running JUnit tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633600 13f79535-47bb-0310-9956-ffa450edef68"
469d748c89a002fb088daaed8fb6e117fe7c1fac,"Add EnvTest and unitTests.junit._Suite to the junit-all target. Minor fix to the classpath for emma code coverage not to include derby.jar as it is included through derbynet.jar

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633638 13f79535-47bb-0310-9956-ffa450edef68"
e6a963f7098e9026b70cc27cf10097676b29c240,"DERBY-3424 DERBY-3385 Add test for the ManagementMBean when Derby is not running.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633643 13f79535-47bb-0310-9956-ffa450edef68"
3b904d7e29369047a921e96b61b1d2e1405b4368,"DERBY-3385 Ensure the JMX remote connections opened by the MBean tests are closed, otherwise warnings appear on the console.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633655 13f79535-47bb-0310-9956-ffa450edef68"
14fceff60b635a0614fb552b8c8ba79b872c1de3,"DERBY-3385 Add the management suite to suites.All (through AllPackages).
Change the way the JDK 5 & 6 suites are added by reflection to always attempt to add them and if they fail to add due to a LinkageError leave information that they were skipped and why. JDK 5 & 6 tests will fail to add in JDK 1.4 and J2ME due to class version issues.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633658 13f79535-47bb-0310-9956-ffa450edef68"
5bfd57fdf0a864b4481d71ac0a3206ba78049239,"DERBY-3445
1. Some explanation in the build.xml file for how the emma-targets are to be used.

2. A new target 'junit-single-codeline-jars' which mirrors the 'junit-all-codeline-jars' and 'junit-system-mini-codeline-jars' targets. This target sets the classpath to your compiled jarfiles and runs 'junit-single', so if you don't want to set the classpath manually this target could be used.

Contributed by Vemund √òstgaard Email: vemund at sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633690 13f79535-47bb-0310-9956-ffa450edef68"
956dcadbf328333185bcf740f35b81bc8324c656,"OE system test improvements - Ensure that the Checks text fixtures for the OETest actually cause a failure if they find a problem, previously they were just printing an error since that's what the core class OEChecks was doing. Adding a simple class HandleCheckError to allow OEChecks to be isolated from JUnit but allow the JUnit Checks class to use Assert.fail() to report issues found by OEChecks.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633743 13f79535-47bb-0310-9956-ffa450edef68"
1872308dc49eebf0c3b5e01a60024c8788dcf7b5,"DERBY-3492: Adds missing append of the log chunk to the replication log buffer after forcing a log shipment to the slave.
Contributed by Jorgen Loland

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633807 13f79535-47bb-0310-9956-ffa450edef68"
357ad1ced355f353e091db8f5d9c9e82beb0f9cb,"DERBY-3435 Fixed precision, threading. Changed some attribute names

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633845 13f79535-47bb-0310-9956-ffa450edef68"
8798734697cc0dd716867cd52aa837b18dc1e9c5,"DERBY-3153 Add tempdir attribute to junit-system-mini target to avoid security exception with ant 1.7.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633981 13f79535-47bb-0310-9956-ffa450edef68"
24f9f14bb7127eda6b941152ac60733a249d0aac,"In JDBCPerfTestCase do not print the summary information if the test is run once (repeat=1 and iterations=1) since it adds no value.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633984 13f79535-47bb-0310-9956-ffa450edef68"
46440afd7ab32a71e96a865cd0d341d786038910,"DERBY-1626

Change test to only look at User transactions.  Was getting intermittent diffs
due to timing of background internal and system transactions.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@633986 13f79535-47bb-0310-9956-ffa450edef68"
cd8191c8b9dd34104f16bc15ca16e9a138039f26,"DERBY-3458

Patch submitted by Stephan van Loendersloot. dblook should set the current schema to be
a system schema so that collation of system schema (UCS_BASIC) gets used when dealing
with queries using system table columns and character constants. Stephan has also
provided comprehensive test for the dblook code change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634037 13f79535-47bb-0310-9956-ffa450edef68"
411d1b70b8a72e08c34818dc734977e0a07b8872,"DERBY-2998 (partial): Remove unused method from ColumnReference.java and
fix ROW_NUMBER() functionality so that row numbers are assigned *before*
DISTINCT is applied, instead of after.

Contributed by Thomas Nielsen (thomas dot nielsen at sun dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634057 13f79535-47bb-0310-9956-ffa450edef68"
80d7b74472ca44a3d45ce4380972601f2ede7998,"DERBY-3479: Compress test tables in predicatePushdown.sql before running
any queries that check query plans.  May not necessarily solve the issue
at hand, but it might--and it's good to do the compression anyway since
it can help ensure statistics are consistent, which in turn can help the
optimizer choose consistent plans.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634064 13f79535-47bb-0310-9956-ffa450edef68"
dd2ce24a512899e4db4ac5862e0f843ee2f0b113,"DERBY-3362

Changed code to use right interface to get the control row and return null
if either page does not exist or if the background thread would have had to
wait for the page.  In either case post commit just skips processing.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634101 13f79535-47bb-0310-9956-ffa450edef68"
3522c2ea546dae9c510c70184231379c87850b2e,"DERBY-3499 Ensure Derby's ManagementMBean is registered on a startManagement call if it is not currently registered.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634147 13f79535-47bb-0310-9956-ffa450edef68"
ce68ae0584f5d68216c9b68d90c1b39e45d6f198,"DERBY-3427: setting transaction isolation level to read committed raise ERROR X0X03: Invalid transaction state - held cursor requires same isolation level

Made the network server use the requested holdability when preparing calls.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634206 13f79535-47bb-0310-9956-ffa450edef68"
fc4e76b6bb64d3eeb14d66597b22ee034d50d929,"DERBY-3358: After an incorrect(unsuccesfull) startMaster comand, further correct startMaster attempts also fail.
Contributed by V Narayanan.
M java/engine/org/apache/derby/impl/services/replication/master/MasterController.java
* Added a variable boolean that indicates whether the master controller is currently running or has
  been stopped. I thought I could manage with the earlier boolean variable stopMasterController but
  decided against it because it seemed more tied with the stopMaster operation.
* moved start up parameter initialization from boot to startMaster method. 
* changed the startMaster, stopMaster and the startFailover methods to take into account the boolean
  active.
* replaced the earlier uses of stopMasterController with active.
  
M java/engine/org/apache/derby/impl/store/raw/RawStore.java
* The replication properties that are part of the bootServiceModule call no longer contain the
  startup parameters. These have instead been moved to the startMaster method.
* The replicationProps are empty and not null because a null passed to a bootServiceModule call
  results in a NullPointerException.

M java/engine/org/apache/derby/iapi/services/replication/master/MasterFactory.java
* Changed the startMaster declaration to now accept the startup parameters as the method arguments.

M java/engine/org/apache/derby/loc/messages.xml
M java/shared/org/apache/derby/shared/common/reference/SQLState.java
* Added a new messages for the case when the master has already been booted.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634218 13f79535-47bb-0310-9956-ffa450edef68"
e3972b61f76ae34769b6aae1dca5e0b442384562,"DERBY-3435 Fixed attribute names and javadoc

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634227 13f79535-47bb-0310-9956-ffa450edef68"
c3df437ba649c5427e68beaebae51499f6fa201d,"DERBY-3385 Add a junit-jmx target to run JMX tests only if JDK 1.5 or later.
Contributed by John H. Embretsen Email: John dot Embretsen at Sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634284 13f79535-47bb-0310-9956-ffa450edef68"
16164d57a7a25381b85671379a516fee80b845ac,"DERBY-3321: NullPointerException for 'NOT EXISTS' with nested subquery
Checks fromList for a FromSubquery using a CollectNodesVistior.
The value of bindTargetListOnly is based on the contents of the visitor. 
Patch contributed by Thomas Nielsen
Patch file: d3321.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634316 13f79535-47bb-0310-9956-ffa450edef68"
62af56f3be0f901210e84323a4c8eaa7f9bcc896,"DERBY-3330
committing on behalf of Anurag Shekhar.

Adding upgrade tests that both confirm existing behavior of indexes and
new behavior of constraints on nullable columns.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634383 13f79535-47bb-0310-9956-ffa450edef68"
a63ab5e57ad7bb7bcffd977e082be689a05f12c0,"DERBY-3504 Fix timeout errors in management._Suite when running with classes. Was due to the spawned vm to execute the server failing as installing the policy file requires jars. Changed the decorator to add the -noSecurityManager flag if classes is being used with comments indicating if tests need a different behaviour they need to provide it.
Added a SpawnedProcess utilitly class that correctly handles the output streams written by a spawned process by having two background threads that read from the streams into a buffer. This stops the change the process hangs due to being blocked writing stdout or stderr. Used this utility class in one more location where a vm was being spawned. Ideally the spawning of a java process should be in a single utility not scattered around multple tests, separate cleanup issue. 

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634425 13f79535-47bb-0310-9956-ffa450edef68"
39961b19a423b3463e2d904b1593140a63f81edc,"DERBY-3385 Improving the VersionMBeanTest by adding fixtures for the derbynet.jar MBean, and brushing up some comments. 
Contributed by John H. Embretsen Email: John dot Embretsen at Sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634433 13f79535-47bb-0310-9956-ffa450edef68"
d07f526b854ad0ebb15d497c3b6a6e7f36dad702,"DERBY-3330

contributed by Anurag Shekhar
committing a modified version of sortercomments.diff patch.  This change just
updates the comments associated with the class and routine in this file - no
code changes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634436 13f79535-47bb-0310-9956-ffa450edef68"
0efe521c2aecaa41de78954d7a4769e5eeef680f,"DERBY-3330
submitted by Anurag Shekhar
This commit is of the derby-3330_followup_1_modified.diff.

CreateIndexConstantAction.java

I have changed the name of the variable and added comment to explain what its meant for.
I got confused while commenting last time. This property is required if
TransactionCoordinator has to select the non default Sorter.


BTreeController.java

I haven't optimized it yet. But instead of returning error code setting the ret value so the latch
is cleared before return.


IndexDescriptorImpl.java

Updated both the place (using new name in toString () and using the new attribute in equals methods).




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634540 13f79535-47bb-0310-9956-ffa450edef68"
1d0892eb3d95c29a5870f6a4c8aecc4c1f2ceb87,"DERBY-3388: Improve message handling for replication messages to derby.log

Add timestamp to replication messages written to derby.log and
introduce the following configurable properties:

  * derby.replication.verbose -> true/false - replication messages are
    written to log

  * derby.replication.logBufferSize -> the size of the replication log
    buffers

  * derby.replication.minLogShippingInterval -> the shortest interval
    between two consecutive log shipments

  * derby.replication.maxLogShippingInterval -> the longest interval
    between two consecutive log shipments (a ""soft"" guarantee that the
    slave will not deviate more than this amount of millis from the
    master)

Contributed by J√∏rgen L√∏land <Jorgen.Loland@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634586 13f79535-47bb-0310-9956-ffa450edef68"
68b42276900b8c856a2a44f4df83cfbe400f1445,"DERBY-3388: Fixed javadoc warnings


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634594 13f79535-47bb-0310-9956-ffa450edef68"
a0c8138b6d4e47aed686caa5c7724cc6f7eed29b,"DERBY-3497: OOME at slave during replication
Make sure to reset objOutputStreamt in ReplicationMessageTransmit#writeObject before sending the new object. This removes the old object references both on the transmitter and the receiver side.
Contributed by Jorgen Loland.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634658 13f79535-47bb-0310-9956-ffa450edef68"
46ed45c92df50cdc5e2bacd655a329205f2707ed,"DERBY-3358: Do not cache Throwable in printStackAndStopMaster
Contributed by V Narayanan.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634694 13f79535-47bb-0310-9956-ffa450edef68"
1bac3f3ac9de96d5e3f65e5053011bf340659412,"DERBY-3432: Move replication code from org.apache.derby.impl.services.replication to o.a.d.i.store.replication
Contributed by Jorgen Loland.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634706 13f79535-47bb-0310-9956-ffa450edef68"
e73e5c2f04793c86502d856f97c30d0e9c5fe8fe,"Reverse mistaken commit of Netbeans 6 project file

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634711 13f79535-47bb-0310-9956-ffa450edef68"
251d8da322cff1592659e148ba5d9612e7309b52,"DERBY-3385 a junit test for the JDBCMBean
Contributed by John H. Embretsen Email: John dot Embretsen at Sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634721 13f79535-47bb-0310-9956-ffa450edef68"
40a554bdfa1240363464b1cec127d780d310681f,"DERBY-3162:
- Added tests for checking replication command behaviour in
  different states of replication.
  (ReplicationRun_Local_StateTest_part*)
- Added 'ReplicationSuite.suite()' at end of .../suites/All.java.
  That is, the replication test will be run as part of suites.All.
- replication tests now uses 'SecurityManagerSetup.noSecurityManager()'.
- changed replication test trace output to use Utils.DEBUG().
  Can be turned on by '-Dderby.tests.repltrace=true'. 

Contributed by Ole Solberg

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634734 13f79535-47bb-0310-9956-ffa450edef68"
a52a206cfc62fda1e7a1ef97ea347714761a978a,"DERBY-3456
contributed by Anurag Shekhar

adds code and tests to enable alter table to change allow nulls on a column
which currently participates in a unique constraint.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634752 13f79535-47bb-0310-9956-ffa450edef68"
84cfe6f7d3d926ee9343256ce50dce5e28261fef,"DERBY-3456

missed adding this new file as part of last commit.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634769 13f79535-47bb-0310-9956-ffa450edef68"
5183cd8d0fae317d8955c401f21994b70e72fb24,"Increase ""testing-javadoc"" target's max memory to allow the JVM running
the javadoc tool to complete without OOM errors.  Change was suggested
by John Embretsen (John dot Embretsen at Sun dot com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634773 13f79535-47bb-0310-9956-ffa450edef68"
2f994958e231c8041457f1733e9e13cd383bf03c,"DERBY-3330

Adding an additional upgrade test case to verify that behavior of unique
constraint on non-null column is consistent in all cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634849 13f79535-47bb-0310-9956-ffa450edef68"
477fd5e2da7694c51f6e8b6446dafdbbfeeb6b16,"DERBY-3502: Ensure that conglomerate sharing works correctly in the
presence of unique constraints over nullable columns.

Contributed by: Anurag Shekhar (anurag dot shekhar at sun dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634852 13f79535-47bb-0310-9956-ffa450edef68"
740feb0a2e01ee8f82e96d547761e0a7248d2a48,"DERBY-3514 Ensure that the client socket used for network server commands is closed if the command throws an exception.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634865 13f79535-47bb-0310-9956-ffa450edef68"
2e3ed685f24857f3633cb3ee725787bdef06ef30,"DERBY-3456

Clean up comments and adjust newly added code to match style of
surrounding code.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634896 13f79535-47bb-0310-9956-ffa450edef68"
587dfe10f2b38bbf90c10d208011af6e39f06309,"DERBY-2109 Minor cleanup of the security code added for system permissions to change methods not to be public, add a minor comment and fix a file header

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@634993 13f79535-47bb-0310-9956-ffa450edef68"
d0a0144b2d9805074f208007e21dc43f76db9025,"DERBY-3435 Implements a new test class for the NetworkServerMBean and adds it to the management test suite. All attributes are tested, although testing of the actual attribute values could be improved (see code comments). Attribute names and return types are always tested. 
Contributed by John H. Embretsen Email: John dot Embretsen at Sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635115 13f79535-47bb-0310-9956-ffa450edef68"
f30ee4152e260e7a94248860c8f73e6eaceef49b,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes
DERBY-3493: stress.multi times out waiting on testers with blocked testers waiting on the same statement

Changed ConcurrentCache.create() to match Clock.create() more closely.

The patch basically makes ConcurrentCache.create() use
ConcurrentHashMap.get() directly instead of going through
ConcurrentCache.getEntry(), which may block until the identity has
been set by another thread. Then create() fails immediately if the
object already exists in the cache, also if another thread is in the
process of inserting the object into the cache. Since this introduced
yet another difference between find() and create() in
findOrCreateObject(), I also followed √òystein's suggestion from his
review of DERBY-2911 and split findOrCreateObject() into a number of
smaller methods, which I think makes the code easier to follow.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635183 13f79535-47bb-0310-9956-ffa450edef68"
2c4fde823c923f35fc5269ef23e58a86d73fe36c,"Bumping the minor version number on trunk. New version number is 10.5.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635555 13f79535-47bb-0310-9956-ffa450edef68"
3141a3ba83fe66574a62620eac5d4eea4b86848b,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes

Improved comments as suggested in the review.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635556 13f79535-47bb-0310-9956-ffa450edef68"
4eccdff73d4dec47d0d797ff25f392febe8e45a4,"DERBY-3162:
This patch uses the complete classpath without attempting to run with a minimal classpath when starting servers etc.
The patch still disables ReplicationSuite.suite() in suites.All. 
Contributed by Ole Solberg

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635575 13f79535-47bb-0310-9956-ffa450edef68"
29141b8574ef30d749228f55cb32509f2121363a,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes

Improved comments as suggested in the review.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635577 13f79535-47bb-0310-9956-ffa450edef68"
6eb4ff89944b1a343ce834bf2885ec4404fc8515,"DERBY-3503 Change stress.multi to dump thread stacks before killing off testers with jdk 1.5 and higher



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635625 13f79535-47bb-0310-9956-ffa450edef68"
2b80f9bcc87fd0cd953cdc972063a2c2a7d5110c,"DERBY-3462 Add methods to check for monitor and control permissions in the implementation of NetworkServerMBean and VersionMBean. Actual methods do not perform any security manager checks yet. Will be added in a future commit

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635723 13f79535-47bb-0310-9956-ffa450edef68"
cafbf4d1d4d56770947c6cc9aaccd7cba7ad7de3,"DERBY-3506 Add some framework to get jmx connections with a user name and password when using jmx authenication. Not used yet by any test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635766 13f79535-47bb-0310-9956-ffa450edef68"
9ef0012d7f76ed181612308df28341e995688289,"DERBY-2954:
Remove NetworkServerControl commands for replication.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635920 13f79535-47bb-0310-9956-ffa450edef68"
86be795f99ca9c5f944048ebc76b5d847995bbae,"DERBY-3520 Convert views.sql to JUnit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635964 13f79535-47bb-0310-9956-ffa450edef68"
4fa5de95902ebcea12529ac513b7a4607fe63a8f,"DERBY-3520 convert views.sql to junit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@635979 13f79535-47bb-0310-9956-ffa450edef68"
f432362d8a7f2d496ba5296086ed148c4929fbcb,"DERBY-3341: For Table Functions, coerce data values coming out of Java ResultSets into the SQL data values declared in the signature of the Table Function.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636004 13f79535-47bb-0310-9956-ffa450edef68"
392583a29bece5168e4e0a028d5d56dd87d044e7,"DERBY-3506 add a couple of privileged blocks to MBeanTest in anticipation of running without a security manager for the platform tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636029 13f79535-47bb-0310-9956-ffa450edef68"
5c13d9625e7ca4a6ebe62f58e2196bbbce37e20a,"DERBY-3520 convert views.sql to junit

Neglected to add new test to suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636079 13f79535-47bb-0310-9956-ffa450edef68"
435735bf8490dd9f9537d377ffb2de189fd12580,"DERBY-3330

javadoc fixes, mostly related to DERBY-3330.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636114 13f79535-47bb-0310-9956-ffa450edef68"
85b9e37caedde5b0be3150255678d46ce7d0400e,"checking in fixes to allow a 50 user by 59 minute configuration of the
stress test to be run.  I ran this once so far on a 4 way, XP box and it
passed.  In the past this test has sometimes found bugs that the shorter
and less users stress test did not uncover - I seem to remember it mostly
being useful for statement cache issues.  Note on my machine each run
eats up around 11 gig - mostly from the .out files of each of the test runners.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636120 13f79535-47bb-0310-9956-ffa450edef68"
0b57378ce7dc26f084b7750493bc259ee665f3e2,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes

Clean-up to address review comments:

  - Make ReplacementPolicy.insertEntry() void since the return value isn't used

  - Simplify handling of small caches in ClockPolicy.rotateClock()

  - Factor out common code in rotateClock() and shrinkMe()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636247 13f79535-47bb-0310-9956-ffa450edef68"
5ea074038d14882b0f340a8a0e0e9032f8ac53fd,"DERBY-3521: Functionality for skipping testsuites on certain platforms fails for the new management testsuite on phoneME advanced

Patch contributed by Vemund √òstgaard <vemund@sun.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636256 13f79535-47bb-0310-9956-ffa450edef68"
e8b3bd13054db5714f1cabe0c2eea7b0098934f0,"DERBY-3506 add more privileged blocks to MBeanTest & JMXTest in anticipation of running without a security manager for the platform tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636319 13f79535-47bb-0310-9956-ffa450edef68"
93cf8fdc7c01e786a8ea726d0e885512b2b4a263,"DERBY-3506 Run the MBean test fixtures that run with the platform MBeanServer to run under the security manager.
Add permissions to derby_tests.policy to allow Derby to register its MBeans and for the tests to register the application management MBean and use Derby's MBeans.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636323 13f79535-47bb-0310-9956-ffa450edef68"
a977a87b5e7e104f1726aea3250fa7f8ff79eb9b,"DERBY-3520 convert views.sql to Junit

Fix javadoc warning



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636381 13f79535-47bb-0310-9956-ffa450edef68"
d7b5f4a210eab04527e67c497eaa5ded111a9bec,"DERBY-3385 This patch modifies the JDBCMBeanTest so that the expected values for the MajorVersion and MinorVersion attributes are obtained from the embedded driver instead of the client driver.

The patch also moves the two generic utility methods for fetching sysinfo output from MBeanTest.java to org.apache.derbyTesting.junit.Utilities.java. In addition, the patch revises some Javadoc comments in NetworkServerTestSetup.java. 
Contributed by John H. Embretsen Email: John dot Embretsen at Sun dot com

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636417 13f79535-47bb-0310-9956-ffa450edef68"
5917694379a351a17312ebd83c701fab3962542a,"DERBY-3491 Change Derby's SystemPermission to be a two argument permission with:

target-name: jmx|server|engine
action: control|monitor|shutdown

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636435 13f79535-47bb-0310-9956-ffa450edef68"
f7f7756aea4d2b2d5beea4a1abaa7716453b7d5b,"Simple change that splits the ant junit HTML report generation from the junit-all target. Now junit-html can be included in any run of tests via ant to produce a HTML version of the report, which is much more readable than XML. E.g.

ant junit-system-mini-codeline-jars junit-html

ant -Dderby.junit.testclass=org.... junit-single junit-html

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636479 13f79535-47bb-0310-9956-ffa450edef68"
a90a5709ed8b35c30e7f07bc2d8a444ba07e4880,"DERBY-3462 Enforce requiring SystemPermission(""jmx"", ""control"") for starting and stopping Derby's JMX management.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636493 13f79535-47bb-0310-9956-ffa450edef68"
5b5088723323dde61816db41a547b315dcc6a9d3,"DERBY-1387 Make the registration of MBeans with JMX robust in the case of permission issues. Stops a hang in derbynet._Suite where a network server was booted with insufficient permissions for MBeans.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636583 13f79535-47bb-0310-9956-ffa450edef68"
497ffc7e1864ce28385426179b7413c7e33b15f7,"DERBY-2351: ORDER BY with expression with distinct in SELECT list.

This is a follow-on patch for DERBY-2351, which addresses a number of
problems involving column aliasing that occurred with the initial
DERBY-2351 patch. After the initial DERBY-2351 patch, queries such as
the following one failed:

   select distinct c1 as a1 from t order by c1

This patch modifies the ORDER BY column matching algorithm to
match column references using multiple rules, depending on
whether or not the ORDER BY reference is qualified or not:
 - unqualified references are matched first against the alias name,
   then against the underlying column name from the source table
 - qualified references are matched only against the underlying
   specified table

A number of additional test cases are added as part of this patch to verify
that the above query, and other similar queries, now work as intended.

This patch rejects at least one query known to have worked before:

    select t1.id as idc1, t1.id as idc2 from t1 order by t1.idc1, t1.idc2; 

After discussion with Derby developers, this query was felt to
be invalid, as there is no such column ""idc1"" in table ""t1"". The query
should *not* qualify the ORDER BY column references with table ""t1"":

    select t1.id as idc1, t1.id as idc2 from t1 order by idc1, idc2; 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636608 13f79535-47bb-0310-9956-ffa450edef68"
fa6fca2972ba0e51c43ef383b5c2641738796bdf,"Minor cleanup in NSSecurityMechanismTest to use some utility methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636625 13f79535-47bb-0310-9956-ffa450edef68"
72f8fa8218e0cb47cb0a4d3bc5bd19a308666903,"Add support for ""short"" DataSource attributes to JDBCDataSource.setBeanProperty. Use method in NSSecurityMechanismTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636626 13f79535-47bb-0310-9956-ffa450edef68"
086dee28d18fb5835d9f07710934d2f061dd97c1,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes

Addressed some review comments:

  - Split calls to CacheEntry.lockWhenIdentityIsSet() into to separate steps
    (lock and wait) to make it easier to follow the code.

  - Created named constants for some of the heuristics in ClockPolicy


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636670 13f79535-47bb-0310-9956-ffa450edef68"
3be5c9d756eb33e4fbc25629d93308b0e4afd8f8,"DERBY-3525 Remove unneeded code to get JDBC level in BrokeredConnection and BrokeredStatement classes



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636753 13f79535-47bb-0310-9956-ffa450edef68"
1e79717bef2869a81413cd240f84a275649e02ef,"DERBY-3506 Ensure that MBeanTest.enableManagement() uses a privileged block for its invoke to turn on jmx management.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636803 13f79535-47bb-0310-9956-ffa450edef68"
a39951c8b4d14f02d0969127632eddfce6dedb77,"DERBY-3506 Add requirement for SystemPermission(""engine""|""server"", ""monitor"") for getting attributes of the VersionMBean. Add various javadoc improvements related to the change.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636813 13f79535-47bb-0310-9956-ffa450edef68"
eb71b7f7173bd067ae7d3f657f8000031e92d04a,"DERBY-3506 Add requirement for SystemPermission(""server"", ""monitor"") to NetworkServerMBean attributes that are not security sensitive.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636818 13f79535-47bb-0310-9956-ffa450edef68"
13b01135d31aa20f65724df24e16b6cd71103551,"Add the SystemPrivilegesPermissionTest to junit._Suite to gain coverage of the SystemPermission class.
Minor refactor of the class to have seperate fixtures for the various tests, it was really already coded that way but the sub-methods were
run as a single fixture.
Commented out code related to DatabasePermission for two reasons:
 1) DERBY-3531 DatabasePermission uses methods not in J2ME/CDC/Foundation
 2) Since DatabasePermission is not used it would fail with the jar tests since it is correctly not included in any jar file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636824 13f79535-47bb-0310-9956-ffa450edef68"
63e167ec8d8a6ccc2ea728c2544e13b7ec4c26eb,"DERBY-3448 : adjusting re-setting of auto-commit state and isolation level.
  Patch contributed by Manjula Kutty.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636829 13f79535-47bb-0310-9956-ffa450edef68"
f201787c33bb5a0654176d376e92ac27a6594e40,"DERBY-3508:Log receiver thread fails with NPE at failover when master has died
The NPE was caused by the log receiver thread trying to get the port from a closed down ReplicationMessageReceive.
Contributed by Jorgen Loland


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636833 13f79535-47bb-0310-9956-ffa450edef68"
dbe5dc3bea25630ba2ab2496ee1e88e91bb8549b,"DERBY-3162: Fixes several problems wrt. classpath, running on Windows, incorrect master or slave database path. 
Contributed by Ole Solberg

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636837 13f79535-47bb-0310-9956-ffa450edef68"
693f0e8997694a4c4b62a10fccb0c447139abe5b,"DERBY-3310 ASSERT in MergeSort.checkColumnTypes() disallow legal type conversions

Changed copyTypesAndLengthsToSource to not change the type of the
underlying expression,  because that same expression is pointed to
by the child result set's result column list.  Only NormalizeResultSetNode
should have a   type that is different than its expresssion.
See Army's write up attached to DERBY-3310 for a detailed analysis of the
 role of copyTypesAndLengthsToSource.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636872 13f79535-47bb-0310-9956-ffa450edef68"
acfc6888fa4cb13d023c6d25d44c932c41ad401f,"javadoc fixes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636875 13f79535-47bb-0310-9956-ffa450edef68"
356ff6fc806cd4730e73ed6c36c78e69785b7df8,"DERBY-3462 DERBY-3491
Add permission checks for SystemPermission(""server"", ""monitor"" | ""control"") to NetworkServerMBean.
Fix SystemPermission's handling of multiple actions and add tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636878 13f79535-47bb-0310-9956-ffa450edef68"
04014b20e364f99c9a35efabf67abfc7bbd8dfa5,"DERBY-3448 - backing out revision 636829, it doesn't actually build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@636892 13f79535-47bb-0310-9956-ffa450edef68"
8316893910a8d757697cb1cedca17094b874bf69,"Update the ASF collected works copyright to be 2004-2008 in NOTICE and for the javadoc

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@637190 13f79535-47bb-0310-9956-ffa450edef68"
58addc4f3da20182f012d7157b299ec988b9784d,"javadoc fixes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@637200 13f79535-47bb-0310-9956-ffa450edef68"
cd386621b8b5990774320ca65702c32fb103907b,"DERBY-3523 sql states (X0Y63, X0Y63, X0Y63.S) related to nulls in unique constraints are associated with wrong message texts

Introduced alternate message text for soft upgrade.

Contributed by Anurag Shekhar -  anurag dot shekhar at sun dot com



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@637244 13f79535-47bb-0310-9956-ffa450edef68"
6e37f5c68bd8750a4278e386c0f0d0bc34d41445,"Improve the javadoc in SystemPermission to include a table describing the permissions supported by Derby.
Add a serial version id to SystemPermssion for DERBY-3476

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@637264 13f79535-47bb-0310-9956-ffa450edef68"
042d496d02f1fcaeaffb64c9c14b703679f5fff9,"Ensure the junit tests run with ant 1.7 by adding permission to write to the current directory in a test specific policy file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@637275 13f79535-47bb-0310-9956-ffa450edef68"
67d07f81f99e712df472b946e26e677588454b5c,"Also need to grant write permission to junit.jar for ant 1.7.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@637281 13f79535-47bb-0310-9956-ffa450edef68"
7b2b4dbf81557c8e12363788a99b3a655c8f3f4b,"DERBY-3373: SQL distinct and order by needed together.

Derby was issuing the error message ""The ORDER BY clause may not specify
an expression, since the query specifies DISTINCT"" in situations where
the message was not appropriate. An example of a query that should have
been accepted, but was being rejected, is:

   select name from person order by lower(name)

This patch backs out part of the changes that went in with DERBY-2351;
specifically, this patch reverts the ""if"" test which was rejecting any
DISTINCT query which had a pulled-up ORDER BY expression. Not all such
expressions are invalid, as the above example shows. Since the ""if""
statement cannot distinguish between valid expressions and invalid ones,
it is better to revert to the pre-DERBY-2351 behavior.

A few new tests are also added to demonstrate the behavior.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@637529 13f79535-47bb-0310-9956-ffa450edef68"
f1567ead9bbc05423a5e76248ed000503b9ee582,"DERBY-3379 (partial): Updated some comments in buildDss, and converted comments for method finalizeDssLength into JavaDoc.
Patch file: derby-3379-2a-comment_and_JavaDoc.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@637805 13f79535-47bb-0310-9956-ffa450edef68"
58a99b7831558139998b4e8367610e5f95ca0d67,"DERBY-3448 ; adjusting re-setting of auto-commit state and isolation level.
  Reinstating modifications of revision 636829, plus additional changes to
  enable build.
  Patch contributed by Manjula Kutty.
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@638077 13f79535-47bb-0310-9956-ffa450edef68"
ae9260fea44534dfbf26bb8ce1e27f93fb144253,"DERBY-3538 NullPointerException during execution for query with LEFT OUTER JOIN whose inner table selects all constants.

Contributed by Army Brown

Here are some of Army's comments ...
it *appears* that the problem is in the ""doProjection()"" method of ProjectRestrictResultSet. During code generation we recognize that the SELECT has all constants and thus that its result set is ""reusable""; see ProjectRestrictNode.generateMinion(), esp. the call to:

  mb.push(resultColumns.reusableResult());

At execution, ProjectResrictResultSet sees that it can reuse the result set so it ""caches"" the execution row in doProjection() and then just returns that on subsequent calls. However, when returning the cached row, the method does *not* call ""setCurrentRow()"" with the cached row. In some cases (esp. left outer join) that can mean that the ""current execution row"" corresponding to the ProjectRestrictResultSet remains null when it should be set to the cached row. Thus when it comes time to evaluate the ON predicate, which references the ProjectRestrictResultSet's execution row, the predicate fails with an NPE because the ""current execution row"" is not set for that PRRS. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@638425 13f79535-47bb-0310-9956-ffa450edef68"
c5720688bfd27ff012b7c4c3bc790b4a04de8314,"javadoc fix.  I could not figure out how to get this one fixed, and just
removed the @see.  I tried expanding it.  I also tried including an import
of the expanded class but that import caused the build to fail, but did fix
the javadoc error.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@639015 13f79535-47bb-0310-9956-ffa450edef68"
ce9c46e92c7ab2e42aad168bbbe6723194f993ab,"DERBY-3548 Change SystemPrivilegesPermissionTest to only perform the fixture that tests using Subject if that class is available on the current virtual machine. Allows the test to pass and run useful fixtures in J2ME/CDC/Foundation 1.1

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@639059 13f79535-47bb-0310-9956-ffa450edef68"
5dce2c027a12c219701f9a1baf69183891cca0c2,"exclude derbyrun.jar from getting put in the core plugin.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@639142 13f79535-47bb-0310-9956-ffa450edef68"
b2fb1d5d83a4ff434a38d3cc813cd0c7f5cd1a16,"DERBY-3536: Fix casting of DECIMALs in TableFunctions on J2ME platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@639428 13f79535-47bb-0310-9956-ffa450edef68"
c5d787688fac5b5ad3a4bdaa09bca4f014375f19,"DERBY-3544 If the network server fails to shutdown in NetworkServerTestSetup.teardown() then destory the process if it was run as a spearate jvm. Otherwise a chance of a hang existed when the executing the wait for on the process object.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@639433 13f79535-47bb-0310-9956-ffa450edef68"
b01cff8da0b9f4cf91af38a207c22acdf7d13a2e,"DERBY-3558

Add permissions to ""class"" portion of the derby test policy file that were
added to the jar file section previously.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@639721 13f79535-47bb-0310-9956-ffa450edef68"
be034ab0cfb3d38844d4f7ba96c65c08e0171a42,"DERBY-3563 ; increasing plugin version numbers after changes for DERBY-1931
  Patch contributed by Manjula Kutty


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@639755 13f79535-47bb-0310-9956-ffa450edef68"
5ef7c5fb05fa3c895e3a83788bea15d5be8efec5,"DERBY-3162: Fix to allow ReplicationSuite to run on JVM 1.4 and 1.5:
Contributed by Ole Solberg.

The replicationTest framework (ReplicationRun) used Drivermanager.getConnection()
to do startMaster=true and startSlave=true concurrently.
On 1.5 (and 1.4), but not on 1.6, it turned out that this caused a deadlock (on DriverManager.class?).
Using DataSource instead of DriverManager solved the problem.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@640506 13f79535-47bb-0310-9956-ffa450edef68"
bfc59e5b3e98b77c0dd6d920ed1f0cac3fe65954,"DERBY-3494 Move the setup of NormalizeResultSetNode into the NormalizeResultSetNode (partial)

Remove genNormalizeResultSetNode method and incorporate into NormalizeResultSetNode



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@640520 13f79535-47bb-0310-9956-ffa450edef68"
d3d292eb9bb7f6bb311e5d60b5b4e5c4a518ba5c,"DERBY-3551: Handle normallyy unlogged operations (create index, import) during replication
Contributed by V Narayanan

1. If unlogged operations are running when replication is started, throw an error.
2. If normally unlogged operations are started when replication is running, turn on logging.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@640631 13f79535-47bb-0310-9956-ffa450edef68"
4c8f5703cb98fb67fa095373a7f4fa3f5f6ac441,"DERBY-3496: CallableStatement with output parameter leaves cursor open after execution
Patch file: derby-3496.diff (fixed the indentation problem)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@640787 13f79535-47bb-0310-9956-ffa450edef68"
1e0eabf12e13be19604c41ddde1ca52eca55cd97,"DERBY-3556 change derby.tests.trace property to print the name of the test before it runs it

Contributed by Suran Jayathilaka (suranjay at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@640788 13f79535-47bb-0310-9956-ffa450edef68"
486c497f3d6f1a0392eb66abff3e8e40d369d645,"DERBY-3537: Commit Martin's patch which shuts down the server on SSL errors even without credentials.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@640828 13f79535-47bb-0310-9956-ffa450edef68"
b836d3a4e4dccf766e78ec56b648c3453dd02069,"Added myself to committers list

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@640950 13f79535-47bb-0310-9956-ffa450edef68"
c6d09729c8112d0d4ffddb0601b8cadff553a121,"DERBY-3554 Change Collation test to run DatabaseMetaDataTest, BatchUpdateTest,GroupByExpressionTest, and UpdateableResultSetTest for only one locale

Contributed by Suran Jayathilaka (suranjay at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@640982 13f79535-47bb-0310-9956-ffa450edef68"
9e93a53d1f356f064735de9d88834e5339f70a19,"DERBY-3382: Adds regression test for out of sync checking between master and slave.
Contributed by Jorgen Loland

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@641221 13f79535-47bb-0310-9956-ffa450edef68"
0982847241b7bc2f7e37ba5613295dc9d9084e05,"DERBY-3523 sql states (X0Y63, X0Y63, X0Y63.S) related to nulls in unique constraints are associated with wrong message texts

Add upgrade test to verify messages are the same when created with 10.3 and 
with soft upgrade.

Contributed by Anurag Shekhar (anurag dot shekhar at sun dot com)
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@641398 13f79535-47bb-0310-9956-ffa450edef68"
5915e88638c19ef4458f67ee0838b4c7f99b4348,"Back out upgrade test change for DERBY-3523. It was causing failures in the 
tinderbox run.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@641615 13f79535-47bb-0310-9956-ffa450edef68"
428594e166435c257d9412517c5ac79afb279c3e,"DERBY-3435 Javadoc changes + package.html. Submitted by John Embretsen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@641762 13f79535-47bb-0310-9956-ffa450edef68"
a8edfcf1279c9fec552af15b911d9a8766cab5a8,"DERBY-3523 sql states (X0Y63, X0Y63, X0Y63.S) related to nulls in unique constraints are associated with wrong message texts

add upgrade tests.  Contributed by Anurag Shekhar (anurag dot shekhar at sun dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@641911 13f79535-47bb-0310-9956-ffa450edef68"
d18f33852a7195f1cbcdf8ea01708cded60e9b49,"DERBY-3526: AsynchronousLogShipper#workToDo is blocked while the log shipper sends a log chunk
Use a different object to synchronize on while calling wait and notifying the log shipper thread.
Contributed by V Narayanan

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642184 13f79535-47bb-0310-9956-ffa450edef68"
56c419e41021e1f2cd4f28414a59133a2c52fd87,"DERBY-3447: Shutdown on a database without stopping replication hangs
 - Set replication threads to be daemon threads.
 - Implement ModuleControl#stop for MasterController
 - Adjust test to new behavior
Contributed by V Narayanan


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642191 13f79535-47bb-0310-9956-ffa450edef68"
017ac10c3109f5f4b70856bd5fee6d9db6ee144c,"DERBY-3162: 
Make replication tests run when starting with a relative path for classpath
Enable ReplicationSuite in suites.All
Contributed by Ole Solberg

Details:
1. java/testing/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationSuite.java
 .1 Added ReplicationRun_Local_1.suite() which does a simple consistency test
     on contents in master and slave db's after replication.
2. java/testing/org/apache/derbyTesting/functionTests/tests/replicationTests/ReplicationRun.java
 .1 Set user.dir and derby.system.home correctly when starting servers.
    (StartServer())
 .2 Minor cleanup on detecting we are running in a ""localhost"" environment.
 .3 Cleanup some DEBUG.
 .4 Do master and slave verification directly from the ReplicationRun VM.
    (verifySlave(), verifyMaster())
 .5 Set user.dir correctly when running existing JUnit tests as
    ""replication load"".
    (runUserCommandLocally())
3. java/testing/org/apache/derbyTesting/functionTests/suites/All.java
 .1 Add ReplicationSuite.suite() to suites.All.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642193 13f79535-47bb-0310-9956-ffa450edef68"
7a6650c33f7677eae252ba7696177bce133413ab,"DERBY-3549:  Unable to start slave mode after authentication failure on a previous startSlave attempt
Unboot database if startslave command fails on authentication.
Contributed by Jorgen Loland


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642219 13f79535-47bb-0310-9956-ffa450edef68"
419210d94a19a54cb9d7bebc0cdae7ab176252f8,"DERBY-3566 Alter column set data type not allowed in soft upgrade mode with unique constraint.

Contributed by Anurag Shekhar (anurag dot shekhar at sun dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642420 13f79535-47bb-0310-9956-ffa450edef68"
3ff9998c6c49553b1bf61abfca53f5691707bdee,"DERBY-3572  directory error in the file ""java/testing/README.htm""

Contributed by Junjie Peng (pjj dot ccce at gmail dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642549 13f79535-47bb-0310-9956-ffa450edef68"
1d6c1a5b1a13ce1bcd3805b9c2c65b42e94bea25,"DERBY-3576: Merge EngineBlob and EngineClob into a single interface.
Merged the two interfaces and added the method 'free'. There was no need to sepearate between a Blob and a Clob where the interface was used. If such a need arises, one should consider adding new interfaces extending EngineLOB.
Patch file: derby-3576-1b-enginelob_interface.diff 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642707 13f79535-47bb-0310-9956-ffa450edef68"
10cd9408e15a981885dd417af4762e12651e1c39,"DERBY-3580: Remove unused method Connection.resetConnection(LogWriter, String, Properties).
Patch file: derby-3580-1a-remove-method.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642726 13f79535-47bb-0310-9956-ffa450edef68"
ce4ee235ff275c7ba35bd5ef4c5f975ce4073b07,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes

Minor change in ClockPolicy.shrinkMe() to make it easier to read.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642752 13f79535-47bb-0310-9956-ffa450edef68"
2d09c33bc2ee3ab6c45841bc7d7d60cbfed0cbbf,"DERBY-2911: Implement a buffer manager using java.util.concurrent classes

Removed ClockPolicy.trimMe() since it adds complexity without adding
any obvious benefit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642755 13f79535-47bb-0310-9956-ffa450edef68"
5d59e9dba4799a0bdf5d2d4965b41ab366e8a0a6,"DERBY-3379: ""No Current connection"" on PooledConnection.getConnection() if pooled connection is reused during connectionClosed processing.
Patch file: derby-3379-3a-minimal_fix_and_test_enabling.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642942 13f79535-47bb-0310-9956-ffa450edef68"
b7c93faab44b41abdc63b7e6cb375413492c85b1,"DERBY-3578: DrdaStreamOutBufferSize attribute of NetworkServerMBean should be of type int instead of String.
Type changed from String to int.
Patch file: d3578_v01a.diff

Patch contributed by John H. Embretsen.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642948 13f79535-47bb-0310-9956-ffa450edef68"
c6ed70e8231b18c3f734029c39096dea44e4cbcd,"DERBY-2892 Closing a resultset after retrieving a large > 32665 bytes value with Network Server does not release locks

Fixes getString(), getCharacaterStream(), getBytes, getBinaryStream() so they don't hold locks.  Also restricts BLOB columns to a single getXXX call.

Patch contributed by  Oystein Grovlen (oystein dot grovlen at sun dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642974 13f79535-47bb-0310-9956-ffa450edef68"
c283bcdc89766e8b7399394e009e5e2867873624,"DERBY-3527: The slave will not notice that a network cable is unplugged and will therefore reject failover/stopSlave commands
Checks if the network connection is up by sending a ping message from the slave to the master. 
The shipment of the message has to happen in a separate thread because TCP timeout for send message is 2 minutes, and not configurable. 
Also added a message reader thread on the master that currently accepts two kinds of messages: ping and ack
Contributed by Jorgen Loland


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642982 13f79535-47bb-0310-9956-ffa450edef68"
7775fc76794422e94dbbb18dfb45ee1049260181,"DERBY-3352: truncateTable crashed, Caused by: java.lang.NullPointerException
Patch files: derby-3352.diff, test.diff (contributed by Knut Anders Hatlen)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@642996 13f79535-47bb-0310-9956-ffa450edef68"
6b95f6159f76cd9767b44e972b6c35fc0d2fbc24,"DERBY-3320 This commit will ensure that if the Collator support does not exist during
a territory based database creation, then we will throw an exception saying Collator
support does not exist. In case of subsequent boot of a successfully created territory
based database, we will check for the Collator support from JVM at the time first collation
related operation is run on the database. This can happen if the database recovery needs
to be done at the boot time or it can happen after the database has booted and user has
issued a SQL which requires Collator support. 

The details of the changes that went into different classes are as follows.

DataDictionaryImpl
With this patch, the collation attribute on JDBC url now gets verified in DVF.boot method 
and hence we do not need to verify the value again in DataDictionaryImpl.boot. We can assume 
that if the user has provided the collation attribute, then it will be set to UCS_BASIC or 
TERRITORY_BASED. If user did not supply this attribute, then we will use the default 
territory of UCS_BASIC

BasicDatabase
The boot method here would call DVF.setLocale in order to set the correct locale and
Collator object on DVF. With this patch, DVF.boot method does the setting of locale
and Collator object and hence BasicDatabase.boot does not need to make a special call
on DVF.setLocale. I have removed setLocale method from DVF because there are no other
callers of the setLocale method.

DVF and DVFImpl
The boot method here has been modified so that it will set the locale on itself rather than
rely on BasicDatabase.boot to do it. In addition, it will it will check if the user has
supplied collation attribute on JDBC url at database create time. If none specified, we will
user the default of UCS_BASIC. If user has provided a value for collation attribute, then
this method will verify that it is set to UCS_BASIC or TERRITORY_BASED. If not, it will
throw an exception. During database create time, boot method will make sure that the
Collator support is available for the requested locale for TERRITORY_BASED database. If not,
it will throw an exception. In case of subsequent database boot, the verification for the
Collator support will be done the first time a collation operation is executed on the DB.
This can happen at database recovery time if the database has to be recovered or it can
happen later when user issues a SQL which required a collation operation. This collation
support check is done in the new method called verifyCollatorSupport(). 
In addition to changes in the boot method, I had to change the signature of existing apis 
like getNullChar, getNullVarchar etc to throw StandardException. These methods can throw 
an exception if they are the first ones to require collation support and during the 
collation support check, we can throw exception if the Collator support from JVM is not 
found.

messages.xml and SQLState.java
Added a new SQL State XBM04 for the case when the requested locale for territory based
database does not have Collator support from the jvm.

CollationTest
Added a test case which tries to use a non-existent locale to create a territory based 
database. The creation fails as expected and we throw exception that the Collator support
does not exist for the requested locale.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643292 13f79535-47bb-0310-9956-ffa450edef68"
1a1b70804860bd9b3c5e4a902e6a32ef7dbad5e5,"DERBY-3576: Fixed JavaDoc warning.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643326 13f79535-47bb-0310-9956-ffa450edef68"
a292c89bb923c076ddba810d92b01aa774099ce6,"DERBY-3562: Delete unnecessary, old log files on the slave when a checkpoint is encountered in the log received from the master.
Contributed by Jorgen Loland


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643336 13f79535-47bb-0310-9956-ffa450edef68"
860148c24c4973d1c029d0f69851efdf248dd0aa,"DERBY-3494 Move the setup of NormalizeResultSetNode into the NormalizeResultSetNode

Removes ResultSetColumList.copyLengthsAndTypesToSource() and incorporate into the NormalizeResultSetNode init method.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643644 13f79535-47bb-0310-9956-ffa450edef68"
f5e51e93329e8bc9b5257299ce8d9e39808c719b,"DERBY-3586: Remove am.Connection.reset(LogWriter,ClientBaseDataSource,boolean) and called methods.
Removal of unused code in the client driver.
Patch file: derby-3586-1a-connection_reset3_removal.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643789 13f79535-47bb-0310-9956-ffa450edef68"
f55d30a1c384f55d9de148db979cd6c748f591d7,"DERBY-3571: LOB locators are not released if the LOB columns are not accessed by the client.
Added a release mechanism for LOBs. The client will keep track of locators and release them when the result set position is changed, or the result set closed. Locators are released one by one with individual stored procedure calls. This is rather ineffective and should be optimized (for instance by piggybacking).
Also enabled a new test as part of the derbynet suite.
Patch file: derby-3571-2a-simple_release.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643819 13f79535-47bb-0310-9956-ffa450edef68"
b3072159ad2ebc059c2c19b505c06a5b46ef0608,"DERBY-3584: Bypass replicationSuite tests when the test platform does not support JDBC 3.
Contributed by Ole Solberg

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643837 13f79535-47bb-0310-9956-ffa450edef68"
4848ae5681b327bb5e62778a9be55acd4992e17a,"DERBY-3582: IndexOutOfBoundsError in ClockPolicy.moveHand

Make sure moveHand() and rotateClock() work if the clock is empty.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643870 13f79535-47bb-0310-9956-ffa450edef68"
bf5fd3cff8e6a43fbac0c85202203d5b67482a8e,"DERBY-3130: Reduce memory footprint of StoredRecordHeader

Factor out some of the fields in StoredRecordHeader to reduce the
object size when there's no overflow on the record. This reduces the
peaks in heap space usage seen when the page cache gets filled with
index pages (for instance after a SELECT COUNT(*) query).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643875 13f79535-47bb-0310-9956-ffa450edef68"
6950a390bdf86e0bf755d38da3b29d620adcd49d,"DERBY-3327 SQL roles: Implement authorization stack (and SQL session context to hold it)

Patch DERBY-3327-4-full-e.

See javadoc for SQLSessionContext for more details. This patch also solves DERBY-1331.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@643920 13f79535-47bb-0310-9956-ffa450edef68"
af883c83c2600a81a435704be83bc4039ba05c53,"DERBY-3561: testStartStopManagementFromApplication(org.apache.derbyTesting.functionTests.tests.management.ManagementMBeanTest)junit.framework.AssertionFailedError: expected:<2> but was:<5>

Added permission so that all tests can unregister MBeans when they
shut down the database.

Patch contributed by John H. Embretsen <John.Embretsen@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644248 13f79535-47bb-0310-9956-ffa450edef68"
8971c8b71dbf6ebb69a6cabbe36bd802c95d03b1,"DERBY-3509: The replication log shipper is not notified when a new replication transmitter is instantiated in MC#handleException.
 - Modified the handleException method to return the transmitter object that is created.
 - The log shipper bases its decision on whether it should continue with the log shipping based on if a valid transmitter object is created.
Contributed by V Narayanan

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644291 13f79535-47bb-0310-9956-ffa450edef68"
ea777fec4495885a8f77add8f775be5d8337103a,"DERBY-3326: Added a test checking that temporary tables are not visible across logical connections.
Patch file: derby-3326-9a-temp_table_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644360 13f79535-47bb-0310-9956-ffa450edef68"
8e1fa1dece46ea0803aab095c723eb185f502d82,"DERBY-3592: Remove derby logo from doctitle of public api in order to get rid of a spurious line in the jdbc3 javadoc.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644417 13f79535-47bb-0310-9956-ffa450edef68"
1dbc0b8537d7150ae433408a9ddc0d3c53142142,"DERBY-3589: AllocPage.createPage() doesn't initialize minimumRecordSize correctly

Use an object with named fields (PageCreationArgs) instead of an array
to pass in arguments when creating a new page. This resolves the
problem with StoredPage and AllocPage expecting the same field to be
found on different positions in the array.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644620 13f79535-47bb-0310-9956-ffa450edef68"
a390adb32bd6923a849b788908f15e44cc10cede,"DERBY-3116: totalSpace not properly initialized in AllocPage

- in AllocPage.createPage(), set borrowedSpace before
  super.createPage() is called so that getMaxFreeSpace() returns the
  correct value when totalSpace is initialized

- in CachedPage.setPageArray(), call usePageBuffer() also when the old
  buffer is reused. This ensures that totalSpace is recalculated when
  a page object is reused.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644698 13f79535-47bb-0310-9956-ffa450edef68"
0c97a1042246a1c2053b4c9924b6a5d46a32d9d8,"DERBY-3567: Makes ALS#forceFlush time out after 5 seconds if not able to send message.
Contributed by Jorgen Loland with modifications by Oystein Grovlen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644716 13f79535-47bb-0310-9956-ffa450edef68"
f2ec1d8c88b705a154801a104ad4e0f65e1b69d1,"DERBY-3489: Error message XRE04 does not include the right port number.
Contributed by V Narayanan

* java/engine/org/apache/derby/impl/store/replication/net/ReplicationMessageTransmit.java
The constructor has been modified to accept the SlaveAddress object instead of a host name
and port number as was happening previously.

* java/engine/org/apache/derby/impl/store/replication/net/ReplicationMessageReceive.java
Modified the constructor to accept a SlaveAddress object instead of a host name and port number.
Removed the getHostName() and getPort() functions, these functions seemed superfluous. They are
no longer used in the SlaveController, they are used in only once place in the receiver when an
exception was being thrown.

* java/engine/org/apache/derby/impl/store/replication/slave/SlaveController.java
slavehost and slaveport are no longer used (SlaveAddress object is instead used).
introduced two functions getHostName and getPortNumber here that return the hostName
and portNumber from SlaveAddress. 

* java/engine/org/apache/derby/impl/store/replication/master/MasterController.java
slavehost and slaveport are no longer used (SlaveAddress object is instead used).
introduced two functions getHostName and getPortNumber here that return the hostName
and portNumber from SlaveAddress.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644742 13f79535-47bb-0310-9956-ffa450edef68"
74bac8e06758bc9549bbf6759288f8cbecbb3d9c,"DERBY-3354:  Select from large lob table with embedded gives OutOfMemoryError
Contributed by Anurag.

This patch introduces a new WeakHashMap in EmbedConnection. EmbedBlob and EmbedClob objects references are stored in this
map (objects as key and null as value). Adding entry to locater map is
differed till the first call of getLocater.
This ensures that there is entry of LOB objects in locater map if they are invoked in embedded mode.
As the keys of WeakHashMap doesn't prevents the objects from being
garbage collected, once the lob objects are unreferenced lob objects will
be garbage collected releasing the memory.

During commit/rollback or Connection.close, free is invoked on all the lob
objects from WeakHashMap and the map is cleared.

Modified files
java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java
Added a new attribute lobRefrences of type WeakHashMap.
Added a new method addLOBReference to make an entry in new
 hash map.
Modified clearLOBMapping to use lobRefrences to fetch and invoke free on lob objects instead of lobHashMap.

java/engine/org/apache/derby/impl/jdbc/EmbedBlob.java
java/engine/org/apache/derby/impl/jdbc/EmbedClob.java

Modified constructs to call connection.lobRefrences instead of conn.addLOBMapping.
Modified getLocater method to check if the locater value is non zero
before returning and if its zero calling conn.addLOBMapping to make
entry of lob objects and getting locater value.
Calling removeLOBMapping in free method.


Cleanup of temporary file is already being taken care by the finalizer of
LOBStreamControl so I haven't added any new cleanup code for
finalizer.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644755 13f79535-47bb-0310-9956-ffa450edef68"
f9204693c2939d24fc6437df16cb5c54f6da8b32,"Reverse incomplete commit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644761 13f79535-47bb-0310-9956-ffa450edef68"
d96e3980d00b5defee95249e7d660a2623099cd1,"DERBY-3354:  Select from large lob table with embedded gives OutOfMemoryError
Contributed by Anurag.

This patch introduces a new WeakHashMap in EmbedConnection. EmbedBlob and EmbedClob objects references are stored in this
map (objects as key and null as value). Adding entry to locater map is
differed till the first call of getLocater.
This ensures that there is entry of LOB objects in locater map if they are invoked in embedded mode.
As the keys of WeakHashMap doesn't prevents the objects from being
garbage collected, once the lob objects are unreferenced lob objects will
be garbage collected releasing the memory.

During commit/rollback or Connection.close, free is invoked on all the lob
objects from WeakHashMap and the map is cleared.

Modified files
java/engine/org/apache/derby/impl/jdbc/EmbedConnection.java
Added a new attribute lobRefrences of type WeakHashMap.
Added a new method addLOBReference to make an entry in new
 hash map.
Modified clearLOBMapping to use lobRefrences to fetch and invoke free on lob objects instead of lobHashMap.

java/engine/org/apache/derby/impl/jdbc/EmbedBlob.java
java/engine/org/apache/derby/impl/jdbc/EmbedClob.java

Modified constructs to call connection.lobRefrences instead of conn.addLOBMapping.
Modified getLocater method to check if the locater value is non zero
before returning and if its zero calling conn.addLOBMapping to make
entry of lob objects and getting locater value.
Calling removeLOBMapping in free method.


Cleanup of temporary file is already being taken care by the finalizer of
LOBStreamControl so I haven't added any new cleanup code for
finalizer.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@644764 13f79535-47bb-0310-9956-ffa450edef68"
c6564415867551f1854765ae7a33851669e26308,"DERBY-3597  Incorporate DERBY-3310 and DERBY-3494 write-ups into NormalizeResultSetNode code comments.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@645638 13f79535-47bb-0310-9956-ffa450edef68"
ececdabc5996de2619ca5bf5fc4323f1013b93f6,"Fix for the test that was added for DERBY-3320. The test was using DriverManager.getConnection
but DriverManager is not available in JSR 169 environment. This caused the test to fail
when run in JSR 169 environment. I have fixed the test to use testUtil.getConnection
which is smart enough to use DriverManager or DataSource depending on what VM the test
is getting run in.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@645665 13f79535-47bb-0310-9956-ffa450edef68"
a95545d1ca3297e23843d249f163f52bf0bf69ec,"DERBY-3568 Convert jdbcapi/savepointJdbc30_JSR169.java and jdbcapi/savepointJdbc30_XA.java to JUnit

Contributed by Erlend Birkenes (erlend at birkenes dot net)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@645716 13f79535-47bb-0310-9956-ffa450edef68"
aed7942bc102fa8b58811030c4b8f4d23d4c17aa,"DERBY-3445: Make it easier to use the EMMA tool to measure the code coverage 
of the Derby testing

A one-line fix for the <emma-clean> target, so it doesn't fail when there is no directory to remove.  
Patch contributed by Vemund &#xD8;stgaard
Patch file: 3445-emma-clean-fix-diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@645859 13f79535-47bb-0310-9956-ffa450edef68"
4015c92fd7e9a50a4cdb90e9c4a5646d00f9dec9,"DERBY-2892: Closing a resultset after retrieving a large > 32665 bytes value with Network Server does not release locks.
Fixed the problem in an alternative way to avoid compatibility problems. Instead of explicitly closing the underlying LOB when creating streams etc, closing is now handled by the LOBStateTracker in the same way as if the LOB column had never been accessed by the user. Multiple result set getter methods can (again) be called on a LOB column, except for the getters returning streams.
Patch file: derby-2892-1b-alternative_fix_partial.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@646255 13f79535-47bb-0310-9956-ffa450edef68"
d2719a22fdfec766262e14cbc10e13e8b3c0e1d7,"A commit to fix the javadoc failure for SavepointJdbc30Test.java 
The failure was org\apache\derbyTesting\functionTests\tests\jdbcapi\SavepointJdbc30Test.java:42: warning - @return tag has no arguments.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@646529 13f79535-47bb-0310-9956-ffa450edef68"
bb9f97a7090c04368eba91be518178fe996c1e07,"DERBY-2871: XATransactionTest gets XaException: Error executing a XAResource.commit(), server returned XAER_PROTO.
Patch contributed by Julius Stroffek
Patch file: derby-2871.v2.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@647078 13f79535-47bb-0310-9956-ffa450edef68"
a7de08116087c8f1362b1ce9b5c9ed7d7b08eebf,"DERBY-3347: ERROR XSDB3: Container information cannot change once written

On JVMs that support the NIO API, multiple threads may perform I/O
operations concurrently on the same data file. As long as these
operations go through the page cache, only a single thread performs
I/O on a single page at any given time. The data files can also be
accessed by the container cache, which accesses space that it borrows
on the first page in the file. Since these accesses don't go through
the page cache, a mechanism is needed to prevent concurrent access
that page.

This patch makes reading and writing of the first page in a file
synchronize on the container object. Since access to the borrowed
space on the first page also is synchronized on the container,
concurrent I/O on the first page is prevented. (On JVMs that don't
support the NIO API, all page accesses synchronize on the container.)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@647091 13f79535-47bb-0310-9956-ffa450edef68"
b44572f22b3d69d267e7a6e8f56e92205d55195b,"DERBY-3347: ERROR XSDB3: Container information cannot change once written

On JVMs that support the NIO API, use NIO consistently when accessing
the data files. Mixing old style I/O and NIO has caused problems on
some platforms since thread-safety is only guaranteed if all access
happens through the FileChannel interface.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@647139 13f79535-47bb-0310-9956-ffa450edef68"
494a76b416afa5f6ceeb9bb371229198dc06d850,"DERBY-3227: Remove final from all getConnection() methods in EmbeddedDataSource
Patch contributed by Aaron Digulla
Patch file: derby-3227.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@647425 13f79535-47bb-0310-9956-ffa450edef68"
50f5a01268f85fdc3478c14b14b39169a3ed03c7,"DERBY-2892: Closing a resultset after retrieving a large > 32665 bytes value with Network Server does not release locks.
Cleanup patch removing code that became unused after the alternative fix went in.
Patch file: derby-2892-2a-alternative_fix_cleanup.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@647680 13f79535-47bb-0310-9956-ffa450edef68"
80c2e10a3f68ac1c7f3d5242d93ea0b581e4552a,"Fixed typo in NetworkServerMBean Javadoc: Netowrk -> Network. (My first commit)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@647779 13f79535-47bb-0310-9956-ffa450edef68"
805551164a0df7ac2b5e6ffe0cf485f1ee4da0f4,"DERBY-3574 With client, attempting to get the lob length after commit or connection close if there was a call to length() before commit does not throw an exception

Contributed by Tiago R. Espinha (tiago at espinhas dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@647931 13f79535-47bb-0310-9956-ffa450edef68"
c8fa05bae4c88de5b1194dc9b43a196b139e0e69,"DERBY-3615  Making the instructions more clear in documentation(BUILDING.txt) regarding setting JRE lib path for a Windows system

Contributed by Udai Gupta (mailtoud at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@647978 13f79535-47bb-0310-9956-ffa450edef68"
b905a17168d1741bc2be3fa1b19f4d0ca80af830,"DERBY-3574 With client, attempting to get the lob length after commit or connection close if there was a call to length() before commit does not throw an exception

Add test for connection closed case.
Contributed by Tiago R. Espinha (tiago at espinhas dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@648012 13f79535-47bb-0310-9956-ffa450edef68"
c1d0f1d604c08ec47b07f27dd8d73fb6120f8c06,"DERBY-3568  Convert jdbcapi/savepointJdbc30_JSR169.java and jdbcapi/savepointJdbc30_XA.java to JUnit

Add client xa testing.
Contributed by Erlend Birkenes (erlend at birkenes dot net)

Kathey  fixed indentation and added Apache header


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@648041 13f79535-47bb-0310-9956-ffa450edef68"
66a98185d6976b32430ab4d3c4d9af9ab35a4b8f,"DERBY-3574: Clean up whitespace problems introduced in revision 647931
(trailing whitespace, extra blank lines, mixing tabs and spaces on the
same line)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@648180 13f79535-47bb-0310-9956-ffa450edef68"
26d0c8edb599a954ad18dff2c682b43773afd979,"DERBY-3616: Devise a platform-independent encoding for passing the Table Function signature from the compiler to the execution machinery.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@648232 13f79535-47bb-0310-9956-ffa450edef68"
080c38f3752ae648b86361b0dda4287dc9a15c7b,"DERBY-3581 (partial): Changing certain properties on client DataSource objects causes existing connections to reflect the new values.
First iteration of code removal / refactoring.
Patch file: derby-3581-1a-remove_user_password_iteration1.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@648280 13f79535-47bb-0310-9956-ffa450edef68"
bcdd056f8fbda655d0f1f77dda9e4a4b09bee6f7,"DERBY-3568; removing orphaned files/references for old savepointJdbc30_* tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@648413 13f79535-47bb-0310-9956-ffa450edef68"
aebcea3f2d20e8949ef36605d6cd2f7da94b0543,"DERBY-3603: 'IN' clause ignores valid results.

Patch contributed by A B (qozinx at gmail dot com)

Some queries using multi-valued IN clauses were not returning the right
results. An example of a query which was processed incorrectly is:

    select count(*) FROM spike.accounts account, spike.admin_units admin_unit,
        spike.bookings booking
    WHERE booking.child_id = 2 AND
        admin_unit.admin_unit_id IN (1,21) AND
        booking.booking_date_time_out >= 20080331000000 AND
        booking.booking_date_time_in <= 20080406235900 AND
        account.account_id = booking.account_id AND
        admin_unit.admin_unit_id = account.admin_unit_id; 

The issue involves the behavior of MultiProbeTableScanResultSet when it
goes to re-open the scan; under certain circumstances, it was failing to
reset the probing state, and so was performing the probing incorrectly,
using only partial portions of the IN list values. For example, in the
above query, there were certain rows which were only tested against the
value ""admin_unit_id = 21""; the ""admin_unit_id = 1"" case was skipped.

MultiProbeTableScanResultSet.reopenCore() was using a heuristic test to
distinguish between the two cases of:

   * A - The first is for join processing. In this case we have
   * a(nother) row from some outer table and we want to reopen this
   * scan to look for rows matching the new outer row.
   *
   * B - The second is for multi-probing. Here we want to reopen
   * the scan on this table to look for rows matching the next value
   * in the probe list.

The patch modifies this code so that the caller passes in a boolean flag
to specify which case is occurring, which avoids the problem thinking that
it was in case ""B"" when in fact it was actually in case ""A"".
  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@648492 13f79535-47bb-0310-9956-ffa450edef68"
47e1295b9d3a379c19625077bc8780815d888c65,"DERBY-3616: TableFunctionTest fails under Ubuntu 7.10

Removed all encoding/decoding of the table function's return type and
instead stored it directly as a saved object in the compiled plan.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@649007 13f79535-47bb-0310-9956-ffa450edef68"
48c2afc58fcc79a50e7dd1a23f1c005844c50d5e,"DERBY-3588: AllPackages.java: Do not add a test suite by reflection if a 
ClassNotFoundException occurs. This makes it possible to run suites.All
using a 1.5 JVM when Derby has been built without Java SE 6 libraries
(and thus without JDBC 4 test classes).
Patch contributed by Ole Solberg (Ole dot Solberg at Sun dot com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@649013 13f79535-47bb-0310-9956-ffa450edef68"
9f61c8b31400f5e125b85ff68778b62da73810e7,"DERBY-3543: NetworkServerControl with options but no command does not give usage message.
Patch contributed by Martin Zaun
Patch file: DERBY-3542-1.diff (wrong name, correct file)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@649381 13f79535-47bb-0310-9956-ffa450edef68"
7dfe267d8770a06d0eb1ce4c44b77a5653608b70,"Changed create[BC]lob signatures to return java.sql.[BC]lob instead of the classes in the client am package (this confused my IDE).
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@649410 13f79535-47bb-0310-9956-ffa450edef68"
ea141d7c2cd6b7f712af458aced13362f620e2c8,"DERBY-3581 (partial): Changing certain properties on client DataSource objects causes existing connections to reflect the new values.
Removed data source reference from ClientPooledConnection, and also removed usage of ""the new datasource reference"" (new as in passed in from CPC) in Connection/NetConnection.
Patch file: derby-3581-2a-remove_datasource_iteration1.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@649473 13f79535-47bb-0310-9956-ffa450edef68"
7a0a4ebc1723f19b6add21f3d8214e1a17aa6a84,"DERBY-3543: followup fix of master due to changed output from NSC.
Patch contributed by Thomas Nielsen
Patchfile: DERBY3543-master.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@649775 13f79535-47bb-0310-9956-ffa450edef68"
6f53b7f4b9e1c9987f3e22b68ac66825f2937493,"DERBY-3619: Implement more load types for org.apache.derbyTesting.perf.clients.Runner

Added simple selects of rows with columns containing a BLOB or a CLOB.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@650112 13f79535-47bb-0310-9956-ffa450edef68"
83412958cc70e0613b24ee2176ff0bb63ba17d29,"DERBY-3613: SELECT DISTINCT with GROUP BY produces wrong results

Certain combinations of DISTINCT and GROUP BY in the same query were
producing incorrect results. Duplicate rows were appearing in the
results because the query was including all of the GROUP BY columns
in the evaluation of the DISTINCT clause, not just the columns that
were explicitly specified to be DISTINCT.

For example, in the query:

  select distinct a, b from t group by a, b, c

Derby was including two separate rows in the result which had the same
value for columns a and b, but had different values for column c.

Internally, GroupByList.bindGroupByColumns() was generating the
extra column(s) from the group by list into the select's result
column list, but this processing should not be performed when the
query specifies distinct, because adding extra columns to the
set of distinct columns changes the results.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@650728 13f79535-47bb-0310-9956-ffa450edef68"
4bc9c24538a3db5b88ddca377d69df99a0323fa8,"DERBY-3638 java/testing/Readme.htm location of derbyTesting.jar

Contributed by Svein Erik Lovland.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@650761 13f79535-47bb-0310-9956-ffa450edef68"
af2b77dc71d54bebfb90e5d373011475f77f22a6,"DERBY-3397: Derby 10.3.1.4 and 10.3.2.1 break scrollable result sets? Hibernate Query.setFirstResult and/or setMaxResults.
This change makes setMaxRows take effect by resetting the value in the result set object to the value held in the activation.
Patch file: derby-3397.diff

Patch contributed by Dag H. Wanvik.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@650783 13f79535-47bb-0310-9956-ffa450edef68"
683c673d53d8c6556391de87617fa93cab85f672,"DERBY-3397: Derby 10.3.1.4 and 10.3.2.1 break scrollable result sets? Hibernate Query.setFirstResult and/or setMaxResults.
Added two simple regression tests.
Patch file: derby-3397-2a-junit_reg_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@650786 13f79535-47bb-0310-9956-ffa450edef68"
8594dfd3ef43728c6dcccd046654e8dc98ad0c3a,"DERBY-3431: DatabaseMetaData.getConnection returns the wrong connection when using connection pooling.
Added a test case exposing the bug where DatabaseMetaData.getConnection returns a reference to a connection it should not publish.
Note that the test is disabled, because the bug is still at large.
Patch file: derby-3431-2a-test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@650814 13f79535-47bb-0310-9956-ffa450edef68"
9a5e1c4c8f12bb83bccd59da71f77c161737d0c3,"Updating the status file with the name of Narayanan.
contributor: Narayanan
email id:v.narayanan@sun.com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@651269 13f79535-47bb-0310-9956-ffa450edef68"
2ca4b2fac6289cc468a4d2cb9939268be65da5dc,"Add the 10.4.1.3 release and recent votes to STATUS


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@651641 13f79535-47bb-0310-9956-ffa450edef68"
855480f40e7f6d7db680f8d41b2be911cf011767,"DERBY-3623 Convert deadlockMode.java to JUnit

Contributed by Tiago Espinha (tiago at espinhas dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@651701 13f79535-47bb-0310-9956-ffa450edef68"
51345f1523ddf2685ac4c09f5c8d3be8d2455be0,"DERBY-3595: Make stack checking smarter in TableFunctionTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@652092 13f79535-47bb-0310-9956-ffa450edef68"
96e7da9441e6af5d6349a09640d9d2a31785e7bf,"DERBY-3649  can't call a stored function with an aggregate argument without getting the following error: ERROR 42Y29

Move check for function in group by from AggregateExpressionVisitor to GroupByList



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@652533 13f79535-47bb-0310-9956-ffa450edef68"
f0f529120995c0c94331cba5b30daffaf14253e6,"DERBY-3658: Made LOBStateTracker work with soft upgraded databases
that don't support locators.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@652865 13f79535-47bb-0310-9956-ffa450edef68"
f945aa431c84c4fe797b8e39efed32a6de33ba48,"DERBY-3587  Convert jdbcapi/testRelative.java to JUnit

Contributed by Suran Jayathilaka (suranjay at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@652911 13f79535-47bb-0310-9956-ffa450edef68"
c2af295a50a7c1e869324888354385e663670c31,"DERBY-3658: Clarified in some comments that the server may send LOB values instead of locators even if it supports locators.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@652929 13f79535-47bb-0310-9956-ffa450edef68"
2cf3dc4eed991080f0335b8c083110b119cc0650,"DERBY-3657: Removed outdated comment regarding JMX in default and template security policy files.
Also added a commented out permission to template policy for allowing the ping operation of
NetworkServerMBean.

john DOT embretsen AT sun DOT com


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@653387 13f79535-47bb-0310-9956-ffa450edef68"
e6bd06d0c983561ba09039f2aa1d441a9a1fd0b6,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-uuid-2 fixes wrong dimension of columns array.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@653497 13f79535-47bb-0310-9956-ffa450edef68"
f2220fd2ab62e0287eb6892b60b235c1ed2d3130,"DERBY-2085: Misleading error message for non-matching ORDER BY clause

This change modifies the SQL compiler to change the error message that
is displayed for the query:

   SELECT i FROM t GROUP BY i ORDER BY j

After this patch, Derby will once again issue the error message that
it issued in release 10.1 and earlier:

   ERROR 42Y36: Column reference 'J' is invalid. For a SELECT list
   with a GROUP BY, the list may only contain grouping columns and
   valid aggregate expressions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@653988 13f79535-47bb-0310-9956-ffa450edef68"
47b52b0de811ab5037fd13adac229ceb566fcb28,"DERBY-2085: Misleading error message for non-matching ORDER BY clause

This change rewords message 42Y36 slightly to make it more helpful in
cases where there are expressions involved, not simply column references.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@654404 13f79535-47bb-0310-9956-ffa450edef68"
34b59c620d90d75d5f9ddbcbef0f0af18fb972ac,"DERBY-3667 SQL roles: Make CURRENT_ROLE check that the role is still valid

This patch, derby-3667-1, makes CURRENT_ROLE, before returning the
value, check if the current role set, if any, is still applicable for the
current user. If it is no longer applicable, the current role is set to NONE. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@654482 13f79535-47bb-0310-9956-ffa450edef68"
049ad6e91744d4dc7a4ba8b37db8e7121ff48df3,"DERBY-3659 ; convert xaJNDI to junit test XAJNDITest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@654656 13f79535-47bb-0310-9956-ffa450edef68"
48082b3322c9578b5edcb44cab4837ee5500db3a,"DERBY-3587 Convert jdbcapi/testRelative.java to JUnit

add fail() calls after expected failures.

Contributed by Suran Jayathilaka (suranjay at gmail dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@654859 13f79535-47bb-0310-9956-ffa450edef68"
7a47ab0aebee38b78ac7439857b5445c7510bc04,"DERBY-3602 If derbytesting.jar is in a different directory than the derby jars SystemPrivilegesPermissionTest fails with java.security.AccessControlException

Fixed test specific policy file to point to testing jar instead of all jars in the codejar directory for test specific permissions like setSecurityManager



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@655618 13f79535-47bb-0310-9956-ffa450edef68"
65fd9e928b7bf3f559ea3c28ce50ac87633fa095,"DERBY-3661 Typo yields redundant test case in GrantRevokeTest

Patch derby-3661.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@655911 13f79535-47bb-0310-9956-ffa450edef68"
e6d28aa0702812e836f3c80bed87f29f96f78694,"DERBY-2457: Use of column aliases in GROUP BY / HAVING clauses may fail

Some use of column aliases in group by / having clauses can cause queries 
to fail with error 42X04. The queries can sometimes be made to work by 
also aliasing the table or rewriting the query to use a subselect.

After analyzing the script, and studying the standard, we came to feel
that Derby was behaving correctly according to the standard. While
column aliases are valid in the ORDER BY clause, they are not valid
in the GROUP BY and HAVING clauses. Instead, Derby currently correctly
enforces the standard's requirement that the underlying column name
be used in these clauses.

This change updates the Derby GroupByTest.java test program to contain
the examples from the reproduction script, demonstrating that Derby's
behavior is correct, and adding to the body of GROUP BY test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@655947 13f79535-47bb-0310-9956-ffa450edef68"
9c3b91c370be687f9938f3122dac00d1220afc71,"DERBY-3333 User name corresponding to authentication identifier PUBLIC must be rejected

Patch DERBY-3333-roles.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@655948 13f79535-47bb-0310-9956-ffa450edef68"
818fd271d23fbe9588cb8168628e5171fdf6e515,"This commit is for DERBY-1062. Currently SYSCS_INPLACE_COMPRESS_TABLE is implemented on it's own in
OnlineCompress.java It will be nice for us to share the existing code for ALTER TABLE so we do all the
necessary checks that are already done in ALTER TABLE rather than repeat the code in OnlineCompress.
Another procedure similar to SYSCS_INPLACE_COMPRESS_TABLE is SYSCS_COMPRESS_TABLE and 
SYSCS_COMPRESS_TABLE is written using the ALTER TABLE code. With this commit, I am getting rid of
OnlineCompress.java and moving the necessary code into ALTER TABLE related classes. One thing that 
SYSCS_INPLACE_COMPRESS_TABLE allows is compressing tables in SYSTEM schemas. The compile code currently
throws an exception if the operation is being done on system schema for DDLs. I had to make changes
such that we allow SYSTEM schema handling in DDL. 

This sharing of code also fixes the GRANT/REVOKE code for SYSCS_INPLACE_COMPRESS_TABLE. Earlier we didn't
look for permissions when letting a user issue SYSCS_INPLACE_COMPRESS_TABLE. But now since we use the
existing code in ALTER TABLE, it already handles the permission issues.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@655980 13f79535-47bb-0310-9956-ffa450edef68"
6d14e04d95023ef4b672c92c23b916bb5580bab0,"Followup commit to revision 655980 for DERBY-1062. Some of the tests were doing import of 
OnlineCompress.java which I had deleted in revision 655980. This should fix the build errors caused
by 655980.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@655989 13f79535-47bb-0310-9956-ffa450edef68"
5b82e0eb2e4e3e68fca2563c4549537f60a75dc9,"Removing old comment from GrantRevokeDDLTest which does not apply anymore. Fix to DERBY-1062 will now
correctly throw an exception if a user tries to compress a table on which it does not have correct
privileges.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@655990 13f79535-47bb-0310-9956-ffa450edef68"
8761359f9eb25dfa11a4e20bc3e00d7cc2f036e1,"Added myself to committer list

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@656121 13f79535-47bb-0310-9956-ffa450edef68"
8fb718faa237aa55192ab85a2271441748b01087,"Taking care of javadoc warnings caused by a checkin made for DERBY-1062



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@656323 13f79535-47bb-0310-9956-ffa450edef68"
ec55311ebc230784a6ef8e2348ae396fd80193b2,"DERBY-3674

Inplace compress test in store/TransactionTable.sql started failing after the checkin for DERBY-1062.
Prior to the fix for DERBY-1062, an inplace compress request on VTI would return with no exception
although the code just ignored the compress request on VTI. After DERBY-1062 fix, Derby started
throwing exception. With the changes going through this commit, I am restoring the behavior to no-op
on inplace compress on VTI. I am doing this by making the check for VTI in SystemProcedure and returning
from it if it is a VTI. All the other inplace compress request get fulfilled through internal
generation of ALTER TABLE sql.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@656797 13f79535-47bb-0310-9956-ffa450edef68"
a3d79d66bc67103f08727e9dde71b8557fcdf3b6,"DERBY-2457: Use of column aliases could simplify queries

Derby does not permit the use of column aliases in WHERE clauses. When
a column is given an alias name, that name can only be used in the
ORDER BY clause, not in the WHERE clause (nor in the GROUP BY or
HAVING clauses -- see DERBY-2457).

This change adds several new tests to select.sql, demonstrating the
current Derby behavior, which we believe to be correct according
to the SQL standard.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@656929 13f79535-47bb-0310-9956-ffa450edef68"
51ea045ea712d9dd43501e447240c963a1fa9ae1,"Fixed incorrect JavaDoc for TestConfiguration constructor taking SSL mode argument.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@656994 13f79535-47bb-0310-9956-ffa450edef68"
3fcebdda05e2c9a35683aff5c185bfc4ec8b5a64,"Added missing word in JavaDoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@656995 13f79535-47bb-0310-9956-ffa450edef68"
b2efa02723e709f44f4b6c91a0e20732ce809916,"Removed unused imports.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@656997 13f79535-47bb-0310-9956-ffa450edef68"
0da1e72b3d9667125be80a37fef5408ee4bcb9b0,"DERBY-3650 (partial) - Derby + Hibernate JPA 3.2.1 problem on entity with Blob/Clob

Just adding some tests for the issue which don't pass yet, so not adding them to any suite yet.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@657124 13f79535-47bb-0310-9956-ffa450edef68"
7bf9b221f0bd3885a2babf4ef3ad55e4b451f0b6,"Cleaning for sqlgrammar.jj a little bit by removing the code to pass the parameters which never will be
set during ALTER TABLE when we are doing a non-compress operation on the table. This is for DERBY-1062



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@657154 13f79535-47bb-0310-9956-ffa450edef68"
5c04fbc9219ecc473d32f4f34550491258086848,"DERBY-3652: Allow mixing of primitive and wrapper types when matching SQL routine signatures to java methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@657819 13f79535-47bb-0310-9956-ffa450edef68"
6f255ff22d66f7f12fb4a8834fb32a111b1d5bff,"DERBY-3546 Failed to get database schemas of a JAR database



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@657937 13f79535-47bb-0310-9956-ffa450edef68"
7bceacaa400cc5e371cfb7b112c4f85777971147,"DERBY-3431: DatabaseMetaData.getConnection returns the wrong connection when using connection pooling.
Added another tests for this issue in DatabaseMetaDataTest.
Only the test for embedded is enabled, as the client driver has a bug.
Also note that the embedded driver has a related bug, but it is not exposed by this test (see J2EEDataSourceTest.testConnectionLeakInDatabaseMetaData instead).
Patch file: derby-3431-1b-test_repro.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658181 13f79535-47bb-0310-9956-ffa450edef68"
a49056f324932f82c1cecbbab294819f36143ad2,"Removed ""empty statements"" (a line containing only whitespace and a semi-colon).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658210 13f79535-47bb-0310-9956-ffa450edef68"
7542aac42af7f47d03e1e04c1bb4cbffd3341c42,"DERBY-3652: When matching SQL to Java signatures during routine resolution, prevent the matching of smaller numerics to larger numerics since this kind of matching violates the ANSI rules.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658232 13f79535-47bb-0310-9956-ffa450edef68"
c8e864b46f38a38552e53078951131c9d7bb5769,"DERBY-3673 Add checks that a new role isn't already a user authorization id

Patch derby-3673-2.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658385 13f79535-47bb-0310-9956-ffa450edef68"
78275372bf9edced1cf95db87d95fc349441d8b7,"DERBY-3652: Don't let SQL SMALLINT args match Java numerics bigger than short.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658427 13f79535-47bb-0310-9956-ffa450edef68"
4ea38fbfb21b0468a6fb471e014e302c0928d75d,"DERBY-3619: Implement more load types for org.apache.derbyTesting.perf.clients.Runner

Added BLOB/CLOB load for the single-record update client.

Added possibility to access rows by a non-indexed column or a column
with a non-unique index instead of the primary key column (in the
single-record update client and the single-record select client).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658572 13f79535-47bb-0310-9956-ffa450edef68"
3082e5d2624f0f0954e6acce3177550643bb0ad6,"DERBY-1062: Escape special characters in table name and schema name before passing them on to ALTER TABLE


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658604 13f79535-47bb-0310-9956-ffa450edef68"
895963613622234086c3cc36f69751cbab6d0981,"DERBY-3673: Add checks that a new role isn't already a user authorization id.
Fixed JavaDoc warnings.
Patch file: derby-3673-3a-javadoc_fixes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658612 13f79535-47bb-0310-9956-ffa450edef68"
6886d9e4210f8d8c1110fbbcee745c6dfed02ecf,"DERBY-3652: Remove best-fit logic which applied Java signature resolution rules instead of ANSI signature matching rules.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658730 13f79535-47bb-0310-9956-ffa450edef68"
0ba6f9da076c935ec9065b6673ee96555144d223,"DERBY-3652: Add more tests to stress signature matching rules.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658736 13f79535-47bb-0310-9956-ffa450edef68"
6366b271807dc33b4ab09a9483c9e8d05a78dc30,"DERBY-3684: Wire the vti demo code into the standard build just as other demo code is wired in.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658805 13f79535-47bb-0310-9956-ffa450edef68"
5d4bc96d9a34baeb8abd2300ab119a40d6e86cb6,"DERBY-3684: Adjust the vti demo's README file to indicate that this code is now built as part of the standard Derby build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658806 13f79535-47bb-0310-9956-ffa450edef68"
b50def6e4ff62cae2fa2c9877e60239caddbc185,"DERBY-3652: Stop widening Strings to Objects when matching SQL routine signatures to Java method signatures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658822 13f79535-47bb-0310-9956-ffa450edef68"
619279ed375536aefebf20c86803050fc158e513,"DERBY-3673 Add checks that a new role isn't already a user authorization id

Patch derby-3673-3.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@658943 13f79535-47bb-0310-9956-ffa450edef68"
58500429d531b30d0f7e5927500ee948deb738ca,"Fixed unterminated <code> tag in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@659039 13f79535-47bb-0310-9956-ffa450edef68"
ad15102afe0541a4b1a95f51a60833a2a1dea880,"DERBY-3685: weme 6.1 Base connection pooling suitejunit.framework.AssertionFailedError: java.lang.NullPointerException.
The test causing the failures will no longer be run in a JavaME environment.
Patch file: derby-3685-1a-disable_test_javame.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@659166 13f79535-47bb-0310-9956-ffa450edef68"
504ede39c57b17ed6019d7805afbbe8adba65496,"DERBY-3684: Eliminate unchecked warning on compilation of Subscription.java.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@659182 13f79535-47bb-0310-9956-ffa450edef68"
d12a33d3af07a0a42ebbe8d39f2716417240e60c,"DERBY-3673 Add checks that a new role isn't already a user authorization id

Patch derby-3673-4. Removes some redundant code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@659195 13f79535-47bb-0310-9956-ffa450edef68"
f900ff2a2ae14fca8749756f3509562f350723bf,"DERBY-3681 When authenticating a user at connect time, verify that the user provided is not also a defined role name.

Patch derby-3681-2, which implements this functionality plus fixes to the JUnit
framework needed for the added test case.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@659543 13f79535-47bb-0310-9956-ffa450edef68"
7e729b6f24599724b5795d20915656eb8d0fc4fb,"DERBY-3666 Make role descriptor a dependency Provider

Patch derby-3666-2, which implements that functionality.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@659805 13f79535-47bb-0310-9956-ffa450edef68"
5b90cf1937ae1665ce868e02ea9773df8577ac9a,"DERBY-3682: SYSCS_BULK_INSERT doesn't quote identifiers or strings properly

Ensure proper quoting of SQL identifiers and string literals by using
utility functions in StringUtil and IdUtil. VTITest has been updated
to test SYSCS_BULK_INSERT with a table containing single quotes and
double quotes in its name.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@660153 13f79535-47bb-0310-9956-ffa450edef68"
f2a8f001d3bf8c888ea40eec6838dbef87c351a7,"DERBY-3596: Test cleanup only.
Renamed test (added the word 'Physical'), added a missing fail(), changed some comments and added a constant for a SQL statement used multiple times.
Patch file: derby-3596-3a-test_cleanup.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@660165 13f79535-47bb-0310-9956-ffa450edef68"
9526f7979651ccfa581c17d1e5bc1da64c5f80a8,"DERBY-3690: EmbedPooledConnection doesn't reset schema when creating a new logical connection.
Fixes the bug by resetting the schema in GLCC.resetFromPool, and adds two regression tests.
Patch file: derby-3690-1b-reset_schema.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@660404 13f79535-47bb-0310-9956-ffa450edef68"
886e6e1fde82e3ecd0128dc77a8c4160eb71da39,"DERBY-3652: Don't match SQL NUMERIC to Java Object.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@660630 13f79535-47bb-0310-9956-ffa450edef68"
b2ae876e5ca01381f7ae7a0bf61282d00eb10772,"DERBY-3650 - test only fix.  The test was verifying a clob after freeing it, 
changed the clob test case to match the logic of the blob test case where
it verified before possibly freeing and committing it.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@660744 13f79535-47bb-0310-9956-ffa450edef68"
431eec833adb0c7bc2232dafec24fcfa29d1a61f,"DERBY-3401 (partial) Fixed ConcurrentModificationException if a
statement event listener adds or removes a listener on the same pooled
connection.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@660959 13f79535-47bb-0310-9956-ffa450edef68"
e85ba9b6720c619de15e2407d1f678488fc8aaa9,"DERBY-3686 (partial) convert predicatePushdown.sql to JUnit

Conversion of sql in test. Need to add Runtime Statistics checking.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661071 13f79535-47bb-0310-9956-ffa450edef68"
4e3ddd75a19a28741ecedb90a194c230c3e27531,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-rename-b. Renaming plus misc cleanup. No behavioral change.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661123 13f79535-47bb-0310-9956-ffa450edef68"
a840fa504d9984b8a79ba99c41a3dd09023975f3,"DERBY-3219: GROUP BY query fails with ERROR XSDA7

The underlying cause of this problem is that the externalized data format
for a MaxMinAggregator instance includes the max (or min) value that the
aggregator is processing, and this data value happens to be embedded
*inside* of the overall externalized data format. However, the externalized
format for a SQLChar-based data value can use a ""stream"" format, in which
the explicit length of the value is not encoded, and rather the value is
read until an EOF is received, which means that such a value always has
to be the *last* value in the particular stream, and cannot be embedded
inside of a larger data structure.

In the case in question, the value was a string of length 0, which when
externalized looks like a streamed value, but can be distinguished
because the EOF exception occurs before any data has been read. But when
the value is included inside the larger MaxMinAggregator value, the EOF
exception does *not* occur immediately, but rather after the code in
SQLChar.readExternal has read beyond its own section, and has erroneously
consumed the other values from the MaxMinAggregator's external data.

The solution is to re-order the external format of the MaxMinAggregator,
such that the data value is the last item in the external data, by
calling super.writeExternal and super.readExternal *after* processing
the other MaxMinAggregator data. Since MaxMinAggregator instances are
never stored persistently in permanent data structures, but only in
temporary data structures such as overflow tables and sort buffers, this
should not cause any compatibility problems.

An alternative implementation, which involved changing SQLChar.writeExternal
to use an explicitly-delimited external format for a string of length
zero, rather than the streaming-until-EOF format, was rejected because it
would have increased the on-disk format of such values, and because it
could have caused compatibility problems by changing the on-disk format
of existing values.

The unit test for this bug fix involves the use of some SanityManager code
in the sorter, and hence is only effective when run in a sane debug build.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661204 13f79535-47bb-0310-9956-ffa450edef68"
8a4e363f3d59ea8cbe135ef9f77445f65ad915f2,"DERBY-3695: NullPointerException when invoking statement event listeners if one of the listeners is null

Made addStatementEventListener(null) a no-op on the client to match embedded.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661292 13f79535-47bb-0310-9956-ffa450edef68"
6a02fa56c02c9833d2124d7918ae5478b7fbb35a,"DERBY-2644; reactivating the encryption tests; DERBY-2644 should be fixed


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661388 13f79535-47bb-0310-9956-ffa450edef68"
7294977773a88b47505f240bc20946c4fa83f5e7,"DERBY-3652: Don't widen argument types when matching SQL to Java signatures, per the ANSI spec.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661469 13f79535-47bb-0310-9956-ffa450edef68"
17424d56a167e39994e509e56b6db15fa72ab1e8,"DERBY-2514

Added a test case testDMDconnClosed() to DatabaseMetaDataTest.java.
testDMDconnClosed is a test case that tests reading of 
DatabaseMetaData obtained earlier, after a connection is 
closed. 

contributor: Svein Erik L√∏vland 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661574 13f79535-47bb-0310-9956-ffa450edef68"
09c890c31f72fc1166373810a0076d08697c8381,"DERBY-3531: Commit Martin's patch which rewrites string splitting code to use only apis which are present on Java ME platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661797 13f79535-47bb-0310-9956-ffa450edef68"
6bd82a527f93538f121710fb1064fee5899382b6,"DERBY-3686 convert predicatePushdown.sql to JUnit



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661847 13f79535-47bb-0310-9956-ffa450edef68"
f04772457ac4f32e17662dc3c86f8a69b70fce25,"DERBY-3659; adding some LDAP tests (patch DERBY-3659-2b.diff).
  Patch contributed by Myrna van Lunteren


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661924 13f79535-47bb-0310-9956-ffa450edef68"
0e5e822b588f2e0631c88d7cd70ac7e907803c6d,"DERBY-3659; add XAJNDITest to jdbcapi/_Suite and rename text fixture in 
  LDAPAuthenticationTest so it's a more meaningful name


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@661960 13f79535-47bb-0310-9956-ffa450edef68"
5883d4717f206da23358fd9452909a8091b39862,"DERBY-3659; modifying _Suite so it checks for property derbyTesting.ldapServer
  instead of derbyTesting.ldapUser, and only runs xaJNDITest if it's set; also
  removing old 'sample' master file. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662094 13f79535-47bb-0310-9956-ffa450edef68"
562a9252ae4f52c1c62d797ea401f01f3d47fab4,"DERBY-3531: Replaced tabs with spaces.
Patch file: derby-3531-2a-tab_replacement.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662377 13f79535-47bb-0310-9956-ffa450edef68"
bba6ca7892fe97de905583eddbc3c48c7032e246,"Corrected class reference in license header.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662379 13f79535-47bb-0310-9956-ffa450edef68"
ef81d0e40933c63279fc747a5f2ff3fa590c9c21,"DERBY-3431: DatabaseMetaData.getConnection returns the wrong connection when using connection pooling.
Introduced a logical database metadata object in the client driver. This object is tightly associated with the logical connection, instead of the underlying physical connection. It will only publish a reference to the logical connection.
Added regression tests. Note that one of the tests fails for embedded, which appers to have a similar bug to what the client driver had.
Patch file: derby-3431-3b-client_logical_metadata.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662383 13f79535-47bb-0310-9956-ffa450edef68"
f8c4fd4bf9e86d7a067c9ef85eada00a363c88ae,"DERBY-3431: Simplified auxiliary method by using a JUnit assert method.
Patch file: derby-3431-4a-spt_test_nit.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662386 13f79535-47bb-0310-9956-ffa450edef68"
4d8deb633827f976fe1b54ee7bdd6bdc360d6695,"DERBY-48 A connection request that has a default schema that is being created by another transaction will fail to connect

Patch derby-48-7, which auto-creates the schema in a nested transaction if possible, thus
allowing early release of write locks used to auto-create the schema.

This has the side-effect of making auto-created schema persist even if
the user transaction that triggered it rolls back. Added a new test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662446 13f79535-47bb-0310-9956-ffa450edef68"
8b13b7025084bcb7a8ed3f3864735e52e05f33b0,"DERBY-3702: Remove the xml-apis.jar file, since we no longer need to build on jdk1.3.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662549 13f79535-47bb-0310-9956-ffa450edef68"
133f09efcd1d5cd588b3b24cc19cc5635bde2043,"DERBY-3700: Removed empty.jar from the repository and let build.xml
create an empty directory to be used instead.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662789 13f79535-47bb-0310-9956-ffa450edef68"
94e5364f5b31443fc13f23fef6e32bcf421e395f,"DERBY-3700: Removed reference to empty.jar in BUILDING.txt


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662797 13f79535-47bb-0310-9956-ffa450edef68"
1ba604e3005cee2ae16ab9e93afc204f35fab833,"DERBY-3704 If an IOException is encountered during establishment of the connection, Network Server should print the root exception to the console instead of a generic message



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662876 13f79535-47bb-0310-9956-ffa450edef68"
77d9c33cf4ce0a79186c3d2db76958b62076a8c2,"DERBY-3327 SQL roles: Implement authorization stack (and SQL session context to hold it)

Removed an unwarranted sanity check, patch DERBY-3327-6.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662911 13f79535-47bb-0310-9956-ffa450edef68"
232736157c30a6a669952b58eeaa6f002d3f004f,"DERBY-3659 - junit ldap tests - commit minor changes of patch DERBY-3659-3.diff.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662920 13f79535-47bb-0310-9956-ffa450edef68"
17af76d84b65af46e893a01d7a06b9931c56eb7e,"DERBY-3097: Remove unnecessary if stmt from BaseActivation.getColumnFromRow

This change removes an unnecessary if statement from BaseActivation.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@662947 13f79535-47bb-0310-9956-ffa450edef68"
015b39a6a0d38e6d57136804c0f7668c26b564ba,"DERBY-3696: Delete superfluous test lang/longStringColumn.java.
Patch file: derby-3696-1a-delete_longStringColumn_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@663062 13f79535-47bb-0310-9956-ffa450edef68"
93cb544de003b97d0393092fabb457925569f0fa,"Minor changes in J2EEDataSourceTest:
  * made more javadoc comments visible
  * used a utility method to traverse a ResultSet


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@663064 13f79535-47bb-0310-9956-ffa450edef68"
af3cf0c5a41d595380faeabb8755eb016c9a4881,"DERBY-3401: Removing a ConnectionEventListener from a PooledConnection during its connectionClosed() callback causes other ConnectionEventListener callbacks to be missed

Clone the list of listeners if it is modified while the listeners are executing.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@663641 13f79535-47bb-0310-9956-ffa450edef68"
548062ee0660e56a4b87188298f21d45bf9f21ab,"DERBY-3711 ; minor fixture name change in EncryptionSuite.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@663688 13f79535-47bb-0310-9956-ffa450edef68"
acdbf5a56baab45eac53aa4e58ad04709283c172,"DERBY-3711 ; adding AES encryption test, converted from store/aes.sql.
  Patch DERBY-3711-1, contributed by me.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@663694 13f79535-47bb-0310-9956-ffa450edef68"
1e4999a6136b9b308af00c5f83fa730d8a8b3ddd,"DERBY-1001 ; removing no longer needed master encryptionKey.out


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@663695 13f79535-47bb-0310-9956-ffa450edef68"
d49612c5d3605ab0133ed48c7381eea860e69787,"DERBY-3711 ; put EncryptionAESTest in store._Suite and remove old aes.sql test.
  patch DERBY-3711-2 contributed by me.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@663770 13f79535-47bb-0310-9956-ffa450edef68"
6a210c5a3803314f97f14598919192b50120f1dc,"DERBY-3702: Remove references to deprecated xml-apis jarball.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@664061 13f79535-47bb-0310-9956-ffa450edef68"
d391eecc1fe18c2f7202dc4fb4b78959ef04c296,"DERBY-3652: Add two test cases for signatures which mix types.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@664081 13f79535-47bb-0310-9956-ffa450edef68"
45680ff94dffcbe166560d81d1da7a4e18ea699f,"DERBY-3701 java.lang.Exception: DRDA_UnableToAccept.S:Unable to accept connections and client hang if tracing is turned on but traceDirectory does not exist

- attempt to create directory if it does not exist.
- log an error but do not hang the client if session tracing file cannot be created.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@664124 13f79535-47bb-0310-9956-ffa450edef68"
98053b7ae76df884beb2194e6c834cf0b03748ef,"Fixed invalid markup in javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@664524 13f79535-47bb-0310-9956-ffa450edef68"
1bc76745c281683202b17f8fc69e555e27279af5,"DERBY-3701: Fixed indentation


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@664530 13f79535-47bb-0310-9956-ffa450edef68"
93b031d3309ae68c65faf72bf6034d9e8b4ffee0,"DERBY-3715: java/testing/README.htm refers to a non-existing test

Fix contributed by Suran Jayathilaka <suranjay@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@664532 13f79535-47bb-0310-9956-ffa450edef68"
7e365876dbb88eb5e9ce1eeff2b85cf5865f7175,"DERBY-3715: Replaced org.apache.derbyTesting.functionTests.RunTest with org.apache.derbyTesting.functionTests.harness.RunTest in java/testing/README.htm


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@664533 13f79535-47bb-0310-9956-ffa450edef68"
efc1f081256fff4443f00694831306a731d89753,"DERBY-3701 java.lang.Exception: DRDA_UnableToAccept.S:Unable to accept
connections and client hang if tracing is turned on but traceDirectory
does not exist

Fix permission error in NetworkServerControlApiTest with jars. Allow
trace directory to be writable.

Fix case where parent directory is null.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@664632 13f79535-47bb-0310-9956-ffa450edef68"
24f9277910591814dc03f9a2541ad108b705631e,"DERBY-3632

The Patch increases the timeout for starting the master and
slave servers and the timeout for a successfull ""startmaster=true""
in the replication tests, Now allows up to 120s before giving up.

Patch Contributor: Ole Solberg


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@664639 13f79535-47bb-0310-9956-ffa450edef68"
d2291224feae5d74b7d3f589ebf3866f3b51bd43,"DERBY-3709

Changes the replication test to ensure that the failure due
to failover being started before replication is booted is
not hidden

Patch Contributor: Ole Soldberg


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666006 13f79535-47bb-0310-9956-ffa450edef68"
2e2d2ee298dbf29eda79f01dfc9bf03fff3e1ba7,"DERBY-3307: NPE in PooledConnction event notification handling if a null listener is added

- Added null check in ClientPooledConnection.addConnectionEventListener().

- Added regression test in J2EEDataSourceTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666040 13f79535-47bb-0310-9956-ffa450edef68"
98ead91ee956adbeb043ba3e6deaa5818b95fcef,"DERBY-3596: Creation of logical connections from a pooled connection causes resource leak on the server.
Exposed method 'resetFromPool' through EngineConnection.
The network server now detects when a client is requesting new logical connectio
ns. This triggers some special logic, where the physical connection on the serve
r side is kept and reset instead of being closed and opened again (this caused resources to leak earlier).
The special logic must *not* be triggered for XA connections, as the XA code is
already well-behaved.
Patch file: derby-3596-5a-complex_skip_creds.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666088 13f79535-47bb-0310-9956-ffa450edef68"
3362c54b0c2a54230ae649e3c38ef7f717000abe,"DERBY-3307: STATUS file changes June 2008.
Added 10.3.3.0 to release list.
Corrected some release dates.
Changed date notation to international standard date notation (YYYY-MM-DD, ISO 8601).
Patch file: derby-3707-1a_releases.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666106 13f79535-47bb-0310-9956-ffa450edef68"
f3cd388abfec50dd1a0758d9b2fffa4fcf51b4b9,"DERBY-3307: STATUS file changes June 2008.
Made indentation of the committer list consistent (used existing ""dominating"" indentation level).
Removed a full stop character.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666111 13f79535-47bb-0310-9956-ffa450edef68"
5e717f9fc43ac62afbe9aa9f949efc00816ae30f,"DERBY-3705: In Net Client mode, negative values for stream length are accepted without an exception for PreparedStatement.setAsciiStream().
Added check to disallow specified stream length to be negative.
Refactored specified length checking into a single method.
Patch file: derby-3705-2b.diff

Patch contributed by Suran Jayathilaka.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666174 13f79535-47bb-0310-9956-ffa450edef68"
c58f84b5032158da6abbc5ea7f7dcc555c7d98cc,"DERBY-3663 Convert store/streamingColumn to JUnit

Contributed by Suran Jayathilaka



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666225 13f79535-47bb-0310-9956-ffa450edef68"
1fac3e9a4f1e7ac6b359dc2d647cb6a3f7317adf,"DERBY-3338

Reworking the code as suggested by Dan in DERBY-3338 may actually fix the problem experienced on weme6.1 (DERBY-1848 for jdbcapi/SetQueryTimeoutTest.java) The way the CancelQueryTask.forgetContext() is written right now, it leaves a small window of code path through it that leaves the CancelTimerTask linked to the StatementContext, a timing window allows the CancelTimerTask's run method to later cancel a different statement once the StatementContext is re-used. A short example here might be helpful. 

Let Stmt1A be a JDBC Statement object(with set query timeout set on it) and SC1 be a StatementContext. Say that user has requested a ResultSet object movement for Stmt1A. At the start of the ResultSet movement code, we use a StatementContext (say in this case it is SC1) and push that StatementContext for Stmt1A. During the push, we start a Timer say CQt1 since user has set query timeout for Stmt1A. After the ResultSet movement code, Stmt1A starts its pop on SC1. During the pop, say the Timer CQt1 expires and so CQT1 is queued upto run. Before CQT1 runs, say the control goes back to finish the rest of the pop SC1 code. During the pop, we call CancelQueryTask.forgetContext(). The current code here checks if the Timer has been cancelled. If not cancelled, then we mark the StatementContext associated with CQT1 as null otherwise we don't touch StatementContext object associated with CQT1. Since in our specific case, the Timer has already been cancelled, we leave SC1 associated with CQT1. After this we finish the rest of the code to pop SC1 for Stmt1A. Keep in mind that CQT1 has not run yet. Since SC1 is available for some other Statement to use, say Stmt2B pushes SC1 before it does it's ResultSet movement. So, now SC1 is associated with Stmt2B. At this point, say CQT1's run gets scheduled. Since it still has SC1 associated with it (because we never cleared it in forgetContext), CQT1 is going to mark SC1 as timedout. This is where we run into problem. We are indirectly marking wrong JDBC Statement as timed out (in this particular case Stmt2B) and that is what I think is causing occassional timeouts in jdbcapi/SetQueryTimeoutTest.java. I have rearranged the code and run the tests and I have not been able to reproduce the problem with jdbcapi/SetQueryTimeoutTest.java even after 30 runs (normally it reproduces for me in about 3-5 runs).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666519 13f79535-47bb-0310-9956-ffa450edef68"
5e009439978f3c3358e9ea81308b2b1ae997ba3c,"(DERBY-1001): Removed two unused imports and renamed a local variable hiding an instance variable.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666583 13f79535-47bb-0310-9956-ffa450edef68"
e4ada41051e0db8adfdb5fb526f224dc0c7cf074,"DERBY-3678 StackOverflowException in deadlock trace

Patch derby-3678-3 which solves the issue and adds a new regression test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@666901 13f79535-47bb-0310-9956-ffa450edef68"
025351b475cf628a62a3b4d6fa9ddebb43a8cc17,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit.
Renamed TestProto to ProtocolTest in the package-private test tree.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@667099 13f79535-47bb-0310-9956-ffa450edef68"
bbc2fd8fff8462bca93f2f43a6386004bee74a80,"DERBY-3581: Changing certain properties on client DataSource objects causes existing connections to reflect the new values.
Removed a boolean flag that was only set to true and used in only one place.
The meaning/use of the flag was also invalid, as new logical connections should not ""recompute"" its properties from the associated data source.
This patch should not change any behavior, only remove unnecessary code.
Patch file: derby-3581-3b-remove_recomputeFromDataSource_flag.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@667568 13f79535-47bb-0310-9956-ffa450edef68"
19a32c4e6884d2b94287785d37d2818ffd155b70,"DERBY-3619: Implement more load types for derbyTesting.perf.clients.Runner

Added a class that creates databases for use in tests that simulate
bank transactions. It is the intention that these databases follow the
rules defined by the TPC-B benchmark specification as closely as
possible.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@667586 13f79535-47bb-0310-9956-ffa450edef68"
a204074765e34a4cff0cbf3f74a90d8bb8396591,"DERBY-3725

Added a page dump to this serious page corrupted error where the format id
has been corrupted so we don't know what kind of page it is, and thus can't
bootstrap the load to even create the object.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@669216 13f79535-47bb-0310-9956-ffa450edef68"
ea9b68b4b7a2f3e415ca8786bf002aeda58f7309,"DERBY-3708 setting tracedirectory from the command line does not work



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@669243 13f79535-47bb-0310-9956-ffa450edef68"
397d4a4a8abfa0b0ba98915197229d95e99fce0b,"DERBY-3725
fixed typo in previous commit causing ErrorCodeTest failure.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@669312 13f79535-47bb-0310-9956-ffa450edef68"
04353ef81f5111b3d0da57deb2571bdac9bab5f3,"DERBY-3151: Reduce dependency on NetworkServerControl in TestConfiguration.
Added a NetworkServerControl wrapper using reflection to use the class and invoke its methods.
The purpose of the change is to be able to run JUnit tests without having derbynet.jar (and derbyrun.jar) on the classpath.
Patch file: derby-3151-4b-wrapper_with_reflection.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@669808 13f79535-47bb-0310-9956-ffa450edef68"
1111652cfc5056615fa50cd10dbaa85352de1bd5,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit.
Added a simple grammar class for the protocol tests.
Patch file: derby-2031-1a-grammar_enum.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@669810 13f79535-47bb-0310-9956-ffa450edef68"
b437b6c01f39a472823344b3b4680476870a2fb6,"DERBY-3731 Improve calculation of refSize in ClassSize.java

Add gc() before memory measurments to improve refSize calculation.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@670017 13f79535-47bb-0310-9956-ffa450edef68"
fe8c4c26dd70edccf20773f3701ac665465d0849,"DERBY-3722 Add circularity check for the GRANT role statement

Patch derby-3722-3, which implements this checking and adds test cases
for this to RolesTest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@670284 13f79535-47bb-0310-9956-ffa450edef68"
7ae131ba42bf12e6b996a58dad7a4b510a705642,"DERBY-2861 Thread safety issue in TableDescriptor

Patch derby-2861-2, which solves the issue by make session local state
in TableDescriptor thread local.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@670286 13f79535-47bb-0310-9956-ffa450edef68"
a03ad56dd80d3ac332a40c2b58d771b3750f2f82,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit.
First revision of the converted test. The test itself is complete, but some required changes in the policy file have not yet been committed.
Patch file: derby-2031-2a-test.diff 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@670526 13f79535-47bb-0310-9956-ffa450edef68"
9b54b81f6efd22bf95b871fb2c262f7491d7a0b7,"DERBY-3726: Don't call RAFContainer.padFile() from instances of RAFContainer4

When we create a new container, allocate a byte array that is large
enough to hold an entire page so that we don't need to pad the file
after writing the array to disk.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@670534 13f79535-47bb-0310-9956-ffa450edef68"
f6abacbd48cd693d40779569fb0901697115b18b,"DERBY-3652: Adding some tests for BINARY, VARBINARY, and LONGVARBINARY parameter and return types.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@670660 13f79535-47bb-0310-9956-ffa450edef68"
90701f7b6a169adf5db790cd2a32bd4b1c3bd436,"DERBY-3718

Derby has an internal datatype called REF. For REF datatypes, we associate Types.OTHER as it's type. This
 association of Types.OTHER for REF datatype is causing NPE when a row level trigger is fired in the test 
case provided in DERBY-3718.

This NPE happens only in 10.4 and trunk. This is because starting 10.4(DERBY-2917 revision r619995),
rather than saving the TypeId of the DataTypeDescriptor (in DataTypeDescriptor.writeExternal method), we
rely on reconstructing TypeId (in readExternal) by using the Types.xxx associated with a type. This 
approach does not work for internal datatype REF, because we use Types.OTHER for REF datatypes. 
Types.OTHER is not enough to know that the type to be constructed is REF.  

Since we are dealing with the internal type which will be assigned a Types.OTHER type then we can't rely on Types.xxx to get us the correct data type. This fix relies on using the name of the data type rather 
than it's Type.xxx to construct the correct TypeId. This is being accomplised by changing 
DataTypeDescriptor.readExternal to use this.getTypeName rather than this.getJDBCTypeId to construct the TypeId. In addition to this change, I had to change DataTypeDescriptor.getTypeName() to use TypeDescriptor to get the type name rather than TypeId. This is because TypeId is not available when DataTypeDescriptor.readExternal calls DataTypeDescriptor.getTypeName. This will match how we already implement DataTypeDescriptor.getJDBCTypeId(). Junit and old harness suite have run with no new regressions. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@670778 13f79535-47bb-0310-9956-ffa450edef68"
818ef2ab82b94855db690df9df21301cbeaf857b,"DERBY-3723: Reset current schema to default (user name) when creating a new logical connection in the client driver.
Resets the schema to the associated user name for the physical connection when creating a new logical connection (which is currently implemented as resetting the physical connection).
Also made 'Connection.user_' final.
Patch file: derby-3723-1a-client_schema_reset.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@671128 13f79535-47bb-0310-9956-ffa450edef68"
054acc3baaf1ed58c89734ce94d745395caf5f88,"DERBY-3734

Changing the undocumented property derby.storage.fileCacheSize to allow
any maximum setting, previously it limited the setting to a maximum of 100.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@671240 13f79535-47bb-0310-9956-ffa450edef68"
f02a9f234eb6c11a4c9925cfaf0e162bdeba3fe2,"DERBY-3619: Implement more load types for org.apache.derbyTesting.perf.clients.Runner

Added a test client (BankTransactionClient) that performs operations
on a database created by BankAccountFiller. The transactions are
supposed to have the same profile as the transactions in the TPC-B
benchmark. The test client has not been wired into the Runner class
yet.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@671462 13f79535-47bb-0310-9956-ffa450edef68"
5314923ad3be1c69d376835c055389153ad97dd6,"DERBY-3625

Fixed SYSCS_UTIL.SYSCS_INPLACE_COMPRESS_TABLE() bug where during the 
defragment phase one part of the code would think there was enough room to
move a record, but because the new record id on the destination page would
take more room than on the source page the move actually would not succeed.
In this case an XSDA3 errror would be thrown and the compress would fail.

This would cause intermittent errors in the nightly concateTests.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@671605 13f79535-47bb-0310-9956-ffa450edef68"
18fca03d61c186a8c9672cac6ae47cdc7ab3785e,"DERBY-3735: Incorrect position calculation in PositionedStoreStream with read(byte[],...).
Fixed calculation by only adding positive integers (not allowing -1).
Added a general test and a regression test.
Made LoopingAlphabetStream implement Resetable to allow it to be used for testing where a resetable stream is expected.
Patch file: derby-3735-1b.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@671840 13f79535-47bb-0310-9956-ffa450edef68"
2445ee83747e9e33bcb7fb54ff039b3b839a4d65,"DERBY-3619: Implement more load types for org.apache.derbyTesting.perf.clients.Runner

Added options to Runner to run the bank transaction test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@671861 13f79535-47bb-0310-9956-ffa450edef68"
00b4f1b013ca6ef741c210307cbbac157fe8bf45,"DERBY-3703: Add stub implementation of JSR169 so that the J2ME client will be built by default.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@671940 13f79535-47bb-0310-9956-ffa450edef68"
8790bb42c815a68a12bc72e921eb53711b81efe5,"DERBY-3652: Add a lint tool, SignatureChecker, which checks whether the routines registered in a database actually match static Java methods visible on the session's classpath.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672019 13f79535-47bb-0310-9956-ffa450edef68"
9de50b22d8e0f4a4ab6201b18b419114c9a06ac9,"DERBY-3652: Add test cases for char and long varchar.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672029 13f79535-47bb-0310-9956-ffa450edef68"
2dcc340d5b1e9b87f4d9dcc308c4a4955bd76251,"DERBY-3703: Make it possible to build the JSR169 support with the jdk1.4 libraries

Fixed build break with ant 1.6.5 (not seen with ant 1.7.0):
  * make sure setCompilerProperties is invoked before jsr169stubs
  * remove use of Java 1.5 classes in java.sql.Timestamp


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672190 13f79535-47bb-0310-9956-ffa450edef68"
a8b60da9caa622ccafa8a9da32fe59e04e18acee,"DERBY-3735: Incorrect position calculation in PositionedStoreStream with read(byte[],...).
Fixed bug introduced by earlier commit. 0 is a valid return value for 'read()', and the position must be incremented. Also changed the condition for 'read(byte[],int,int)' for consistency.
Patch file: derby-3735-2a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672284 13f79535-47bb-0310-9956-ffa450edef68"
e8903d64b429deeee00a9975d014d0218bb62d9f,"DERBY-3652: Add signature matching tests for DECIMAL, DATE, TIME, and TIMESTAMP.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672323 13f79535-47bb-0310-9956-ffa450edef68"
463fe167a54c9b601dd4253152ab91c11f52c7fa,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit.
Enabled the ProtocolTest JUnit test. It can be run as part of the package private test suite; ant junit-pptesting
Patch file: derby-2031-3b-enable_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672770 13f79535-47bb-0310-9956-ffa450edef68"
ef42635652cee9871c414b262bfdabfd10f81a8e,"DERBY-3652: Add tests for functions which return Blobs and Clobs but disable these tests because Derby chokes on them.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672781 13f79535-47bb-0310-9956-ffa450edef68"
146fd5c0930e09d6ded27e6914affa3f8b31fd57,"DERBY-3732  SQL Length function materializes BLOB into memory



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672818 13f79535-47bb-0310-9956-ffa450edef68"
cf775af56274f8fadcac884dac2574900345c78d,"DERBY-3625

Adding space check to case where we try to move row to a new page.  I could
not come up with a repro for this case, but seems safer to check for space
than not.  The case the code is trying to avoid is a free page that has been
reclaimed with a nextid that requires more space than the row on the source
page.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672834 13f79535-47bb-0310-9956-ffa450edef68"
9a1a94a7c1638c68705994b0c16d7558adbd0e42,"DERBY-3730

Adding a Bundle-SymbolicName entry to the manifest to conform to the
OSGI release 4 standard.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@672838 13f79535-47bb-0310-9956-ffa450edef68"
50af3048d365e7e80e7976d416e64fc2521c580a,"DERBY-3739: Skip and read methods in ArrayInputStream may overflow

Fixed problems with negative byte count and overflow in skip() and
skipBytes(), and added a unit test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@673026 13f79535-47bb-0310-9956-ffa450edef68"
373cb84f81c74540eaf3c2413860eb62669e1ece,"DERBY-3742: Move test code from CompressedNumber to a unit test

Added a JUnit test with the test code and removed it from CompressedNumber.

Contributed by Junjie Peng <pjj.ccce@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@673057 13f79535-47bb-0310-9956-ffa450edef68"
a1f09e9ba93c9872bee6b6993ea70809b33980d2,"DERBY-3724 convert big.sql to JUnit

contributed by Junjie Peng



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@673136 13f79535-47bb-0310-9956-ffa450edef68"
d798bb11da87114ac0c4aebcc44625bc7937120a,"DERBY-3446: Make ResultSet.getStatement return the correct statement when created by a logical statement.
Added regression test for the bug in JDBC statement caching environments.
Patch file: derby-3446-3a-stmtpool_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@673327 13f79535-47bb-0310-9956-ffa450edef68"
d241e83d0355db120d405bfc7acc68bf5fbfc4d7,"DERBY-3742: Move test code from CompressedNumber to a unit test

  * Added CompressedNumberTest to the JUnit suite
  * Made checkInt() and checkLong() verify the compressed length

Contributed by Junjie Peng <pjj.ccce@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@673328 13f79535-47bb-0310-9956-ffa450edef68"
dc5597b2b7fb4b3b9b7b04a72f9492efa00edf00,"formatting, fixed typo's and increased comments.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@673482 13f79535-47bb-0310-9956-ffa450edef68"
ea0e6d339dafd558604f023a6c3117976696b0bc,"DERBY-3650

Another incremental update to the test, it is still not run as part of a suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@673592 13f79535-47bb-0310-9956-ffa450edef68"
33fa3208b7c13847331df1b02f7bf2f5153d25cd,"DERBY-3739: Skip and read methods in ArrayInputStream may overflow

Changed checks in read() and in readFully() so that they are not
vulnerable to integer overflow.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@673610 13f79535-47bb-0310-9956-ffa450edef68"
59dedd185035d05b6633efe6c69943a7e495a58e,"Use helper method to check SQLState.
Removed comment that's no longer valid.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@673635 13f79535-47bb-0310-9956-ffa450edef68"
1a5591fd0aaf8b015403ef0c11381f82021ef96a,"DERBY-1764 (partial)  Rewrite stress.multi as a JUnit test
contributed by Erlend Birkenes.
Check in converted test but don't add to suite yet.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@674326 13f79535-47bb-0310-9956-ffa450edef68"
00077a4fe46431e868d50d52aeabf9ef00f3ac91,"DERBY-3706 NetworkServer console messages should print a time stamp

Contributed by Suran Jayathilaka



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@674354 13f79535-47bb-0310-9956-ffa450edef68"
1aea8b48129a6417c7910ddc15aa3e76481e13ab,"DERBY-1764 restore build of multi directory accidentally removed with DERBY-1764 checkin



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@674366 13f79535-47bb-0310-9956-ffa450edef68"
82c3c55aadfdf3fa71bfdc27082dcd5137db605e,"DERBY-1764 (partial): Rewrite stress.multi as a JUnit test.
Fixed class name in license header.
Formatting fixes (removed tabs and trailing spaces, a few fixes of indentation level).
Patch file: derby-1764-3a-whitespace_changes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@674412 13f79535-47bb-0310-9956-ffa450edef68"
3459db5bf7089508e0017a07afed32ea937f49ec,"DERBY-3751: Convert case.sql to junit.
Patch file: derby-3751-2-patch.txt

Patch contributed by Junjie Peng.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@674451 13f79535-47bb-0310-9956-ffa450edef68"
f95db615dabc1a3e683961675f969c61c4ceff62,"DERBY-3650

comment whitespace changes only, separating them from logic changes associated
with this patch.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@674565 13f79535-47bb-0310-9956-ffa450edef68"
dfba1e0d7c2001e656cd35c96ed05622999f13f3,"DERBY-3751: Remove mention of old 'case.sql' test script.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@674733 13f79535-47bb-0310-9956-ffa450edef68"
0eb97d9e57f393df90f5dca9e900704bed62aec6,"DERBY-3736 Revoking a column level privilege from a user, a prepared statement relying on that privilege can still be executed

Patch derby-3736b, which fixes this issue, and adds a new testcase.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@674808 13f79535-47bb-0310-9956-ffa450edef68"
8c22ad039d4cd75c92c024d1cfd16ee79eec1b6a,"DERBY-1944: jdbcapi/ParameterMappingTest.java test does not execute test for setObject(Blob/Clob) in DerbyNetClient.
Made the test execute tests for setObject(Blob) and setObject(Clob).
Patch file: derby-1944-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@674849 13f79535-47bb-0310-9956-ffa450edef68"
1a63d73f90cc4026fb1842a50481bcc3f9bd4cc2,"DERBY-3743 Revoking EXECUTE privilege on a function if used in a CHECK constraint: implementation problem

Patch derby-3743, which changes the implementation and adds a test
case to verify that the change doesn't break the current behavior.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675129 13f79535-47bb-0310-9956-ffa450edef68"
0674d1604d6537a6be7565a7d0cee4bbf81fd253,"DERBY-3223 SQL roles: make use of privileges granted to roles in actual privilege checking

Patch derby-3223-revise-iterator-api-b.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675133 13f79535-47bb-0310-9956-ffa450edef68"
37ae69e32458a02142249b839c73f8ca84025244,"DERBY-3768: Make EmbedBlob.length use skip instead of read.
Replaced read loop with a skip loop (potential optimization).
Note the verification of EOF when skip returns zero, which seems safer (due to the somewhat relaxed contract of InputStream.skip).
Patch file: derby-3768-1b-length_skip.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675169 13f79535-47bb-0310-9956-ffa450edef68"
959c44fe86d24d82203db9a711e79b3117a12fb5,"DERBY-3313: JDBC client driver statement cache.
Added initial package description (package.html).
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675508 13f79535-47bb-0310-9956-ffa450edef68"
d1277174b033687de28ec8498b7cc11f551e4a06,"Fix a couple javadoc warnings in tests for GSoc students.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675617 13f79535-47bb-0310-9956-ffa450edef68"
7d66c732875e617ff67e260034b20b8f53874998,"DERBY-3771 testClasspathChecker under SysinfoCPCheckTest failed on Zos



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675669 13f79535-47bb-0310-9956-ffa450edef68"
3db314f0ae27cdd6e3a1ff026448fa20797c67f7,"DERBY-3776 testGetBytes under BlobClob4BlobTest failed on Zos with encoding issue

Fix String created from blob bytes read to use US-ASCII, to match encoding used for insert.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675777 13f79535-47bb-0310-9956-ffa450edef68"
49b94d6b0f9445cbc787eb389af4544660373dae,"Removed @throws tag for exception that can't be thrown.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675861 13f79535-47bb-0310-9956-ffa450edef68"
902041a685887080f483dcd2ce573935be71e8a8,"DERBY-3319: Logical connections do not check if a transaction is active on close

Make sure that connections created by the different kinds of data
sources throw an exception on close if they are active. This is done
to get the same behaviour as with connections returned by
DriverManager.

Don't throw exception for connections with auto-commit on (since
they'll auto-commit the transaction as part of the close, and
therefore won't leave uncommitted operations around) or connections
that are part of an XA transaction (since those transactions can still
be committed/aborted via the associated XAResource after the closing
of the connection).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675870 13f79535-47bb-0310-9956-ffa450edef68"
5a2e494a1e02f3da8c1c57bb3ee510c9da30b6d0,"Fixed javadoc warnings in OverflowInputStream

  - removed @return tag for void methods
  - fixed wrong name in @param tag


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675900 13f79535-47bb-0310-9956-ffa450edef68"
7057c613095f922d16f6e3471f7c4e1632f7324a,"DERBY-2164 (partial) Fixed NullPointerException when loading storeless engine


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675918 13f79535-47bb-0310-9956-ffa450edef68"
3ea4878b3f04fcdd465269cdd54820fdc7f01628,"DERBY-3745 Derby can leak classloaders in an app server environment



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675956 13f79535-47bb-0310-9956-ffa450edef68"
335eb2344f108a252ba90dcc125005cc27046d95,"DERBY-3774 jdbc4/ClobTest fails on Zos with AssertionFailedError: Streams differ at index 0 expected:<200> but was:<72>

Test compared getAsciiStream results with String.getBytes() without specifying ""US-ASCII"" as the encoding for getBytes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@675967 13f79535-47bb-0310-9956-ffa450edef68"
27e22fde32968bd315722a64899fd4540e8be573,"DERBY-3773 ImportExportLobTest failed on Zos Clobs differ at index 1 expected:<99> but was:<196>

Needed to specify codeset when importing file.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676001 13f79535-47bb-0310-9956-ffa450edef68"
25378cb2812557d81353f9a7f695b4ca0bbe57c2,"DERBY-3775  BlobStoredProcedureTest failed on Zos 
The test expected the number of bytes in String.getBytes() to match the number of characters in the string.  Used US-ASCII encoding so this would be true.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676014 13f79535-47bb-0310-9956-ffa450edef68"
292e7b63e33c638e2177d5c473b1f941a5a1c7ae,"DERBY-3760: Convert ""org.apache.derbyTesting.functionTests.tests.lang.miscerrors.sql"" to junit.
Patch file: derby-3760-3a.diff

Patch contributed by Junjie Peng.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676515 13f79535-47bb-0310-9956-ffa450edef68"
4c867fcf60bce567c9fffbc8eef115d3e9a8a5a2,"DERBY-2333: Convert parameterMapping to JUnit.
Removed remaining master files.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676518 13f79535-47bb-0310-9956-ffa450edef68"
1a627bd8201a73aaba605aed39e072461cfd82af,"Removed empty direcories in the master/canon file hierarchy.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676521 13f79535-47bb-0310-9956-ffa450edef68"
30f7a3838dc11b337b4f098e51970983c7098db4,"Removed unused local variable and unused imports.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676544 13f79535-47bb-0310-9956-ffa450edef68"
2cc5408fb274e88fba268ba4a2926ae42480d128,"Oneline javadoc fix.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676556 13f79535-47bb-0310-9956-ffa450edef68"
69958d66097591d8fd6a43cdf39d68bda3abbde8,"DERBY-3755 ij's help text lacks the optional [HOLD | NOHOLD] syntax for GET CURSOR

Patch derby-3755-2, which adds the missing syntax for all locales,
removes out-of-date JDBC 1.x references and adds a sentence on
default values for the English locale.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676569 13f79535-47bb-0310-9956-ffa450edef68"
b526e7fe8430402a1cf6a6750fd8d92e84347848,"DERBY-3768: Make EmbedBlob.length use skip instead of read.
 - JavaDoc improvements
 - set locator value explicitly to indicate default value (must not be a valid locator)
 - renamed 'myLength' to 'streamLength'
 - keep variables 'materialized' and 'streamLength' in sync
 - throw exception in second constructor (mistakenly swallowed)
 - only clear LOB mapping if a mapping has been created
Patch file: derby-3768-2a-misc_fixes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676571 13f79535-47bb-0310-9956-ffa450edef68"
ead590cb9432fdb108ed58b293e0c57c511fea4c,"DERBY-3759 Convert ""org.apache.derbyTesting.functionTests.tests.lang.ungroupedAggregatesNegative.sql"" to junit.

Contributed by Junjie Peng


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676771 13f79535-47bb-0310-9956-ffa450edef68"
17f3832c10781da17eb763fc740ef86144f13c6c,"DERBY-3764: Union Query fail on Derby 10.4.1.3

Only look at the visible columns when checking that the expressions in
a UNION query are compatible. This prevents
ArrayIndexOutOfBoundsException from being thrown when preparing some
queries that contain GROUP BY clauses. It is only a partial fix, since
some of the queries run into other problems later in the execution.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676819 13f79535-47bb-0310-9956-ffa450edef68"
12988c7ccd11204ef3c3177f765b2fd8eab6290c,"DERBY-3223 SQL roles: make use of privileges granted to roles in actual privilege checking

Patch derby-3223-activate-roles-2, which makes the roles active for
the first time. No revocation logic yet. The new test,
RolesConferredPrivilegesTest, is not yet wired into suites.All.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676890 13f79535-47bb-0310-9956-ffa450edef68"
2a899d807065672478e3563c09b2119f2900f675,"DERBY-3777 SecureServerTest, SSLTest  failed on Zos with exit code 143 starting network server

Extend wait time for network server to come up.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676894 13f79535-47bb-0310-9956-ffa450edef68"
40d812fcf8e2a6530f874acfc3a99804297186c0,"DERBY-3755 ij's help text lacks the optional [HOLD | NOHOLD] syntax for GET CURSOR

Follow-up patch to fix a broken test master: ij.out.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676896 13f79535-47bb-0310-9956-ffa450edef68"
46244ea2c9a4fee3ee99c04983eddb94d000ddeb,"DERBY-3769: Make LOBStoredProcedure on the server side smarter about the read buffer size.
Adjust amount of data to fetch (and thus read) if it is greater then the maximum allowed return length of the LOB stored procedures (width of VARBINARY/VARCHAR).
Reading/fetching more data caused the stream position to be advanced too far and resulted in a stream reset followed by skipping of data until at the correct position again.
Patch file: derby-3769-1b-buffer_size_adjustment.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676912 13f79535-47bb-0310-9956-ffa450edef68"
1ed1f71b92313301bf461cedb9e90a92baf2c6a3,"DERBY-3223 SQL roles: make use of privileges granted to roles in actual privilege checking

Follow-up patch derby-3223-activate-roles-2b: small improvements to RolesConferredPrivilegesTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676943 13f79535-47bb-0310-9956-ffa450edef68"
7bd5f71d026cf45ca76c84775cd31f17ce3bcabd,"DERBY-3754 Convert ""org.apache.derbyTesting.functionTests.tests.lang.connect.sql"" to junit

Contribued by Junjie Peng


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676953 13f79535-47bb-0310-9956-ffa450edef68"
5a27a0754751353a679a3bfad6c3b8d72557a39e,"DERBY-3762 Convert ""org.apache.derbyTesting.functionTests.tests.lang.arithmetic.sql"" to junit.

Contributed by Junjie Peng



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676956 13f79535-47bb-0310-9956-ffa450edef68"
079cd70bb822d02ae401326521d0bc75203c329a,"DERBY-3762 Convert ""org.apache.derbyTesting.functionTests.tests.lang.arithmetic.sql"" to junit.

Contributed by Junjie Peng


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676961 13f79535-47bb-0310-9956-ffa450edef68"
e11756a8acbce4b38856a45fa221b5b45d279922,"DERBY-3750 Convert ""org.apache.derbyTesting.functionTests.tests.lang.constant Expression.sql"" to junit

Contributed by Junjie Peng



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676962 13f79535-47bb-0310-9956-ffa450edef68"
01d6da33659a3eaf25666789d8677d3b6a55705d,"DERBY-3754 Convert ""org.apache.derbyTesting.functionTests.tests.lang.connect.sql"" to junit

Contributed by Junjie Peng



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@676970 13f79535-47bb-0310-9956-ffa450edef68"
f02554113e07248ee1d1562422c6e964a14844e5,"DERBY-3650

javadoc fix for Derby3650Test.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@677007 13f79535-47bb-0310-9956-ffa450edef68"
634b64f4f28b7bfb0d0cbb2ab3bcb6629a31a307,"DERBY-3781: PositionedStoreStream.reposition(pos) with pos greater than length leaves the stream object in an inconsistent state.
Reset the underlying stream and the position to zero after an unsuccessful positioning attempt (requestedPos > length).
Patch file: derby-3781-1a-fix_and_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@677172 13f79535-47bb-0310-9956-ffa450edef68"
7cba6d5f23169b088a7b4c3020991e9dcab2cb03,"DERBY-3781: PositionedStoreStream.reposition(pos) with pos greater than length leaves the stream object in an inconsistent state.
Code cleanup, removing an unnecessary convenience variable that can lead to future bugs if used.
Patch file: derby-3781-2b-remove_convenience_link.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@677281 13f79535-47bb-0310-9956-ffa450edef68"
846a5335ea7697950e305c3d2f490335f385656f,"DERBY-3766 (partial): EmbedBlob.setPosition is highly ineffective for streams.
A preparation patch for the main fix, addressing several minor issues:
 a) Change type of 'myStream' from InputStream to PositionedStoreStream.
    This includes removing superfluous casts.
 b) Fixed typo in JavaDoc for 'streamLength'
 c) Improved JavaDoc for 'read()'
 d) Made exception in 'truncate' use the correct position argument.
 e) Added/updated a few comments.
Patch file: derby-3766-1a-preparations.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@677619 13f79535-47bb-0310-9956-ffa450edef68"
1c589afdffd3b184e232bca25c25f7c02821bb46,"DERBY-3783: LOBStreamControl shouldn't throw SQLException.
Throw StandardException instead of SQLException at this level of the code.
Patch file: derby-3783-1a-dont_throw_sqlexception.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@677623 13f79535-47bb-0310-9956-ffa450edef68"
cd1bd2a014915bcf8bbbe32b3dd34fefd933d6ad,"DERBY-3763: Rename BaseJDBCTestCase.usingDerbyNet.
Renamed to usingDB2Client.
Patch file: derby-3763-1b-usingDB2Client.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@677848 13f79535-47bb-0310-9956-ffa450edef68"
963d9f4ecfb3ee3251075622ef21b6d707d0055a,"DERBY-269

This patch will provide a manual way of updating the statistics of all or just one index on a table
using the new stored procedure SYSCS_UTIL.SYSCS_UPDATE_STATISTICS. The signature of the new procedure
is as follows
SYSCS_UTIL.SYSCS_UPDATE_STATISTICS(schemaname, tablename, indexname)
If the user provides null for indexname then statistics will be updated for all the indexes on
schemaname.tablename otherwise statistics will be updated only for schemaname.tablename.indexname.

We implement this functionality by intercepting the stored procedure call and converting it to an
internal to Derby only ALTER TABLE syntax. This allows us to use lot of basic code needed for
schema/table name validation, privilege checking etc. Other than this, the actual code for implementing
the functionality was obtained from exisiting unused class execute/UpdateStatisticsConstantAction.java
I have removed that class from the codeline since the code inside it has now been moved into
AlterTableConstantAction.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@677998 13f79535-47bb-0310-9956-ffa450edef68"
bde05cd1ee407d687ed1f4fd19ec4edb75baeddb,"DERBY-1764 (partial) Rewrite stress.multi as a JUnit test

incremental improvements for error handling and change StressMulti50x59 should only do an embedded run.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678051 13f79535-47bb-0310-9956-ffa450edef68"
c3ff1bd35a77beecd169d9d8816eeba5016256ef,"DERBY-3780 fix some encoding problems in tests.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678063 13f79535-47bb-0310-9956-ffa450edef68"
ed0be21aa93c011a70ce5a317a2586dfaee279c9,"DERBY-3783: Added utility method that wraps a Throwable in an IOException


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678388 13f79535-47bb-0310-9956-ffa450edef68"
d50917c055a08a008359fbfacda4ad1844475de7,"Removed empty @return tag


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678426 13f79535-47bb-0310-9956-ffa450edef68"
f8cdf6500b86efe3a50ae3b06a063d0290be4845,"Removed @param tag for non-existent parameter and corrected @return tag


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678430 13f79535-47bb-0310-9956-ffa450edef68"
611a3a2f3ada33c0d48e58c56fbcd435f33f839b,"Removed a single tab that had slipped into LargeDataLocksTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678445 13f79535-47bb-0310-9956-ffa450edef68"
c81317760f5e5540f555a26415df728ddd74e980,"DERBY-269 Cleaning up code comments in AlterTableConstantAction.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678460 13f79535-47bb-0310-9956-ffa450edef68"
0255faae73815c3c0c56c272868a99bbb7e3a976,"DERBY-3764: Union Query fail on Derby 10.4.1.3

A SetOperatorNode inherits the result column list from its left
operand. This patch makes sure that all generated grouping columns are
removed from the SetOperatorNode's column list to prevent it from
seeing extra columns that cause confusion when the set operation is
performed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678668 13f79535-47bb-0310-9956-ffa450edef68"
65e03868279807a2cfa80a2cfedab7e6ae5358df,"DERBY-3793: Remove unnecessary methods from InternalClob interface.
Removed InternalClob.getBytePosition.
Patch file: derby-3793-1a-remove_getBytePosition.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678724 13f79535-47bb-0310-9956-ffa450edef68"
c4229c975d1646c5e62a771cfd5a60ac1168fa52,"DERBY-961: Error 22001 can include 'XX-RESOLVE-XX' which should be removed

In some cases, error 22001 can come up as follows:

   A truncation error was encountered trying to shrink
   CHAR () FOR BIT DATA 'XX-RESOLVE-XX' to length 40.

This message makes it appear as if there is a column called XX-RESOLVE-XX,
however, this string is hard-coded in SQLBinary.java, and should be removed.

The intent of the XX-RESOLVE-XX message parameter is to hold the actual
value which could not be shrunk to fit in the column. For a SQLBinary
data type, the actual value may not be human-readable, and so cannot
be displayed.

This patch changes the XX-RESOLVE-XX parameter to the message to
""(Binary data value not displayed)"", which should give a better hint to
the person who received this error message about what was going on. 

The patch also adds a new test case to BlobMemTest to force the code to
emit the 22001 message from SQLBinary, to ensure that this code path
is run in our tests.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678769 13f79535-47bb-0310-9956-ffa450edef68"
d5a0108c6fbaa24386c3709f5b2fdc7647dd8238,"DERBY-1764 (partial) Add in assertDrainResults for select to make sure statement executes completely and also to workaround DERBY-3789

Contributed by Erlend Birkenes



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678797 13f79535-47bb-0310-9956-ffa450edef68"
44900c52c464cc206a75c03478ea585e0d586ddb,"DERBY-3618 Perform thread dump with ASSERTS with jdk 1.5 or higher

Contributed by Erlend Birkenes



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@678858 13f79535-47bb-0310-9956-ffa450edef68"
94d395e273b7aed050e65ed32f195640b19117f4,"DERBY-3784: ImportExportTest doesn't detect lack of expected errors

Added calls to fail() to ensure that the tests fail if the expected
exceptions are not thrown.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@679027 13f79535-47bb-0310-9956-ffa450edef68"
eab02c201c0f76b629e59423594607ca70452dfe,"DERBY-3745 Derby can leak classloaders in an app server environment
Cleanup change to set context class loader for newly created threads 
directly rather than setting the context classloader of the current 
thread before creation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@679620 13f79535-47bb-0310-9956-ffa450edef68"
2365e789802d0e2629daae068bb12661075f54c1,"DERBY-3731: Improve calculation of refSize in ClassSize.java.
Changed implementation to get the value for refSize through system properties. If that doesn't work due to missing privileges or unknown values, we fall back to the heuristic.
The system properties consulted are ""sun.arch.data.model"" and ""os.arch"".
Patch file: derby-3731-1c-refsize_from_properties.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@679690 13f79535-47bb-0310-9956-ffa450edef68"
47ae0cd94cc571b66dc0bac4b9c86b76981ebfd7,"DERBY-3618: Addressed some review comments in AssertFailure and AssertFailureTest

Patch contributed by Erlend Birkenes <erlend@birkenes.net>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@679742 13f79535-47bb-0310-9956-ffa450edef68"
b6ee24b1a44c08e1fe3e7728e6df900e54118aa9,"Removed unused method.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@679761 13f79535-47bb-0310-9956-ffa450edef68"
0a6ce0bc36f10e3d9b527c34c754c528c2c00054,"DERBY-3360 Invalid method java.lang.Integer >> void <init>(short) because java.lang.NoSuchMethodException: java.lang.Integer.<init>(short)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@679815 13f79535-47bb-0310-9956-ffa450edef68"
b52ccdf74dc14311ce34beefecc946ca213e22ce,"DERBY-3741 SQL LENGTH function materializes CLOB into memory

Contributed by Suran Jayathilaka


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@680478 13f79535-47bb-0310-9956-ffa450edef68"
e0c99e52ecdcf21f48ed89c621ff73360cc7a15c,"DERBY-2747 Reply incorrectly handles read() returning -1

Contributed by Kurt Huwig



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@680767 13f79535-47bb-0310-9956-ffa450edef68"
36654c6aa7a850822f7652b90da84fb519ff8e67,"Normalize message files to simplify the process of localizing the 10.4 message changes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681032 13f79535-47bb-0310-9956-ffa450edef68"
c2b03c4c6e90e9bd8bafe0505473ab2196262fcb,"DERBY-3788 and DERBY-269
Adding a new test case which will show that updating the statistics will make a query pickup better 
index compare to prior to statistics availability
+        //
+        //Check statistics update causes most efficient index usage
+        //Create a table with 2 non-unique indexes on 2 different columns.
+        //The indexes are created when the table is still empty and hence
+        //there are no statistics available for them in sys.sysstatistics.
+        //The table looks as follows
+        //        create table t2(c21 int, c22 char(14), c23 char(200))
+        //        create index t2i1 on t2(c21)
+        //        create index t2i2 on t2(c22)
+        //Load the data into the table and running following query will
+        //pickup index t2i1 on column c21
+        //        select * from t2 where c21=? and c22=?
+        //But once you make the statistics available for t2i2, the query
+        //will pickup index t2i2 on column c22 for the query above


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681085 13f79535-47bb-0310-9956-ffa450edef68"
9e91a0633927b408de3dc7824e22ed50455abbf0,"DERBY-3803 fix 'org.apache.derbyTesting.functionTests.tests.lang.XMLTypeAndOpsTest' failures after checkin for DERBY-3745



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681104 13f79535-47bb-0310-9956-ffa450edef68"
bbbeea7533f75a5fec93cab9fe6ef92cbb6e7a85,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit.
Close opened readers/streams (caused failure on Windows).
Patch file: derby-2031-4a-close_streams.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681302 13f79535-47bb-0310-9956-ffa450edef68"
cd7ef76fb6fbc93b322cd1cc461db13dfddf1f98,"DERBY-3766: EmbedBlob.setPosition is highly ineffective for streams.
 a) Removed the 'pos' and 'biStream' variables. A ""global"" Blob position is no longer maintained by EmbedBlob.
 b) Introduced 'streamPositionOffset' to account for the encoded length bytes. Only used when the Blob is represented by a store stream. Set to Integer.MIN_VALUE when unused. Otherwise, the offset is obtained in the constructor, where the Blob length is saved for later use as well if it is known (the stream is not skipped to find length).
 c) Removed 'BLOB_BUF_SIZE' and 'buf', they're no longer needed.
 d) Renamed 'setPosition' to 'setBlobPosition' and rewrote the method. The method now relies on PositionedStoreStream to do the repositioning. In some cases this will lead to using the same algorithm as earlier, otherwise it will be more effective because the stream isn't reset. Note the addition of 'streamPositionOffset' to the logical zero-based Blob position. Also note that another SQLState is used. The method also returns the new position (this is only for convenience).
 e) Changes in read(); added pos argument, don't throw SQLException, use the correct stream.
 f) Updated length() to reflect changes.
 g) Rewrote the two 'position' methods to maintain a local position variable. Also removed special handling for the BLOB_LENGTH_TOO_LONG exception.
 h) Updated JavaDoc and added position argument for the two 'checkMatch' methods.
 i) Added one new test in BlobClob4BlobTest.
Patch file: derby-3766-2a-position_fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681359 13f79535-47bb-0310-9956-ffa450edef68"
6a29676f024f97606ff49ff5935d04f93874bdb3,"DERBY-3807: removing traces of no-longer existing unicode escape functionality


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681386 13f79535-47bb-0310-9956-ffa450edef68"
780767dda3837db9177e070c8acacafcf05fbcf1,"DERBY-3796: convert derbynet/OutBufferStream to Junit test OutBufferStreamTest.
  patch contributed by Erlend Birkenes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681487 13f79535-47bb-0310-9956-ffa450edef68"
51ef6db8abbd980b391ad9ce3d18d521134d8038,"DERBY-3799: NullPointerException when accessing a clob through a pooled connection.
Verify that the LOB stored procedure statements are open (not only non-null).
Patch file: derby-3799-1a-checkIfClosed.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681694 13f79535-47bb-0310-9956-ffa450edef68"
c16a2d036372fd5388041f2393c4dea7c75fd031,"DERBY-3791: Excessive memory usage when fetching small Clobs.
Exploits length information (where available) to reduce memory overhead wrt buffering. This improvement will only affect small Clobs in the range 1 byte to 8 KB, the smaller the Clob the bigger the overhead reduction.
Patch file: derby-3791-2a-buffer-adjustments.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681723 13f79535-47bb-0310-9956-ffa450edef68"
ec64ae89d8cf62e16db187f65e5fe7f9b13e4dab,"DERBY-3800 Convert derbynet/maxthreads to JUnit

Contributed by Suran Jayathilaka



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@681846 13f79535-47bb-0310-9956-ffa450edef68"
68eef8a27eedc0bcb287878d2d3e8bb9b1482610,"DERBY-3804: Check in localizations for messages added in 10.4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@682375 13f79535-47bb-0310-9956-ffa450edef68"
2301e09ba9dd1de54b8ae34bfca7545439e71196,"DERBY-3812 - fix test regression in 
  NetworkServerMBeanTest.testAttributeDrdaStreamOutBufferSize caused by checkin
  of converted test OutBufferStreamTest (DERBY-3796).
  Patch contributed by Erlend Birkenes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@682531 13f79535-47bb-0310-9956-ffa450edef68"
b61139493d264b0e2dae6827e3965cea17893edf,"DERBY-3741 SQL LENGTH function materializes CLOB into memory

Add test for multibyte characters.  Enabled test for embedded only as client test takes an extremely long time to run.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@682693 13f79535-47bb-0310-9956-ffa450edef68"
5b9d451781006396e16587d6f49576395745c914,"DERBY-3813  Derby tests for the existance of BigDecimal methods toPlainString and bdPrecison but does not check if they were found before using them.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@683323 13f79535-47bb-0310-9956-ffa450edef68"
a38484c4e9ac67f6827dcbdce6dd70dd7ed0d2f0,"DERBY-3820: Changes to ReleaseNotesGenerator to accomodate changes that have been made to the format of JIRA reports.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@683346 13f79535-47bb-0310-9956-ffa450edef68"
678868b890a56a4c2f2363f3ea25dffee8593f1d,"DERBY-1726; wrap LocalizedDisplay and LocalizedConnectionAttribute scripts in
  a junit ScriptTest and ensure they are only run in environments where they'll
  pass.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@683410 13f79535-47bb-0310-9956-ffa450edef68"
228729f461c7987fb40c7d4504bb9ad8f4d4700c,"DERBY-3826: Remove dead files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@683986 13f79535-47bb-0310-9956-ffa450edef68"
637c1f91bbf0b94999987e6197afabaa517d2b94,"DERBY-3827: Add Apache license header to various files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@684809 13f79535-47bb-0310-9956-ffa450edef68"
87d0d61a4302e3890b1a924154a4052c3983d28f,"DERBY-3767 Convert ""org.apache.derbyTesting.functionTests.tests.lang.nulls.sql"" to junit.

Contributed by Junjie Peng


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@684823 13f79535-47bb-0310-9956-ffa450edef68"
4293daff5c52fa3f737272f58d830f8ce6f1ee08,"DERBY-3767 Convert ""org.apache.derbyTesting.functionTests.tests.lang.nulls.sql"" to junit.  Forgot to svn add test.

Contributed by Junjie Peng



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@684848 13f79535-47bb-0310-9956-ffa450edef68"
9e04f69044f30196a2fc8df1a934e8818aab58d2,"DERBY-48 A connection request that has a default schema that is being created by another transaction will fail to connect

Patch derby-48b, which limits the use of a subtransaction to the
initial default schema, other implicit schema creation is
transactional. A new testcase is added to show the latter.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685141 13f79535-47bb-0310-9956-ffa450edef68"
7c33e9ccf45d7238587a76458bf8e7106ed85341,"DERBY-3837; add a test that mimics accessing a db on read-only media


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685173 13f79535-47bb-0310-9956-ffa450edef68"
ddae94a2ee1c1a4dbe7acbea646b09e50efe30cc,"DERBY-48 A connection request that has a default schema that is being created by another transaction will fail to connect

Follow-up patch to svn 685141, which accidentally committed the wrong patch revision.
With this patch, the net effect is DERBY-48b-1 which should have been committed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685232 13f79535-47bb-0310-9956-ffa450edef68"
596bb6e4c1540a7ed8f080a1bf16def890648b00,"DERBY-1726 - removing unnecessary _app.properties files after wrapping
  LocalizedDisplay.sql and LocalizedConnectionAttribute.sql in a junit 
  ScriptTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685269 13f79535-47bb-0310-9956-ffa450edef68"
2bfe0a6467a9796f5668076ee2e3250414377e98,"DERBY-3802; convert lang.optimizerOverrides.sql to junit test. 
  Patch contributed by Junjie Peng


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685408 13f79535-47bb-0310-9956-ffa450edef68"
928eb0997cb206c6dabfe7e96bfc7e40b8331b84,"DERBY-3802 ; remove 2 missed references to old optmizerOverrides.sql test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685422 13f79535-47bb-0310-9956-ffa450edef68"
8875d6900d0ffb95c6e7391d5cb344475dec5aa7,"DERBY-3743 Revoking EXECUTE privilege on a function if used in a CHECK constraint: implementation problem

Patch derby-3743b-2, which is a follow-up to the first patch of this issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685526 13f79535-47bb-0310-9956-ffa450edef68"
d8b7f84ed018fc862da019a39d0cbfcc4cfc2c40,"DERBY-3797; convert test metadataMultiConn to JUnit.
  patch contributed by Erlend Birkenes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685553 13f79535-47bb-0310-9956-ffa450edef68"
c72907483cefff5d94eb8a262d2d64b2e6e8b191,"DERBY-3797; forgot to add the actual converted test, metadataMultiConnTest.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685599 13f79535-47bb-0310-9956-ffa450edef68"
1316d294e6bc1d3a5a1bd38946bc876044c6e88a,"DERBY-3832 Convert derbynet/timeslice.java to Junit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685633 13f79535-47bb-0310-9956-ffa450edef68"
c34c8e09bfebff0dc1421bae13177484081d2a3f,"DERBY-3745  inline doPrivileged blocks instead of using utility methods which can be a security risk.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685674 13f79535-47bb-0310-9956-ffa450edef68"
a90874a551f82493db4bd5825b08b0ce4a99998d,"DERBY-3831; junit.RuntimeStatisticsParser doesn't fully distinguish names of table or index.
  patch contributed by Junjie Peng


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685733 13f79535-47bb-0310-9956-ffa450edef68"
cf5735d0434db91b16de41ffc1663b9cc5f5de68,"DERBY-3717; convert derbynet/getCurrentProperties to junit
  Patch contributed by Manjula Kutty


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@685946 13f79535-47bb-0310-9956-ffa450edef68"
45ac50984b61ace44c6c5a3dcb0d33dbe3cada6b,"DERBY-3758: convert lang/precendence.sql from LangScripts test to junit proper.
  patch contributed by Junjie Peng


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@686104 13f79535-47bb-0310-9956-ffa450edef68"
4639287860b338deaecb251394d0d5a5c69cca92,"DERBY-3798: remove unnecessary call to Hashtable.get()
  Patch contributed by Junjie Peng


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@686193 13f79535-47bb-0310-9956-ffa450edef68"
1af246f004c340db564d45ffd8e85fe279c1a85b,"DERBY-3828; run jdbcapi/SURTest_ij.sql in a junit ScriptTest
  patch contributed by Erlend Birkenes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@686238 13f79535-47bb-0310-9956-ffa450edef68"
27da9a9dce5b6dc20b56ef57d46c8fa4f319f53c,"DERBY-3745: derby can leak classloaders; fixing build warning resulting from
  a previous check-in.
  patch by Kathey Marsden


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@686296 13f79535-47bb-0310-9956-ffa450edef68"
70b8905861c583f5151a1dd6dc37a1dc5fc359ab,"Fixed typo in header comment: RunTimeStatisticsParser -> RuntimeStatisticsParser


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@687051 13f79535-47bb-0310-9956-ffa450edef68"
6756142e22b91f4a3b50d120cad1b4289bfcc25d,"Improved error reporting in BaseTestCase.assertExecJavaCmdAsExpected()
to help debugging a problem in NetworkServerControlApiTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@687708 13f79535-47bb-0310-9956-ffa450edef68"
33c92482d2d6db34d047a090bbbb3ed15149e468,"DERBY-3841: Fixed broken logic in BaseTestCase.assertExecJavaCmdAsExpected()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@687793 13f79535-47bb-0310-9956-ffa450edef68"
0bcca1b93d3c765bd02991d818bc800f4167f5ca,"DERBY-3786: Assert failure in CacheEntry.unkeepForRemove when running stress.multi

Made sure GenericLanguageConnectionContext didn't call
CacheManager.remove() without the proper synchronization dictated by
CacheManager's javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688027 13f79535-47bb-0310-9956-ffa450edef68"
00125450a684fbf07d2947718c98f5d78689021d,"DERBY-3770: Create a utility class for skipping data in an InputStream

Patch contributed by Junjie Peng <pjj.ccce@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688049 13f79535-47bb-0310-9956-ffa450edef68"
b8dd6325a1494860b92fb5e319e8127dffd28b06,"DERBY-3845: RunOptimizerTest without -verbose option doesn't print time spent

Fix contributed by Ole Solberg <Ole.Solberg@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688082 13f79535-47bb-0310-9956-ffa450edef68"
63c65ac2363918adf82f34f21c3122c04d575882,"DERBY-3829; convert derbynet/sysinfo* to JUnit
  original patch contributed by Erlend Birkenes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688103 13f79535-47bb-0310-9956-ffa450edef68"
2953450f99c2c52dab5c4a9f7e5012cc943227b1,"DERBY-3828 - fixing javadoc warning in converted SURijTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688123 13f79535-47bb-0310-9956-ffa450edef68"
75b696f855f66d4bde79745dbeed661e5150620d,"DERBY-3829; fix a javadoc warning in converted SysinfTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688127 13f79535-47bb-0310-9956-ffa450edef68"
b0ff7cfeeb5086ed192a1f161a1ceac335702f26,"DERBY-2422 ; test holdCursorJavaReflection was decided as unnecessary with
  jdk1.4 and up as it only tests a different way to get at the holdability
  functionality (as a temporary workaround while jdk13 was still supported). 
  However, there was no specific derby functionality tested that isn't tested
  elsewhere and the test should've gotten deleted to prevent confusion later. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688184 13f79535-47bb-0310-9956-ffa450edef68"
c10fbbf5960405a498ff7c2959654447c5e73216,"correcting some incorrect references to classes in the license part of 3 policy
  files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688185 13f79535-47bb-0310-9956-ffa450edef68"
85e3e1234eaf5bd902a7366660ad563719454fa7,"DERBY-3693: Deadlocks accessing DB metadata

Make sure that the nested transaction used to recompile meta-data
queries does not wait for locks to prevent hangs when there's a lock
conflict between the nested transaction and the user transaction.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688274 13f79535-47bb-0310-9956-ffa450edef68"
01237975df28c79de4d2112b5d0c0ad0af3848a6,"DERBY-3820: The revised releases notes generator was picking up attachments which weren't release notes--this fixes that problem.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688742 13f79535-47bb-0310-9956-ffa450edef68"
5431e031cedd5534ba028c6c60e7c068aa729e45,"DERBY-3693: Deadlocks accessing DB metadata

Added more detailed comments and cross references in the javadoc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688756 13f79535-47bb-0310-9956-ffa450edef68"
26eea5a502304bb92aada637ee47c601f2febc29,"DERBY-3820: Add John and Thomas to the list of committers at the end of the STATUS file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688806 13f79535-47bb-0310-9956-ffa450edef68"
eb38311c20701f9fe31bca78f77d20a69f403c5a,"DERBY-3223 SQL roles: make use of privileges granted to roles in actual privilege checking

Patch derby-3223-revocation-logic-5, which adds revocation logic for roles.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@688900 13f79535-47bb-0310-9956-ffa450edef68"
e260f22be96473f4cb2c30257c5c2bdd6e2740e6,"DERBY-3653; convert lang/datetime.sql to junit
  Patch contributed by Junjie Peng.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@689237 13f79535-47bb-0310-9956-ffa450edef68"
a4bb3519099c08b61b91a2a04e6ea500067331cb,"DERBY-3561: testStartStopManagementFromApplication fails with ""expected:<2> but was:<5>""
 - applying same change to ServerPropertiesTest.policy's section for classes as
   revision 644248 did to its section for derby.jar.
 - that is, added permission which allows ServerPropertiesTest's JVM to unregister 
   MBeans that are automatically registered upon Derby boot by that test or previous 
   tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@689460 13f79535-47bb-0310-9956-ffa450edef68"
3486786f91375c5497a18941c94a902446eb628c,"Fixed start of javadoc comment


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@689481 13f79535-47bb-0310-9956-ffa450edef68"
1c4d62edf3a4048574b0875525af87433ea2e8dd,"Fixed JavaDoc tag.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@689788 13f79535-47bb-0310-9956-ffa450edef68"
95d725a792c650e5a0ae89e7d52de498a888e12b,"DERBY-3825: StoreStreamClob.getReader(charPos) performs poorly.
Small cleanup patch moving the resetting of readPositionInBuffer into fillBuffer.
Patch file: derby-3825-1a-reset_readpositioninbuffer.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@689803 13f79535-47bb-0310-9956-ffa450edef68"
3b24898154e6bd5b2eed84fcafa100b4137e5727,"DERBY-3601: Optimize LOBStateTracker for non-locator servers.
Cleanup patch changing comments and code naming. No functional changes.
Patch file: derby-3601-1a-comments_and_renaming.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@690133 13f79535-47bb-0310-9956-ffa450edef68"
b1d3a85e013113606008a4ebc4c8ae76eb9dd661,"DERBY-3859 Reset the current role when EmbedPooledConnection creates a new logical connection

Patch derby-3859-1, plus fixed a comment type pointed out by Kristian.

Makes Derby reset the current role to null in a pooling context when
reusing a physical connection, similar to what is done for current
schema.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@690983 13f79535-47bb-0310-9956-ffa450edef68"
e4caed29d1b8b3153d9885d3ad6e6c8a7cea3b9d,"DERBY-3223 SQL roles: make use of privileges granted to roles in actual privilege checking

Patch derby-3223-invalidate-activations-2, which changes the way prepared statements
are invalidated to a more efficient approach which invalidates the activation, thereby
forcing a rechecking of privileges when the current role changes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691007 13f79535-47bb-0310-9956-ffa450edef68"
caa929f9b85d485eda9195141900e136b423d432,"DERBY-3601: Fixed JavaDoc link warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691205 13f79535-47bb-0310-9956-ffa450edef68"
27628a018cd353925a667c47bb628cedf29f4b23,"DERBY-3770: Create a utility class for skipping data in an InputStream

Moved helper methods from iapi/util to iapi/services/io and reduced
the number of calls to skipPersistent() from skipUntilEOF().

Patch contributed by Junjie Peng <pjj.ccce@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691253 13f79535-47bb-0310-9956-ffa450edef68"
40a45842f50e5a8f5e4eeaf6d54b5ab8a9ca3a4d,"DERBY-3863; improve test for import export using ij


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691506 13f79535-47bb-0310-9956-ffa450edef68"
65882228afe7cb5ca331226b7278e0a83a4f6585,"DERBY-2556: Code paths for db restore do not use doPrivileged-calls, causing SecurityException.
Removed utility class calling AccessController.doPrivileged, because it is a security hole and it is strongly discouraged by the Java docs.
Adjusted the policy files as the code bases changed when the code moved into different classes.
Patch file: derby-2556-5b-reworked_fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691576 13f79535-47bb-0310-9956-ffa450edef68"
d8644b2a74be5b1266b4a7bb834b308538b5ea3b,"DERBY-3845: Problems running org.apache.derbyTesting.system.optimizer.RunOptimizerTest

Make sure the database is initialized also when -mode is specified on
the command line.

Patch contributed by Ole Solberg <Ole.Solberg@Sun.COM>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691583 13f79535-47bb-0310-9956-ffa450edef68"
e8fd6869b046af83aab2a66273d018724ed29ea9,"DERBY-3793: Remove unnecessary methods from InternalClob interface.
Removed method InternalClob.getByteLength.
The method can be re-introduced later if beneficial, but due to lacking length information about Clobs it is a very costly operation with the current code and it is not really required (more of a convenience method).
Removed existing tests of the method, and added a new test to ensure the Derby specific end-of-stream marker isn't carried along.
Patch file: derby-3793-2b-remove_getByteLength.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691608 13f79535-47bb-0310-9956-ffa450edef68"
88d10d439713378ebff95c1359f3feee58dd9a93,"DERBY-3223 SQL roles: make use of privileges granted to roles in actual privilege checking

Fixed som Javadoc warnings.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691726 13f79535-47bb-0310-9956-ffa450edef68"
72988f51c266f8b5e2886ceae37c8f47f6881054,"DERBY-3863; remove test and test files superseded by new, improved test


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691820 13f79535-47bb-0310-9956-ffa450edef68"
9bc4ca0539c2529daa8ff9c905c94e9586ab6ee9,"DERBY-3850: Remove unneeded workarounds for DERBY-177 and DERBY-3693

Removed calls to DatabasePropertyTestSetup.setLockTimeout() from some
tests since the bug that caused the hang has been fixed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@691993 13f79535-47bb-0310-9956-ffa450edef68"
ade6ac5dbde0c98a665171e5b3c9020834130ffb,"DERBY-3673 Add checks that a new role isn't already a user authorization id

Patch derby-3673-5. Corrects and cleans up Javadoc comments. No code changes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@692179 13f79535-47bb-0310-9956-ffa450edef68"
15f7d053e0514fdd2fb2bacfd0c1208e8076a16f,"DERBY-3863; improve import/export ij test - wrap in junit scripttestcase.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@692254 13f79535-47bb-0310-9956-ffa450edef68"
69ffa5b3ff8ca192f5eb33f01fb002bce2cc695e,"DERBY-961: Error 22001 can include XX-RESOLVE-XX which should be removed

This change is a follow-on to revision 678769, and modifies the string
which is used as a message parameter from a hard-coded string to a string
fetched from a translatable message file, so that the string
""(Binary data value not displayed)"" can in the future be translated as
appropriate for different Derby locales.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@692298 13f79535-47bb-0310-9956-ffa450edef68"
d61068df0b7733533198d0b70a01a1761b77f494,"DERBY-1764 Rewrite stress.multi as a JUnit test

Enable StressMultiTest in suites.All.  Leave stress.multi in derbyall for now.
Contributed by ERlend Birkenes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@692494 13f79535-47bb-0310-9956-ffa450edef68"
8106edc92b67cf59b1a4343cb8237c69e3a69fd2,"DERBY-3850: Remove unneeded workarounds for DERBY-177 and DERBY-3693

Removed the wait parameter from methods called from
SPSDescriptor.updateSYSSTATEMENTS() since waiting is prevented by
another mechanism now.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@692495 13f79535-47bb-0310-9956-ffa450edef68"
605b72ab9e1475497df8f19980addca92b719c3b,"DERBY-3850: Remove unneeded workarounds for DERBY-177 and DERBY-3693

Removed workaround in lang/predicatesIntoViews.sql.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@692908 13f79535-47bb-0310-9956-ffa450edef68"
b90e32958262e9286da07b6a05bdb3c08f05b9b4,"DERBY-3820: Update the STATUS file to note the release of 10.4.2.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@693163 13f79535-47bb-0310-9956-ffa450edef68"
b44bd28bc35e55fa4b80810a45dcae0293ebc1ee,"DERBY-1764 disable StressMultiTest. It was causing XATransactionTest to fail.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@693247 13f79535-47bb-0310-9956-ffa450edef68"
f23a20f8957ac7998c4b6870611632dc22befd6b,"DERBY-3840 The test code executes java processes by just executing java instead of using a full path. This may cause the wrong java to be picked up



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@693522 13f79535-47bb-0310-9956-ffa450edef68"
0e86ea3480de1e6dc3b42a1d62f6e8d126e3b557,"DERBY-3063: Extend the system function mechanism to support functions with multiple arguments.
Added support for system functions with several arguments.
Added numberic function ATAN2 (used the one in StrictMath).
Patch file: derby-3063-2a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@694166 13f79535-47bb-0310-9956-ffa450edef68"
449e5bc7da7f92b233e0262e02d396b4c313f3eb,"DERBY-3820: Add 10.4.2.0 to the list of starting points for the upgrade tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@694434 13f79535-47bb-0310-9956-ffa450edef68"
1f22952ff493ccdf4fef7cc16e1f752c222ad50c,"DERBY-3408: Wrong message when using SHOW in ij

This change enhances the ij tool so that, if it detects that a syntax
error has occurred, it will now emit an additional message suggesting
some useful resources that might help the user. The new message is:

    Issue the 'help' command for general information on IJ command syntax.
    Any unrecognized commands are treated as potential SQL commands and executed directly.
    Consult your DBMS server reference documentation for details of the SQL syntax supported by your server.

The change includes updates to a number of regression test output files
which include intentional syntax errors in ij scripts.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@694954 13f79535-47bb-0310-9956-ffa450edef68"
a9215529803eae7ce09e779482ce96a1e9b7bdec,"DERBY-3850: Remove unneeded workarounds for DERBY-177 and DERBY-3693

Removed the wait parameter from TabInfoImpl.updateRow(). The method
only had two callers, both of which called it with
wait=true. updateRow() passed the parameter on to openForUpdate() in
RowChanger, but that method is sometimes called with wait=false, so
the parameter couldn't be removed from that method.

Also removed an unused variable and some unused imports.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@695244 13f79535-47bb-0310-9956-ffa450edef68"
78a2b13f2aa87ef6019154c0726cca3f33f4d9e9,"DERBY-2514; final steps of converting lang/closed.java to junit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@696820 13f79535-47bb-0310-9956-ffa450edef68"
74d75528f0f5ca1f5065b286ca8a7c7b81405476,"Fixed indentation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@697341 13f79535-47bb-0310-9956-ffa450edef68"
e509801a68ecd63181fdb0c3f227d5118660dd9d,"DERBY-3782; remove need for JVMInfo from client/am/Configuration.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@697897 13f79535-47bb-0310-9956-ffa450edef68"
b18aea82e7687ac357dfa800a4328c808902bf60,"DERBY-3869  intermittent hang pinging server on Linux

Close socket if accept() comes during shutdown to avoid hang.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@698696 13f79535-47bb-0310-9956-ffa450edef68"
9f4b3391f24222fe88db52ff592ca64e03945c11,"DERBY_3570: Introduce determinism field.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@699009 13f79535-47bb-0310-9956-ffa450edef68"
d02fa84d2809f79ac04b05bba913c29005323263,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-ijfix:

- a fix to ij's ""SHOW ROLES"" command to give an error message if the driver is
  not Derby embedded or client. The command does not use database metadata,
  so the generated select from SYS.SYSROLES is inherently Derby specific.

- a new simple test for the command, tools/ij_show_roles.sql (run via
  JUnit/ToolScripts.java). The test is run both the embedded and via the network client.

- a fix to escape case normal form role names to protect the role id
  when performing DROP ROLE in CleanDatabaseTestSetup#removeRoles (the
  test above provoked this bug).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@699366 13f79535-47bb-0310-9956-ffa450edef68"
44ea4f0f039ebba3bfcb1596f8a248702abc69db,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-setRoleNoCNF-3, which changes the behavior of
SET ROLE ? and CURRENT_ROLE to comply with the latest SQL standard:

- changes the behavior of SET ROLE ? to interpret the dynamic argument
  as a delimited SQL identifier. Up till now, it was interpreted as an
  identifer in internal (case normal form), but this seems wrong
  according to SQL 2003, section 18.3, GR3. A Java null value is no
  longer accepted as an argument. An empty string or a null value will
  give identifer parse error (""XCXA0"").
  
  NONE no longer has a special meaning when used in a dynamic (""SET ROLE ?"")
  statement, cf. the addendum ISO/IEC 9075-2:2003/Cor.2:2007 section 18.3. 
  Also, section 18.3, GR2 calls for whitespace to be removed from the
  string before interpreting it as an identifier. This is now also
  performed.

- similarly changes the builtin function CURRENT_ROLE to now return a
  delimited identifer if the role is set, making it ""symmetrical"" with
  SET ROLE, that is, the output of CURRENT_ROLE can be used as input
  to ""SET ROLE ?"". When the role is not set, CURRENT_ROLE returns
  NULL (which can not be used as input to ""SET ROLE ?"", however).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@699374 13f79535-47bb-0310-9956-ffa450edef68"
ebad814e67d4a22a78cdff3acff4969f377dd7a7,"DERBY-3877 SQL roles: build support for dblook

Patch derby-3877-2, which adds basic support for roles in dblook (but
see DERBY-3884), adds test cases, and also enables the old test
harness to shutdown the server using credentials when required due to
authentication being enabled (needed by modified test for dblook).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@700295 13f79535-47bb-0310-9956-ffa450edef68"
ff45fc97888eeef6fd3b4f48d4856937d0cd764f,"DERBY-3883: LOBStreamControl.replaceBytes() leaves temporary files open

Moved the closing and removal of the temporary files out of the if
block it erroneously had been put in.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@700463 13f79535-47bb-0310-9956-ffa450edef68"
b75cf01cb9d64f323020473b81a19e55fc0529be,"DERBY-3390; preventing ClassCastException and disconnect on SQLException thrown from a user function


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@700948 13f79535-47bb-0310-9956-ffa450edef68"
20276f1e871c7057c72d65f96150c4142c24ef53,"DERBY-3601: Optimize LOBStateTracker for non-locator servers.
From the Jira comment (improvements implemented);
  - LOBStateTracker.checkCurrentRow(): couldn't Arrays.fill() be moved inside the if block?
  - should discardState() and markAccessed() check the release flag?
  - should ResultSet.createLOBColumnTracker() use LOBStateTracker.NO_OP_TRACKER instead of allocating a new when serverSupportsLocators() returns false? 
Patch file: derby-3601-2a-non_locator_optimization.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701156 13f79535-47bb-0310-9956-ffa450edef68"
a32cbb61421938355c080b8c037bdc386cabde22,"DERBY-3895; need update of DerbyNet*/holdCursorJDBC30 masters after rev 700948 for DERBY-3390.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701197 13f79535-47bb-0310-9956-ffa450edef68"
aeec385bff6226e430e55d254ebaf8d79e6ebacc,"DERBY-3390; adjust javadoc after fix  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701199 13f79535-47bb-0310-9956-ffa450edef68"
40e90897b228e227e889d44789c875fea35b7282,"Fixed JavaDoc warning (typo in variable name).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701321 13f79535-47bb-0310-9956-ffa450edef68"
58ac4412520065341f597613bc2ca5709cec9b77,"DERBY-3805: Create a simple Blob performance regression test.
Added initial version of a Blob performance regression test.
Currently, the embedded driver is used and there are no tests for encrypted Blobs.
There are a few properties that can be used to control the test (see JavaDoc).
Patch file: derby-3805-1b-blobaccesstest.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701351 13f79535-47bb-0310-9956-ffa450edef68"
8be1f95eddc3b9c32726fa3886c8bb595a8e8965,"DERBY-3805: Make test use the correct JDBC method to fetch Blob data.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701353 13f79535-47bb-0310-9956-ffa450edef68"
fba255cdb1482789a548cfe274eef4dbbef11f51,"DERBY-3570: Add ability to declare DETERMINISTIC routines.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701367 13f79535-47bb-0310-9956-ffa450edef68"
0c5c5aa11961a5b9ea60fab1f164900f29c7bd18,"DERBY-3871: EmbedBlob.setBytes returns incorrect insertion count.
Made EmbedBlob.setBytes return the number of bytes inserted, instead of returning the Blob position after the insert.
Improved some JavaDoc comments.
Added regression tests.
Patch file: derby-3871-1a_insertion_count.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701372 13f79535-47bb-0310-9956-ffa450edef68"
a63aca9892c1e65bcfe5010d6102c0268dac16e5,"DERBY-3570: Correct javadoc problem in previous submission.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701425 13f79535-47bb-0310-9956-ffa450edef68"
10e4538ebd9013c063d65fae9933ef7a62e15f0f,"DERBY-3655  errror in nightly regression test: LobStreamsTest:encryptedjunit.framework.AssertionFailedError removing temporary lob file.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701487 13f79535-47bb-0310-9956-ffa450edef68"
6b147206bd0dbb0f2560bc15ec9996e00d4a2a81,"DERBY-3871: EmbedBlob.setBytes returns incorrect insertion count.
Fixed incorrect loop in test code.
Patch file: derby-3871-2a-loop_fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@701979 13f79535-47bb-0310-9956-ffa450edef68"
7cbf0216b89e63206bb571be1021e3ed728cdf9a,"DERBY-3886 SQL roles: ij show enabled and settable roles

Adds a VTI table function SYSCS_DIAG.ENABLED_ROLES and two new ij
commands; ""show settable_roles"" and ""show enabled_roles"", plus new
tests.  Also tweaks ScriptTestCase to be able to run scripts that need
SQL authorization.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@702266 13f79535-47bb-0310-9956-ffa450edef68"
3dca02d6388714e1553346994a7348c86455bf19,"DERBY-1415, DERBY-1416: add attribute description text for J029 and J030 messages.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@702306 13f79535-47bb-0310-9956-ffa450edef68"
d3f000873f5bd62327db1e7accbd5722b0ccbce3,"DERBY-3903: Test failures because EnabledRoles VTI is not included in the jars


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@702486 13f79535-47bb-0310-9956-ffa450edef68"
e906df8e6d71533e720ccc92e9a4287d8b10de9c,"DERBY-3728: Fix error handling in PrivilegedFileOpsForTests.
Removed unnecessary throws clauses (replaced PrivilegedExceptionAction with PrivilegedAction) and the possibility for a ClassCastException.
Fixed some documentation.
Patch file: derby-3728-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@702518 13f79535-47bb-0310-9956-ffa450edef68"
bf414a2fca29f33ffe3ec693f810a9e2f05879fc,"DERBY-3886 SQL roles: ij show enabled and settable roles

Javadoc fix.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@702574 13f79535-47bb-0310-9956-ffa450edef68"
036a61fe60538007d16df830bdfe29d9d8a15d12,"DERBY-3810: Create a simple Clob performance regression test.
Added initial version of a Clob performance regression test.
Currently, the embedded driver is used and there are no tests for encrypted Clobs.
There are a few properties that can be used to control the test (see JavaDoc).
Patch file: derby-3810-1b-clobaccesstest.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@702818 13f79535-47bb-0310-9956-ffa450edef68"
fb2cca3ab7176fc840d0d9372ca7ce46b55c180e,"DERBY-3865 NPE in testSemantics(.....lang.RolesTest) on JavaME / CVM

Patch derby-3865-2; RolesTest now skips a a test case for small devices platforms


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@702914 13f79535-47bb-0310-9956-ffa450edef68"
3a907e007914e2316adcb3e0ec7446374da5aeaf,"DERBY-1411 - remove never-thrown SQLState NO_SUCH_DATABASE and check for it


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@703170 13f79535-47bb-0310-9956-ffa450edef68"
c33b0cfc856d26e94f5394f958c37d63c79a3718,"DERBY-3875; closing containers after a problem has been found allows restoreFrom to work correctly.
  Patch contributions by Jason McLaurin, Kristian Waagan and Myrna van Lunteren.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@703246 13f79535-47bb-0310-9956-ffa450edef68"
648e348602520be80fd547bb341b054a291229e6,"DERBY-3902; correct messages.xml and translated files for SQLState 2003.S.4 
  (was accidentally listed as 2004.S.4 - see also comment in DERBY-1567). 
  Also fix up MessageBundleTest to ignore two sqlstates that are not exposed to
  the user so don't need text.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@703259 13f79535-47bb-0310-9956-ffa450edef68"
e3883f5f2cf307dea098580203f30ed1b9040adc,"DERBY-3897 SQLSessionContext not correctly initialized in some non-method call nested contexts

Patch derby-3897-3, which sets up the SQL session context correctly
also for substatements. See javadoc for
LanguageConnectionContext#setupSubStatementSessionContext for an
enumeration of these cases. Also adds test cases for this.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@703295 13f79535-47bb-0310-9956-ffa450edef68"
15b2b989b7bb394dbaa77e923c6909bd9f8990bf,"SQL roles: Move upgrade logic from 10.4 to 10.5

Patch derby-3901-2, which accomplishing this task, and also adds
release 10.3.3.0 to the set of releases to test upgrade from (was
missing).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@703298 13f79535-47bb-0310-9956-ffa450edef68"
e315e42f7a0402f8a9cc613f0eaaa19fa538c8d6,"DERBY-3902; remove references to message id J106 and SQLState XCL17


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@703552 13f79535-47bb-0310-9956-ffa450edef68"
2fb5c8dd8425626a490cdfc0ae70ffb80be62f16,"DERBY-3889: LOBStreamControl.truncate() doesn't delete temporary files

Created helper method for closing and deleting temporary files to make
it less likely that some of the required operations are
forgotten. Also moved the lobFile field into the LOBFile class to
reduce the risk of getting inconsistencies between the fields tmpFile
and lobFile.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704010 13f79535-47bb-0310-9956-ffa450edef68"
f41a8a75f6fc127ac0018a97127d29aece3cbfcd,"DERBY-3738; add more tests for legal/illegal commands in the replication states.
  Patch contributed by Ole Solberg


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704197 13f79535-47bb-0310-9956-ffa450edef68"
0433f1a7e4f8991c381a486d7aaf6c022a8b5982,"DERBY-1764 Rewrite stress.multi as a JUnit test

enable StressMultiTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704259 13f79535-47bb-0310-9956-ffa450edef68"
47509e86beeba6175251c9a8bf21be38144acd45,"DERBY-3902; adjust orphaned message strings;
  - move J107, J108, J109 to common MessageId.java
  - remove references to 08000.S.1 and XJ102 from message.xml & mes*.properties


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704290 13f79535-47bb-0310-9956-ffa450edef68"
ab2037f86207c3679f6b3f29db8ab558f523017e,"DERBY-3825: StoreStreamClob.getReader(charPos) performs poorly.
Added repositioning functionality to UTF8Reader - ordered after increasing cost:
 a) Reposition within current character buffer (small hops forwards and potentially backwards - in range 1 char to 8K chars)
 b) Forward stream from current position (hops forwards)
 c) Reset stream and skip data (hops backwards) 
In addition the new method getInternalReader was added to InternalClob. It takes advantage of the repositioning capability of UTF8Reader.
Clob.getSubString uses the new functionality when the Clob is represented by a StoreStreamClob.
Previously only mechanism c) was used.
Patch file: derby-3825-2b-internalReader_repositioning.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704547 13f79535-47bb-0310-9956-ffa450edef68"
ba55e4afdc3d21da14cc41544063f4510ed54a3b,"DERBY-1567; correcting genClient2.sed or generateClientMessageTest.sh doesn't
  do anything. Also setting svn-eolstyle native.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704669 13f79535-47bb-0310-9956-ffa450edef68"
c383f0f72e9558120399499732a6d849523059cf,"DERBY-1458 - add a check to the build to ensure there are no missing/orphaned
  messages.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704718 13f79535-47bb-0310-9956-ffa450edef68"
64f3218d30785a6a00cb4b38606f8b9daa010f0c,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-setRoleNoDynamicNone, which forbids use of ""NONE"" as an identifier to
a dynamic SET ROLE statement, unless delimited.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704754 13f79535-47bb-0310-9956-ffa450edef68"
58d069afdc9e1895d4b8c7b03f91d9add0b83682,"DERBY-3266 Not possible for non-db-owner to create a temporary table

Patch derby-3266-2. With this patch, a non-dbo user can use temporary
tables. A new testcase was added to GrantRevokeDDLTest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704762 13f79535-47bb-0310-9956-ffa450edef68"
121568a240b24c68aafe69350467f0e307de2139,"DERBY-1458; undoing depend on checkmessage - caused build failure in tinderbox.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704779 13f79535-47bb-0310-9956-ffa450edef68"
15fbd86b376cb092e998562c7ff9ae82ce04f6a9,"DERBY-3911: BTreeController.reclaim_deleted_rows() may hide exceptions

Moved return statement out of the finally clause to prevent that it
hides exceptions thrown in the try block.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704801 13f79535-47bb-0310-9956-ffa450edef68"
db8b20bd9d583e0038ee73f1db9791ee93759c26,"DERBY-3909: Race condition in NetXAResource.removeXaresFromSameRMchain()

Removed the code that had race conditions since the data structures it
touched weren't actually used for anything.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704904 13f79535-47bb-0310-9956-ffa450edef68"
d7731394ae0f07b3946972d26600320b6ac3ab89,"DERBY-3905 Failed tests should save the database off to the fail directory



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@704964 13f79535-47bb-0310-9956-ffa450edef68"
f36770cc9888fde309c606859a2993c32a15364f,"DERBY-3872

The NPE in this jira entry was caused by the missing overwrite of accept() method in IndexToBaseRowNode.
Because of the missing code, the additional layer of VirtualColumn node over ResultColumn was not 
happening for the where clause in HAVING. Once the accept method was added to IndexToBaseRowNode, the
VirtualColumn on top of the ResultColumn got the correct resultset number associated with it and at the
code generation time, we start referencing the correct resultset rather than the one associated with
the JOIN clause. Thanks a ton to Army and Bryan on this jira entry for their help.

I have added a test case for this in lang/GroupByTest.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@705037 13f79535-47bb-0310-9956-ffa450edef68"
fd685b5172a69bb92dff419ee94e7c0655bd6754,"DERBY-1458; modified check for missing/orphaned messages to only run the junit
  task if the optional ant junit package is available


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@705252 13f79535-47bb-0310-9956-ffa450edef68"
44b17f04a2d0819d2609878c1da3cec7ba271aa2,"DERBY-1458; removing dependency - the updated changes still break the tinderbox
  build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@705269 13f79535-47bb-0310-9956-ffa450edef68"
637a940f796d40580909867c95af4eb2e9261522,"Change encryptedDatabase decorator to return empty test suite for encryptedDatabase decorator  for JSR169.  This was needed for DERBY-1764 so stress multi encryption test will not run with encryption and JSR169.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@705349 13f79535-47bb-0310-9956-ffa450edef68"
a9d7173099684d6f0e3343d5f142a53873c93700,"DERBY-3043: Schema does not exist error when table uses check constraint

In Derby, the CREATE SCHEMA statement is optional. When a table is created,
if the schema which contains it does not yet exist, the schema is
automatically created as well. If the CREATE TABLE statement contained a
CHECK constraint, the statement was being rejected with the error

   Schema 'XXX' does not exist

This error occurred during compilation and bind processing for the check
constraint, when the criteria used in the constraint were bound to the
table definition. At that point in query processing, the schema name for
the table had not yet been filled in, so the bind processing was searching
the DataDictionary for a schema which did not yet exist (the schema will
exist after the statement is executed, but we're still compiling the
statement at this point).

This change modifies the bind processing for the CHECK constraint so that
the FromBaseTable object used to bind the constraint has the schema name
fully filled in, ensuring that the bind processing will be able to
manipulate the table without encountering no-such-schema errors.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@705887 13f79535-47bb-0310-9956-ffa450edef68"
121b2ed0c4aec00421d478bc0ef016f494ba75a1,"DERBY-1458; implement a message check from the build; 
  third attempt - rewritten as an ant-taskdef (not junit).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@705945 13f79535-47bb-0310-9956-ffa450edef68"
1028de4a4aa1df3e1fdad69269eece093fe0688f,"DERBY-3769: Make LOBStoredProcedure on the server side smarter about the read buffer size.
Adjusts the maximum return size in characters for the CLOB stored procedure to 10890 (DB2_VARCHAR_MAXWIDTH / 3). This potentially results in anything from 10890 to 10890*3 bytes to be returned to the client in one round-trip, depending on the bytes per char ratio (determined by the modified UTF8 encoding).
This fix is sub-optimal for Clobs with ASCII contents, but improves performance for Clobs with contents requiring 2 or 3 bytes per char dramatically.
Patch file: derby-3769-2b-clob_buffer_size_adjustment.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@707097 13f79535-47bb-0310-9956-ffa450edef68"
f6967015316e559dc8b6cb3eff49fd4d654709cc,"DERBY-3818 (partial): Whitespace and formatting changes only.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@707103 13f79535-47bb-0310-9956-ffa450edef68"
9188c1ccbc83739e1ca9dede3bc3e572687a2e0c,"DERBY-481: Catalog changes supporting generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@707414 13f79535-47bb-0310-9956-ffa450edef68"
42526fd138001a2aee9f26e8ac4cfd40a39f6194,"DERBY-3878: Replication: stopSlave does not close serversocket when master has crashed

Use try/finally to ensure that the sockets are closed when closing the
socket streams fails.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@707591 13f79535-47bb-0310-9956-ffa450edef68"
b70badf6d92f5eff30a568512064323765c1ed40,"DERBY-481: Utilities, disabled tests, and new messages for generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@707619 13f79535-47bb-0310-9956-ffa450edef68"
57191b46737ce29454714beafaedb3b35635010b,"DERBY-3904: NPE on left join with aggregate

The issue involves a very special optimization that is performed
for MIN and MAX queries in which we may be able to use an index
to go directly to the lowest/highest value of the desired column.
For example, in the query

  SELECT MAX(d1) FROM t1

if there is an index on d1, we can use that index to retrieve
the max value very rapidly. In order to incorporate this
optimization, the following conditions must be met:

 - No group by
 - One of:
   - min/max(ColumnReference) is only aggregate && source is
     ordered on the ColumnReference
   - min/max(ConstantNode)
The optimization of the other way around (min with desc index or
max with asc index) has the same restrictions with the additional
temporary restriction of no qualifications at all (because
we don't have true backward scans). 

The source of the data must also be ""simple"" (not a result of a join),
and the NullPointerException occurred during the code that tried
to establish the above conditions because it wasn't thoroughly
enough excluding the join case. In the query:

  SELECT MAX( T1.D1 ) AS D FROM T1 LEFT JOIN T2 ON T1.D1 = T2.D2
  WHERE T2.D2 IS NULL

the code in GroupByNode.considerPostOptimizeOptimizations was
trying to traverse the AccessPathImpl to find the index scan
information, but for this LEFT JOIN case there is an AccessPathImpl
but no index scan information, because there is a join being
performed, not an index scan.

The solution is to examine the AccessPathImpl more carefully,
and only search the index scan information if an index scan
is actually present.

Also added a few tests, including an enhancement to the test
library's RuntimeStatisticsParser so that it can determine
if a Last Key Index Scan is being performed by the query.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@708002 13f79535-47bb-0310-9956-ffa450edef68"
95a483de2e5c3aaed013def4e6867d56d0b6f3e6,"DERBY-481: Grammar changes for declaring generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@708169 13f79535-47bb-0310-9956-ffa450edef68"
9cc8ad0a5e3865308f42a7ba0be4d84abe295706,"DERBY-3890: Replication: NPE for startSlave of encrypted database

Removes NPE for replication of encrypted databases by setting
RawStoreFactory in LogFactory before calling SlaveFactory#startSlave.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@708510 13f79535-47bb-0310-9956-ffa450edef68"
c533cd25579eed74cb7d34c5e7b619016cbe457d,"DERBY-481: Basic INSERT support for generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@708561 13f79535-47bb-0310-9956-ffa450edef68"
ca28065465d06d0e45960ec00213201b53b224f1,"DERBY-481: Basic UPDATE support for generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@708900 13f79535-47bb-0310-9956-ffa450edef68"
6f9cd9550ffed730f82c7adab309559eba809fdb,"DERBY-2822: Add caching of store stream length in StoreStreamClob, if appropriate.
StoreStreamClob is a read-only representation of a Clob, and will now cache the character length after it has been obtained the first time. Getting the length initially is still expensive, as the UTF-8 data stream has to be decoded.
Patch file: derby-2822-1b-cacheCharLength.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@708912 13f79535-47bb-0310-9956-ffa450edef68"
9a8eb75f9ad085e09f57e69eb4081af3340d7fc0,"DERBY-3818: client Insert/retrieval of 18MB Clob is extremely slow in MultiByteClobTest.
Re-enabled client tests, as the performance problems seem to have been fixed (see issues DERBY-3825 and DERBY-3769).
Patch file: derby-3818-1a-enable_client_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709132 13f79535-47bb-0310-9956-ffa450edef68"
d4f9308721d3e57adf146fc531132bec3bedec8f,"DERBY-3922: Support for adding generated columns via ALTER TABLE.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709152 13f79535-47bb-0310-9956-ffa450edef68"
318875650d5b4708fc8329239a7b59126c107f90,"DERBY-3931: Make generated columns tests independent so that they will run smoothly on platforms which run the test cases in reverse alphabetical order.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709161 13f79535-47bb-0310-9956-ffa450edef68"
2a0827acbafda7caa71bd1a815b7113c768aa651,"DERBY-481: Forbid generation clauses which reference generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709219 13f79535-47bb-0310-9956-ffa450edef68"
2d3c23adf6a81eac4da88aac33f2d26ffc848c6d,"DERBY-3930 SQL roles: Add VTI for CONTAINED_ROLES

Patch derby-3930-2, which adds a VTI to facilitate queries involving
roles against the dictionary. (Derby does not support recursive queries).

SYSCS_DIAG.CONTAINED_ROLES(<role identifier string> [, <integer: if != 0, compute inverse])

Removes the less general existing VTI SYSCS_DIAG.ENABLED_ROLES (now redundant).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709266 13f79535-47bb-0310-9956-ffa450edef68"
5527f7aa5817bc83bb5969f6054ec3683c72bcb6,"DERBY-3930: Replaced EnabledRoles with ContainedRoles in extraDBMSclasses.properties so that jars build cleanly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709410 13f79535-47bb-0310-9956-ffa450edef68"
5a0cfa257fabbe415b6a7f12133d436df5a6ff15,"DERBY-481: Generation clauses may not invoke functions which run SQL.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709415 13f79535-47bb-0310-9956-ffa450edef68"
2bf511969a837ee1491f106dba6da4e2b46707fd,"DERBY-481: Cap generation clauses with run-time CASTS so that they will store properly in columns with different but assignable datatypes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709577 13f79535-47bb-0310-9956-ffa450edef68"
a1c1356a59105d8a5e9fbd5389c28e0c98ef4710,"DERBY-3770: Create a utility class for skipping data in an InputStream

Replaced skip loops with calls to the new utility methods in

  - EmbedBlob.length()
  - PositionedStoreStream.reposition()
  - UpdatableBlobStream.updateIfRequired()
  - SQLBinary.getLength()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709856 13f79535-47bb-0310-9956-ffa450edef68"
dfdf9bfbaedb43c843e8373392169d745e246842,"Fixed typos in encoding names in java/testing/README.htm


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709866 13f79535-47bb-0310-9956-ffa450edef68"
cd822ebed24b69411a1eefdba85cd3b5bd23ac26,"DERBY-3770: Create a utility class for skipping data in an InputStream

Removed these unused methods from CompressedNumber:

  - readIntAndReturnIntPlusOverhead(byte[], int)
  - skipInt(DataInput)
  - skipInt(InputStream)
  - skipLong(DataInput)
  - skipLong(InputStream)

The skip methods were buggy because they didn't check the return value
from InputStream.skip() or DataInput.skipBytes() and could possibly
skip too few bytes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@709900 13f79535-47bb-0310-9956-ffa450edef68"
925b07bcd4888e0d48a27c11b58553ad5993a392,"DERBY-3825: StoreStreamClob.getReader(charPos) performs poorly.
Made the repositioning logic easier to read.
Patch file: derby-3825-3a-simplification.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@710033 13f79535-47bb-0310-9956-ffa450edef68"
f4d0cf75b0fddf8cca9a1d6dccf69cd0eb82bec8,"DERBY-481: Allow DEFAULT literal on INSERTs into generated columns which don't have explicity target lists.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@710071 13f79535-47bb-0310-9956-ffa450edef68"
c0342dee1ff21e53439ebd4a6ffc43141b6f062c,"DERBY-481: Forbid SET NULL/DEFAULT in delete actions for foreign keys defined on generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@711135 13f79535-47bb-0310-9956-ffa450edef68"
f9f83296a76f890dae83e69b35bce6852a0ef2f5,"DERBY-2498; fix NullPointerException in clientDataSource.getConnection and ClientConnectionPoolDataSource.getConnection when the databaseName is invalid.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@711266 13f79535-47bb-0310-9956-ffa450edef68"
8d13a1f37b9bca1d5b160ba9a21be1103699b5a1,"DERBY-3880 NPE on a query with having clause involving a join

remap expression for AggregateNode operand if the JoinNode has been flattened.

Fix contributed by Army Brown


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@711321 13f79535-47bb-0310-9956-ffa450edef68"
ec4aa986836e763fa96f35280d6d65cc173e7956,"DERBY-481: Add support for NOT NULL constraints on generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@711571 13f79535-47bb-0310-9956-ffa450edef68"
a008fbf0da294356bf7eafd8b1d669fbb4a9211e,"DERBY-481: Add some tests for generated columns which coerce between different length character and numeric columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@711579 13f79535-47bb-0310-9956-ffa450edef68"
291f91372738f48a63c94d1ee46ccb57755f7990,"DERBY-481: Add tests for altering the datatype of generated columns and of the columns they depend on.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@711663 13f79535-47bb-0310-9956-ffa450edef68"
4be9dce7acea5758ca047f40d35e17ad09cc8eda,"DERBY-3840 The test code executes java processes by just executing java instead of using a full path. This may cause the wrong java to be picked up.

fixed one missed case in execJavaCmd



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@711992 13f79535-47bb-0310-9956-ffa450edef68"
7ae50e99d0744faa1288c99e6b1dadb195eb83e2,"DERBY-481: DROP COLUMN support for generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@712400 13f79535-47bb-0310-9956-ffa450edef68"
f18c716587039ac23259b24e283155f2e0e4e4e4,"DERBY-481: Forbid renaming of columns referenced by generation clauses and prevent users from adding defaults to generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@712664 13f79535-47bb-0310-9956-ffa450edef68"
c48e69a1f16e8c9fa0dc9a4d72f163c892e6dc29,"DERBY-3035 Cannot restore backups without BACKUP.HISTORY file



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@712693 13f79535-47bb-0310-9956-ffa450edef68"
3f523e625ff1d8eb55013c183adbf6851ee12710,"DERBY-1107 For existing databases JDBC metadata queries do not get updated properly between maintenance versions.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@712695 13f79535-47bb-0310-9956-ffa450edef68"
3c09be76add427df359db47aff4fe31909ccf363,"DERBY-481: Prevent users from dropping a function mentioned in a generation clause.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@712840 13f79535-47bb-0310-9956-ffa450edef68"
9a9b932656029abcd9fb5b19a713d8d151a59313,"DERBY-3932: Add basic tests of permissions on generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@713158 13f79535-47bb-0310-9956-ffa450edef68"
128bdee3f2cd880433466d028f1b2844c7d750b9,"DERBY-3943; testReplication_Local_3_p2.StateTests_smallInsert_immediateStopMaster_DISABLED() causes hang in teardown() 
  workaround a jvm/os dependent hang & avoid unnecessary object creation
  patch contributed by Ole Solberg


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@713436 13f79535-47bb-0310-9956-ffa450edef68"
52d76403939a67220bd2ed1c39344900a75bc6e0,"DERBY-3917; skip fixture testCurrentRoleInWeirdContexts and 1 test case in 
  fixture testDefaultCurrentRole in lang.RolesConferredPrivilegesTest with 
  JSR169.
  Patch contributed by Dag H. Wanvik.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@713533 13f79535-47bb-0310-9956-ffa450edef68"
a19a89668786d9350ff6d2160b63368858d7600f,"DERBY-3946: Check in a bit of debug logic which allows us to run the parser standalone.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@713721 13f79535-47bb-0310-9956-ffa450edef68"
fce10babe6a70a255fe9aefdf5445f1d63d1d373,"DERBY-3923: Make datatype declaration optional when you specify a generation clause in a CREATE/ALTER TABLE statement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@714186 13f79535-47bb-0310-9956-ffa450edef68"
7101c06ce1c06af1c40f9d9e300e2154b5c4c8c6,"DERBY-481: Add negative test cases for generation clauses which mention CURRENT SCHEMA and CURRENT SQLID.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@714188 13f79535-47bb-0310-9956-ffa450edef68"
ae7e54a91df922d471b87d77e83c6ef894bfec66,"DERBY-3923: Fixed JavaDoc warning (incorrect param name).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@718209 13f79535-47bb-0310-9956-ffa450edef68"
97a8b1c7a5588e221447147cd0bab588dfbbe7db,"DERBY-3950: Prevent driving SELECTs from overriding the values of generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@718381 13f79535-47bb-0310-9956-ffa450edef68"
db233518c4c2266c5909cb50b3fc092c6b237fbb,"DERBY-1465; NetworkServerControl.start() should throw an exception - not just
  print an exception - if the server fails to start
  Patch initially contributed by Kathey Marsden.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@718616 13f79535-47bb-0310-9956-ffa450edef68"
e735448000f73baa70e4c2c7c5544ff04e8a2325,"DERBY-3948: Forbid references to generated columns in the NEW variable of BEFORE triggers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@718707 13f79535-47bb-0310-9956-ffa450edef68"
492f85a4a070a43788de427b06a33ee10bceddc0,"DERBY-3936: Add CharacterStreamDescriptor.
Added a descriptor object for streams representing characters.
The following information is tracked by the descriptor:
 - if the stream can/should be buffered
 - if the stream is position aware (and can reposition itself)
 - the current byte position
 - the current character position (starting at 1, and special value BEFORE_FIRST)
 - byte length
 - character length
 - maximum allowed length (an imposed limit)
 - data offset (in case of headers/metadata in the stream)

Note that the descriptor don't handle encoding. Currently all streams are assumed to use the modified UTF-8 encoding (which is Derby's on disk format).

This is the first revision, more pieces of information may be added later.
The intended use of the descriptor is to pass enough information to allow readers/decoders to configure themselves properly at initialization time. The descriptor object is immutable, and it does not keep it's state in synch with the stream.
Patch file: derby-3936-1b-CharacterStreamDescriptor.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@718936 13f79535-47bb-0310-9956-ffa450edef68"
19384f4b1d73f7a29e469744da235f42ba7ecaee,"adding some queries as added regression test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@718975 13f79535-47bb-0310-9956-ffa450edef68"
f9cb8886820b9cc9f64291f6b432d32cbd9b46a3,"DERBY-3956: Remove method TemplateRow.checkPartialColumnTypes
Deleted the method, which always returned true and was only called from withing debug blocks (sane builds).
Patch file: derby-3956-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@719008 13f79535-47bb-0310-9956-ffa450edef68"
8da4728bfdfb7747f81f39e0c1f64c5461db4a78,"DERBY-1465; previous check-in caused an intermittent test failure. 
  Temporarily commenting out the fail statement in the test while investigating.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@719013 13f79535-47bb-0310-9956-ffa450edef68"
e1e6ecb24a9f862baa6b17868c4adb0a76714c74,"DERBY-3631 UDF used with aggregate arguments results in error 30000

Add test case. Actual issue fixed with DERBY-3649



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@719015 13f79535-47bb-0310-9956-ffa450edef68"
01aa17623ea6a7bbd55065dfde923dcf81f694f4,"DERBY-3945: Resolve unqualified function names in generation clauses against the current schema from DDL rather than DML time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@719123 13f79535-47bb-0310-9956-ffa450edef68"
a3fbc2774f7b4dcbfae9c809ee6342cbac74f3aa,"DERBY-3936: Add CharacterStreamDescriptor.
Temporary workaround to make the class file be included in the product jar.
Patch file: derby-3936-2a-temp_fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@719217 13f79535-47bb-0310-9956-ffa450edef68"
45c669175d4c7afdfa4b80cdd0147414ce171ddb,"DERBY-481: Add tests to verify that you can't use updatable ResultSets to corrupt generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@719656 13f79535-47bb-0310-9956-ffa450edef68"
15b837ec7f8805550d7705b0ff3a28c307beb881,"DERBY-481: Cleanup based on comments from Dag and Knut.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@719760 13f79535-47bb-0310-9956-ffa450edef68"
617d53cb9152bdfe0c0190c25b7e4ea6dfe6e174,"DERBY-1726: Made ScriptTestCase use derby.ui.codeset if specified.

Also enabled LocalizedDisplayScriptTest and
LocalizedAttributeScriptTest in non-English locales.

LocalizedDisplay.{sql,out} are now encoded in EUC_JP.
LocalizedConnectionAttribute.{sql,out} are now encoded in ISO-8859-1.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@720436 13f79535-47bb-0310-9956-ffa450edef68"
f719de64daef089b10514aa9d364dd969e35c35e,"DERBY-3935: Introduce interface for a position aware stream.
Added an interface for position aware streams, which can also reposition themselves on request.
The intended use of the interface is to allow the upper layer of the Clob code stack to treat the different internal Clob representations in a consistent way.
It should be noted that the cost of repositioning may vary greatly for different internal representations.
Patch file: derby-3935-1b-PositionedStream.diff (1 modification)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@720517 13f79535-47bb-0310-9956-ffa450edef68"
9b9c25add4fe8f00fa1a76fadf1f101e123f0403,"DERBY-3934: Added two tests for Clob modifications (character replacement).
Patch file: derby-3934-1a-clob_replace_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@720767 13f79535-47bb-0310-9956-ffa450edef68"
d9319b8e5a7ced598cbf771bd4861d68a6d94120,"DERBY-3934: Improve performance of reading modified Clobs.
Added two new methods to InternalClob;
    - getUpdateCount
    - isReleased
These methods can be used to detect if the contents have been changed, for instance by streams reading from the internal Clob representation.
Patch file: derby-3934-2a-intclob_new_methods.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@721162 13f79535-47bb-0310-9956-ffa450edef68"
e88c4ae0f79634823264fe2f8f5e56c504a88ef9,"DERBY-3936: Added and corrected some JavaDoc for CharacterStreamDescriptor.
Patch file: derby-3936-3a-javadoc-1.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@721200 13f79535-47bb-0310-9956-ffa450edef68"
55906b6bdf8454b10a90f895fc824ce77da0b375,"DERBY-3958 ImportExportProcedures imports ./testData/ImportExport/position_info.del using US-ASCII but the file contains non-ascii characters



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@722151 13f79535-47bb-0310-9956-ffa450edef68"
a735edee1158e7f5c4f58c1f9bc858b2be8ea985,"DERBY-3945: Add parameter descriptions to the javadoc for the constructor used for the default which represents a generation clause.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@722177 13f79535-47bb-0310-9956-ffa450edef68"
4e6df7abe7f89cff46ea748624bf73858bdb08c9,"DERBY-481: Incorporate Dag's patch review feedback.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@722214 13f79535-47bb-0310-9956-ffa450edef68"
f07a7c38040833b85853904932c721870dcf6a9d,"DERBY-3936: Add CharacterStreamDescriptor.
Extended the functionality;
 o added a stream reference to the descriptor
 o added a method to return a PositionedStream reference to the InputStream
 o added a method to the builder to copy the values of another builder
 o added a few more sanity checks (sane builds only)
 o updated tests 
Patch file: derby-3936-4b-streamref_and_copy.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@722443 13f79535-47bb-0310-9956-ffa450edef68"
039729285afafbb60517281c4c6939906bc56aad,"DERBY-3964: Fix NPE in evaluation of generated columns while processing an ON DELETE SET NULL referential action.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@722623 13f79535-47bb-0310-9956-ffa450edef68"
c38c5e1d1f67fd579bf1545cde0f2b16608edf72,"DERBY-1465; backing out changes of revision 718616; they cause an intermittent
  hang.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@722639 13f79535-47bb-0310-9956-ffa450edef68"
dd2650ff3109af94ac8bb87a94c23d700bd4c98c,"DERBY-3970: PositionedStoreStream doesn't initialize itself properly.
Makes PositionedStoreStream initialize itself properly by calling initStream and resetStream on the underlying Resetable.
Patch file: derby-3970-1a-PositionedStoreStream_init.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@722812 13f79535-47bb-0310-9956-ffa450edef68"
b8b524c00d7736560a43e1eeb7ef1a3f42356843,"DERBY-3969: Fix NPEs when declaring constraints on generated columns without explicit datatypes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@723184 13f79535-47bb-0310-9956-ffa450edef68"
4b337d27c96792fdd577ff90cd3922341fcb7db8,"DERBY-3945: Fixed typo in JavaDoc @param tag.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@723698 13f79535-47bb-0310-9956-ffa450edef68"
910b77f00110f16b427ca51f8c4bc4272e8940dc,"DERBY-3934 (partial): Improve performance of reading modified Clobs.
The following files are touched (all in derby.impl.jdbc):
*** EmbedClob.
 Updated call to ClobUpdatableReader. The change of the position argument is
 intentional.

*** TemporaryClob
 Replaced the ClobUpdatableReader returned by getReader with a UTF8Reader.
 Internal handling of TemporaryClob should deal with changing contents
 specifically, or create a ClobUpdatableReader where required.
 Note also the use of the new CharacterStreamDescriptor class. This piece of
 code will probably be changed later on, when there is more information about
 the stream available. For instance, caching byte/char positions allows to skip
 directly to the byte position through the underlying file API. This way, we
 don't have to decode all the raw bytes to skip the correct number of chars.

*** ClobUpdatableReader
 More or less rewritten. It now uses the new methods exposed by InternalClob to
 detect changes in the underlying Clob content. Note that this class doesn't
 handle repositioning, only detection of changes and forwarding of read/skip
 calls.
 Note the lazy initialization of the underlying reader.

 WARNING: There is one thing missing, which is proper synchronization. Access to
 store will be synchronized in other locations, but this class is not thread
 safe. I haven't decided yet whether to synchronize on the reader object or the
 root connection. I think the latter is the best choice. Does anyone know
 anything about the cost of taking locks on the same object multiple times?

*** StoreStreamClob
 Replaced old UTF8Reader constructor with the new one. Again, this code needs
 to be updated when more information about the stream is available. This is to
 allow UTF8Reader to perform better.

*** UTF8Reader
 Added a new constructor, using the new CharacterStreamDescriptor class.
 Removed one constructor.
 Retrofitted the second old constructor to use CharacterStreamDescriptor. This
 will be removed when the calling code has been updated.
 The old method calculating the buffer size will also be removed.
 Stopped referencing PositionedStoreStream, using PositionedStream interface
 instead. This allows the positioning logic to be used for both store streams
 and LOBInputStream streams.
 The reader has been prepared to be able to deal with multiple data offsets,
 i.e. handling several store stream formats. For instance, the current
 implementations has an offset of two bytes, where as the planned new one will
 have an offset of at least five bytes. LOBInputStream has an offset of zero
 bytes (no header information).
 From now on, position aware streams are not closed as early as before, because
 we might have go backwards in the stream. Streams that can only move forwards
 are closed as soon as possible (as before). 

Note that this patch doesn't fix the most serious performance issue. This will
be done in a follow-up patch by implementing getInternalReader in TemporaryClob.

Patch file: derby-3934-3a-clobupdreader_utf8reader.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@724294 13f79535-47bb-0310-9956-ffa450edef68"
e0a0cfad2aa2ac163298fbb4dc3f6ce45e81c004,"DERBY-961: Error 22001 can include XX-RESOLVE-XX

Updated a comment in a test program to remove a stale reference to the
XX-RESOLVE-XX string.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@724560 13f79535-47bb-0310-9956-ffa450edef68"
a63282c4bad0f0ba7d5730a593a5bac6a37f765a,"DERBY-3978: Clob.truncate(long) in the client driver doesn't update the cached Clob length.
Make the client driver update the length of the Clob when it has been truncated.Added a few tests.

Patch file: derby-3978-1a-regression_tests.diff, derby-3978-2a-update_length.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@724657 13f79535-47bb-0310-9956-ffa450edef68"
65b21299d6c844b224b472da18e2eb337754fc89,"DERBY-3966: Check in JDBC3 and JDBC4 stubs parallel to the existing JSR169 stubs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@724735 13f79535-47bb-0310-9956-ffa450edef68"
26253f84a8ea6cc1f1c1b14e25075a29b8e58024,"DERBY-3966: Fixed build break

1) Moved the definition of the empty property from
compilepath.properties to dirs.properties, so that it's available from
the init target

2) Moved the creation of ${empty} from the engine target to the init
target, so that the directory exists when the stubs are compiled

3) Made the JDBC 3 stubs use StringBuffer instead of StringBuilder
since they are compiled against the Java 1.4 libraries


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@725044 13f79535-47bb-0310-9956-ffa450edef68"
c10b5077200cc2a8051735734d2ab5e55c9b3f16,"DERBY-3966: Update NOTICE file to say that the JDBC3 stubs originated in Harmony.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@725325 13f79535-47bb-0310-9956-ffa450edef68"
4a5394e5aefb2bd5b6560e30f50e567139e0d725,"DERBY-3966: Use Java 5 libraries to compile Derby build tools.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@725411 13f79535-47bb-0310-9956-ffa450edef68"
d6ae76d983d65c18b9943a88ebd41f2448e73e5f,"DERBY-3936: Add CharacterStreamDescriptor.
Backed out temporary fix (revision 719217) to get the CharacterStreamDescriptor class included in the product jars. It is now used in production code, and will automatically be included in the jars.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@725639 13f79535-47bb-0310-9956-ffa450edef68"
99494f145645055f1662b016675bbb00ddfe9364,"DERBY-3966: Make 1.4 JDK optional when building Derby.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@726092 13f79535-47bb-0310-9956-ffa450edef68"
f2dec40716d4fc290a17fc8eeecad79754a6a764,"DERBY-3966: Add Xalan NOTICE to Derby NOTICE file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@726093 13f79535-47bb-0310-9956-ffa450edef68"
11850ac065c0c125d2e692b200c07bb2fcbccdd9,"DERBY-3980 Conflicting select then update with REPEATABLE_READ gives lock timeout instead of deadlock

Just javadoc changes and adding a new test for the issue that can't be enabled until we have a fix.  This check-in does not fix the issue in any way.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@726121 13f79535-47bb-0310-9956-ffa450edef68"
71dca8c77c7a35e7dfdd1819e8b8c0e2b0cf5469,"DERBY-3934: Improve performance of reading modified Clobs.
There are two major changes with this patch:
 a) The implementation of getInternalReader improves the performance of
    getSubString significantly. This benefits the embedded driver too, but it
    is crucial for the performance of all read operations on Clob from the
    client driver.
    Again, the mechanism used to get better performance is to keep an internal 
    reader around to avoid repositioning on every request.

 b) Added caching and updating of the Clob character length.

Also added some tests for verifying that the Clob length is handled correctly.
Patch file: derby-3934-4a-getinternalreader_cachedlength.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@726683 13f79535-47bb-0310-9956-ffa450edef68"
4d20e6417fa1832aff6d9665c80ae39aa39d99b8,"DERBY-3977: Clob.truncate with a value greater than the Clob length raises different exceptions in embedded and client driver.
Changed the exception thrown in the embedded driver when calling Clob.truncate with a length greater than the Clob length from XJ076 to XJ079 (see also release note).
The client and the embedded driver behavior is now consistent.
Updated tests.

Patch file: derby-3977-1a-change_emb_exception.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@726695 13f79535-47bb-0310-9956-ffa450edef68"
7861eeafc46de6df0d393d3ffa6f24f4e30250f4,"DERBY-3980 Add test for live lock scenario.  This doesn't fix the issue but just adds more tests in preparation for a fix.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@727097 13f79535-47bb-0310-9956-ffa450edef68"
15218cea6d7b96c1e544a4c4c4a6ae1ae938ea80,"DERBY-3988: Always build the JDBC4 driver, regardless of whether your compiler is Java 5 or Java 6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@727106 13f79535-47bb-0310-9956-ffa450edef68"
575f02876883e6f4005a8030974f625c140d110b,"DERBY-3990 ResultSetStreamTest fails on case sensitive file systems, and
isn't run as part of any suite

Fixes type in file name. Removes eol-style native property on short.utf
so it is the same length on all platforms. Enables the test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@727138 13f79535-47bb-0310-9956-ffa450edef68"
08c0ccb2625bf478e7a4c54d2d9513cc43b809f9,"DERBY-3980 tests. Make changes for review comments for LiveLockTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@727147 13f79535-47bb-0310-9956-ffa450edef68"
d00c5e0e1d4ae6dc09b83c7a8cc1a08d83a9f304,"DERBY-3988: Back out 727106, the change which made us always compile the JDBC4 driver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@727379 13f79535-47bb-0310-9956-ffa450edef68"
a6c7bc739cb28b1c3c1f7850ba00a2772a757ab0,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-modeTests which adds a missing test case: Creating a
role that already exists.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@727417 13f79535-47bb-0310-9956-ffa450edef68"
09069c54fc4a2fdbd00dffe1bcb13b1d314e91c9,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-moreTests-b which adds a missign test case.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@727709 13f79535-47bb-0310-9956-ffa450edef68"
cf6b546606b14eabbb63fbadb5c16ac3aa563963,"DERBY-3986: Stop dropping dummy files in the source tree in order to determine whether the compiler is modern enough.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@727725 13f79535-47bb-0310-9956-ffa450edef68"
daa4827aee6e2f02575c1aa5f702306ed44b3c16,"DERBY-3982: Commit Ole's DERBY-3982_p2_diff.txt patch, which makes it easy to specify patch releases as starting points for the upgrade tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@728024 13f79535-47bb-0310-9956-ffa450edef68"
78997ab3548d28cbef9a3fae21903980fc585d00,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-current_role_type which brings the result type of
CURRENT_ROLE in line with reality now that it will return a possibly
quoted SQL identifier rather than internal case normal form, cf. patch
DERBY-3137-setRoleNoCNF.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@728691 13f79535-47bb-0310-9956-ffa450edef68"
636e8e5f76a3eae49871c58c322750409b197171,"DERBY-3988: Second attempt to always build the JDBC4 support when compiling  Derby.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@728693 13f79535-47bb-0310-9956-ffa450edef68"
929412623f3a7d55378c39a2cdec1c0ecd0749d0,"DERBY-3975: SELECT DISTINCT may return duplicates with territory-based collation

Made the implementation of hashCode() in the collation-sensitive
subclasses of SQLChar consistent with the collation-sensitive
implementations of equals(), compareTo() and stringCompare().

Also extended CollationTest with tests for SELECT DISTINCT on strings
that contain different characters but are considered equal in French
locale.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@728822 13f79535-47bb-0310-9956-ffa450edef68"
747e3d3a60be464d871dbe15832823adff68f75a,"DERBY-3993: Use THROWASSERT instead of System.out.println to get more info
about failure in regression test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@728907 13f79535-47bb-0310-9956-ffa450edef68"
ba2c8d5d806f30de8c70b0f2c5e7e90d487f723d,"DERBY-3984: Make the build use the small device libraries for the bulk of the Derby product so that we get compile-time checks when code breaks the small device contract.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@728965 13f79535-47bb-0310-9956-ffa450edef68"
fe75db7b86cc3d41ef3fb572c886bdaf2f24ae20,"DERBY-3984: Remove  useless and build-breaking import of BigDecimal from jsr169 stub for CallableStatement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@728990 13f79535-47bb-0310-9956-ffa450edef68"
a31084b99d8696786366d0924a5118969624fb9f,"DERBY-3984: The security build target depends on jdk 1.4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729007 13f79535-47bb-0310-9956-ffa450edef68"
fd6ae247c35a22aa13ac54462449a6241f593563,"DERBY-3984: The mbeans support also references Throwable.initCause() and getCause(), meaning that we have to use the 1.4 libraries to build the mbeans support.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729014 13f79535-47bb-0310-9956-ffa450edef68"
2336aad8ae9f9bf35a3124fa8f44e8ab1125c16a,"DERBY-3984: Another target converted to use the 1.4 libraries because code references Throwable.initCause().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729017 13f79535-47bb-0310-9956-ffa450edef68"
3becfcbc4cc57bb8a4c23daf3fc260c03ad26d14,"DERBY-3984: Revert 728990, 729014, 729017, and 729007. The tinderbox build needs to be updated to use CDC/FP 1.1 instead of 1.0 libraries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729032 13f79535-47bb-0310-9956-ffa450edef68"
5fcf21f2c31749cbd63d8ceb18e51fa9f2d9a82a,"DERBY-3984: Revert 728965.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729033 13f79535-47bb-0310-9956-ffa450edef68"
c9ac414ad2eda4933e97f64bfa6536eb1c06f527,"DERBY-3984: Reapplying 728990: the import of BigDecimal is, in any event, useless.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729034 13f79535-47bb-0310-9956-ffa450edef68"
ebf2f36080488500dc32b157c796682a4e9c247e,"DERBY-2991: Added a JUnit performance test for index scans


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729039 13f79535-47bb-0310-9956-ffa450edef68"
009d3499e9a3e61af619ccc69b6d4f4635b228b8,"DERBY-3996: Change eol style of jsr169 stubs to native.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729042 13f79535-47bb-0310-9956-ffa450edef68"
e0bc63ca1e39b8cf9704d9ee2b704cff314b91f9,"DERBY-481: Add tests for bulk import of generated columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729329 13f79535-47bb-0310-9956-ffa450edef68"
2850ca561df79885feaa20e1072574fb1f6175a1,"Replaced incorrect class name in header.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729891 13f79535-47bb-0310-9956-ffa450edef68"
36cea34a06d06cbf9bfc0018074aa3b26de388c4,"DERBY-1465; throw an exception in addition to printing one to the log if 
  NetworkServerControl.start() does not succeed.
  Committing patch .diff8 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@729933 13f79535-47bb-0310-9956-ffa450edef68"
928226b9a79012d169c79a411059f11a18349cb8,"DERBY-1465; backing out changes after seeing a hang in replicationTests


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@730187 13f79535-47bb-0310-9956-ffa450edef68"
cf8916e6b69dea2df6161bbc5e9ebf524fb0c20f,"DERBY-3997: ORDER BY causes column to be returned

When all the columns in the order by clause are guaranteed to be
constant, the order by clause is removed. This patch ensures that we
also remove order by columns that are not in the select list from the
result.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@730188 13f79535-47bb-0310-9956-ffa450edef68"
dd584838c07de7c4749551d17347811355566bed,"DERBY-3981: Improve distribution of hash codes in SQLBinary and SQLChar

Added a performance test which shows the worst-case behaviour of the
current hash function. The test performs SELECT DISTINCT on a CHAR(5)
column and on a CHAR(5) FOR BIT DATA column. The current hash function
maps all the rows in the test to the same bucket and the hash table
used for elimination of duplicates becomes a linked list.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@730689 13f79535-47bb-0310-9956-ffa450edef68"
0ea31cabce1f0a48de34ec497303dfb714d637ab,"DERBY-3137 SQL roles: add catalog support

Patch DERBY-3137-setRoleAsStringFix-b: When setting a role with a
literal string argument, we should do the same checks as for dynamic
parameter on the identifier validity. Added that, plus new test cases
and some refactoring.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@730802 13f79535-47bb-0310-9956-ffa450edef68"
b35b4f35bd7b3d11c3fa956bb26bf88fa8a7473f,"DERBY-3984: Re-commit patch which defaults most of the build to using the small device libraries if they are present. Ole has adjusted the tinderbox build to use CDC/FP 1.1 libraries (rather than 1.0 libraries) so hopefully this patch will play nicely in the tinderbox.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@731603 13f79535-47bb-0310-9956-ffa450edef68"
ed931124ada7cb62f8e81c4788a0c0c5382a381c,"DERBY-3985: Replace BUILDING.txt with a simpler BUILDING.html which reflects recent changes to the Derby build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@731605 13f79535-47bb-0310-9956-ffa450edef68"
9c2b1f3f666e85d340c5d5fa0b8cb84f59a7b17c,"Fixed some erroneous header comments: wrong class names from cut/paste presumably


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@731628 13f79535-47bb-0310-9956-ffa450edef68"
1cd51c94d9091f281f724e4ba57c58d36beb7f53,"DERBY-3985: Polish BUILDING.html a bit.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@731650 13f79535-47bb-0310-9956-ffa450edef68"
1aa5b64da302f607cdc33b3d889533a00d271745,"DERBY-3981: Improve distribution of hash codes in SQLBinary and SQLChar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@731929 13f79535-47bb-0310-9956-ffa450edef68"
16b16304bead3a107ade4e0b2518658619464b8c,"DERBY-3985: Update BUILDING.html to recommend junit 3.8.2 rather than 3.8.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@731958 13f79535-47bb-0310-9956-ffa450edef68"
3b8f6390836fb9f370b24bd37c715d2d2320a1a7,"DERBY-3985: Correct typo in BUILDING.html.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@731962 13f79535-47bb-0310-9956-ffa450edef68"
51c45b8b456860bbc2e43f919c3219dd2dcec6c6,"DERBY-3907: Save useful length information for Clobs in store.
Cleanup of ReaderToUTF8Stream, which has to deal with the header in the streams being passed in to Derby. Changes:
 o Simplified constructors.
 o Added JavaDoc and comments.
 o Removed unused imports.
 o Removed instance variable maximumLength.
 o Added more information to the error messages for truncation.
 o Added CHAR as a truncatable string data type.
 o Removed ""throws IOException"" from close.

Updated the test to pass inn a valid type name to the constructor.

Patch file: derby-3907-3b-readertoutf8stream_cleanup.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@732676 13f79535-47bb-0310-9956-ffa450edef68"
140391abe1e07fbb16cf357fd4bff4b70fb4590e,"DERBY-3980 LiveLockTest  update.  Adjust deadlock timeout so we do deadlock detection, per Knut's comment:
https://issues.apache.org/jira/browse/DERBY-3980?focusedCommentId=12658710#action_12658710



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@732876 13f79535-47bb-0310-9956-ffa450edef68"
d71a0dd91dd6697c40321fc34bda488c0e24175f,"DERBY-4012: 'largedata/LobLimits.java' fails due to out-of-sync master file.
Fixed regression due to DERBY-3907, where parts of an error message was changed.
Patch file: derby-4012-1a_master_change.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@733037 13f79535-47bb-0310-9956-ffa450edef68"
fe3c8d837b167fc42d4dcf4d597460820820170a,"DERBY-4006: ALTER COLUMN .. WITH DEFAULT NULL does not change the default

The code in ModifyColumnNode was having trouble distinguishing between
the case where the user didn't specify a default at all, versus the
case where they explicitly specified a default value of NULL. 

ModifyColumnNode wants to be able to ask if ""no default value was specified"",
so this change adds a boolean instance variable ""keepCurrentDefault"" to
the superclass ColumnDefinitionNode, and initializes it to TRUE if no
default clause was specified. Then ModifyColumnNode uses this variable
to decide whether to preserve the current default value when re-building
the column's definition.

Several new test cases are also added.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@733401 13f79535-47bb-0310-9956-ffa450edef68"
67f1fdda3e6bf729321fe0174f8998be27059d4c,"Whitespace changes, JavaDoc changes and formatting changes only.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@733725 13f79535-47bb-0310-9956-ffa450edef68"
7af672657396eff71675d2c8ec87336e45a66a2a,"DERBY-3907 (partial): Save useful length information for Clobs in store.
Added the framework required to handle multiple stream header formats for
stream sources. Note that handling of the new header format is not yet added,
so the code should behave as before, using only the old header format.
A description of the changes:
 o EmbedResultSet and EmbedPreparedStatement
   Started using the new ReaderToUTF8Stream constructor, where the stream
   header is passed in. Also started to treat the DataValueDescriptor as a
   StringDataValue, which should always be the case at this point in the code.

 o ReaderToUTF8Stream
   Added field 'header', which holds a StreamHeaderHolder coming from a
   StringDataValue object. Updated the constructors with a new argument. The
   first execution of fillBuffer now uses the header holder to obtain the
   header length, and the header holder object is consulted when checking if
   the header can be updated with the length after the application stream has
   been drained. Note that updating the header with a character count is not
   yet supported.

 o StringDataValue
   Added new method generateStreamHeader.

 o SQLChar
   Implemented generateStreamHeader, which always return a header for a stream
   with unknown length (see the constant). 

 o SQLClob
   Added a constant for a 10.5 stream header holder representing a stream with
   unknown character length. Also updated the use of the ReaderToUTF8Stream
   constructor.

 o StreamHeaderHolder (new file)
   Holder object for a stream header, containing the header itself and the
   following additional information; ""instructions"" on how to update the header
   with a new length, if the length is expected to be in number of bytes or
   characters, and if an EOF marker is expected to be appended to the stream.

 o UTF8UTilTest
   Updated usage of the ReaderToUTF8Stream constructor, and replaced the
   hardcoded byte count to skip with a call to the header holder object.

 o jdbc4.ClobTest
   Added some simple tests inserting and fetching Clobs to test the basics of
   stream header handling.

 o StreamTruncationTest (new file)
   New test testing truncation of string data values when they are inserted as
   streams.

Patch file: derby-3907-2c-header_write_preparation.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734065 13f79535-47bb-0310-9956-ffa450edef68"
b1c6145c1e61f6cecaec971c25f5c5310fa4d4d0,"Removed creation of unsed statement.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734118 13f79535-47bb-0310-9956-ffa450edef68"
8dab94722e6d719a015e9d0848b612d6559e1a81,"DERBY-3988: Fix jar building targets to pull in JDBC4 datasources when the deprecated jdk16 variable is not set.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734146 13f79535-47bb-0310-9956-ffa450edef68"
cf0fdc4f5e6e9cd5376310f16efa45e7235132b6,"DERBY-3907 (partial): Save useful length information for Clobs in store.
Added StringDataValue.getStreamWithDescriptor().
It it intended to be used when getting a stream from a StringDataValue to be
used with a Clob object, or with streaming of string data values in general.
The DVD is responsible for returning a correct descriptor for the raw stream.
The descriptor is in turn used by other classes to correctly configure
themselves with respect to data offsets, buffering, repositioning and so on.

Changes:
 o CharacterStreamDescriptor
   Added a toString method and more verbose assert-messages.

 o StringDataValue
   Added method 'CharacterStreamDescriptor getStreamWithDescriptor()'.

 o SQLChar
   Made setStream non-final so it can be overridden in SQLClob.
   Added default implementation of getStreamWithDescriptor that always returns
   null. This means that all non-Clob string data types will be handled as
   strings instead of streams in situations where a stream is requested through
   getStreamWithDescriptor.  This might be changed.
   Made throwStreamingIOException protected to access it from SQLClob.

 o SQLClob
   Implemented getStreamWithDescriptor, handling the old 2-byte format only.
   Overrid setStream to discard the stream descriptor when a new stream is set
   for the DVD.

Patch file: derby-3907-4a-add_getStreamWithDescriptor.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734148 13f79535-47bb-0310-9956-ffa450edef68"
e474d73e1c51103b994146c6578f95060641f8b5,"DERBY-4014 Update Derby Jira Report XML VTI to access more fields
- Add more fields to Jira VTI
- Add all option to JiraConnector to get full issue export.
- Change XMLVTI to separate multiple items with spaces.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734177 13f79535-47bb-0310-9956-ffa450edef68"
3f89d24a816711136c6a4833d8746a4286f4e46b,"DERBY-4004  Remove required RDBNAM from ACCSEC. Use SECCHK RDBNAM if none is provided on ACCSEC



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734190 13f79535-47bb-0310-9956-ffa450edef68"
d6b042086376f9c17e7f3ef7b870f5f3ec99149f,"DERBY-3989: Allow the build to succeed on machines which have a Java 6 environment but not a Java 5 environment.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734242 13f79535-47bb-0310-9956-ffa450edef68"
a7362f0006f2b592ab6ca19969b303fb65d1426a,"Fxied incorrect @param tag.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734629 13f79535-47bb-0310-9956-ffa450edef68"
7672693c21882a41cc101b250e9ebe8357019a10,"DERBY-3907: Save useful length information for Clobs in store.
These changes make Derby start using the stream descriptor object to
correctly handle streams from store. This is done to be able to use
several header formats, where a varying number of bytes are used.
Description of changes:
 o EmbedClob
   Changed constructor to take a StringDataValue instead of a
   DataValueDescriptor. Updated call to the StoreStreamClob constructor.

 o EmbedResultSet
   Started using the getStreamWithDescriptor method and updated invocations of
   the UTF8Reader constructor.

 o StoreStreamClob
   Added a CharacterStreamDescriptor (CSD), and made the constructor take one
   as an argument. Adapted the class to use a CSD.

 o UTF8Reader
   Updated some comments.
   Fixed bug where the header length wasn't added to the byte length of the
   stream, and updated the class appropriately (adjusted utfCount, fixed the
   reset routine). Made sure the header bytes are skipped (either by skipping
   them in the constructor or by adjusting the position to on the next
   reposition).

 o ResultSetStreamTest
   Added a test for maxFieldSize, where truncation have to happen.

 o Various tests
   Adjusted tests to run with the new implementation.

Patch file: derby-3907-5a-use_getStreamWithDescriptor.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734630 13f79535-47bb-0310-9956-ffa450edef68"
2e0e72c3eda205a7ff64b9093e554d291f15faf6,"DERBY-4017: Removed deprecated jdk16 variable from javadoc-building targets.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734711 13f79535-47bb-0310-9956-ffa450edef68"
04405f81f47a90800ce68906e4f8b2a784f0089a,"DERBY-3985: Fix a typo in BUILDING.html.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734746 13f79535-47bb-0310-9956-ffa450edef68"
53190c041a33b07ba185f325b7f87ba59e104e40,"DERBY-4017: Clean up javadoc warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734756 13f79535-47bb-0310-9956-ffa450edef68"
2f2c7452152aefd70a9e5604dd70b1a19597b5bf,"DERBY-3907: Save useful length information for Clobs in store.
Fixed a bug where the stream could be out of sync with the descriptor.
Also corrected some indentation.
Patch file: derby-3907-6a-SQLClob_stream_descriptor_sync.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@734758 13f79535-47bb-0310-9956-ffa450edef68"
b3f743f459272081f574a11697b3fc39f5587dac,"DERBY-1670: Remove vacuous conditional code which checks for the presence of the felix jar before building EmbeddedActivator and putting it in derby.jar--felix.jar is always present now.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@735048 13f79535-47bb-0310-9956-ffa450edef68"
392ac57fa25b3cd4284d7d92b1b5e20261c32493,"DERBY-3270 Delayed (on-demand) creation of current user schema makes select from view belonging to other schema fail.

Fixed with patch derby-3270-dhw-3. This temporarily sets the default
current schema back to what it was at the time of definition of the
schema. This need also exsts in other places, so a general mechanism
to do this was factored in and used in all such places.

New testcase added.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@735084 13f79535-47bb-0310-9956-ffa450edef68"
a694c19fff40a0e9d0dba1ea2952cb10d1dd3cf7,"DERBY-3934: Improve performance of reading modified Clobs.
Removed deprecated constructor and adjusted calling code.
Patch file: derby-3934-5a-UTF8Reader_cleanup.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@736000 13f79535-47bb-0310-9956-ffa450edef68"
252f173de9ecd7faf542b9810b3906d1fac722ee,"DERBY-4010: PassThroughException should not reimplement initCause()/getCause()

Removed getException() method in PassThroughException and let the
callers use getCause() instead.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@736017 13f79535-47bb-0310-9956-ffa450edef68"
2728afcdfcf2b294317da4349e2d6b91f7cd7070,"DERBY-4022: Remove dependence of junit tests on deprecated jdk16 variable.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@736106 13f79535-47bb-0310-9956-ffa450edef68"
dfdebd5e96171a9f62d40b07eb20500c3e95ecb6,"DERBY-3907 (partial): Save useful length information for Clobs in store.
Added an interface for a stream header generator object, and two implementations; one for Clob and one for the non-Clob string types (CHAR, VARCHAR and LONG VARCHAR).
To support pre 10.5 databases in soft upgrade mode, the Clob stream header generator can generate both the new header format and the old one.
Note that the Clob header generator depends on either knowing up front if it is being used in soft upgrade mode, or to be able to determine this through a database context.
Patch file: derby-3907-7a1-write_new_header_format.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@736612 13f79535-47bb-0310-9956-ffa450edef68"
6f4c92afbac066d443ee2aab2d75990a04412a22,"DERBY-3907 (partial): Save useful length information for Clobs in store.
Started using the new framework for handling stream headers for string data
values. The behavior regarding stream headers is kept unchanged, but the code
is now ready to deal with multiple stream header formats.
Short description:
 * EmbedResultSet & EmbedPreparesStatement
   Adjusted code to use the new interface method and pass in the correct
   class to the ReaderToUTF8Stream constructor.
   Note the special case of telling the DVD/generator if the database being
   accessed is in soft upgrade mode in EmbedResultSet.

 * ArrayInputStream
   The stream header is no longer read inside readDerbyUTF.

 * ReaderToUTF8Stream
   Adjusted code to use the new StreamHeaderGenerator interface, and made the
   stream count the number of characters encountered.
   If possible, the header is updated when the stream has been drained.

 * StringDataValue
   Added methods getStreamHeaderGenerator and setSoftUpgradeMode.

 * SQLChar
   Refactoring in preparation for handling multiple stream header formats.
   Pulled common code out into writeUTF. The header generator is now
   repsonsible for writing both the header bytes and an EOF marker if required.
   Made a second readExternal method, which is not reading the stream header
   format. This must now be done outside of this method and any length
   information is passed in as arguments.
   Implemented the new methods in StringDataValue.

 * SQLClob
   Adjusted a single call to ReaderToUTF8Stream.

 * UTF8UtilTest
   Adjusted code invoking the new ReaderToUTF8Stream constructor.

Patch file: derby-3907-7a2-use_new_framework.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@736636 13f79535-47bb-0310-9956-ffa450edef68"
4bd0300483d5503d291f128ff7b0c15b0ada7bde,"DERBY-3907: Checkin to fix two test errors (UTF8UtilTest).
The problem is that because the ClobStreamHeaderGenerator isn't used by the engine code yet, the class isn't included in the jar file.
The few lines checked in here are part of the next patch for the issue.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@736700 13f79535-47bb-0310-9956-ffa450edef68"
9fccf848318cd535ff1930c880e1beba6dbcdfc4,"DERBY-4023: Improve length caching in TemporaryClob.
Keep track of the length where we already know it.
Patch file: derby-4023-1a-cache_length_simple.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@737000 13f79535-47bb-0310-9956-ffa450edef68"
a8b6921411b259900eb7193810104ed6b82960b8,"DERBY-4024: Replace Felix jar with Felix sources to move us closer to being able to bundle Derby with Debian-lineage linux distributions like Ubuntu.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@737043 13f79535-47bb-0310-9956-ffa450edef68"
63845121338850d690dc1f406aca003bf46cd238,"DERBY-4008 Only send RDBNAM on ACCSEC if EBCDIC conversion is possible



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@737758 13f79535-47bb-0310-9956-ffa450edef68"
e432522abe5c5cab6edd8106ce2a0d5ca203deca,"DERBY-4013 Allow standard SQL syntax: ALTER TABLE ALTER [COLUMN] <col> SET DEFAULT <default>

Patch derby-4014d, which adds the standard SQL syntax SET DEFAULT and DROP DEFAULT, in
addition to the non-standard syntax we already have.

Note that we are not 100% in compliance, since DROP DEFAULT does not
fail as it should when there is no existing default - it is a noop right now.

A new test, AlterColumnTest, is also added.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@737774 13f79535-47bb-0310-9956-ffa450edef68"
37c94ce9796fde2a95a52b255038097151e49b3b,"DERBY-3988: Remove references to old-fashioned build instructions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@737843 13f79535-47bb-0310-9956-ffa450edef68"
1b0debd1fdbdbe01b80de12ffb8419b1e6fcc770,"DERBY-3420: Remove obsolete -ca option from ij.

The -ca command-line-option for the ij command is obsolete and no longer
needed, since the ij connection URL can now accept all the necessary
connection attribute information.

This change removes the implementation of the -ca option from the ij code,
and removes the option from the ij ""usage"" message, and from the test output.

There is a release note attached to DERBY-3420, noting that the option
has been removed, and that users of this option (hopefully there are none)
should instead pass connection attributes in the URL.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@737948 13f79535-47bb-0310-9956-ffa450edef68"
52625a509217bf1d5c3daadab9b7b9ba4c966ba8,"DERBY-3907: Save useful length information for Clobs in store.
Enabled the new header format for Clobs.
Description:
 o ClobStreamHeaderGenerator
   Enabled the callback mechanism to inform the DVD about whether the database
   is accessed in soft upgrade mode or not.
 o SQLChar
   Added method writeClobUTF, which writes a Clob to the on-disk format.
   Added method readExternalClobFromArray.
 o SQLClob
   Added a variable to tell if the database is accessed in soft upgrade mode
   or not. It is used to reduce object creation (header generators) and to
   avoid consulting the data dictionary as much. It requires that the DVDs are
   reused, and I'm sure this can be further optimized.
   Implemented getLength, which returns the length of the Clob in one of
   three ways:
     1) Delegate to SQLChar if the Clob has been materialized.
     2) Read length from stream header if present.
     3) Decode the whole stream.
   Updated getStreamWithDescriptor to deal with both header formats.
   Made restoreToNull nullify the character stream descriptor.
   Implemented writeExternal.
   Implemented getStreamHeaderGenerator, which will return one of two shared
   generator instances it is known if the database is accessed in soft upgrade
   mode or not. If unknown, a new generator instance is created, which will
   determine the mode when the header is asked for.
   Implemented investigateHeader, which decodes a stream header.
   Implemented readExternal.
   Implemented readExternalFromArray.
   Implemented utility method rewindStream, which resets the stream and skips
   the number of characters specified.
   Added a utility class for holding header information (currently only length).
 o StreamHeaderHolder
   Deleted the class, it is no longer used.

NOTE: Databases created with this revision (or later) containing Clobs, cannot
be accessed by earlier trunk revisions.

Patch file: derby-3907-7a3-use_new_header_format.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@738408 13f79535-47bb-0310-9956-ffa450edef68"
7fed8afa2729372f06d662e2787f9c5fa7664f53,"DERBY-3988: Standardize on one debug property for use by PropertySetter and the master build script.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@738498 13f79535-47bb-0310-9956-ffa450edef68"
31cc815b2bc41b3235323dcdc14bd8594cf33fd3,"DERBY-3972; committing patch part1.diff2 for initial support in test harness
  for ibm's desktopEE jvm


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@738671 13f79535-47bb-0310-9956-ffa450edef68"
2eacdb9865bae9385bb6658c419f66ebdb3416bf,"Made javadoc comments visible.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@739545 13f79535-47bb-0310-9956-ffa450edef68"
ccc1b8d6b01aa9e72ecaf5fb02a1ea76790b3794,"DERBY-4042: org.apache.derby.impl.load.Import needs to escape single quotes

Made sure that the export and import procedures properly quoted string
literals and SQL identifiers when constructing internal SQL
statements. Achieved by using the helper methods in StringUtil and
IdUtil.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@739830 13f79535-47bb-0310-9956-ffa450edef68"
7c812c76c2cf53500dfbc340166efdc76823b19e,"DERBY-576  xaHelper in ij creates global id that is not the same across platforms



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@740048 13f79535-47bb-0310-9956-ffa450edef68"
a6c5ff4370980bb40d91cb4dd6f41a5892442c13,"DERBY-3972 - patch part2, enabling desktopEE to run tests flagged with
  with runwithj9=false, such as network server tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@740313 13f79535-47bb-0310-9956-ffa450edef68"
bc870e33160c713b40c0ca33235ec6ccfdcba034,"cleaning up some properties files that should've gotten removed when the various
  tests got committed. (no JIRA).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@740513 13f79535-47bb-0310-9956-ffa450edef68"
b504445f0e3dd98a3531f6c86cde9d407049d331,"undoing accidental commit to build.xml from revision 740513.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@740677 13f79535-47bb-0310-9956-ffa450edef68"
4e83499f429f6ae45e7035d11fefdf6766b9d716,"DERBY-4042: Removed double quote from file name used in test

The double quote caused failures on Windows.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@740698 13f79535-47bb-0310-9956-ffa450edef68"
3bab36013c3407f414863720580f94f69f2ba00b,"The change here is getting committed for DERBY-4048

DERBY-269 provided a new stored procedure SYSCS_UTIL.SYSCS_UPDATE_STATISTICS to update the statistics. The code to do the work was added in AlterTableConstantAction and the name of new method in that class is updateStatistics(Activation activation). This code was copied from an existing unused class execute/UpdateStatisticsConstantAction.java(that unused class has been removed from Derby code). 

The copied code in AlterTableConstantAction:updateStatistics gets compile transaction to do the work of updating the statistics. Instead, we should be using execute transaction because we are not in the compile phase. The rest of the code in AlterTableConstantAction uses execute transaction.

I ran into this issue of getTransactionExecute vs getTransactionCompile while working on DERBY-3788 (provide a zero-admin way of updating the statistics). While trying to run the statistics inline during the compile phase of a SELECT query, I ran into exception that statistics can't be updated because we are in read-only mode. But if I change the AlterTableConstantAction to use getTransactionExecute, then I do not run into the read-only mode exception.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@741118 13f79535-47bb-0310-9956-ffa450edef68"
7b9c4ca893e7cb50dc5c6395529db53aee7626c9,"DERBY-3972; patch 3 modifies 2 tests to optionally take a property for 
  a different initial context factory than sun's


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@741227 13f79535-47bb-0310-9956-ffa450edef68"
85eee1e8e760f0d258ab36d164d1f8fe64770661,"DERBY-1764 remove stress.multi from derbyall.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@741348 13f79535-47bb-0310-9956-ffa450edef68"
81d41adf414668832d55c7e928c30b0dca996e84,"DERBY-4047 - update updatelocksJDBC30 master to show license agreement output 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@741687 13f79535-47bb-0310-9956-ffa450edef68"
a4a66c4b0b68ab14cc65bf66cc859d9bf8c149d0,"DERBY-4040: SQLChar.getLength returns wrong length for some data values.
When asked to return the character length of a SQLChar or SQLVarchar and
the value is represented as a stream, skip the two header bytes and then
decode the whole stream. The cause of the bug being fixed, was that the
byte length was used as the character length.
Patch file: derby-4040-1a-SQLChar_length_and_test.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@742357 13f79535-47bb-0310-9956-ffa450edef68"
4987173ea7a64a4041da457af169c2e68533557e,"DERBY-3934: Removed unused method 'readUnsignedShort' from UTF8Reader.
Patch file: derby-3934-6a-UTF8Reader_remove_method.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@742380 13f79535-47bb-0310-9956-ffa450edef68"
bba55d86408875648c811580b7f1f37169887d18,"DERBY-4047 - add updatelocksJDBC30 into derbyall


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@742849 13f79535-47bb-0310-9956-ffa450edef68"
8f33dfd19e633fadeb804bcb5f5563b24f5c8d24,"DERBY-4050 Multithreaded clob update causes growth in table that does not get reclaimed
- Changes clob update case to call getPage() instead of getPageNoWait() so we are sure to reclaim the page.
- Adds some debug statements for other places that we might not reclaim space.
- Adds a test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@743023 13f79535-47bb-0310-9956-ffa450edef68"
b514f88ed63a142955652964e5c4941e8152427a,"DERBY-4054 ClobReclamationTest.xtestMultiThreadedUpdateTableLocking() demonstrates the problem.  This does not fix the issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@743820 13f79535-47bb-0310-9956-ffa450edef68"
ad8fd168a772585790c85be19465758a3d71df48,"DERBY-4055 Test case to reproduce part of the issue pertaining to not getting the row lock. To reproduce enable ClobReclamationTest.xtestMultiThreadUpdateSingleRow().  This does not fix the issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@743867 13f79535-47bb-0310-9956-ffa450edef68"
f56c601de91bf20acc673f415178fe1ecf79fc8c,"DERBY-4057  Add disabled test case (xtestReclamationOnRollback() )  for the 
issue that space is not reclaimed on rollback.This does not fix the issue



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@744169 13f79535-47bb-0310-9956-ffa450edef68"
8072a5683d4f34f762f4f3d228839c7ab0dbc1ac,"DERBY-4027: An attempt was made to access an out of range slot on a page

When a new value is inserted into an index backing a nullable unique
constraint, a check is performed to verify that the adjacent slots do
not contain the same value as the one being inserted. This extra check
is needed because the index backing such a constraint is not unique
(it allows multiple NULL values).

If the spot on which the new value is inserted is at the beginning or
the end of the index page, the last value of the previous page or the
first value of the next page is checked. Currently, the code attempts
to read that value right after the slot pointer has been moved to that
page. This was the cause of the bug, as that page may be empty, and
any pointer to a slot on an empty page is pointing to a non-existent
slot, hence the out-of-range-slot error.

This patch fixes the bug by checking again after moving to another
page that we are attempting to read a valid row. If not, we skip to
the next (or previous, depending on the direction of the traversal)
index page in the chain and look for a duplicate there.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@744984 13f79535-47bb-0310-9956-ffa450edef68"
638f1b48afc27c094c7f34a6254778c1a4ad9608,"DERBY-2201: Allow scalar functions to return LOBs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@745202 13f79535-47bb-0310-9956-ffa450edef68"
1ee9da2dfab28bd134130d8decc604b3eea792e3,"DERBY-2991: Index split deadlock

Added a JUnit test that exercises code paths that will be touched by
the fix for the index split deadlock. The test is disabled until the
fix has been checked in.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@745866 13f79535-47bb-0310-9956-ffa450edef68"
921b264864afbf2b5499fe413c0c0279be323018,"DERBY-4059 If space reclamation cannot obtain container lock it will not retry getting the lock

This change does make the change so that the retry occurs but in practical application it is unlikely that we will get the lock after three retries, because the retry happens so quickly. See https://issues.apache.org/jira/browse/DERBY-4055?focusedCommentId=12673436#action_12673436 for suggestions on long term solutions to the retry problem.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@745982 13f79535-47bb-0310-9956-ffa450edef68"
28365b048dcc73e2b541f4d3a77909dbc5eaa66b,"DERBY-4061:InputStream returned from Blob.getBinaryStream(long, long) terminates the stream by returning 0, should return -1.
Fixed bug where calling code would enter infinite loop because 0 was returned instead of -1 (EOF). The problem occurred because the actual number of bytes to read was calculated and the case where zero bytes remained wasn't handled properly.
Patch file: derby-4061-1b.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@746236 13f79535-47bb-0310-9956-ffa450edef68"
57d42a5e31836c171d91f8199d4ca0d36e0422cf,"DERBY-2201: More tests for functions which return lobs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@746245 13f79535-47bb-0310-9956-ffa450edef68"
d433373892b051212bae82a995a5c5fe9647587a,"DERBY-2991: Index split deadlock

Added more test cases for BTreeForwardScan.fetchRows().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@746273 13f79535-47bb-0310-9956-ffa450edef68"
f487e0712e50f90f20a99f8f18a3088d6a8b39ef,"DERBY-2991: Index split deadlock

Added more test cases for BTreeForwardScan.fetchRows() where the
current leaf page was split while the index scan was waiting for a row
lock.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@746954 13f79535-47bb-0310-9956-ffa450edef68"
3811800ef6f1abaacf6cd9e41c2852aafd086d38,"DERBY-2991: Use setAutoCommit() helper method in IndexSplitDeadlockTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@746965 13f79535-47bb-0310-9956-ffa450edef68"
152b9a7ba6499a4376983558308c00d0f4dd707b,"DERBY-2991: Index split deadlock

Added comment to IndexSplitDeadlockTest describing missing test cases
for BTreeScan.reposition().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@747371 13f79535-47bb-0310-9956-ffa450edef68"
ffe112b10cbb37f04346e70b15f137c76e4730b9,"DERBY-4009 (partial) Accommodate length delimited DRDA strings where character length does not equal byte length

Change client RDBNAM, USERID, and PASSWORD to allow for CcsidManager where the byte length might not equal the string length. Right now we just have EbcdicCcsidManager which has a maximum bytes per char as 1. But, this lays the groundwork for UTF8 which will be added later as part of DERBY-728 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@747881 13f79535-47bb-0310-9956-ffa450edef68"
eeffb192d9bd7a17b105ed1cf7b90a41ae66be1d,"DERBY-3731: Improve calculation of refSize in ClassSize.java.
Added read privileges for the two properties used to determine if the system
is 32 or 64 bit to the template policy file.
Patch file: derby-3731-2a_update_of_policy_template.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@748448 13f79535-47bb-0310-9956-ffa450edef68"
aeb43258605b4243814c782051ac845466e798b6,"DERBY-4060: Blob.getBinaryStream(long,long) is off by one for the pos+len check.
Changed the pos/length checks to allow obtaining a stream reading the last
byte/char from the LOB.
The JavaDoc for Blob.getBinaryStream(long,long) and
Clob.getCharacterStream(long,long) (JDBC 4.0) incorrectly states that the
position plus the requested length of the stream cannot be larger than the
length of the LOB. Since positions in JDBC are 1-based, this makes it impossible
to read the last byte/char in the LOB. Derby adhered to the spec.

The changes to CharAlphabet/LoopingAlphabetReader were done to allow passing
an alphabet object around for constructing streams.
Patch file: derby-4060-1b-sub_stream_fix.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@749235 13f79535-47bb-0310-9956-ffa450edef68"
beac4f3997415eb8989163736b6a6cfd8b54b265,"DERBY-4072 Improve error message if log files are not writable.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@749410 13f79535-47bb-0310-9956-ffa450edef68"
77197ac90e2b34cb89a2cb263be14f33760b2972,"Fixed typo in header comment: package name


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@749433 13f79535-47bb-0310-9956-ffa450edef68"
678938cd99ad2104999fb80c8b7b6caa7943d900,"DERBY-3810: Create a simple Clob performance regression test.
Added a mechanism to run only selected tests.
Also added a forgotten test to the default suite
(testLargeClobGetLengthModified).
Patch file: derby-3810-2a-run_specific_tests.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@749601 13f79535-47bb-0310-9956-ffa450edef68"
418a799c32bf870ddd7d4b53818730be5194cb1c,"DERBY-4060: Blob.getBinaryStream(long,long) is off by one for the pos+len check.
Changes to the JavaDoc and one error message, to better describe the error situation.
Patch file: derby-4060-2a-doc_changes.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@751637 13f79535-47bb-0310-9956-ffa450edef68"
33467a5d142721436b82d235ab7b8a4051f86660,"DERBY-646: In-memory backend storage support.
First revision of an in-memory back end for Derby. When using the back
end, all data (except derby.log by default) will be stored in-memory only.
When the JVM is shut down, all data is lost. The database is transient.
To use the in-memory back end, supply the assoicated JDBC subSubProtocol
when creating the database (currently set to 'in-memory', see DERBY-4084
for updates).

The current state of the feature;
 o undocumented
 o under development
 o tests are lacking
 o working
   (have been run with load tests, and parts of the regression suite)
 o cannot be used with the client driver with a specification compliant
   JDBC connection URL
 o each file is limited to 256, 512, 1024 or 2048 MB depending on page size
   (4, 8, 16 or 32 KB). Can by controlled with the existing page size property.

Brief code description (most classes are in impl):
* services/monitor/BaseMonitor

  iapi/services/monitor/PersistentService
  Adds the in-memory back end to the list of known storage facotories.
  Constant for indicating the in-memory storage engine.

* io/VFMemoryStorageFactory

  The in-memory storage factory. Deals mostly with high level operations
  related to files/directories and the storage factory instance itself.

* io/vfmem/BlockedByteArray.java
  io/vfmem/BlockedByteArrayInputStream
  io/vfmem/BlockedByteArrayOutputStream

  The BlockedByteArray stores the bytes of a file in memory. It grows
  block by block, and currently a block can be 4, 8, 16 or 32 KB big.
  Once set, the block size doesn't change. The array also shrinks when
  the length is explicitly set to a smaller value by Derby.  The stream
  classes provide a stream interface for reading/writing from/to the
  BlockedByteArray.

* io/vfmem/DataStore

  Represents a database, and consists of all the virtual paths in the
  database. Deals with actions suchs as creating, removing, renaming,
  and listing the children of a given path. Virtual files and
  directories are organized in a similar fashion as on disk.

* io/vfmem/DataStoreEntry

  Represents a path, which can be either a virtual file or directory.
  A file has a BlockedByteArray assoiciated with it, a directory
  doesn't. Serves as the entry point for access to the BlockedByteArray.

* io/vfmem/VirtualFile.java

  A virtual file handle, with numerous methods for file operations.
  Basically java.io.File and some additional methods.

* io/vfmem/VirtualRandomAccessFile

  Class providing random access to the BlockedByteArray. Provides both
  read and write access.

* io/vfmem/PathUtil

  Simple utility class for path operations. May be able to get rid of
  this by now.

* tools/jar/extraDBMSclasses.properties

  Added an entry for VFMemoryStorageFactory to include the required
  classes in the jar files.

* unitTests/...

  Some unit tests for the in-memory back end.

Patch file: derby-646-2b-vfmem_first_rev.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@752114 13f79535-47bb-0310-9956-ffa450edef68"
7062abe7385f7a9be16c36f329b61b4755cede44,"DERBY-4088: DDMReader readBytes ArrayIndexOutOfBoundsException

When ensureBLayerDataInBuffer() calls compressBLayerData() the number
of bytes in the buffer is reduced (header bytes are stripped out) and
there might be too little data in the buffer when it returns. This
patch fixes the problem by ensuring that compressBLayerData() fills
the buffer with enough extra bytes to compensate for the removal of
the header bytes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@752813 13f79535-47bb-0310-9956-ffa450edef68"
4d5163b270fe83ac5eaefe2aa71906f6874ea577,"DERBY-4028: two rows can be inserted with the same value in a column that a unique constraint on that column should prevent

If the slot next to the one where a row is inserted contains a deleted
duplicate, move past it and see if there's another non-deleted
duplicate hidden behind it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@752826 13f79535-47bb-0310-9956-ffa450edef68"
a7ab05c3646a43e31f4a8af958933a564d7ef8f4,"DERBY-4073: Creation/configuration of ClientXDataSource fails because of two setSsl methods.
Removed the method setSsl(int).
Added constants for the valid values for setSsl(String).
Documented setSsl(String) and some other methods.
Patch file: derby-4073-1a-add_docs_and_remove_setSsl_int.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@753176 13f79535-47bb-0310-9956-ffa450edef68"
f6b20cf94e1e3f1f494706da2969400d77e9bda5,"DERBY-4084: Determine the subSubProtocol name for the in-memory back end.
Based on community feedback (see Jira issue), the subSubProtocol for the
in-memory back end has been set to 'memory'.
Patch file: derby-4084-1a-subSubProtocol_name.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@753195 13f79535-47bb-0310-9956-ffa450edef68"
497dc134659983d6e27dbf96b38eaac97a61ea2b,"DERYB-4085: Improve testing of the in-memory back end.
Added the first basic tests for the in-memory back end.
One test just tries to connect to a non-existing database with the memory
protocol. The other creates a in-memory database, adds a table, creates a
backup, adds another row with the default storage engine (directory) and
finally recreates a in-memory database and reads all rows from the table.
The tests are not enabled as part of any larger suite yet.
Patch file: derby-4085-1b-basic_tests.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@753210 13f79535-47bb-0310-9956-ffa450edef68"
d5036cdd2b5d121b59f2610aec0fb80db523515a,"DERBY-4093: Improve handling of the database temporary directory.
Defers creation of the temporary directory until Derby is ready (when
uniqueName is specified), and makes the temporary database directory
always be created within the database directory.
Patch file: derby-4093-1b-tmp_dir_handling.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@753239 13f79535-47bb-0310-9956-ffa450edef68"
0ee61e009605f47ada87bdedcbbe67e43bbd2802,"DERBY-4094: Enforce absolute paths in the in-memory back end internal storage structure.
Makes all paths going into the internal storage structure be absolute paths. 
Patch file: derby-4094-1a-enforce_absolute_paths.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@753251 13f79535-47bb-0310-9956-ffa450edef68"
b85aa00b7f41b714bc76e3a659f9ae4c65ad842e,"DERBY-4085: Fixed broken build

BasicInMemoryDbTest uses DriverManager so it must be compiled against
java14compile.classpath


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@753279 13f79535-47bb-0310-9956-ffa450edef68"
69a192ae22196118e923c60d4de6002ec95f17c0,"DERBY-4079 Add support for SQL:2008 <result offset clause> and <fetch first clause> to limit result set cardinality

Added this new feature, corresponding to patch derby-4079-3. Documentation is committed separately.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@754558 13f79535-47bb-0310-9956-ffa450edef68"
c00561a19c81f5f7095a47a91a083c18da1ac738,"DERBY-4071 AssertFailure when selecting rows from a table with CHARACTER and VARCHAR columns

Patch derby-4071 which fixes this issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@754579 13f79535-47bb-0310-9956-ffa450edef68"
8e21cdc055d1420f38923bfadd2fecfd0b9cbed9,"DERBY-4079 Add support for SQL:2008 <result offset clause> and <fetch first clause> to limit result set cardinality

Added the new test, OffsetFetchNextTest, to lang/_Suite.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@754583 13f79535-47bb-0310-9956-ffa450edef68"
86e051fac928e7d3893158efe43b67e9f5474656,"DERBY-2991: Index split deadlock

This is the main fix (patch d2991-2b.diff) which removes the scan lock
mechanism that caused the deadlocks and instead saves the scan
position by key whenever a scan loses its latches.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@754894 13f79535-47bb-0310-9956-ffa450edef68"
0918509959575a36993e329dc4dfd00a77146d17,"DERBY-2991: Index split deadlock

Enabled IndexSplitDeadlockTest as part of the store suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@754900 13f79535-47bb-0310-9956-ffa450edef68"
93d179ac5158c1fdc69cf57149e64b04d32ba1ed,"bump trunk to 10.6 after creation 10.5 branch


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@755053 13f79535-47bb-0310-9956-ffa450edef68"
e0b3d816a7d550c58a2b4eec475738353b0958d2,"DERBY-4079 Add support for SQL:2008 <result offset clause> and <fetch first clause> to limit result set cardinality

Patch derby-4079-fixRtStatsTest fixes a end-of-line problem on the Windows platform.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@755058 13f79535-47bb-0310-9956-ffa450edef68"
465c7c7daced0e05cd1d77c14645a9bc4660e02b,"DERBY-4097: BatchUpdateException in NullableUniqueConstraintTest

Improve error reporting when a BatchUpdateException is thrown by the
client driver. Use initCause() to put the underlying exception in the
chain of exceptions printed by printStackTrace(). Note that there may
be more than one underlying exception for a BatchUpdateException and
only one of them will be printed by printStackTrace(). To see the rest
of the exceptions, getNextException() has to be used (as before).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@755147 13f79535-47bb-0310-9956-ffa450edef68"
f582a777b8cf5cc852f749341e188fffeea99b7a,"DERBY-4088: DDMReader readBytes ArrayIndexOutOfBoundsException

Reverted the previous fix (revision 752813) in compressBLayerData()
and instead changed ensureBLayerDataInBuffer() to match the
corresponding method in Reply.java on the client side.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@755866 13f79535-47bb-0310-9956-ffa450edef68"
c7e05da0f18b41691b599efcb1031cc269660ef6,"DERBY-4095 Trigger in fails with ERROR 38000: The exception 'java.sql.SQLException: ResultSet not open during VTIResultSet.getNextRowCore()

Reinitialize the ResultSet on executeQuery of TriggerNewTransitionRows and TriggerOldTransitionRows so that for a nested loop join, reopening the ResultSet does not result in an exception.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@756516 13f79535-47bb-0310-9956-ffa450edef68"
7a7a1a37f48e6f49642af4be1551fc34981517c1,"DERBY-4103: Allow unlimited growth for in-memory conglomerates.
Allows a conglomerate in the in-memory back end to grow unlimited, that is
until the system runs out of memory. This patch removes the previous hard
limits set for conglomerates, which was dependent on the page size used.
Patch file: derby-4103-1a_unlimited_growth.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@756551 13f79535-47bb-0310-9956-ffa450edef68"
c5d626a9aa79e503ae8c3ed12b867e4a245e19b8,"DERBY-3656 ERROR XJ073: The data in this BLOB or CLOB is no longer available. should include the possibility that the lob has been freed

Contributed by Tiago Espinha 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@757204 13f79535-47bb-0310-9956-ffa450edef68"
95ff3e12d59bb441249bcb4db376a60280f98e3b,"DERBY-4095 Trigger in fails with ERROR 38000: The exception 'java.sql.SQLException: ResultSet not open during VTIResultSet.getNextRowCore()

fix typo in test. Change --DERBY-PROEPERTIES to --DERBY-PROPERTIES. Neither the typo nor the correction of it affects the efficacy of the test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@757254 13f79535-47bb-0310-9956-ffa450edef68"
fa84928a7196f20747d6f2dafb3c67b582464c30,"Removed empty directory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@757385 13f79535-47bb-0310-9956-ffa450edef68"
4778cf7373600495bcdb43f0c9000dc9d0de2e8e,"Update STATUS file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@757422 13f79535-47bb-0310-9956-ffa450edef68"
9a827588b00c3aa4e74e2835d19eb8c56fb63baf,"DERBY-4070: Embedded and client data sources throw different exception when a connection attribute is badly formatted.
The client data sources will now catch the more specific exception and wrap
it in a more general one. This is consistent with the embedded driver.
Patch file: derby-4070-1d-ds_exception_handling.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@757811 13f79535-47bb-0310-9956-ffa450edef68"
d57436921d4b16d23d0380cab6f2fbf56475a042,"Fixed typo in toursdb_readme.html's content-type header

iso-8559-1 -> iso-8859-1


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@758247 13f79535-47bb-0310-9956-ffa450edef68"
1f03fe6ae400e6a2368442d6bcea41fda1e5d784,"DERBY-4117: dblook script fails when URL contains special characters

Make dblook quote its arguments properly before passing them on to the
java command. This prevents problems when the database URL contains
characters which have a special meaning to the shell, for example:

$ ./bin/dblook -d 'jdbc:derby:jar:(demo/databases/toursdb.jar)toursdb'
./bin/dblook[29]: eval: syntax error at line 1: `(' unexpected


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@758603 13f79535-47bb-0310-9956-ffa450edef68"
6fe26f8448259d25de074e13ca321d73bf5e82b0,"DERBY-4122: ClassCastException in SQLClob when running in soft upgrade mode (10.4.2.0 -> 10.5.1.0).
Fixes incorrect positioning of the stream after investigating the stream header (this doesn't fix the ClassCastException). The positioning bug is also only
seen when processing streams with a pre 10.5 header, which may happen both in
soft upgrade and hard upgraded mode. It will not happen in a newly created
10.5 database.

Patch file: derby-4122-1a-incorrect_stream_positioning.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@759153 13f79535-47bb-0310-9956-ffa450edef68"
1860e69388224e6e89f2a9bededc6ce16d0a31fc,"DERBY-4122: ClassCastException in SQLClob when running in soft upgrade mode (10.4.2.0 -> 10.5.1.0).
Fixed typo/error in the test, where two different selects were performed
against the same table. The test was introduced in DERBY-1895.

Patch file: derby-4122-2a-bc4btest.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@759155 13f79535-47bb-0310-9956-ffa450edef68"
20e986d5361a987e52d473e3a7ffad800edcdca6,"DERBY-4125: The in-memory storage back end doesn't work on Windows.
Changed the in-memory storage factory to rely much more on java.io.File to
handle paths and names.
The data store now stores all files and directories with normalized paths.
Also fixed a bug in DataStore.deleteEntry for deletion of directories.
Added two more tests; testListChildren and testCreateRoot.

Patch file: derby-4125-1a-improved_path_handling.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@759176 13f79535-47bb-0310-9956-ffa450edef68"
0d2840cd6ccef28699bbc605ac6f08e67a487322,"DERBY-4085: Improve testing of the in-memory back end.
Adds a functional test (mixture-of-Gaussian distribution).
The calculations are carried out both in Java and though SQL, then compared.
The tests are not yet compatible with JSR 169 / JavaME.

Patch contributed by Cheng Che Chen (chatom).
Minor modifications by Kristian Waagan.

Patch file: derby-4085-2a-mog_func_test.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@759181 13f79535-47bb-0310-9956-ffa450edef68"
aa298db5c5d7b59894c7222d4057401e2bd9c8be,"DERBY-4085: Improve testing of the in-memory back end.
Enabled the in-memory back end specific tests in suites.All.

Patch file: derby-4085-3a-enable_in_suitesAll.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@759211 13f79535-47bb-0310-9956-ffa450edef68"
4d0fc78cdc2ba7766847c9e701fdb94effa5f51a,"DERBY-4126: Find table functions even when they are in jar files in the database.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@759360 13f79535-47bb-0310-9956-ffa450edef68"
0cf3d79ba32d7968cd44f4c8c6419afc18d5f040,"correcting minor mistake in test invocation in sttest README.txt


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@759385 13f79535-47bb-0310-9956-ffa450edef68"
253a5981287537e5893f30104afdd07bcf3899cf,"DERBY-4085: Improve testing of the in-memory back end.
Added better error reporting to see if we have to increase the tolerance
or if there is something else wrong with the test.

Patch file: derby-4085-4a-improved_assertion_reporting.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@760380 13f79535-47bb-0310-9956-ffa450edef68"
cf2105b38eea28a3e45c6c9501e71a692cd26cf9,"DERBY-4119: Compress on a large table fails with IllegalArgumentException - Illegal Capacity

Use long arithmetic to prevent overflow in intermediate results when
increasing the capacity of NodeAllocator. Also make sure that the Node
array does not exceed maxSize, and allow the sort to continue even if
a larger array cannot be allocated.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@760422 13f79535-47bb-0310-9956-ffa450edef68"
da360eb21a681bd16f4cc6fde1e8b5bb8dc6f13d,"DERBY-3842 Convert ""org.apache.derbyTesting.functionTests.tests.store.holdCursorExternalSortJDBC30.sql"" to junit.

Contributed by Tiago R. Espinha and Junjie Peng



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@760489 13f79535-47bb-0310-9956-ffa450edef68"
02f8e49bdb024fce1f9b1b168b4112d77699dc2f,"DERBY-4116 SYSCS_UTIL.SYSCS_UPDATE_STATISTICS should update the store estimated row count for the table



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@760497 13f79535-47bb-0310-9956-ffa450edef68"
52c213915842dbefeb8e07ec4345313f3bdb4f91,"DERBY-4085: Improve testing of the in-memory back end.
Report the seed on a failure, so that the run can be repeated.

Patch file: derby-4085-5a-report_seed_on_failure.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@761204 13f79535-47bb-0310-9956-ffa450edef68"
f619a1368a456de421f7db0bece6703b66b5c4c0,"DERBY-4085; fix javadoc warning


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@761508 13f79535-47bb-0310-9956-ffa450edef68"
f76dd6a27095f65d7e323bf9d5536e4da09517c6,"DERBY-2676: Class name ""com.ibm.db2j.aggregates.Aggregator"" referred
in error message is no longer correct

Fix contributed by Hiranya Jayathilaka <hiranya@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@762122 13f79535-47bb-0310-9956-ffa450edef68"
5b9a6d9b25169da4e0ec7088795125c507ef66d5,"DERBY-4122: java/testing/org/apache/derbyTesting/unitTests/junit/ReaderToUTF8StreamTest.java.
Added mark/reset functionality to ReaderToUTF8Stream.
Made SQLClob use mark/reset to rewind the data stream when too many bytes are
read as part of the stream header parsing. This happens when reading Clobs
written with the pre-10.5 header format, either in soft or hard upgraded
databases.
Added a new error message.
Added unit tests for mark/reset.

Patch file: derby-4122-4c-classcast_fix_mark_reset.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@762384 13f79535-47bb-0310-9956-ffa450edef68"
7168d7dae347db6507f0074c065f108ca73cc24c,"DERBY-4145: Look for illegal references in generation clauses before binding the clauses.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@762520 13f79535-47bb-0310-9956-ffa450edef68"
a8c09662d5392a869a7db7e8cb239dd09087836c,"DERBY-4146: Bind a column descriptor to a generated result column for INSERTs without target lists.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@763230 13f79535-47bb-0310-9956-ffa450edef68"
7e57d4bd64cbb119d980426d9b4913d6595dcf6c,"DERBY-4148 - fixing NullPointerException in system.sttest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@763743 13f79535-47bb-0310-9956-ffa450edef68"
d835c4041ae49dc5592cff66072dc9776ccda6b8,"DERBY-4128  Failure in ServerPropertiesTest due to java.security.AccessControlException on the server side, in 10.4 to 10.5.1. soft upgrade mode



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@763834 13f79535-47bb-0310-9956-ffa450edef68"
9a428e437ad5611088cf502742a1f011bfecb053,"DERBY-2353: intermittent NPEs during DELETE ops in a reasonably large transaction

When derby.language.logQueryPlan is true, don't try to print the query
plan if the activation has been closed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@763900 13f79535-47bb-0310-9956-ffa450edef68"
229ef394edcb05ac85ccf0ff283a0514de5ac7fa,"DERBY-4128 Failure in ServerPropertiesTest due to java.security.AccessControlException on the server side, in 10.4 to 10.5.1. soft upgrade mode

2nd commit.  Fix case where trace file might be created twice.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@763980 13f79535-47bb-0310-9956-ffa450edef68"
d1661b2088668dfcf0a09ff7f8abc9d5e866e270,"DERBY-3853: Behaviour of setTypeMap() differs between embedded and client

Changed the client driver to match the embedded driver.

Patch contributed by Yun Lee <yun.lee.bj@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@764217 13f79535-47bb-0310-9956-ffa450edef68"
1cd97e82ae68c0988c1868d59a7f92afc75c0e7d,"DERBY-4127: Port 764471 from 10.5 branch to main.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@764481 13f79535-47bb-0310-9956-ffa450edef68"
31ba8d0a39d86611fc1703cb093cc96f8a5ed5d6,"DERBY-4141 XAExceptions thrown by Derby can have errorCode 0 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@764495 13f79535-47bb-0310-9956-ffa450edef68"
979d9e84685a50da01ffcccbbc946c0de77dae6e,"DERBY-3991: Clob.truncate(0) throws exception.
Allows a Clob to be truncated to a length of zero characters (empty string).

Patch contributed by Yun Lee <yun.lee.bj@gmail.com>.

Patch file: derby-3991-3.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@764800 13f79535-47bb-0310-9956-ffa450edef68"
e65365e6d2c7d17cb5aa9c3a159fe61dc5cbfe19,"DERBY-4157 (partial) Create a test to verify that virgin metadata is identical to hard-upgraded metadata

Contributed by Rick Hillegas

Attaching derby-4157-01-aa-refactor.diff. This patch is a first step toward writing the new test. This patch factors out some of the existing upgrade test machinery so that the new test can re-use that machinery:

1) logic to discover old versions
2) logic to create class loaders out of those old versions
3) logic to use those class loaders


Touches the following files:

A java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/OldVersions.java
A java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/UpgradeClassLoader.java

New classes to hold the logic which has been factored out. OldVersions used to be an inner class of _Suite. UpgradeClassLoader consists of code extracted from UpgradeRun and PhaseChanger.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@764912 13f79535-47bb-0310-9956-ffa450edef68"
7b301ecd2fb8ab0bce9ec2731a915a6eef18fcc8,"DERBY-4127: Port 764932 from 10.5 branch to trunk.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@764939 13f79535-47bb-0310-9956-ffa450edef68"
c0440b1520332699d74bbf8d413fffeb6d303297,"DERBY-4133: Disable testTableFunctionInJar on jdk 1.4 because the jar file it uses is compiled at a higher byte code level.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@764948 13f79535-47bb-0310-9956-ffa450edef68"
7585584fa4774319139f030c51b1a53a15ea5002,"DERBY-3610: Confusing error message when granting execute privilege

Fix contributed by Hiranya Jayathilaka.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@765087 13f79535-47bb-0310-9956-ffa450edef68"
7e21093a34fcf6d49f833ba2e01b9dff8ef751ae,"DERBY-4001: Sequence comparison with ""ALL"" does not yield correct results

Added a regression test that exposes the bug. The test is not enabled
since the fix has not been checked in yet.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@765930 13f79535-47bb-0310-9956-ffa450edef68"
081a08c217c766631ccb38336da35ea4db13d72b,"DERBY-3941: Clean up import statements in StoredPage

Contributed by Yun Lee.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@765943 13f79535-47bb-0310-9956-ffa450edef68"
541b3ad3a4bfd7d0ce0a4c731870a08d8d51a0a4,"DERBY-4118: ComparisonFailure in 'testSysinfo(org.apache.derbyTesting.functionTests.tests.derbynet.SysinfoTest)' on Derby 10.5 / Linux

Granted derbyclient.jar permission to read java.class path in SysinfoTest.policy.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@765955 13f79535-47bb-0310-9956-ffa450edef68"
a5d378d260fc107762f1b68eb340db2cf4c76bb8,"DERBY-3941: Unsafe use of DataInput.skipBytes()

Replaced calls to DataInput.skipBytes() with new utility method
DataInputUtil.skipFully().

Patch contributed by Yun Lee.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@766163 13f79535-47bb-0310-9956-ffa450edef68"
2c3b03f0181b8b755a954e67374b28d7f9ff27b6,"DERBY-4169: Change two SMALLINT routine args to be INT so that they will match the corresponding int args of the target Java method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@766722 13f79535-47bb-0310-9956-ffa450edef68"
24d385651950d3cfebb04ce537cae735f30af3d0,"DERBY-4097: WaitError in NullableUniqueConstraintTest.testMixedInsertDelete

If we have to wait for a latch when walking the B-tree backwards,
release all latches and rescan from the root of the tree instead of
failing with a WaitError.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@767143 13f79535-47bb-0310-9956-ffa450edef68"
d3417fc219938b86abcb30e3abf704f828723808,"DERBY-4051: The javadoc for SpaceTable refers to an alias that doesn't seem to work

Patch contributed by Tiago R. Espinha.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@767396 13f79535-47bb-0310-9956-ffa450edef68"
56583c32a2947ccf608d64625cd76e8181dfdb6a,"DERBY-3926

I have worked on writing a junit test which is currently going to fail because we are returning the data in incorrect order. I thought it would be useful to have the test for people to quickly run the test if they wanted to. This junit test will not be part of any suite currently since the bug is not fixed yet. Putting it in the suite is going to make it fail everytime because the test is asserting that the data be returned in the correct order. It was painful to convert the setup script provided for this jira into a junit test. The script is huge. I was able to use Army's test converter DERBY-2151(it was extremely helpful because it atleast converted half of the script into junit test. My understanding is that the converter works on the older canon based master file. I think it takes sql delimited by ; from the canon file and assumes that next line is the output of that sql. So, the converter skipped every other sql from my setup script. I ended up hand putting every other line which was skipped by the converter. ) 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@767584 13f79535-47bb-0310-9956-ffa450edef68"
09691813b3ab3841932df032f00d2bb3d2054c62,"DERBY-2769 (partial) Fix error message type to say BLOB/CLOB instead of BLOB/BLOB
Contributed by Yun Lee



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@767947 13f79535-47bb-0310-9956-ffa450edef68"
48a988473fb7eb25a4087f0e206249f7ab0c7cae,"DERBY-2487: Enhance Derby with XPLAIN functionality.

This feature was contributed by Felix Beyer (beyer dot felix at gmx dot net).

This feature introduces an alternate handling of runtime statistics
information. Derby can now be configured so that it will capture the
statistics in a machine-readable form and will store them into a set of
simply-structured tables in a schema which is specified by the user. We
call this behavior ""XPLAIN style"", and we call the tables which are
used the ""XPLAIN tables"".

Having captured statistics about statement execution, you can then
analyze the statement behavior by querying these tables. For example, you
can determine how much time was taken, what resources were used, what
query plan was chosen, and so on.

This is the initial commit of this new functionality. Subsequent changes
will provide documentation, additional tests, fully-tested upgrade support.
As the community gains more experience with this feature, we will find more
enhancements to make, but the initial commit provides a working feature
with an initial set of basic regression tests.

Many thanks to the community for reviewing the changes through several
iterations of development.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@768597 13f79535-47bb-0310-9956-ffa450edef68"
d54fabdea288ac0bf9da6a4d5280f67e11d977f0,"DERBY-2487: Enhance Derby with EXPLAIN Functionality

Updated list of expected functions in TestDbMetaData to contain the
XPLAIN functions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@768671 13f79535-47bb-0310-9956-ffa450edef68"
8f4810aa3f6220fd3d3b6f3d9b29ff6a3beeeff1,"DERBY-3926

Tars Joris contributed a new reproducible script(test-script.zip) which has been granted to ASF for
inclusion. I changed the junit test which I added last week to be based on this new script. The changes 
involved were data change only. The actual test cases in the junit test did not require any changes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@769147 13f79535-47bb-0310-9956-ffa450edef68"
7e23da13e93718d380861c7e238479537b3c5c9e,"DERBY-4001: Sequence comparison with ""ALL"" does not yield correct results

There are three essential changes in the patch:

1) ProjectRestrictNode.pullOptPredicates()

Don't pull any predicates if the from table is marked as a not exists
table. This way the flattening of queries like the ones below will
work, because the predicate 1<>1 is not pulled out and applied on the
outer table.

  SELECT * FROM T WHERE NOT EXISTS (SELECT * FROM T WHERE 1<>1)
  SELECT * FROM T WHERE X < ALL (SELECT X FROM T WHERE 1<>1)
  SELECT * FROM T WHERE X NOT IN (SELECT X FROM T WHERE 1<>1)

2) SubqueryNode.preprocess()

Don't allow not exists flattening unless all the predicates in the
subquery reference the base table of the inner query. When all the
predicates reference that table, none of them will be used in the
outer query, so they won't cause any trouble for the flattening. This
makes queries like the one below work:

  SELECT * FROM T T1 WHERE NOT EXISTS (SELECT * FROM T T2 WHERE T1.X > 100)

No flattening will happen in this case, though.

Although it may sound like (2) would prevent the example queries in
(1) from being flattened, that's not the case. This is because simple
predicates like 1<>1 are pushed down before SubqueryNode.preprocess()
gets to the flattening, so it doesn't see those predicates. The
flattening is still safe, since we have made sure that those
predicates won't be pulled out again.

3) SubqueryNode.preprocess()

If an ALL subquery or a NOT IN subquery is flattened, a new join
condition is created, for instance

   WHERE X < ALL (SELECT Y ...) results in the join condition X >= Y
and
   WHERE X NOT IN (SELECT Y ...) results in the join condition X = Y

The patch adds a check so that the flattening only happens if the
right side of the join condition references the base table of the
subquery. If it does, we know that the join condition cannot be used
to filter rows from the outer table, so it's safe to do the
flattening. This prevents queries like the ones below from being
flattened, and they now work as expected:

  SELECT * FROM T WHERE X < ALL (SELECT 100 FROM T)
  SELECT * FROM T T1 WHERE X = ALL (SELECT T1.X FROM T)
  SELECT * FROM T WHERE X NOT IN (SELECT 100 FROM T)
  SELECT * FROM T T1 WHERE X NOT IN (SELECT T1.X+100 FROM T)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@769273 13f79535-47bb-0310-9956-ffa450edef68"
8c9d41ec865ee9f301a16f424a883d076238563a,"DERBY-3417 slave side stop in a client server mode results in SQLState printed without proper error message

Patch derby-3417-2.

A set of replication errors have been made session level (they are),
also having the effect of preformatting the error message strings on
the server, solving this issue. Also removed usage of
org.apache.derby.shared.common.reference.SQLState's strings in the
replication tests to make them self contained.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@769596 13f79535-47bb-0310-9956-ffa450edef68"
84fa650c462c8dcaff07986bd4e7a4a91ea17462,"DERBY-4175 Instability in some replication tests under load, since tests don't wait long enough for final state or anticipate intermediate states

Patch derby-4175-3 (+ resolved some conflicts arising from commit of DERBY-3417).

It makes three replication tests less sensitive to load by making
them accept intermediate states without failing or wait for longer
before giving up on seeing the final end state of a replication state
change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@769602 13f79535-47bb-0310-9956-ffa450edef68"
4a14003998bbb227e2bcd9739a392f55710986f1,"DERBY-4185 Make timeout settable or increase default for one replication message layer protocol.

Increase timeout for accepting reply from slave when initializing
replication or stopping replication/failing over from 5 to 30 seconds
for actions to work more reliably under load. We chose not to make
this a user knob for now.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@769606 13f79535-47bb-0310-9956-ffa450edef68"
f24ce88ce0789bb369e09728f7c126c73bf04b52,"improved comment change only.  Fixing up comments in BTreeMaxScan.java,
looks like old comments came with cut/paste code and were not updated to
reflect specific changes for max changes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@769810 13f79535-47bb-0310-9956-ffa450edef68"
1e5b2aac1b465b2b0885bfaf82ff1db0855f7e99,"DERBY-2769 Implement error handling/parameter checking in Clob.setString

Contributed by Yun Lee (yun dot lee dot bj at gmail dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@769948 13f79535-47bb-0310-9956-ffa450edef68"
72b50c0c426edeecb16d35c71522959ea57b286e,"DERBY-4186 After master stop, test fails when it succeeds in connecting (rebooting) shut-down ex-slave

Patch derby-4186-2, which solves this issue by

a) fixing a bug in SlaveDataBase, which loses and exception iff a
command to stop replication arrives from the master to the slave
before the initial connection (successful slave started) command
returns. This is a corner case race condition, and not very likely to
occur in practice, since it makes little sense to stop replication
immediately after starting it.

b) fixing a bug in the test, which switched on its head what is really
expected behavior, and also adds a waiting loop to allow intermediate
state on slave after the master is stopped. Also fixed some erroneous
comment and removed some cruft.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@769962 13f79535-47bb-0310-9956-ffa450edef68"
a7adeebdb23a96a2dc3f8b9cf4956c825f54a0bc,"Fixed javadoc typos: DRDProtocolException -> DRDAProtocolException


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@770153 13f79535-47bb-0310-9956-ffa450edef68"
6cc77ace2be89c4e1936d8d119423852717a6f59,"DERBY-4108 - add 10.5.1.1 to list of old versions for upgrade tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@770497 13f79535-47bb-0310-9956-ffa450edef68"
c0c5770886eae6319464e1c0a7fc556185409db5,"DERBY-4085: Improve testing of the in-memory back end.
Fixed the seed used by MogTest, due to instability in the test.
This is a temporary stabilization, the root cause should be identified.

Patch file: derby-4085-6a-fixed_seed.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@771180 13f79535-47bb-0310-9956-ffa450edef68"
235e6b2d07a613bd2292ddba317990bfce295b62,"DERBY-4108 ; update STATUS with 10.5.1.1 release vote & info.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@771388 13f79535-47bb-0310-9956-ffa450edef68"
88e5971d0f9bd1d6959d186715c6b0177a5fa154,"Use helper methods in OffsetFetchNextTest to make it simpler and to ensure that statements are closed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@771597 13f79535-47bb-0310-9956-ffa450edef68"
06154a0ad1af8a6f1edc09d43a9226f144bb5442,"DERBY-4212: Prepared statement with OFFSET/FETCH gives different results on subsequent execute

Added a test case to OffsetFetchNextTest (disabled for now).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@771613 13f79535-47bb-0310-9956-ffa450edef68"
be4b84e8cb3a4846f2ea165cb1da271609dd3206,"DERBY-4193: ASSERT FAILED Scan position already saved with multi-threaded insert/update/delete

Forget about the current position before trying to reposition on the
end point of a scan. Then the ASSERT won't be confused if it needs to
save the position again (it fails if it finds that a position is
already saved).

BTreeScan.positionAtStartForBackwardScan() also had this problem, but
since it doesn't have any callers, this method was removed instead of
being fixed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@772090 13f79535-47bb-0310-9956-ffa450edef68"
640d05d616c79c901f14160335c6adff9420fe88,"DERBY-4212 Prepared statement with OFFSET/FETCH gives different results on subsequent execute

Patch DERBY-4212-2, which fixes this issue by resetting state
variables in the close method of RowCountResultSet, and adds a new
test case for this use case to OffsetFetchNextTest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@772299 13f79535-47bb-0310-9956-ffa450edef68"
ad95897176fc77c02531c7b3a74978cca24f01e0,"DERBY-4186 After master stop, test fails when it succeeds in connecting (rebooting) shut-down ex-slave

Patch derby-4186-followup, to further simplify the already committed
patch, as suggested by Jorgen Loland.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@772337 13f79535-47bb-0310-9956-ffa450edef68"
e734b17f70fa7fef6026995fcff36bc09fd63cbc,"DERBY-3839  Convert org.apache.derbyTesting.functionTests.tests.store.holdCursorJDBC30.sql to junit.

Contributed by Tiago Espinha (tiago at espinhas dot net) and Junjie Peng (pjj dot ccce at gmail dot com) 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@772354 13f79535-47bb-0310-9956-ffa450edef68"
ad0c80a98a7764890502351c0f5551ee2e3670e6,"DERBY-2447: ejbql and floattypes fail intermittently

A bug in the HotSpot optimization made normalization of floating point
values return negative zero instead of positive zero. This patch adds
a workaround for the bug and a regression test. The workaround also
makes the intent of the code clearer.

For details about the HotSpot bug, see:
http://bugs.sun.com/view_bug.do?bug_id=6833879


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@772449 13f79535-47bb-0310-9956-ffa450edef68"
c5d9be3324e3d743586a06a80d09bd25c64f67ba,"DERBY-4218: ""Table/View 'MAX_SCAN' does not exist"" in IndexSplitDeadlockTest

Wait for all threads to finish before dropping tables in tearDown().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@772534 13f79535-47bb-0310-9956-ffa450edef68"
5ab1ac294541b359219871a5b3ca3b6bdadc4709,"Clarify javadoc for RuntimeStatisticsParser.findString() and fix indentation


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@772611 13f79535-47bb-0310-9956-ffa450edef68"
9f0f05d5e958f9425c0e1366e8e6b844e03c6e39,"DERBY-4198 When using the FOR UPDATE OF clause with SUR (Scroll-insensive updatable result sets), the updateRow() method crashes

Patch derby-4198-throwable, which makes sure all exceptions seen in
insertRow, deleteRow and updateRow are wrapped properly to avoid
crash. Partial fix for this issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@774148 13f79535-47bb-0310-9956-ffa450edef68"
698ab62171196baa069be57c710226252f426cc6,"DERBY-4204: Runtime statistics not collected on re-execution of statement

Make sure NoRowsResultSetImpl.close() prints the collected runtime
statistics each time close() is called on a result set that is not
currently closed. After DERBY-827 close() didn't print the statistics
if the result set had been closed and reopened.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@774281 13f79535-47bb-0310-9956-ffa450edef68"
08b83a83de695a913c868fb705cef8b1ad516dff,"DERBY-4228: Remove unused pre-i18n constructors in BatchUpdateException


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@774471 13f79535-47bb-0310-9956-ffa450edef68"
4309044e1bd3b16284cef5977e2b9b58da14ed9d,"DERBY-4062: Remove single-argument getDataValue overrides from DataValueFactory

This change simplifies the DataValueFactory interface by removing the
single-argument overrides of the getDataValue() method. This change extends
the work that was done by Dan in 2007 in revision 540791. The large number
of single-argument overrides was complicated and clients could accidentally
call the wrong override, particularly since there was an override which
took an argument of type Object. As suggested by Knut, the new implementation
replaces calls to the single-argument getDataValue method with direct calls
to the constructor of the desired data type. The new code is simpler and
easier to read, and the data type usage is more self-evident in the system
catalog row factories, which are the principal users of the single-argument
getDataValue calls.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@774617 13f79535-47bb-0310-9956-ffa450edef68"
fe7db0f922463ecd4ee19519eac74a882b132e59,"DERBY-4199: Write exceptions to file in the fail directory as they occur with JUnit tests.
Write exceptions being thrown during JUnit testing to file as soon as they
happen. The output file is called 'error-stacktrace.out' and is located under
the fail-directory. If the output file already exists, the new output is
appended.
Added a new method for opening a file in append mode (in a privileged block).
Patch file: derby-4199-1a-writeExceptionsToFile.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@774729 13f79535-47bb-0310-9956-ffa450edef68"
6b03ead6967a513ca72bab5e056606c5a1c582b0,"DERBY-4204: Statistics not collected on re-execution of statement

This change enhances the DERBY-4204 regression test to verify that the
XPLAIN table form of statistics collection is also re-collected on each
statement re-execution. Without the DERBY-4204 fix, re-execution of DML
statements was only resulting in a single row in the SYSXPLAIN_STATEMENTS
table, while after the fix, the correct results of 5 rows are observed.

This change should NOT be backported to 10.5 and earlier branches, because
it depends on the XPLAIN functionality.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@774830 13f79535-47bb-0310-9956-ffa450edef68"
8654374d4c7b5c6666b1136cea103994ee9240d2,"DERBY-4177: Javadoc for BTreeLockingPolicy should not mention ""scan lock""

The fix for DERBY-2991 removed the concept of a ""scan lock"" and
RECORD_ID_PROTECTION_HANDLE, so the javadoc for the BTreeLockingPolicy
class hierarchy should not mention them anymore.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@775937 13f79535-47bb-0310-9956-ffa450edef68"
c5935add096a51f769aee0f6e3aac74c260b4212,"DERBY-3921: Committed Ole's patch adding a test for replication of encrypted databases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@777105 13f79535-47bb-0310-9956-ffa450edef68"
53cbb5340fe5f2d44df1d1bf79136d986263d2e4,"DERBY-4230  DatabaseMetaData.getColumns() returns extra column from view with group by and expression in SELECT list



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@777500 13f79535-47bb-0310-9956-ffa450edef68"
60e4ae3df5211c6a463855f57531800e4d695f92,"Fixed misplaced javadoc


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@777881 13f79535-47bb-0310-9956-ffa450edef68"
cce2ef62546f935a2b0379efeaf9a70762a6cb2d,"Replaced non-ASCII characters in OrderByAndSortAvoidance with Unicode
escape sequences. This fixes warnings of this kind when building the
javadocs in UTF-8 locale:

  [javadoc] (...)/tests/lang/OrderByAndSortAvoidance.java:738: warning: unmappable character for encoding UTF8
  [javadoc]                 + ""documents.  Ils ont ÔøΩtÔøΩ faits pour quelque chose.')"");
  [javadoc]                                        ^


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@777886 13f79535-47bb-0310-9956-ffa450edef68"
8b553f1c628a3e74e38270d047f3cb592838891a,"DERBY-4182

Before this fix abort of inserts that included clob or blob chains would 
destroy the links of the allocated pages of the chains.  This would leave
allocated pages that could never be reclaimed either by subsequent post
commit processing or inplace compress.  Only offline compress could reclaim
the space.  This fix changes insert abort processing to automatically put
all pieces of long columns except for the head page on the free list as part
of the abort.

Note this does not fix existing tables that have had this problem happen in
the past, only stops it from happening.  One must run an offline compress to
reclaim this space to fix any instances of this bug prior to this fix.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@778926 13f79535-47bb-0310-9956-ffa450edef68"
ff1932fa64b9224f0227adb17f318b7e7853d87e,"DERBY-4230 DatabaseMetaData.getColumns() returns extra column from view with group by and expression in SELECT list

Changed CreateViewNode to only add visible columns to SYS.SYSCOLUMNS.

Also added assertions that generated columns are at the end of the ResultColumnList.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@779319 13f79535-47bb-0310-9956-ffa450edef68"
161e9cca01887e47dfbf3484d7c9946f8b10b719,"DERBY-3296: Importing to table in default schema fails when another table with the same name exists in a different schema

If schema isn't specified, ColumnInfo should pass the name of the
session's current schema to DatabaseMetaData.getColumns().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@779681 13f79535-47bb-0310-9956-ffa450edef68"
731568d34fb3504c62238956102e8cf5fe241507,"DERBY-4239

In the case of inplace compress it is necessary to get a valid checkpoint
into the log file after any other log record for the table being compressed.
This insures that if redo recovery is run, it will not be applied to any 
log record before the compress.  This is necessary as compress will basically
destroy a page and redo recovery will get various errors if it tries to 
apply a redo page operation at page version N against a new page.

Before this fix the requested checkpoint would not be executed if a checkpoint
was already in progress.  The problem is that there is no way to tell if 
the executing checkpoint is after all operations on the table.  So the fix
in this case waits for the checkpoint to finish and starts a new one.

The changes also apply this new behavior to all calls to checkpoint which
previously had marked that the routine should wait until the checkpoint
finished.  This will affect backup and checkpoints initiated by a user
calling the system procedure.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@780352 13f79535-47bb-0310-9956-ffa450edef68"
a39c84c18f7f65e63e09a7c4e629178d636b6579,"DERBY-4223 Provide the ability to use properties with ij.runScript()
adds a new runScript method that allows use of system properties with runScript.
DERBY-4217 (partial) adds use derby.tests.port system property when initializing TestConfiguration.

Contributed by Tiago Espinha (tiago at espinhas dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@781200 13f79535-47bb-0310-9956-ffa450edef68"
cf1c2ac05d5dd1a0ec319e8a09d6965bbf2f6edd,"Update STATUS file, recording Ole's election to a committership.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@782069 13f79535-47bb-0310-9956-ffa450edef68"
dac5aed9f2547aadc69befe0a7e0b90f65272906,"DERBY-4241: Improve transition from read-only to writable Clob representation.
Added the new method InternalClob.getCharLengthIfKnown, which allows for
determining if the length of the Clob is known or not at the time of the method
invocation. If the length is unknown, it will not be calculated as this may be
an expensive operation.
This method was added to allow for performance optimizations, where the optimal
action depends on whether the character length is known or not.

Patch file: derby-4241-1a-InternalClob.getLengthIfKnown.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@782600 13f79535-47bb-0310-9956-ffa450edef68"
d76e238fe287719dc1d13263d72421f58d9644a0,"DERBY-3598; restructure ReleaseNotesGenerator, adjust to newest format, and add excludeVersion tags.
  initial patch contributed by Dyre Tjeldvoll


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@782867 13f79535-47bb-0310-9956-ffa450edef68"
10d991a8d56d83de66f7f0deb1bf15cd1888a975,"Replaced reference equality check for two strings with equals.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@782906 13f79535-47bb-0310-9956-ffa450edef68"
5bef31e28a1973a202d4d32f00adb68a467afbdc,"DERBY-4171: Connections to on-disk db go to in-memory db if in-memory db with same name is booted.
If the storage factory isn't the default one (DIRECTORY), don't allow
connections without a subsubprotocol specified.
Added a test.

Patch file: derby-4171-1b-fix.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@782954 13f79535-47bb-0310-9956-ffa450edef68"
c083785039c9f971465e47ea1343f056c34d0e45,"DERBY-3719 ...replication.buffer.LogBufferFullException' causes failover to fail w/ 'XRE07, SQLERRMC: Could not perform operation because the database is not in replication master mode.

Patch derby-3719-1 fixes a race condition in the logic that throttles
log production if shipping can't keep up. The bug made replication stop.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@782991 13f79535-47bb-0310-9956-ffa450edef68"
ee243394b24c384aa010448be0bf1ab606cf98e3,"DERBY-4047

updating the master and adding the test to be run as part of the storemats
suite.  I have checked the diffs with the neglected master and found them
all to be ok.

I hand checked the diffs and found the following 3 family of diffs to be
acceptable:
o a bunch with the new ij header
o trunk and 10.5 does not have scan locks, so no longer will get any row locks
of the form (N, 1)
o the following kind of diff comes from inlist optimization, now a set of
OR's can do multiple index probes and thus only the affected rows are
locked.  The exact number and name of the rows depends on the type of
index and the padding of the row.
> -- Very basic single user testing of update locks.  This "".subsql"" test is
3417,3418d3521
< APP     |UserTran|ROW     |1   |X   |A           |(1,11)    |GRANT|ACTIVE
< APP     |UserTran|ROW     |1   |X   |A           |(1,9)     |GRANT|ACTIVE
3634,3638d3736
< APP     |UserTran|ROW     |1   |X   |A           |(1,10)    |GRANT|ACTIVE
< APP     |UserTran|ROW     |1   |X   |A           |(1,11)    |GRANT|ACTIVE
< APP     |UserTran|ROW     |1   |X   |A           |(1,12)    |GRANT|ACTIVE
< APP     |UserTran|ROW     |1   |X   |A           |(1,8)     |GRANT|ACTIVE
< APP     |UserTran|ROW     |1   |X   |A           |(1,9)     |GRANT|ACTIVE

delete from a where a = 2 or a = 4 or a = 6;
2 rows inserted/updated/deleted
ij> select * from lock_table order by tabname, type desc, mode, cnt, lockname;
USERNAME|TRANTYPE|TYPE    |CNT |MODE|TABNAME     |LOCKNAME  |STATE|STATUS
---------------------------------------------------------------------------
APP     |UserTran|TABLE   |2   |IX  |A           |Tablelock |GRANT|ACTIVE
APP     |UserTran|ROW     |1   |X   |A           |(1,10)    |GRANT|ACTIVE
APP     |UserTran|ROW     |2   |X   |A           |(1,12)    |GRANT|ACTIVE
APP     |UserTran|ROW     |2   |X   |A           |(1,8)     |GRANT|ACTIVE



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@783088 13f79535-47bb-0310-9956-ffa450edef68"
200a5ea77c6344f3ffe962bc64b46f88b76af898,"DERBY-3926

Following is the patch description for DERBY-3926. 
The problem with the trunk codeline is that when optimizer goes through optimizables in a join order, it only looks at those optimizables individually to decide whether sorting can be avoided on them or not. That approach leaves out few queries which require sorting but do not get sorted. The decision for avoiding sorting should also include relationship between the optimizables in a given join order. Following query demonstrates the trunk problem 
SELECT table1.id, table2.value, table3.value FROM --DERBY-PROPERTIES joinOrder=FIXED 
table3 -- DERBY-PROPERTIES index=nonUniqueOnValue_Table3 
, table2 -- DERBY-PROPERTIES index=nonUniqueOnValue_Table2 
, table1 
WHERE table1.id=table2.id AND table2.name='PageSequenceId' 
AND table1.id=table3.id 
AND table3.name='PostComponentId' 
AND table3.value='21857' ORDER BY table2.value; 

In the query above, when optimizer is considering [table3, table2, -1] join order, it determines that sorting can be avoided on this join order because the order by column table2.value is already covered by the index nonUniqueOnValue_Table2. It does not see that the outermost optimizable table3 will qualify more than one row and hence it will be a multi-row resulset and for each one of those rows, we will be doing a scan into table2. In other words, there will be multiple scans into table2(and the rows returned by each one of those scans will be ordered on table2.value) but the collective rows from those multiple scans are not necessarily going to be ordered on table2.value. This patch is attempting to fix that problem. 

Currently, in trunk, a column is marked always ordered during a query processing when the optimizer finds that there is constant comparison predicate on the order by column. If the column does not have a constant predicate (as in our example above), we next see if we are using an index which will provide the required ordering on column (which is true in our case. The required ordering on table2.value is provided by the index nonUniqueOnValue_Table2). But as we can see in the query above, this index coverage is not enough to say that sorting is not needed. We need to add 2 more conditions before we can decide to avoid the sorting. One of those cases is 1)if the order by column does not belong to the outermost optimizable, then check if the order by column's optimizable is a one-row resultset. If yes, then it will be safe for the optimizer to avoid the sorting. The second case to consider is 2)if the order by column does not belong to the outermost optimizable, then check if the order by column's optimizable is multi-row resultset BUT all the outer optimizables are one-row resulsets. If either of these 2 additional conditions are satisfied then optimizer can choose to avoid the sorting. Otherwise 
sorting should be added to the query plan. The example query above does not satisfy the 2 additional checks and hence sorting should be done as part of the query plan. 

The changes for the 1)check above has gone into OrderbyByList.sortRequired(RowOrdering, JBitSet, OptimizableList). The implementation of this change just required us to check the outer optimizables to be one row since the order by column's optimizable is not one row. If outer optimizables are all one-row, then we say that sorting can be avoided. Otherwise sorting is required. 

The changes for the 2)check above has gone into FromBaseTable.nextAccessPath(Optimizer optimizer, OptimizablePredicateList predList, RowOrdering rowOrdering) The implementation of this change requires us to see if the order by column is involved in equijoin with outer optimizable's indexed column. If yes, then we know that since outer optimizable is ordered, the rows qualified via the equijoin will also be ordered and hence sorting can be avoided. But if this is not true, then we can't rely on outer optimizables' rows to be ordered on the order by column. To avoid sorting, we need to identify this case 2) as another case when the column can be marked as always ordered and that is when there is an equijoin predicate on the order by column with some other column 
which is already known to be always ordered. Taking the query from wisconsin as an example will explain this behavior 
select * from --DERBY-PROPERTIES joinOrder=FIXED 
TENKTUP1 -- DERBY-PROPERTIES index=TK1UNIQUE1 
, TENKTUP2 -- DERBY-PROPERTIES index=TK2UNIQUE1 
where TENKTUP1.unique1 = TENKTUP2.unique1 
order by TENKTUP1.unique1, TENKTUP2.unique1; 

For the above query, as per the current trunk codeline, none of the order by columns are marked as always ordered because there is no constant comparison predicate on them. But, for the given join order, with TENKTUP1 as the outermost resultset and with the index TK1UNIQUE1, we know that the current row ordering at this point is going to ensure that rows from TENKTUP1 are ordered on UNIQUE1. Next, when we process TEKTUP2 in the 2nd join order position, we find that there is no constant predicate on TENKTUP2.unique1 and hence we conculde that the rows from TENKTUP2 are not going to be ordered and we decide to force a sort node on the top of the query. But in reality, even though the outer optimizable is not a single row resultset, it is ordered on TENKTUP1.unique1 and hence all those rows from outer optimizable are going to be ordered on TENKTUP1.unique1 and the inner optimizable has an equality join on 

TENKTUP1.unique1 using the order by column TENKTUP2.unique1 What that translates to is that even if there will be multiple scans into TENKTUP2, the rows qualified are going to be all ordered because of the equijoin between the outer and inner optimizables on the order by columns. So, with my latest patch, I have expanded the notion of always ordered columns to include both constant comparison predicates AND ordered column that has equijoin with an outer optimizable's ordered column. 

I think this patch is also improving the existing queries to include a better path than what it was picking up before. Following is an example of one such query from wisconsin. 
select * from TENKTUP1, TENKTUP2 
where TENKTUP1.unique1 = TENKTUP2.unique1 
and TENKTUP2.unique1 < 100 
order by TENKTUP1.unique1; 
For this query, the trunk currently decides to use TENKTUP1 as the outermost optimizable using the TK1UNIQUE1 index and then those rows are filtered using TENKTUP2.unique1 < 100. Each of the 2 tables involved in the query have 10000 rows each. So we are going through 10000 qualified indexed rows from TENKTUP1 and then applying TENKTUP2.unique1 < 100 on them. With the attached patch, we use TENKTUP2 as the outermost optimizable with the index TK2UNIQUE1 and only gets the indexed rows which satisfy TENKTUP2.unique1 < 100 and then on them, we use the equlity join to fetch qualified rows from TENKTUP1. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@783168 13f79535-47bb-0310-9956-ffa450edef68"
6aee2322f9e021fe62c45b04eb9ed6ea5fdd3f5e,"DERBY-3926
Fixing the javadoc failure caused by checkin 783168


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@783641 13f79535-47bb-0310-9956-ffa450edef68"
305a6e62aae7e99355d5803d44072fa217c207a3,"DERBY-4262 test NetScripts fails with IBM's weme6.1
 Disable existingServerDecorator for JSR169 and if client or server are not available in classpath.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@784175 13f79535-47bb-0310-9956-ffa450edef68"
8b256942227cb0232d16b40b50bdf763f0536112,"DERBY-4171: Connections to on-disk db go to in-memory db if in-memory db with same name is booted.
Fixed incorrect handling of colon in paths with the Windows drive letter specification.
Patch file: derby-4171-2a.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@784682 13f79535-47bb-0310-9956-ffa450edef68"
0f92bc7cc166db4df04f898338bc30a4fb088dc3,"DERBY-4245 (partial): Sorting a table containing a CLOB fails after upgrade to 10.5.
Fixes the NPE bug for both clean 10.5 databases and upgraded databases. Note
that there is a remaining bug for upgraded databases that will be fixed with a
subsequent patch under this issue.

Patch file: derby-4245-2a-sqlclob_fix.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@784701 13f79535-47bb-0310-9956-ffa450edef68"
7f4445db7b350a20246e0375b66345be70d972fe,"DERBY-3887  Embedded Derby fails under JBoss because of JMX-related conflicts
Backed out JMX related changes for DERBY-3745.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@784831 13f79535-47bb-0310-9956-ffa450edef68"
ad60cd5a7e896f7fef0f83866cad768ba4e682ad,"DERBY-4217 (partial)Make the default port for the suites.All run configurable with a system property. patch file  DERBY-4217-dtp.patch.
Add support for derby.tests.port property

Contributed by Tiago Espina (tiago at espinhas dot net)




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785049 13f79535-47bb-0310-9956-ffa450edef68"
ea2ac9f9a29882b427cfd11ce459357c6d6a8898,"DERBY-4245: Sorting a table containing a CLOB fails after upgrade to 10.5.
A regression test using LOBs in a sort. The sort should be external, but if the
test is run with a large enough JVM heap it won't be. There are two options to
fix that: reduce the heap size or increase the number of rows in the test table.

Patch file: derby-4245-1c-test.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785104 13f79535-47bb-0310-9956-ffa450edef68"
34ac4cc9b9e3ca7e99d885d3676644e3e7f927c9,"DERBY-4245: Fixed two spelling errors in the test.
Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785105 13f79535-47bb-0310-9956-ffa450edef68"
dfbf41eeaf28f0dfc97dc3f167a5931a32419e94,"DERBY-4246 .replicationTests.ReplicationRun_Local_3_p5).testReplication_Local_3_p5_DERBY_3878()' fails w/ ""Could not perform operation 'stopSlave' because the database '...' has not been booted

Patch derby-4246-2 adds extra logic to the stop slave action after the
master is killed. This logic anticipates the slave's state changes
before its down. This logic was also present in
ReplicationRun_Local_StateTest_part1_1, so this patch factors this out
into a new method to stopSlave in ReplicationRun.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785131 13f79535-47bb-0310-9956-ffa450edef68"
ccf708c8d33c704a7144aac45f5d5cd13052d940,"DERBY-4270 Make replication tests save derby.log and database when a failure occurs

Patch derby-4270-2 adds an overload of TestCase.runBare to
ReplicationRun which does this desired copying on the same pattern as
done for ""normal"" tests in BaseTestCase.runBare.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785139 13f79535-47bb-0310-9956-ffa450edef68"
7d0f620f10036423266c46ffabb6a370f03a28e6,"DERBY-4198 When using the FOR UPDATE OF clause with SUR (Scroll-insensive updatable result sets), the updateRow() method crashes

Patch derby-4198-4. This is the second part of the solution for this
issue. It solves the issue of column mapping in the presence of named
columns in a FOR UPDATE OF clause. The original code was not general
enough; ScrollInsensitiveResultSet.updateRow needs to make use of
RowChanger to do the right thing.

The patch also adds new test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785163 13f79535-47bb-0310-9956-ffa450edef68"
3ee3d339e27b2fd646424632c8eece27b584cfb0,"DERBY-4268 ""SECURITY"" is reserved as SQL keyword.
Made security unreserved and added a regression test.

Contributed by Lily Wei (lilywei at yahoo dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785271 13f79535-47bb-0310-9956-ffa450edef68"
beaa0a435d59db09ea186e6e57adbc0e6de4d34a,"DERBY-4274: SYSCS_UPDATE_STATISTICS takes unnecessary table lock

Return just after the statistics have been updated to prevent the
generic ALTER TABLE code from locking the table exclusively.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785570 13f79535-47bb-0310-9956-ffa450edef68"
a665de1cca3190ce75c40f0e0067d69a057e3108,"DERBY-4273: A lock could not be obtained within the time requested error in testBTreeForwardScan_fetchRows_resumeAfterWait_nonUnique_split

Use default timeout values in IndexSplitDeadlockTest to give the test
cases more time to complete successfully.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785662 13f79535-47bb-0310-9956-ffa450edef68"
6409b407c8a91a2229502f43808cde3a9b62b2a0,"DERBY-4157: Add a test for the integrity of metadata along all upgrade trajectories--the test must be run standalone and is not wired into our regression test suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@785826 13f79535-47bb-0310-9956-ffa450edef68"
00eb153c96c869b29d1b61356b1767cf52282df7,"DERBY-4198: When using the FOR UPDATE OF clause with SUR (Scroll-insensive updatable result sets), the updateRow() method crashes.
Fixed JavaDoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@786078 13f79535-47bb-0310-9956-ffa450edef68"
4bd9ca4ee156ad055eacfdba4cfa60de30b50665,"DERBY-3887 Embedded Derby fails under JBoss because of JMX-related conflicts.
First pass at making a regression test for this issue.  It is not ideal because it currently has to be run by itself to pop the issue without the fix.
I will work to improve it if I get a clue how to do that.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@786254 13f79535-47bb-0310-9956-ffa450edef68"
2ea0e996f49a292fa8b2d06b42b834841a9f9d11,"Correcting my username in STATUS.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@786649 13f79535-47bb-0310-9956-ffa450edef68"
a6f35a41dd7167b8acb19f40d700b7fe1e63e4a5,"DERBY-4281: Committed Bryan's patch enabling the 10.6 upgrade tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@787302 13f79535-47bb-0310-9956-ffa450edef68"
a61fd536b0ebc30b1b2e44d10f1f8e9e9685737b,"DERBY-4214: Fix signature of CLOBGETSUBSTRING during hard-upgrade to 10.6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@787310 13f79535-47bb-0310-9956-ffa450edef68"
b05fa6ea8009bd07c3eaef4b8c350ab112d65d3f,"DERBY-4215: remove bad permissions tuple during 10.6 upgrade.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@787754 13f79535-47bb-0310-9956-ffa450edef68"
45f64ada5ed3828c5e0f25b861151717e0b58034,"DERBY-4276  Update demo's to remove references to com.ibm.db2.jcc.DB2Driver

Contributed by Lily Wei (lilywei at yahoo dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@788105 13f79535-47bb-0310-9956-ffa450edef68"
5e25f236a245ebdb87240a745885d5f01fdf902a,"DERBY-4217 Make the default port for the suites.All run configurable with a system property.

Contributed by Tiago R. Espinha (tiago at espinhas dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@788198 13f79535-47bb-0310-9956-ffa450edef68"
7feaf9c07a3b8624f590d9f79f0f3dc06fe1a17a,"DERBY-4154 DboPowersTest should not hard upgrade the system/wombat database

The patch makes the hard upgrade fixture use another database than
""system/wombat"", by wrapping the offending test cases in a
singleUseDatabaseDecorator.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@788369 13f79535-47bb-0310-9956-ffa450edef68"
03e89c8c1bd49236ac3057e5bea55b693e8f1245,"DERBY-4287 call to System.getProperty in BCClass.java is not wrapped in a priv block so may fail when running under SecurityManager

Also wraps call to FileOutputStream



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@788436 13f79535-47bb-0310-9956-ffa450edef68"
877a43d446d95e4c05a658ca8c735cabf11d2986,"DERBY-2074: NullPointerException when two threads load sort factory concurrently

Added a flag in ModuleInstance that tells whether the module is fully
booted. This flag is checked when we go through the list of modules,
so that we can avoid using partly booted instances.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@788670 13f79535-47bb-0310-9956-ffa450edef68"
52acd5a8fe0ba7de86de698fb38bfde7ff99395c,"DERBY-4232: XAResource.setTransactionTimeout() makes XAResource.start() fail with the client driver

Only send the timeout property when start() is called with TMNOFLAGS,
as specified in DRDAv4 (volume 3, SYNCCTL, page 872).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@788674 13f79535-47bb-0310-9956-ffa450edef68"
b1cd60e21e460c224d23b374f31bf6ae38fbc929,"DERBY-4273: A lock could not be obtained within the time requested error in testBTreeForwardScan_fetchRows_resumeAfterWait_nonUnique_split

Run the test with derby.locks.deadlockTrace=true to get more
information about the locks if the test fails with a timeout.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@788909 13f79535-47bb-0310-9956-ffa450edef68"
66edb7134321691270a464a14f21707d5e234fb4,"DERBY-4273: A lock could not be obtained within the time requested error in testBTreeForwardScan_fetchRows_resumeAfterWait_nonUnique_split

Use DatabasePropertyTestSetup to set timeout in ResultSetMiscTest and
SetTransactionIsolationTest, so that the values are reset before
IndexSplitDeadlockTest starts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@788968 13f79535-47bb-0310-9956-ffa450edef68"
f0e75f3f0a6e6be81cd21c4b634a357cd5b3674b,"DERBY-4018: ArrayIndexOutOfBoundsException in TopService.inService under heavy multithreaded use of EmbeddedDriver

Factored out two for loops and surrounded them with synchronization on
the vector they were iterating over. This prevent others from changing
the size of the vector between the calls to Vector.size() and
Vector.get().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@789264 13f79535-47bb-0310-9956-ffa450edef68"
5847a2836afc7489bf71be1098c4be48cc02a054,"DERBY-4293: Mutable public static variables

Patch contributed by Sebb <sebb@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@789313 13f79535-47bb-0310-9956-ffa450edef68"
f910400ce770be511a26ae3857aaa1a590fb06f4,"DERBY-4277: Replacing simple connect() with waitForConnect().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@789601 13f79535-47bb-0310-9956-ffa450edef68"
23ecfcf986f263130837c6ef344eea8eb1531f7d,"DERBY-4293: Mutable public static variables

Made more static variables final and/or private, and created accessor
method to prevent direct access to public static array.

Patch contributed by Sebb <sebb@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@789684 13f79535-47bb-0310-9956-ffa450edef68"
b7314f781c39a8a7d941115fb5d4f989aadc77f8,"DERBY-4142  java.lang.VerifyError causing java.sql.SQLException: Cannot create an instance of generated class ... in lang.GeneratedColumnsTest and GeneratedColumnsPermsTest on IBM iseries

patch d4142-kah-noField.diff contributed by Knut Anders Hatlen (knut dot hatlen at sun dot com) an improvement on earlier patch from Myrna van Lunteren (m dot v dot lunteren at gmail dot com). This solution removes the mis-typed ExecRow field and keeps the current row on the stack.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@789879 13f79535-47bb-0310-9956-ffa450edef68"
8f75194d43c7104ad88b89ef82e0964decdc0e05,"DERBY-4278: Batch inserts with Clobs fails with the embedded driver.
Explicitly set whether the Clob is written to a soft upgraded database or not,
as there isn't enough context at write time (run-time) to decide it then.

Patch file: derby-4278-1a-regression_test.diff, derby-4278-2a-fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@790135 13f79535-47bb-0310-9956-ffa450edef68"
250dbe6e6ea790b6a0d9423bd1e456ac7829a40b,"DERBY-4245: Sorting a table containing a CLOB fails after upgrade to 10.5.
Lowered the sort buffer to the minimum (through derby.storage.sortBufferMax),
and the number of rows inserted in the test.

Patch file: derby-4245-4a-adjust_sort_buffer_test.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@790162 13f79535-47bb-0310-9956-ffa450edef68"
c6fc81eae69232a1a4dc639c00a71e8ee09e0358,"DERBY-4018: ArrayIndexOutOfBoundsException in TopService.inService under heavy multithreaded use of EmbeddedDriver

Closed another unsynchronized window between Vector.size() and
Vector.elementAt().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@790218 13f79535-47bb-0310-9956-ffa450edef68"
7869c71a232a191be9ba2ea56cfa22b73c18cf63,"DERBY-4290: suites.All hangs on phoneME/cvm - caused by cvm/phoneME error

Disabling org.apache.derbyTesting.functionTests.tests.lang.OrderByAndSortAvoidance on phoneME/CVM.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@790489 13f79535-47bb-0310-9956-ffa450edef68"
5ae0ca7e07941cfdaf4ec10b2ed189eb9937294d,"DERBY-4217 Make the default port for the suites.All run configurable with a system property.

fix issue with sed function in SysinfoTest when 5 digit port is used.
Contributed by Tiago Espinha (tiago at espinhas dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@790741 13f79535-47bb-0310-9956-ffa450edef68"
de0d25847053b657022d14a57d77ab4e6cb4a092,"DERBY-4187: Convert altertable.sql to JUnit

This change was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

This change replaces the altertable.sql test with a new AltertableTest.java
test using JUnit techniques rather than IJ input script techniques. The
original version of AlterTableTest.java was built using the SQLToJUnit tool
and then extensively modified afterwards to improve the test.

altertable.sql is removed from the old derbyall and derbylang suites, and
the new AlterTableTest is included in the lang._Suite test in its place.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@791027 13f79535-47bb-0310-9956-ffa450edef68"
7f0d0669d8c6694f7d2131840ff62d7febfe5522,"DERBY-4245: Sorting a table containing a CLOB fails after upgrade to 10.5.
Changed the mechanisms used to ""unread"" surplus bytes from the source stream.
The order is now:
 1) Use InputStream.mark/reset if available.
 2) Create a PushbackInputStream and associate it with the source stream if the
    the source stream is a FormatIdInputStream.
 3) Try using the Resetable interface.
Note that as part of this fix, mark/reset was disabled for LimitInputStream.

Reading too many bytes will only happen in 10.5 (and later) when an old-style
Clob representation is processed. Note that since the header format of existing
Clob values isn't changed as part of the upgrade logic, the situation may arise
in later versions as well if the database has been upgraded from 10.4 or
earlier versions.

Patch file: derby-4245-3a-unread_bytes_fix.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@791398 13f79535-47bb-0310-9956-ffa450edef68"
ceee49ee9c063a3b998fe4f346cfae4ef7ea2bb0,"DERBY-3834 Convert derbynet/runtimeinfo to JUnit

Contributed by Tiago R. Espinha (tiago at espinhas dot net) based on partial patch contributed by Erlend Birkenes (erlend at birkenes dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@792001 13f79535-47bb-0310-9956-ffa450edef68"
bb40bcbe2f36a911c2379b796a9167b16c51c368,"DERBY-712: Commit Suran Jayathilaka's first increment of work for sequence generators: this patch adds two new system catalogs, SYSSEQUENCES and SYSPERMS.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@792245 13f79535-47bb-0310-9956-ffa450edef68"
eaac4859b0bb11a0fa03f881c387614ffead1c99,"DERBY-3834 Convert derbynet/runtimeinfo to JUnit

Follow-up patch DERBY-3834-1 to fix javadoc issue.  
Contributed by Tiago R. Espinha (tiago at espinhas dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@792254 13f79535-47bb-0310-9956-ffa450edef68"
6a5890fee4c0d6f716e9423af6e78078c706ce45,"DERBY-3669: ClientXADataSource fetched from JNDI not identical as originally bound; some properties have String ""null"" instead of null

Changed ClientBaseDataSource.getReference() to match the embedded
implementation in ReferenceableDataSource, which already handles null
values.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@792434 13f79535-47bb-0310-9956-ffa450edef68"
9ca6a3de6e071026918940a205dac9e067c3a644,"DERBY-4221: First stage of localization work for 10.5: sort the existing localizations by sqlstate.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@792710 13f79535-47bb-0310-9956-ffa450edef68"
6bbc8fb50de1d59a43f98d861b6bef28dd8ab6e3,"DERBY-4155 jdbcapi/XATest.java doesn't seem to be running anywhere
(partial) This does not yet enable the test but just makes sure we rollback local connections so the test passes after the changes for DERBY-3319, which require this.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@793089 13f79535-47bb-0310-9956-ffa450edef68"
ad40edaf0e5de0f70ff4ba77e58938b1567a4383,"DERBY-4053 The local XA connections were not getting rollback during Database close and
this resulted into exception at connection close if the connection object had any pending
transaction. Made changes so that all the connections(except global XA connections) will 
have their transactions rolled back before those connections are closed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@793588 13f79535-47bb-0310-9956-ffa450edef68"
e4c98e2a04a9ae5ac57fc58793b2c0e2258f56e1,"Fixed a trivial javadoc warning for DERBY-712



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@793609 13f79535-47bb-0310-9956-ffa450edef68"
2eab5578748bc2f9eeb607987a95f4d7a49d7fb6,"DERBY-3814: failure in testAssertFailureThreadDump with weme 6.1 / JSR 169
  fixed by making the check on a trimmed string.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@793848 13f79535-47bb-0310-9956-ffa450edef68"
ec91e5d09745f333bac24cc4629212a7e1e59941,"DERBY-4221: Checking in localizations for 10.5.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@793870 13f79535-47bb-0310-9956-ffa450edef68"
f2c5f970bbdd3cf66a2d9f32b255e6ad05791da5,"DERBY-4155 (partial) Change XATestUtil.checkXATransactionView() to check result set as unordered to avoid intermittent testMorph failure.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@794106 13f79535-47bb-0310-9956-ffa450edef68"
07e72c3693550ede6e0bb10c5fc5612a39812eda,"DERBY-4292 creation of FileInputStream in org.apache.derby.impl.tools.ij.Main not wrapped in privilege block which can cause problems running under SecurityManager

Contributed by Tiago R. Espinha (tiago at espinhas dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@794112 13f79535-47bb-0310-9956-ffa450edef68"
d806534b9b982f318fa0b5785f327f562f4f4ebe,"DERBY-4307: testRunTests in RuntimeinfoTest fails periodically with Assertion failure checking output.
Corrected mismatch between expected output and actual output by changing the
output match string in the test. The error was triggered by a trivial text
modification in one of the localized messages.

Patch file: derby-4307-1a-test_fix.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@794276 13f79535-47bb-0310-9956-ffa450edef68"
e01e5d7972719e2814222d63dd15b3735803a72d,"DERBY-4304
I have made changes to NetworkServerControlImpl.java so we handle the exceptions during different steps of server shutdown and continue with the next step in shutdown rather than bailing out after the first exception. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@794303 13f79535-47bb-0310-9956-ffa450edef68"
57ac8e71c335a50e32e71833fb7ff7c55e16b657,"DERBY-4166 (partial) improvements to the mailjdbc test
Change backup user to be REFRESH (database owner) to work around DERBY-4295.

Contributed by Lily Wei (lilywei at yahoo dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@794955 13f79535-47bb-0310-9956-ffa450edef68"
d13a3accb5d1a016ac58abe95b2546a32d264a90,"DERBY-4311: BaseJDBCTestCase.assertErrorCode() never fails

Removed the broken methods.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@795092 13f79535-47bb-0310-9956-ffa450edef68"
c986862832588688405bb1560c9b1871b6814922,"DERBY-4305 - Make changes to test harness class j9_foundation 11 to support newer version of IBM's JSR169 implementation
  committing the change to move to weme 6.2


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@795095 13f79535-47bb-0310-9956-ffa450edef68"
934f02dab2412d7f4babe91266f819d2b6acffcb,"DERBY-4203 (partial) Change mailjdbc  system test to be able to restart with the existing database instead of creating a new one so it can be used for upgrade testing

This patch does not include the sttest changes.

Contrubuted by Lily Wei (lilywei at yahoo dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@795166 13f79535-47bb-0310-9956-ffa450edef68"
d9e100c4fb31bda69c08ce0970df33dfc2f8800a,"DERBY-4166  (partial) improvements to the mailjdbc test
Make databaseSize a recursive method to calculate the disk usage properly



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@795310 13f79535-47bb-0310-9956-ffa450edef68"
9bfc704bb7c0ce869aac81db54c25ac6d83d4bf8,"DERBY-4244: ALTER TABLE ASSERT in ADD COLUMN with autocommit off

This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

An ALTER TABLE ... ADD COLUMN statement which specifies to add a column to
a table may also include any column constraints which apply to that column.
For example, to add a column to a table and at the same time indicate that
the column should be the primary key of the table, this statement is used:

   alter table t0 add column c2 int not null default 0 primary key; 

If the table already contains a primary key, this statement fails, as the
table cannot have more than one primary key. However, the check for the
duplicate primary key was occurring at execution time, *after* the column
had already been added to the table. Then, during that same transaction,
subsequent ALTER TABLE statements affecting that table failed with internal
ASSERT messages because the data dictionary data structures were inconsistent.

This patch adds logic to the compilation processing of the ALTER TABLE
statement to check for a duplicate PRIMARY KEY constraint at compile
time, before the ALTER TABLE statement has begun execution. This way, when
such a duplicate constraint is rejected, the rejection occurs prior to
execution of the table, allowing for more straightforward cleanup.

The patch also re-enables a portion of the AlterTableTest, which had been
disabled due to this problem.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@795459 13f79535-47bb-0310-9956-ffa450edef68"
4e1fb4ccd1e6e29a66072fc4f884fbd982d2b37b,"DERBY-4316: Embedded and client don't agree on whether to continue after error in batch

Added a test case that shows the difference.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@795549 13f79535-47bb-0310-9956-ffa450edef68"
8b8fe9f97f0448bad8d76bec58bfc357aa2bfa05,"DERBY-4312 SQLException XJ215 on insert with setCharacterStream() and autocommit off in mailjdbc test

DERBY-4224 Commit after setAsciiStream() makes execution fail with the client driver

Use of a stream after performing commit was  incorrectly causing an exception.  Also fixes setBinaryStream();



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@796020 13f79535-47bb-0310-9956-ffa450edef68"
6a9299ae34e09ced1f511fe27f0958c455a94350,"DERBY-4304

When running in insane mode, the stack trace of the exception was not getting printed in the console log file logs/serverConsoleOutput.log The reason for this is that the code was
doing following
            consolePropertyMessage(""DRDA_UnexpectedException.S"",			
                exception.getMessage());
            consoleExceptionPrintTrace(exception);
That is, the stack trace printing was happening after the call to consolePropertyMessage. The call to consolePropertyMessage results into a call to consolePropertyMessageWork which may throw an exception back depending on the type of the error it is handling. If this method does throw an exception, then consoleExceptionPrintTrace does not get a chance to dump the stack trace into the logs/serverConsoleOutput. (Probably in sane mode, there is some other additional place where we do the stack trace printing and that is why we saw the stack trace despite consolePropertyMessage throwing an exception.) To fix the problem, I have switched the order of the 2 calls above and that makes sure that we do print the stack trace for debugging purpose. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@796316 13f79535-47bb-0310-9956-ffa450edef68"
75134de43d4205ae216bf39c6cc42e0b7229c4f4,"Backing out change 796316 for DERBY-4304 until I can figure out the cause of NPE in DerbyNetAutoStart
Starting test case 1. 
java.lang.NullPointerException 
at org.apache.derby.impl.services.jmx.JMXManagementService.unregisterMBean(JMXManagementService.java:286) 
at org.apache.derby.impl.services.jmx.JMXManagementService.unregisterMBean(JMXManagementService.java:277) 
at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStart(NetworkServerControlImpl.java:892) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37) 
at java.lang.reflect.Method.invoke(Method.java:599) 
at org.apache.derby.iapi.jdbc.DRDAServerStarter.run(DRDAServerStarter.java:236) 
at java.lang.Thread.run(Thread.java:735) 
Starting test case 2. 
java.lang.NullPointerException 
at org.apache.derby.impl.services.jmx.JMXManagementService.unregisterMBean(JMXManagementService.java:286) 
at org.apache.derby.impl.services.jmx.JMXManagementService.unregisterMBean(JMXManagementService.java:277) 
at org.apache.derby.impl.drda.NetworkServerControlImpl.blockingStart(NetworkServerControlImpl.java:892) 
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) 
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37) 
at java.lang.reflect.Method.invoke(Method.java:599) 
at org.apache.derby.iapi.jdbc.DRDAServerStarter.run(DRDAServerStarter.java:236) 
at java.lang.Thread.run(Thread.java:735) 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@796372 13f79535-47bb-0310-9956-ffa450edef68"
8298d7c30976920f215b3e6e25624d84d5ef9111,"DERBY-4157: Skip diffs for DERBY-4214 discrepancies in trajectories which end at the 10.5 branch rather than just in trajectories which end at 10.5.1.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@796517 13f79535-47bb-0310-9956-ffa450edef68"
df7db9ead4ea548486e0cbb09c36ec501456a70e,"DERBY-4313: JDBC.dropUsingDMD() may skip dropping objects

Only remove DDL statements from the list of statements to execute if
they were successful.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@796834 13f79535-47bb-0310-9956-ffa450edef68"
dc562462f0ac666aa59d795917217bdea10e1474,"DERBY-4248: Convert checkConstraint.sql to JUnit

This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

This patch contains a re-written copy of the checkConstraint test suite.
checkConstraint.sql was converted to JUnit format using the SQLToJUnit tool,
and the resulting Java program was finished by hand by Eranda. The patch
removes the old checkConstraint.sql and checkConstraint.out files, and
also removes checkConstraint.sql from the old derbylang suite. The new
CheckConstraintTest is added to the JUnit lang._Suite.

There is currently a portion of this test which is commented out, because
it provokes DERBY-4282. When DERBY-4282 is resolved, that portion of the
test should be re-enabled.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@796893 13f79535-47bb-0310-9956-ffa450edef68"
6d73220051432c0021794b984aac8d8441375ffa,"DERBY-4306

registeredMbeans is null but we do not check for nullability before executing following
if (registeredMbeans.remove(mbeanName) == null) 
which resulted in NPE. 

I have fixed the problem by checking for nullability first. registeredMbeans will be null if someone shuts down the engine first and then later on issues a command to shutdown the server. During the shutdown, registeredMbeans will be null and we should check for that nullability before accessing it.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@797147 13f79535-47bb-0310-9956-ffa450edef68"
892eebf132dd88f2b9c968e014e6955020f1dfc1,"DERBY-4304

During one of the server shutdown steps, DERBY-4306 was throwing a npe(we have fixed DERBY-4306 now) and the shutdown exception handling code was calling following method on that npe 
          consolePropertyMessage(""DRDA_UnexpectedException.S"", exception.getMessage()); 
          consoleExceptionPrintTrace(exception); 
but the call exception.getMessage() on npe was returning null and consolePropertyMessage is not written to handle null 2nd param for this call of consolePropertyMessage. But the work done by this particular type of consolePropertyMessage method is also done by the next call in the shutdown exception handling which is consoleExceptionPrintTrace. Because of this, I have replaced the consolePropertyMessage(""DRDA_UnexpectedException.S"", exception.getMessage()); call with consolePropertyMessage(""DRDA_UnexpectedException.S"", true); This change makes sure we do not run into npe when exception.getMessage() is null. I am not sure if we should enter a new jira entry to make consolePropertyMessage(""DRDA_UnexpectedException.S"", exception.getMessage()); handle a null 2nd param. 

junit tests with this change ran into intermittent upgrade test failures. 

One last step remaining is may be write a new method which is a subset of consolePropertyMessage because consolePropertyMessage handles the exception printing and then goes ahead and throws the exception again. For our purposes in this jira entry, we do not want the exception to be thrown back. instead, we want to move on to the next step in server shutdown. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@798347 13f79535-47bb-0310-9956-ffa450edef68"
2f0f84fcbfd1ea496d7b698101e0336a69704dcc,"DERBY-4304

During server shutdown substeps, catch any exception thrown, print it to console along with stack trace and then move on to the next substep rather than re-throwing the exception after console printing.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@798742 13f79535-47bb-0310-9956-ffa450edef68"
5b78c4e3fc7a1358a9910fd3a09bfcbd70e8a75d,"DERBY-4310 jdbcapi.XATest passes but shows Table/View 'APP.FOO' does not exist. under logs/serverConsoleOutput.log

DERBY-4155 jdbcapi/XATest.java doesn't seem to be running anywhere

The problem was actually an embedded issue that close() tried to reprepare the statement which would fail if dependencies had been dropped.  This caused a failur in proper shutdown of network server which could cause a hang after running  XATest.

Contributed by Tiago Espinha (tiago at espinhas dot net)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@800523 13f79535-47bb-0310-9956-ffa450edef68"
5a1f867629c89e2a9a9932a367d2788123ee4c63,"DERBY-3711 ; convert store/aes.sql to junit
  removing orphaned _sed.properties file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@800647 13f79535-47bb-0310-9956-ffa450edef68"
9d7aba6f78825d191bf0e708616171c6813c39a8,"DERBY-3710: For AES encryption, store checksum that is computed on padded key rather than unpadded key.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@800773 13f79535-47bb-0310-9956-ffa450edef68"
adf7016c32a0b0fa9a11c99eb357b7472c60caf3,"DERBY-4336: Remove Blob and Clob interface methods from the list of unsupported methods in UnsupportedVetter.
Removed now implemented methods in the Blob/Clob JDBC interface from the list of unsupported methods in jdbc4.UnsupportedVetter.
Also removed the update[BC]lob-methods in the ResultSet interface.

Patch file: derby-4336-1a.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@800799 13f79535-47bb-0310-9956-ffa450edef68"
397f968f167de54cd33ae086531fbf2e5bd764cd,"DERBY-4331

Fixes a number of sort avoidance bugs that were introduced by the fix 
for DERBY-3926.  This check in backs out the equi-join part of the DERBY-3926.  
The changes for this were isolated and were the only changes to 
FromBaseTable.java.  Backing out only this part of the 3926 checkin fixes new 
problems identified in DERBY-4331, and continues to fix the problem queries in 
DERBY-3926.  Knowledge of equijoin is no longer used as a factor for 
sort avoidance.

Also included is an update to the wisconsin tests.  A number of diffs 
resulted from different join order to maintain a sort avoidance plan.  2 
queries identified in DERBY-4339 no longer use sort avoidance.

The new test cases were reported as part of 4331 were added to the
OrderByAndSortAvoidance test.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@801481 13f79535-47bb-0310-9956-ffa450edef68"
a62e82e04888d507232c5975435dd9854d3527dd,"DERBY-4317: convert columnDefaults.sql to JUnit

This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

This patch converts the columnDefaults.sql test suite from the old Derby
harness into JUnit format. The initial conversion was performed using
the SQLToJUnit tool, and the remainder was converted by hand.

This patch removes the old columnDefaults.sql test and its master file and
properties file, and removes the test from the derbylang harness suite,
and adds the new ColumnDefaultsTest JUnit test to replace it.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@801492 13f79535-47bb-0310-9956-ffa450edef68"
cf61371e4b68fa70d71928e9c8cf6345942b0c8b,"DERBY-4263: PropertySetter isn't able to recognize JDK without version number in path.
Added a new algorithm for detecting JDKs on the system. The root search
locations are the same as before, but instead of relying on version numbers in
the JDK directory, jar files and the sub directory structure of the directories
are examined. The new algorithm will try to select JDKs from the same vendor as
the running JVM if possible.
If the new algorithm fails for some reason, the old one will be used.
If both the new and the old algorithm fail, a last attempt will be made by
configuring the build with the running JVM only.

If the more ""exotic"" approaches are used, a warning message will be printed
to default out. As before, more information can be extracted by setting
printCompilerProperties=true when invoking ant.

Patch file: derby-4263-1b-jdk_detection_by_jars.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@801924 13f79535-47bb-0310-9956-ffa450edef68"
8c02a4fe74d55fb7f292367e1d9199a693175c94,"DERBY-4308  Conduct release tasks for 10.5.2 release

Update status file for deprecated 10.5.2.0 release.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@802247 13f79535-47bb-0310-9956-ffa450edef68"
af99548a39885f98b237d8170495053c6c28a926,"DERBY-4344: Include the Japanese and Brazilian document sources in Derby source distributions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@802916 13f79535-47bb-0310-9956-ffa450edef68"
fecd96aa8c7f8d0eb81f5bb86d23e90934b7f3f0,"DERBY-4256: Allow ALTER TABLE to increase the max size of BLOB or CLOB

This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

This patch enhances the Derby ALTER TABLE command so that it allows the
maximum length limit of a BLOB or CLOB column to be increased. The patch also
adds some new regression tests verifying the new functionality, and adjusts
the text of the ALTER TABLE error message to make it more clear that it is
legal to increase the length of a VARCHAR, BLOB, or CLOB column.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@802985 13f79535-47bb-0310-9956-ffa450edef68"
37f886173d1aef43f5f3667fc77c3397fe9f008a,"DERBY-4282: Strange behavior with ""where current of"" in CheckConstraintTest

This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

This patch addresses an issue involving the binding of check constraints
in queries which use the ""where current of"" construction to refer to the
current row of an open cursor. The update statement was failing with a
""column not found"" error, complaining about the column referred to by the
check constraint.

The problem arises in the processing of ResultColumnList.expandToAll, which
is used to construct ResultColumn instances for the columns in the table;
these result column instances are then used when the check constraint
is bound. ResultColumnList.java was constructing the ResultColumn instances
as unnamed, which caused an internal name ""SQLCOL1"" to be generated, which
later then caused the check constraint binding to fail.

The solution is simply to ensure that the ResultColumn references that are
built by expandToAll are named according to the column names.

The patch also adds several new test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@803336 13f79535-47bb-0310-9956-ffa450edef68"
d49d499cb04baa48dd272f927276280e926ec365,"DERBY-4304

Committing changes which puts a new try catch block around all of the server shutdown code in case if there is some exception being thrown which is not getting caught. The catch block will log into the log file but if that fails for some reason, it will also just dump the stack trace using ex.printStackTrace(). 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@803548 13f79535-47bb-0310-9956-ffa450edef68"
d43d4c3ed6a930f51723aa928c5ef7f2cab0e482,"DERBY-4037

updated test to wait longer if expected background tasks have not cleaned up
expected pages yet.  Fast machines should see no slowdown in the test.  Slower
machines will wait up to 100 seconds before reporting failure after checking
iteratively for result every 1 second.  Also enhanced printout to identify
which test is failing between the 2 possibilities.

/mikem



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@803694 13f79535-47bb-0310-9956-ffa450edef68"
60d10e68b0bc0f0f8fa5cd852f7b0c867a78b2a7,"DERBY-1191 (partial) Some SQLExceptions, for example those generated from BrokeredStatements, do not print to derby.log even when derby.stream.error.logSeverityLevel=0

Here is a patch that takes the approach of adding a public static void logAndThrowSQLException(SQLException se) method and then calling that instead of just throwing the exception.

The initial patch only uses the method for EmbedConnection.checkForTransactionInProgress() which is the most important exception to log after the fix for DERBY-3319.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@803948 13f79535-47bb-0310-9956-ffa450edef68"
0a6a8464ef48ebdbabb92da0dd0902836ae5d2af,"DERBY-4330 NullPointerException or assert failure when re-executing PreparedStatement after lock timeout

Patch derby-4330c fixes this issue. The problem is that when a timeout
happens (or a deadlock), the result set tree for prepared statements
for some queries is partically in a closed, partially in an open
state. (The issue was reported for a join query, but exists for others
queries as well). This causes problems when the result set tree is
being reused, i.e. when the prpared statement is attempted re-executed
after the timeout, since the tree is expected to be fully closed at
that time, cuasing the assert or NPE.

The fix ensures that the tree is left in a fully closed state in such
cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@804271 13f79535-47bb-0310-9956-ffa450edef68"
587fc4091e28a07d585bffc274cfbc84498a76c1,"DERBY-4318: Convert inbetween.sql to JUnit

This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

This patch replaces the old harness-style inbetween.sql test suite with
a replacement JUnit assertion-based test InbetweenTest.java.

The patch adds the new test program, and adds it to the JUnit lang suite,
and removes the old inbetween.sql, inbetween.out, and inbetween.properties,
as well as removing inbetween.sql from the derbylang.runall suite.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@805275 13f79535-47bb-0310-9956-ffa450edef68"
425fcc91666c42f720471b348a1a16c77df1b6ff,"DERBY-4092: Don't allow invocations of table functions in contexts which expect a scalar function return value.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@805443 13f79535-47bb-0310-9956-ffa450edef68"
e0b34873f902988b2c7db240b0c706e499d4f49b,"DERBY-700: Gracefully handle OverlappingFileLockException if someone attempts to boot a database twice.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@805448 13f79535-47bb-0310-9956-ffa450edef68"
4f3766473fbf926075ca4d943dec31888ace3778,"DERBY-4081: BTreeController.comparePreviousRecord() may fail to release latch on left-most leaf

When a new value is inserted into a nullable unique index, the rows
immediately to the left and the right of the insertion point are
checked for duplicates. comparePreviousRecord() checks the rows to the
left of the insertion point. If the row immediately to the left is
marked as deleted, it will have to go further to the left until it
finds a row that is not deleted.

Now this check may cross page boundaries, and if it does so, and all
the rows to the left of the insertion point are deleted,
comparePreviousRecord() will return NO_MATCH before the latch
left-most leaf in the index has been released.

This means that the left-most leaf is still latched when
comparePreviousRecord() returns, which it is not supposed to be unless
the new value was actually inserted into the left-most leaf. The
unexpected extra latch may cause deadlocks or livelocks.

This patch adds a test that runs into a livelock because of the bug,
and it fixes the bug by releasing the latch on the left-most leaf
before returning NO_MATCH from comparePreviousRecord().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@805696 13f79535-47bb-0310-9956-ffa450edef68"
c73be02b7a9a4be6e24488371fd61d5c71f0f043,"DERBY-700: Some cleanup of ClassLoaderBootTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@805858 13f79535-47bb-0310-9956-ffa450edef68"
bbde61870c26efb02c17953a3511c21d4e05ce69,"DERBY-4213; sttest needs to be adjusted to not run out of disk space
  this change modifies the test in 2 ways: 
  - add in-place-compress so occasionally unused space gets released
  - adjust the code that picks rows for delete so more rows will get deleted


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@806699 13f79535-47bb-0310-9956-ffa450edef68"
c792810fa62f447c0fb232c4eda7c4aa4f2d6dcf,"DERBY-4344: Wire 10.5.3.0 into the upgrade test suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@807264 13f79535-47bb-0310-9956-ffa450edef68"
902adae736f8124cbb11040da7f28d35cf7b07d1,"DERBY-4344: Add 10.5.3.0 to list of releases in the STATUS file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@807266 13f79535-47bb-0310-9956-ffa450edef68"
00c7a208e692bd49f3a8eabeb114b64d46a17c06,"DERBY-4208 Parameters ? with OFFSET and/or FETCH

This patch implements the use of dynamic parameters with OFFSET/FETCH and adds new tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@807337 13f79535-47bb-0310-9956-ffa450edef68"
bdbc3cb2800e7c8e9ee35c8182e9007c0f84d106,"DERBY-4356: Better insulate ManagementMBeanTest from environment left over from previous JUnit tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@807685 13f79535-47bb-0310-9956-ffa450edef68"
05ef8bdc2d95c79b49a25bab5a8abc4f33ec2899,"DERBY-3819 ; 'Expected Table Scan ResultSet for T3' in test_predicatePushdown(....PredicatePushdownTest)
  Causing a number of asserts to be skipped when using a 64 bit platform.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@807733 13f79535-47bb-0310-9956-ffa450edef68"
edeac317fbf4457f3113e0fc43825a2fce8024b6,"DERBY-3478 Simple column names specified as part of ""AS"" clause in a table expression are ignored if the table expression is a view.

Patch DERBY-3478 fixes this issue and adds a new test case.

The fix adds a call to propagateDCLInfo also for views in
FromBaseTable.bindNonVTITables which seems to have been always
missing.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@808494 13f79535-47bb-0310-9956-ffa450edef68"
c9a120627f8238b9f7e412a4c77e84971c3e1e22,"DERBY-4087 Clean up debug printing of the abstract syntax trees after parsing, binding and optimization

Patch DERBY-4087-b, which improves debug-time printing of query trees.
Much of the changes concerns cleaning up when to use toString and when
to use printSubNodes, a pattern which is well-defined but was severely
broken, as well as including more data for each node, and sub-trees
not hitherto printed at all. Please see JIRA for mroe detail.

A new feature highlights aliases by suppressing printing of already
printed subtrees (the query tree is a DAG, not a pure tree).




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@808523 13f79535-47bb-0310-9956-ffa450edef68"
996c8945197056e4bb5d9b17b1bcb7e0bf5673ec,"DERBY-4087 Clean up debug printing of the abstract syntax trees after parsing, binding and optimization 

Temporary roll-back of changes (808523) to the statistics printing,
because they broke some old harness tests to change. It will take a
while to establish correctness of new masters, so rolling back for
now. Expect to roll forward again soon, though.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@808601 13f79535-47bb-0310-9956-ffa450edef68"
0b97566f9f98023c5640af519d9b61544f2f67fe,"DERBY-4348: Copy table content with ""INSERT INTO table SELECT FROM (...)"" statement leads to corrupt data

NormalizeResultSet can in some cases replace a holder object in its
DataValueDescriptor cache with a holder object that's also used in
BulkTableScanResultSet's cache, and thereby corrupting
BulkTableScanResultSet's fetch buffer when the holder object is
modified. This patch makes NormalizeResultSet store the cached holder
objects in a separate data structure to prevent them from being
replaced.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@808850 13f79535-47bb-0310-9956-ffa450edef68"
14fde85b4fde856bad57d0871b0aeab40f98c010,"DERBY-4087 Clean up debug printing of the abstract syntax trees after parsing, binding and optimization 

Reverting use of class Patter as it is not available in Foundation
1.2, so it cannot be sued in engine code. Originally committed as part
of svn 808523.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@808945 13f79535-47bb-0310-9956-ffa450edef68"
ae848fda4648af8773bd065b47651d38d572a2ed,"DERBY-4087 Clean up debug printing of the abstract syntax trees after parsing, binding and optimization

Follow-up patch, derby-4087-statistics. This fixes the wrong indentation seen
in runtimestatistics for scan qualifiers.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@809632 13f79535-47bb-0310-9956-ffa450edef68"
3392df8150326765310f52eab9a68254da75761d,"DERBY-4338 Network client raises error ""executeQuery method can not be used for update"" when sql is preceded by /* */ comments

This patch, derby-4338-d, fixes the seen bug, and also generalizes the
method used by the client driver to find the first significant
(non-comment) SQL statement identifier, i.e. a keyword. This is needed
by the client's statement classification logic. For certain input
strings the old method also gave wrong results, cf. the new test cases
added.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@809643 13f79535-47bb-0310-9956-ffa450edef68"
6391648e4d44f250a94dcafc4246ac5d0d8e882f,"DERBY-4367: Replace Utils.min and Utils.max in the client driver with standard methods in java.lang.Math.
Removed methods min and max in Utils, as they duplicate standard methods in
java.lang.Math. Replaced all invocations.

Patch file: derby-4367-1a-remove_min_max.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@810024 13f79535-47bb-0310-9956-ffa450edef68"
80eb35f4979e490ff1f44f255e6729ecccf52f74,"DERBY-712: Committed Suran Jayathilaka's create_drop_sequence_d.patch. This adds CREATE/DROP SEQUENCE commands.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@810151 13f79535-47bb-0310-9956-ffa450edef68"
f23592e2a9e7db18057dbe79dfb9e4223f7a04a9,"DERBY-2573 ; create a master ant target for generating all release artifacts
  First of possible increments; committing of the 'prepareforrelease' target,
  which does all the little ant steps before running ant release, and a few
  small checks.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@810178 13f79535-47bb-0310-9956-ffa450edef68"
2d9b17da03bc7cf0fa69014ec926c7c444aeede5,"DERBY-4284: All Columns become Nullable when Using left join

Only the columns from the right side of a left outer join, or
from the left side of a right outer join, should be changed to
nullable. This is done correctly in JoinNode.buildRCL(), but in
addition SelectNode.bindResultColumns() makes all result columns
nullable if the from list contains an outer join.

This patch fixes the bug by removing the code in SelectNode that
makes all columns nullable. This also made it possible to remove
a method in FromList that became unused after the fix. Also, some
test canons needed to be updated because IJ may change the
formatting/spacing slightly depending on whether the result
columns are nullable or not.

The fix also exposed another manifestation of DERBY-2916, where
some nodes saw the wrong nullability because they looked at the
columns before JoinNode.buildRCL() had done its job. This was
addressed by adding a workaround to JoinNode.getMatchingColumn().

Also, changes that had been made to wisconsin.out as part of
DERBY-2916 earlier in order to make the Wisconsin test run
cleanly despite the bug, could now be reverted because of the
workaround.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@810860 13f79535-47bb-0310-9956-ffa450edef68"
c712b88f49e21b3c989c9fd83fff55847d901454,"DERBY-4369: Give a more useful error message when join specification is missing

Made the join specification optional in the grammar. This makes the
parser go further before failing because of a missing ON clause, and
existing code that emits a more useful error message can be reached.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@812387 13f79535-47bb-0310-9956-ffa450edef68"
a505d5a3ee010f75a1e92a7153c66431d3588322,"DERBY-4361

It was not enough to just the shutdown the database in Windows in order to be able to delete
the log file later. The engine needed to be brought down too. I added code in JDBCDataSource for shutting down the engine and used this new method from the ClassLoaderBootTest to shut the engine down.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@812669 13f79535-47bb-0310-9956-ffa450edef68"
41a66f217c9175fe40b9c7caa38b559dbc67b704,"DERBY-4369: Give a more useful error message when join specification is missing

Backed out revision 812387 since it introduced an ambiguity in the
grammar, and also because making the join specification optional
appeared to be unnecessary for DERBY-4355.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@812895 13f79535-47bb-0310-9956-ffa450edef68"
6ffc230d98bb91ef15ed52b14da87464406b78f4,"DERBY-4355: Implement CROSS JOIN

This patch adds CROSS JOIN to the grammar and wires it into the
existing join machinery. It also adds test cases to verify that the
syntax is correctly understood, and it removes a negative test case
for CROSS JOIN from the db2Compatibility test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@813293 13f79535-47bb-0310-9956-ffa450edef68"
f10793f39823127d71d6fe7c97bb942f70a913cc,"DERBY-2895 ; convert lang/declareGlobalTempTableJavaJDBC30.java to JUnit
  original patch contributed by Ravinder Reddy


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@813528 13f79535-47bb-0310-9956-ffa450edef68"
130cfe698745ea0ca4c52260d2775c7d291d0c97,"DERBY-4363: Add simple benchmark for measuring GROUP BY performance.

This change introduces a simple benchmark which can be used to measure
GROUP BY statement performance. As an example of how to run the benchmark:

   java org.apache.derbyTesting.perf.clients.Runner -load group_by -init
   -load_opts numGroupingCols=2,numGroups1=10,numGroups2=100
   
(all on one long line). 

Over time, I anticipate that we will add other capabilities to this test to
measure other aspects of GROUP BY performance, but the benchmark seems
sufficiently functional at this point to be worth checking in.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@814237 13f79535-47bb-0310-9956-ffa450edef68"
86ce4291f9759224aede7313618cb64c50dc16b9,"DERBY-4347 ; Provide a property to increase network server start timeout for JUnit tests
  This introduces the optional property 'derby.tests.networkServerStartTimeout'
  which takes an int signifying the new wait time in seconds.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@814815 13f79535-47bb-0310-9956-ffa450edef68"
d15f717aaa222ae3f25ecfb09c14d8883dc964db,"DERBY-4359: Make UpgradeTrajectoryTest use the JDBC3 driver when running on Java 6 on trajectories which start before 10.2.2.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@815303 13f79535-47bb-0310-9956-ffa450edef68"
4ecccfacc9cc0fb8d7794c7bda9cb60f9df18658,"DERBY-4375

Changed the datetime format from 
Timestamp.valueOf(""0000-00-00 15:47:28.0"")
to 
Timestamp.valueOf(""2007-02-23 15:47:27.544"")

This change in data fixed the problem with the test with weme



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@815452 13f79535-47bb-0310-9956-ffa450edef68"
c7c53056ef21c16dc85276b6fce0adbe7bb0d875,"DERBY-4372: Wrong result for simple join when index is created

If the inner table in the join is restricted by an explicit or
implicit IN list on an indexed column, an index range scan is
performed between the smallest value and the greatest value in the IN
list.

If the first element in the IN list was NULL, the methods that
calculated the minimum and maximum values always returned NULL, which
resulted in a range scan between NULL and NULL, and no rows were
found. If some other element in the IN list was NULL, it was simply
ignored.

This patch makes the methods always return the min or max non-NULL
value, if such a value exists. Since the index scan is not supposed to
return the NULL values anyway, it is safe to ignore them. The edge
case where all the values are NULL still returns NULL for both min and
max. This makes the index scan return no rows, which is correct
because X IN (NULL, NULL) is never true, regardless of the actual
value of X.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@816531 13f79535-47bb-0310-9956-ffa450edef68"
5ce87314baf15589a31333927a4d13299f28dcad,"DERBY-4376: Simple select runs forever

A MultiProbeTableScanResultSet performes one index scan per distinct
element in the IN list. Changing the start and stop positions of the
underlying index scan, and moving to the next element in the IN list,
happens when the scan controller is reopened. However, the reopening
of the scan controller is controlled by TableScanResultSet, which
skips the reopening if the current start and stop positions are
guaranteed to make the scan return zero rows. Basically, if the
start/stop positions are initialized with NULLs, the scan is not
reopened, and we do not move to the next element of the IN list. We
therefore just keep on retrying at the same position in the IN list,
and the query execution is stuck forever.

This patch moves all the multi-probe logic out of TableScanResultSet
and into MultiProbeTableScanResultSet, and instead adds methods that
MPTSRS can override where different logic is needed. In short:

1) Initialization of the start/stop keys has been factored out of
TSRS.openCore()/TSRS.reopenCore() into a helper method
initStartAndStopKey().

2) MPTSRS overrides initStartAndStopKey() and updates the keys with
the actual probe value. This ensures that the keys now have the
correct values when TSRS.reopenCore() calls skipScan().

3) Methods in TSRS that take a probeValue argument have been removed,
since MPTSRS.initStartAndStopKey() now does all the work with
retrieving the probe value and updating the keys.

4) Since the next probe value is fetched earlier now
MPTSRS.reopenScanController() can no longer use the return value from
getNextProbeValue() to decide whether or not it should be a no-op (it
should be a no-op if the next probe value was null, which means that
the probe list has been exhausted). To ensure that we don't open scans
in those cases, set a flag in initStartAndStopKey() to indicate
whether or not the probe list was exhausted, and override skipScan()
to check that flag and return true if no new probe value was found.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@816536 13f79535-47bb-0310-9956-ffa450edef68"
fc6899bccb77d275af3c87fb4dd034a5217d17e9,"DERBY-4384

Disabling the test fixture testDynamicArgsMetaData from running in JSR169 environment because it makes a call PreparedStatement.getParameterMetaData() which is unavailable in JSR169.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@818730 13f79535-47bb-0310-9956-ffa450edef68"
4880a4179fb982bce11b3727935ee0d659af3f4e,"DERBY-3882: Expensive cursor name lookup in network server

Statements executed via the network client are always given cursor
names on the server, even if the user has not set a cursor name. When
a statement has a cursor name, the embedded driver will check on each
execution that there is no other statement in the same connection with
the same cursor name and an open result set. To perform this check,
the list of activations in the connection is traversed and each cursor
name is compared with the cursor name of the statement to be executed.

If the number of open statements in the connection is high, which is
very likely if ClientConnectionPoolDataSource with the JDBC statement
cache is used, traversing the list of activations and performing
string comparisons may become expensive.

This patch attempts to make this operation cheaper without performing
a full rewrite and use a new data structure. It exploits that the most
common implementations of java.lang.String cache the hash code, so
calling hashCode() on the cursor names in the list will simply read
the value from an int field after warm-up. By checking if the hash
codes of the cursor names match first, we can avoid many of the string
comparisons because we know that strings with different hash codes
cannot be equal.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@818807 13f79535-47bb-0310-9956-ffa450edef68"
d95d0e7f5004d65bdabeba2228e8fdebcb76224d,"DERBY-4386: JavaDoc warnings in several classes in impl/sql/execute/rts.
Replaced the non-ASCII character with an ASCII one.

Patch file: derby-4386-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@818815 13f79535-47bb-0310-9956-ffa450edef68"
7017a3517a29a37001afad516eff8fc1a52f269d,"DERBY-4342: SQLSTATE 38000 (NullPointerException) at inner self join and value(x1, x2...)

Override ValueNode.remapColumnReferencesToExpressions() in CoalesceFunctionNode
so that its arguments are properly remapped. The lack of remapping made the
generated code access the wrong result set, eventually causing the
NullPointerException.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@819006 13f79535-47bb-0310-9956-ffa450edef68"
3527fd560add66a734afd12f07f312b95eaf600a,"DERBY-3634 Cannot use row_number() in ORDER BY clause

Patch derby-3634-remove-2, which removes the old windowing code to
make the patch with new code (which fully replaces the old code except
for the tests) more readable. Before that code is committed, OLAPTest
is temporarily removed from lang/_Suite.java so as not to make
regresions fail.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@820483 13f79535-47bb-0310-9956-ffa450edef68"
9faef25ac067f28c900b6d82d51233d5e4ce181c,"DERBY-3634 Cannot use row_number() in ORDER BY clause

Follow-up to derby-3634-remove-2, which neglected to delete the now empty files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@820494 13f79535-47bb-0310-9956-ffa450edef68"
3b91e3b5a52917f16adb6103dfd145ac104f234b,"DERBY-4392 - Cleanup in CheckConstraintTest.testBuiltInFunctions(): remove test specific tables.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@821711 13f79535-47bb-0310-9956-ffa450edef68"
58355bbddb4c06fa936fe966eaeedb25e177efaf,"DERBY-4149 test failure in jdbcapi.InternationalConnectSimpleDSTest fixture testSimpleDSConnect on IBM iseries - Database '?' not found.

Fix the test so that it cleans up the database directory even if connection fails.  This does not correct the actual test failure, just the cleanup.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@822027 13f79535-47bb-0310-9956-ffa450edef68"
f8d48a3ce3cc2fb95b92cbfa7da4d98d39d4a271,"DERBY-4388: NullPointerException in RIGHT JOIN with NOT BETWEEN

Clone the left operand when performing not-elimination in
BetweenOperatorNode to prevent ColumnReferences from being shared, as
they can be remapped during optimization.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@822289 13f79535-47bb-0310-9956-ffa450edef68"
c4caf0a622be2c2a64fae9c705bab70894bd953b,"DERBY-4393 - lang.SequenceTest fails w/ ""Sequence 'ALPHA_SEQ' already exists."" on phoneME/cvm.
Do cleanup in testcases to make the testcases independent of running order.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@822641 13f79535-47bb-0310-9956-ffa450edef68"
2c7c65319c720af3ef49c93bd4f002ce8d89048e,"DERBY-4188 - ""XplainStatisticsTest"" fails on phoneME w/ 'The exception 'java.sql.SQLException: 'RS_ID' is not a column in table or VTI 'XPLTEST.SYSXPLAIN_RESULTSETS'.' was thrown while evaluating an expression.'
Do cleanup in testcases to make the testcases independent of running order. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@823066 13f79535-47bb-0310-9956-ffa450edef68"
cb4bd79a81f6397df6f48f0232c3b5952ae1b51a,"DERBY-4370: Implement JOIN ... USING syntax

Made the parser accept USING and added tests for the new syntax.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@823126 13f79535-47bb-0310-9956-ffa450edef68"
1079036a8f76b914fc5ac1c7fbb6426d742a5b2b,"DERBY-3824 - Rollback to savepoint fails on phoneME - xtestRollbackWillReleaseLaterSavepoints: ""T1"" row count: expected:<1> but was:<8>
Make sure T1 is empty when starting test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@823515 13f79535-47bb-0310-9956-ffa450edef68"
fc061da94b451ce1d46d2dcd26a1ca610930b506,"DERBY-3925 - testMetaDataQueryRunInSYScompilationSchema(.....upgradeTests.Changes10_4) fails on CVM/phoneME
Use 'territory=en' instead of 'territory=no' if the 'no' locale is not available.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@823555 13f79535-47bb-0310-9956-ffa450edef68"
c275ab3e7d5143518cc9e324dad86d3b9c26225e,"DERBY-4326

Rather than quiting out of ClientThread for InterruptedException and IOException, we should first check if the exceptions aree raised because of server being shutdown. If yes, then we should quit out of ClientThread. Otherwise, we should log the exception and close the client socket that got the exception and go back to the infinite loop waiting for next client connection.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@823659 13f79535-47bb-0310-9956-ffa450edef68"
6832893471add91f90ac539cd962b880c142a421,"DERBY-3024 (partial) Validation of shared plans hurts scalability

Moved some code that synchronized on a GenericPreparedStatement from
BaseActivation to GenericPreparedStatement for better encapsulation. This
also prevented the code from synchronizing on the same object twice, which
had a positive effect on the performance when the monitor was contented.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@824657 13f79535-47bb-0310-9956-ffa450edef68"
a74c428318411b3f7090e284ddc69362807307ff,"DERBY-4391: NullPointerException when comparing indexed column with result from a set operation

Prevent PredicateList.markReferencedColumns() from walking down to the
source of a ColumnReference if it is null.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@824694 13f79535-47bb-0310-9956-ffa450edef68"
b5105f32270f0ab98edd4d7f5dde5dbfde6658da,"DERBY-3002: Add partial support for ROLLUP variant of GROUP BY clause

This change adds an initial implementation of support for the ROLLUP
style of GROUP BY. Specifying ROLLUP causes Derby to perform multiple
nested levels of grouping in a single pass over the input data, returning
the results in a single result set.

Most of the changes were made to GroupedAggregateResultSet, which is
enhanced to be able to perform multiple levels of grouping in a single
pass over the (sorted) input data. There are also changes to the SQL grammar
to allow the new syntax to be specified, and changes to GroupByNode to
pass the rollup specification through to the execution engine.

Several tests were added to the OLAPTest test suite.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@824966 13f79535-47bb-0310-9956-ffa450edef68"
427750403c9e2babf06b23d61d575fc0a2bac672,"DERBY-4409 Make some tests run faster by using CleanDatabaseSetup + decorateSQL + rollback idiom

Patch OrderByAndSortAvoidance-faster-2 which speeds up
OrderByAndSortAvoidance from ca 5m to ca 1m.  Note that
setAutocommit(false) + rollback is not required here since the tests
do not modify the created schema objects (idiom variant :)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@825682 13f79535-47bb-0310-9956-ffa450edef68"
63a84e9070d609fc33952cb5bf5e4fd6215e25b1,"DERBY-4409 - Make some tests run faster by using CleanDatabaseSetup + decorateSQL + rollback idiom

DERBY-4409_min_diff.txt: Replacing 'System.exit(1);' with the original 'st.close();'


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@825847 13f79535-47bb-0310-9956-ffa450edef68"
2eb36cdaa9755f452ad0a4985b4eab7b4a4e6d66,"DERBY-4283: setEmbeddedCP should use return, not exit, on error

Since the setEmbeddedCP script is designed to be called from another
script, or sourced from the shell, it should use 'return' rather than
'exit', to report an error.

This change was contributed by Susumu Ishizuka (susumuishizuka at ieee dot org)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@826263 13f79535-47bb-0310-9956-ffa450edef68"
fe2341f8c4136d38b4a6bbd1aa973d5ab51b84ac,"DERBY-4407: StringIndexOutOfBoundsException in ij when result has no columns

Raise a compile-time error if a query returns no columns.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@826616 13f79535-47bb-0310-9956-ffa450edef68"
e7e328d67ab39e8173d0a36dfcbf06262b20a7ab,"DERBY-4412: Make getNegation() abstract in BinaryComparisonOperatorNode and UnaryComparisonOperatorNode


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@827035 13f79535-47bb-0310-9956-ffa450edef68"
07d11082ce8fc582f43f0e8aaf86fa80d699f3cf,"DERBY-887: Remove implicit and explicit casting between BOOLEANs and datatypes other than BOOLEAN and strings. This conforms Derby behavior to the SQL Standard.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@827505 13f79535-47bb-0310-9956-ffa450edef68"
3ff5ce3d3408511cbf02d1bae7e355814a7f0626,"DERBY-4415: Add ability to plug customized AST printers into the compiler.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@827760 13f79535-47bb-0310-9956-ffa450edef68"
09ea7c020d7aa06f1679f645cb988a33a3ebd9b3,"DERBY-3473; write test cases to test locking during tree operation
  patch contributed by Anurag Shekhar (anurag dot shekhar at sun dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@827793 13f79535-47bb-0310-9956-ffa450edef68"
69d36a09b6858c9db0fda48546da459f83423d74,"DERBY-3473 (write test cases to test locking during tree operation)
	 - fixing a javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@828228 13f79535-47bb-0310-9956-ffa450edef68"
3070a028aa8c11afb7b171ea9648c43d6d5eb9d5,"DERBY-3809: Add a SHOW FUNCTIONS command to ij

Patch contributed by Sylvain Leroux <sylvain@chicoree.fr>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@828950 13f79535-47bb-0310-9956-ffa450edef68"
5825a32c736ea1bfaa8a0c1e34361bac4a65a028,"DERBY-4411: Scalar subquery erroneously rejected for not returning exactly one row

Make sure a ProjectRestrictNode is not considered a no-op if it only
contains constant restrictions (like 1=0).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@829022 13f79535-47bb-0310-9956-ffa450edef68"
a9ce08817be091aba7d5d542b60f291927303c8b,"DERBY-4410: NullPointerException when USING clause contains all columns in both join tables

Adjust index properly when looping through the result columns and
expanding *. The old code didn't expect the number of columns to
decrease after the expansion and could therefore potentially skip
the processing of some of the columns.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@829034 13f79535-47bb-0310-9956-ffa450edef68"
fd6e2d96102073637306251b911e660040a22896,"DERBY-4414: NullPointerException with JOIN...USING and invalid table name in select list

Fail gracefully if the table name in an asterisked identifier chain
doesn't match any of the joined tables.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@829041 13f79535-47bb-0310-9956-ffa450edef68"
468162a6f92d1079795a0de81d58711add45a9d4,"Print the Predicate.isQualifier field when displaying ASTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@829053 13f79535-47bb-0310-9956-ffa450edef68"
86f2ca10e2a6c6394ae7b62b6cea1f7fc144b298,"DERBY-4357: Add public api for restricted table functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@829078 13f79535-47bb-0310-9956-ffa450edef68"
7a9ce7e9e625cde2953831e1f62ee1a0ff50cbdc,"DERBY-3634 Cannot use row_number() in ORDER BY clause

Patch derby-3634-newimpl-4. This reimplements the ROW_NUMBER
functionality after it was moved in svn 820483 and 820494. The patch
makes ROW_NUMBER usable in all places it should be usable according to
the standard (modulo the current Derby SQL subset).  So, DERBY-3634 is
also fixed with this patch. The ordering problem seen in DERBY-4069 is
also fixed. More test cases have been to OLAPTest for ROW_NUMBER
usage.  The patch also adds some amount of generalizations to pave way
for other window functionality, but this needs more work.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@829155 13f79535-47bb-0310-9956-ffa450edef68"
9d24308dd44df406f0997fad87f9b34f31811d13,"DERBY-4413 INSERT from SELECT DISTINCT gives assertFailure (sane), or NPE (insane) in presence of generated columns

Patch DERBY-4413-2 makes sort accept columns that are null. In sane mode, it is checked that in such a case, the
empty column is not part of the sort key.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@829410 13f79535-47bb-0310-9956-ffa450edef68"
41df0774ed1f5fadba0007ccda6154e21d069072,"DERBY-4267: Investigate why Derby 10.5.1.1 is not available in the maven2 repositories.
Committed final patch for the first iteration of Maven 2 POMs for generating
Derby artifacts. They were used to generate artifacts for Derby 10.5.3.0.

Patch file: derby-4267-2c-using_ant_task.diff (slightly modified; fixed typos)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@830107 13f79535-47bb-0310-9956-ffa450edef68"
dd2f5a821183e422fc3aacae0c16ca4ee8c8b927,"DERBY-4421: Allow visitors to process the nodes bottom-up

Added the method visitChildrenFirst() to the Visitor interface to
allow the visitor to specify whether they should walk the tree
top-down or bottom-up. Implemented the method in all existing visitors
and made it return false to preserve the current behaviour with
top-down walking.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@830154 13f79535-47bb-0310-9956-ffa450edef68"
cfc4f39b5dca93dd953e6c2a3943308fd3a67eab,"DERBY-4120: derbyclient.jar is not a complete OSGi bundle

OSGi bundles are JAR files with special information in their manifest to
enable the OSGi class loader to provide dynamic load/unload functionality.

This change adds some additional information to the manifest of
derbyclient.jar to support its use as an OSGi bundle. In particular,
it marks the org.apache.derby.jdbc package as exported, since that package
contains the ClientDriver and ClientDataSource classes which applications
are likely to use directly.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@830545 13f79535-47bb-0310-9956-ffa450edef68"
999d8180186b59ace83925913178d456fb0dc3a3,"DERBY-4427 - TestConfiguration.existingServerSuite(....,portNumber) must use the supplied portNumber


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@830897 13f79535-47bb-0310-9956-ffa450edef68"
a2d0847189322463e06ea49dbf47d60e6b0e0895,"DERBY-4357: Pass projections and restrictions through to RestrictedVTIs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@831072 13f79535-47bb-0310-9956-ffa450edef68"
aebfb28875fc7d4463550a23a471c2b203593335,"DERBY-4421: Allow Visitors to process the nodes bottom-up

Removed redundant calls to stopTraversal() in the acceptChildren()
methods, since stopTraversal() will always be checked in
QueryTreeNode.accept() before visit() is called.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@831244 13f79535-47bb-0310-9956-ffa450edef68"
6b8ccdd94378fb7211470195b273b41eea6197d9,"DERBY-4419: NPE with INSERT .. SELECT .. UNION and identity columns

The following SQL was causing problems:

    create table t3(x int, y int generated always as identity);
    insert into t3(x) select * from t1 union select * from t2;

During the insert, the value of column Y is not specified by the INSERT
statement, and therefore Derby notices that Y's value is to be generated,
and so Derby generates code to compute a value for Y when inserting each
row into T3.

When Derby is compiling the INSERT statement, Derby checks that the
column information for the column(s) to be inserted matches the correpsonding
column information for the column(s) that are selected by the SELECT
clause in the INSERT statement.

In the above example, Derby expands the ""*"" expression for each of tables
T1 and T2, and verifies that the result is a single integer column, thus
matching column X in T3.

However, at that point in processing, the ResultColumnList also contains
information about column Y, since its value is to be automatically generated.

Therefore, Derby needs to skip over such columns during datatype checking;
these columns are marked isGeneratedForUnmatchedColumnInInsert, so this
change causes Derby to check that value.

A similar behavior (DERBY-4425) occurs for columns which are generated by
expressions, which is a new feature in recent versions of Derby.

This change also fixes DERBY-4425. A separate commit for DERBY-4425 will
add an additional regression test for that situation.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@831304 13f79535-47bb-0310-9956-ffa450edef68"
c617243586bb6d318633eb5129bfdab6477b9b7f,"DERBY-4425: NPE with INSERT .. SELECT .. UNION and generated expressions

This patch adds a test which confirms that DERBY-4425 is fixed. The code
change which resolved DERBY-4425 was performed as part of fixing DERBY-4419,
since the same code change fixes both symptoms, so this is a test-only patch.

subversion revision 831304 contains the DERBY-4419 code change.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@831319 13f79535-47bb-0310-9956-ffa450edef68"
f6fa942964db1221f611549e413e44bc78d8dbcc,"DERBY-4357: Check in logic to push restrictions into VTIs when the optimizer chooses to siphon the vti into a hash table.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@831454 13f79535-47bb-0310-9956-ffa450edef68"
9fe8f3cca036853ed6e959bc9c353bbbb1ffb0e9,"DERBY-4151; java.net.ConnectionException in J2EEDataSourceTest with network server on IBM iseries;
	adding some close() calls in 3 fixtures allowed for proper processing on cleanup


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@831584 13f79535-47bb-0310-9956-ffa450edef68"
52a0f73df720ca1e2c8f9ced4cb3b495da40b652,"DERBY-3376: Test case in GrantRevokeDDLTest commented out

This change adds some additional tests to GrantRevokeDDLTest.

The test cases were originally contributed by Yip Ng (yipng168 at gmail dot com)

The tests were originally written during buddy testing of Derby 10.2, and
were committed as part of DERBY-1736, but were commented out at the
time due to DERBY-1589. The test cases now pass, and so this change
enables the tests as part of GrantRevokeDDLTest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@831762 13f79535-47bb-0310-9956-ffa450edef68"
a3a5e961af3cc5c74af6e4eab53b0f19611dec71,"DERBY-4357

Trivial javadoc fix



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@832096 13f79535-47bb-0310-9956-ffa450edef68"
48229dfd0bd83ed052c8ff6d2c528dd049eb0695,"DERBY-4429 - Let StressMultiTest read Threads and Minutes to run as system property


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@832364 13f79535-47bb-0310-9956-ffa450edef68"
7a27cabe5354712a3e53028c73f501e1bf069c1a,"DERBY-4420: NullPointerException with INSERT INTO ... from EXCEPT/INTERSECT

The failing code in ResultSetNode.setTableConstructorTypes() was meant
to handle the case where the node represented a table constructor (aka
VALUES clause). UnionNode already had an override to make it a no-op
unless it actually represented a multi-row VALUES clause that had been
rewritten to a union of single-row VALUES clauses.

Since a VALUES clause is never rewritten to EXCEPT or INTERSECT, the
correct handling is to make setTableConstructorTypes() a no-op in
IntersectOrExceptNode. Rather than adding an empty override in
IntersectOrExceptNode, the code was moved from
ResultSetNode.setTableConstructorTypes() to
RowResultSetNode.setTableConstructorTypes(), and the default
implementation in ResultSetNode was left empty.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@832379 13f79535-47bb-0310-9956-ffa450edef68"
38a34c2c21583cb65ca0674b271b443e1d25ef4a,"DERBY-4357: A couple more tests for restricted vtis.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@832423 13f79535-47bb-0310-9956-ffa450edef68"
8a78aa568ee5ee19a95eae661a731af00e29835d,"DERBY-4423: Convert dropTable.sql into JUnit

This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com).

This change replaces the dropTable.sql test suite by an equivalent JUnit
test suite named DropTableTest.java. dropTable.sql is removed from the
old harness suite and DropTableTest is added to the derbylang JUnit suite.

There are no functional changes to the test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@833055 13f79535-47bb-0310-9956-ffa450edef68"
e737c81f9ad60884c43fbbb0bb267f3234bd56b4,"DERBY-4438 - 'Table/View 'T1' already exists in Schema 'APP'' in lang.DropTableTest on phoneME/cvm
Add some clean up to allow any execution order of tests. phoneME/cvm executes tests in a different order than other jvms, which caused problems.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@833414 13f79535-47bb-0310-9956-ffa450edef68"
f8b521a52845c02f690f446018d82c104a3daf38,"DERBY-4365

For JOIN, we were doing a no-op in the method bindUntypedNullsToResultColumns(ResultColumnList) rather than checking for untyped nulls for the left and right resultsets. The changes through this commit now checks for untyped nulls for joins. Added couple more tests (including where a CAST of NULL values should work fine). The derbyall and junit suites ran fine with the exception of known intermittent (DERBY-3757) 'ASSERT FAILED transaction table has null entry when running new StressMultiTest 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@833430 13f79535-47bb-0310-9956-ffa450edef68"
2ca6c802c65179e77ed678f1e95d2f1bdae5cda9,"DERBY-4124: Remove double-checked-locking from EmbeddedDataSource.findDriver

This change ensures that EmbeddedDataSource.findDriver always synchronizes
its access to the 'driver' member variable. The previous code performed
unsynchronized access to the field, and then, depending on the results of
the unsynchronized access, performed synchronized access.

This double-checked-locking idiom is unsafe and incorrect, and this change
replaces it with a simpler always-synchronized access.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@833888 13f79535-47bb-0310-9956-ffa450edef68"
b1a01b25b8c7a96d1f1a219ae304e6cc3079e379,"DERBY-4432: Memory leak when attempting to boot non-existing database with the in-memory back end.
Fixed memory leak happening when trying to boot non-existing databases by using a dummy store to handle operations that don't require a proper store.
Added a regression test (must be run with a small Java heap).
Also changed the existing test by using a discarding log writer to avoid writing a huge log file to disk (a message is logged for each failed boot).

Patch file: derby-4432-1a-mem_leak_fix.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@834418 13f79535-47bb-0310-9956-ffa450edef68"
aa86a51fda8ec2cadd348531583c26de2db02302,"DERBY-4435

collation[] object was not getting initialized and that was the cause of NPE. Fixed the problem by initializing the arrary correctly.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@834725 13f79535-47bb-0310-9956-ffa450edef68"
9df9f253e74da4acb2fe6b1c54b22bfafeef27d1,"Simplified DropTableTest

  - use more helper methods from BaseJDBCTestCase

  - changed instance variables into local variables to allow garbage
    collection to reclaim space when the test has completed


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@835114 13f79535-47bb-0310-9956-ffa450edef68"
05829c131cc1c52cfcacba4a624da657b448b7c0,"DERBY-858 - ijConnName test output order is non-deterministic
  Also adjusted similarly vulnerable tests tools/ij5.sql, and junit tests 
  derbynet.SysinfoTest and derbynet.ServerPropertiesTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@835153 13f79535-47bb-0310-9956-ffa450edef68"
e0939287630107e3ae8139e285e2fa6c2606550a,"DERBY-4102: Assert failure or ClassCastException in EmbedBlob when retrieving BLOB >= 32K.
Made Derby store the stream content to a temporary location when it knows the stream isn't resetable. Small streams (< 32K) will be stored in memory, larger streams will be written to disk (the switch happens transparently).
Added the repro as a regression test.

Patch file: derby-4102-1a.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@835286 13f79535-47bb-0310-9956-ffa450edef68"
88e75e5be02c4a9f597fac6583a86c8cf07c977f,"DERBY-4436: Refactor existing in-memory back end tests and add new tests for dropping database.
Added a new utility class to deal with in-memory databases (convenience methods, much like BaseJDBCTestCase and friends).
Adjusted existing tests to use MemoryDbManager.
Added new test DropWhileConnectingTest to study the behavior of Derby when several threads connect and/or execute queries when the database is being shut down. Written primarily to test the upcoming feature for blocking new connections while certain operations are taking place (for instance database shutdown and drop).
Note: Some features have been disabled in the committed code, awaiting the drop database functionality (DERBY-4428). Some additional changes may also be required.

Patch file: derby-4436-1b-inmem_test_changes.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@835334 13f79535-47bb-0310-9956-ffa450edef68"
9d08b6af3b312b2a81d1c92a3b27f356bb0107c4,"DERBY-791: Make InsertNode visitors process the target column list.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@835417 13f79535-47bb-0310-9956-ffa450edef68"
93998beaf888a60b6e22f6c21aa177f27e97c60a,"DERBY-4430: Make ij's SHOW and DESCRIBE commands more db agnostic

Use database meta-data to decide whether to convert table and schema
names to upper or lower case, or keep them in mixed case, in the SHOW
and DESCRIBE commands.

Patch contributed by Sylvain Leroux <sylvain@chicoree.fr>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@836277 13f79535-47bb-0310-9956-ffa450edef68"
51cf09532cffab471febb9f03b649e47823ddbbf,"DERBY-1459: Removed unused instance variable introduced by this issue.

Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@880664 13f79535-47bb-0310-9956-ffa450edef68"
d0db7ff196dd348e6ee7bec553b89bafd827f682,"DERBY-3809: Add a SHOW FUNCTIONS command to ij

Catch AbstractMethodError raised when the driver doesn't implement the
getFunctions() method introduced in JDBC 4.0, and report that SHOW
FUNCTIONS is not available for the driver.

Patch contributed by Sylvain Leroux <sylvain@chicoree.fr>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@880680 13f79535-47bb-0310-9956-ffa450edef68"
488a7493ac1c0bfe824d1ed2c0b464b3bc6b292a,"DERBY-4436: Fixed JavaDoc error in DropWhileConnectingTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@880690 13f79535-47bb-0310-9956-ffa450edef68"
568cbf1b152b7cf2c1be465e606fd6ea125ee93e,"DERBY-4416: Handle comparison of two constants as a boolean constant

Added a visitor that walks the query tree bottom-up and replaces
occurrences of constant expressions like 1<>1, 2<3 and 1=1 with
constants TRUE or FALSE values as appropriate.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@880693 13f79535-47bb-0310-9956-ffa450edef68"
377790f729e77bb6095ac65e4ef21d6cd0c1d5ca,"DERBY-4416: Clarify javadoc


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@880791 13f79535-47bb-0310-9956-ffa450edef68"
97e996cf5bf0aa794c1646aa8b4d0ec224964845,"DERBY-4402

Group by should not allow aggregates in it. We were able to detect ""froup by (sum(j))"" but not ""group by (4+sum(j))"". That's because we were not looking deep enough inside the group by column.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@881074 13f79535-47bb-0310-9956-ffa450edef68"
064b728158a401249702ceef512f210128ec8fbc,"DERBY-4402

Removing unnecessary if true check from earlier checkin



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@881444 13f79535-47bb-0310-9956-ffa450edef68"
d491ea3c48e476b9a3cd1f22bf3d365aab5cbb94,"DERBY-4380: Subqueries not allowed in ON clause

Removed the check that disallowed subqueries in ON clauses. Also
removed the double binding of the ON clause in JoinNode since it made
the query tree inconsistent for some kinds of subqueries.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@882106 13f79535-47bb-0310-9956-ffa450edef68"
06b4ea434287738f4e7da532ed7f4ec09029e531,"Removed empty directory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@882129 13f79535-47bb-0310-9956-ffa450edef68"
fa292b99f0de0c5a1ded9244ce7dbeb4050284be,"DERBY-651: Add CREATE/DROP TYPE. This initial increment does not allow you to create table columns or parameters whose types are used-defined.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@882569 13f79535-47bb-0310-9956-ffa450edef68"
dcd2b0434d78beea3de4700711cfabebb4f08e54,"DERBY-4450 GROUP BY in an IN-subquery inside HAVING clause whose select list is subset of group by columns, gives NPE

Patch derby-4450b + Knut's simplification of the autocommit call in GrooupByTest#testDerby4450.

This solves the problem seen in this issue, which was a regression
from DERBY-681.  The crux of the problem is that a PRN is added in the
result set tree without adjusting a higher level reference so that
wrong code is generated. The solution here is to reuse the result
column list in the inserted PRN, so that reference from above will
point correctly even after the PRN insertion (more details in JIRA).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@882732 13f79535-47bb-0310-9956-ffa450edef68"
7a5b1d07853497727812cc9ada20209eea7b6a77,"DERBY-2024: Remove JUnit utility method JDBC.vmSupportsJDBC2

Current versions of Derby require a minimum of either JDBC3 or JSR169, so
we no longer need the utility method vmSupportsJDBC2.

This change removes the unneeded method, and replaces the calls to it with
calls to vmSupportsJDBC3.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@883000 13f79535-47bb-0310-9956-ffa450edef68"
b36288fdc26c722f09a17a9ee5cb52f6e69b0bba,"DERBY-4428 (partial): Add proper delete mechanism for in-memory databases
Added the code required in the in-memory back end storage factory.
Some logic is required to remove the data store from the list of databases when
a database is dropped. Note that this logic isn't fully general purpose - it is
partly dependent on how the monitor / StorageFactoryService works.

Patch file: derby-4428-1b-in_memory_specific_delete_code.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@883297 13f79535-47bb-0310-9956-ffa450edef68"
bc90366ad8000e9f677f7efbf493fd27c5d40b3b,"DERBY-3225: Include demo README information in demo/programs/readme.html

This change updates the README information for the demo/programs area of
the binary distribution to have additional information about the ""localcal"",
""scores"", and ""vtis"" demos. These demo programs were added in DERBY-1936,
DERBY-1993, and DERBY-3129, respectively.

This change also includes the build.xml files for the ""localcal"" and ""scores""
demos into the binary distribution.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@883571 13f79535-47bb-0310-9956-ffa450edef68"
18373c4fcf14f0316cd37ce8a384ad919f3fd5a3,"DERBY-4428 (partial): Add proper delete mechanism for in-memory databases 
Refactored code into getProtocolLeadIn()
Changed an ASSERT, as it expected equality between something that couldn't be
equal unless the default storage back end was used. It failed for the in-memory
back end, and would also fail for all other back ends. This code path hasn't
been enabled for other storage back ends before now (deleting the service root).

Patch file: derby-4428-3b-canonical_name_handling.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@884105 13f79535-47bb-0310-9956-ffa450edef68"
47611b15f9599718c37fa63b0b94c86658357d52,"DERBY-4451 ArrayIndexOutOfBoundsException or ASSERT FAILED when inserting generated columns out of order

This patch fixes this issue as well as DERBY-4448, since they share
the same underlying problem: the former way of checking for illegal
override of generated columns in the presence of an explicit target
column list failed to look below the top level UnionNode in a table
constructor.

This specialized treatment for the case of an explicit target column
list has been removed for INSERT (it was shared with logic for
UPDATE), so checking is now done by the code for the case of no
explicit targte column list.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@884163 13f79535-47bb-0310-9956-ffa450edef68"
c406220e3867a189ce3229090a66d31ff185de83,"DERBY-4428: Add proper delete mechanism for in-memory databases 
This patch adds the final pieces to enable the drop attribute for in-memory
databases. Usage: 'jdbc:derby:memory:myDB;drop=true[;user=...;password=...]'
If successful, an exception with SQL state 08006 is raised.

* EmbedConnection
  Added parsing of the drop attribute. 'true' yields true, everything else
  results in false (i.e. non-boolean values are accepted and silently ignored).
  Added code to drop a database.
  Introduced XJ048, raised when drop is combined with shutdown.
  Added code to check for attribute conflicts (create, restore).
  Added utility method to put the current thread to sleep.

* DatabaseContextImpl
  Added a comment.

* Monitor
  Added code to disallow dropping databases not using the in-memory back end.

* Attribute
  Added constant for the 'drop' JDBC connection URL attribute.

* SQLState, messages.xml, lang.ErrorCodeTest
  Added two new messages: 08006 (database dropped) and XJ048 (conflicting
  boot attributes)

* Other tests
  Enabled drop functionality and tests using it.

Patch file: derby-4428-2b-generic_db_drop.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@884542 13f79535-47bb-0310-9956-ffa450edef68"
d039ceddcefd0991b94034f6026df625dd55b2b6,"DERBY-651: Add ability to declare UDT columns, parameters, and return values.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@884970 13f79535-47bb-0310-9956-ffa450edef68"
edea8ab813c19568308e2295b1b9ba0168cb4b62,"DERBY-651: Hopefully fix an instability in UDTTest: different timestamp results on some Java platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@885114 13f79535-47bb-0310-9956-ffa450edef68"
53c606b0c1c04a211ccbd7784511fc1165cedbe2,"DERBY-651: Expand the UDT javadoc a bit.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@885118 13f79535-47bb-0310-9956-ffa450edef68"
a8db665889cb4a4f9f58a3b403cec65fbf69c6e2,"DERBY-4442: Default value and identity in an INSERT result set evaluated too early

Always add a ProjectRestrictNode on top of the source result set for an
insert if the source columns are not ordered the same way as the target
columns, or if inserting into a subset of the columns, and the source is not
a table constructor. Then the adding of default values to the source result
column list happens on top of the original source result node, and not
inside that node. This means that the source result is produced before the
default values are added, and the generation of the defaults happens at the
correct time.

As a side-effect, these other issues are fixed:

DERBY-3 Identity column not filled consecutively with ""insert ... select distinct""
DERBY-4433 Cannot insert from EXCEPT/INTERSECT when target table has more columns than the source

Much of the added code is actually old code revived from the Subversion
history. Before DERBY-1644, we used to put a ProjectRestrictNode on top of
the source result if it was a SetOperatorNode. The code that inserted the
ProjectRestrictNode was added back and changed to operate on ResultSetNode
instead of SetOperatorNode.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@885421 13f79535-47bb-0310-9956-ffa450edef68"
bc009a86e34dad444a47f9273d61a5ddd372cff0,"DERBY-651: fix typo in javadoc.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@885489 13f79535-47bb-0310-9956-ffa450edef68"
94509ae5845f51e22d434ecc01ac3bf5c4611370,"DERBY-4454: Disable a test case on jsr169 because DECIMAL support is not as complete on that platform.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@885531 13f79535-47bb-0310-9956-ffa450edef68"
c341dc445404dfebb07033082b5083eb2647238f,"DERBY-4426 With generated columns, INSERT with DEFAULT inside a VALUES clause inside a UNION fails

Patch derby-4426c, which fixes this issue. We ensure that DEFAULT is
only used in a top level VALUES clause, conformant with the standard. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@885595 13f79535-47bb-0310-9956-ffa450edef68"
e0ba78cce75da0eac314e9b530ebfd16fb075696,"DERBY-4413 INSERT from SELECT DISTINCT gives assertFailure (sane), or NPE (insane) in presence of generated columns

After DERBY-4442 went in, the exception to the ASSERT check we made in
the original fix for this issue should be rolled back, so as to
provide a better internal consistency check. Patch derby-4413-rollback
does this.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@885659 13f79535-47bb-0310-9956-ffa450edef68"
646eea3cb509444e1891ae6ae237aa99fcee14d7,"DERBY-4457: 'Column value mismatch' in 'testDistinctInsertWithGeneratedColumn(...lang.DistinctTest)' on Jvm 1.5, 1.4, phoneME.

SELECT DISTINCT may return rows in different order on different JVMs. Made the test independent of the actual ordering.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@885726 13f79535-47bb-0310-9956-ffa450edef68"
4b28cb5b2a15e1743eeae833e55a94de12973b3d,"DERBY-4460: test_031_derby_4413 failed in nightly regression run

Added an ORDER BY clause to ensure consistent ordering across
different platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@886008 13f79535-47bb-0310-9956-ffa450edef68"
e594ab0b752ec24a6bf45d0abe457e194b0ed4fb,"DERBY-3947: Cannot insert 994 char string into indexed column

A table created with ""CREATE TABLE t (x varchar(1000) primary key)"" could
encounter problems when a particularly long value of ""x"" was inserted,
because the index that was automatically created to support the PRIMARY KEY
constraint was created with a small page size. Such an insert statement
would get an error like: ""Limitation: Record of a btree secondary index
cannot be updated or inserted due to lack of space on the page.""

This change enhances TableElementList so that, when creating an index for
a constraint, it now checks the approximate length of the columns in the
index, and, if they are sufficiently long, automatically chooses a larger
default page size for the index conglomerate.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@886162 13f79535-47bb-0310-9956-ffa450edef68"
2af7c3dac041ba6bec996f53777ec68633af45e1,"removing jdk14 from 2 suites .properties files; the jdk14.properties and jdk14.runall were removed with revision 645716 for DERBY-3568


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@886221 13f79535-47bb-0310-9956-ffa450edef68"
ec6079543de6d90a85ad67bdfcb21ef968342f86,"DERBY-1030: Remove over-eager optimization which short-circuited NULL ON NULL INPUT processing when argument values came out of nested function calls.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@886277 13f79535-47bb-0310-9956-ffa450edef68"
078bb79251917c087f3503806cd15f940dc13ad0,"DERBY-151 Thread termination -> XSDG after operation is 'complete'

This patch catches the exception seen by RAFContainer4
readFull/Write/full when the embedding application thread sees an
interrupt, and asks the user to inspect the app to find the cause.
Before this patch, the symptoms were puzzling to the user, suggesting
that the disk might be full.

The database level error seen is XSDG9:
""Derby thread received an interrupt during a disk I/O operation, please check your application for the source of the interrupt. ""

A new store test, Derby151Test, checks this behavior.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@886831 13f79535-47bb-0310-9956-ffa450edef68"
d9857c07c5917dc67f767f3f1e7e1408494e6631,"DERBY-3829; convert derbynet/sysinfo and derbynet/sysinfo_with_properties to JUnit; addressing some final comments


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@886857 13f79535-47bb-0310-9956-ffa450edef68"
59ff24ce9f0239898754e2e510d35fe413d9650a,"DERBY-151 Thread termination -> XSDG after operation is 'complete' 

Follow-up patch derby-151-followup; improves the test to also use client/server.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@886963 13f79535-47bb-0310-9956-ffa450edef68"
0af16656e8bdae41a0afbb7684472658d7b3cc3b,"DERBY-2282: Incorrect ""transitive closure"" logic leads to inconsistent behavior for binary comparison predicates

Made the transitive closure logic normalize predicates so that the
constants are on the right-hand side (e.g., convert 3 < X to X > 3).
This makes it detect more of the potential optimizations.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@887156 13f79535-47bb-0310-9956-ffa450edef68"
54d942e9bbf4280af870758eac58baf67c3805f5,"DERBY-4387 Infinite loop in PredicateList.joinClauseTransitiveClosure()

This patch, derby-4387, fixes a corner case of the closure code in
which the outer and the inner table is the same. This led to adding
the same, new predicate twice to the same table, causing the infinite
loop. The patch also adds a test case, which, without the fix, shows
the infinite loop.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@887246 13f79535-47bb-0310-9956-ffa450edef68"
b472c868aab0db57fe60c030795cd4225da714b4,"DERBY-4461

Committed fix which resets the interrupt flag in the test's
application thread.  Not resetting it caused issues on Windows and
Linux downstream (in teardown).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@887305 13f79535-47bb-0310-9956-ffa450edef68"
b28e47cc425cb22c79838d55b97e6a9964f02fac,"DERBY-4297: XplainStatisticsTest 'compilation time did not compute'

This change adjusts the technique used to compute the compileTime counter
in GenericStatement.prepMinion so that the following invariant will hold:

  parseTime + bindTime + optimizeTime + generateTime = compileTime

Previously, there was a small window after generateTime had been computed
but before compileTime had been recorded, during which the value of the
System.currentTimeMillis clock could change, resulting in a situation where
compileTime was too large, typically by 15 or 16 milliseconds.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@887475 13f79535-47bb-0310-9956-ffa450edef68"
66d9f5a26b543e378d06da49ed25b96857bc7221,"DERBY-712: Small cleanup of PrivilegeNode before adding support for USAGE privilege.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@888060 13f79535-47bb-0310-9956-ffa450edef68"
4e119ab74b8f9d674057ca40b8baf06432486b46,"DERBY-712: Fix problem in 888060 having to do with placement of sanity ifdefs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@888129 13f79535-47bb-0310-9956-ffa450edef68"
136f24b53b031470618a2caeb9471d1b49ad7a91,"DERBY-4442: Default value and identity in an INSERT result set evaluated too early

Back out the fix for DERBY-4419 and DERBY-4425, since the fix is no
longer necessary after the changes that added a ProjectRestrictNode on
top of the original insert source. The test cases for those bugs are
still part of the regression test suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@888311 13f79535-47bb-0310-9956-ffa450edef68"
9e87d0862c6e17d69a433230db2b79faf1e89d9e,"DERBY-4400: Document the process of producing Maven 2 artifacts for Derby 

Added a utility class that obtains the Derby version from the jars that will
be put into the artifacts. It also does a few sanity checks of the jars, for
instance checking if they are all there.
Updated the README and changed/added some comments in settings.xml.

Patch file: derby-4400-1c-SetDerbyVersion.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@888385 13f79535-47bb-0310-9956-ffa450edef68"
535acbda2893cd065c98c3a6684b2af5732cb9d3,"DERBY-712: Wrap another sanity assertion in a debug conditional.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@888421 13f79535-47bb-0310-9956-ffa450edef68"
284a6c07dfac5849cd7f8d0c488be29abd666b30,"DERBY-4465: Typo in error message from SQLChar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@888754 13f79535-47bb-0310-9956-ffa450edef68"
e126f5869ede7f45f1cdf91e4732f8e7d7f3ff25,"DERBY-651: Add dependency tracking between tables and UDTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@888811 13f79535-47bb-0310-9956-ffa450edef68"
7f3c16bc278174b40d594424f261e0fbde348be6,"DERBY-4463 JMX test in nightly test suite failed with: JMXTest:clientjava.lang.InterruptedException:

Patch derby-4463.diff, which moves the clearing of the interrupted
flag in Derby151Test to the teardown method of the test so it will
always be performed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@888881 13f79535-47bb-0310-9956-ffa450edef68"
4dfc0bbbeb8ee3489f941386b56b290cebf940dc,"DERBY-4400: Document the process of producing Maven 2 artifacts for Derby 

Removed settings.xml, as most of the content was ignored by Maven.
Updated the README with more / better instructions.
Switched from scp to scpexe for deployment (uses external tools like scp/ssh).

Patch file: derby-4400-2a.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@889126 13f79535-47bb-0310-9956-ffa450edef68"
361e6597747e8a325fc660c9371d0643978ea169,"Added public key Kristian Waagan.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@889420 13f79535-47bb-0310-9956-ffa450edef68"
b8c611041382e7d237092a5c728825757f34a9e5,"DERBY-651: Wire UDT dependency dropping logic into DROP TABLE.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@889822 13f79535-47bb-0310-9956-ffa450edef68"
14ff5da50836efd87f1583a8e659c38e41ee531b,"DERBY-4463 JMX test in nightly test suite failed with: JMXTest:clientjava.lang.InterruptedException: 

Patch derby-4463-2, which now resets the interrupt flag for the server
threads also before the exception is propagated in the test. Followup
to derby-4463 patch.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@889875 13f79535-47bb-0310-9956-ffa450edef68"
d6c2047175423922bc7f9b9b9c4f08e918cec0de,"DERBY-651: Add dependencies of views on UDTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@889876 13f79535-47bb-0310-9956-ffa450edef68"
816219fa545fbadbb5c93395402928c5e9be6b12,"DERBY-4469: Allow casting of nulls and ? parameters to UDTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@889975 13f79535-47bb-0310-9956-ffa450edef68"
2209325d3240cb74debe06c925e272126f4be29b,"DERBY-651: Add dependencies of routines on UDTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@890115 13f79535-47bb-0310-9956-ffa450edef68"
78befe8e640bdcfb2de2dabe54bb4b7fd63b5dd9,"DERBY-4473: [patch] remove some allocated but unused objects
Removed the allocation of a StringWriter and a StringBuffer object.

Patch contributed by Dave Brosius (dbrosius at mebigfatguy dot com).

Patch file: ds.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@890220 13f79535-47bb-0310-9956-ffa450edef68"
e96b5a286f2cb8e2f2bccffd82631bf7af2345a8,"DERBY-4476: Use helper methods from IdUtil instead of TupleDescriptor.quoteProtectName()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@890345 13f79535-47bb-0310-9956-ffa450edef68"
c61e11bed44a6af78a75bc559572c6e55dcf3851,"DERBY-4044: Use helper methods from IdUtil to quote SQL identifiers in EmbedResultSet


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@890357 13f79535-47bb-0310-9956-ffa450edef68"
aec3420bd8b9418e62a36ef3dd51015c11d646b9,"DERBY-4380: Subqueries not allowed in ON clause

Removed translations of error message that was removed by the main
patch for this issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@890364 13f79535-47bb-0310-9956-ffa450edef68"
a6631d9bde8539a56b657cf0b99a1529126a6c00,"DERBY-2282: Incorrect ""transitive closure"" logic leads to inconsistent behavior for binary comparison predicates

Extended the fix to work on parameters in addition to constants.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@890370 13f79535-47bb-0310-9956-ffa450edef68"
93f457a6dc0cdee9f957f41e4eb61b1db7cb238f,"DERBY-4297: Removed method that was no longer used after the main fix


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@890448 13f79535-47bb-0310-9956-ffa450edef68"
49639805553a9ba54604cd962b310455649b10bb,"DERBY-4472: [patch] non short circuit op, could cause eof problems
Replaced non-short-circuiting bitwise operator with short-circuiting boolean
operator (the right side might throw exception if evaluated when the left
side is false).

Patch contributed by Dave Brosius (dbrosius at mebigfatguy dot com).

Patch file: sc.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@890692 13f79535-47bb-0310-9956-ffa450edef68"
2707f514aff5b290d50ed4b8bd0dbbea0a029f21,"DERBY-4477: Selecting / projecting a column whose value is represented by a stream more than once fails
Removed unused imports.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@890789 13f79535-47bb-0310-9956-ffa450edef68"
7ff4f83fed88d6f300af0a16b684a3f5942d90dd,"DERBY-4405 Transformation to inner join not performed for certain three-way joins

Patch derby-4405-2, which extends the rewriting optimization of outer
join to inner join in the presence of a compound inner table which
itself a join. The existing analysis of null intolerant predicates,
which is a condition for the rewrite, failed to look into inner tables
that were not a simple base table.

The patch adds new test cases to verify that rewrite now takes place
for such cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@891015 13f79535-47bb-0310-9956-ffa450edef68"
b8801c5d92054f1a98b5c7fb715dd9c8c894f758,"DERBY-4475 roleName isn't trimmed as expected

Patch derby-4475, which contains a single line patch contributed by
dbrosius at mebigfatguy dot com, plus some extra test cases (mine).

The patch corrects a glitch in trimming white space around role name
when provided as strings.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@891350 13f79535-47bb-0310-9956-ffa450edef68"
2060c4a6f762759eb53c73ad39c92dad742b0b3f,"DERBY-4397 Allow ORDER BY in subqueries

Patch derby-4397-2 which implements this functionality and also adds a
new test, OrderByInSubqueries. This patch also solves DERBY-4.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@891952 13f79535-47bb-0310-9956-ffa450edef68"
98c75205dbbb3a41adcfd368a4fd67231214b7b0,"DERBY-651: Add support for USAGE privilege on UDTs and the beginning of support for USAGE privilege on SEQUENCES.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@892272 13f79535-47bb-0310-9956-ffa450edef68"
fc9859eb00501d6b804868f5bb38e2cbd0490c9f,"DERBY-4463 JMX test in nightly test suite failed with: JMXTest:clientjava.lang.InterruptedException

Patch derby-4463-except-non-sun-vm disables this test for non-Sun
VMs. This is intended as a temporary measure until we understand why
the test is not working correctly on IBM VMs.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@892316 13f79535-47bb-0310-9956-ffa450edef68"
989beca3ff2cd05d83afa11ebc7495fe4228cb30,"DERBY-651: Address instability in UDTPermsTest caused by different string representation of timestamp 0L on different platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@892327 13f79535-47bb-0310-9956-ffa450edef68"
21d74bf337d1ffbda08669f73ea7de48d0aa5ced,"DERBY-651: Add tests verifying that you can't drop a UDT or revoke USAGE on it if this would orphan a trigger.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@892354 13f79535-47bb-0310-9956-ffa450edef68"
90f42b43eaecf478af49d822f5826cb4a831cada,"DERBY-651: Prevent a schema from being dropped if it contains any UDTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@892485 13f79535-47bb-0310-9956-ffa450edef68"
ef1ecee8678ab507a5f29b37d626487ca5811b0a,"DERBY-4485: Add dblook support for UDTs and for USAGE privileges on them.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@892627 13f79535-47bb-0310-9956-ffa450edef68"
db756bbf9fd6eec967248ea36bc8796f589c51c6,"DERBY-3757: ASSERT FAILED transaction table has null entry when running new StressMultiTest

Synchronize on the Hashtable to prevent concurrent modification while
iterating over the elements.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@892912 13f79535-47bb-0310-9956-ffa450edef68"
3210ebc9c17261d7508ef5ebdb67f8c800fab7b6,"DERBY-651: Adjust JDBC metadata to account for UDTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@893224 13f79535-47bb-0310-9956-ffa450edef68"
52ca8b8ddc347187cabd6d265322525841a54f86,"DERBY-651: Fix javadoc problem.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@893795 13f79535-47bb-0310-9956-ffa450edef68"
4bea40edd20c802808840bd19f612631282d6737,"DERBY-712: Committed patch from Suran Jayathilaka, adding dummy support for NEXT VALUE FOR clause on sequences.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@894002 13f79535-47bb-0310-9956-ffa450edef68"
1c7cfce240077e863d74276d504a0fe508a9db5b,"DERBY-712: Support for sequences

Added NextSequenceNode.java that was forgotten in the previous
commit. Contributed by Suran Jayathilaka <suranjay@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@894146 13f79535-47bb-0310-9956-ffa450edef68"
28b508417e245cb7ec4c654bfaa223cadc3e0603,"DERBY-4417 - Enable distributed replication testing - master server, slave server and test client running on different hosts.

Committed DERBY-4417_P1_p1.diff.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@894607 13f79535-47bb-0310-9956-ffa450edef68"
7ed87c8e1be2a4edfa701d28a135ca4525bab78a,"DERBY-4417 - Enable distributed replication testing - master server, slave server and test client running on different hosts.

Committed  DERBY-4417_P2_p1.diff.txt


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@895582 13f79535-47bb-0310-9956-ffa450edef68"
d114b641e9d88e23136b524e78cc504e90634cba,"DERBY-4500: setNetworkClientCP should use return, not exit, on error

Since the setNetworkClientCP and setNetworkServerCP scripts are designed
to be called from another script, or sourced from the shell, they should
use 'return' rather than 'exit', to report an error.

This change was contributed by John Storta, Jr. (js at storta dot net).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@895666 13f79535-47bb-0310-9956-ffa450edef68"
58806b9724222c80ae0bab3e8ff112070ba1e8b3,"DERBY-4502: Make it possible to declare views against system tables
when authorization is enabled.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@896146 13f79535-47bb-0310-9956-ffa450edef68"
685cec96fb5477fb38661dbcc8b6275fd2b30693,"DERBY-4496 Column list size mismatch with ORDER BY in INSERT statement

Fixed this issue which was due to missed occurences of RCL.size() that
now (with ORDER BY in subqueries) need to be generalized to
RCL.visibleSize to be able to ignore synthesized columns. Added a new
test case for the failing repro. Also wired the OrderByInSubqueries
test into the regression suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@896388 13f79535-47bb-0310-9956-ffa450edef68"
190e5231e2443beca6b8c69340c947ed577fd8e7,"DERBY-4110: Deleting from a table with its synonym throws an exception

When building the ResultColumnList that is used to tie together the
search results from the WHERE clause with the processing of the DELETE,
the result columns will be bound against the exposed table name of the
table named in the DELETE statement, so if the statement used a
synonymTableName, then the result column list should manufacture column
references which use a synonymTableName as well. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@896722 13f79535-47bb-0310-9956-ffa450edef68"
a4cbe6f7564fc221b2a13cee38a72bcdeb68f3a9,"DERBY-712: Wire in USAGE privilege for SEQUENCEs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@896883 13f79535-47bb-0310-9956-ffa450edef68"
fc91b83e30a06defeefae4a6aff0c162f0c68e2f,"DERBY-4492: Localized help message from derbyrun.jar has wrong encoding

Regenerated the new messages in 10.4 and 10.5 from the original UTF-8
encoded translations.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@897161 13f79535-47bb-0310-9956-ffa450edef68"
c66f98193d9e832c4d9d7cf187f51fa6f4e1cc4b,"DERBY-4495: Add NATURAL JOIN syntax

Support NATURAL JOIN by adding an implicit USING clause with all the
common columns.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@897190 13f79535-47bb-0310-9956-ffa450edef68"
108305bc34abd2cc0c9cb30e842ca85e20cf5b97,"DERBY-4398 Allow OFFSET/FETCH in subqueries

Patch derby-4398-3, which implements this feature, and also adds test
cases for this to the now renamed test
OrderByAndOffsetFetchInSubqueries and OffsetFetchNextTest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@897934 13f79535-47bb-0310-9956-ffa450edef68"
d1120df5dddde83da5c7621a7760528ccd75118e,"DERBY-4398 Allow OFFSET/FETCH in subqueries

Missing space in a Javadoc tag.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@897937 13f79535-47bb-0310-9956-ffa450edef68"
1a3630215c6777951845157800b72966efacf7c0,"DERBY-4038; convert access.sql to junit to avoid an intermittent error on IBM zseries machines when the test is run in the encryption suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@897938 13f79535-47bb-0310-9956-ffa450edef68"
9ce749232f5b18750b6571cbf778838a6c1e49ec,"DERBY-712: Add dblook support for sequences.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@898123 13f79535-47bb-0310-9956-ffa450edef68"
282c2bad3d1cef22c438bec0b0f943aa33907be7,"DERBY-712: Scrub some javadoc errors.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@898523 13f79535-47bb-0310-9956-ffa450edef68"
46df2550a10fa324bd4533614ce319b2b544338d,"DERBY-4191

Require minimum select privilege from the tables in the SELECT sql if no column is selected from the table by the user eg
select count(*) from root.t; 
select 1 from root.t; 
For the query above, Derby was letting the user execute the select even if the user had no select privilege available on root.t With this fix, Derby will check if there is atleast one column on which the user has select privilege available to it or if the user select privilege at the table level. If yes, only then the user will be able to select from another user's table.

select myTable.a from myTable, admin.privateTable
for the query above, since no column is selected specifically from admin.privateTable, Derby will now see if there is table level select privilege or atleast one column level select privilege available on admin.privatTable

One other problem scenario was
update ruth.t_ruth set a = ( select max(c) from ruth.v_ruth ); 
For the query above, prior to fix for DERBY-4191, we were not looking for select privilege for the subquery. That has also been fixed with fix for DERBY-4191

All the existing tests passed with no regression. Added few tests for the fixes involved in this jira.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@898635 13f79535-47bb-0310-9956-ffa450edef68"
4deb981274446b97a0cf361e16aa6d296adc1fec,"DERBY-4514 - j2ME test failures relating to RuntimeStatisticsParser;
  now using org.apache.derbyTesting.junit.Utilities.split for JSR169


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@898638 13f79535-47bb-0310-9956-ffa450edef68"
3e8b56906fa41e4edf75fe5cb0c72023061ed03c,"Removed unused method SQLChar.readCharacterLength


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@899576 13f79535-47bb-0310-9956-ffa450edef68"
7b48c50b56768abe26f2f13daac44b6b97b7fea9,"DERBY-4397 Allow ORDER BY in subqueries

Patch derby-4397-sortavoidance-a, which makes sort avoidance work in
the simple case of a subquery with order by on a base table which has
a suitable index. The fix avoids the result columns assumed by the
order by list from changing after they have been bound, to include a
level of VCNs, which is not correct (this happened as a side effect of
copying result columns from the subquery up to the FromSubquery node).

A new test case the verify sort avoidance in this case has been added.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@899588 13f79535-47bb-0310-9956-ffa450edef68"
506f4c8d9dec2364ba371a5a451be2698090042f,"DERBY-4491: Correct the network metadata for UDTs and make it possible to pass UDT values across the network.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@899733 13f79535-47bb-0310-9956-ffa450edef68"
2aa32e8a23b88483d8ba0beef621203af2dbff79,"DERBY-4491: Fix sealing violation which kills the AssertFailureTest on runs against insane jar files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@899819 13f79535-47bb-0310-9956-ffa450edef68"
9b450ec331963430cca9c3c87891c97b83f1a4a3,"DERBY-4512: Avoid unnecessary lookup in transaction table when adding transaction

The transaction table should not contain a transaction with the same
id as the one that's added with TransactionTable.add(). Therefore, put
the new transaction in the table unconditionally instead of checking
first whether there is an existing entry to reuse. This saves one
lookup in the transaction table per transaction.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@900714 13f79535-47bb-0310-9956-ffa450edef68"
0fc1787284d539597ae0844a77ce4551c5d47521,"DERBY-3092 (partial) Use the Map interface to access TransactionTable.trans

This change will make it easier to replace the Hashtable with a
ConcurrentHashMap on platforms that support java.util.concurrent,
since we don't use Hashtable-specific methods anymore.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901100 13f79535-47bb-0310-9956-ffa450edef68"
2de67cad59f90f71c400cddfee04bc34b3a52171,"Removed unused variable (caused Clover to fail when instrumenting class).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901142 13f79535-47bb-0310-9956-ffa450edef68"
6e66e704020e543057bce184e5985a22af121355,"DERBY-3092 (partial) Add back optimization that was mistakenly removed
by the previous patch


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901162 13f79535-47bb-0310-9956-ffa450edef68"
1d0c179d5512c396084c107dc785a5b0f7e31c09,"DERBY-4519: Infinite loop in StreamFileContainer.writeColumn
Fixed two issues;
 - swapped offset and length arguments (removed them for the read-case)
 - bounded the transfer buffer size, becuause InputStream.available() can
   return both zero and a very high value. Size bounded by [64, 8192].

Patch file: derby-4519-2a-infinite_loop_fixes.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901165 13f79535-47bb-0310-9956-ffa450edef68"
32fe7c669d4ff3afa9d381b5f77ecc7ff48da6e4,"DERBY-4491: Fix javadoc error introduced by subversion revision 899733.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901219 13f79535-47bb-0310-9956-ffa450edef68"
28e425508c5f9bbe87de2e6283b8986f914b6194,"DERBY-4491: Disable test of parameter metadata on small platforms since PreparedStatement.getParameterMetaData() is not available on JSR-169 vms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901277 13f79535-47bb-0310-9956-ffa450edef68"
a5191915acad1acaba4be08ac54e4c3b9541990d,"DERBY-4491: Bracket an assertion with a SanityManager.DEBUG check.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901420 13f79535-47bb-0310-9956-ffa450edef68"
3c48dd92e7894ce35f381434d9e24260f13dc6ef,"DERBY-3092 (partial) Don't expose TransactionTable's Hashtable

Added a visitEntries() method that could be used instead of
getTableForXA() to inspect the contents of the transaction table. Now,
the Hashtable is only visible to the TransactionTable class, which
will make it easier to replace it with another Map implementation
later.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901597 13f79535-47bb-0310-9956-ffa450edef68"
a8bc217040f9e10276ee007813966bbba49e1aae,"DERBY-4520 (partial): Refactor and extend data type cloning facilities
RowLocation doesn't need to be cloned using CloneableObject.cloneObject,
clone using DataValueDescriptor.getClone instead.
This is the first step in the process to remove CloneableObject completely.

Patch file: derby-4520-1a-RowLocation_cloning.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901642 13f79535-47bb-0310-9956-ffa450edef68"
d4953ddd60606aec5b4315f9553ac55ae5665f21,"DERBY-4515: Document and clarify the use of DataValueDescriptor.setValue(InputStream,int)
Clarified and improved documentation for the setValue method.
Added a constant to represent unknown length.
Rewrote code in EmbedPreparedStatement to remove an unnecessary variable.

Patch file: derby-4515-1a-setValue_stream_clarification.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901648 13f79535-47bb-0310-9956-ffa450edef68"
992f56f18f937a5be35602f688fb7aee16615451,"DERBY-4455: Prepared statement failure with CLOB: Stream has already been read and end-of-file reached and cannot be re-used.
Don't materialize streams when transferring data values from one statement to another.
The code causing the bug was/is only invoked when using XA.

Patch file: derby-4455-1c.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@901760 13f79535-47bb-0310-9956-ffa450edef68"
b4e2eb78d390f00e3618ebec80b17ffe97388a79,"DERBY-4520 (partial): Refactor and extend data type cloning facilities
Moved the method cloneObject into DataValueDescriptor, removed the
CloneableObject interface.
Changed cloneObject return type from Object to DataValueDescriptor.
Removed some unused imports.
Rewrote a few comments.

Patch file: derby-4520-2a-remove_CloneableObject_iface.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@902050 13f79535-47bb-0310-9956-ffa450edef68"
245209ae464c5cb701f1f458d5ae874209479d19,"DERBY-3024 (partial) Validation of shared plans hurts scalability

Removed an unneeded call to rePrepare() in EmbedStatement.executeStatement().
The call is not needed because rePrepare() will be called again in
GenericPreparedStatement.execute(), so the plan will be reprepared anyways
before it's executed, if it has become stale.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@902147 13f79535-47bb-0310-9956-ffa450edef68"
9556e9641e7f873bf053870c933b1cd6d9aa2819,"DERBY-4524: Incorrect DROP FUNCTION logic in AccessTest's tearDown() method

Removed the tearDown() method since it did not do anything (DROP
FUNCTION would always fail with no connection) and was not
needed (a CleanDatabaseTestSetup decorator already took care of
dropping the function).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@902288 13f79535-47bb-0310-9956-ffa450edef68"
f59fc4452102be041a3b674b87b79c8e4be47bb1,"DERBY-4523: store.AccessTest fails on phoneME

Make sure tables are dropped between test cases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@902366 13f79535-47bb-0310-9956-ffa450edef68"
1b454a1f6979aa6dea7a29fc29b024f84ba8a8eb,"DERBY-4520 (partial): Refactor and extend data type cloning facilities
Added functionality to clone store streams (without materialization).
Delayed filling the byte buffer in OverflowInputStream constructor and in
OverflowInputStream.resetStream.

Orginal patch contributed by Mike Matrigali (mikem_app at sbcglobal dot net) as
part of DERBY-3650, modified by Kristian Waagan (Kristian dot Waagan at Sun dot com).

Patch file: derby-4520-3b-CloneableStream_and_delayed_fill.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@902742 13f79535-47bb-0310-9956-ffa450edef68"
9902f436beb2759a4fa0abdb906400cc8decd898,"DERBY-4520: Refactor and extend data type cloning facilities
Removed unhelpful assert statements.
Added @see tags to copy JavaDoc from the interfaces.

Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@902798 13f79535-47bb-0310-9956-ffa450edef68"
1d0c809d719f0aabe3b470fec4bedfaf46c80be8,"derby-4477 Selecting / projecting a column whose value is represented by a stream more than once fails

Patch derby-4477-partial-2. This patch clones streamable columns in
occurence 2..n in ProjectRestrictResultset if they occur more than
once in the select list. It also adds the three repro test cases from
DERBY-3645, DERBY-3646 and DERBY-2349 to BLOBTest. The patch is not
complete and needs to be revisted when cloning of store streams is
implemented. Currenly the cloning occurs via materialization and this
will exhaust memory when lobs are large.  See FIXME in
ProjectRestrictResultSet.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@902857 13f79535-47bb-0310-9956-ffa450edef68"
300bbebea3267de1609068075754d2828435b283,"DERBY-4488: Nullpointer when performing INSERT INTO

Moved setting of the statement context's topResultSet to
NoRowsResultSetImpl.setup() to ensure that it's performed early enough
for all sub-classes (and for InsertResultSet in particular).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@903108 13f79535-47bb-0310-9956-ffa450edef68"
d7aa7617eaea326b00fd34181d2c4d044413791b,"DERBY-4520: Refactor and extend data type cloning facilities 
Renamed cloneObject to cloneHolder.
Restructured SQLBinary.cloneHolder (behavior unchanged).
Brushed up some comments.

Patch file: derby-4520-4a-cloneObject_renamed_cloneHolder.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@903150 13f79535-47bb-0310-9956-ffa450edef68"
e21c3de30af69e3c8fe0d689a3f5166a10c5deeb,"DERBY-3092 (partial) Use visitors instead of iterators to scan the
transaction table in the methods that synchronize explicitly on the
Hashtable trans. This limits the usage of explicit synchronization on
trans to one single method, TransactionTable.visitEntries().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@903200 13f79535-47bb-0310-9956-ffa450edef68"
81d947f3154a159d9bac6065a716bee50c80f1ae,"DERBY-4527; create org.apache.derbyTesting.functionTests.harness.ibm17 class


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@904235 13f79535-47bb-0310-9956-ffa450edef68"
3d378657ca825bcc5a78277dd7076364b1208d7a,"DERBY-4529: BlobMemTest and ClobMemTest don't call super.tearDown()

Removed the unneeded tearDown() methods so that the tests inherit
BaseJDBCTestCase.tearDown() instead.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@904483 13f79535-47bb-0310-9956-ffa450edef68"
55bc97fc24d27a3f0ffbc5ac0c277da1b8abef15,"DERBY-4477 Selecting / projecting a column whose value is represented by a stream more than once fails

Patch derby-4477-lowmem-2, which adds test cases to check that lobs
are not materialized when large, for the use cases covered by this
issue. The test cases are added to the lowmem suite, which is not not
part of the regular suites.All. This commit is preparatory in that the
lobs are still small, so these changes should be revisited to change
their sizes when the cloning handles materialization properly, cf
DERBY-3650 and DERBY-4520.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@904538 13f79535-47bb-0310-9956-ffa450edef68"
eaf52a2a09e4eea72d5e1328d1d6cdbf7c63e859,"DERBY-3852: J2EEDataSourceTest may ignore some failures

Most of this issue was fixed as part of DERBY-3853. This commit
addresses the remaining problem by calling fail() when execution
reaches a point that it was not intended to reach.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@905224 13f79535-47bb-0310-9956-ffa450edef68"
2732872cd27560ece9887aa4165961aa4be9324d,"DERBY-4484: Add export/import of UDT columns to/from the same file which holds the other columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@905289 13f79535-47bb-0310-9956-ffa450edef68"
bb2198301ed398374b4749edeea9d381ed7db1f0,"DERBY-712: Committed Suran's patch createseq_args_bind_b.diff, making it possible to create sequences with different datatypes, boundaries, steps, and cycling.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@905369 13f79535-47bb-0310-9956-ffa450edef68"
2a5922a1ae11273ebbdf1a5b7b557879e3fb4cf6,"DERBY-4484: Improve error handling during UDT instantiation and import.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@905472 13f79535-47bb-0310-9956-ffa450edef68"
51826c3c78dac1c357f86d057dba581a162401cd,"DERBY-4477 Selecting / projecting a column whose value is represented by a stream more than once fails

Follow-up patch for an intermittet bug caused by previous insert, due
to newly filed DERBY-4531: derby-4477-lowmem-followup.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@905621 13f79535-47bb-0310-9956-ffa450edef68"
854dd109d549b0ea0ce4ebb4eaedf5dda058e1a7,"DERBY-4520 (partial): Refactor and extend data type cloning facilities

Renamed getClone to cloneValue and added the boolean argument 'forceMaterialization', whose default has been set to false.
Removed special handling of RowLocation in ValueRow.getNewNullRow.
Made constructors used for cloning private in SQLSmallInt and SQLTinyInt.
Added argument in constructor used for cloning in XML (whether to force materialization or not).
Removed some unused imports.
Note that the actual cloning-methods haven't been changed yet (expect changes in SQLBlob and SQLClob in a follow-up patch).

Patch file: derby-4520-5a-getClone_renamed_cloneValue.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@906595 13f79535-47bb-0310-9956-ffa450edef68"
18f3f91e52a78d4b96961ce72d9925cebe4bfe3f,"DERBY-4520: Refactor and extend data type cloning facilities 

Removed unused imports in the data-type trees starting with SQLBinary and SQLChar.

Patch file: derby-4520-6a-unused_imports.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@906609 13f79535-47bb-0310-9956-ffa450edef68"
b4af7da0e1976d5a7b65bac22d93248579a1acea,"DERBY-651: Make it possible to have UDT columns in table functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@907097 13f79535-47bb-0310-9956-ffa450edef68"
7a2d290ac0eeed8f6b4382a9f25b340d8976dc83,"DERBY-651: Add tests for big UDTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@907509 13f79535-47bb-0310-9956-ffa450edef68"
139ca850072f88e5fa534c50cad3ed969a22348b,"DERBY-712: Wire in cacheable sequence generation, making the NEXT VALUE FOR clause behave as expected.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@907654 13f79535-47bb-0310-9956-ffa450edef68"
e5114fdd07f54fbf7dbcec3e1bc8f179fb0b0c17,"DERBY-651: Add test to verify that Derby still does not support SQLData types.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@907668 13f79535-47bb-0310-9956-ffa450edef68"
0f5f2de780e8a1c354368fc31649a91b3a002f82,"DERBY-712: Fix javadoc error.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@907728 13f79535-47bb-0310-9956-ffa450edef68"
04acfa56ea0e9fd1ebbfb7768f30901486b10be8,"DERBY-4520: Refactor and extend data type cloning facilities 

Changed the cloneValue methods for BLOB and CLOB.
Noteworthy information:
 - made BasicSortObserver force materialization when cloning
   (required because it closes the underlying source result set).
 - java.sql.[BC]lob values are assumed to be ""clone-safe""
   (i.e. more than one SQL[BC]lob object can reference them).
 - in some cases invoking cloneValue(false) will result in a stream being
   matieralized, because we don't know how to clone the stream otherwise.
   A better future solution might be to use temporary disk storage instead.
 - there's a TODO for implementing an optimization for small streams, where
   Derby could choose to materialize the streams if the length is known.
   This is only important for a few use-cases, but it avoids decoding the
   stream data more than once.

Patch file: derby-4520-7b-lob_clonevalue_methods.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@907732 13f79535-47bb-0310-9956-ffa450edef68"
d92fa8c666cab8faa9f69c4d03e8e210ce3167f1,"DERBY-4543: CLOB values incorrectly stored on disk using the old header format 

Aadded missing !-operator in EmbedPreparedStatement.
Replaced DD_VERSION_CURRENT with DD_VERSION_DERBY_10_5.
Renamed several methods and variables (stop using soft-upgrade mode term, use stream header format instead).

Patch file: derby-4543-1a-clob_hdr_format_fix.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@908418 13f79535-47bb-0310-9956-ffa450edef68"
5b43e6f6bb217c075d532804c7df5e7a40e60fbb,"DERBY-3092: Use java.util.concurrent in TransactionTable to improve scalability

Dynamically load a Hashtable or a ConcurrentHashMap, depending on
what's available on the platform, to allow as much concurrency as
possible in the transaction table.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@908473 13f79535-47bb-0310-9956-ffa450edef68"
5b9853abb331ba2b050cc68cdd8728159546e4ca,"Fixed javadoc warning (empty @return tag)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@908501 13f79535-47bb-0310-9956-ffa450edef68"
2d733d969d2b24aa2203f08f461bdc0823bc69f7,"DERBY-4477 Selecting / projecting a column whose value is represented by a stream more than once fails

Patch derby-4477-useCloning: Uses the new stream cloning referred to
earlier as a coming follow-up for this issue: derby-4477-useCloning.

It also bumps the lob size in the lowmem suite's test cases added for
this issue in ClobMemTest and BlobMemTest, which will run out of
memory without this cloning used by this patch.

Note:

The ""length-materialization optimization"" (code that was commented out
earlier, and removed by the latest patch) hasn't been implemented
yet. However, we think it is better placed inside the various
cloneValue-methods and hope to get to it at a later time.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@908563 13f79535-47bb-0310-9956-ffa450edef68"
8f01b3ceb991189772efdf2610043f5672fcf041,"DERBY-2992: getBinaryStream returns incorrect result (truncated value) if underlying blob is deleted 

Made OverflowInputStream throw exception if the underlying value is deleted/modified.
(i.e. if the next overflow page cannot be found/accessed).
Added a new error message (D015).
Incorporated repro (originally contributed by Kathey Marsden, kmarsdenderby at sbcglobal dot net).

Patch file: derby-2992-1b-throw_exception_on_eof.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@908586 13f79535-47bb-0310-9956-ffa450edef68"
e671fc78506fcceba827092f7e819997a5ffeb28,"DERBY-4513: Prevent NEXT VALUE FOR expressions from being used in various contexts.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@908627 13f79535-47bb-0310-9956-ffa450edef68"
f2a5622286e66fc80bb82393d8972ed1450ef945,"DERBY-4470: Forbid ordering operations on UDTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@908635 13f79535-47bb-0310-9956-ffa450edef68"
36461a8709ba77200ecdac2e53d40972e239272a,"DERBY-4545: Fix UDTTest to run cleanly on small devices.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@909123 13f79535-47bb-0310-9956-ffa450edef68"
f1f66ff2e719d62e9092bd8578ce85a81df8a0ce,"DERBY-4479: RENAME TABLE needs to invalidate any cached CREATE TABLE statement

The problem involves a missing dependency between the CREATE TABLE statement
and the table that it is creating. For other types of statements, the
dependency of the statement on the table is generally registered during
compilation.

However, this isn't quite so easy with the CREATE TABLE statement, because
the table descriptor doesn't exist during compilation, since the table isn't
created until the statement is actually executed.

This change registers the dependency at execution time. At the very end of
CreateTableConstantAction.executeConstantAction, there is
some new code added to register a dependency from the CREATE TABLE
statement to the table we have just finished creating. 

A new test is also added.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@909176 13f79535-47bb-0310-9956-ffa450edef68"
30fa79bee9df722ac70d854385e8c53a65724538,"DERBY-4469: Forbid implicit and explicit casts to and from UDTs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@909190 13f79535-47bb-0310-9956-ffa450edef68"
33bfdc00ccfcb63463d45558815a51684c609685,"DERBY-4499: Fix bug which prevented us from using UDTs as output args in database procedures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@909415 13f79535-47bb-0310-9956-ffa450edef68"
3b77ab83bfed3a88e197941f7fbcf0ae1dcf2367,"DERBY-4539: Make it possible to state the optional clauses of the CREATE SEQUENCE statement in an order.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@909633 13f79535-47bb-0310-9956-ffa450edef68"
b173580e2560ce14ff864043910b718dd6f2b223,"DERBY-4542: Avoid materialization where possible when cloning CollatorSQLClob 

Made CollatorSQLClob able to clone itself without materializing the value
(doesn't apply in all cases, sometimes we are forced to materialize because
it is requested to do so, or because we don't know how to clone the underlying
value).

Patch file: derby-4542-1a-avoid_materialization.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@910200 13f79535-47bb-0310-9956-ffa450edef68"
2f4a1a097ba17527f7707238661938d9a51701f6,"DERBY-712: Only allow RESTRICTed drops of sequences.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@910255 13f79535-47bb-0310-9956-ffa450edef68"
c1832a329b1a86a8fc0315fb35de2360ae78280d,"DERBY-3844: ASSERT failure in BasePage.unlatch() when running LobStreamsTest 

Rewrote test to only call getX once per column per row, as calling for instance
getBlob twice on a given column on the same row will be disallowed.
Also removed some unused code.

Patch file: derby-3844-2a-jdbcdriver_test_rewrite.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@910481 13f79535-47bb-0310-9956-ffa450edef68"
f552f7a1077ae8110ce2824d49eb12760ca316f6,"Dummy commit to trigger CI build (fixed a typo).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@910498 13f79535-47bb-0310-9956-ffa450edef68"
6f1516700dfb0a6e6e67e4afbc37941b1679925b,"DERBY-3844: Fixed JavaDoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@910511 13f79535-47bb-0310-9956-ffa450edef68"
03028570afe50a94098295a22ab02a1482cc4dfb,"DERBY-4548; making the top of the tree an alternate/additional location for
  ant.properties


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@911231 13f79535-47bb-0310-9956-ffa450edef68"
86c7780f00d4d02b92bef7594156ed15ddddce36,"DERBY-4549: NPE in JBitSet

SubqueryNode did not preprocess its left operand, so some fields were
not initialized when the optimizer looked at it. This patch makes
SubqueryNode.preprocess() call preprocess() recursively on the left
operand.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@911315 13f79535-47bb-0310-9956-ffa450edef68"
594c9d4b131b83eb335977e63374c5f568340c75,"DERBY-4400: Document the process of producing Maven 2 artifacts for Derby.

Minor formatting changes.
Fixed some typos.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@911768 13f79535-47bb-0310-9956-ffa450edef68"
b61d634909fb6c5a45c11ff43b518e183604bea9,"DERBY-3844: ASSERT failure in BasePage.unlatch() when running LobStreamsTest 

Disallows calling getBlob or getClob more than once on a given LOB column
(on the same result set row). See release note for details, this change may
break existing applications.

Patch file: derby-3844-1c-disallow_multiple_accesses.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@911793 13f79535-47bb-0310-9956-ffa450edef68"
428d6ccd76fd5e6ae8e494e0d3a72cefa0dd0e0c,"DERBY-4554: Remove lang/scrollCursors1.sql

The test has been converted to JUnit and is no longer in use.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@911949 13f79535-47bb-0310-9956-ffa450edef68"
574d8e1f61e684a0aff52828e760b6b8f4a9eb51,"DERBY-4553: In ij GETCURRENTROWNUMBER directly writes its result to output

Patch contributed by Sylvain Leroux <sylvain@chicoree.fr>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@911952 13f79535-47bb-0310-9956-ffa450edef68"
6ad7719268d67db8d8f980426b259b4472b28145,"DERBY-3729: Improve client-side messages when file or disk fills up.

This change is intended to improve the error messages which are returned
by the Derby client JDBC calls when error message XSDG1 occurs. This
particular error message may arise when the disk fills up, or it may
arise due to a quote or filesystem limit. For example, on FAT32 file
systems, an individual file is limited to 4GB and when that limit is
reached, error XSDG1 occurs.

Delivering error information back to the client in this case is tricky,
because the XSDG1 error is a database-severity message, meaning that the
database is closed, the connection is closed, and the session is ended,
so the information must be send to the client as part of the Command
Check Response Message itself.

This change: adds additional text to the XSDG1 and J123 messages, and
enhances the client's handling of the CMDCHKRM to look for possible
error information in the SQLCARD.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@911955 13f79535-47bb-0310-9956-ffa450edef68"
5a1856752bdf3b08772cd8205f9d79c5d8cfbcd0,"DERBY-4341: Building with a different CLASSPATH causes runmessagecheck to fail.

This change was contributed by John Storta Jr. (js at storta dot net)

The problem was that running the MessageBundleTest as an Ant task made
it hard for us to control the exact CLASSPATH that was used, because
Ant tasks always are affected by the overall CLASSPATH that is being
used for the Ant process.

The change converts MessageBundleTest from an Ant task to a standalone Java
program, and changes the runmessagecheck target in the top-level build.xml
to run MessageBundleTest in a separate JVM with fork=true so that the
CLASSPATH setting can be exactly controlled.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@911999 13f79535-47bb-0310-9956-ffa450edef68"
08f9349816359d68ff8c951f37914e2770881b5a,"DERBY-4548; changing the name of the alternative properties file to local.properties; making it the first in build.xml so properties defined in it have precedence.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@915129 13f79535-47bb-0310-9956-ffa450edef68"
7c5216360d50c8cdc60add3d62dfc29ffae5df20,"DERBY-1482

We do not have many tests for triggers on tables with LOB columns. Checking in few tests with this checkin. The tests are disabled at this point because they run out of memory when run with limited heap because of streaming of the LOB columns whether they are needed or not. The test is part of lowmem suite which will automatically take care of running the tests with limited heap which is 16M for that suite at this point.

More information on the test can be found in the comments in the test and also in the jira.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@915177 13f79535-47bb-0310-9956-ffa450edef68"
3b2562cff01311ad0e015c747f76fe6a14ed0a24,"DERBY-1482: Fixed JavaDoc warnings (introduced in r915177).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@915310 13f79535-47bb-0310-9956-ffa450edef68"
22b74d2241c6c8b70ce07c5e38c42a2cf733ba20,"DERBY-3507: startNetworkServer and stopNetworkServer don't pass arguments

Made scripts pass command line arguments also when the -noclasspath option
is specified. This is a Windows only fix.

Patch file: derby-3507-2a-fix_for_runnoclasspath.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@915733 13f79535-47bb-0310-9956-ffa450edef68"
e7a12362bc84fbeb8dcbfc4335783358daf369f7,"DERBY-4550: Commit Sylvain Leroux's patch which adds qualified identifiers to ij.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@916014 13f79535-47bb-0310-9956-ffa450edef68"
f6d5ae4dd7393e9ee9c7c30b3bf4620c851d1e59,"DERBY-4562 Compilation of prepared statement results in Syntax Error

Patch derby-4562c. This fixes a problem with the parser logic to
determine if OFFSET is used as an identifer or is the start of an
offset clause. (Derby does not make OFFSET a reserved word for
compatibility reasons.)

The patch also adds new test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@916075 13f79535-47bb-0310-9956-ffa450edef68"
541361f67f6dfdad61967be31ca9734c194cc002,"DERBY-4563: Avoid unnecessary use of getStream and getStreamWithDescriptor

Introduced the method DataValueDescriptor.hasStream() - use this method to check
if the data value is, or will be, represented by a stream.
Made DVD.getStream() and SDV.getStreamWithDescriptor() fail if hasStream returns
false (maybe this check can be removed, or made cheaper, in the near future?).

The reasoning behind the change is to make it easier to debug and investigate
issues concerned with incorrect stream state. If the stream is ""leaked"" from the
DVD, it is because it will be used to access the data. It will also be easier to
guarantee that the stream has a certain state, for instance that it is 
positioned just before the first byte of user data when returned from the DVD.
It may be expensive to re-position the stream, which is why getStream() != null
isn't the best way to check if the value is a stream. The need to re-position is
again caused by missing (or non-exposed) functionality in the stream coming from
store.

In most cases the stream should only be obtained once from a given DVD, but 
there are currently exceptions to the rule.

Patch file: derby-4563-1b-dvd_hasStream.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@916261 13f79535-47bb-0310-9956-ffa450edef68"
66d02f124b1c0d6107d021b8c06bd4b96a06c139,"DERBY-4569; ij2.sql fails with cdc foundation (from weme6.2);
  updated master to match changes of revision 916014 for DERBY-4550


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@916437 13f79535-47bb-0310-9956-ffa450edef68"
32bd74eddce47244e36bbf0ebb2c7cf32e0a04ea,"DERBY-4563: Avoid unnecessary use of getStream and getStreamWithDescriptor 

Replaced use of StreamStorable.returnStream in the JDBC layer with
DataValueDescriptor.getStream.

Patch file: derby-4563-2a-replace_streamstorable_in_jdbclayer.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@916640 13f79535-47bb-0310-9956-ffa450edef68"
2aa3e0b6e722cd11f2dba848d9b7336864756724,"DERBY-4564 Replication tests do not pick up derby.tests.networkServerStartTimeout setting


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@916897 13f79535-47bb-0310-9956-ffa450edef68"
53a9990bbb6c335d76a8b8a30fb312cb1528a899,"DERBY-4570: test failure in ij7 with cdc foundation profile (ibm's weme6.2)

Disable the test cases that require java.sql.Driver when running in an
environment that only supports the JSR-169 subset of JDBC.

Patch contributed by Sylvain Leroux <sylvain@chicoree.fr>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@917466 13f79535-47bb-0310-9956-ffa450edef68"
f246c9c683953820ffc2d52631e97c28f20d01a6,"DERBY-4538

Committing patch DERBY4538_NoReferencingClause_diff_v2.txt attached to jira DERBY-4538(removed redundant ; as pointed by Knut).

This changes the UPDATE and DELETE statement codes to be little bit smarter when they decide what columns should be part of the read map. Currently, as soon as these 2 nodes find that there are relevant triggers on the table, we decide to read all the columns from the table. With the patch, we will check if all the relevant tiggers have missing REFERENCING clause. If yes, then do not need to read all the columns. Just the columns needed by the UPDATE/DELETE statement. This will get rid of OOM we run into when the table has LOB columns BUT only in the case when the UPDATE/DELETE statement does not reference the LOB column and all the triggers defined on them have missing REFERENCING clause. I have enabled the TriggerTests in lowmem suite with the missing REFERENCING clause cases enabled. For all the other test cases, I simply return from those test cases without actually testing it because we do not have fix for those cases yet. The lowmem suite does not get run regularly and when it is run, as the name indicates, it runs with limited heap. I wanted us to be able to run these tests with default heap as well. To achieve that, I am including the TriggerTests in lang suite too. 

The INSERT table with INSERT triggers work fine already without my changes as long as the INSERT statement does not reference the LOB column. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@917771 13f79535-47bb-0310-9956-ffa450edef68"
8d55491d4f710706dca4e9eded1a22330d1fedf6,"DERBY-4491: The network client changes UDTs into Strings and returns their type as LONGVARBINARY.

Made NetDatabaseMetaData.serverSupportsUDTs return the correct value.

Patch file: derby-4491-02-aa-supportsUDTs.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@918112 13f79535-47bb-0310-9956-ffa450edef68"
8b5ee6279e5d854ae6f66a397d900e77c400e972,"DERBY-4574: derby.jar needs Bundle-ManifestVersion header for OSGi

The derby.jar has all the bundle metadata you would expect for it to
be an OSGi bundle, except for the Bundle-ManifestVersion header.
As a result it is not a valid R4 bundle, but will be treated as an R3 bundle.

Looking at the metadata provided it looks as if the bundle should be
an R4 bundle. Adding the Bundle-ManifestVersion will make it a proper R4 bundle. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@918152 13f79535-47bb-0310-9956-ffa450edef68"
f7ce2630016e13e93246ae299925a2548b552daf,"DERBY-4571: Memory leak on server when using ""SET ROLE"" command

Remove the dependency on the current role when the activation is closed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@918359 13f79535-47bb-0310-9956-ffa450edef68"
9a05e650f8bccc4817e46656228e9e1090737515,"DERBY-4565: Add a client for testing the concurrency of sequence generators.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@919159 13f79535-47bb-0310-9956-ffa450edef68"
2571c1ceaae71179b17b36dd6c25506ef0ab5f48,"DERBY-4424: Convert outerjoin.sql into JUnit

This change was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

This change introduces a new JUnit-based assertion test, OuterJoinTest, which
replaces the previous ij-based outerjoin-sql test. The new test is added to
the lang suite of JUnit tests, and the old test is removed from the
derbylang.runall suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@919250 13f79535-47bb-0310-9956-ffa450edef68"
b56ee520cff32478516df2408da005ec192898d8,"DERBY-4576: Check in Sylvain Leroux's fix to enable ij qualified identifiers on the GET CURSOR command.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@919633 13f79535-47bb-0310-9956-ffa450edef68"
534bf29c54b3d4775fd9d0eec64087c6441387be,"DERBY-4548; alternative location for ant.properties; forgot to adjust 
  BUILDING.html after the latest changes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@920527 13f79535-47bb-0310-9956-ffa450edef68"
b5377602a6e3fce8d56511063ade316c7b885ade,"DERBY-4564 Replication tests do not pick up derby.tests.networkServerStartTimeout setting




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@921028 13f79535-47bb-0310-9956-ffa450edef68"
a216dfd431d06630fe9df6f8bcccfbcda8d01b94,"DERBY-4166 improvements to the mailjdbc test
Contributed by Lily Wei lilywei@yahoo.com

- Changed schema to allow multiple attachments.
- Increase sleep time between threads to avoid deadlocks.
- Restructure refresh thread to more accurately reflect mail retrieval.
- maintain 10 - 56 rows during test to keep size predictable.
- Make sure all transactions are commited or rolled back to avoid locking issues.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@921070 13f79535-47bb-0310-9956-ffa450edef68"
39c6ffc33dd4b91224a8d4741b07930a980ee42f,"DERBY-4565: Loop till the lock wait timeout when attempting to allocate a block of sequence numbers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@921365 13f79535-47bb-0310-9956-ffa450edef68"
60edeb0cb29daf9d28ece1863db779c1af5a3f62,"DERBY-4483: Provide a way to change the hash algorithm used by BUILTIN authentication

Added a database property, derby.authentication.builtin.algorithm,
that specifies which message digest algorithm to use when storing user
credentials in the database.

Added functional tests and upgrade tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@922304 13f79535-47bb-0310-9956-ffa450edef68"
80e55fc858391d70dabe4afd13f51caa839a031c,"DERBY-4580: Fix dblook on soft-upgraded databases, which had been broken by the addition of sequences.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@922458 13f79535-47bb-0310-9956-ffa450edef68"
abe46d016ccf90a2ae80a820a3c737cb85f075c7,"DERBY-1748 (partial) Removed unused collation code


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@922682 13f79535-47bb-0310-9956-ffa450edef68"
b8e524192b7a80748d689b18ea5b4081b2ba8409,"DERBY-3207: Allow bin scripts to run without DERBY_HOME set

Inline the contents of derby_common.sh in the shell scripts at build
time so that they contain the necessary logic to find the jar files
even when DERBY_HOME has not been set.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@924209 13f79535-47bb-0310-9956-ffa450edef68"
df52fc382c2dadc3d7d278f9dce235cf045380d3,"DERBY-3207: Add the generated scripts in the bin directory to svn:ignore


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@924217 13f79535-47bb-0310-9956-ffa450edef68"
23f97a597716ee5b08eff698b7177850ad8e1294,"DERBY-4483: Provide a way to change the hash algorithm used by BUILTIN authentication

Added more comments about the incompatibility between the configurable
hash scheme and strong password substitution.

Changed a symbol that still referred to the SHA-1 based authentication
scheme as the new scheme.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@924746 13f79535-47bb-0310-9956-ffa450edef68"
cdf2811052995a14d6a17575b6da1794c92a6278,"DERBY-4322  intermittent failure in runtimeinfo.

Contributed by Myrna van Lunteren.

The theory is that this failure is caused by a problem in the previous test DerbyNetAutostart which launches a process to start the server and can be left pinging if the check for the server in the launching process, does not allow enough time for the server to come up.  The pings increment the session number as seen by runtimeinfo.  So the changes are to DerbyNetAutoStart and are to

1) Make sure the server launching process retries enough times for the launched process comes up.
2) Make sure if something does go wrong, the launched process is destroyed



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@925377 13f79535-47bb-0310-9956-ffa450edef68"
178ca0cfb796b5a5788d25ded0978773ea254332,"DERBY-4483: Make toHexByte() private to discourage its use in new code


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@926520 13f79535-47bb-0310-9956-ffa450edef68"
c5c4f1932bc4f30d021ca2d769803e69cdc8728c,"DERBY-2438: Remove the JDBC20Translation interface

All the constants in this interface are now available in the default
compile classpath, so remove this indirection.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@926526 13f79535-47bb-0310-9956-ffa450edef68"
fa2af291299a4e65f3e5ced5630fdcfc315d1632,"DERBY-4590: You can drop a file-system database from a directory named ""memory"".

Fixed low-level logic determining if you are allowed to drop a database or not.
The check is based on substring matching of the protocol part of the database
name.

Patch file: derby-4590-1a-disallow_drop_properly.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@926600 13f79535-47bb-0310-9956-ffa450edef68"
8b2e4e7ab1b66389ae5a2cb0ae63c5bca53537e6,"DERBY-4593: Tweak ReleaseNotesGenerator for 10.6 release and checkin first cut of 10.6 release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@926710 13f79535-47bb-0310-9956-ffa450edef68"
973b326a046bcb2278f2ba0f10fb6b8177a32bc2,"DERBY-2017: Client driver can insert and commit partial data when a LOB stream throws IOException or does not match the specified length

Added regression tests (not yet wired into a suite, awaiting fix).
Used JDBC 4.0 API to ""force"" use of layer B streaming, even though DRDA/DDM
allows layer B streaming to be used in other cases too.

Patch file: derby-2017-2b-regression-test.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@927114 13f79535-47bb-0310-9956-ffa450edef68"
d1806d0609889d41186342a83a4760a162e6b317,"DERBY-2017: Fixed JavaDoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@927315 13f79535-47bb-0310-9956-ffa450edef68"
3b82686e32a8d4fa2027350279104f9b243b35d6,"DERBY-4483: Provide a way to change the hash algorithm used by BUILTIN authentication

Added more information to error message for authentication failure
with strong password substitution to indicate that it might have been
caused by the use of a custom hash algorithm.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@927367 13f79535-47bb-0310-9956-ffa450edef68"
8c305e2f3fad1c3a4f98c06c7f2b53e2bfdd308c,"DERBY-4483: Provide a way to change the hash algorithm used by BUILTIN authentication

Make fresh databases use the new authentication scheme with SHA-256 by default.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@927368 13f79535-47bb-0310-9956-ffa450edef68"
3dd23996ffa4421d8233bff340358307f51c34ce,"DERBY-4594: ArrayIndexOutOfBoundsException thrown in PreparedStatement execution

Added missing categorize() method in CoalesceFunctionNode.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@927430 13f79535-47bb-0310-9956-ffa450edef68"
22917efc1e939b7a652992f40be3e687435b5406,"DERBY-4068: Fix precision/scale of numeric/decimals and length of string types when selected as return values of functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@927631 13f79535-47bb-0310-9956-ffa450edef68"
b7e89514f93dd380400c8862bd99afd76b58ac6a,"DERBY-4598 Print class loader used to boot and shutdown derby in derby.log



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@928065 13f79535-47bb-0310-9956-ffa450edef68"
fc5f3cc73f7558535143bec65d14d8a6748f0118,"DERBY-4600: Use ValueNodeList helper methods in CoalesceFunctionNode

Use the helper methods defined in ValueNodeList to process the
argumentsList field in CoalesceFunctionNode. Also add a new helper
method, isEquivalent(), and use it in BinaryListOperatorNode,
ConditionalNode and CoalesceFunctionNode.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@928649 13f79535-47bb-0310-9956-ffa450edef68"
440c27c24e19bdc3afdf4568af87a97973455523,"DERBY-4584: Unable to connect to network server if client thread name has Japanese characters

Patch contributed by Tiago R. Espinha.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@929085 13f79535-47bb-0310-9956-ffa450edef68"
5212101437e334011b805bd9260998d5b57c606b,"DERBY-1748: Global case insensitive setting

Patch contributed by Gunnar Grim.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@929111 13f79535-47bb-0310-9956-ffa450edef68"
1eee305372a257c1d27b2e49ad7803260e4160ed,"DERBY-4602, DERBY-4483: Use SHA-1 for BUILTIN authentication if SHA-256 isn't supported


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@929715 13f79535-47bb-0310-9956-ffa450edef68"
1ef683738a7bfc85621caf65a1d8cb7cc36d866b,"DERBY-4603: test testBuiltinAuthenticationWithConfigurableHash fails from upgradeTests.Changes10_6 with ibm's j9

Test with a hash algorithm that's available on all supported platforms.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@929891 13f79535-47bb-0310-9956-ffa450edef68"
427cb4e5a323755a652037cdc6d361213092c7ee,"DERBY-4604: test lang.CollationTest.testSwedishCaseInsensitiveCollation fails with IBM's weme6.2/1.4.2. & Sun's 1.4.2

Disable test case when the JVM suffers from this bug:
http://bugs.sun.com/view_bug.do?bug_id=4804273


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@930177 13f79535-47bb-0310-9956-ffa450edef68"
3d7c3d5eb5e645e53a156adc6ff2a7bfa90fa724,"DERBY-4509; convert autoincrement.ssql to JUnit
  patch contributed by Jayaram Subramanian, rsjay1976 at gmail dot com  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@930311 13f79535-47bb-0310-9956-ffa450edef68"
0bd328032ec1f98dbe790c42e056d8fce1063c63,"DERBY-4593: Second rev of release notes for 10.6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@930863 13f79535-47bb-0310-9956-ffa450edef68"
bd2baddc9f6e4aa5ac67d52600897503638185c2,"DERBY-4585: IndexChanger.doDelete throws NullPointerException

Make sure the cached index scan is not cleared too early by a result
set that doesn't use it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@931076 13f79535-47bb-0310-9956-ffa450edef68"
876391e41cac4c1b334d20e2d3d8860925f33091,"DERBY-4608: Unnecessary conversion of binary values to strings in SQLBinary.compare()

Use isNull() instead of getString() to check if the values are null,
since we don't need the string representation of the values. Also add
a test case to HeapScan to demonstrate the performance impact.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@931189 13f79535-47bb-0310-9956-ffa450edef68"
807b29ce247f78444e5dcb76ac19d145562cb3af,"Remove offensive language in assert message

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@931206 13f79535-47bb-0310-9956-ffa450edef68"
f18f8b08f0b1eb55b3aaf765b968df63c686df88,"DERBY-4607: HeapScan test commits wrong connection

Use BaseJDBCTestCase helper methods to ensure that the same connection
is used all places in the HeapScan and in its sub-class
CoveredIdxScan. (Previously, different connections were used when
executing a statement and when committing.)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@931255 13f79535-47bb-0310-9956-ffa450edef68"
9c285a7280216e8d0bab5cfebf359a41326ea3a7,"DERBY-4582: Timestamps inserted with GMT calendar are 1 hour later when subsequently read with GMT calendar (Server Mode Only)

Added test case that exposes the bug. The test case currently only
passes with the embedded driver and is therefore not enabled in any
test suites.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@932930 13f79535-47bb-0310-9956-ffa450edef68"
6f36c3417ff32a0ff58f3ff42bc838a73f2d7cc6,"DERBY-4582: Timestamps inserted with GMT calendar are 1 hour later
when subsequently read with GMT calendar (Server Mode Only)

Improved the regression test by adding a test case for updatable
result sets.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@933637 13f79535-47bb-0310-9956-ffa450edef68"
bead0abc101f5fc80d162e3de195b34b5542ab99,"DERBY-2602: Allow full JDBC nanosecond-precision in timestamps across the network just as is done in the embedded scenario.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@933726 13f79535-47bb-0310-9956-ffa450edef68"
866573f3a65fdd6a434c9ce8f19391551387d776,"DERBY-4615: EmbedCallableStatement ignores Calendar in getDate, getTime and getTimestamp

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@934474 13f79535-47bb-0310-9956-ffa450edef68"
f3fcafd36ed45bf50972fa64c9d549b4c1c371d3,"DERBY-4565: Make it possible to run the concurrency test for sequence generators without any tables in order to isolate sequence generator behavior from other concurrency bottlenecks.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@934502 13f79535-47bb-0310-9956-ffa450edef68"
992b79d1bbaef928104dd916d4438447df9ab030,"DERBY-4588 Provide a diagnostic property that will print a stack trace on succes
sful boot to help diagnose dual boot issues after the DERBY-700 fix

To use, set  the property derby.stream.error.logBootTrace=true
A stack trace will print in the derby.log on boot and shutdown.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@934996 13f79535-47bb-0310-9956-ffa450edef68"
93a23a8c268bb292ee6726a60706e600b3e98572,"DERBY-3650: internal multiple references from different rows to a single BLOB/CLOB stream leads to various errors when second reference used.

Clone DVDs during joins if their value is represented as a (store) stream.
Enable tests as part of the regression suite.

Origial patch contributed by Mike Matrigali (mikem_app at sbcglobal dot net),
reworked by Kristian Waagan (Kristian dot Waagan at Sun dot com).

Patch file: derby-3650-preliminary_2_reworked-1b.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@935336 13f79535-47bb-0310-9956-ffa450edef68"
a302e2c8a0b57efe0901b2cacfb3f455d8ea4246,"DERBY-4593: Check in first version of the 10.6 release notes for community-wide review.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@935602 13f79535-47bb-0310-9956-ffa450edef68"
54a04d349d20a20b2d7dd2a55788cffae376d470,"DERBY-4441 Change sysinfo to print out more specific JVM information

Contributed by lilywei at yahoo dot com
Show system properties java.runtime.version and java.fullversion with sysinfo  to give more specific JVM information.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@935700 13f79535-47bb-0310-9956-ffa450edef68"
c1d0340b79be6ee6a4754a2261e3435ad9d62748,"DERBY-4582: Timestamps inserted with GMT calendar are 1 hour later
when subsequently read with GMT calendar (Server Mode Only)

Partial fix. This check-in makes the client do the conversion to the
requested time zone correctly, and the correct timestamps will be sent
to the server. There's still some incorrect handling of the values on
the server, as well as when the client reads them back from the
server, so the results may still end up being wrong.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@935868 13f79535-47bb-0310-9956-ffa450edef68"
e7350ca68be4988dc6ae0ea58829c889c775ce5b,"DERBY-4593: Small changes to release notes based on community feedback.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@936006 13f79535-47bb-0310-9956-ffa450edef68"
95ad00d24ab303c2662aae20c6219b13166e742b,"DERBY-4621: Invalid conversion from Timestamp to String when calling setTimestamp() with Calendar

Two changes to fix the wrong time and to harmonize the format between
the methods that take a Calendar argument and those that don't:

  1) Use 24-hour clock when converting the time component to a string

  2) Add a decimal point and a single zero if the nanosecond component
     of a Timestamp is zero


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@936215 13f79535-47bb-0310-9956-ffa450edef68"
7d21df08807408a1ca091d8678a59a62cd63083f,"DERBY-4582: Timestamps inserted with GMT calendar are 1 hour later
when subsequently read with GMT calendar (Server Mode Only)

Partial fix. This fix makes the server use a GMT calendar when it
reads a date, time or timestamp from the client. This way, the values
won't be changed if they refer to a point in time that does not exist
in the local time zone due to switch from/to daylight saving time (GMT
doesn't observe daylight saving time and therefore doesn't have these
holes in the range of valid values).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@936218 13f79535-47bb-0310-9956-ffa450edef68"
9c8b07b1b242f47fd5ec9f5b61acbbce904c223d,"DERBY-4593: Significantly revamp the ReleaseNotesGenerator to account for the fact that JIRA reports change shape between releases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@936472 13f79535-47bb-0310-9956-ffa450edef68"
9f940df0f0b2e889eb5b690f62e50ba88b7de5fd,"DERBY-4593: Second rev of 10.6.1 release notes for community review.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@936908 13f79535-47bb-0310-9956-ffa450edef68"
cf5cebff14512d1875f5e929a5028193118094a8,"DERBY-2017: Client driver can insert and commit partial data when a LOB stream throws IOException or does not match the specified length 

Made the client tell the server (if supported) if the EXTDTA transfer was
successful or not, by appending a Derby-specific status byte to the user data.
If the transfer was unsuccessful, an exception will be thrown on the server
side even if the data was padded by the client to avoid a protocol exception.
There are three types of errors that can happen on the client when reading
the user stream:
  a) the stream is shorter than specified
  b) the stream is longer than specified
  c) an IOException is thrown when reading the stream

The fix consists of logic to allow the client and the server to determine if
the status byte will be sent, code to append the status byte on the client, and
code on the server to parse / read the status byte.
Some code in DRDAConnThread was also refactored (mostly readAndSetExtParam).

Patch file: derby-2017-3c-fix.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@936950 13f79535-47bb-0310-9956-ffa450edef68"
17a0ba93bc20d0200848c3373853f1c0e7202dbb,"DERBY-4619: PropertySetter fails due to an empty jre/lib directory 

Skip JDK install directories which are empty / invalid (affects only the
old detection algorithm, which is based on directory name recognition).

Patch file: derby-4619-1a-fix_for_empty_libdir.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@936954 13f79535-47bb-0310-9956-ffa450edef68"
204f3a0a249c57736a0e4dd634fcf40561d40493,"DERBY-4582: Timestamps inserted with GMT calendar are 1 hour later
when subsequently read with GMT calendar (Server Mode Only)

Partial fix. This patch makes the server read time, date and timestamp
values from ResultSets and CallableStatements using the getter methods
that take a Calendar object. A GMT calendar is used, so that times
that are not possible to represent in the local time zone (like the
""lost hour"" when switching to daylight saving time) are not silently
modified. The GMT calendar is also used when formatting the value
before it's sent to the client.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@937170 13f79535-47bb-0310-9956-ffa450edef68"
93c4b079ec0adadf83b609026e218d4fff846c03,"DERBY-2017: Client driver can insert and commit partial data when a LOB stream throws IOException or does not match the specified length

Remove workaround for DERBY-2017 (the test accepted a row that shouldn't
have been committed).

Patch file: derby-2017-4a-remove_test_workaround.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@937198 13f79535-47bb-0310-9956-ffa450edef68"
f6a3dc50f5167400b980cd55a5bea78f820ae853,"DERBY-4593: Fix some garbled entities in the summaries of 3 bugs fixed for 10.6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@937317 13f79535-47bb-0310-9956-ffa450edef68"
ed6bf515f81116abb019bb2170a4383b426d5dcb,"DERBY-2017: Client driver can insert and commit partial data when a LOB stream throws IOException or does not match the specified length

Enabled tests as part of the suites.
Added tests for binary data.

Patch file: derby-2017-5a-binary_tests.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@937655 13f79535-47bb-0310-9956-ffa450edef68"
09b5d5a1e99703b23883359f701ba83fe450f8cc,"DERBY-4593: Bumped version on trunk to 10.7.0.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@938050 13f79535-47bb-0310-9956-ffa450edef68"
7d521f506c9c8251d9ff8fb1960dd43d3e8e574b,"DERBY-4582: Timestamps inserted with GMT calendar are 1 hour later
when subsequently read with GMT calendar (Server Mode Only)

Last patch for this issue. Now the Calendar objects passed to the
getters in ResultSet and CallableStatement are passed further down to
where the parsing of the values from the server happens.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@938547 13f79535-47bb-0310-9956-ffa450edef68"
5e93fad1d7b94e7023ac67e4413555167fb4cbc0,"DERBY-4582: Timestamps inserted with GMT calendar are 1 hour later
when subsequently read with GMT calendar (Server Mode Only)

Fixed off-by-one error in the previous commit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@938796 13f79535-47bb-0310-9956-ffa450edef68"
b2d4ac8dc0ce39a6b69e5fc19d6d1976d0ac8ff9,"DERBY-4610: Error attempting delete with cascade and triggers

Added a regression test case for the bug. Not enabled yet.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@938959 13f79535-47bb-0310-9956-ffa450edef68"
a1b56d7d6bf43315aea0073a73e8078f888c3173,"DERBY-4531: Client setCharacterStream closes its Reader argument stream in finalizer

Added a work-around for the issue where the SQLState differs depending on
whether the finalizer has been run or not.
Can be removed when DERBY-4531 has been fixed properly.

Patch file: derby-4531-1a-test_workaround.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@938972 13f79535-47bb-0310-9956-ffa450edef68"
e068569aa577a14e84258488d46c4444d87493dc,"DERBY-4582: Timestamps inserted with GMT calendar are 1 hour later
when subsequently read with GMT calendar (Server Mode Only)

Fixed test failure on small devices because the Foundation Profile 1.1
API doesn't include getYear(), getMonth(), etc, in java.util.Date. Use
java.util.Calendar to access those fields instead.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@939231 13f79535-47bb-0310-9956-ffa450edef68"
0ad67ef24aee952b2642cf7677ac5c56ae475982,"DERBY-2156: message XSDB8 has references to db2j

Corrected property name from db2j.database.forceDatabaseLock to
derby.database.forceDatabaseLock in error message.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@939730 13f79535-47bb-0310-9956-ffa450edef68"
c69c8b01426926245124eaf21bcc73e1c3c03950,"DERBY-4610: Error attempting delete with cascade and triggers

Backed out the fix for DERBY-3049 (four commits) using this command:

    svn merge -c -601395,-600678,-598739,-572753 .

Additionally, two import statements that had been removed in later
commits had to be reintroduced manually in
BasicNoPutResultSetImpl.java and TemporaryRowHolderImpl.java.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@940462 13f79535-47bb-0310-9956-ffa450edef68"
bc804992edaac7ec85eedb706026dceebad2a0ab,"DERBY-4610: Error attempting delete with cascade and triggers

Enabled the regression test case for this bug.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@940469 13f79535-47bb-0310-9956-ffa450edef68"
3b402bde72e8bc76988c4488199fa73afffe4545,"DERBY-3857: Add tools/ide and maven2 to source distributions, removing the deprecated maven directory at the same time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@940530 13f79535-47bb-0310-9956-ffa450edef68"
2f3d0522948dd1eb9184284f069a7affba4d2ba6,"DERBY-4314 With derby client setTrasactionIsolation executes and commits even if isolation has not changed.

Contributed by Lily Wei (lilywei at yahoo dot com) and Kristian Waagan
setTransactionIsolation will no longer commit.
Piggybacking of the isolation level was implemented to avoid a performance impact.
There is specialized logic for XA Resume and Join to make sure the client isolation is in sync with the server.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@940620 13f79535-47bb-0310-9956-ffa450edef68"
6c73d7495acddffc6a90190039e7d02fd2b8c818,"DERBY-4638: Expose names of top-level test suites for easier scripting

Added public method getTopLevelSuiteNames() to AllPackages to retrieve
the class names of all test suites. Also added a main() method to make
it retrievable from the command line.

Moved ReplicationSuite and EncryptionSuite from All to AllPackages so
that they're included in the returned list.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@941627 13f79535-47bb-0310-9956-ffa450edef68"
9deeb8f3a7d2d2c8187475f09cc980ad757e4714,"DERBY-4632: Delete Maven1 build files.

Deleted the old build scripts / files for producing Maven 1 artifacts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@942031 13f79535-47bb-0310-9956-ffa450edef68"
8badf99336ad4a51500fea45da25506f9b1fbd13,"DERBY-4179 bootLock.java fails with missing exception on z/OS with pmz3160sr2ifix-20081021_01(SR2+IZ32776+IZ33456), and Windows Vista

Patch derby-4179-junit-5:

* Rewrite of boot lock test to JUnit, this also solves the problem
  with running with jars in relative classpaths.

* Added test of effectiveness of derby.database.forceDatabaseLock for
  phoneME platforms, until we implement DERBY-4646. (I could not find
  any other such test).

* Fixed JUnit harness to correctly fork a Sun phoneME vm (image name
  is cvm, not java),

* Added logic to capture what happens to minion (if it fails) by
  capturing its stderr (if it ever gets started, that is), cf. example enclosed.

* Added socket logic to communicate to parent when minion has booted
  the ""dual boot"" candidate to avoid having to wait for 30 seconds or
  more to be sure it has done so. Test now runs in a few seconds.

* Skips test for j9 for now, since this platform fails on the fork
  operation according to Kathey, cf DERBY-4647.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@942286 13f79535-47bb-0310-9956-ffa450edef68"
6e93048123c6d007690261200ca8d35cd5a5a627,"DERBY-4179 bootLock.java fails with missing exception on z/OS with pmz3160sr2ifix-20081021_01(SR2+IZ32776+IZ33456), and Windows Vista

Followup patch, doc and comment changes only.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@942476 13f79535-47bb-0310-9956-ffa450edef68"
0c7cea74b76d30f42b663c2528fadc8219d6a9fe,"DERBY-4179 bootLock.java fails with missing exception on z/OS with pmz3160sr2ifix-20081021_01(SR2+IZ32776+IZ33456), and Windows Vista

Followup comment fix.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@942480 13f79535-47bb-0310-9956-ffa450edef68"
6c65c08d02f65b57f1cf4b4787382003fbf3a6f2,"DERBY-4179 bootLock.java fails with missing exception on z/OS with pmz3160sr2ifix-20081021_01(SR2+IZ32776+IZ33456), and Windows Vista

Follow-up simplification patch, which replaces the home-grown system
property setup/teardown code with the standard
SystemPropertyTestSetup.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@942587 13f79535-47bb-0310-9956-ffa450edef68"
baab96fc025a264d110f96b46ab28a469cfe065f,"DERBY-4343 ASSERT FAILED calling setTransactionIsolation checking isolation_ == level on pooled connection

Contributed by Lily Wei lilywei at yahoo dot com

This is just the test case for this issue. The issue itself was actually fixed with DERBY-4314. Also included is one DERBY-4314 test case to make sure piggybacking works ok after statement execution.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@942908 13f79535-47bb-0310-9956-ffa450edef68"
de4c68fb90ae4dbc8cac7e41362055561df7666e,"DERBY-4650: Predicates in HAVING clause should be pushed down to restricted VTIs

Added a test case that shows that a predicate is not pushed down.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@943088 13f79535-47bb-0310-9956-ffa450edef68"
eff3919525f1608c82cb7ec977d9f1f694c10abd,"DERBY-4613: Make the client driver treat boolean columns the same way that the embedded driver does.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@943465 13f79535-47bb-0310-9956-ffa450edef68"
92d8fc50554c2c5830c0b0b14fd3ecaa463077f1,"DERBY-4651: Add a test case to verify that the VTI does not return the wrong results in simple cases which attempt to put constant expressions into the WHERE clause.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@943605 13f79535-47bb-0310-9956-ffa450edef68"
9e26886d13ecad7e2e7a8612c3dd3fd9ab8d3bf6,"DERBY-4651: Raise an exception rather than return wrong results in this problem scenario.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@943633 13f79535-47bb-0310-9956-ffa450edef68"
9c18d6682566721820b5df9ecdedc89b74b9f811,"DERBY-4654: Restriction.toSQL() doesn't escape special characters

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@944152 13f79535-47bb-0310-9956-ffa450edef68"
f6957647eff859e1b1278f341ac441f0ceb13fbf,"DERBY-4651: Hidden assumptions in FromVTI.makeRestriction()

Remove redundant type checks and casts when calling isBooleanTrue()
and isBooleanFalse().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@944174 13f79535-47bb-0310-9956-ffa450edef68"
a5848888b4623a46da6c28e8341d1a3c4a71674d,"DERBY-4657: Allow functions to return BOOLEAN values.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@944386 13f79535-47bb-0310-9956-ffa450edef68"
4d79a2f6a98704d3288cc6418ac43e94a1466860,"DERBY-4663: Add regression test to track the behavior of ResultSet.getBoolean().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@945197 13f79535-47bb-0310-9956-ffa450edef68"
d063dd4015b374d78da82ee39bd4106fa57abd69,"DERBY-4593: Wire 10.6.1.0 into the upgrade tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@945745 13f79535-47bb-0310-9956-ffa450edef68"
9e7a9b97429fb5e2f0eeceb2589a2be89002f114,"DERBY-4593: Update STATUS file to reflect the publishing of 10.6.1.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@945793 13f79535-47bb-0310-9956-ffa450edef68"
7beb3a7dfdbaf13c125f4eb6fe525949e217a7e8,"DERBY-4593: Small change to the maven README file to punch up the necessity of stating your gpg passphrase on the command line when you deploy the artifacts.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@945802 13f79535-47bb-0310-9956-ffa450edef68"
677364ffeaf45eeacdeba55856a2f22f27ac40aa,"DERBY-4624: Broken logic for avoiding testing across midnight in TimestampArithTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@946079 13f79535-47bb-0310-9956-ffa450edef68"
f2a8dbd5269071235a7bcc015d79aa35e695c7d5,"DERBY-4665: Unidiomatic error handling in TimestampArithTest

Use helper methods that preserve the stack trace on errors instead
of printing to the console and exiting.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@946188 13f79535-47bb-0310-9956-ffa450edef68"
9667a12a5ad53571be3e9af4755bdb35ef120f6e,"DERBY-4593: More tweaks to the STATUS page and the maven instructions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@946331 13f79535-47bb-0310-9956-ffa450edef68"
4458855142b34ccfdfb844cd3489e0cf7ca16305,"DERBY-4669 (partial) ClassLoaderBootTest fails if derbyclient.jar
comes before derby.jar on the classpath

Make client classes use the SanityManager found under java/common so
that the engine version of SanityManager is not pulled into
derbyclient.jar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@946641 13f79535-47bb-0310-9956-ffa450edef68"
a4521052325a5f1a4ae86467ccac35d6af1060e4,"DERBY-4664 Change Derby internal stored procedures to avoid DriverManager.getConnection(""jdbc:default:connection"") as it may be recognized by other Drivers

This fix is really a work around for  DERBY-4668 for internal procedures.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@946794 13f79535-47bb-0310-9956-ffa450edef68"
7e7c0879c9645378b8140b0be858eb596f010a46,"DERBY-4674: BooleanValuesTest fails if Xalan is not available

Skip the test if the required XML libraries are not present.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@947442 13f79535-47bb-0310-9956-ffa450edef68"
377e7e70fa6600dfc80c74ad44b4002b26009ff1,"DERBY-4593: In the maven instructions, note how long it took for the artifacts to propagate to the repositories.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@947633 13f79535-47bb-0310-9956-ffa450edef68"
39f0127f72179b9a529c2604c0b2d8a6045be153,"DERBY-4674: Re-enable the BooleanValuesTest on jdk 1.4: simply disable the xml part of the test on that platform.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@947656 13f79535-47bb-0310-9956-ffa450edef68"
246f5579b01fd9f7fa3a94ff3dbe6a2543c73c26,"Remove reference to non-existing test (LOBTest, has been incorporated into other tests).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@948014 13f79535-47bb-0310-9956-ffa450edef68"
da4e4830e4e74aee09c7f03df2394c2878a4b93b,"DERBY-2523: Removed left-over property file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@948015 13f79535-47bb-0310-9956-ffa450edef68"
40a9fb59ee6af32ea474ceae3d82443af1d6f668,"DERBY-4671: Embedded driver does not work with jbossCache

Set the type of the dynamic parameters in statements like

  INSERT INTO T SELECT ? FROM T

to prevent a NullPointerException and to revert to the pre-10.6
behaviour.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@948045 13f79535-47bb-0310-9956-ffa450edef68"
85de1e49f64095a8b422b0e00536a60403e864fd,"DERBY-4661: Reduce size of encoding buffer for short character values

Patch consists of two main parts:
 - buffer size reduction
 - added StreamHeaderGenerator.getMaxHeaderLength() (used in size calculation)

In addition a redundant call to LimitReader.setLimit is removed, the constant
READ_BUFFER_RESERVATION is introduced (and used), and a few typos are corrected.

Patch file: derby-4661-1b-reduce_encoding_bz.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@948069 13f79535-47bb-0310-9956-ffa450edef68"
7639017b310b7f4aa99d7383f192e1788d0246d2,"DERBY-4653: Removed unused method.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@950185 13f79535-47bb-0310-9956-ffa450edef68"
30efca7c732b99e01fe38b38513b5ee895a51e22,"DERBY-4667 BootLockTest.testBootLock() sometimes fails with connection refused.

Move the vm logic for Derby151Test outside of the fixture so network server won't start if no tests are run.  This may not correct the problem and even if it does may be a fragile fix, but it giving it a try to see if the prior test Derby151Test is interfering if no fixtures are run but network server is stopped and started.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@950818 13f79535-47bb-0310-9956-ffa450edef68"
1b3f93b3803c19213da2a52f00feebe0f405f0de,"DERBY-4684: Fix implicit casts to BOOLEAN.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@951047 13f79535-47bb-0310-9956-ffa450edef68"
fba7fbab57cef69a885ab26402dc0f9d679aacf5,"DERBY-2532: Client does not return SQLException on XAConnection.getXAResource() on a closed connection, Embedded does 
Made ClientXAConnection.getXAResources throw an exception if the underlying
connection has been closed.

Patch contributed by Sabari S Kumar (swordfish1987 at iwanttobeme dot in).

Patch file: derby-2532-1a-getxares_on_closed_conn.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@951346 13f79535-47bb-0310-9956-ffa450edef68"
afbf89dcf1ec98bd60404769e750726be9d4a323,"DERBY-4449: ArrayIndexOutOfBoundsException when inserting DEFAULT into
unspecified column


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@951366 13f79535-47bb-0310-9956-ffa450edef68"
571f201a7ce93ee524e4a20777e0394fd4237a9a,"DERBY-4083: BTreeScan.delete() throws AM_RECORD_NOT_FOUND if record is found

Changed the logic so that the exception is thrown if the record is not found.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@952131 13f79535-47bb-0310-9956-ffa450edef68"
4f7da81c8876b5a8d02b4e2fbb3bcbca9fc90401,"DERBY-4676: NullPointerException on SELECT on INNER JOIN

Check whether the page is latched after waiting for a lock, and assume
that the row has been deleted if it is not latched.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@952138 13f79535-47bb-0310-9956-ffa450edef68"
9f601725d5605ce3c9db51022bee3146d46d9e48,"DERBY-4551 Allow database user to execute stored procedures with same permissions as database owner and/or routine definer

Patch derby-4551-4, which implements the specification attached to
this issue for executing routines with definer's right, and also adds
tests for this feature. A separate issue has been filed for
documentation changes needed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@952227 13f79535-47bb-0310-9956-ffa450edef68"
125f91823b206f3592dc837c04dfcbb002321ea4,"DERBY-4679 Several left outer joins causes unstable query with incorrect results

Patch derby-4679b, which solves the following problem:

When transitive closure generates new criteria into the query, it is
sometimes confused by situations where the same column name appears in
a result column list multiple times due to flattening of sub-queries.

Flattening requires remapping of (table, column) numbers in column
references. In cases where the same column name appears in a result
column list multiple times, this lead to remapping (reassigning) wrong
(table, column) numbers to column references in join predicates
transformed to where clauses as a result of the flattening.

See also DERBY-2526 and DERBY-3023 whose fixes which were partial
solutions to the problem of wrong column number remappings confusing
the transitive closure of search predicates performed by the
preprocessing step of the optimizer.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@952237 13f79535-47bb-0310-9956-ffa450edef68"
6ad8107bc07c3807d86072cfb38d8b31e0c6714f,"DERBY-4692: Forbid UNIONs between BOOLEAN and non-BOOLEAN types, per the SQL Standard.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@952263 13f79535-47bb-0310-9956-ffa450edef68"
b86c38bac67c21afcdb0a56f8df2c2b5ef4fffd2,"DERBY-4551 Allow database user to execute stored procedures with same permissions as database owner and/or routine definer

Follow-up fix to address some Javadoc issues.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@952284 13f79535-47bb-0310-9956-ffa450edef68"
93a2f7e05c32cdeddf3a7de49f5c5ebafe0719ba,"DERBY-4583: Re-enable the TRUE and FALSE literals.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@952348 13f79535-47bb-0310-9956-ffa450edef68"
79fec783829ef5ce973979a28714019970ba73bc,"DERBY-3856: difference between Embedded vs DerbyNetClient in format of
return from timestamp(cast(? as varchar(32)))

Stop caching the original input string in the parse methods of SQLDate
and SQLTimestamp, and instead generate (and cache) a normalized
datetime string on the first call to getString().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@952581 13f79535-47bb-0310-9956-ffa450edef68"
5017a7d4a4cda6e8763b8eb9ec756db0c5a63d7b,"DERBY-4009 Accommodate length delimited DRDA strings where character length does not equal byte length

patch to include length checking for remaining commands.

contributed by Tiago Espina (tiago dot derby at yahoo dot co dot )


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@953049 13f79535-47bb-0310-9956-ffa450edef68"
df2ca5a30c2d0cf4ed1072201361e3e0b25e2c91,"DERBY-728 Unable to create databases whose name containg Chinese characters through the client driver

Small cleanup patch to add getters for short and regular datbase name.

Contributed by  Tiago Espina (tiago dot derby at yahoo dot com )



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@953058 13f79535-47bb-0310-9956-ffa450edef68"
3c3fb7369149c12933e9752edce61f8d5010e082,"DERBY-4693: RENAME COLUMN loses IDENTITY attributes

This change modifies the RENAME COLUMN logic so that it preserves the
autoincrement properties of the column when renaming it.  Since RENAME
COLUMN more-or-less drops and re-adds the column, we need to ensure
that when the column is re-added, if it is an Autoincrement column, 
we set the CREATE_AUTOINCREMENT flag that the parser sets when
initially creating the table. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@954344 13f79535-47bb-0310-9956-ffa450edef68"
a8132ce473916465f7fdac95f8b83e49eb244c18,"DERBY-3989 / DERBY-4699
Made PropertySetter ignore Java 6 libraries if a Java 5 compiler is used.
If j16lib is specified explicitly in such an environment, the build will be
aborted (an error message will be displayed to the user).

Patch file: derby-3989-02-aa-dontUseJava6LibsWithJava5Compiler.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@954421 13f79535-47bb-0310-9956-ffa450edef68"
999422ff08a887c35b999043ca5e338733751352,"Set svn:eol-style for LogDeviceTest_app.properties


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@954523 13f79535-47bb-0310-9956-ffa450edef68"
012a72b2038158bb57135c3706705081616a731d,"DERBY-4677

We were not transferring unique nullable properties from the system catalog to the store layer during compress table and bulk insert. Because of that, after those operations, we started allowing duplicate rows those causing db corruption. With this checkin, we will be transferring unique nullable properties from sql layer to store layer. System catalogs have the information correct, but unique nullability information was not getting transferred to store during btree recreation in case of compress table and bulk insert operations.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@954544 13f79535-47bb-0310-9956-ffa450edef68"
33288d68f96f790b2d38588ba9c09dc03a3c6c20,"DERBY-4686: SQLBinary.writeBlob is inefficient, reading one byte at a time from the source BLOB

Improves performance by reading and writing from/to a transfer buffer.

Patch contributed by Yun Lee (yun dot lee dot bj at gmail dot com).

Patch file: DERBY-4686-1.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@954748 13f79535-47bb-0310-9956-ffa450edef68"
8f4602dd33435179901ccbb81f6ec7e2c030d7e3,"DERBY-4597 remove references to IBM jcc driver from sysinfo 

Contributed by Lily Wei lilywei at yahoo dot com



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@955001 13f79535-47bb-0310-9956-ffa450edef68"
530c8771e60aa19ed4956e76d58e487524720ca1,"DERBY-2419: Tighten encapsulation of state in TestConfiguration 

Made port and hostname private, and adjusted affected tests.
Introduced DerbyConstants to hold constants used by/in the JUnit tests.

Patch file: derby-2419-3a-further_encapsulation.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@955529 13f79535-47bb-0310-9956-ffa450edef68"
53795a1a91a4589531378f8cc1fdea5431edaf5b,"DERBY-1595 (partial): Network server fails with DRDAProtocolException if a BLOB with size 2147483647 is streamed from client 

Fixed protocol disagreement, where the client sent eight bytes for the
extended length bytes and the server expected six bytes (changed the client
behavior).

Patch file: derby-1595-1a-client_write6bytes.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@955540 13f79535-47bb-0310-9956-ffa450edef68"
d94720331fc2464b7086857dff03d29de67bb87e,"DERBY-462: DatabaseMetaData method supportsConvert() returns true

Return false since we don't support CONVERT.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@955546 13f79535-47bb-0310-9956-ffa450edef68"
447f04883d807bbe8d6fa4c33a84947897ae9e87,"DERBY-4686: SQLBinary.writeBlob is inefficient, reading one byte at a time from the source BLOB

Reduce buffer size if the BLOB value is smaller than the default buffer size.

Patch contributed by Yun Lee (yun dot lee dot bj at gmail dot com).

Patch file: DERBY-4686-2.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@955634 13f79535-47bb-0310-9956-ffa450edef68"
31342ae6032fc3ca39e5c3e77ac626ed66a4430d,"DERBY-4658: Allow explicit casts of string values to BOOLEAN


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@955666 13f79535-47bb-0310-9956-ffa450edef68"
8260425fb4363fa7feaa33b5fcd28bba023a2b24,"DERBY-4704: Incorrect nullability when casting non-nullable VARCHAR to BOOLEAN

Added test case. Disabled for now.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@955900 13f79535-47bb-0310-9956-ffa450edef68"
f903d9ba74233a60cb54f6924e95ae5fa4d1a6e8,"DERBY-4658: Allow explicit casts of string values to BOOLEAN

Removed unnecessary call to setNullability() and added a test that
verified that the correct nullability had been set.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@955940 13f79535-47bb-0310-9956-ffa450edef68"
ff8ae2908a973f66e9c097bbf56b6f1cfcb0881b,"DERBY-4703: Allow BOOLEAN-valued columns in table functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@955983 13f79535-47bb-0310-9956-ffa450edef68"
0859d5b42a3210c4168cc3df1fbe8e0cd63df00a,"DERBY-4704: Make casts of strings to booleans always nullable.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956025 13f79535-47bb-0310-9956-ffa450edef68"
c8bb7d7ad7d2fb59d896c115ebd56c839d6c41a8,"DERBY-4667 BootLockTest.testBootLock() sometimes fails with connection refused.

Removed socket syncrhonization. Test will just wait for spawned java program
to create the lock file.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956075 13f79535-47bb-0310-9956-ffa450edef68"
2e7e8f6dd036011d170b1c497c3daa0d8ba86999,"DERBY-4698 Simple query with HAVING clause crashes with NullPointerException

Patch derby-4698-2. The case of column references in HAVING clauses
being wrong after JOIN flattening was initially solved by
DERBY-3880. That solution was partial in that it can sometimes happen
too late. 

This patch changes the fix-up of column references in a having clause
after join flattening to the same point in time as that of other
column references that need fix-up after the flattening (rcl, column
references in join predicates and group by clauses). Thus the fixup is
moved from the modifyaccesspath phase to the preprocess phase.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956234 13f79535-47bb-0310-9956-ffa450edef68"
c6cafe4a07ea0e255569e8ead9ef50f49e0d7a9c,"DERBY-4776 BootLock test failure.

Fix problem with check in.  For some reason checked in file was still checking for port argument.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956445 13f79535-47bb-0310-9956-ffa450edef68"
7fc54b9cf86d76162c7e8779cad95e681324c775,"DERBY-4279: Statement cache deadlock

When requesting a recompile of a statement, don't wait for other
threads compiling the same statement, but instead create a new
instance of the statement.

Patch contributed by Brett Wooldridge <brett.wooldridge@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956504 13f79535-47bb-0310-9956-ffa450edef68"
6a88161379f1623e1bc95e63c2f5c6ddc5f6dfc1,"Make HoldCursorTest run with the client driver.

Patch contributed by Yun Lee <yun.lee.bj@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956559 13f79535-47bb-0310-9956-ffa450edef68"
9a6252752757f63988fa429f63e68720196ef17e,"DERBY-4659: Allow functions to take BOOLEAN args.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956563 13f79535-47bb-0310-9956-ffa450edef68"
ccfada3067bc0e1391da0cdb539dbb2d8eb31aa7,"DERBY-4706: Remove stale and potentially unused code Request.writeEncryptedScalarStream 

Removed the method writeEncryptedScalarStream in Request, and a number of methods only used by it. The other
methodsdiffer from their ""normal"" counter-parts only by writing into a new buffer instead of the transfer
buffer (i.e. typically because what's written has to be encoded before placed onto the transfer buffer).

Patch file: derby-4706-1a-remove_writeEncryptedScalarStream_and_friends.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956569 13f79535-47bb-0310-9956-ffa450edef68"
b976fd86d019f78e26e74d2002dc1d5d870b85b1,"DERBY-4667 BootLockTest.testBootLock() sometimes fails with connection refused.

Change test to check service.properties in additon to db.lck file so that it won't fail with a directory already exists message.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956659 13f79535-47bb-0310-9956-ffa450edef68"
a6f95866d866b55121220657cf2cb25110486f81,"DERBY-1482

Only read the needed columns for the update trigger when create trigger has identified the columns which will be used in trigger action through the REFERENCING clause. This will avoid reading columns that are not needed thus avoiding OOM problems if the underlying table has large LOBs.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956763 13f79535-47bb-0310-9956-ffa450edef68"
ef6b2dbc8f94f67a72163f535fbfd7c263131e50,"DERBY-4707: convert ShutdownDatabase.java into junit

Removed test (and master) using the old harness.
The test has already been converted to JUnit under DERBY-2464.

Patch contributed by Yun Lee (yun dot lee dot bj at gmail dot com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956847 13f79535-47bb-0310-9956-ffa450edef68"
a6b18af12b408b56fce29db2db0ffe550ac08c51,"DERBY-4659: Add regression test for getFunctionColumns() for functions with BOOLEAN arguments.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@956970 13f79535-47bb-0310-9956-ffa450edef68"
3f42a3ef119a2d579dfad156cfd65b0c37a61fea,"Fixing some comment typo's/grammar.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957039 13f79535-47bb-0310-9956-ffa450edef68"
89c399d4dd8c5e9ae471ac67926611a8e57f2518,"DERBY-4653  Avoid unnecessary round-trip for commit in the client driver

Contributed by Lily Wei lilywei at yahoo dot com



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957053 13f79535-47bb-0310-9956-ffa450edef68"
089170f59bd77bedabfe89b6b213de9f4631e8a1,"DERBY-4653: Avoid unnecessary round-trip for commit in the client driver

Removed unused argument and set autocommit to false in the test.

Patch contributed by Lily Wei (lilywei at yahoo dot com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957164 13f79535-47bb-0310-9956-ffa450edef68"
e23ae386111ba85a22ba3d9edbc7b28ec375f3a5,"DERBY-2925: During export, prevent short-circuiting of file-existence check which happened when the user prefixed the file name with the file: protocol string.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957171 13f79535-47bb-0310-9956-ffa450edef68"
4ce669e503141e231d6b51a83a05f4e50f3c494b,"DERBY-4679 Several left outer joins causes unstable query with incorrect results

Follow-up patch derby-4679-followup, which makes the original patch
safer by also matching the column name once a candidate result column
has been located using the table number and column number pair to
match an RC. This is to safe-guard against false matches, since
DERBY-4595 shows that the column number can be wrong in certain
situations.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957260 13f79535-47bb-0310-9956-ffa450edef68"
b9d20a8d58afc63d8b1672eb44de780acd9b29f2,"DERBY-1482 Missed two master files.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957269 13f79535-47bb-0310-9956-ffa450edef68"
cdfb2d18c497ad9557717bf1a764486bab6cc375,"DERBY-728 Unable to create databases whose name containg Chinese characters through the client driver

Incremental patches  DERBY-728_p2.diff, DERBY-728_p2-test.diff
Add server side UTf8CcsidManager and unit test. 
Change names of ""convertXXXUCS2"" methods to ""convertXXXJavaString"" for clarification.
UNICODEMGR level negotiation to use the the code has not yet been added.

contributed by Tiago R. Espinha tiago dot derby at yahoo dot co dot uk



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957580 13f79535-47bb-0310-9956-ffa450edef68"
4bad55913378f1f609d9411811b271de0d4a14c8,"DERBY-4659: Allow BOOLEAN args in procedures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957650 13f79535-47bb-0310-9956-ffa450edef68"
3b9661192b9fe93da8eaea5fd0c7d9f65ec7230c,"DERBY-728 Unable to create databases whose name containg Chinese characters through the client driver

Just a name change for the Utf8CccsidManagerTest fixtures.

Contributed by Tiago R. Espinha tiago dot derby at yahoo dot co dot uk


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957692 13f79535-47bb-0310-9956-ffa450edef68"
c4728eba34570d5c3ac0cc0053789bfa34efc39a,"DERBY-1482 (Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed.)

Reduced the size of LOBs in the test to 50MB since junit-lowmem gets run with 16MB and hence no need to read unnecessarily larger LOB(the test was testing with 300MB lobs). 

Also, some subset of tests are relying on DriverManager which is not available with J2ME. I have disabled those subset of tests to not run under J2ME framework.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957785 13f79535-47bb-0310-9956-ffa450edef68"
780c0c3df567eea6a8e56023717afc77706bf34b,"DERBY-4711: Hung thread after another thread is interrupted

If a thread fails while waiting for a lock, remove that thread from
the queue.

Patch contributed by Luke Quinane <luke@nuix.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@957902 13f79535-47bb-0310-9956-ffa450edef68"
8cb13e0504f384c1b1ac4fe1398bf04011c8d2a8,"DERBY-4714: Cleanup some edge case syntax issues with the BOOLEAN type.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958025 13f79535-47bb-0310-9956-ffa450edef68"
edcdf1ec1b2ce62e73529fb6fb12a4fbbd004f2e,"DERBY-2318  testStreams(org.apache.derbyTesting.functionTests.tests.lang.StreamsTest)

Change test to get the StackTraceElements just once to make it easier to debug.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958163 13f79535-47bb-0310-9956-ffa450edef68"
557bdf23d1b51ea3327034e8d119da957053bdfd,"DERBY-4711: Hung thread after another thread is interrupted

Added some comments to explain the fix.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958257 13f79535-47bb-0310-9956-ffa450edef68"
035abcc384b3d349749cf854dda6dc441663ac44,"DERBY-4711: Hung thread after another thread is interrupted

Added JUnit test case.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958264 13f79535-47bb-0310-9956-ffa450edef68"
b08b2b86ce82b7e82714c9c4bc6d9f8207dede32,"DERBY-2785: ij ""describe"" command cannot describe table named ""run""

This fix was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

The IJ tool's parser was not flexible enough in its handling of
identifiers, and so if you have a table named RUN, the command

ij> describe run;

was treating RUN as a keyword, rather than realizing it was the name of
the table. By changing the IJ parser's identifier() production to accept
keywords, the command is now accepted and behaves as desired.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958431 13f79535-47bb-0310-9956-ffa450edef68"
f97d079d78ef56e69854758a0a638c62d42ade16,"DERBY-4711: Hung thread after another thread is interrupted

Fixed instability in the test case.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958508 13f79535-47bb-0310-9956-ffa450edef68"
bde5241ee00f155706985115be3d7cbfdb00fddf,"DERBY-4241: Improve transition from read-only to writable Clob representation

When a store stream Clob is going to be modified, it will be written out to the temporary area of Derby and represented as a TemporaryClob.
The transfer of the data is done in a sub-optimal manner for two reasons;
 o for transfer of the complete Clob, the copy method operates on the byte level and we're not able to save the character length.
 o for transfer of parts of the Clob (i.e. truncation), we have to first decode the UTF-8 encoding to find the byte count and then transfer the same bytes.

This fix addresses both issues by improving the length caching and by adding
a method that counts the charactes ""on-the-fly"" while copying raw bytes.

Patch file: derby-4241-2b-utf8AwareCopy.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958522 13f79535-47bb-0310-9956-ffa450edef68"
85132a2e7d1527e9586fb9e3d99a30b2693bf280,"DERBY-4279: Statement cache deadlock

Backing out revision 956504 while investigating problems that appeared
after the change.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958529 13f79535-47bb-0310-9956-ffa450edef68"
452c95ebb977f5a10541841e8fac6418f312d8f0,"DERBY-4718: Correct wrong main() method in LocalizedDisplayScriptTest and LocalizedAttributeScriptTest

Patch contributed by Yun Lee <yun.lee.bj@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958530 13f79535-47bb-0310-9956-ffa450edef68"
ee6ea33ec86fdd05582913ee880dbd338751bba5,"DERBY-4694: Build breaks on OS X due to JDK classpath issues.

Enabled JAR inspection for Mac OS X instead of using hard-coded values.
The motivation for the change is that Apple has started symlinking the
directories for JDK 1.4 and JDK 1.5 to JDK 1.6. This made the build fail on
OS X (only recent fresh installs, where the symlinking is used).

Patch file: derby-4694-1b.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958555 13f79535-47bb-0310-9956-ffa450edef68"
c71c5e4b1c405b0e53be36ff9926613fd385783d,"DERBY-4716: Allow BOOLEAN-typed columns in tables.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958565 13f79535-47bb-0310-9956-ffa450edef68"
31f120e29e5cbe6a1cc6240f8687e484a3982f0d,"DERBY-4716: Correct sort order for indexed BOOLEANs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958610 13f79535-47bb-0310-9956-ffa450edef68"
b26c1ca2a442aab4e57b74492220a6c251955dae,"DERBY-4679 Several left outer joins causes unstable query with incorrect results

Follow-up patch derby-4679-2a, which makes the new (tn, cn) based
remapping work also for a CR to a subquery join participant being rebound
after flattening, see detailed comments in the code.  Extra test cases
are added to JoinTest#testDerby_4679



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958618 13f79535-47bb-0310-9956-ffa450edef68"
6ee5782abc201c90fca546e9302040d452e42f2a,"DERBY-4716: Enable BOOLEAN literal defaults in CREATE/ALTER TABLE statements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958677 13f79535-47bb-0310-9956-ffa450edef68"
3f3312eb84cf475d6ccfdc05026112d34c808e74,"DERBY-1595: Network server fails with DRDAProtocolException if a BLOB with size 2147483647 is streamed from client 

Switched from int to long when dealing with scalar streams, which can be longer
than Integer.MAX_VALUE and cause arithmetic overflow.
Introduced 'nullIndicatorSize' to duplicate less code.

Patch file: derby-1595-2a-client_int_overflow.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@958939 13f79535-47bb-0310-9956-ffa450edef68"
2f41733396c67281265a57499b7a7f0ea58df28e,"DERBY-4577 An expanding update fails with an nospc.U error

Fixes problem on Overflow pages populated by long rows where the an expanding
update of the row would fail with a nospc.U error.  The system always expects
updates to succeed.  In the case of an expanding update that finds not enough
room there should always at least be enough room reserved/used in the row to
do an update that changes the row to just an overflow row pointer with no data,
moving the data to another page.

The problem was that on overflow pages not enough room was being reserved to
handle a worst case row with a overflow pointer.  This fix reserves the worst
case space on overflow pages.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@959027 13f79535-47bb-0310-9956-ffa450edef68"
883a153e23c813501c27b90b14a6fe4c17873c80,"DERBY-4577

fixing inconsistent tabs and spaces in files affected by DERBY-4577.
This change is a white space only change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@959060 13f79535-47bb-0310-9956-ffa450edef68"
802cd1c72df533cdcbefefb93608dae567ca784f,"DERBY-728 Unable to create databases whose name containg Chinese characters through the client driver (partial)

Fix SanityManger usage to be wrapped in if (SanityManager.DEBUG) blocks.
Contrubuted by Tiago R. Espinha ( tiago dot derby at yahoo dot co dot uk )




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@959089 13f79535-47bb-0310-9956-ffa450edef68"
30c9f82881d8d7a2b4dc6a80939b536ebdbebd4f,"DERBY-3727 Improve error information reported when encountering ""ERROR XSDB3: Container information cannot change once written: was 103, now 80""

Added error reporting of the container id when an error is encountered while
writing the container header information.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@959378 13f79535-47bb-0310-9956-ffa450edef68"
811c29d0e30a4d42cb92515c120d0932be06b042,"DERBY-4717: Driver trace file isn't closed/released on physical connection close when specified with the traceFile attribute/setter

Made Derby close the trace file specified as 'traceFile' (data source setter or
as a connection URL attribute) when the physical connection is closed.

Patch file: derby-4717-1b.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@959550 13f79535-47bb-0310-9956-ffa450edef68"
395bf0402c9324781d3d62db458a67146585810d,"DERBY-4690 Too few arguments when generating AM_RECORD_NOT_FOUND error

Fixed up arguments to the AM_RECORD_NOT_FOUND exception, the page number argument was missing.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@959701 13f79535-47bb-0310-9956-ffa450edef68"
b96e1c4dffd011f13352127a9074d2ca48a65b9e,"DERBY-4720: Allow complicated BOOLEAN-valued expressions in SELECT lists, VALUES constructors, routine arguments, and as source values for SET clauses.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@959991 13f79535-47bb-0310-9956-ffa450edef68"
3bb44e74ad4e1c745e91e4ed6487f334633f56e6,"DERBY-4716: Add more tests for BOOLEAN columns in tables.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@960071 13f79535-47bb-0310-9956-ffa450edef68"
3bb8c0547f20206491e05c4cafa290597f2e307a,"DERBY-4731 XA two phase commit with active GLOBAL TEMPORARY TABLE causes An internal error identified by RawStore module

just checking in fixtures for the RawStore error and the the Assert case to XATest. The fixtures are  xtestXATempTableD4731_RawStore() and xtestXATempTableD4731_Assert and can be enabled by removing the 'x' in front.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@960136 13f79535-47bb-0310-9956-ffa450edef68"
07501680ac3fb3a49b7869a4f08d06995edb994c,"DERBY-4731

This is just a white space/comment only change, that fixes long lines and 
inconsistent tab/white space.  Separating this from subsequent
code changes to this file so that diff review can concentrate on ""real""
changes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@960231 13f79535-47bb-0310-9956-ffa450edef68"
826d7f100e7115bfca85dcfe1f421c6faa0456a2,"DERBY-1425: testProtocol hangs with 10.1 client talking to 10.2 server

Clear more fields in DDMReader's initialize() method to prevent old
state from being kept and affecting subsequent sessions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@961271 13f79535-47bb-0310-9956-ffa450edef68"
1292a7f9ade662fd24b2b6574ea334c67d1bc460,"DERBY-4730: Add BOOLEAN to list of datatypes returned by DatabaseMetaData.getTypeInfo().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@961497 13f79535-47bb-0310-9956-ffa450edef68"
2c70a31fb28c24a934cf3d421e70aea7b2f7046e,"DERBY-4731 XA two phase commit with active GLOBAL TEMPORARY TABLE causes An internal error identified by RawStore module

For temp tables declared as following derby needs to do special work at the
time of commit to arrange for the temporary table to have no rows once the
commit completes.:
    DECLARE GLOBAL TEMPORARY TABLE SESSION.T1 ( XWSID INT) ON COMMIT DELETE ROWS NOT LOGGED ON ROLLBACK DELETE ROWS

Derby implements these temporary tables as unlogged real internal tables with
backing containers on disk.  The ddl is all in memory so that they are only
seen by the current session.  On commit the underlying container is dropped and
a new empty container is created.

This all works fine except in the XA case.  In this case the transaction
has done real updates (temp table updates are unlogged and thus not seen
as update operations from the XA point of view), then the transaction executes
an XA prepare followed by an XA commit.  No update transactions are allowed
between the prepare and the commit.  The problem is that the pre-commit work
done for the temp tables was executing updates on the internal containers 
(dropping and createing new ones), and raw store identified this as an XA
protocol violation.  Since the work is only on internal non XA transaction
related updates it is ok to do these between the prepare and commit.

The fix arranges for this work to be done in a nested updatable user transaction
when in an XA transaction.  It is ok to commit this work independently from
the parent user transaction because 
for XA because it does the right thing in both possible cases:
    1) If the XA transaction commits successfully then the same work has been
       done.  Because of where it is done in the code, the committing user can 
       never get access to the global temp tables between the time the nested 
       xact commits and the XA transaction commits.
    2) If the XA transaction fails to commit somehow, then I think one of two 
       things will happen:
        a) the session will go away, and then it does not matter what happens 
           to the session life objects.
        b) the transaction will rollback, and on commit work which deleted the
           rows is the same work that needs to get done on rollback.

The only locks the nested transaction gets is created new containers, so there 
should be no problem with lock contention of the work with either the parent 
transaction, or any other transactions. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@961511 13f79535-47bb-0310-9956-ffa450edef68"
8c71d87288c4c6e1ce9490618c23f21458d6ae60,"DERBY-4052: SQLChar.copyState() doesn't copy localeFinder

Patch contributed by Yun Lee <yun.lee.bj@gmail.com>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@961892 13f79535-47bb-0310-9956-ffa450edef68"
3b85b5e250be1142a9dd6f7be6219a3e1ea3bcde,"DERBY-4738: correct error prompt for nonpositive length in Blob.setBytesX()

Patch contributed by Yun Lee <yun.lee.bj@gmail.com>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@961895 13f79535-47bb-0310-9956-ffa450edef68"
be49ccab734f9e53b8fd1cb23742a18617396b21,"DERBY-4738: correct error prompt for nonpositive length in Blob.setBytesX()

Move declaration and initialization of the length variable later so that
bugs of this kind could be detected at compile time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@961903 13f79535-47bb-0310-9956-ffa450edef68"
b78e2a042eda7803c301094dd4405b10a450e3af,"DERBY-4211 derbyall/encryptionAll/storemats.fail:store/updatelocksJDBC30.sql' fails with unexpected locks

The problem was the timing of post commit cleanup of deleted rows.  If the
test beat the post commit thread then it would ""see"" the deleted rows and
need to lock them.  By waiting after the commit of the deleted rows the 
results should now be consistent in the rows seen after the commit of the
delete.

Before the fix it repro'd 3 out of 100 runs.  After the fix it passed 300 out
of 300 times, so assuming it is fixed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@962716 13f79535-47bb-0310-9956-ffa450edef68"
65213c4f043d75e564bfba4d24245fdf3455d928,"DERBY-4694: Build breaks on Mac OS X due to JDK classpath issues

Relaxed verification criteria for Apple JDKs (skip check for Headers directory).
Added flag -DprintCompilerPropertiesVerbose to aid debugging when the
property setter fails to set the correct compile classpath(s).

Patch file: derby-4694-2b-debugging_and_mac_fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@963206 13f79535-47bb-0310-9956-ffa450edef68"
155fa10bd93e159b891dd9fa360a624cf2ffb64a,"DERBY-4709: Create test that parse client trace file to detect round-trips for Derby-4653.

Alternative test for commit/rollback flow optimization, which parses the
DRDA protocol flow log to verify that a commit/rollback flows over the network
only when required.
The test is very general, it does not test correct commit/rollback behavior for
specific database interaction sequences.

Patch file: derby-4709-1c-alternative_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@963243 13f79535-47bb-0310-9956-ffa450edef68"
43220cc185ec6a1d6ad881803a1352691ad78ee6,"DERBY-4700: Add method to obtain a bogus port in TestConfiguration

Added the method getBogusPort to obtain a port where no Derby network server
is supposed to be running (i.e. when doing negative connect tests).

Patch file: derby-4700-1b.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@963705 13f79535-47bb-0310-9956-ffa450edef68"
52694e5d9e3a29ce5aaab5071112168b27a37d0d,"DERBY-4732: Release system resources in CanonTestCase thoroughly

Added finally block to clean up resources.

Contributed by Yun Lee (yun dot lee dot bj at gmail dot com).

Patch file: derby-4732.patch


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@963716 13f79535-47bb-0310-9956-ffa450edef68"
af45571f40e08185863f9e65eaa12cb93c0bb6d8,"DERBY-4743

Checking in changes to XATest.java to repro this bug.  The test case is currently
disabled.  To enable it remove the x from:
    public void xtestXATempTableD4743()



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@963931 13f79535-47bb-0310-9956-ffa450edef68"
aec2537d171498a606c104a09842e956a4ab9a92,"DERBY-4459: Eliminate optimization which caused verification error in nested function calls.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@964039 13f79535-47bb-0310-9956-ffa450edef68"
b765481fc3fd67f62a59899da5922c6ad9aedb4c,"DERBY-4700: Add method to obtain a bogus port in TestConfiguration

Made bogus port static so that it can be shared across TestConfiguration instances.
Increased the maximum port count to 20 (we're currently using 11 in suites.All).

Patch file: derby-4700-2a-static_bogus.diff
            (changed 11 to 20 for MAX_PORTS_USED)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@964115 13f79535-47bb-0310-9956-ffa450edef68"
06ac9fb4f0e05dd60f118016ecdfe88c96b1fafd,"DERBY-3944: Always compile CHECK constraints in the schema of the target table.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@964402 13f79535-47bb-0310-9956-ffa450edef68"
2d08e7af8caeff47cfeff672effc8aaca092e031,"DERBY-4731

Previous change did not completely solve the problem.  There is a problem with
the initial fix, not sure why it only showed an error in the 10.3 backport. 
The temporary tables are stored in the transaction context, so using a nested 
transaction creates a new context and the work there is not reflected in the 
parent context.  Thus the previous fix which used a nested transaction does
not work.

This patch delays the work on the XA global temporary tables until after the xa transaction has committed but before control returns to the client executing 
the commit.  The delay solves the issue of attempting to do work in a 
prepared transaction.

It drops all global temporary tables following an XA commit.  This gives us
consistent behavior between embedded and network server implementations.  At
the time of an xa end the system ""Ends the work performed on behalf of a transaction branch. The resource manager disassociates the XA resource from the transaction branch specified and lets the transaction complete.""  Given this 
description of the behavior of XAResource it seems reasonable to document
that global temporary tables are not supported across the XA commit boundary.
In the worst case one might be connecting to an resource in completely another
database and the temp table implementation is tied to the transaction 
context in a single connection to a existing server.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@965317 13f79535-47bb-0310-9956-ffa450edef68"
6a108f11ca356c98680b727f8fe23fd3e8449d7f,"DERBY-4715 Write jvm information and path of derby.jar to derby.log

Contributed by Lily Wei (lily wei at yahoo dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@965647 13f79535-47bb-0310-9956-ffa450edef68"
b3bfe1238c448c1a20240983f6e87539138a3075,"DERBY-4067: ClientConnectionPoolDataSource.getPooledConnection and ClientXADataSource.getXAConnection ignore connection attributes 
DERBY-2468: would be nice if traceFile=filename connection attribute would be supported with ClientConnectionPoolDataSource and ClientXADataSource

Made two changes:
 - moved the parsing of the connection attribute string to before the log
   writer is constructed, since the construction may depend on some attributes
   specified in the connection attribute string
 - added parsing of the connection attribute string to the client ConnectionPool
   and XA data sources
Also re-enabled 'testClientMessageTextConnectionAttribute' and removed a
work-around for the issue fixed by this commit.

Patch file: derby-4067-1a-update_attrs.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@965793 13f79535-47bb-0310-9956-ffa450edef68"
6819a8652716d6fca0ec272cdcdf1bd5862a9c7b,"DERBY-4743 Attempt to access a DECLARE GLOBAL TEMPORARY TABLE after commit in an XA transaction in Network server fails.

The fix for DERBY-4731 made the behavior consistent across embedded and 
network server.  Derby does not support accessing global temporary tables 
declared in an XA transaction subsequent to the commit of the transaction.

This change updates the junit XATest to verify that accessing the table after
the commit fails as expected in both the embedded and network server case.  In
both cases you will get the generic table does not exist error.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@966027 13f79535-47bb-0310-9956-ffa450edef68"
452d4674de04dc9332924dc11f1eede4721b0a40,"DERBY-4735 prepare of an XA read only transaction with a declared global temporary table gets and ASSERT in SANE mode.

Fixing test case in the junit XATtest.java test.  Changed it to not try and
do an xa commit after preparing a read only transaction.  The test case still
gives an ASSERT, and in my run caused a subsequent error in the testDerby966
test, which I assume came from bad error processing of the ASSERT.

To enable test just remove the x from ""public void xtestXATempTableD4735_Assert()""




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@966039 13f79535-47bb-0310-9956-ffa450edef68"
5ad5e45218d5a54f957420b5387ce985417f13dc,"DERBY-4601 Shutting down just a single database should log a different message than shutting down the system

Log the engine shutdown message in derby.log. The existing message logging for each individual connection close which happen because of engine shutdown will still be logged but they will now print the name of the database being shutdown. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@966393 13f79535-47bb-0310-9956-ffa450edef68"
9b816c6cf847c7be1fdf89e0eeab0f802841ca39,"DERBY-4746  (Server) Implement UTF8 support on DRDA

Made a small change to the Utf8CcsidManagerTest to accommodate for the fact that the convertToJavaString takes the offset and numCount in bytes and not characters. 

Contributed by Tiago R Espinha (tiago dot derby at yahoo dot co dot uk)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@966452 13f79535-47bb-0310-9956-ffa450edef68"
49174a903e02e6e90e1d7cd346119a8d62c2646d,"DERBY-4752: CheapDateFormatter returns incorrect and invalid date strings

Use java.util.Calendar to get the calculations right.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@967000 13f79535-47bb-0310-9956-ffa450edef68"
b2050297f96942964b2fbec1b1ac9b80274014f5,"DERBY-4601 Shutting down just a single database should log a different message than shutting down the system

By mistake, I was printing the timestamp twice. This simple change fixes that.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@967201 13f79535-47bb-0310-9956-ffa450edef68"
315c26122c2d9866b5026bc240059abf037a4138,"Add myself as test for my Derby privileges as committer


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@967289 13f79535-47bb-0310-9956-ffa450edef68"
5a93780d2d55bb3c4b3041b321a3d31fb575aaae,"DERBY-4715 Write jvm information and path of derby.jar to derby.log

Change hard-code English message, message order and take out space 
at front of boot messagae


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@967304 13f79535-47bb-0310-9956-ffa450edef68"
19311603c09540f099ca3159f34946ffd7cb7296,"DERBY-4723: Using an instance lock to protect static shared data in EmbedPooledConnection 

Removed code using incorrect syncronization, as it was used for tracing only
and the hashCode() output should suffice for that.

Patch file: derby-4723-1a-remove_code.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@980089 13f79535-47bb-0310-9956-ffa450edef68"
37028517ffedc60edf04ace2b65ef698b9ffb3ed,"DERBY-4756: Silence deprecation warnings for JDBC 4 stubs


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@980460 13f79535-47bb-0310-9956-ffa450edef68"
7b374f98ec22f977804a6c22df26d709606f4055,"DERBY-4748: StringIndexOutOfBoundsException on syntax error (invalid COMMIT) 

Rewrote logic in isolateAnyInitialIdentifier and added test case.

Patch contributed by Knut Anders Hatlen (knut dot hatlen at oracle dot com) and
Kristian Waagan (kristwaa at apache dot org).
Patch file: derby-4748-1b-sioobe.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@980684 13f79535-47bb-0310-9956-ffa450edef68"
816270f3bd8888e52e7aa069593473f413589e72,"DERBY-4746: Server support for UTF8 in DRDA

This patch was contributed by Tiago R. Espinha (tiago dot derby at yahoo dot co dot uk)

The code portion of this change puts in place all the switches necessary
on the server-side to enable and disable UTF8 support. Principally, the
new internal methods switchToUtf8() and switchToEbcdic() are added to
DRDAConnThread, and called appropriately from the ACCSEC code point.

The test portion of this change contains the protocol tests and changes
to the framework required for the UTF8 protocol tests. The test changes
implement the command 'switchToUtf8CcsidManager' in the protocol tests
that essentially tells the framework to switch its DDMWriter and Reader
to UTF8. Normally, a client would negotiate this through the MGRLVLS
but the ProtocolTest doesn't take this into consideration and has to
be forced into UTF8 mode.

Note that due to DERBY-2031,  each time we add a feature to the JUnit
protocol test we have to do the same for the other or it'll break. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@980800 13f79535-47bb-0310-9956-ffa450edef68"
76652aff50829f5a907213a765f3b4b0a1ce0f2d,"DERBY-4760 - test failure in derbynet/testProtocol.java with ibm jvms - 
  updating a master canon for ibm jvms forgotten in check-in for DERBY-4746.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@981596 13f79535-47bb-0310-9956-ffa450edef68"
a2a0ff24b6d5688028a173e0b83a568fb02e6e7e,"DERBY-4754: Make the getObject() methods of Derby's LOBs always return jdbc LOBs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@982585 13f79535-47bb-0310-9956-ffa450edef68"
4e20a513baa02b0bee36f287479389226d4ea1a6,"DERBY-4587: Add tools for query plan analysis

This patch was contributed by C.S. Nirmal J. Fernando (nirmal070125 at gmail dot com)

This patch adds a new tool, PlanExporter, to derbytools.jar. The PlanExporter
tool's primary purpose is to gather the information about a particular query
execution from the Derby XPLAIN tables, and to format that data into an
export format for usage by other tools. The most important export format is
XML, but the tool can also format the query into HTML or other formats by
running an appropriate XSL Stylesheet across the XML data.

The tool is run as follows:

  java org.apache.derby.tools.PlanExporter dbURL username pwd schema stmt_id
     -xml outputFileName

This patch includes the tool itself, and changes to the XplainStatisticsTest
to incorporate regression testing of the PlanExporter tool. Documentation of
the new tool is being developed under DERBY-4758.

The basic implementation of the tool is complete and operational, and ready
for use by the Derby community. Depending on community feedback, possible
future enhancements to the tool might include improved formatting stylesheets,
additional output formats, more detailed XML output, etc.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@982637 13f79535-47bb-0310-9956-ffa450edef68"
b9687fb03fcc01d0354b449c62c22e660829d779,"DERBY-4757: Implement UTF8 support in DRDA (Client changes)

This patch was contributed by Tiago R. Espinha (tiago dot derby at yahoo dot co dot uk)

This patch lays the foundation for the UTF-8 support in the client:
- Changes the method names for the CcsidManager abstract class so that
they are clearer in terms of what they do (convertToJavaString,
convertFromJavaString) similar to what's been done for the server. 
- Introduces a new name to the CcsidManager that returns, for the given
CcsidManager, the length of a String in bytes (which differs for the
different managers). 
- Creates the Utf8CcsidManager.java for the client and the respective
Utf8CcsidManagerClientTest.java.
- Changes NetAgent.java so that it no longer has a source and target
CCSID managers. Also, similarly to the server, it now has an instance
of each type of CCSID (EBCDIC and UTF-8) and a current CCSID which is
the one currently in use. 

This patch does not yet enable UTF-8 support but puts everything in
place so that the switch mechanism can be implemented. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@982852 13f79535-47bb-0310-9956-ffa450edef68"
2c03fd1ec98e01384961fde2a9f3781dc92f69cd,"DERBY-4587: Add tools for query plan analysis and understanding

This patch was contributed by C.S. Nirmal J. Fernando (nirmal070125 at gmail dot com)

This patch adds *.xsl to the derbytools derbydocs exclusions list, and fixes
a typo in the @param field in the Javadoc for XplainStatisticsTest.

No functional changes in this patch, just Javadoc fixes to address the
automatic build system failures.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@982856 13f79535-47bb-0310-9956-ffa450edef68"
75a4806fe153f1f88ac3e615de160a4373be4c27,"DERBY-4066: Allow LOBs as function/procedure input arguments and return values. LOBs still can't be used as output and inout arguments to procedures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@982936 13f79535-47bb-0310-9956-ffa450edef68"
3f699303724f9940dd0038884456353e0d9fd698,"DERBY-4666: Checkin 10.6.1 message localizations.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@983620 13f79535-47bb-0310-9956-ffa450edef68"
94df7fbd47be3418efeef42d70c3eace8e873ea5,"DERBY-4066: Allow LOBs as OUT/INOUT procedure arguments.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@984393 13f79535-47bb-0310-9956-ffa450edef68"
147e86d9a18f4244f2de0a2f30c3f0ebf2ec19a5,"DERBY-4066: Correct javadoc error in 984393.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@984443 13f79535-47bb-0310-9956-ffa450edef68"
2d3a136f9ccf6f7cd4735738f2ec99513b4a679d,"DERBY-3898; Blob.setBytes differs between embedded and client driver when the specified length is invalid;
  patch contributed by Yun Lee (yun dot lee dot bj at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@984472 13f79535-47bb-0310-9956-ffa450edef68"
6e8f7435c291c62fa590b7a538b5bdb7cc3cedea,"Set property svn:eol-style to native.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@984725 13f79535-47bb-0310-9956-ffa450edef68"
82d6586105f16b0579ad0d453cf6a514b36651a6,"DERBY-4587: Add tools for improved analysis and understanding of query plans and execution statistics

Various clean-ups and improvements, amongst others:
 o print statement id in the output
 o print time of statement execution in the output 
 o removed user and password arguments for PlanExporter (specified in JDBC URL instead)
 o close connection instead of shutting down database
 o removed @author tags
 o made TreeNode package-private
 o switched depth-representation from String to int

Patch contributed by C.S. Nirmal J. Fernando (nirmal070125 at gmail dot com).

Patch file: DERBY-4587-tool-9.8-modified.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@984881 13f79535-47bb-0310-9956-ffa450edef68"
ce855d2c55b956636bf0593991ba0e96abbda8d6,"DERBY-4587: Add tools for improved analysis and understanding of query plans and execution statistics

Formatting changes:
 o moved class JavaDoc to after package and import statements
   (the ASF license header will be the first content of the files)
 o replaced tabs with spaces (1 tab = 4 spaces)
 o removed trailing whitespace

Patch file: DERBY-4587-tool-9.9-formatting.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@984902 13f79535-47bb-0310-9956-ffa450edef68"
76d0aa487b85c9bf04740df1379263dc6bbb963b,"Set svn property eol-style to native.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@984912 13f79535-47bb-0310-9956-ffa450edef68"
356155c5fb66de4074010f8a25d760588437a752,"DERBY-4066: Add test cases for large (>1M) LOB inout args.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@984916 13f79535-47bb-0310-9956-ffa450edef68"
782dbe17fb11a9e1e2cf9f3aaa300baf3b6dd480,"DERBY-4764: Files with missing ASF license headers

Added or modified Apache license headers where missing or old.

Patch file: derby-4764-1a-license_headers_trunk.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@984922 13f79535-47bb-0310-9956-ffa450edef68"
fb74f094ebb746a0c4929d1a4fdb475b8552d5e2,"DERBY-4587: Add tools for improved analysis of query plans

This patch was contributed by Nirmal Fernando (nirmal070125 at gmail dot com)

This patch changes the comment markers in the XSL files from slash-star
to lessthan-bang-dash-dash, and updates a javadoc comment and a variable
name in CreateHTMLFile.java.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@985075 13f79535-47bb-0310-9956-ffa450edef68"
9e7156c644ca1b20aba0ef9f2955bb63da2f2bcb,"DERBY-4770: Files missing svn:eol-style (August 2010)

Set the svn:eol-style property to native.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@985120 13f79535-47bb-0310-9956-ffa450edef68"
7956ea53f6fd35234f2f1cfc9523c8f2b3f78951,"DERBY-4066: Add asserts to test cases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@985182 13f79535-47bb-0310-9956-ffa450edef68"
11f7f5c56129aa55f0495bb98273047b15867b43,"DERBY-4765; convert ""org.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetNewServer"" to junit
  patch contributed by Yun Lee (yun dot lee dot bj at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@985400 13f79535-47bb-0310-9956-ffa450edef68"
c9687fc48026dfabf0a3b97ba2d27770f33cf55b,"DERBY-4767; Detailed prompt for Error XCL16 is different between Client and Embedded
  patch contributed by Yun Lee (yun dot lee dot bj at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@985550 13f79535-47bb-0310-9956-ffa450edef68"
80e5ab8df4861897a6f2fc78432e6469786dbf46,"DERBY-4767; Detailed prompt for Error XCL16 is different between Client and Embedded; one change from 'next' to 'update' as operation.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@985613 13f79535-47bb-0310-9956-ffa450edef68"
0e72736f48345e0bd80fb190f3a65bd95a6ec3e7,"DERBY-4587: Tools for improved analysis of query plans

This patch was contributed by C.S. Nirmal J. Fernando (nirmal070125 at gmail dot com)

This patch adds a check to see that the specified schema exists in the
database, cleans up the handling of the PrivilegedActionException when
security policy is not granted, and adds newline whitespace to the XML
output for the <stmt_id> and time fields.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@985762 13f79535-47bb-0310-9956-ffa450edef68"
4eeab6ca03c84a9bf8026e26ac1fc45257e3c689,"DERBY-4767; Detailed prompt for Error CSL16 is different between Client and Embedded
  adding a check for the value of the operation, and fixing up some areas where an incorrect operation value was passed on.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@986145 13f79535-47bb-0310-9956-ffa450edef68"
1fd318073570d4d19d2e003f61bdd4acaca562e7,"DERBY-4776; Correct wrong operation for LANG_RESULT_SET_NOT_OPEN in ScrollInsensitiveResultSet.getPreviousRow() from 'next' to 'previous' 
  patch contributed by Yun Lee (yun dot lee dot bj at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@986161 13f79535-47bb-0310-9956-ffa450edef68"
34674cdb4b79a4381c38ef2df938d7f9682a231b,"DERBY-3898: Enable BlobSetBytesBoundaryTest on Java ME


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@986260 13f79535-47bb-0310-9956-ffa450edef68"
24400cd24ad9d81b31684469104f7efd85114d71,"DERBY-3898: Blob.setBytes differs between embedded and client driver
when the specified length is invalid

Added fix and test case for a remaining corner case: When the sum of
offset and length is greater than Integer.MAX_VALUE, the client driver
silently ignores the error whereas the embedded driver fails with an
IndexOutOfBoundsException.

The unexpected results are caused by a check for

  offset + len > bytes.length

where offset+len overflows and evaluates to a negative value. The fix
changes this condition to the equivalent

  len > bytes.length - offset

which won't overflow (because both bytes.length and offset are known
to be non-negative at this point in the code, and subtracting one
non-negative int from another is guaranteed to result in a value in
the range [-Integer.MAX_VALUE, Integer.MAX_VALUE]).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@986345 13f79535-47bb-0310-9956-ffa450edef68"
67f6bb0103db2c72e36641a4d49df45aa411e51c,"DERBY-2026 Setting a login timeout in client driver can lead to query timeout



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@986689 13f79535-47bb-0310-9956-ffa450edef68"
65d5b52bda184c38d79fdd22e6adbf904c5cb4a8,"DERBY-4777; perform different in Client and Embed modes when update on an invalid cursor
  initial patch contributed by Yun Lee (yun dot lee dot bj at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@986750 13f79535-47bb-0310-9956-ffa450edef68"
73863c93f86d8f59f72da9052598586fd3f5edc0,"DERBY-2026 Setting a login timeout in client driver can lead to query timeout

Change tests to set loginTimeout to 0 after test completes, so later tests won't be impacted.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@986834 13f79535-47bb-0310-9956-ffa450edef68"
188fc76df8f0c6737a1c5669595651cfdba79ad3,"DERBY-4531 Client setCharacterStream closes its Reader argument stream in finalizer

Patch derby-4531b, which makes the client behave like embedded in this
respect.  

It also adds a new test which shows the clients divergent behavior
prior to the fix in EncodedInputStream. Since the test relies on
explicit gc, it is not guaranteed to show the presence of the bug,
though.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@987331 13f79535-47bb-0310-9956-ffa450edef68"
f7967ea9df21cf92991fb3d4887bb3c55c4e291a,"DERBY-4736 ASSERT FAIL when code generating a column reference in a join predicate in presence of other outer join reordering

Patch derby-4736-1d, which fixes this bug, by adding a missing call to
bindResultColumns in SelectNode#preprocess if we have detected that
the outer join reordering has kicked in, cf call to LOJ_reorderable.

A new test case, testDerby_4736 was added to OuterJoinTest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@987539 13f79535-47bb-0310-9956-ffa450edef68"
1451af791207dbc054cba378ca832a63aebddede,"DERBY-728 subtask DERBY-4757  (Client) Implement UTF8 support on DRDA
(partial) Consolidate references to CcsidManager to facilitate switch from EBCDIC to UTF8




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@987667 13f79535-47bb-0310-9956-ffa450edef68"
eac24d28d889a65e342d0c46ca4c94cdf85b69ed,"DERBY-3173: Removed cached String objects from SQLDate

Patch contributed by Eranda Sooriyabandara <070468D@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@988107 13f79535-47bb-0310-9956-ffa450edef68"
ee21e7c1f572503bc2aebae3bdf482bbdb9386ef,"DERBY-4695 Internal assignment of tablenumer, columnnumber looks wrong in query tree, although no ill effects are seen

Patch derby-4695-fixcolumnno-1b, which moves the assignment of
ColumnReference#columnnumber from ColumnReference to the underlying
FromTable, i.e. the same place as where the table number is
assigned. This assures that the two are in synch, and the columnNumber
assignment is no longer thwarted by the (re)assignment of the
ColumnReference#source for ""JoinNode""s to one of the result columns of
the Join itself (needed for code generation: the source for the
ColumnReference need to be to the correct ResultSet at generate time,
cf the comment in JoinNode#getMatchingColumn).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@988204 13f79535-47bb-0310-9956-ffa450edef68"
b1b255cc171b6b88da75f52fa655238b67d71b49,"DERBY-4781 (partial) Fix XplainStatisticsTest failure with J2ME on split method
introduced by DERBY-4587

Contributed by C.S. Nirmal J Fernando ( nirmal070125 at gmail dot com )


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@988264 13f79535-47bb-0310-9956-ffa450edef68"
e9ffbf6d254729624d80f3f9abda41d82d1825e9,"DERBY-4757 (Client) Implement UTF8 support on DRDA

Fix javadoc warning in DRDAString



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@988308 13f79535-47bb-0310-9956-ffa450edef68"
11ab591fae7f4925579a6723e81a3a52552aaffc,"DERBY-4781 suites.All fails completely with Failed to invoke suite():java.lang.reflect.InvocationTargetException because of XplainStatisticsTest

Change getADocument() to  return an Object instead of Document so weme does not fail to load the class.

Contributed by Knut Anders Hatlen



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@988321 13f79535-47bb-0310-9956-ffa450edef68"
a875572807937f7d28825d6c5b6395539743c489,"Add pgp for lilywei@apache.org


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@988648 13f79535-47bb-0310-9956-ffa450edef68"
6500326feab7cd501042f407777de570f545f786,"DERBY-4752: CheapDateFormatter returns incorrect and invalid date strings

Removed the CheapDateFormatter class and made the code use
java.util.Date and its toString() method instead.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@988874 13f79535-47bb-0310-9956-ffa450edef68"
158ccc5da6adfea40a8b4d24651a0b45d8e0285d,"DERBY-4781: suites.All fails completely with Failed to invoke suite():java.lang.reflect.InvocationTargetException because of XplainStatisticsTest

Fixed replace() method. The old version would sometimes erroneously
return an empty string.

Patch contributed by Nirmal Fernando <nirmal070125@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@989036 13f79535-47bb-0310-9956-ffa450edef68"
a4802243628d1ac63a711e9e29f7b6ee3b479e31,"DERBY-4371: Non-selected columns for SELECT DISTINCT allowed in ORDER BY clause if ordered by expression

Patch contributed by Nirmal Fernando <nirmal070125@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@989048 13f79535-47bb-0310-9956-ffa450edef68"
93e0a4ca64598be30706ec562ae9f4acd476e8ea,"DERBY-4736 ASSERT FAIL when code generating a column reference in a join predicate in presence of other outer join reordering

Follow-up patch derby-4736-followup-a.

In some cases, with this fix, the nullability of columns from the
null-producing (right) side of the LOJ gets set to NOT NULL after
reassociation.

The problem is that the added call to SelectNode#bindResultColumns, in
addition to calling fromList.bindResultColumns, which what we need in
for this issue, also calls super.bindResultColumns, which sets up the
datatypes over again, erroneously (i.e. without taking into
consideration the nature of outer join which can make values stemming
from otherwise NOT NULL columns be null in the final result set).

Replacing the call to SelectNode#bindResultColumns with
fromTable.bindResultColumns avoids this problem.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@989099 13f79535-47bb-0310-9956-ffa450edef68"
26c2de4c6b824644efa6e01cf122fce9287de202,"DERBY-1958: Improve XSDG3 error to print container, operation, and name

This patch was contributed by Eranda Sooriyabandara (070468D at gmail dot com)

This patch modifies message XSDG3 (""Metadata for container could not be
accessed"") to provide additional information about which container, precisely,
is having the problem. The message now includes the container identity and
the container file name, as well as the type of access to the container
that encountered the problem.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@989696 13f79535-47bb-0310-9956-ffa450edef68"
320f6afa03470370bb57df1fda31bf004394343a,"DERBY-3173: Removed cached String objects from SQLTime and SQLTimestamp

Patch contributed by Eranda Sooriyabandara <070468D at gmail dot com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@989918 13f79535-47bb-0310-9956-ffa450edef68"
1c8ca70c17fc5ff8e8599005791869452542de6b,"DERBY-4471 Left outer join reassociation rewrite gives wrong result

Patch derby-4471-1d. This patch changes logic for determining if right
deep nested (left) outer join can reassiciated to left deep, i.e.

   OJ1                        OJ1
  /  \                        / \
 /    \                      /   t3
t1    OJ2          =>       /
      /  \                 OJ2
     /    \               /   \
    t2    t3           t1     t2 

The old behavior was both too liberal (this issue showed a query being
reordered erroneously), and too restrictive. The patch removes the
""too liberal"" hole, and also opens up for some new valid cases.

For further details, refer to the JIRA issue and the code comments
especially the javadoc for the methods HalfOuterJoinNode#LOJ_reorderable and
HalfOuterJoinNode#isNullRejecting.

As a part of the patch, the old harness based test lojreorder.sql has been converted
into the JUnit based LojReorderTest equivalent.

For further details, refer to the JIRA issue and the code comments.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@990292 13f79535-47bb-0310-9956-ffa450edef68"
5d444a43cd5bae56a523b31538f09ab5d2212179,"DERBY-3644 and DERBY-2109

As part of DERBY-2109, shutdown command started accepting optional user name and password. Bacause of this change in command, the protcol level was bumped up to 2. But this caused all the network server commands from clients with DERBY-2109 changes to break against a server without the DERBY-2109 changes. That is because the server checks the protocol level of the client commands and if they do match with server protocol version, then server will simply throw an exception about mistmatch of protocol levels and thus causing all the client commands from post DERBY-2109 clients to break against server with pre-DERBY-2109 changes.

Will create another jira to handle the shutdown command's optional user name and password parameters.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@990841 13f79535-47bb-0310-9956-ffa450edef68"
5f00ce0c51fa5d26bfa025fd4fb7a75de55f9061,"DERBY-3173: Fix javadoc warning

Patch contributed by Eranda Sooriyabandara <070468D at gmail dot com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@991124 13f79535-47bb-0310-9956-ffa450edef68"
8d1ae483c8238fab55a21c1e26cd8266a28fe60b,"Adding myself (Tiago Espinha) as a committer to the STATUS file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@991667 13f79535-47bb-0310-9956-ffa450edef68"
607c9b7e879570f3786a7de8f384710e64d92437,"DERBY-3801; Convert org.apache.derbyTesting.functionTests.tests.lang.holdCursorIJ.sql to junit
  converted by placing the script in LangScripts to be run as ij-junit test.
  sections of the .sql scripts that previously showed diffs between embedded and
    network server/client have been resolved either by fixing the differences, 
    by removing when other tests were found to be testing the same, or in one  
    instance, by commenting out with a reference to the bug. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@992365 13f79535-47bb-0310-9956-ffa450edef68"
19984411f567a1a7c3276e3b1bda2f7f6af700f3,"DERBY-4791 (partial) LIKE operator optimizations and concatenation

Made ConcatenationOperatorNode capable of constant folding so that for
example 'ab' || '%' can be handled the same way as 'ab%'.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@993074 13f79535-47bb-0310-9956-ffa450edef68"
d7ee7fac4fd461a9791cf0405621837832fc60a2,"DERBY-4789: Attempt bulk-insert optimization when inserting from a table function.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@993374 13f79535-47bb-0310-9956-ffa450edef68"
3a4b2df70e791acb6da6828bcedb41e8d85f37ec,"DERBY-268: Committed Eranda's patch enabling TRUNCATE statement in product engine.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@993428 13f79535-47bb-0310-9956-ffa450edef68"
8e47077f601ad24609ceff7ec8643eab63974f2f,"DERBY-268: Test truncating tables with delete triggers and foreign keys

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@994946 13f79535-47bb-0310-9956-ffa450edef68"
21c9069bc9559d020653173222a7969fb3e3848d,"DERBY-268: Don't wrap TruncateTableTest in authorization decorator


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@994970 13f79535-47bb-0310-9956-ffa450edef68"
a92196cc796a45d67b96720b71d9093610f8cf99,"DERBY-1938: Add support for setObject(<arg>, null) 

Allow calling the two-argument PreparedStatement.setObject method with null
to set a column value in the database to SQL NULL. The recommended way for
maximum portability is to use the three-argument setObject method or the
setNull method.

Patch file: derby-1938-1b-reworked_patch.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@995089 13f79535-47bb-0310-9956-ffa450edef68"
66f38fa688e555d0d5a97cb8467f1de103eb12f1,"DERBY-4789 Add more tests for bulk insert on self join, union, left outer join and expected results.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@996700 13f79535-47bb-0310-9956-ffa450edef68"
a823c6a885f3d798c16dc4682d8a9bea318360bc,"DERBY-4712 Complex nested joins problems

Patch DERBY-4712b, which removes one of the source for NPE seen by the reporter.
The other is covered by DERBY-4798.

A corner case: the patch makes an inner join which decides it is not
flattenable, propagate this fact down to any nested outer join nodes
containing nested inner joins, the latter inner joins will otherwise
think they are flattenable (a priori value for inner joins).

Adds new test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@997325 13f79535-47bb-0310-9956-ffa450edef68"
ec6fcf1f3b93d7b9d350071632731d67cfe04508,"DERBY-1511: SELECT clause without a WHERE, causes an Exception when
extracting a Blob from a database

Disable bulk fetching for table scans that fetch BLOB or CLOB columns,
if the cursor is holdable, as the large objects in the internal buffer
will not survive across transaction boundaries.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@997722 13f79535-47bb-0310-9956-ffa450edef68"
d9dd1e59ca68518bfe4b470b569de8e8588a22b4,"DERBY-4798 NPE in nested outer join

Patch derby-4798a.

Reintroduces the bailout code in BaseActivation#getColumnFromRow which
was removed in DERBY-3097 until we understand why it is needed. 

Adds the repro for this issue to OuterJoinTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@998170 13f79535-47bb-0310-9956-ffa450edef68"
0d6a26d83b58ac4187e29a04efdfac1dc4758ab5,"DERBY-4804: Make database used in store.OSReadOnlyTest fully read-only

Properly simulate a read-only media.
Since Java cannot make a file writeable after first making it read-only until
Java SE 6, the db.lck file (with invalid contents) was created and made
read-only instead.

Patch file: derby-4804-1a-test_change.diff (modified some comments)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@998844 13f79535-47bb-0310-9956-ffa450edef68"
b6ed8bf98834b390fc40c49de9400908dc971634,"Reverting change 990841 from trunk which had gone for DERBY-3644 (NetworkServerControl.ping() on trunk against 10.3.2.1 and older servers give 'DRDA_InvalidReplyHeader2.S:Invalid reply header from network server: Invalid string . Plaintext connection attempt to an SSL enabled server?'). The change is incomplete and will cause problems if it ever got backported by itself. I will checkin a complete fix soon which will address DERBY-3644 and DERBY-4786




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@999078 13f79535-47bb-0310-9956-ffa450edef68"
04243ad48bce591cc9db2f771f16679c59869712,"DERBY-4786 (Shutdown command without username and password should work with mixed client and network server releases.)

This change will send shutdown command with protocol level 2 whether there is username or password provided or not. If this command fails because of DRDA_InvalidReplyHead from server, then it will resend the shutdown command but this time with protocol level 1. The attempt with protocol level 1 will be made only if there was no username and password supplied with the shutdown command because shutdown command at protocol level 1 does not support username/password.

If a client with these changes sends a shutdown command to a 10.3 server(which does not have DERBY-2109 changes) without the username and password, it will get 2 exceptions back from the server. 1st exception will be for sending the shutdown command at protocol level 2 and the 2nd will be for shutting down the server succesfully. Server will also have 2 messages, first indicating that an invalid protocol level command was received and 2nd message saying that the server is shutdown. I will create a release note for this behavior.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@999119 13f79535-47bb-0310-9956-ffa450edef68"
b6fbed3f1dc6a3f2f3470008714fd8ae5be9467d,"DERBY-268: Add test for TRUNCATE TABLE to verify that only the owner and the DBO can truncate a table.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@999459 13f79535-47bb-0310-9956-ffa450edef68"
c13beb1615e69885edf779c70ee906972fc629b9,"DERBY-4625: TIMESTAMP function doesn't accept nanoseconds

Patch contributed by C.S. Nirmal J. Fernando <nirmal070125@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@999479 13f79535-47bb-0310-9956-ffa450edef68"
3d03e7dbe68c0638e558424afb0e45c6a3f2dbee,"DERBY-4626: Timestamp truncated when converted to string with explicit calendar

Added a test case. The bug was fixed as part of DERBY-4625.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@999485 13f79535-47bb-0310-9956-ffa450edef68"
1eeea6133bebdb69e8e7dd65556f876510d45aee,"DERBY-4551 Allow database user to execute stored procedures with same permissions as database owner and/or routine definer

Follow-up patch derby-4551-followup-1b (plus some small hygiene adjustments).

The problem is that the substatement executed as part of
ResultSet.{insertRow, updateRow,deleteRow} pushes a new statement
context. This statement context is consulted when constructing the
activation for the substatement, to see if the activation shall have a
parent activation (which is used to get the correct SQL session
context),
cf. GenericLanguageConnectionContext#getCurrentSQLSessionContext.

However, the newly pushed statement context was missing its parent's
activation, so the substatement instead get the top level session
context, whose current user is not the DEFINER bur rather the session
user.  cf BaseActivation#setupSQLSessionContextForChildren, hence the
authorization error.

The patch makes sure the nested statement context initially gets the
(new) parent context set. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@999570 13f79535-47bb-0310-9956-ffa450edef68"
c7b3589890f118a8222fecb5f0849f111b1c31d9,"DERBY-4804: Make database used in store.OSReadOnlyTest fully read-only 

Followup patch moving file operation code into PrivilegedFileOpsForTests,
since it is probably useful for other tests as well.
Also note the new assert-method in BaseJDBCTestCase, used to assert that a
directory is fully deleted.

Patch file: derby-4804-2a-common_file_ops.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@999796 13f79535-47bb-0310-9956-ffa450edef68"
30dd4c58644cde7308a5ac0dbcb8285bd2e4862a,"DERBY-4803: Make it possible to use sequences in INSERT...SELECT statements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@999908 13f79535-47bb-0310-9956-ffa450edef68"
9f52a2c796912f3c6760259508f1bbf2981ffc3b,"DERBY-3986: Stop dropping build artifacts into subversion-controlled space.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@999928 13f79535-47bb-0310-9956-ffa450edef68"
f355c5dcb41e0036d3b807c3e1c034febdd79fdd,"DERBY-3986: Stop dropping build artifacts in the subversion-controlled source tree

Remove svn:ignore property on the bin directory now that the generated
scripts go into generated/bin/.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1000066 13f79535-47bb-0310-9956-ffa450edef68"
95bbb747860262cf70ffc93e25589243b66e64e3,"DERBY-3986: Stop dropping build artifacts in the subversion-controlled source tree

Update path for the chmod command in the makebinscript target so that
it matches the new location of the generated scripts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1000068 13f79535-47bb-0310-9956-ffa450edef68"
5faeb73407fa88b3c15f2d2d72cab360cc995fa7,"DERBY-3986: Stop dropping build artifacts in the subversion-controlled
source tree

Ensure that the destination directory for state.properties is
generated before the ""sane"" or ""insane"" target is executed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1000219 13f79535-47bb-0310-9956-ffa450edef68"
26f891cf6bc7dc04cd533727f6834b135333ad33,"DERBY-4814: Minor cleanup of Derby151Test


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1000779 13f79535-47bb-0310-9956-ffa450edef68"
c4d6dc256f639e9c00dc64a7ee5460f4f60ef5d3,"DERBY-4819: Narrow scope of msgReceiver in ReplicationMessageTransmit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1000808 13f79535-47bb-0310-9956-ffa450edef68"
28e7078083d76438378b304ef4d68ec969bf4719,"DERBY-4810: setTimestamp() methods don't agree on trailing zeros


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1000811 13f79535-47bb-0310-9956-ffa450edef68"
c7bf46c3b620937be5b86839f1cf1688e92997f4,"DERBY-4746 (Server) Implement UTF8 support on DRDA

Patch DERBY-4746_p3.diff

Changes the way the lengths are obtained for Strings in the DRDA protocol.

Also changes the way the server encodes the RDBNAM parameter when being sent back to the client.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1002115 13f79535-47bb-0310-9956-ffa450edef68"
501b8b044739bef8bea8a956fc5a689fd38eee51,"DERBY-268: Eliminate NPE when reading past the end of a cursor on a truncated or dropped table.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1002232 13f79535-47bb-0310-9956-ffa450edef68"
8e4af955a4a1f74691c1902f7d6a6bd6016efdc5,"DERBY-4812 ReplicationMessageTransmit run does not unwrap PrivilegedActionException which can lead to failure of replicationTests.ReplicationRun_Local_StateTest_part1_1




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1002291 13f79535-47bb-0310-9956-ffa450edef68"
7a7a289e4562f522bb1764e74608607f3701f14c,"DERBY-4806 DERBY-4597 removes references to IBM jcc driver on Main.java, fixing extracting derbyTesting.jar information when it is not in the same directory as derbyrun.jar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1002682 13f79535-47bb-0310-9956-ffa450edef68"
0281db45d4aa171277fb71ed181a6b27948d6749,"DERBY-4806 DERBY-4597 removes references to IBM jcc driver on Main.java, fixing extracting derbyTesting.jar information when it is not in the same directory as
derbyrun.jar


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1002853 13f79535-47bb-0310-9956-ffa450edef68"
25ad960eb964362be6b4e28244147a34b1e1f070,"DERBY-4811: Remove unused cleanparsers, cleancatalog, and cleantoursdb build targets.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1003124 13f79535-47bb-0310-9956-ffa450edef68"
052a5ca8ccf802c5ffeeb9833940f95bf6777ce2,"DERBY-3986: Use tarfileset mode/filemode consistently in tools/release/build.xml


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1003408 13f79535-47bb-0310-9956-ffa450edef68"
e2b87d5ad7fcd2d7e9f854864ff64b02877f61fd,"DERBY-3986: Drop release artifacts into a directory tree outside subversion-controlled space.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1003607 13f79535-47bb-0310-9956-ffa450edef68"
9e89a5193250398d2f57ee24e5b85863c09dc102,"DERBY-4828: Import fails if column names contain double quotes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1004197 13f79535-47bb-0310-9956-ffa450edef68"
0af83c8423db1c665ba1bf8998fb7dbfeb89c2b5,"DERBY-4811: Remove changenumber.properties as part of clobber.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1004234 13f79535-47bb-0310-9956-ffa450edef68"
243811f93724e0620ad8067abce30ffd01dda48b,"DERBY-4804; Make database used in store.OSReadOnlyTest fully read-only 
  accepting SQLState 40XD1 as alternative which is what we get on iseries.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1004378 13f79535-47bb-0310-9956-ffa450edef68"
b005ffa385ab43115874dcf1fd0a17419594fe13,"DERBY-4757 (Client) Implement UTF8 support on DRDA

Committing the final patch that will put the UTF-8 support in place.

Also fixes current test fixtures and adds another one for boundary testing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1004460 13f79535-47bb-0310-9956-ffa450edef68"
3785c8a96f59d8e2784a60cc8ac03ccdcd83481c,"DERBY-4757 (Client) Implement UTF8 support on DRDA

Small patch to cleanup unused code in the CCSID managers

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1004586 13f79535-47bb-0310-9956-ffa450edef68"
bf59358c5f98392e3509fcd39cf43e427be011cc,"DERBY-4825: Assert failure in LargeDataLocksTest.testGetCharacterStream() because of wrong number of locks

Report the contents of the lock table to help debugging.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1004609 13f79535-47bb-0310-9956-ffa450edef68"
c7d387ff08ae92d3331b250e029cc08973f3cdde,"DERBY-4786 Shutdown command without username and password should work with mixed client and network server releases.

Commiting changes which modify the really outdated testScript.xml This gets used to run the compaibility tests. In addition to 
trunk, it only tested upto 10.2 and didn't include all releases of 10.2 and 10.1 I have modified it to test all available releases 
upto 10.6 This will definitely increase the runtime of the compatibility tests. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005193 13f79535-47bb-0310-9956-ffa450edef68"
65b2c92d46d01b2b88bd8dc7faedeabf4a189ad9,"DERBY-4836; many test failures on windows with ibm 1.5 and 1.6 on windows after test InternationalConnectTest
  skipping over the test with ibm jvms while investigating.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005285 13f79535-47bb-0310-9956-ffa450edef68"
ff589e51788bf8a7ba0b444ff459d67c9a11c56a,"DERBY-4834: Add helper class for working with index statistics in JUnit tests 

Added helper class with various utility methods for working with index
statistics in JUnit tests. Currently it contains methods to obtain statistics
for specific tables and indexes, and also convenience methods to do asserts on
whether statistics exist or not.
Introduced mainly due to the work on an automatic index statistics feature.

Patch file: derby-4834-1a-indexstats_utility_class.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005347 13f79535-47bb-0310-9956-ffa450edef68"
a5258560c33a2ce75b76061f29736417352449b5,"DERBY-4837: Prepare lang.UpdateStatisticsTest for automatic index statistics generation

Added comments about what has to be done when automatic index statistics
generation is added, and made use of the new index stats helper class.

Patch file: derby-4837-1a-updatestatisticstest_adjustment.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005359 13f79535-47bb-0310-9956-ffa450edef68"
d1a83916cd6f89e7fbf7f464ce8de75a95500f4d,"DERBY-4829: dblook fails if there is a column privilege on a table
whose name contains a quote

Properly quote strings and identifiers. Also add missing clause in the
generated GRANT statement to prevent syntax errors when copying
statements from the dblook output.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005362 13f79535-47bb-0310-9956-ffa450edef68"
41205b9358e5d2bb8191f3fc14313ce545eadbea,"DERBY-2573: Create new ant task to generate release.properties from a passed-in release id.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005590 13f79535-47bb-0310-9956-ffa450edef68"
12a93f07d45f3fde88b324733c7564b99c72af53,"DERBY-4833: Prepare existing JUnit tests for running with automatic index statistics generation 

Remove unnecessary statement plan assert (caused failure when run with the
automatic index statistics generation prototype).

Patch file: derby-4833-1a-orderbyandsortavoidancetest_adjustment.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005804 13f79535-47bb-0310-9956-ffa450edef68"
d542a9c524234599e1deaf4b488278de9f78c499,"DERBY-2573: Commit master script for building release distributions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005815 13f79535-47bb-0310-9956-ffa450edef68"
477c1838fec112773ed54349df08d61f74866aad,"DERBY-2573: Move credentials prompting into the master release target.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005922 13f79535-47bb-0310-9956-ffa450edef68"
fc47c27e32626e80dd64a38149d96011650e8893,"DERBY-2573: Don't build a release if there are outstanding edits still hanging around in your docs or code clients.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1005976 13f79535-47bb-0310-9956-ffa450edef68"
1ada130a1131173f2cbee5553ac2a44515050873,"DERBY-4825: Assert failure in LargeDataLocksTest.testGetCharacterStream()
because of wrong number of locks

Wait for background thread to complete post-commit work before
counting the locks, so that the locks it obtains don't intermittently
show up in the lock table.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1006332 13f79535-47bb-0310-9956-ffa450edef68"
8da1c279395241f43e1ed57832f0994df1156df7,"Derby release ID set to: 10.7.0.2 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021353 13f79535-47bb-0310-9956-ffa450edef68"
f311b5dd43c29cab241860cead07fa0eafae9a59,"Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021355 13f79535-47bb-0310-9956-ffa450edef68"
9a7f8c3265a3d320eb8c67b101c9c30c3ce645d1,"Derby release ID set to: 10.7.0.1 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021365 13f79535-47bb-0310-9956-ffa450edef68"
c80111560836f20d5a9a73db69e0299d52245527,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021376 13f79535-47bb-0310-9956-ffa450edef68"
7571b1fdd8f7f78949e68bce9a9986ac855ba5be,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.4 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021377 13f79535-47bb-0310-9956-ffa450edef68"
33d7aff3d5ab3e4b1b31fae50d863d346e7a4040,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.5 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021388 13f79535-47bb-0310-9956-ffa450edef68"
efb4bc3bca300488ec31b890225a61da625d819e,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021393 13f79535-47bb-0310-9956-ffa450edef68"
7ed2340d190f151cd8629e613a959a3c38a1a4f2,"DERBY-2573: More some of the release-id drudgery into the master release-building target.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021394 13f79535-47bb-0310-9956-ffa450edef68"
598c595904b08258f9451da18d928658202ecbad,"DERBY-4835 Trigger plan does not recompile with upgrade from 10.5.3.0 to 10.6.1.0 causing java.lang.NoSuchMethodError

The problem was that the clearing of stored statements during the upgrade was conditional. The clearing should happen unconditionally during upgrade. Unconditional clearing of SPSes has fixed the problem with this jira. 

Also, added a test in upgrade suite for triggers. The test has been added to BasicSetup.java which will ensure that this trigger test will automatically get run with even future releases. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021426 13f79535-47bb-0310-9956-ffa450edef68"
7ae6b960170c468aceb7bfa964da0b074d57fbed,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.1 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021432 13f79535-47bb-0310-9956-ffa450edef68"
d46418d053fbdc478623077d3703b778470aa1d1,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021459 13f79535-47bb-0310-9956-ffa450edef68"
d676b73c71b5cd1ec2d6ccabde5923e17c11525f,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.1 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021464 13f79535-47bb-0310-9956-ffa450edef68"
01371ed03b8b4620405be627b628d3b05003d9f1,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021465 13f79535-47bb-0310-9956-ffa450edef68"
f9aa20cf9fe24032f00fe376c3eb6920e9f0e582,"DERBY-2573: Eliminate platform-specific buildrelease script; instead, now the docs build runs as a separate ant process, whose memory size and classpath are adjusted correctly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021472 13f79535-47bb-0310-9956-ffa450edef68"
39bc0d0dd3efcb9d7497c7953c825eb25a83312e,"Added instructions for recommended steps when generating Maven artifacts for
a build you haven't generated yourself.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021660 13f79535-47bb-0310-9956-ffa450edef68"
c947429a48d824fcb2484188c7435560b6bb4f70,"Recorded the 10.6.2.1 artifacts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021663 13f79535-47bb-0310-9956-ffa450edef68"
a7ce814d20c1ca5b22e6c00c3174d1a91303b956,"Corrected repository name in comment.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021664 13f79535-47bb-0310-9956-ffa450edef68"
37942f7a6fde42c397161d20c57afc1598502b22,"DERBY-2573: Add a target which creates the code and docs branches for a new feature release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021793 13f79535-47bb-0310-9956-ffa450edef68"
3441f42d10896ce25c4ed771ecdea05dfdbf649a,"DERBY-4841: First attempt to revamp the public api of our top level build script.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021827 13f79535-47bb-0310-9956-ffa450edef68"
60218940f043a83038c7aea994cf25c3ab9522f3,"DERBY-4787 Add 10.6.2.1


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021937 13f79535-47bb-0310-9956-ffa450edef68"
a97630fb0e779b169c22915267c9d1766954d9ff,"DERBY-4787 Add new status information for Release 10.6.2.1 and news


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1021981 13f79535-47bb-0310-9956-ffa450edef68"
731ca0620f39b4103d9fecb7fe2867aee1692c22,"DERBY-4843: Consult isPoolable hint before caching prepared statement

Only cache a prepared statement if the poolable hint is set to true (default).

Patch file: derby-4843-1b-consult_isPoolable.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1022099 13f79535-47bb-0310-9956-ffa450edef68"
d2412698bd742b4ff28008b1a0cfd0c619c078ee,"DERBY-1963: Routine parameter names displayed by dblook are not escaped


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1022851 13f79535-47bb-0310-9956-ffa450edef68"
eda2838b551ff276aec04ef7654aef5c92ee0e9e,"DERBY-4845 Improve the dependency tracking for our build targets

Replacing derby.engine.dir with derby.dir in the <include name=.../> directive makes
ant all pick up changes in this package too: org.apache.derby.iapi.util



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023167 13f79535-47bb-0310-9956-ffa450edef68"
ccabbd09678b6b07f9a8c3e495bd81cc7adae392,"DERBY-4845: Improve the dependency tracking for our build targets

- Compile iapi/tools before impl/tools to ensure that the iapi classes
  are not compiled by the impl build targets

- Make LocalizedResource compilable against the JSR-169 libraries


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023662 13f79535-47bb-0310-9956-ffa450edef68"
b78372ba53bf1b15e43a948d7251080adafaa4f8,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023817 13f79535-47bb-0310-9956-ffa450edef68"
d0b354e0062e76615cd2c15bb351bfa64b4fa896,"DERBY-4822: [patch] DropSchemaConstantAction: could reuse the current connection provided by the available activation object

Use available transaction object directly instead of passing null.
Follows pattern used in most other classes.

Patch contributed by Martin Monperrus (martin dot monperrus at gmail dot com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023824 13f79535-47bb-0310-9956-ffa450edef68"
cb2482e809e760e286f01a4bdf875604bde82235,"[RELEASE CHECKIN] Derby release ID set to: 10.8.0.1 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023847 13f79535-47bb-0310-9956-ffa450edef68"
c482d5e938ec4fd0853d34eec7dc037b1e450f78,"[RELEASE CHECKIN] Derby release ID set to: 10.8.0.2 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023858 13f79535-47bb-0310-9956-ffa450edef68"
05239ce7f0f4f1faf59697297e461989fcfed47c,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023859 13f79535-47bb-0310-9956-ffa450edef68"
98cbdd60be4fd9723e24bd019afeaa5b9fcf0adc,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023864 13f79535-47bb-0310-9956-ffa450edef68"
464f1d45a50827a4c597a3e2497e0ced809e530e,"[RELEASE CHECKIN] Derby release ID set to: 10.8.0.5 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023876 13f79535-47bb-0310-9956-ffa450edef68"
64d42d6bd2f714aa2a2370e33784e235de223908,"[RELEASE CHECKIN] Derby release ID set to: 10.8.0.6 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023880 13f79535-47bb-0310-9956-ffa450edef68"
2970282038bf8d714701249c0c20060bd6e6a3fd,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023882 13f79535-47bb-0310-9956-ffa450edef68"
647bf64db8889f17e136d7f5cdc3fc33200a85b4,"DERBY-2573: pass release variables into the newly parameterized docs build so that release documentation is built with current information.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023889 13f79535-47bb-0310-9956-ffa450edef68"
be233fab60f7aaf37b7e62195ca29ee487328ad7,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.1 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023940 13f79535-47bb-0310-9956-ffa450edef68"
8eb768b3fc5ebe7bcff227cf1b99d0941fd6a184,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023941 13f79535-47bb-0310-9956-ffa450edef68"
1299a727245de25e89ecbaebdd3fa9b2128ef762,"DERBY-2573: Move the checkin of the generated SQLState documentation to an earlier point in the release-build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023943 13f79535-47bb-0310-9956-ffa450edef68"
4b604d3a767942c00a669e0a73bf24428ecb0aa6,"[RELEASE CHECKIN] Check in NOTICE as part of building a release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023976 13f79535-47bb-0310-9956-ffa450edef68"
f2104ac8469a23cb34483ad0e20f9dbe9bfa237f,"DERBY-2573: Add machinery to update the NOTICE file with the current copyright year when we build a release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1023985 13f79535-47bb-0310-9956-ffa450edef68"
cf2c29867d572cdf55769a19c06d727f4905a88c,"Confirmed that the 10.6.2.1 artifacts can be found in the central Maven
repository, and also on the mvnrepository site.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1024149 13f79535-47bb-0310-9956-ffa450edef68"
e68eeb00901bba80aad9869236f5eb373729399b,"DERBY-4601 Add a line break between the startup and shutdown messages in derby.log



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1024511 13f79535-47bb-0310-9956-ffa450edef68"
dfe62d23f7068af59bf70da338e2d04f987b343b,"DERBY-4601 Shutting down just a single database should log a different message than shutting down the system

Make the shutdown message in the log file more readable.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1024528 13f79535-47bb-0310-9956-ffa450edef68"
dbb041298ea0d2af041c3dca8c2bb770d4cacb63,"DERBY-4755: Add a space between the timestamp and the shutdown engine message


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1025498 13f79535-47bb-0310-9956-ffa450edef68"
694e19d62ef7c5b4907f28b259554ba8d2e53923,"DERBY-4601 Shutting down just a single database should log a different message than shutting down the system

Shutdown message will read now "": Shutting down Derby engine""



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1025615 13f79535-47bb-0310-9956-ffa450edef68"
adc593f7f2590eb4a0fd5e46b1d4b89e9883aaf1,"DERBY-4860 RunSuite on derbylang and other subsuites fails with java.lang.NoClassDefFoundError because of prepended ^


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1025795 13f79535-47bb-0310-9956-ffa450edef68"
44454b6d0951a9c638716438cfec8e75ab48ee91,"DERBY-4859: Missing doPrivileged in DatabaseClasses.WriteClassFile()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1025888 13f79535-47bb-0310-9956-ffa450edef68"
08620b1d81facbb8cfff239e4fb91ec24341399d,"DERBY-4858: Remove deprecated code for generating CHANGES.html

Removed the class generating the CHANGES file, and modified or removed all relevant
ant targets.

Patch file: derby-4858-1a-changes_removal.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1026127 13f79535-47bb-0310-9956-ffa450edef68"
d10ee061cb1d4c786c84562687d85300a222d165,"DERBY-4864: First cut of a release summary for 10.7.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1026398 13f79535-47bb-0310-9956-ffa450edef68"
281df80570bee7d9e0a64d47e722e84f4b8a7549,"DERBY-4857: Utilize the SOAP API to fetch JIRA issue list for release notes generation

Added the client part of the new functionality.
The client is an independent Maven project, which consists of the code
required to build the RPC infrastructure (based on WSDL and SOAP) and allowing
us to query the JIRA instance used by Apache Derby to generate a list of
issues fixed in a release.
The output of the client is a text file containing information about the
relevant JIRA issues. This file will be fed into the ReleaseNotesGenerator.
The client can perform the following tasks:
 o (primary) generate list of fixed issues
 o (secondary) print release ancestry chain
 o (secondary) print all Derby releases

To build the client manually: cd into 'tools/release/jirasoap', then run
'mvn -Pbuildclient' ('mvn clean' to clean up generated files)
To run the client manually:
    java -jar tools/release/jirasoap/target/JiraSOAP-jar-with-dependencies.jar
(this will print the usage text - read it!)

Patch file: derby-4857-2a-jirasoap_maven_client.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1027056 13f79535-47bb-0310-9956-ffa450edef68"
dd77e209f91d7bd7f637127927e4f776cc5b2486,"DERBY-4865: Remove Maven artifact history section from maven2/README.txt

Removed history section to lighten burden on release manager, and because the
usefulness of it is questionable.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1027130 13f79535-47bb-0310-9956-ffa450edef68"
7342dc0d3346f2e0aa4a9b37d01a5a1b05d5cc27,"DERBY-4855: Add a new build target which creates the zip file of re-arranged docs which we publish for each release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1027230 13f79535-47bb-0310-9956-ffa450edef68"
e5a97fee09a165983f9fdedb8eb7e6efd618b86f,"DERBY-4836 many failures with IBM 1.5 and 1.6 on windows after test InternationalConnectTest

Stopped testBoundaries() fixture from running on IBM and Windows (Sun < 1.5)

Added cleanup for the additional databases that are created by testBoundaries()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1027261 13f79535-47bb-0310-9956-ffa450edef68"
a11b0768bc778e7991f51145d56a30f5cf4f150b,"DERBY-1439: Remove the AntiGC thread


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1027552 13f79535-47bb-0310-9956-ffa450edef68"
1ce3ae810fa85354a5f1b5bd5608eb517119f907,"DERBY-4815: Override mechanism for modules.properties works backwards

Check the property key, not the property value, when trying to detect
duplicate keys.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1027847 13f79535-47bb-0310-9956-ffa450edef68"
e1aa9c00ea184096dc03b8be70fe8ee3efe09f86,"DERBY-4857 (partial): Utilize the SOAP API to fetch JIRA issue list for release notes generation

Modified the existing release notes generator to be able to parse the file
generated by the new JIRA SOAP client.
Removed deprecated class ReportParser.

Note that the description on how to run the ant target is incorrect until a
follow-up patch is committed/applied.

Patch file: derby-4857-3b-jirasoap_relnotesgen_changes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1027878 13f79535-47bb-0310-9956-ffa450edef68"
1d8d20176345310e5001a12a075563d903fd3823,"DERBY-4857: Utilize the SOAP API to fetch JIRA issue list for release notes generation 

Integrated the JIRA SOAP tool with the ant genrelnotes target, which now:
 o checks if the required properties have been set
 o builds the JIRA SOAP tool using Maven 2
 o executes the JIRA SOAP tool to generate the issue list
 o executes the ReleaseNotesGenerator
The target is started from the directory tools/release.
Try 'ant -p' or see JavaDoc for ReleaseNotesGenerator for help on usage.

Patch file: derby-4857-4b-jirasoap_ant_integration.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1027882 13f79535-47bb-0310-9956-ffa450edef68"
f1c83832acb0b50bacbcfe284d423f382447ea28,"DERBY-4772 (cleanup): Data truncation error with XPLAIN-functionality enabled

Cleaned up a bunch of unused imports, some unused variables and removed an
Exception.printStackTrace().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1027921 13f79535-47bb-0310-9956-ffa450edef68"
45e3ef088c80d954668e246b461e10ae2f49c4a7,"DERBY-4836: many failures with IBM 1.5 and 1.6 on windows after test InternationalConnectTest

Ensure that the databases are shut down before attempting to delete them.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1028035 13f79535-47bb-0310-9956-ffa450edef68"
c6065853666f813b41ec4e19746701c33546cfa8,"DERBY-4873: NullPointerException in testBoundaries with ibm jvm 1.6

Use a helper method that initializes istream if necessary before
calling println().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1028633 13f79535-47bb-0310-9956-ffa450edef68"
e472df14ebb51fa9f65a8ea0a1abf9f44191037c,"DERBY-4685: Dead/unreachable code in OpenConglomerate.lockPositionForWrite()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1028639 13f79535-47bb-0310-9956-ffa450edef68"
28358abd611b95b9aedfcb9d78517f47628aa502,"DERBY-4867: Update BaseTestCase.isSunJVM() to accept Oracle


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1028643 13f79535-47bb-0310-9956-ffa450edef68"
c769b622c5c9180ee5b374293c132b1cd4dac88f,"DERBY-4868: Remove Types.BIT/Types.BOOLEAN switch in JVMInfo

Only needed for Java versions 1.3 and earlier, which are no longer
supported.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1028645 13f79535-47bb-0310-9956-ffa450edef68"
6e6347a6730798c3117da972422c13695dc65939,"DERBY-4866: Simplify SYSCS_BULK_INSERT with IdUtil.mkQualifiedName()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1028648 13f79535-47bb-0310-9956-ffa450edef68"
20cc6f644e61ac40250cf2db0ac5eb8add05028f,"DERBY-4685: Dead/unreachable code in OpenConglomerate.lockPositionForWrite()

Remove the second parameter (forInsert) in lockPositionForWrite()
because it is always false in the current code, and because the method
is not believed to work for inserts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1028712 13f79535-47bb-0310-9956-ffa450edef68"
b4885a642ff111f0f83c313ee0863ea094731e40,"DERBY-4849: Re-compilation may cause duplicate entries in the XPLAIN table

Avoid writing XPLAIN data if result set is being closed due to invalidation.

Patch file: derby-4849-2c-broad_fix_with_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1028716 13f79535-47bb-0310-9956-ffa450edef68"
73bab2e7b3d8427c04cb59f01364f83d9bc10aea,"DERBY-4876: Deprecation warnings in VTITemplate


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1029452 13f79535-47bb-0310-9956-ffa450edef68"
0f26c83642e45ad1412c9ba563409ad157bb0246,"DERBY-4877: Unchecked warnings in jdbc4 test suite


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1029453 13f79535-47bb-0310-9956-ffa450edef68"
b5231ca4b38ea0a64985593203fe05b5986d10f6,"DERBY-4878: Silence sanity info message when running ""ant -q""


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1029454 13f79535-47bb-0310-9956-ffa450edef68"
b4244973639d360fede5486afdb5736a65113adc,"DERBY-4755: Remove blank line in engine shutdown message


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1029579 13f79535-47bb-0310-9956-ffa450edef68"
0365d1e5e30593b12b92bc1de424a180e0dfc6a7,"DERBY-4796 (partial) Missing escape for apostrophes in many messages

Escape the apostrophes in the engine messages.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1029820 13f79535-47bb-0310-9956-ffa450edef68"
790f3b0a550550291731b04dd1296dffb33d3894,"DERBY-4879: Lookahead warning from ij.jj

Change lookahead from 2 to 1 in order to enable lookahead adequacy
checking. Also change the grammar to work with the smaller lookahead.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1029970 13f79535-47bb-0310-9956-ffa450edef68"
a6695094c9cfa89a710563d8b7ca53e5fa87ad69,"DERBY-4881: Deadlock accessing SYS.SYSSTATISTICS

Read table statistics from the system table using READ_UNCOMMITTED to avoid
deadlocks with transactions inserting new statistics entries.
Modified getDescriptorViaIndexMinon to allow returning multiple tuple
descriptors also when isolation level is READ_UNCOMMITTED.
Removed one overload of getDescriptorViaIndex (cleanup).

Patch file: derby-4881-1b-deadlock_fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1030043 13f79535-47bb-0310-9956-ffa450edef68"
b25a23f0b753c3dff4cad5fa4d59a21f6e8a58b8,"DERBY-4857: Utilize the SOAP API to fetch JIRA issue list for release notes generation

Added '--batch-mode' to the ant exec target to suppress meter when downloading
required dependencies.
Added 'target' to the svn:ignore property.
Stopped printing info about release ancestry read from releaseSummary.xml
(deprecated).

Patch file: derby-4857-5a-minor_tweaks.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1030383 13f79535-47bb-0310-9956-ffa450edef68"
7fa6f64357035a8035a58aa02c382b82735c5be0,"DERBY-4880: Unchecked warnings in JMXManagementService and VTI demos


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1030450 13f79535-47bb-0310-9956-ffa450edef68"
0a218e3a9083c033c5995e3458a995cf19667221,"DERBY-4857: Utilize the SOAP API to fetch JIRA issue list for release notes generation

Fixed bug in the ancestry chain computation logic.
Moved date formatting code into DerbyVersion, added getFormattedReleaseDate()
and modified toString().
Fixed typo(s).
Renamed variable.

Patch file: derby-4857-6a-client_tweaks.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1030471 13f79535-47bb-0310-9956-ffa450edef68"
3a6f4cf9d304c6f18d76060305bda47d7b69582c,"DERBY-4741 Make Derby work reliably in the presence of thread interrupts

Patch derby-4741-a-04-api-interruptstatus. This patch contains the new
helper class InterruptStatus and inserts calls to
restoreIntrFlagIfSeen in before API methods' return and in the
exception handling (TransactionResourceImpl#handleException).

In addition, execution of EmbedStatement#executeBatch checks for
interrupts between each statement in the batch and throws the
exisisting 08000 (CONN_INTERRUPT - session level severity) error if
interrupts are seen.

Note: Still, the machinery of InterruptStatus isn't really used to
save any interrupts, that follows in (a) later patch(es), so this
patch doesn't change behavior. The focus here is on the correct
placement of calls to restoreIntrFlagIfSeen in the API.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1030630 13f79535-47bb-0310-9956-ffa450edef68"
a410331529fcb8dde9fc233ade90b911dd2877db,"Setting svn:eol-style on InterruptStatus.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1030644 13f79535-47bb-0310-9956-ffa450edef68"
794fc70796a4376b7a96c55cc64b98dba16bc445,"DERBY-4741 Make Derby work reliably in the presence of thread interrupts

Added missing copyright header to the newly introduced class InterruptStatus.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1030814 13f79535-47bb-0310-9956-ffa450edef68"
d27aa4de540f51432d91b5d9722be273ab160f0c,"DERBY-4845: Correct an asymmetry in the generation of Derby's grammars.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1031069 13f79535-47bb-0310-9956-ffa450edef68"
653321ede00a9a1f007e2418edfd90cd9fd4ce01,"DERBY-4845: Attempt to fix a build error which may have been caused by a submission which caused the compilation of iapi.util to trigger the compilation of iapi.types without going through the special iapi.types build target which handles the weird location of the xml machinery.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1031174 13f79535-47bb-0310-9956-ffa450edef68"
696e42e4fd79011603e5f66b38b36d84cf6bbe5c,"DERBY-4885: Reduce lock timeout in SavepointJdbc30Test


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1031516 13f79535-47bb-0310-9956-ffa450edef68"
f8c4add0cb496346a14c65560495edc20cebdd2e,"DERBY-4864: Add a pointer to the Apache web site to the release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1031558 13f79535-47bb-0310-9956-ffa450edef68"
6bc69d9b4a0c3b3e7c5f3974992878f2157cc7df,"DERBY-4834: Add helper class for working with index statistics in JUnit tests

Added helper method assertNoStatsTable.

Patch file: derby-4834-2b-assertNoStatsTable.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1031559 13f79535-47bb-0310-9956-ffa450edef68"
d4ebb4990f28089e768354c7b9367bc4e26a3b3d,"DERBY-4888: ClassCastException when calling boolean meta-data functions with 10.7 client against 10.6 server


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1031973 13f79535-47bb-0310-9956-ffa450edef68"
38b9499ee9670ddad9fccbf6930938ce50e355bf,"DERBY-4893: Allow Java 5 language constructs in build code

- Changed source and target level for the build code to 1.5

- Changed some variable declarations to silence ""unchecked"" warnings
  emitted by the compiler after the change


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1032479 13f79535-47bb-0310-9956-ffa450edef68"
54b4e5fc52743a351151e4374dd332e207edc9a7,"DERBY-4892: Unsafe use of BigDecimal constructors

Use BigDecimal.valueOf(long), which is available on all supported
platforms.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1032481 13f79535-47bb-0310-9956-ffa450edef68"
e19280a9345630097eb2cd2a85b01811589f8d69,"DERBY-4891: Enable testing of boolean type in ParameterMappingTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1032482 13f79535-47bb-0310-9956-ffa450edef68"
5c61b1d46cf500cf23512f4de3cedc7df5bb11f0,"DERBY-4884 (partial) DatabasePropertyTestSetup cannot change static
properties in encrypted databases

Changed the decorator for encrypted databases to make the connection
attributes available in the code that opens a default connection. This
makes it possible to reboot an encrypted database with the helper
methods in the framework, which is what DatabasePropertyTestSetup
needs in order to change static properties.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1032485 13f79535-47bb-0310-9956-ffa450edef68"
adad5b158bd76c56c17ce0bd77a7ae7d9e4f5b8e,"DERBY-4864: Check in first draft of release notes for 10.7.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1032576 13f79535-47bb-0310-9956-ffa450edef68"
979020d2154e20114e91ef596d0fc58dab41a3f0,"DERBY-4889: Make client behavior agree with embedded behavior when calling setByte(), setShort(), setObject( Short ), and setObject( Byte ) on BOOLEAN-valued parameters.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1032667 13f79535-47bb-0310-9956-ffa450edef68"
e39aac276f30fc9cad2aeed9c29e9dd6587f6078,"DERBY-4890: Add BOOLEAN to the list of types supported by the setString() methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1032780 13f79535-47bb-0310-9956-ffa450edef68"
b5d1d676be2b334797c6651525ed05242f3c64c6,"DERBY-4884 (partial) DatabasePropertyTestSetup cannot change static properties in encrypted databases

Make DeadlockModeTest and BlobClob4BlobTest propagate timeout settings
to the encrypted database. Also make DeadlockModeTest actually use the
encrypted database when running within the encryption decorator.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1032907 13f79535-47bb-0310-9956-ffa450edef68"
5e25bf20c716e37d59eba3cd35c1e2b85123b18e,"DERBY-3986: Fix the loading of toursdb, which broke when we moved the database out of the source tree into the generated artifact directory.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1033052 13f79535-47bb-0310-9956-ffa450edef68"
f29303bb91383f27fa2f7d5917fc3f0e029d4b51,"DERBY-4895 Thread local TableDescriptor#referencedColumnMap is not removed from app threads when Derby is shut down

Patch derby-4895-a plus a comment as Knut suggested. The patch moves
the storage of a table's referencedColumnMap to the lcc to avoid a
lingering thread local in application threads after Derby has shut
down (seen as potential memory leak error in TomCat deployments).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1033485 13f79535-47bb-0310-9956-ffa450edef68"
226c6e74c63e1c311e1fea83763fc2531bb69ad6,"DERBY-4864: Add release verification instructions to the end of the release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1033590 13f79535-47bb-0310-9956-ffa450edef68"
0f8de6c86d1985de602e9b1271e6bebcb00bc20d,"DERBY-4898: testGetURL test fails in nightly runs

Disregard differences in ordering when comparing connection
attributes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1033851 13f79535-47bb-0310-9956-ffa450edef68"
4771f1f45034b7b0deae16749165b84a8fc64727,"DERBY-4772: Data truncation error with XPLAIN-functionality enabled 

Increased max length of string fields with undefined max lenghts to the
maximum allowed length of the VARCHAR data type (and also changed the data
type from CHAR to VARCHAR).

Patch file: derby-4772-1b-increase_max_len.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1033864 13f79535-47bb-0310-9956-ffa450edef68"
dad03d7fcfa73de0b7e9783e8c3768cb7b5183e0,"DERBY-4855: Add a new ant task and target for transforming the release notes into a download page.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1033940 13f79535-47bb-0310-9956-ffa450edef68"
f1b21c6b13fd726706452e90ed931dfe1935c9a5,"DERBY-4864: Make the release notes point back at the Derby download page to make it easy for readers to navigate to the most up to date information about the release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1033971 13f79535-47bb-0310-9956-ffa450edef68"
a02269ea4839d2e614264bdee21890375ea83889,"DERBY-4796: Missing escape for apostrophes in many messages

- Made LocalizedResource use java.text.MessageFormat for all messages,
  including those with no parameters, for orthogonality.

- Changed messages in java/tools and java/drda to consistently use two
  single-quote characters to produce a single apostrophe in the
  message text.

- Fixed invalid parameter marker in one of the Italian messages in
  java/engine.

- Updated test canons to expect the new output.

- Added a class that runs at build time and verifies the format of all
  the messages.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1033977 13f79535-47bb-0310-9956-ffa450edef68"
9fe69b1edcefa636a4a6145163c1b416d90a9fa6,"DERBY-3986: Improve the dependency tracking for ClassSizeCatalog.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1034093 13f79535-47bb-0310-9956-ffa450edef68"
525fa450031af1ac2f10fbf7bc029e248be66a93,"Simplify buildjarsclean target


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1034186 13f79535-47bb-0310-9956-ffa450edef68"
b1977cf5c05bb4b75ec3ef617b9fa44c2adf28bd,"DERBY-4899: Refactor access to primary structures in AlterTableConstantAction

Use instance variables instead of passing arguments unnecessarily to a bunch of
private methods.
Removed unused variables and one unused method.
This is a cleanup patch.

Patch file: derby-4899-1b-cleanup.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1034347 13f79535-47bb-0310-9956-ffa450edef68"
26cfa3e2ff09e874a62f1f1ff0ca409a72f3f667,"[RELEASE CHECKIN] Derby release ID set to: 10.7.1.0

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1034407 13f79535-47bb-0310-9956-ffa450edef68"
e89cb225ba277862935737e342f6d267d717b37a,"[RELEASE CHECKIN] Derby release ID set to: 10.7.1.1

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1034412 13f79535-47bb-0310-9956-ffa450edef68"
bbb8c54d425329a29f8ec6cade2b6250ad0d3fd8,"[RELEASE CHECKIN] Derby release ID set to: 10.7.0.0

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1034414 13f79535-47bb-0310-9956-ffa450edef68"
3f98beb0bcac5d45863d010823781bb73484c114,"DERBY-4855: Create a cgi script for the new release as part of creating the download page.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1034483 13f79535-47bb-0310-9956-ffa450edef68"
1b5d92418c9bcaf2cc1a4f7fb8c61a8c90c5fe02,"DERBY-4864: Attaching second draft of release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1034547 13f79535-47bb-0310-9956-ffa450edef68"
dd7903b0064d0bdbe35f87be41e05a185ca6a344,"DERBY-4869: Disable signature checking tests on platforms that support JDBC 4.1

These tests will fail until the new JDBC 4.1 methods have been
implemented, so silence them for now.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1035164 13f79535-47bb-0310-9956-ffa450edef68"
0c4389d8c2f05ce87e13a5fefd414f160190b32c,"DERBY-4902: Encoding problem in output from plan exporter

Make sure the encoding in the header of the generated XML file matches
the actual encoding used in the file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1035238 13f79535-47bb-0310-9956-ffa450edef68"
5f4cb98f7b09fb045e21c80b936b972374aa0042,"[RELEASE CHECKIN] Derby release ID set to: 10.8.0.0

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1035260 13f79535-47bb-0310-9956-ffa450edef68"
97e44428282e89fa3b6d36d028dda2491203a882,"[RELEASE CHECKIN] Derby release ID set to: 10.8.0.0 beta

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1035272 13f79535-47bb-0310-9956-ffa450edef68"
129989766c97919cb60ccdf4369cddd2f30e0327,"DERBY-4864: Change the trunk data dictionary version to 10.8.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1035287 13f79535-47bb-0310-9956-ffa450edef68"
66c677f4c110b186877ad96dac032e1678dfdb50,"DERBY-2573: Add target for signing debug artifacts.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1035327 13f79535-47bb-0310-9956-ffa450edef68"
65ee2532ac7600b76fa36877351d9717de9efc33,"DERBY-4904: Plan exporter doesn't work if XPLAIN schema has special characters

Use prepared statements to prevent the need for quoting.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1035603 13f79535-47bb-0310-9956-ffa450edef68"
19a43e571b795219eadb7e17392839ede55f326a,"DERBY-2573: Add a variable for specifying the location of the eclipse ui/doc plugin and sign that artifact along with the others.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1035647 13f79535-47bb-0310-9956-ffa450edef68"
f22d75dea5c778591454c87da5747f20543a3832,"DERBY-4855: Add pointer to download page to cli.xconf as part of creating the download page from the release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1035700 13f79535-47bb-0310-9956-ffa450edef68"
583afe54004eb5d3149921f87547b6240efddd3e,"DERBY-4908: Instability in CheckConstraintTest.testBuiltInFunctions

Don't care about the order of the rows in a query with no ORDER BY.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1036769 13f79535-47bb-0310-9956-ffa450edef68"
787ceb479acfa7f0e9b1f9bd9a1600a81490e393,"DERBY-4897 Get rid of warning for customized tags in javadoc build

Changed all Derby custom javadoc tags to this syntax, which contains a period
(""."") and thus silences the warnings:

<derby_custom_tag> ::= derby ""."" <camelCasedVersionOfOldTag>

e.g.

DiskLayoutTaglet.java:29: private String NAME = ""derby.diskLayout"";
EndFormatTaglet.java:28: private String NAME = ""derby.endFormat"";
FormatIdTaglet.java:29: private String NAME = ""derby.formatId"";
PurposeTaglet.java:29: private String NAME = ""derby.purpose"";
UpgradeTaglet.java:29: private String NAME = ""derby.upgrade""; 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1037009 13f79535-47bb-0310-9956-ffa450edef68"
419a664d5016aaae9ddd912dd4357a1e3a361773,"DERBY-4315: Clean up error reporting when sending an InputStream from the client to the server.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1037716 13f79535-47bb-0310-9956-ffa450edef68"
95c133a22c7831e9ac164db73aed28fd8167f241,"DERBY-4315: Cleanup end-of-stream error reporting when client sends an InputStream to the server.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1037764 13f79535-47bb-0310-9956-ffa450edef68"
bb8f25af4a4b5d601b194615c631f58ee4acb8cc,"DERBY-4741 Make Derby work reliably in the presence of thread interrupts

Patch derby-4741-b-04-nio, which adds container recovery to NIO
RAFContainer4.  The old test Derby151Test has been decommissioned, and
a new one, InterruptResilienceTest has been added. Currently it only
tests the basic recovery case in a two thread scenario. Should add
more tests. The debug flag ""RAF4"" can be used with sane builds to
observe recovery events.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1038440 13f79535-47bb-0310-9956-ffa450edef68"
df9cdae980f912a609564aef6c077d4cf66dbe06,"DERBY-4912: Instability in Derby2017LayerBTest

Made result set assert unordered. The query result cannot be ordered with the
current table definition (BLOB/CLOB column only).

Patch file: derby-4912-1a-unorderedAssert.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1038514 13f79535-47bb-0310-9956-ffa450edef68"
84814bc159123889afb7ea822bb5b1f24e3d88b5,"DERBY-4911 restoreIntrFlagIfSeen may throw ShutdownException causing confusing console stack trace at server shutdown

Patch derby-4911, which makes restoreIntrFlagIfSeen ignore
ShutdownException when trying to find lcc. We sometimes saw a
ShutdownException stack dump on the console when stopping the network
server. restoreIntrFlagIfSeen does nothing useful when we are closing
down anyway, so we can safely ignore the exception.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1038813 13f79535-47bb-0310-9956-ffa450edef68"
c85d5e14eb1b4f164bd5becb3ce4eab597af83f4,"DERBY-4903: Plan exporter tool produces broken output if query contains less-than operator

Patch contributed by C.S. Nirmal J. Fernando <nirmal070125@gmail.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1039084 13f79535-47bb-0310-9956-ffa450edef68"
f67a9ca4deeb6b3d2d6d5b541f758d0f632d5afc,"DERBY-4903: Plan exporter tool produces broken output if query contains less-than operator

Added handling of '&' and expanded test case to test more special characters.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1039268 13f79535-47bb-0310-9956-ffa450edef68"
bd018fd9ff34423dcc2acefc560ff52255d9f098,"DERBY-4741 Make Derby work reliably in the presence of thread interrupts

Patch derby-4741-c-01-nio: closes two corner cases I have
observed when stress testing the RAFContainer4 recovery mechanism. It
also does some other small cleanups. Regressions ran OK.

RAFContainer:

If we receive an interrupt when the container is first being opened
(i.e. during RAFContainer.run (OPEN_CONTAINER_ACTION) ->
getEmbryonicPage), recovery will fail because currentIdentity needed
in RAFContainer4#recoverContainerAfterInterrupt hasn't yet been
set.

RAFContainer4:

If a stealthMode read is interrupted and is recovering the container,
it erroneously increments threadsInPageIO just before exiting to retry
IO. This leads to a break in the invariant that threadsInPageIO be 0
when all threads are done, causing issue (hang) down the line.

If, when we are reopening the container, the read being done during
that operation (getEmbryonicPage), that stealth mode read will also
lead to a (recursive) recovery. We have to catch this case by adding a
""catch (InterruptDetectedException e)"" just after the call to
openContainer, not by testing the interrupt flag as presently done,
since the recovery inside the recursive call to
getEmbryonicPage/readPage will already have cleared the flag and done
recovery.

When giving up reopening the container for some reason, we also forgot
to decrement threadsInPageIO. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1040086 13f79535-47bb-0310-9956-ffa450edef68"
76a9f5ab110429635716ce7d99a4d2d256e2662e,"DERBY-4913 0.3 to 10.5 upgrade fails with ava.io.StreamCorruptedException

Add full stack trace with ClassCastException for better diagnostics



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1040658 13f79535-47bb-0310-9956-ffa450edef68"
1620a2b9e2af818992c9caaf563f7a45e880bd45,"DERBY-4918: Minor refactoring of SPSDescriptor

Minor cleanup, including:
 o declare variables final where appropriate
 o replace Vector with List (local use, synchronization not needed)
 o added/removed synchronize keyword where appropriate
 o added/corrected some comments/documentation

Patch file: derby-4918-1a-misc.diff (moved import line in DataDictImpl)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1041192 13f79535-47bb-0310-9956-ffa450edef68"
dd32c1639d5dd80a4829e531710b2b82488087a3,"DERBY-3258: 'Unexpected row count: expected:<0> but was:<3>' in testReleaseCompileLocks

Wait for post-commit work to complete before checking the contents of
the lock table.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1041338 13f79535-47bb-0310-9956-ffa450edef68"
1e0e0ca396f4c67cbc2079f66f49a3f11d07f1b7,"DERBY-4834: Add helper class for working with index statistics in JUnit tests 

Introduced a timeout value and exepcted count when fetching statistics from
the system table. If a specific number of statistics entries is expected, the
system table will be queried repeatedly until the correct number is obtained or
the query times out. The motivation behind this is that the arrival of
entries in SYS.SYSSTATISTICS isn't that easy to predict since the work is
carried out in a background task.

Also some cleanups in Utilities:
 o fixed some JavaDoc
 o fixed formatting
 o added method sleep
 o simplified repeatChar

Patch file: derby-4834-3a-timeout.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1041374 13f79535-47bb-0310-9956-ffa450edef68"
6efed4e81907a8930fa0c6a2ad21e0282ca0d5ae,"DERBY-4918: Minor refactoring of SPSDescriptor

Removed method setUUID, made uuid final.

Patch file: derby-4918-2b-remove-setUUID.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1042048 13f79535-47bb-0310-9956-ffa450edef68"
174db5a96bbfdc633de49750193b76006f283f31,"DERBY-4771: Continue investigation of automatic creation/update of index statistics.

Removed unused method getRowEstimate.

Spotted by Dag H. Wanvik (dag dot wanvik at oracle dot com).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1042461 13f79535-47bb-0310-9956-ffa450edef68"
ec5de74e56430d8c1b2e06775d1ec1e73d794b6a,"DERBY-4834: Add helper class for working with index statistics in JUnit tests

Added number of leading columns to the toString output. Needed to easily
differentiate between the statistics objects for multi-column indexes when
dumping stats.

Patch file: derby-4834-4a-toString_leading_cols.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1042537 13f79535-47bb-0310-9956-ffa450edef68"
1e90bf4dbb34358b91a7ec1f5618c71eb700c260,"DERBY-4614: Checkin a warmed-up version of Nirmal's patch, which corrects the JDBC metadata for timestamps.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1042675 13f79535-47bb-0310-9956-ffa450edef68"
17754f82aca71d220163d22ee59f7f2155d26345,"DERBY-4932: Expose the VTITemplate class in Derby's public api.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1042768 13f79535-47bb-0310-9956-ffa450edef68"
a720ce8d3480ecf1e65c327d82cfa625f12504a5,"DERBY-4933: Use framework helper methods to check result sets in DatabaseMetaDataTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043039 13f79535-47bb-0310-9956-ffa450edef68"
96e3f0c24dbe79202ff38904bf4df436c74ba685,"DERBY-4932: Move StringColumnVTI out of its testing package into the public api.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043122 13f79535-47bb-0310-9956-ffa450edef68"
18953ff46903a67844d56af079ddb93f7661cda9,"DERBY-4932: Update the vti demo scripts to use an in-memory database.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043130 13f79535-47bb-0310-9956-ffa450edef68"
8c6a01badcfaf7b07c15de63c0641c13c26162f3,"DERBY-4941: Invalid example URL in German help text for dblook

Changed example URL from jdbc:derby//localhost:1527/meineDB to
jdbc:derby://localhost:1527/meineDB.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043227 13f79535-47bb-0310-9956-ffa450edef68"
19d913d9880a33816ac6cd7a605e4e27046f2211,"DERBY-4932: Remove the version of StringColumnVTI in the demo subtree.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043245 13f79535-47bb-0310-9956-ffa450edef68"
b175fd272d3afd14e1380129f8f3699b7c80a70c,"DERBY-4856 DERBY-4929 Add thread dump information for error StandardException and SQLException. Due to DERBY-289, ThreadDump.java and ExceptionUtil.java should go to iapi/error for engine. Currently, all thread dump information goes to derby.log

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043290 13f79535-47bb-0310-9956-ffa450edef68"
022cb5be9c6b398e5aac501450b19249b37e8b18,"DERBY-4856: Set svn:eol-style on new files


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043334 13f79535-47bb-0310-9956-ffa450edef68"
7eb8268695821336631b85f1ebcadab95e28aee4,"DERBY-4928: Deadlock-prone synchronization in BasicDependencyManager 

o Obey synchronization rule: synchronize on ""this"" when accessing in-memory
  dependencies, don't synchronize on ""this"" when accessing stored depencenies.
  For stored dependencies we rely on database locking.
  Doing both may casue deadlocks.
o Removed methods getAllProviders, getAllProvidersInfo, dumpDependencies,
  bubbleSort and newSList.
o Replaced HashTable with (Hash)Map.
o Brushed up some comments.
o Added BaseJDBCTestCase.assertStatementErrorUnordered, used it in ViewsTest.

Patch file: derby-4928-1a-depman_sync_and_cleanup.diff (modified comment)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043367 13f79535-47bb-0310-9956-ffa450edef68"
db8af5c2ad1f80c2824b1bbb1aafcad9d019b240,"DERBY-2949: AssertionFailedError in testStalePlansOnLargeTable

Use explicit checkpoints to make the test independent of the timing of
the implicit checkpoints.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043389 13f79535-47bb-0310-9956-ffa450edef68"
054847893b1f2b752f36c8867dd29fb899b9b277,"DERBY-4935: Add initial istat tests

Added initial tests for the automatic index statistics feature.
Since the feature hasn't been committed yet, the tests haven't been wired
into suites.All.

Patch file: derby-4935-1a-initial_tests.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043680 13f79535-47bb-0310-9956-ffa450edef68"
afa3a69d21d9a6c45257c04e1df9a1748d110c03,"DERBY-4910: Report underlying exception when replication tests fail


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043748 13f79535-47bb-0310-9956-ffa450edef68"
b231544c16eaa8929ebfbd768222178712c14db5,"DERBY-4741 Make Derby work reliably in the presence of thread interrupts

Patch derby-4741-kristians-01, incorporating Kristian's comments. Should not change behavior.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1043802 13f79535-47bb-0310-9956-ffa450edef68"
179e593bb7d7347e9bcaef432ae9295987fdc4c7,"DERBY-4874 Trigger does not recognize new size of VARCHAR column expanded with ALTER TABLE. It fails with ERROR 22001: A truncation error was encountered trying to shrink VARCHAR

The trigger action associated with a trigger gets converted as shown in the example below. This transformation happens if the trigger action has REFERENCEs clause.
	update xr.repositoryobjectversion set uname = upper( n.name )
	  where name = n.name and uname <> upper( n.name );
	turns into
	update xr.repositoryobjectversion set uname = 
	  upper( CAST (org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().getNewRow().getObject(3) AS VARCHAR(128)) ) 
	  where name = CAST (org.apache.derby.iapi.db.Factory::getTriggerExecutionContext().getNewRow().getObject(3) AS VARCHAR(128))
As can be seen above, there is a CASTing involved which uses the length of the column in trigger table. 

If say that length is changed by ALTER TABLE after the trigger has been created, that change in the length does not get reflected in the sql associated with the trigger action in the form on SPSDescriptor. In order to fix this, I have made changes which willcause us to regenerate the sql from the trigger action for the SPSDescriptor if we are working with an invalidated row level trigger which uses the REFERENCEs clause.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1044096 13f79535-47bb-0310-9956-ffa450edef68"
ab582b3eddba149c2a58a8d77563449625537d61,"DERBY-4932: Make VTITemplate abstractly extend a base class which implements the full JDBC 3.0 ResultSet api; this alows developers to use both the java 5 and java 6 compilers when building table functions which extend VTITemplate and StringColumnVTI.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1044158 13f79535-47bb-0310-9956-ffa450edef68"
7916398ba2799ba2c898ba9ae2db0c2d951198f9,"DERBY-4936: Add core istat daemon 

Added the core daemon code that will coordinate the automatic updates of index
cardinality statistics. Note that this code will do nothing until enabled, it
depends on an external client to schedule work units.

Most of the code actually generating statistics has been copied from
AlterTableConstantAction (I plan to remove this code and call the daemon from
AlterTableConstantAction).

To daemon can operate in two modes: explicit and background.
The former will behave very much like the existing code run by
SYS_CS.UPDATE_STATISTICS.
The latter will run in the background and try to stay out of the way for
concurrent user activity. It will use much weaker locking, being prepared to
handle the issues that might cause (for instance that the table is removed
while being scanned).

See class JavaDoc and the JIRA issue(s) for details.

Patch file: derby-4936-1b-core_istat_daemon.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1044413 13f79535-47bb-0310-9956-ffa450edef68"
bdcc864c230e8cb5dc17ed91d2738a1b76bea50c,"DERBY-4932: Put package protection on VTITemplateBase.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1044431 13f79535-47bb-0310-9956-ffa450edef68"
16a0f6c6206d23a6bad4fe6504c1dfd2d42b3561,"DERBY-4920 suites.All stuck in RAFContainer4.awaitRestoreChannel()

Patch derby-4920-a. 

Patch details:

* InterruptStatus.java

Make sure we always catch ShutdownException when we access the context
looking for lcc.

* RAFContainer4.java

Improved some comments, added a final, added a max count for a retry
loop that missed it: will throw FILE_IO_INTERRUPTED if it exceeds
MAX_INTERRUPT_RETRIES (as elsewhere when we give up).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1049150 13f79535-47bb-0310-9956-ffa450edef68"
60f5182b8b00a07d0fbd07d15fdd7d9735e3b44e,"DERBY-4614: Fix backward compatibility issue when exchanging timestamps.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1049180 13f79535-47bb-0310-9956-ffa450edef68"
08080585ac883c18af8da8a372e6f9f5dd682ff2,"DERBY-4864: Add 10.7.1.1 to the list of starting points for the upgrade tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1049190 13f79535-47bb-0310-9956-ffa450edef68"
7fe391940d62bfee201ebe007368405ad4949ff4,"DERBY-4864: Update the STATUS file to reflect the release of 10.7.1.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1049209 13f79535-47bb-0310-9956-ffa450edef68"
d4cac5e8a825cfd25525e5eb90d02bde8909be02,"DERBY-4944 Embedded Derby does not start when derby.jar is dynamically uploaded / added to the classpath

Patch BDFF.diff which checks if SourceCode#getLocation is null before
trying to access it. It turns out that in certain cases the location
may be null.

Patch supplied by michi at groiss dot com.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1050000 13f79535-47bb-0310-9956-ffa450edef68"
433d08457322d45b47f1cacc8fba1acb4ab6cf7c,"DERBY-4946: Derby 10.7 DatabaseMetaData.getTypeInfo() should not return BOOLEAN for a soft upgraded database


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1051026 13f79535-47bb-0310-9956-ffa450edef68"
3c295362cb5c4ffce4f664472bd771aa18c3901a,"DERBY-4947: Missing/broken synchronization in BasicDependencyManager.getDependents() 

Fixed unsynchronized access to a shared structure. The references to the
elements in the list are now copied to a new list.

Patch file: derby-4947-1a-sync_fix.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1051271 13f79535-47bb-0310-9956-ffa450edef68"
bf2e66112c053d9f43bf8d0ca4f113bfc367802c,"DERBY-4942: Describe how to run compatibility tests from JUnit in README


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1051493 13f79535-47bb-0310-9956-ffa450edef68"
6e97c842748cf6dc5b369d3ebbdd1d7455469226,"DERBY-4869: JDBC 4.1 spec clarification that addBatch(String) should fail on prepared and callable statements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1051890 13f79535-47bb-0310-9956-ffa450edef68"
f8fdd555ae1689db483adf6261a0495d575e083c,"DERBY-4869: JDBC 4.1: Add new getObject() overloads to ResultSet implementations.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1051937 13f79535-47bb-0310-9956-ffa450edef68"
b1920ad6660d068bb7f64e397a8ca1dfa948ab17,"DERBY-4869: Suppress compiler warning introduced by previous submission.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1051947 13f79535-47bb-0310-9956-ffa450edef68"
08904579c65f1bdf7395c4b04e6118222a053692,"DERBY-4869: Correct error messages returned by ResultSet.getObject(int,Class).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1052044 13f79535-47bb-0310-9956-ffa450edef68"
d5143c2baff9ed156152da7ea8e528daa3959958,"DERBY-4950: AccessControlException when running AssertFailureTest from Ant


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1052203 13f79535-47bb-0310-9956-ffa450edef68"
f6aa253360b56694eaa45c399bbc6c5f48a16c3a,"DERBY-4869: Simplify casting logic in getObject(int,Class).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1052268 13f79535-47bb-0310-9956-ffa450edef68"
e3fb83e84cfe66a99275723a1ee58b7247a11620,"DERBY-4869: Don't intercept all SQLExceptions in NetResultSet40.getObject(int,Class).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1052271 13f79535-47bb-0310-9956-ffa450edef68"
6ef238b89f9fa64a27971669687ff74bc230c10c,"DERBY-4949: Fix coercion error messages in network driver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1052350 13f79535-47bb-0310-9956-ffa450edef68"
000d4bcd79b792aae48781d7cfc432cd733459d8,"DERBY-4913 10.3 to 10.5 upgrade fails with ava.io.StreamCorruptedException: java.lang.ClassCastException: org.apache.derby.catalog.types.OldRoutineType incompatible with org.apache.derby.iapi.types.DataTypeDescriptor



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1053724 13f79535-47bb-0310-9956-ffa450edef68"
6b3020ce3a4c37fd7b96187047f853ca4f328773,"DERBY-4785 (partial) Remove JCC tests and references to JCC in test code

Remove JCC derbynetmats suite from derbyall.

Contributed by Jayaram Subramanian (rsjay1976 at gmail dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1054146 13f79535-47bb-0310-9956-ffa450edef68"
05070035d1fdfc56c97eafa90127151eba10f66d,"DERBY-4937: Enable explicit mode istat daemon code for UPDATE_STATISTICS

Use new/relocated code to serve UPDATE_STATISTICS (ALTER TABLE) requests.
The new code has been written to work similar to the old code, but it is
likely that there is at least one difference (timing of invalidation).
The calculation of the index cardinality statistics is unchanged.

Patch file: derby-4937-1b-explicit_update_stats.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1054588 13f79535-47bb-0310-9956-ffa450edef68"
04f8e9545d9ab868997a6f235f51eb3355b2b02e,"DERBY-4869: Add JDBC 4.1 overloads to CallableStatement.getObject().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1054706 13f79535-47bb-0310-9956-ffa450edef68"
14478629b8c4e36350d6ded23dc7a743bc5c843a,"DERBY-4951: Revamp tests of binary data types to fix string encoding problems.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1054734 13f79535-47bb-0310-9956-ffa450edef68"
c244a3154ecd7b6d393e4a036c926d1ee7905ff8,"DERBY-4869: Attempt to make test not sensitive to the local timezone.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1054746 13f79535-47bb-0310-9956-ffa450edef68"
4f2e50da6106c05ec90f2b317a33bddc0621346b,"DERBY-4869: Implement JDBC 4.1, the api increment introduced by Java 7

Calculate expected time and timestamp strings in a way that takes the
time zone into consideration.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1054933 13f79535-47bb-0310-9956-ffa450edef68"
7004c178a2638154efa236b6cec065b816d5f2dd,"DERBY-2739: Test format of numeric values returned by the XMLQUERY operator

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1054962 13f79535-47bb-0310-9956-ffa450edef68"
ccefce413b236f8cf893c6df337fb4ae26efded0,"DERBY-2739: Test XPath queries that return Infinity or NaN

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1054968 13f79535-47bb-0310-9956-ffa450edef68"
273e6aca3ae4fa9871dc963ff67b3b62bb0ffb05,"DERBY-2739: Test XPath function call prefixed with namespace

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1054991 13f79535-47bb-0310-9956-ffa450edef68"
911d88c46edfdcd38c2f52d0f6a7ed514b1d704d,"DERBY-2739: Stricter checks in XMLTypeAndOpsTest

Changed many assertStatementError() calls to assertCompileError().


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1055031 13f79535-47bb-0310-9956-ffa450edef68"
2133a292ae9f9484dc1edcb0043af84a08e0b6f0,"DERBY-4913 10.3 to 10.5 upgrade fails with ava.io.StreamCorruptedException: java.lang.ClassCastException: org.apache.derby.catalog.types.OldRoutineType incompatible with org.apache.derby.iapi.types.DataTypeDescriptor

Change test to check the actual 10.3.3.0 version for specifying the create attribute instead of just using an array offset.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1055169 13f79535-47bb-0310-9956-ffa450edef68"
ffac5c3de398cb6f0b407abd378675b6d7e39344,"DERBY-4958: Allow wrapper types as output args in the Java signatures of procedures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1055181 13f79535-47bb-0310-9956-ffa450edef68"
f1ec775bb904108b1ba041123dd26faea0b95a13,"DERBY-4959: All null LOBs as procedure output args.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1055676 13f79535-47bb-0310-9956-ffa450edef68"
16bb01f1b3322da09cdd5a1c1d5066dfc97b444d,"DERBY-4869: Make new getObject() overloads return null for null values; also, rework the getObject() methods to remove the SuppressWarnings annotation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1055872 13f79535-47bb-0310-9956-ffa450edef68"
70c969f31bf1578118aaa3d2eaa6444683b66d88,"DERBY-4713; Subclasses of ScriptTestCase can not run correctly with the non-English default locale
  committing patch derby-4713-2.
  patch contributed by Yun Lee (yun dot lee dot bj at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1055998 13f79535-47bb-0310-9956-ffa450edef68"
01a4f9bd8890e2288c089e821d6ac71edecdfd4b,"DERBY-4960 Race condition in FileContainer#allocCache when reopening RAFContainer after interrupt

Patch derby-4960-2. When reopening the container after an interrupt we
now call ""reopenContainer"" instead of
""openContainer"". ""reopenContainer"" is a (new) variant of
""openContainer"" which skips reading the header, which is ok, since it
has not changed. This sidesteps the race situation.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1056591 13f79535-47bb-0310-9956-ffa450edef68"
995d3ac99fb4ac01354141e126a76e4d2e4e6ebc,"DERBY-4874: TriggerTests should report why it cannot drop table

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1057542 13f79535-47bb-0310-9956-ffa450edef68"
a552fe6e32238f8752b2680235af1ea1eb4c98a9,"DERBY-4963 Revert to FileDescriptor#sync from FileChannel#force to improve interrupt resilience

Patch derby-4963-2 removes DirRandomAccessFile4 and with it the use of
FileChannel#force.  It also removes the metadata boolean argument (no
longer used) from the StorageRandomAccessFile#sync.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1057702 13f79535-47bb-0310-9956-ffa450edef68"
cbe857994b248a90e60caf579f0a91c2025bcb72,"DERBY-4741 Make Derby work reliably in the presence of thread interrupts

Followup to patch derby-4741-b-04-nio committed as svn 1038440:
changed the string internal exception string ""nospc.U"" to ""intrp.U"".



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1057733 13f79535-47bb-0310-9956-ffa450edef68"
c9528432fbe89366963707cad30c103c8b346fbc,"DERBY-4769 Handle interrupt received while waiting for database lock

(subtask of DERBY-4741): Patch derby-4967-locking-1 which lets Derby
throw CONN_INTERRUPT if an interrupt is received while waiting for a
database lock.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058245 13f79535-47bb-0310-9956-ffa450edef68"
62117120381e34952419e50fd2cb82fa34250504,"DERBY-4968 Let query stop execution if an interrupt is seen, at same time as we check the query timeout

(subtask of DERBY-4741): Patch derby-4968-1, which makes Derby throw
CONN_INTERRUPT if an interrupt has been seen when execution reaches
BasicNoPutResultSetImpl#checkCancellationFlag. The thread's interrupt
flag is also set.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058251 13f79535-47bb-0310-9956-ffa450edef68"
8fe03ce74a71f861ae8873ed82ffe6007b8a4655,"DERBY-4968 Let query stop execution if an interrupt is seen, at same time as we check the query timeout

Follow-up. Whitespace fix.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058342 13f79535-47bb-0310-9956-ffa450edef68"
245a922a489f3ef2861e48b67775eb8cd11094fe,"DERBY-4967 Handle interrupt received while waiting for database lock

Follow-up: white-space changes only - I accidentally introduced some
tabs and too long lines.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058345 13f79535-47bb-0310-9956-ffa450edef68"
2d8c0d3263e9efb055639f3310ba48fe1179c577,"DERBY-4963 Revert to FileDescriptor#sync from FileChannel#force to improve interrupt resilience

Follow-up: white-space changes only.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058346 13f79535-47bb-0310-9956-ffa450edef68"
4c5c16b66604d6885efb599ec36e659db64005af,"DERBY-4856 this is part three of thread dump and diagnostic information check in. With this check in, user can use derby.stream.error.extendedDiagSeverityLevel to turn on more tracing or turn it off. I am assuming in the code whether database is up or not based on the information. Also modify tests that affected by this fix.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058404 13f79535-47bb-0310-9956-ffa450edef68"
7b17fca524b35ca52ff9f0ac4e9aaa1932c94ce8,"DERBY-4856 fix building javadoc 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058421 13f79535-47bb-0310-9956-ffa450edef68"
0252fa4ff0ea90edb2d9984f1fd8dd12c2bd01c9,"DERBY-4970: ClassCastException from getBlob()/getClob() in EmbedCallableStatement


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058478 13f79535-47bb-0310-9956-ffa450edef68"
53389ca5ec702651d9f93b48928dbe982fe45c50,"DERBY-4869: Eliminate a try-catch block in the getObject(Class) overloads.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058554 13f79535-47bb-0310-9956-ffa450edef68"
6c42ee6d8e9b849c565bbfb8d9d3ee1371372311,"DERBY-4149; test failure in jdbcapi.InternationalConnectSimpleDSTest 
  - skipping the fixtures in InternationalConnectSimpleDSTest and 
    InternationalConnectTest on iseries.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058707 13f79535-47bb-0310-9956-ffa450edef68"
e4927d90fc98aa1dcc1121be28e69533f282dcc0,"DERBY-4856 Add comment to AuthenticationTest and wrap extendedDiagSeverityLevel property in SystemPropertyTestSetup instead of BaseSuite(). 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1058802 13f79535-47bb-0310-9956-ffa450edef68"
822ce3d8c773560ee029c9c18524b520754bc5cd,"DERBY-4856 At LockInterruptTest.runWaiter() line 150 with ps.executeUpdate, the test receive an interrupt and raise an error/exception ""ERROR 08000: Connection closed by unknown interrupt"". This is a session ending exception so set the property to avoid thread dump and diagnostic information.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1059026 13f79535-47bb-0310-9956-ffa450edef68"
a220692e0fb52dfb6699bdeaccb53babf2350558,"DERBY-4964: Client driver fails to convert string to boolean with setObject(col, str, Types.BIT)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1059888 13f79535-47bb-0310-9956-ffa450edef68"
795f705ed21e8e2ed5927d2b067349f60872f1ae,"DERBY-4869: Implementation of Connection.abort(Executor) for JDBC 4.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1060422 13f79535-47bb-0310-9956-ffa450edef68"
bb6e92575c2223b05429e88aca46cc9fca28b1cf,"DERBY-4874 - Trigger does not recognize new size of VARCHAR column expanded with ALTER TABLE. It fails with ERROR 22001: A truncation error was encountered trying to shrink VARCHAR

Putting the synchronization code in SPSDescriptor for getter and setter methods for the field ""text"" (this code is already in 10.6, 10.5, 10.4 and 10.3). Will put this code in 10.7 codeline next. This way, all the codelines from 10.3 through trunk will have the same synchronization code 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1060480 13f79535-47bb-0310-9956-ffa450edef68"
0a17859c0e47d78aefc1e35e61d2b8e541209988,"DERBY-4869: Add tests for Connection.abort(Executor): 1) no security manager, 2) security manager but no permission granted.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1060509 13f79535-47bb-0310-9956-ffa450edef68"
71e32dc4b8a47c31e2bdf59f8a16f6ef434225a9,"DERBY-4869: Hide some behavior in the physical connections which we don't want to be visible to applications.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1060535 13f79535-47bb-0310-9956-ffa450edef68"
f8cb3d70460dcdc1c12291a45892f836a830abe5,"DERBY-4869: Add tests for abort() on pooled and xa connections, and fix some bugs in the forwarding of the abort() call.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1060557 13f79535-47bb-0310-9956-ffa450edef68"
d79f538ef6766887225e857e7ebdd47d766f08cd,"DERBY-4869: Add xa and pooled connections to the tests of Connection.abort() with and without a SecurityManager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1060570 13f79535-47bb-0310-9956-ffa450edef68"
482ff80fd1f8379be7b5f3a5edb8058e4ef98a1a,"DERBY-4967 Handle interrupt received while waiting for database lock

Patch derby-4967-locking-4 which makes the existing test
LockInterruptTest assert that the interrupt flag is set when we see
08000 (CONN_INTERRUPT) - in accordance with the behavior we expect
after DERBY-4741. The assert is skipped on Solaris/Sun Java <= 1.6
unless the flag -XX:-UseVMInterruptibleIO is used.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1060832 13f79535-47bb-0310-9956-ffa450edef68"
5d9742250f70ec93331188b37ed163babadefd2d,"DERBY-4741 Make Derby work reliably in the presence of thread interrupts

Patch derby-4741-sleeps-waits-3, which modifies all actions when
seeing interrupt in Object#wait and Thread#sleep inside
""org.apache.derby.impl.store.*"" as well as in one other instance.

Thew new code just makes a note that an interrupt occured and then
retry. The old code sometimes threw 08000 (CONN_INTERRUPT) or just
ignored the interrupts.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1061516 13f79535-47bb-0310-9956-ffa450edef68"
4fe59424a98b3bef516f35df8974ba9c95b27002,"DERBY-4656; eclipse ui/doc plugin 1.1.2 was built with 1.6 jvm, results in ""The
chosen operation is not currently available"" on Add Derby Nature with 1.5 jvms.
  bump the version number and change the build instructions for producing 
  the ui/doc plugin.
  merge command: svn -c merge 1061570 https://svn.apache.org/repos/asf/db/derby/code/branches/10.7



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1061576 13f79535-47bb-0310-9956-ffa450edef68"
f4f6ca5d0c1af98008a01b6e4463d99dae2090b8,"DERBY-4979; build.properties in plugins/eclipse/org.apache.derby.ui refers to non-existend file install_plugin.html
  remove the reference

  merge command: svn -c merge 1061578 https://svn.apache.org/repos/asf/db/derby/code/branches/10.7


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1061580 13f79535-47bb-0310-9956-ffa450edef68"
de8ba180705fc5e3009742df8b261bfc74c39276,"DERBY-4869: Implement Statement.closeOnCompletion(), new in JDBC 4.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1061824 13f79535-47bb-0310-9956-ffa450edef68"
821bc13091ed7b240bb68550b9290ac9e9f090c7,"DERBY-4869: Wire network ResultSet for generated keys into the machinery for Statement.closeOnCompletion().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1061977 13f79535-47bb-0310-9956-ffa450edef68"
391d4a650ff511c28c1e282ed3089861d166fac9,"DERBY-4974 InterruptResilienceTest fails on Solaris with Sun VMs prior to 1.6

Patch DERBY-4974, which:

a) skips the tests in InterruptResilienceTest if running with
interruptible IO on Solaris

b) improves the check for interruptible IO to work even if
system/derby.log doesn't yet exist (which would be the case if the
test is run stand-alone).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1061988 13f79535-47bb-0310-9956-ffa450edef68"
d1ba0d0ccecf0bc622c38811a7c53b7dfb96397f,"DERBY-4973 NullPointerException in updatelocks.sql encryption tests on IBM 1.6

Change Xact.getContextId() to just read xc value once to avoid possible NPE with lock table query.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1062096 13f79535-47bb-0310-9956-ffa450edef68"
d326b7dda2bd5ca93c7407da944b1e18ff85c61b,"DERBY-4965: Boolean to char conversion results in integer

Made JDBC level conversion from boolean to character types result in
""true"" and ""false"" instead of ""1"" and ""0"".


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1062743 13f79535-47bb-0310-9956-ffa450edef68"
7f1559df57e6483787edb16547664f2bdf034c14,"DERBY-4869: Check in a test case verifying a JDBC 4.1 spec clarification: an exception should be raised if a PreparedStatement or CallableStatement is used to compile SQL text.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1062822 13f79535-47bb-0310-9956-ffa450edef68"
8e4ceb175b74d4e780c287eac956fdbda88455b2,"Correct header of SetQueryTimeoutTest to reflect the actual package that the test lives in.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1062865 13f79535-47bb-0310-9956-ffa450edef68"
4eb3fedd12684708431c241693ba7d69b93e948e,"DERBY-4869: Wrap query timeout SQLState in a SQLTimeoutException per the JDBC 4.1 spec clarification.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063295 13f79535-47bb-0310-9956-ffa450edef68"
790d93cbbaae9d2beb8cd29adcb072203d409f0f,"DERBY-4983: Disable JDBC 4.1 test on phoneME.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063309 13f79535-47bb-0310-9956-ffa450edef68"
9533ca1a0547fc224592e07688ae8ae13bf39701,"DERBY-4965: Boolean to char conversion results in integer

- Remove reference to non-existent document and improve comments

- Reduce number of calls to String.trim() in getBooleanFromString()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063656 13f79535-47bb-0310-9956-ffa450edef68"
18378229743c18054806f80258b9120a76c78ba9,"DERBY-4869: Add Connection.getSchema() and setSchema() per JDBC 4.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063723 13f79535-47bb-0310-9956-ffa450edef68"
414ba6f7bb526105a2fc6863f46d05884d782869,"DERBY-4985 BootLockTest can fail with ERROR XCY03: Required property 'derby.serviceProtocol' has not been set with slow configurations

Use file created by BootLockMinion to coordinate the processes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063809 13f79535-47bb-0310-9956-ffa450edef68"
e749e124646edd3287988e7d28cb82aa07c7af6c,"DERBY-4869: Add exception-raising stubs for Connection.get/setNetworkTimeout(), new methods introduced by JDBC 4.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063822 13f79535-47bb-0310-9956-ffa450edef68"
79bf1a8093be3865c7b6fba2f07f3a38a16901bf,"DERBY-4869: Don't bother trying to change the current schema if the old schema is the same as the new one.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063831 13f79535-47bb-0310-9956-ffa450edef68"
3c41a444788aaa0bf3f33a921ceed843ee4eb34e,"No Jira Update JiraConnector all to use https instead of http  as needed. I didn't check the other urls in the file.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063918 13f79535-47bb-0310-9956-ffa450edef68"
dede9bfc71a2bffb9256df392c7b89228f5d58ca,"DERBY-4982 Retrying after interrupts in store pops a bug in derbyall/storeall/storeunit/T_RawStoreFactory in some cases

Patch derby-4982c. Makes the sane and insane behavior of double patch attempt detection the same: throw DATA_DOUBLE_LATCH_INTERNAL_ERROR.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063960 13f79535-47bb-0310-9956-ffa450edef68"
45cb2dfc918b31b3dbb7809e0abbac7d5f9b063b,"DERBY-2905 Shutting down embedded Derby will remove AutoloadedDriver. The AutoloadedDriver is not left registered in the DriverManager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1063996 13f79535-47bb-0310-9956-ffa450edef68"
616c0d01b9a59f2c0b42da11e2c74420685c5e3a,"DERBY-4741 Make Derby work reliably in the presence of thread interrupts

Patch derby-4741-raf-stresstest-4. This patch adds a new test fixture to
InterruptResilienceTest: multi-threaded read/write test under an interrupt
shower.  This exercises primarily the random access file recovery
(RAFContainer4#recoverContainerAfterInterrupt), but since the interrupt can
arrive at any time during query execution, higher levels of the embedded code
are also exposed (jdbc, language, store).

The new test case is InterruptResilienceTest#testRAFReadWriteMultipleThreads.

I also found I had to add Class.forName(<driver>) to
DriverManagerConnector#getConnectionByAttributes and a new public method
BasicJDBCTestCase#openDefaultConnection(TestConfiguration). The latter makes it
possible use the main thread's test configuration in the server threads (when
runnin the test in client-server mode), cf. ""thisConfig"" member in
InterruptResilienceTest.

The test now runs in its own database, with derby.system.durability=test for
speed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1064174 13f79535-47bb-0310-9956-ffa450edef68"
226afe36896f9a3ea8acf6e3b39fcfa74ed7e2f8,"DERBY-4869: Attempt to reduce instability in StatementTest.test_jdbc4_1_queryTimeoutException().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1064281 13f79535-47bb-0310-9956-ffa450edef68"
0828e2d79f26e6fe4d7777951d1f21400e17246c,"Fix javadoc warning which may have choked Hudson build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1064306 13f79535-47bb-0310-9956-ffa450edef68"
64a963db8fc8ef92c9833894cde1befb0b4b400e,"DERBY-4741 Make Derby work reliably in the presence of thread interrupts

Follow-up patch  to derby-4741-raf-stresstest-4: Javadoc bug fixed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1064321 13f79535-47bb-0310-9956-ffa450edef68"
81ee7008febd3782e4b7044cc47ccbdc0c7e56a5,"DERBY-4869: Add JDBC 4.1 changes to DatabaseMetaData.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1064868 13f79535-47bb-0310-9956-ffa450edef68"
6f889e0bc1e9d27346a13eaa5f5fd5f973ef9a7c,"Added a link to Wiki ""Testing Apache Derby"" to testing/README.html. Hopefully this can
let people find it easier when they start with the code checkout.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1064891 13f79535-47bb-0310-9956-ffa450edef68"
e9f4ad9a0e0ff52b1d8fa9caad96aa602caa6f06,"DERBY-4987 BootLockTest can hang reading spawned process output

The test will now only attempt to get the error output if BootLockMinion has exited and also has a max timeout of ten minutes which won't slow down normal runs of the test but hopefully be long enough without risk of hanging again. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1065061 13f79535-47bb-0310-9956-ffa450edef68"
5cb4c04dd156a1182090650afb47cc817cca6aa8,"DERBY-4869: Hook up implicitly closed ResultSets to the Statement.closeOnCompletion() logic.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1066127 13f79535-47bb-0310-9956-ffa450edef68"
bf68919bacc065a5b0d272da9632fc0e37fc7593,"DERBY-4992 Release notes should specify which Java version is needed to run Derby

Updated releaseSummary with this info, plus I changed J2ME to the up-to-date ""Java ME"".


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1066204 13f79535-47bb-0310-9956-ffa450edef68"
69dbd137de0e29b6046961a5f2f8ddad5e84c5aa,"DERBY-4988 ALTER TABLE DROP COLUMN should make use of information in SYSTRIGGERS to detect column used through REFERENCING clause to find trigger dependencies

Derby at the time of ALTER TABLE DROP COLUMN looks for trigger dependencies by looking for column being dropped in trigger column list but that is not enough. SQL standard requires that column should not be part of explicit trigger column list or a triggered action column set. 

starting Derby 10.7, we have started keeping track of trigger action columns which are referenced through the REFERENCING clause. This commit will make use of that additional info to make a step forward towards meeting the SQL standards. It still does not recognize the trigger action columns that are not part of REFERENCING clause. That work can go separately.

I have added upgrade test to make sure that the compatibility does not break between Derby releases prior to 10.7 and forward.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1066290 13f79535-47bb-0310-9956-ffa450edef68"
3abf75fdf9344247c754e68fe91ab3b935e1de3c,"DERBY-4741 Make embedded Derby work reliably in the presence of thread interrupts

Patch derby-4741-testQueryInterrupt. 

* adds a new test case: InterruptResilienceTest#testLongQueryInterrupt
  which tests that a query will check for the interrupt flag and throw
  08000 (CONN_INTERRUPT) at the same time is checks for query
  time-out.

* adds a missing piece of code in InterruptStatus#throwIf

* I also adjusted an existing test (for RAF recovery) to handle the
  case that we could see 08000 (CONN_INTERRUPT) when performing a
  query as part of that test, depending on when the interrupt happens.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1066701 13f79535-47bb-0310-9956-ffa450edef68"
2c09e2c0d38b28bf2501cc0e55d421a182354bbc,"DERBY-4741 Make embedded Derby work reliably in the presence of thread interrupts

Patch derby-4741-testBatchInterrupt-b:

It tests that an interrupt will stop a batch of statements by throwing
08000 just before we execute the next statement in the batch.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1066707 13f79535-47bb-0310-9956-ffa450edef68"
7711d18ed42888c44b812515f01bd3a7ceda1755,"DERBY-5001 Intermittent bug in InterruptResilienceTest

Fix to allow for lock interrupts during writing in the MT RAF test fixture.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1066911 13f79535-47bb-0310-9956-ffa450edef68"
22db8062fedf4213cc1c2f1e1e5675df31591726,"DERBY-4997 SysinfoTest version output filtering is fragile with new java versions



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1067250 13f79535-47bb-0310-9956-ffa450edef68"
cf3b595e80e94c90c2f77209e58287c97073ced0,"DERBY-5002 In case of checksum error, insure correct error reported to user.

Changed the order of sanity page checking to make sure that if there is a
checksum error on reading the page from disk, then it is the error reported.
Before this change certain page inconsistencies would be found before doing
the checksum check and would report different kinds of errors depending on
where the corruption happened on the page.  The main error case checksums
try to catch is partially written page where because a derby page is made up
of multiple OS/drive blocks some blocks can make it to disk before others and
in the case of a hardware crash an incomplete page may be written.  In this
case, the current derby implementation can not recover from log as it needs
a valid page to look at in order to apply log records.  The db must be 
recovered from derby backup in this case.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1067357 13f79535-47bb-0310-9956-ffa450edef68"
63d8c85eb69f87f4bffc747ada78a5a6d8b11297,"DERBY-4980 Replication tests lose derby.log for slave

Patch derby-4980-1 which fixes this. 

The error is that when starting the Derby server for the slave, the
same path name is used for the slave server's working directory as for
the master server (""db_master""). This means that the slave server
doesn't get its own log file.

The patch sets the working directory for the slave correctly to the
""db_slave"" directory.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1067366 13f79535-47bb-0310-9956-ffa450edef68"
09869c6d70bdbc034ebfa730e890fe8c47fb1408,"DERBY-4869: Add JDBC 4.1 getParentLogger() method to Derby's implementations of Driver and CommonDataSource.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1067954 13f79535-47bb-0310-9956-ffa450edef68"
cb8f861a4d3a521912d412fdb9eae846020a9395,"DERBY-4869: Always raise SQLFeatureNotSupportedException when Connection.get/setNetworkTimeout() is called.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1067991 13f79535-47bb-0310-9956-ffa450edef68"
20bc4615e0ba5b7b835f0940b3a03f806019076c,"DERBY-4869: Attempt to fix problem in tinderbox tests introduced by a previous commit today.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068073 13f79535-47bb-0310-9956-ffa450edef68"
0549e41253eb13004d51e5d41de0913369b5670c,"DERBY-5008: fix npe in error condition

Fix contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068302 13f79535-47bb-0310-9956-ffa450edef68"
f2e2aea8388dcb63173d6ea34bf4b98e8dd18ff5,"DERBY-5013: remove dead allocation

Patch contributed by Dave Brosius <dbrosius@apache.org>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068305 13f79535-47bb-0310-9956-ffa450edef68"
3330126892a4e6fdda71c3ebabff3bb761d73d09,"DERBY-4869: Load the JDBC 4.0 exception factory when initializing the 4.0 autoloaded driver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068451 13f79535-47bb-0310-9956-ffa450edef68"
9c8b7175aab2657a148d34e437206badf7d59549,"DERBY-4869: Uncomment the signature-matching tests on Java 7 now that all of the JDBC 4.1 methods have been added.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068489 13f79535-47bb-0310-9956-ffa450edef68"
62a70825b3e1df3ed49eb22ef855a86a01672efe,"DERBY-4869: Make AutoloadTest aware of the new driver classes introduced by the getParentLogger() work.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068524 13f79535-47bb-0310-9956-ffa450edef68"
4421f9bdc85e03567cdaba9b6f853a9fcbcc019b,"DERBY-5009: Commit Dave Brosius' patch which fixes an error in normalizing the release notes for publication on the website.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068528 13f79535-47bb-0310-9956-ffa450edef68"
336d45d64d6cc48e63dd8f60998fe792d50ae44a,"DERBY-5011 Client driver lexer to determine statement type: fix bad attempt at incrementing a variable

Patch fix_bad_increment_dhw. Contributed by Dave Brosius,dbrosius at apache dot org


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068702 13f79535-47bb-0310-9956-ffa450edef68"
3f4ebad6b6ef42c6f21c287934eb26139541b383,"DERBY-5012: bad allocation guard in ResultSet#resetUpdatedColumnsForInsert

Reworked fix based on patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068772 13f79535-47bb-0310-9956-ffa450edef68"
57af2a5585cdfd874b9e00f900c93bac8f77368c,"DERBY-2905 Check-in deregister attribute option with shutdown. After shutdown and reloading the engine via Class.forName(...).newInstance(), AutoloadedDriver will get registered to DriverManager even if AutoloadedDriver40 was the original driver.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1068842 13f79535-47bb-0310-9956-ffa450edef68"
b451cabe43ecae553c12528589a5a5638e7b8f50,"DERBY-4869: Second attempt to remove the instability in StatementTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069070 13f79535-47bb-0310-9956-ffa450edef68"
47eac7d4070efbabf9c8cfa135f614f317a52111,"DERBY-4938: Implement istat scheduling/triggering 

Added logic to automatically schedule creation and updates of index cardinality
statistics when compiling prepared statements.
See the parent issue and linked issues for more details.

Patch file: derby-4938-1a-istat_scheduling.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069160 13f79535-47bb-0310-9956-ffa450edef68"
c3bf8e5b1906194c6fa8e8ce9c4196e3df13198d,"DERBY-5015: Use Arrays.fill() in client/am/ResultSet.java



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069354 13f79535-47bb-0310-9956-ffa450edef68"
127d92a7e8e19b342f7b457d0c306ecb385c5afb,"DERBY-4939: Enable istat daemon and tests

Enabled the automatic creation and scheduling of index cardinality statistics
when compiling prepared statements.

NOTE: To disable the feature, use 'derby.storage.indexStats.auto=false'.

Patch file: derby-4939-1a-enable_istat.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069598 13f79535-47bb-0310-9956-ffa450edef68"
74d048808378b35f57f5611464ff8212e805ef59,"DERBY-5005 Error when fully qualifying a field from a view in an ORDER BY clause

Patch derby-5005b. It makes FromSubquery implement its own
getFromTableByName instead of using the abstract superclass
FromTable's implementation which returns null when an explicit schema
is used (a view is represented a FromSubquery here), cf. the comment
in the default implementation:

""Only FromBaseTables have schema names""

which isn't quite true; views can have them, too.

Added a new test, lang.Derby5005Test instead of adding to the harness
test orderby.sql. Made a note in orderby.sql to merge with
Derby5005Test when that test gets rewritten to JUnit.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069661 13f79535-47bb-0310-9956-ffa450edef68"
44406a57bdd601a63679f319193ceb61542e1ebe,"DERBY-5019: quiet the ant build with 1.8.1+

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069717 13f79535-47bb-0310-9956-ffa450edef68"
c50ba59ab201d5772675ee0d1393ae96f49e58e1,"DERBY-5020: remove redundant finalizer methods

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069760 13f79535-47bb-0310-9956-ffa450edef68"
c287c8c349595433c0c85a61185853b8ff1bf416,"DERBY-5025: Disable the automatic calculation of statistics when running UpdateStatisticsTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069890 13f79535-47bb-0310-9956-ffa450edef68"
aaa66cfa84c91bf95cf9bd7c7adccc450f494149,"DERBY-4837: Prepare lang.UpdateStatisticsTest for automatic index statistics generation

Removed TODO/comment, since the relevant code will still be run also when
the automatic index statistics update feature is disabled. 

Patch file: derby-4837-3a-remove_todo.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069910 13f79535-47bb-0310-9956-ffa450edef68"
c341df0387cdb77470c32e3016862c246c75dc56,"DERBY-5029, DERBY-2095 getParentLogger() won't work after the engine has been shut down onece. Change comments and AutoloadTest per Dag's comments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1069981 13f79535-47bb-0310-9956-ffa450edef68"
65014c58714a477d620a3d1e9ef4cebd48566563,"DERBY-5022 : override equals correctly

Fix for the .equals() override

Patch contributed by Dave Brosius <dbrosius@apache.org>



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1070190 13f79535-47bb-0310-9956-ffa450edef68"
6fecb8bc171adb54493368e70b6ae9956ba6f594,"DERBY-5023: Cannot find Ant libraries when building from NetBeans

Use the ant.core.lib property instead of ant.library.dir, which isn't
guaranteed to be defined when Ant is invoked by an IDE.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1070501 13f79535-47bb-0310-9956-ffa450edef68"
48aecee693c74d4828d7960d2721f373f1e5a980,"DERBY-4869: Another attempt to reduce the timeout-related instability in StatementTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1070504 13f79535-47bb-0310-9956-ffa450edef68"
086b75e9c7be3a2e11803ae43d5c7fb313a0d820,"DERBY-5036: fix impossible comparison due to sign extension

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1070676 13f79535-47bb-0310-9956-ffa450edef68"
b3e9947cebae081b56a1a350affc51872a1d065e,"DERBY-5033: System.arraycopy, being native, is more performant

Fix based on patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1070677 13f79535-47bb-0310-9956-ffa450edef68"
20cc8ad08e3e6e047f1114dca61ff8d88b95b404,"DERBY-642: SELECT MAX doesn't use indices optimally

First attempt on a B-tree max scan that walks backwards. Includes some
test cases that test latch conflicts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071171 13f79535-47bb-0310-9956-ffa450edef68"
ccdcb3de01caf026809ffe5043bd991b107a15c0,"DERBY-5037: Swallow exceptions encountered by the istat thread while the database is being shutdown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071310 13f79535-47bb-0310-9956-ffa450edef68"
9005656dbeb892036cb229ad5753acb6668bb9fb,"DERBY-5034: bad field masking makes non functional rowsInput evaluation

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071313 13f79535-47bb-0310-9956-ffa450edef68"
de92dd83921479e1eca1ca8abae20d06b875b3cb,"DERBY-5032: derived InternalXact attempts (and fails) to override a method from base

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071314 13f79535-47bb-0310-9956-ffa450edef68"
2349a90c1a120d0cfa59aa7bc72533df9382eefe,"DERBY-5018: remove erroneous throws clauses on non derivable methods that don't throw

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071318 13f79535-47bb-0310-9956-ffa450edef68"
c7a1d17d6e20d49035ca9ee0c59e5badb1a22345,"DERBY-5017: push code assignments down to where they are used

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071320 13f79535-47bb-0310-9956-ffa450edef68"
5f1932e41860efe61edd45f3858db690241d22f6,"DERBY-5046: Intermittent assert failure in AutomaticIndexStatisticsTest.testStatisticsCorrectness

Relaxed assert on timestamps to allow identical timestamps, but still
disallows stats with a creation timestamp into the future.

Patch file: derby-5046-1a-relax_assert.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071348 13f79535-47bb-0310-9956-ffa450edef68"
528ac254612ed343624f713d57f903df1ea23b20,"DERBY-4984 ALTER TABLE DROP COLUMN may leave triggers invalid even if they are not using the column getting dropped.

With this change, now ALTER TABLE DROP COLUMN will be able to detect the triggers defined on the table which use the columns in it's trigger action. Prior to this, Derby only detected the triggers using the column being dropped in the trigger columns list. In 10.7 and higher, Derby could also detect the triggers using the column being dropped in the trigger action through the REFERENCING clause. With this commit, even the older releases of Derby (prior to 10.7) will be able to detect the triggers using the column being dropped in the trigger action through the REFERENCING clause.

Derby will also be able to fix the internal representation of the trigger action sql which has column references through REFERENCING clause. Such references get converted to reference to the column by their column positions. Drop of a column can change the positions of the columns in the table and hence that can invalidate triggers if they are using the incorrect column numbers in the internal trigger action representation. That problem will be taken care of by regenerating the internal representation of trigger action sql and rebinding that internally generated form of trigger action sql.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071463 13f79535-47bb-0310-9956-ffa450edef68"
f24f53cb0d445efb65b4a577d12368124373b93e,"DERBY-4463; JMX test in nightly test suite failed with: JMXTest:clientjava.lang.InterruptedException
DERBY-5028; InterruptResilienceTest passes with IBM 1.6 SR9 but creates javacore dumps
  Adjusted the skipping of this test with ibm jvms to only skip with 1.5;
  Added setting of derby.stream.error.extendedDiagSeverityLevel to 50000 to
  prevent unnecessary javacore dump files. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071545 13f79535-47bb-0310-9956-ffa450edef68"
b16f770513c9e538f0a8bcf750b061a29816e5bb,"DERBY-5050: BrokeredConnection could call setHoldability() without using reflection


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071558 13f79535-47bb-0310-9956-ffa450edef68"
ea77f09d1f36e3c8cdc84537f2aad10f5a784c2d,"DERBY-4940: Tune istat operational characteristics
DERBY-5038: updatelocks test failing in tinderbox when background update statistics are enabled.

Changed the default absdiff threshold from zero to 1000, as the current setting
causes the automatic index statistics update feature to be too aggressive.
It also causes a set of regression tests to fail (not all of them fails
always).
The ""diff mechanism"" may be replaced later, for instance with a plain lower
limit on the number of rows in the table, discussion is ongoing.

Patch file: derby-4940-1a-absdiff_to_1k.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071588 13f79535-47bb-0310-9956-ffa450edef68"
75bf63db8caf1d9f55585f7cfcbf21fab91daf4e,"DERBY-4463; JMX test in nightly test suite failed with: JMXTest:clientjava.lang.InterruptedException
  Causing the LockInterruptTest to be skipped with ibm 1.5 jvm unil SR13 is
  available; this test caused a jvm bug in the handling of waitFor() to pop up.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071640 13f79535-47bb-0310-9956-ffa450edef68"
064cc93002f41875dc13f81efe60363471889ae5,"DERBY-4463; JMX test in nightly test suite failed with: JMXTest:clientjava.lang.InterruptedException
  Adjusting code to only skip for ibm 1.5 jvm, rather than all non-sun 1.5 jvms.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071754 13f79535-47bb-0310-9956-ffa450edef68"
c2c2fb811b8ba67e30740774c4947fd62e249f04,"DERBY-5040: On Windows, cascade of errors after failed test AutomaticIndexStatisticsTest

Rewrote failing test (deleting the database directory fails) to use a separate
database instead of the default db wombat. This should eliminate the cascade
of errors.

Patch file: derby-5040-1a-use_separate_db.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071783 13f79535-47bb-0310-9956-ffa450edef68"
2e1d391a9bc8e3c2c2653490a5305ebaf2380370,"Derby DERBY-4853 log derby.properties location and derby.log location to derby.log

With this change,we will log additional information in derby.log to make it easier for the support group to work with customer problems.

Following 2 additional properties will now always be put in derby.log (every time a database is booted) 
user.dir 
derby.system.home 

user.dir is the system property which gives the user working directory. 

If the user has not specified derby,system.home, then Derby will look for optional derby.properties file in user.dir . If user has provided derby.system.home, then the optional derby.properties will be looked in derby.system.home rather than user.dir 

If user has not provided derby.system.home, then a sample of the 2 properties on derby.log looks as follows on my machine 
user.dir=C:\p4clients\svnmain\client2\trunk\systest\out142 
derby.system.home=null 

If user has set derby.system.home to c:./temp, then a sample of the 2 properties on derby.log looks as follows on my machine 
user.dir=C:\p4clients\svnmain\client2\trunk\systest\out142 
derby.system.home=c:/temp 

In addition to the above 2 properties, there can be following 3 optional properties in the log (following the 2 properties mentioned above) 
derby.stream.error.file 
derby.stream.error.method 
derby.stream.error.field 

The above 3 properties provide a way to alter where error messages get logged rather than tranditional derby.log file. In the absence of the above 3 optional properties, the location of derby.log follows the same logic as derby.properties. But if the user has set any or all of the 3 optional properties, then derby.log will not be in same location as derby.properties. In the Derby code, derby.stream.error.file takes precedence over the other 2 properties and derby.stream.error.method take precedence over the last property. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1071886 13f79535-47bb-0310-9956-ffa450edef68"
92a1ccad096887942ebfe8a0252d1da2c60c76f0,"DERBY-5052: Bad name collision causes non functional method

Removed a buggy and unused constructor from ijMultipleResultSetResult.

Based on patch contributed by Dave Brosius <dbrosius@apache.org>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1072148 13f79535-47bb-0310-9956-ffa450edef68"
eb7e25158b17af5ca798044550bcf6ab17597485,"DERBY-5053 reduce superfluous boxing histrionics

Patch contributed by Dave Brosius <dbrosius@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1072457 13f79535-47bb-0310-9956-ffa450edef68"
56a7b394dc82a9d1083dc492e5b751238f3c24d6,"DERBY-5055 add visibility to static method calls

Patch contributed by Dave Brosius <dbrosius@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1072817 13f79535-47bb-0310-9956-ffa450edef68"
6af5d7987ea7e17bdd409165d40ad8a21ec70f21,"no jira - updating comments re junit conversions in LangHarnessJavaTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1073022 13f79535-47bb-0310-9956-ffa450edef68"
bca810835913ecc2fd707941d7da26390b33702c,"DERBY-2300; convert test lang/streams.java to JUnit
  adjusting name of file in header


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1073031 13f79535-47bb-0310-9956-ffa450edef68"
8e6e96f89966fc8f3e1f3d0d6dd33be28df8b1f7,"DERBY-5063: Embedded driver allows updateBytes() on BOOLEAN column

Make embedded driver throw same exception as the client driver when
updateBytes() is executed on a BOOLEAN column.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1073287 13f79535-47bb-0310-9956-ffa450edef68"
a32eb9f3504d2d26c1770411efb8e7610e457c1d,"DERBY-5060: use collection apis

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1073375 13f79535-47bb-0310-9956-ffa450edef68"
9da08da48675edbe7752e4bd47c1b2c56d4a14a7,"DERBY-5054 code causes npe in an exception case

Patch contributed by Dave Brosius <dbrosius@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1073380 13f79535-47bb-0310-9956-ffa450edef68"
ec9d167b38ea7e32a8be6abf125eeb4e8e2ceab0,"DERBY-4741 Make embedded Derby work reliably in the presence of thread interrupts

Patch derby-4741-sleeps-waits-more, which ""regularizes"" a few more
instances of interrrupt handling to follow the idiom established in
this issue's patches. 

This leaves a few instances in BasicDaemon.java (as far as embedded
code is concerned), which will need more consideration. In any case,
interrupting the demon threads is less of a valid use case I believe,
i.e. Derby's ability to tolerate that is less crucial that tolerating
interrupts to the user's connection threads.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1073595 13f79535-47bb-0310-9956-ffa450edef68"
8add35b2f30084651187bbc19a1a25bdea861e0b,"DERBY-4741 Make embedded Derby work reliably in the presence of thread interrupts

Backing out a chnage which breaks the build in some circumstances
until we figure out how to change the build to accommodate it.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1073846 13f79535-47bb-0310-9956-ffa450edef68"
52837960867109e470503451b51914f073a632c9,"DERBY-2739: Use DOM interfaces to implement XML operators

Make SqlXmlUtil use JAXP and DOM interfaces and factory classes to
provide support for XML serialization and XPath queries.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1073874 13f79535-47bb-0310-9956-ffa450edef68"
74f00971311613789d0b16375d3bc234da5de422,"DERBY-5042: ResultSet.updateBoolean() on new BOOLEAN type throws exception


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1074127 13f79535-47bb-0310-9956-ffa450edef68"
9d9c1422a0cc5b3c81830c7500484d31cd7b8e24,"DERBY-642: SELECT MAX doesn't use indices optimally

Added test case to verify that serializable transactions will discover
that a new row with a higher value was inserted while the scan was
waiting for a lock.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1074196 13f79535-47bb-0310-9956-ffa450edef68"
39244bff129089153469c0cead9e4ba70a3487a3,"DERBY-5062 push code assignments down to where they are used

Patch contributed by Dave Brosius <dbrosius@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1074227 13f79535-47bb-0310-9956-ffa450edef68"
167094b161a7198eccec6dd0d8a77c8db66bed60,"DERBY-5067: Performance regression tests should populate tables before creating indexes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1074449 13f79535-47bb-0310-9956-ffa450edef68"
d1a4768b36cea6959e906b5d140832e0daf39bf1,"DERBY-5069 Since Feb 7,2011 weme 6.2 Junit tests have failed to run completely with Failed to invoke suite():java.lang.reflect.InvocationTargetException

Prevent Driver tests from running under J2ME which were preventing suites.All from running. The problem was introduced with revision 1067954 with some additions to DriverTest. It is not really clear when  JDBC.vmSupportsJSR169() needs to be called in the the individual test vs the suite calling the test.  In order to get the tests running again, this change moves the DriverTest check for JSR169 to the suite.  Also added stack traces to the output when an invocation error occurs to make it easier to track down.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1074762 13f79535-47bb-0310-9956-ffa450edef68"
f36ac7929d63af51812dec0ecbf629feb264a13e,"DERBY-4741 Make embedded Derby work reliably in the presence of thread interrupts

Patch derby-4741-fix-compilation, which reintroduces the change that
was backed out in svn 1073846, along with build changes, to avoid the
issue we had with it.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1074789 13f79535-47bb-0310-9956-ffa450edef68"
e47817ab547444f7e4ce21b946a80634f60e01b9,"DERBY-642: SELECT MAX doesn't use indices optimally

In the case of a WaitError, wait until the latch on the left sibling
has been released before repositioning. If the repositioning happens
earlier, it will just hit the same WaitError and the work will be
wasted.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1075248 13f79535-47bb-0310-9956-ffa450edef68"
20d7a867a8672447457e61c1661cb1ee58ed60ab,"DERBY-2739: Use DOM interfaces to implement XML operators

Remove the jar files xalan.jar, xercesImpl.jar and serializer.jar
since they are no longer required for building Derby, and remove the
references to them in the build scripts and in the build instructions.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1075360 13f79535-47bb-0310-9956-ffa450edef68"
9b3775bc671c7d1e08e0c5d1768f78577df94e5e,"DERBY-5070 reduce superfluous boxing histrionics
Keep the comment in CreateIndexNode.bindStatement() about variable dd

Patch contributed by Dave Brosius <dbrosius@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1075378 13f79535-47bb-0310-9956-ffa450edef68"
321247dc1584cde32be9d084a3dcea6b181c721f,"DERBY-5016: First draft of release notes for Derby 10.8.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1075522 13f79535-47bb-0310-9956-ffa450edef68"
a9c38636f17ee7a44e44cc41b162808d2741ce50,"DERBY-5071 use string buffers when building strings in loops

Patch contributed by Dave Brosius <dbrosius@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1075568 13f79535-47bb-0310-9956-ffa450edef68"
64bc46b3a1d70996a127313c6dbeea218f8818a7,"DERBY-5076: Remove some unnecessary casts in ExceptionFormatter

Based on patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1075842 13f79535-47bb-0310-9956-ffa450edef68"
3b65355a711416c7aa5d048f5eb365d20d8f5ebc,"DERBY-5078: Incorrect list of compatible JRE versions in client trace


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1075843 13f79535-47bb-0310-9956-ffa450edef68"
39e550281b98b1e7747fb4eebc242cb3ee948b10,"DERBY-5016: Second rev of release notes for 10.8.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1075983 13f79535-47bb-0310-9956-ffa450edef68"
ac13b31796a11adfebf3e9849819f25f610c4e51,"DERBY-5080: Utilize JQL to fetch JIRA issue list for release notes generation

Updated the service description to match JIRA 4.2.

Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076016 13f79535-47bb-0310-9956-ffa450edef68"
198f9bb09266f5a097dc467009d56091331cb514,"DERBY-5074 test failure(s) with IBM 1.4.2 in store.InterruptResilienceTest.testRAFWriteInterrupted: java.sql.SQLException: The exception 'junit.framework.AssertionFailedError: interrupt flag lost' was thrown while evaluating an expression.

Patch fix-retry-counting: if we get interrupted reading or writing, we
must retry. The current logic didn't account for this correctly. so
one could end up reading/or writing too few rows and get an assert
failure.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076117 13f79535-47bb-0310-9956-ffa450edef68"
ba553fa0d8c47f533d8b589cbd311084b392e6b1,"DERBY-4915: test failure in OSReadOnlyTest in assertDirectoryDeleted

Make BaseJDBCTestCase.assertDirectoryDeleted retry up to three times before
giving up and raising an assert failure.
Make DropDatabaseSetup.removeDir use the above mentioned method, since it is
also failing to delete files on Windows.

Patch file: derby-4915-1b-more_persistent_delete.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076335 13f79535-47bb-0310-9956-ffa450edef68"
1bee891c8220918cfbc1b36709904d1df54beb32,"DERBY-5079 "" DERBY-4984 caused a regression which will not allow users to drop a table if the table was involved in a trigger action rebind during ALTER TABLE DROP COLUMN

Adding some commented out test cases to show the problem with drop table after ALTER TABLE DROP COLUMN and some combination of triggers. This is caused because the changes for DERBY-4984 used an incorrect current dependent for the dpendency system before doing a recompile of trigger action sql. Work is being done to use the correct dependent and recreate the dependencies in SYSDEPENDS correctly after a trigger action recompile is done following an ALTER TABLE DROP COLUMN.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076387 13f79535-47bb-0310-9956-ffa450edef68"
299b9e7b79f4eca7ae63a3f1ace3b3337a1a5e11,"DERBY-5087: NPE in istat daemon when encountering critical exception during shutdown

Don't null out the index stats refresher reference in the data dictionary when
stopping the module.
Removed unnecessary variable 'daemonStopped', used existing 'daemonDisabled'
instead.

Patch file: derby-5087-1a-npe_on_shutdown.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076445 13f79535-47bb-0310-9956-ffa450edef68"
15b7b103698749a0dc6dfb1c14ed258a71ff6022,"DERBY-5082: ShutdownException in ContextManager.checkInterrupt() during shutdown

The fix is two-fold:
 a) Avoid destroying tx, which will fail, if the database is [being] shut down.
 b) If destroying tx, catch ShutdownException in case someone shuts down the
    database under our feet.

Added a break to make the flow clearer (also avoids an unnecessary trace-line).

Patch file: derby-5082-1a-fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076462 13f79535-47bb-0310-9956-ffa450edef68"
07c2cfc2156ad18250b6cd3ff4cc114d95304299,"DERBY-5085 After specifying deregister=false on the engine shutdown URL, Derby forgets that the default behavior is deregister=true. Change the deregister value after DriverManager.deregisterDriver


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076499 13f79535-47bb-0310-9956-ffa450edef68"
d1ded580302d1acf0f3eb1ef109f4530274d2913,"DERBY-5086: Disable istat logging by default


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076559 13f79535-47bb-0310-9956-ffa450edef68"
cd02474fc096e480debcb01754e98c497e177d02,"DERBY-5088: ShutdownException raised in istat thread during factory call

Refactored outer-level error handling, and moved context service factory call
inside try/catch.

Patch file: derby-5088-1a-shutdownexception_refactor.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076802 13f79535-47bb-0310-9956-ffa450edef68"
8d921371d55d9c7959fd18a1acc6f885b8ebbc42,"DERBY-5016: Rev 3 of the 10.8.1 release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1076821 13f79535-47bb-0310-9956-ffa450edef68"
f3377284242a4250cad14668992546c5e46a2e35,"DERBY-4907 EmbeddedXADataSource with ;create=true attribute set in setDatabaseName fails with java.sql.SQLException: Database not available

Patch contributed by Siddharth Srivastava <akssps011@gmail.com>



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1077955 13f79535-47bb-0310-9956-ffa450edef68"
589941f2c7cebb0a4b45c3350ff6b74fdf3f0d4c,"DERBY-4907: Back out 1077955 because it breaks the Derby build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1077998 13f79535-47bb-0310-9956-ffa450edef68"
2ed8a49004052d660abb0b3b31a306ade228f291,"DERBY-5016: 4th rev of the 10.8.1 release notes, adding a blurb on the deregister attribute to the detailed note for DERBY-2905.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078040 13f79535-47bb-0310-9956-ffa450edef68"
c9a03ef304e7209640a4fff12a5503e48f8ade04,"[RELEASE CHECKIN] Derby release ID set to: 10.8.0.0

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078051 13f79535-47bb-0310-9956-ffa450edef68"
3fa44922f49443a45cb236060c409f15d32fcde1,"[RELEASE CHECKIN] Check in NOTICE as part of building a release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078052 13f79535-47bb-0310-9956-ffa450edef68"
bdbe4092324bdb61aa4e04e72b787154595c18b3,"[RELEASE CHECKIN] Derby release ID set to: 10.8.0.1

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078059 13f79535-47bb-0310-9956-ffa450edef68"
1046fe5d3ec70ba2e821a8848c10739a3d6768a7,"Set trunk release id back to 10.8.0.0; it was bumped during a dry run of the release generation target.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078067 13f79535-47bb-0310-9956-ffa450edef68"
b330b4007116ba5f22949e09c9f18c38c7bdfced,"Update the STATUS file in preparation for the 10.8.1 release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078114 13f79535-47bb-0310-9956-ffa450edef68"
3a6d457f0983223e88f11f9025ff6262f6fdb8d2,"DERBY-5089: Improve tracing/logging of runtime exceptions raised in the istat thread

Added tracing/logging of runtime exceptions and checked exceptions.
Removed/added/modified some other traces.

Patch file: derby-5089-1a-improved_tracing.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078449 13f79535-47bb-0310-9956-ffa450edef68"
5179dd9fc332f42a00d9a56fd265360909c57872,"DERBY-4907 EmbeddedXADataSource with ;create=true attribute set in setDatabaseName fails with java.sql.SQLException: Database not available

Patch contributed by Siddharth Srivastava <akssps011@gmail.com> and Dave Brosius <dbrosius@apache.org> .



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078461 13f79535-47bb-0310-9956-ffa450edef68"
f0f442fb0bfb94180fcaa6fa42c7fdfa92d377f2,"DERBY-4915: test failure in OSReadOnlyTest in assertDirectoryDeleted

Increase sleep time and number of deletion attempts.

Patch file: derby-4915-2a-increased_sleep.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078608 13f79535-47bb-0310-9956-ffa450edef68"
bf58aa63007ebae5d861daece96cf345e525add0,"DERBY-5079 (DERBY-4984 caused a regression which will not allow users to drop a table if the table was involved in a trigger action rebind during ALTER TABLE DROP COLUMN)

Trigger action sql should be rebound using the statement and not the trigger table. Also, dependency between the trigger table and trigger action SPS should be established.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1078693 13f79535-47bb-0310-9956-ffa450edef68"
ecef2eb1c67ac732f1c624bff683fe249bd68e66,"DERBY-5099: PrepareStatementTest depends on ordering of test cases

Merged two test cases that depended on one another so that the order
in which the test cases run doesn't affect the result.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079336 13f79535-47bb-0310-9956-ffa450edef68"
ac0be7fe12cde159c00f740b76dfef0c2ee7f4fa,"DERBY-5104: InterruptResilienceTest fails to remove tables in tearDown()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079349 13f79535-47bb-0310-9956-ffa450edef68"
e1fc30c8506d1fcf0e4acc4bbc00237d86dd120c,"DERBY-5106: Lacking cleanup in CheckConstraintTest.testJira4282()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079406 13f79535-47bb-0310-9956-ffa450edef68"
363f8a2eac9600f3871595408103cc410dc1ac6b,"DERBY-5016: Add summary line for XML operators to 10.8.1 release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079470 13f79535-47bb-0310-9956-ffa450edef68"
17227cff56b3e6891d05e0eb9e6103648fc10553,"DERBY-4319 hang in suites.all with ibm 1.5 on AIX after ttestDefaultProperties

Make sure spawned network server process is destroyed if the hang occurs on SpawnedProcess.complete(). This does not address the core reason for the hang which is still not well understood and currently does not reproduce on the aix machine with the problem. DERBY-4319 will stay open while we wait for the problem to reappear.





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079548 13f79535-47bb-0310-9956-ffa450edef68"
b26ddb05d96999f574e7e9dbb777ceedb8b05dea,"DERBY-5112: ImportExportTest depends on implicit ordering of test cases

Reset test tables between each test case.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079693 13f79535-47bb-0310-9956-ffa450edef68"
64018610440f036b9c49ea4d79c0440461e5f3c7,"DERBY-5114: Assert failure in SavepointJdbc30Test.testReleaseSqlSavepointAndRollback

Clear the test tables between each test case.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079736 13f79535-47bb-0310-9956-ffa450edef68"
9a3581a91c273aa2558b7c6de99b228b2217ce05,"DERBY-5113: Intermittent failure in BlobSetMethodsTest on Java 7: Unable to set stream: 'Reached EOF prematurely; expected 1,024, got 0.'

Made Util.setStreamFailure() preserve the stack trace of the underlying exception to help debugging the problem.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079761 13f79535-47bb-0310-9956-ffa450edef68"
6afbd85d88e3449d792252f6733f4dcc17b7bb6e,"DERBY-5116: SequenceTest fails with ""Sequence 'MYSEQ1' already exists""

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079775 13f79535-47bb-0310-9956-ffa450edef68"
03e7a1bc194d7f1aaa0fe5d8876d1ffeecb302b8,"DERBY-5117: ParameterMetaDataJdbc30Test fails with ""'DUMMYINT' is not recognized as a function or procedure""

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079779 13f79535-47bb-0310-9956-ffa450edef68"
8010935f2fd9759cf1c3d286ad0de8645f722ae5,"DERBY-5103: ProcedureInTriggerTest depends on implicit ordering of test cases

Change the test cases to be self-contained and not depend on the side effects of the other test cases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1079805 13f79535-47bb-0310-9956-ffa450edef68"
29f1800f0b8e45b97bb6332a296b709db218cac1,"DERBY-5102: GrantRevokeDDLTest depends on implicit ordering of test cases

Drop the created schema when testMinimumSelectPrivilegeRequirement completes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1080548 13f79535-47bb-0310-9956-ffa450edef68"
ad5e6e3d6c3a4d358716f8d32202f599d7de03ac,"DERBY-5102: GrantRevokeDDLTest depends on implicit ordering of test cases

More cleanup when the test cases complete.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1080557 13f79535-47bb-0310-9956-ffa450edef68"
11be777da696334b6120925889b6968640526d72,"DERBY-5124: NPE or assert failure printed when dropping table while statistics are written out

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1080573 13f79535-47bb-0310-9956-ffa450edef68"
4895279ba44d68ec48d0ce5dc8505fbe753a77f0,"DERBY-5044 ALTER TABLE DROP COLUMN will not detect triggers defined on other with their trigger action using the column being dropped

Adding few tests for this jira



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1080707 13f79535-47bb-0310-9956-ffa450edef68"
328c3cab93ef50fed6cbdd40a7994e2422822324,"DERBY-5045: Assert failures in UpdateStatisticsTest

Updated statistics shouldn't be inserted into SYSSTATISTICS if the
index has been dropped.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1080947 13f79535-47bb-0310-9956-ffa450edef68"
9b3569f8d00d1d391057692776e4102a73b13371,"DERBY-5113: Intermittent failure in BlobSetMethodsTest on Java 7: Unable to set stream: 'Reached EOF prematurely; expected 1,024, got 0.'

AccessTest should reset the database properties it modifies.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081059 13f79535-47bb-0310-9956-ffa450edef68"
caf6b9503a516925b8150f342a8260392e03dc40,"DERBY-5105: NoSuchMethodError in upgrade tests (testTriggerBasic)

Disable the post soft upgrade phase for the versions that suffer from
DERBY-4835.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081072 13f79535-47bb-0310-9956-ffa450edef68"
013465fa7debbc9932028f2410e7ba0a5cb12abc,"DERBY-5103: ProcedureInTriggerTest depends on implicit ordering of test cases

Drop index created by test case.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081081 13f79535-47bb-0310-9956-ffa450edef68"
995d3745ffcd99ddcdab54a872c888a79912ed4b,"DERBY-5113: Intermittent failure in BlobSetMethodsTest on Java 7: Unable to set stream: 'Reached EOF prematurely; expected 1,024, got 0.'

Blob.truncate() should copy bytes from the beginning of the stream.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081293 13f79535-47bb-0310-9956-ffa450edef68"
16d110599ed252d6b1363457db51327c0223a279,"DERBY-5131: Turn off the istat daemon by default.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081416 13f79535-47bb-0310-9956-ffa450edef68"
58f1a5a3b8040fa110bbed357fa41544bd503cc0,"DERBY-5016: Check in 6th version of the 10.8.1 release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081422 13f79535-47bb-0310-9956-ffa450edef68"
248356086e4a7571a87d88a91a80bf9b2368b244,"DERBY-3980: Conflicting select then update with REPEATABLE_READ gives lock timeout instead of deadlock
DERBY-5073: Derby deadlocks without recourse on simultaneous correlated subqueries

Improve the deadlock detection algorithm by

  1) fixing a bug that made it misrepresent the wait graph in a way
     that made the chosen victim refuse to die

  2) making it understand that two transactions waiting for the same
     lock are not blocking each other if the two lock requests are
     compatible


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081455 13f79535-47bb-0310-9956-ffa450edef68"
23a45382cf29f0af4979c034ee3838f6cc780df2,"DERBY-4319 hang in suites.all with ibm 1.5 on AIX after ttestDefaultProperties

disable for now ttestDefaultProperties and ttestSetPortPriority on AIX IBM 1.5, which can make the test fail.  This does not fix the issue.
Also add BaseTestCase.isPlatform(String) method and OsName class to faciltate platform exclusions from test runs.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081494 13f79535-47bb-0310-9956-ffa450edef68"
40ca7ba5380420a7d79d7061a205a4ecbbd50352,"DERBY-5119 testQualifiers(org.apache.derbyTesting.functionTests.tests.store.AccessTest)java.sql.SQLException: Table/View 'FOO' already exists in Schema 'APP'.

Add drop of table FOO to teardown method so previous failed fixtures won't leave it around to intefere with others.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081568 13f79535-47bb-0310-9956-ffa450edef68"
c16a68749444a2ac4912787489d1824dc18e1c9b,"DERBY-5109 (/DERBY-5074), DERBY-5122
  Disabling the test with ibm 1.4.2 jvm.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081612 13f79535-47bb-0310-9956-ffa450edef68"
da926937d490063fa0990c473410fda3a401e4bb,"DERBY-4762 Failure in testPing

Adding some more verbosity to the failure. This does not fix the issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081626 13f79535-47bb-0310-9956-ffa450edef68"
a346f0c78c3e6fa6ed14916066598518ef5307c0,"DERBY-5108

Changes istat daemon shutdown to check during processing if a shutdown is
in progress and respond to the shutdown immediately.  Also changes the
module stop() to wait for worker threads to exit before returning.  Waiting
for work to stop allows the subsequent shutdown of the storage system to
properly close it's files during a clean shutdown request.  Without this
change the system sometimes left files open which the nightly tests uncovered
on windows machines while trying to delete those files.

This change is a slightly modified version of a patch proposed by Knut Anders Ha
tlen.

Previous to this change the AutomaticIndexStatisticsTest.testShutdownWhileScanni
ngThenDelete
test would fail on my machine consistently in SANE classes mode on a windows XP
laptop.  After this
I have only seen one failure in 50 runs.  Checking it in as it is definitely
an improvement and want to see if it fixes the errors in the nightly's across
a number of environments.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081677 13f79535-47bb-0310-9956-ffa450edef68"
bf1e50863311472e32b588854fee4bc58846ad14,"DERBY-5016: 7th version of the 10.8.1 release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081788 13f79535-47bb-0310-9956-ffa450edef68"
fe374c1ba39c6447fa50ca9d14557b2fc13f837e,"DERBY-4762 Failure in testPing

Add more diagnostics for failure in assertExecJavaCmdAsExpected. This does not fix the issue


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1081884 13f79535-47bb-0310-9956-ffa450edef68"
8d23f446c213331a0ba9e3ae0a9892577a815e39,"DERBY-3993 With IBM 1.6 T_RawStoreFactory fails with There should be 0 observers, but we still have 1 observers on Win 2K

The problem will only show up in SANE builds as that is the only time we do 
the sanity check.

Xact.doComplete() is called near the end of the transaction to take care of any
cleanup prior to committing or aborting the transaction.
It calls notifyObservers(commitOrAbort) and it expects on return that each 
observer has been notified, and all the observers are coded
to delete themselves from the observer list as part of this process. It then 
asserts that the list should be empty on return.

The problem is that one of the DropOnCommit observer as part of it's 
processing manages to add another observer to the list. I am guessing that the
problem becomes intermittent because either different 
JVM's/memory layouts/hash algorithms 
result in the order processing of the observer list to be different, 
or different implementations handle the adding of an observer to the list 
while scanning the list differently.  There is nothing in the Observable
javadoc that guarantees and order or says anything about expected behavior
of notifyObservers() execution if another observer is added during the 
execution so I don't think it is a jvm bug.

In my case in order to process a drop of a container marked drop on commit the 
raw store interface requires it to first be opened. The code adds
a TruncateOnCommit as part of this open as that layer of the code does not 
know why it is being opened. I believe it is this ""new"" TruncateOnCommit
observer which is left on the observer queue. Adding an extra notify to the 
drop on commit processing seems to fix the unit test, I'll see if that causes
any problems in the full set of tests. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1082197 13f79535-47bb-0310-9956-ffa450edef68"
a5209eb6c656b11e68ff76161c60812e22f5858a,"DERBY-5100: GetCurrentPropertiesTest depends on implicit ordering of test cases

Made the test ordering explicit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1082226 13f79535-47bb-0310-9956-ffa450edef68"
66988078de18489ab1af02ce5e813688d804c856,"DERBY-5115: NetworkServerControlApiTest depends on implicit ordering of test cases

Made the test ordering explicit.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1082233 13f79535-47bb-0310-9956-ffa450edef68"
04c0d4e275707229fba4e7d3d8673e44c8761024,"DERBY-5107: BasicInMemoryDbTest depends on implicit ordering of test cases

Use helper methods that ensure created databases are dropped between each test case, and also load the JDBC driver explicitly in test cases that used to require that an earlier test case had already loaded the driver implicitly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1082282 13f79535-47bb-0310-9956-ffa450edef68"
281d7e6db93eaf69356a8c3c227af88c1e222bff,"DERBY-4762; Failure in testPing
  modifying the print-out in BaseTestCase so it prints the actual expected 
  string instead of the array reference. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1082305 13f79535-47bb-0310-9956-ffa450edef68"
84349af577aa8fb57c36fc5e2e29f56b9c3723a3,"DERBY-5101: TruncateTableTest depends on implicit ordering of test cases

Added a workaround for DERBY-5139 so that the test doesn't fail when testSelfReferencing runs first.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1082428 13f79535-47bb-0310-9956-ffa450edef68"
18d5980db896e3c68344ee763bc8f323d035bc05,"DERBY-5131: Re-enable istat=on as the default Derby behavior.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1082671 13f79535-47bb-0310-9956-ffa450edef68"
531115821d9fd2fd81bd1991d0775b4d6cad94d1,"DERBY-4762 Failure in testPing

One more diagnostic improvement in BaseTestCase.execJavaCmd to print the command argements passed to exec with -Dderby.tests.debug=true



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1082680 13f79535-47bb-0310-9956-ffa450edef68"
2add32c4d9ae9cf381bf08ee266aae1539be3b19,"DERBY-4869 Implement JDBC 4.1, th api increment introduced by Java 7. Add tests for Connection.setTypeMap(Map) when Map is not null. Add extra tests for case in Connection.abort(executor) when executor is null 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1083094 13f79535-47bb-0310-9956-ffa450edef68"
9b064657f8f9a9f7e3c1494caca885eb9e5705f8,"DERBY-5092 avoid Boolean allocations for rowset data in client cursor 

Patch contributed by Dave Brosius < dbrosius@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1083493 13f79535-47bb-0310-9956-ffa450edef68"
94f8091b1653b1471d35457971728973717ee488,"DERBY-5092 avoid Boolean allocations for rowset data in client cursor

I made a mistake to checkin ReplicationMessageTransmit.java. Back out the change.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1083501 13f79535-47bb-0310-9956-ffa450edef68"
321c68c5feb7ccd81e3bd9876ca904c5b14ab420,"DERBY-5092 avoid Boolean allocations for rowset data in client cursor

Patch contributed by Dave Brosius < dbrosius@apache.org >


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1083603 13f79535-47bb-0310-9956-ffa450edef68"
91a8a21156578f3e219f187878405ef62a6b502f,"DERBY-4869: Fixed compiler warnings and removed unnecessary try/catch in test case for getTypeMap()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1083628 13f79535-47bb-0310-9956-ffa450edef68"
e313b3979d11dfc3a5d517d55103c8f3119a6958,"DERBY-5016: Reinstate the release note which says that istat is enabled by default.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1083802 13f79535-47bb-0310-9956-ffa450edef68"
c85d46502dc5c1c6df49b7fde8ea3f0fc30ef140,"DERBY-5143: Remove unnecessary copying of the map in getTypeMap()

- made the JDBC 4.0 overrides of getTypeMap() just call
  super.getTypeMap(), and added SuppressWarnings annotation to silence
  the unchecked conversion warnings in the overridden methods

- made the client implementation return EMPTY_MAP (immutable) instead
  of an empty HashMap (mutable), to match the embedded implementation

- updated ConnectionTest to expect the returned map to be immutable


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1083917 13f79535-47bb-0310-9956-ffa450edef68"
e0699eac26dd7e0b2e2399a8e4809356081e421b,"DERBY-3980: Conflicting select then update with REPEATABLE_READ gives lock timeout instead of deadlock
DERBY-5073: Derby deadlocks without recourse on simultaneous correlated subqueries

Added more comments describing the deadlock detection algorithm.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1084561 13f79535-47bb-0310-9956-ffa450edef68"
c1193bf7fd5069983a6c48ebf0fd0d3f091f5a3b,"DERBY-5121 Data corruption when executing an UPDATE trigger

Committing changes to back out DERBY-1482 out of trunk(10.8 codeline). The changes have already been backed out of 10.7). In addition to engine code backport, it will also disable the tests that were added for DERBY-1482.

With DERBY-1482, these tests would not read in large object columns into memory because the triggers didn't need them. But now that DERBY-1482 changes are being backed out, the large object columns will be read in which can cause the test to run out of memory depending on how much heap is available to it. I will disable the tests from 10.7 too.

This commit also has a comment in DataDictionaryImpl:getTriggerActionString explaining the code changes for backout. I will add that comment in 10.7 too.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1084718 13f79535-47bb-0310-9956-ffa450edef68"
ebd44de6e13be834a23950fa3a72b2d7bfa46087,"DERBY-5108 Intermittent failure in AutomaticIndexStatisticsTest.testShutdownWhileScanningThenDelete on Windows

Follow-up patch DERBY-5108-2 which makes the join with the daemon
retry in the case the thread gets interrupted, also note the fact in
InterruptStatus to follow our new pattern for interrupt handling.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1085027 13f79535-47bb-0310-9956-ffa450edef68"
a5357587ea568e69fd606804743e91abc0a9e51f,"DERBY-5141 SSLTest fails with java.net.SocketException: Default SSL
context init failed: null

Add some verbosity to NetworkServerTestSetup to show the server start
command with -Dderby.tests.debug=true.  This does not fix the issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1085078 13f79535-47bb-0310-9956-ffa450edef68"
5da491e62ed13f1e856ab9fb1c98822e0f49fa49,"DERBY-5093: avoid Integer allocations fetching client meta data info

Patch contributed by Dave Brosius <dbrosius@apache.org>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1085407 13f79535-47bb-0310-9956-ffa450edef68"
fc54674b446791f66f5e9688e543eb09ca0782c5,"DERBY-5021: avoid map look ups in a loop by using entrySet

Patch contributed by Dave Brosius <dbrosius@apache.org>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1085409 13f79535-47bb-0310-9956-ffa450edef68"
df731e992cff15e1eea904761f83c57a6b4a55ac,"DERBY-5121 Data corruption when executing an UPDATE trigger

      Changes made for DERBY-1482 caused corruption which is being worked 
       under DERBY-5121. The issue is that the generated trigger action
       sql could be looking for columns (by positions, not names) in
       incorrect positions. With DERBY-1482, trigger assumed that the
       runtime resultset that they will get will only have trigger columns
       and trigger action columns used through the REFERENCING column.
       That is an incorrect assumption because the resultset could have
       more columns if the triggering sql requires more columns. DERBY-1482
       changes are in 10.7 and higher codelines. Because of this bug, the
       changes for DERBY-1482 have been backed out from 10.7 and 10.8
       codelines so they now match 10.6 and earlier releases. This in 
       other words means that the resultset presented to the trigger
       will have all the columns from the trigger table and the trigger
       action generated sql should look for the columns in the trigger
       table by their absolution column position in the trigger table.
       This disabling of code will make sure that all the future triggers
       get created correctly. The existing triggers at the time of 
       upgrade (to the releases with DERBY-1482 backout changes in them)
       will get marked invalid and when they fire next time around with
       the release with DERBY-1482 changes backed out, the regenerated sql 
       for them will be generated again and they will start behaving 
       correctly. So, it is *highly* recommended that the users upgrade 
       from 10.7.1.1 to next point release of 10.7 or to 10.8




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1085613 13f79535-47bb-0310-9956-ffa450edef68"
4e72f55c391d61ca51a40526f5c687eff3378a15,"DERBY-5152 Shutting down db, information that the thread received an interrupt will not be restored to thread's interrupt flag

Patch derby-5152-b. When a thread receives an interrupt Derby detects
this, it will reset the thread's flag and save the fact in its lcc
(LanguageConnectionContext), if available. If not (e.g. during boot)
it will save the information in a thread local variable. For
performance reasons, we use the lcc when available. However, when
shutting down the database, the lcc goes away, and when the JDBC call
returns to the application, the thread's interrupt flag will not be
reinstated as per our specification. This is because the lcc dies
before we do the restoring (under shutdown). So, the information that
the thread was interrupted is lost with the lcc going away.

This patch copies the information from lcc over to the thread local
variable when lcc is popped and adds a new test case to
InterruptResilienceTest.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1086443 13f79535-47bb-0310-9956-ffa450edef68"
cac43eeeca42edf636a690f3fee2819adda1963a,"DERBY-5157: Incomplete quoting of SQL identifiers in AlterTableConstantAction


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1086526 13f79535-47bb-0310-9956-ffa450edef68"
f5ec6ec7075487440b9fd78162e525450cd499ac,"DERBY-3009: Out of memory error when creating a very large table

Clear the local state in AlterTableConstantAction after invocation so
that the memory held in the table descriptors can be freed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1086527 13f79535-47bb-0310-9956-ffa450edef68"
00306c2ed8863e3609f6e00137f97fc38283ec5f,"DERBY-5159: ParameterMetaDataJdbc30Test fails with ""'PMDD' is not recognized as a function or procedure""

Create shared procedure in the decorator so that the test cases
that need it can find it regardless of the order of execution.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1086559 13f79535-47bb-0310-9956-ffa450edef68"
30b33abf11879cc4d030c8ddf2011579edf03b15,"DERBY-2573: Create a separate target for writing the release properties.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1086660 13f79535-47bb-0310-9956-ffa450edef68"
e9737b6b49d8fab8c824a3f102494d22af901c44,"DERBY-5162: Null out the wrapped Clob when resetting a SQLClob to NULL.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1086798 13f79535-47bb-0310-9956-ffa450edef68"
35d620ab4747d71229eda52cb997d71d0bf8d00c,"DERBY-2515: Propagate output args to input arg array for INOUT args in the network driver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1086799 13f79535-47bb-0310-9956-ffa450edef68"
96099969898139cb1a110323e932e009cbbcb6e8,"DERBY-5161: Cannot rollback after syntax error in internal statement

Make sure the statement context is cleaned up on syntax errors.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1086920 13f79535-47bb-0310-9956-ffa450edef68"
56bebbeaf102d0f206aa8a71562c7a62b87eb1a0,"DERBY-5121 Data corruption when executing an UPDATE trigger

With the earlier checkin for DERBY-5121, DERBY-1482 changes weren't completely backed out on trunk and 10.7. We have backed out 
the code for the triggers so that now triggers look for the columns in their actual column positions at execution time. But 
DERBY-1482 also made changes to UPDATE code to read only the colunms needed by it and the triggers that it is going to fire. 
We need to backout the changes to UPDATE code to make sure that it reads all the columns from the trigger table and not do 
selective column reading.

Also adding an upgrade case testing the behavior of UPDATE reading correct columns from the trigger table so that trigger 
finds the columns it needs.

derbyall and junit suite runs fine with these changes



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1087049 13f79535-47bb-0310-9956-ffa450edef68"
6394f89c8a0894cc5ad9d0b554dba0b6af4ea4c6,"DERBY-5016: Check in new version of the 10.8.1 release notes, including the detailed notes for DERBY-5121.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1087283 13f79535-47bb-0310-9956-ffa450edef68"
932c26ff77e646af4bcecccbdb2abf99f8360ad9,"DERBY-2515: Improve exception handling when copying INOUT args.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1087346 13f79535-47bb-0310-9956-ffa450edef68"
503e54d5bb6901c06c456914d9e42226ff3d7d51,"DERBY-5084; convert ijConnName.sql to a ScriptTest junit test
  Converts test with exception of one run-but-not-checked test case.
  patch contributed by Houx Zhang (houxzhang at gmail dot com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1087433 13f79535-47bb-0310-9956-ffa450edef68"
feeb7ebcc41cb3b96916e89d4dbb34660d977dfb,"DERBY-5160: Fix NPE when adding a column without specifying a datatype.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1087457 13f79535-47bb-0310-9956-ffa450edef68"
ae1478de350d4f97a929bf33e1332edcd15123c2,"DERBY-5153: Intermittent ASSERT FAILED Internal Error-- statistics not found in selectivityForConglomerate when running InterruptResilienceTest

Added regression test case that reproduces the bug. Disabled for now.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1087636 13f79535-47bb-0310-9956-ffa450edef68"
98ec83ef86896e6e4140aac2748da4a8f269e6cd,"DERBY-5168: Wrong syntax in identifier chain returned by SynonymAliasInfo.toString()


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1087641 13f79535-47bb-0310-9956-ffa450edef68"
1c5f9b323b1316591493e0cc40c07b3b019aa78e,"DERBY-5127 Convert madhare.sql to JUnit

Contributed by Siddharth Srivastava



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1087809 13f79535-47bb-0310-9956-ffa450edef68"
3c7c7402831d92c761a84e3e1d22b3c10eb7962b,"DERBY-5173: RAFContainer.privGetRandomAccessFile() unwraps wrong exception type

Made run() wrap IOExceptions in StandardExceptions to prevent ClassCastException in the error handler.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1088491 13f79535-47bb-0310-9956-ffa450edef68"
a899bbc8afb5059e758a621595fc748a2ec57d03,"DERBY-5153: Intermittent ASSERT FAILED Internal Error-- statistics not found in selectivityForConglomerate when running InterruptResilienceTest

Removed the failing asserts and enabled the test case that exercises the code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1088495 13f79535-47bb-0310-9956-ffa450edef68"
11468253bf0f1f8b20ff315e392742791b85a2a5,"DERBY-5170: Client doesn't handle double quotes in savepoint names

Moved helper method that quoted SQL identifiers from ResultSet to a utility class, and made Connection use that method to quote savepoint names.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1088500 13f79535-47bb-0310-9956-ffa450edef68"
d84c7dc11ea0c1f3d736b5b26854787a65c22f91,"DERBY-5016: Bump the release id on the trunk to 10.9.0.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1088604 13f79535-47bb-0310-9956-ffa450edef68"
23f244c6fac867e5420a5b7234ab276e97335308,"DERBY-5016: Change data dictionary version to 10.9 on trunk.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1088623 13f79535-47bb-0310-9956-ffa450edef68"
00783b84ba645ec570521f1eebef9e0b273db895,"DERBY-5174: Failure in UpdateStatisticsTest after DERBY-5153

Drop the test table on completion of the test case.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1088633 13f79535-47bb-0310-9956-ffa450edef68"
3bf98e0f0259529aa771ed9957d2e821e0522d61,"DERBY-2066: Make the unregistered driver message a SQLState to improve error handling in the network driver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1089156 13f79535-47bb-0310-9956-ffa450edef68"
86226a22a429be92666a1348f454244e91e9d63c,"DERBY-5158 Incomprehensible error message on client if attempting rollback after database has been shut down.

Scenario: app code calling client JDBC connection commit or rollback
after the database has been shut down. In the commit case the issue
and fix only applies if a transaction has been started, since
otherwise the client optimizes the commit away.

Patch DERBY-5158b, which corrects the protocol code on the client side
to cater for ENDUOWRM even in the error case (as sent by the
server). Looking at the DRDA standard, I managed to satisfy myself
that this is the correct behavior: section 7.5 Commit/Rollback
processing, where CR2 says:

""Application servers using remote unit of work protocols and
application servers using distributed unit of work but not protected
by a sync point manager must inform the application requester when the
current unit of work at the application server ends as a result of a
commit or rollback request by an application or application requester
request. This information is returned in the RPYDSS, containing the
ENDUOWRM reply message.""

The ""remote unit of work"" is definitely ended, so...

Note that the (new) error stack trace is still different than with the
embedded driver, since there the 08003 will be directly reported as
the error (not wrapped in 06006 as shown below for the client side).

With this new code, on the client side, one can clearly see from the
exception stack that the underlying cause of the error is 08003. ""No
current connection"".

I added a new test, Derby5158Test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1089795 13f79535-47bb-0310-9956-ffa450edef68"
4a57be6d7844018f315d06b510777ffe609d78bc,"DERBY-5181: Make accessibility changes to the release note generating tools.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1090322 13f79535-47bb-0310-9956-ffa450edef68"
563a6191d973d89cd0a99244ea02b30233b1140f,"DERBY-5180: Accessibility changes for demo html.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1090336 13f79535-47bb-0310-9956-ffa450edef68"
96e5e049a430b68c042d701049a7a222d540c850,"DERBY-5127 Convert madhare.sql to JUnit

Fix result checking
Contributed by Siddharth  Srivastava 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1090359 13f79535-47bb-0310-9956-ffa450edef68"
b06f20e48f07fca31712c0a21efd0989a3ecefac,"DERBY-4910: Four replication tests fail on z/OS with
junit.framework.AssertionFailedError: startMaster did not succeed.

Changed the error handling in SlaveController to account for the
changes in nesting of exceptions in DERBY-4812.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1091000 13f79535-47bb-0310-9956-ffa450edef68"
961ecca28bec7e90736442e7b0247c77085f81f9,"DERBY-4544: Don't use the SQLClob.getLength() optimization on non-resetable streams--this fixes a data corruption.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1091169 13f79535-47bb-0310-9956-ffa450edef68"
4afad93f89ebb80271d7aeb1d7b1aebfb4de60e4,"DERBY-5185 store/rollForwardRecovery.sql stuck in RAFContainer4.recoverContainerAfterInterrupt() during shutdown

Patch derby-5185-1a.diff. Avoid waiting forever in the loop in
recoverContainerAfterInterrupt where we wait for other concurrent
threads to hit the wall (having seen ClosedChannelException), i.e. so
we know they waiting for this thread to clean up. The counting logic
(threadsInPageIO) here needs to be correct, if there is an error, we
could risk waiting forever, as seen in this issue.

This patch should be followed up by a patch to correct the logic, but
until such time, this patch improves on the situation.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1091221 13f79535-47bb-0310-9956-ffa450edef68"
27409735576d0e780a9b7e7b8811dde5c2d1a345,"DERBY-5186; dblook_test_territory.java fails on AIX with ibm 1.4.2 diffing on 1 line not removed from .out
  adding a search pattern to deleteLines in Sed.java to remove the diffing line.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1091285 13f79535-47bb-0310-9956-ffa450edef68"
5b35651ab6dae9f5d15b9774a263a504fb7a73a5,"DERBY-4589: If the user tries to connect to a database which is missing service.properties, suggest to her that Derby might have crashed in the middle of creating the database and the solution might be to remove and recreate the database.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1091772 13f79535-47bb-0310-9956-ffa450edef68"
c6ca3043b13281f6d3eceb12de746ef505720399,"DERBY-2354: Unable to perform select query using DISTINCT on a read-only database

Made databases that are stored in a jar or a zip use a writable
directory for temporary files needed by some operations (typically
hash scans when the hash table gets too big to be kept in memory).

The writable directory can be controlled by the database property
derby.storage.tempDirectory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1092067 13f79535-47bb-0310-9956-ffa450edef68"
589b21f020d3c950cc3131d99cb300ff629e8661,"DERBY-5189: PropertySetter should ignore GCJ installations


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1092333 13f79535-47bb-0310-9956-ffa450edef68"
85ec4d6e203044499c8dc37a2cb266dfb4398b4e,"DERBY-5187 More accessibility fixes needed for demo pages

Modified 7 HTML files and the stylesheet.

Patches: DERBY-5187.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1092795 13f79535-47bb-0310-9956-ffa450edef68"
7e1fccabca47f5a805fac827018bbefaeb01e7ac,"DERBY-5192: Setting up network server for management tests hangs intermittently

Moved the waiting on the shutdown monitor in blockingStart() into a
while loop to ensure that it doesn't hang forever if the shutdown
signal comes before it's in the wait() call, and that it doesn't stop
waiting prematurely if it experiences a spurious wakeup.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1094315 13f79535-47bb-0310-9956-ffa450edef68"
1cfe34ee06688596e4b30087fb855948b537e40a,"DERBY-5185 store/rollForwardRecovery.sql stuck in RAFContainer4.recoverContainerAfterInterrupt() during shutdown

Patch derby-5185-2b which fixes state a state maintenance bugs (in
threadDoingRestore/restoreChannelInProgress) maintenance when throwing
FILE_IO_INTERRUPTED. The first fixes the immediate problem.

It also adds a maximum number of retries for the readPage code and
fixes some cases whereby the state variable ""threadsInPageIO"" could
risk not being properly update when exceptions would get thrown. The
latter may be the underlying reason for what we see here.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1094572 13f79535-47bb-0310-9956-ffa450edef68"
a768c94c9ad4c21c5570ff95ada4f46882098e72,"DERBY-5185 store/rollForwardRecovery.sql stuck in RAFContainer4.recoverContainerAfterInterrupt() during shutdown

Follow-up patch derby-5185-3a which contains safe guard limits to two loops waiting for
a condition variable: wait maximum one minute to avoid infinite hangs.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1094728 13f79535-47bb-0310-9956-ffa450edef68"
cee2d063f8f8ea3e61b3245778c1491ae0c76514,"DERBY-5016: Change the name of the eclipse ui doc plugin from 1.1.2 to 1.1.3.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1095058 13f79535-47bb-0310-9956-ffa450edef68"
a3e94cbe6bfda50a0ccf735af56b49b54d6532dc,"DERBY-4260: Make derbynet/NetworkServerControlClientCommandTest run regardless of the locale

This patch was contributed by Houx Zhang (houxzhang @ gmail dot com).

This patch modifies the NetworkServerControlClientCommandTest to pass

	-Dderby.ui.locale=en_US

when running the sub-commands of the test, to ensure that the test assertions,
which look for specific English language strings, find the expected values.
That way, the test will pass, even if run in a shell environment where the
locale is set to a non-English value.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1095247 13f79535-47bb-0310-9956-ffa450edef68"
9f435238d3630ca680de7f818322dbe1e1f32fd1,"DERBY-5202: Add colnum attributes to the colspecs generated by MessageBuilder in order to reduce the noise produced when building the pdf version of the Reference Guide.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1095706 13f79535-47bb-0310-9956-ffa450edef68"
036a7e56be6a754574083baf5398ffe4878ddfe3,"Adding a simple test case to show that if you pass in an empty Map to setTypeMap, the method does nothing because the Map is empty. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1096361 13f79535-47bb-0310-9956-ffa450edef68"
80e6765ec0c828546fb604f07aa308d0f39c1512,"DERBY-5204: Misplaced p tags in release notes


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1096741 13f79535-47bb-0310-9956-ffa450edef68"
f61cb102331df410af93a2c9bcb8bdc445697396,"DERBY-4319; hang in suties.all with ibm 1.5 on AIX after ttestDefaultProperties
  removing the skipping; this appears to have been fixed with DERBY-5192.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1096890 13f79535-47bb-0310-9956-ffa450edef68"
7eebc809896348b5857265de23be517696add326,"DERBY-4443: Wrap rollback in exception handlers in try-catch

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

The patch modifies the error handling in SystemProcedures.java so that
secondary exceptions during rollback are chained to the primary exception.
Also, EmbedSQLException's wrapping behavior is adjusted so that the
StandardException logic doesn't try to unwrap the chained exceptions.

A new test is added to the tools suite; it simulates rollback errors
using a special mock driver and mock connection, and verifies that
the exceptions are chained properly.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1096991 13f79535-47bb-0310-9956-ffa450edef68"
52d42fe98227f90e4ecba286dab9f6d36341c452,"DERBY-4617 Sysinfo.testSysinfoLocale failed with IBM  1.6 on Windows 7 64bit

Wrap getCononicalPath() in sysinfo.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1097247 13f79535-47bb-0310-9956-ffa450edef68"
2058395cc5de69e1b7eb79d81f76fba2ccee793a,"DERBY-5084; convert ijConnName.sql to a ScriptTest junit test
  creating new test for the remaining test case
  patch contributed by Houx Zhang (houxzhang at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1097460 13f79535-47bb-0310-9956-ffa450edef68"
4109a77dd41a0b138bfe870087bd7f5257bdb902,"DERBY-5084; convert ijConnName.sql to a ScriptTest junit test
  adding apache headers to two new files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1097469 13f79535-47bb-0310-9956-ffa450edef68"
8a73c4fd8b7d0b16f1ec5c1b858cb205fad534f2,"DERBY-5084; convert ijConnName.sql to a ScriptTest junit test
  cut-and-paste mistake. correct the name in the header in one of the new files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1097471 13f79535-47bb-0310-9956-ffa450edef68"
64e366068e1b3fb8f20ec35ec291c2d47bffd32c,"DERBY-5016: Update the release notes transformer to understand that the current rev level of the eclipse doc plugin is 1.1.3 rather than 1.1.2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1097835 13f79535-47bb-0310-9956-ffa450edef68"
9e6678375244dd9906de3fe15b65c37e4ee1bc15,"DERBY-5016: Add 10.8.1.2 to list of upgrade versions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1097898 13f79535-47bb-0310-9956-ffa450edef68"
c3f421f4755ce3bc5b632f3c555ccc95541abfd6,"DERBY-5016: Update STATUS file to reflect the publication of 10.8.1.2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1097900 13f79535-47bb-0310-9956-ffa450edef68"
c7598f61233493a750cae3425e685e0bab6cf57d,"DERBY-5211: Make SysinfoCPCheckTest pass in non-English locale

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This test verifies the text of certain messages, so the test needs
to be run in the English locale. The patch uses LocaleTestSetup
to control the test locale.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1098033 13f79535-47bb-0310-9956-ffa450edef68"
8ccbb2045210faa6e4754ed34a32d5e6506bb866,"DERBY-5163 fix up sql cleanup handling

Patch contributed by Dave Brosius <dbrosius@apache.org>


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1098040 13f79535-47bb-0310-9956-ffa450edef68"
e411e977f9acffe5ea6c2ca44231c67073a18276,"DERBY-5222: Compatibility tests fail to delete database directory

Use BaseTestCase.removeDirectory() to delete the database directory so
that we get more details in the log when something goes wrong.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1101059 13f79535-47bb-0310-9956-ffa450edef68"
118ac264050efb4434c65361e3cb797f148d6c89,"DERBY-3870: Concurrent Inserts of rows with XML data results in an exception

Added a test case for the bug (disabled for now).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1101839 13f79535-47bb-0310-9956-ffa450edef68"
5891683c7f3bcfdc9193cbb16a219327c7d678de,"DERBY-2254: Increase overhead requirements which trigger log file switches when the checkpointing thread can't keep up with log writers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1102417 13f79535-47bb-0310-9956-ffa450edef68"
39cd0d9ff408c1ebd9edead6c4ec73771de00821,"DERBY-5222: Compatibility tests fail to delete database directory

Wait for the forked test process to terminate so that it's not modifying the
database directory while the parent process is trying to delete it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1102620 13f79535-47bb-0310-9956-ffa450edef68"
67c2adda828ed74af2055d13a0a16f2c77d217d7,"DERBY-5200: embellish build.xml to automatically install junit.jar in the correct directory if it doesn't exist

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1102636 13f79535-47bb-0310-9956-ffa450edef68"
8976bb11fff4799ceaff35406d4738cc3a9efdea,"DERBY-5200: embellish build.xml to automatically install junit.jar in
the correct directory if it doesn't exist

Update the build instructions with information about the automatic
downloading of junit.jar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1102645 13f79535-47bb-0310-9956-ffa450edef68"
7af858da45903e5f029e836016900c8556ad23de,"DERBY-5224: reduce cohesion by removing overzealous casting

Contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1102679 13f79535-47bb-0310-9956-ffa450edef68"
75db060fb5dde334635db99e38f2c4642a788867,"DERBY-5229: Testing README; tstjardir

Clarified and simplified the example that shows how to set the
classpath when running tests in the old harness.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1102688 13f79535-47bb-0310-9956-ffa450edef68"
f6e1e6f98deab471dab280e609f999a0f60ef617,"DERBY-5210: Use java.nio.ByteBuffer in client.net.Request

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1102730 13f79535-47bb-0310-9956-ffa450edef68"
a00a0313ef22d4857924f5aa608abb02d3f37430,"DERBY-5223 Thread's interrupted flag not always preserved after Derby returns from JDBC API call

Patch DERBY-5223b: This fix moves the initialization of the variable
""interruptedException"" earlier in
GenericLanguageConnectionContext#initialize and adds a missing
reinitialization to resetFromPool as a precaution (if
interruptedException is still non-null the connection should have
throws 08000).

The patch also changes the InterruptResilienceTest so that JUnit
asserts in the worker threads will get propagated to the main test
thread on completion, so any future errors in these invariants do not
get overlooked.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1102826 13f79535-47bb-0310-9956-ffa450edef68"
edf4fc76b3d471a14130e39510be8fd086834685,"DERBY-5098: embedded/in-memory: SQLNonTransientConnectionException: No current connection due to invalid page format

Fix int overflows.
The bug caused the in-memory backend to overwrite existing data when the
virtual file/conglomerate grew big enough.

Patch file: derby-5098-1a-overflow_fixes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1103681 13f79535-47bb-0310-9956-ffa450edef68"
9747b7fa63b80bb98480d1550e9e59d8344dce28,"DERBY-5098: embedded/in-memory: SQLNonTransientConnectionException: No current connection due to invalid page format 

Removed redundant checks for whether more space has to be allocated to
accomodate the write.

Patch file: derby-5098-2a-remove_redundant_checks.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1103718 13f79535-47bb-0310-9956-ffa450edef68"
c4521269e625941b842b8dab54dc6ab2358b83c0,"DERBY-5222: Compatibility tests fail to delete database directory

Wait for all forked processes to complete before testing the next combination.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1103742 13f79535-47bb-0310-9956-ffa450edef68"
d9d1bc8ed5008daaa421350f56e1f474fc181dd7,"DERBY-1482 Update triggers on tables with blob columns stream blobs into memory even when the blobs are not referenced/accessed.
This commit ensures that we read only the necessary columns during triggering sql's execution rather than read all the columns 
	from the trigger table just be cause there is a trigger defined on the table. The triggering sql might need more columns 
	in it's resultset than what a firing trigger might need during it's execution. So, in addition to reading only the columns
	reuired by the triggering sql(which also includes all the columns required by it's triggers which will get fired), the 
	other thing commit does is to carve out a temporary resulset for every firing trigger with just the columns that the
	trigger needs. This temporary resultset can be exactly same as the resulset created by the triggering sql or a subset of 
	the resulset created by the triggering sql, it all depends on what columns the firing trigger needs during it's
	execution. Once the right resulset set is constructed for the firing trigger, the trigger will be able to find the columns 
	referenced in it's trigger action through the REFERENCING clause in the correct positions in the resulset. 
With this commit, when the trigger action SPSes needs to be regenerated(or for a new trigger, when it is getting generated the
	first time). the generated trigger action SPSes will look for the columns getting used through the REFERENCING
	clause through their relative position in the temporary resultset which will be generated for each of the firing triggers.
	In the prior releases, since we were reading all the columns from the triggering table, the columns were looked in their
	actual physical position in the trigger table.	
The commit also ensures that all the above mentioned code changes to be selective about columns getting read from the trigger
	table should only happen with a database marked as 10.9 release. In prior release databases(in other words, we are in
	soft-upgrade mode), we do not want to be selective about what columns get read because when soft-upgrade database is taken 
	back to it's original release, that release will not be able to work correctly since it doesn't recognize the column
	read optimization.
The commit also enables the trigger test cases which test that unnecessary LOB columns are not getting read during trigger
	execution when they are not really needed by the triggering sql and the firing triggers.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1103992 13f79535-47bb-0310-9956-ffa450edef68"
526605647df3172840928c6385da711a966a34b6,"DERBY-5236: Client driver silently truncates strings that exceed 32KB

Test case for the bug. Currently disabled.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1104365 13f79535-47bb-0310-9956-ffa450edef68"
674d0be4a0dbed2a98c1892942bb36e6e20eea11,"DERBY-5200; [patch] embellish build.xml to automatically install junit.jar in the correct directory if it doesn't exist
  Added a restriction to accomodate setting of the junit property; if junit is
  set, there will be no attempt to download.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1124438 13f79535-47bb-0310-9956-ffa450edef68"
018948af5c7b3a033195c4c1e2f9663b75bf3ca3,"DERBY-5068: Investigate increased CPU usage on client after introduction of UTF-8 CcsidManager

Make the CcsidManager implementations encode strings directly into the
ByteBuffer instead of going via an intermediate byte array.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1125299 13f79535-47bb-0310-9956-ffa450edef68"
044afae15770e10cf4345685ad85d259094da5e6,"DERBY-3870: Concurrent Inserts of rows with XML data results in an exception

Store XML utility instance in the activation instead of in the
compiled plan, so that it's never accessed concurrently by multiple
threads.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1125305 13f79535-47bb-0310-9956-ffa450edef68"
26b866ab972732ba3b6c58733a1d42cb29d8b356,"Fixed javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1125353 13f79535-47bb-0310-9956-ffa450edef68"
902725f1a030e81dcf1e896e65a53206b486350e,"DERBY-5238  VARCHAR size typos in some documentation topics

Modified comments in three Java source files.

Patches: DERBY-5238-2.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1125447 13f79535-47bb-0310-9956-ffa450edef68"
168be4e594c7501caab46e9f7004799d82be201e,"DERBY-1482 / DERBY-5121

Rick Hillegas contributed a very exhaustive trigger test which I am converting to junit and adding to the upgrade suite
    // The test exhaustively walks through all subsets and permutations 
    // of columns for a trigger which inserts into a side table based on 
    // updates to a master table.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1125453 13f79535-47bb-0310-9956-ffa450edef68"
2a09eb5784ced6a5a0a62327edb0fe3d68509266,"DERBY-3870: Concurrent Inserts of rows with XML data results in an exception

Remove lazy initialization of the field that holds the cached
SqlXmlUtil instance. This simplifies the generated byte code. It also
removes the need for an explicit syntax check of the XML query during
the bind phase, as the earlier initialization ensures that syntax
errors will be detected at compile time.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1126358 13f79535-47bb-0310-9956-ffa450edef68"
d964056e30d71705a95798b4cbee7e6577d8a290,"DERBY-5239: Remove usages of DriverManager to obtain an Embedded Connection in Derby Server

Patch contributed by Ed Costello <edward.costello@orionhealth.com>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1126468 13f79535-47bb-0310-9956-ffa450edef68"
36b4df9896f616bb442adb88bbe3fab8e7130626,"DERBY-5247: Warnings regarding XPath displayed when generating JavaDoc 

Primary change is adding java/tools/xml-apis.jar to the classpath when
building JavaDocs to get rid of warnings.
Secondary cleanup changes:
 o renamed jars.extra to jars.javadoc
 o added osgi to jars.javadoc
 o removed definitions/usages for JCC (IBM driver)

Patch file: derby-5247-1b-xpath_javadoc.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1127825 13f79535-47bb-0310-9956-ffa450edef68"
d09782a30ed29943df854166e18052723a3d987c,"DERBY-3870: Concurrent Inserts of rows with XML data results in an exception

Remove the unneeded indirection via SqlXmlExecutor. This reduces the
amount of code and removes one object allocation per row when using an
XML operator.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1127883 13f79535-47bb-0310-9956-ffa450edef68"
6d90df099605674b20a81cb05ca057de84117918,"DERBY-5246: Simplify bytecode generation for concatenation operator


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1127886 13f79535-47bb-0310-9956-ffa450edef68"
016329521332fb2c4530db9d31bf17cda3663a53,"DERBY-4670: ThreadDump class included in insane jars


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1128243 13f79535-47bb-0310-9956-ffa450edef68"
38925e0793c2f0e7380fe5427c48ae795b2ae754,"DERBY-5251: make ErrorCodeTest pass in non-English locale

This change was contributed by Houx Zhang (houx.zhang at gmail.com)

This change modifies ErrorCodeTest to use LocaleTestSetup to
force the test to run in English locale. Since the point of
this test is to test the behavior of syscs_diag.error_messages,
by comparing the contents of the messages to hard-coded English
strings, the test needs to run in the matching locale.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1128942 13f79535-47bb-0310-9956-ffa450edef68"
695493d0e2ea8ae7dccd967043ba7b99acb857d6,"DERBY-5080: Utilize JQL to fetch JIRA issue list for release notes generation

Added JQL functionality, allowing the list of JIRA issues for a release to be
obtained without having to create a JIRA filter manully.
Actived by specifying a JIRA filter id of 0 (zero) when running
'ant genrelnotes'.

Patch file: derby-5080-2a-utilize_jql.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1129117 13f79535-47bb-0310-9956-ffa450edef68"
2bbd830d784c846320fff0ea72ad3d53733e1fe7,"DERBY-5080: Utilize JQL to fetch JIRA issue list for release notes generation

Added knob 'reportDisqualifications' to control whether disqualified issues
are reported or not by the JIRA SOAP tool when invoked through
'ant genrelnotes'. The default is false.

Patch file: derby-5080-3a-report_disqualifications_knob.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1129132 13f79535-47bb-0310-9956-ffa450edef68"
2aa7d95704e701693345856dbb0cddae47c3fc53,"DERBY-4843: Consult isPoolable hint before caching prepared statement 

Added tests to verify that Derby heeds the isPoobable hint before adding a
statement to the cache. The default being true, this mechanism is supposedly
used primarily for avoiding that ad-hoc queries ""pollute"" the cache.
Only the client driver has a JDBC statement object cache.

Patch file: derby-4843-2a-test_isPoolable.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1129136 13f79535-47bb-0310-9956-ffa450edef68"
6e61723eaca1f07ae73b1a2c30d5df373823e8bd,"DERBY-5233 Interrupt of create table or index (i.e. a container) will throw XSDF1 under NIO - connection survives

Patch DERBY-5233-2: The patch makes RAFContainer, when seeing an
interrupt exception during container creation, close it down and try
again, up to MAX_INTERRUPT_RETRIES times. Since RAFContainer should
work also under CDC/Foundation 1.1, the exceptions are checked using
reflection (NIO classes are excluded there).

I also adds a new test case to InterruptResilienceTest:
testCreateDropInterrupted.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1129764 13f79535-47bb-0310-9956-ffa450edef68"
c8e30301d136be24b7ad9b2b4d60c9a000c9d2fe,"DERBY-5243 assert failure in test testRAFReadWriteMultipleThreads: interrupted flag cleared

Patch DERBY-5243-1: It moves the setting of the interrupted flag to
just before CONN_INTERRUPT exception is thrown as an SQLException back
to the user application, i.e. as late as possible. Previously, we set
the interrupted flag when we first threw the internal
StandardException. The new placement means that we are done with IO to
derby.log which may be behind the problem we are seeing on older
VMs. I ran the new version 100 times on Linux/JDK 5 without seeing the
error, which previously appeared in ca 20% of the runs.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1129797 13f79535-47bb-0310-9956-ffa450edef68"
8b6fe4c149e326cb958349a2e378e812424c7744,"DERBY-5253: Engine code references org.apache.derby.shared.common.sanity.SanityManager

Replaced references to common.sanity with iapi.services.sanity.

Patch file: derby-5253-1a-engine_imports.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1130077 13f79535-47bb-0310-9956-ffa450edef68"
8bb375a6c000c08f48cfbc7237ec211900b3d657,"DERBY-4669: ClassLoaderBootTest fails if derbyclient.jar comes before derby.jar on the classpath

Unsealed package org.apache.derby.iapi.services.sanity

Patch file: derby-4669-2b-unseal_iapi_sanity.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1130084 13f79535-47bb-0310-9956-ffa450edef68"
ab49fa3c6544d58d2573696c47c8b6a3091c8cb9,"DERBY-5254: Unreserve the keywords which were added as part of implementing sequences.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1130127 13f79535-47bb-0310-9956-ffa450edef68"
94d3c58fa4bcc7b4f0905c55619beeee3b0d83c4,"DERBY-5249 A table created with 10.0.2.1 with constraints cannot be dropped with 10.5 due to NullPointerException with insane build or ASSERT FAILED Failed to find sharable conglomerate descriptor for index conglomerate with sane build

Add a test for this issue. The test xtestDropTableAfterUpgradeWithConstraint()
is not currently enabled because the issue is not yet fixed. 
Remove the x to enable the test once the issue is fixed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1130632 13f79535-47bb-0310-9956-ffa450edef68"
76ab359c75beb8c4de65e0c3292f2a18d5f1d04a,"DERBY-4795 Starting network server with -ssl turns SSL off

Fixes silently taking -ssl without arguments whilst keeping SSL mode disabled.

After this patch, with the -ssl switch a mode must be specified. Otherwise an error is shown.

Contributed by Siddharth Srivastava <akssps011@gmail.com>



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1130743 13f79535-47bb-0310-9956-ffa450edef68"
6f271b4bcca9f126632aee43c3e144061773c08d,"DERBY-1482/DERBY-5121

Rick Hillegas contributed a trigger test for DERBY-1482/DERBY-5121. With revision 1125453, that test was added to Changes10_8 but this test really is applicable for upgrades from all releases and should not be added into a specific version upgrade test. As a result, I am moving the test from Changes10_8.java to BasicSetup.java. This will ensure that the trigger test will get run for upgrades from all previous releases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1130895 13f79535-47bb-0310-9956-ffa450edef68"
67790a0ed8acd00d35026e4bbbae8a454dbc252e,"DERBY-5256: Improve error reporting in common.sanity.AssertFailure 

Added more specific error reporting, and fixed code that could result
in an NPE under some circumstances.

Patch file: derby-5256-1a-error_reporting.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1130964 13f79535-47bb-0310-9956-ffa450edef68"
472a1aad86401e309c86b7711b16ffab6604088d,"DERBY-5097: testMTSelect(org.apache.derbyTesting.functionTests.tests.store.AutomaticIndex StatisticsMultiTest)junit.framework.AssertionFailedError: failed to get statistics for table MTSEL (#expected=2, timeout=0) on AIX IBM JDK 1.5

Added timeout to the system table query logic to stop the test from failing
when the index statistic worker thread is starved. A starved worker thread
won't be able to update the statistics soon enough in this test case, so we
give it some time to do its thing after the test query threads have stopped.

Patch file: derby-5097-1a-add_timeout.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1131030 13f79535-47bb-0310-9956-ffa450edef68"
8d26b674cfd832cc4fc1e6ec5d9b8565965d5a49,"DERBY-5249 A table created with 10.0.2.1 with constraints cannot be dropped with 10.5 due to NullPointerException with insane build or ASSERT FAILED Failed to find sharable conglomerate descriptor for index conglomerate with sane build



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1131272 13f79535-47bb-0310-9956-ffa450edef68"
5fc727cafe09dd22c41e484b7f50dccc3a35e704,"DERBY-3870: Concurrent Inserts of rows with XML data results in an exception

Allow databases that contain triggers with XML operators to be
upgraded from a version without the fix for this issue to a fixed
version. It used to fail because it couldn't deserialize the old plan
for the trigger. Fix it by not trying to deserialize the plan before
invalidating it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1132546 13f79535-47bb-0310-9956-ffa450edef68"
87baa3051c5c87027feb611528f6bd99bcad62f9,"DERBY-5145: Provide option to limit compatibility test to combinations that include trunk


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1132648 13f79535-47bb-0310-9956-ffa450edef68"
eba8dff7a9b7aaef71825faef8b504e70f5ba692,"DERBY-1482

Giving the upgrade tests in Changes10_8 a little more thought, I feel that the more appropriate place for the tests will be in upgradeTests.BasicSetup. The reason for this is that the tests are creating triggers and testing the results when they get fired. This kind of testing is not unique to any particular Derby release and hence it is better for them to go in BasicSetup to make sure that the results are consistent between various phases of upgrades. We do already know that because of the bug DERBY-5121, the results will be incorrect in 10.7.1.1 and the test is verifying those incorrect reulsts for 10.7.1.1. Based on this, I am putting these set of trigger tests in BasicSetup.java This makes Changes10_8.java to have no tests left in it and hence we can delete Changes10_8.java from svn.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1132664 13f79535-47bb-0310-9956-ffa450edef68"
45b5ae15c510de0a2e16de19fc1719d58d308b6c,"DERBY-5258

Fixing row level btree postcommit reclaim space to hold latch until end
of the internal transaction.  Before this fix there was a very small window
(a few instructions) between the release of the latch and the commit of the
transaction where another transaction could access the page, insert rows,
and if a crash happens cause the undo of the purges of the reclaim space work
to fail.

It is proposed that this is what caused DERBY-5248, but without a repro it
can't be proved.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1132711 13f79535-47bb-0310-9956-ffa450edef68"
fff8cb7aeb3e15c035999b6af3f9ed075af36067,"DERBY-5014 Tests should restore the timeout values to default after they are done running.

Fixed one test that was not restoring the timeout value.

Contributed by Siddharth Srivastava <akssps011@gmail.com>



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1132747 13f79535-47bb-0310-9956-ffa450edef68"
73122ce1e5e46b10cb7d7cd3b66ea20fa6fd2465,"DERBY-5262: Running JUnit tests with Java 1.4.2 fails if the package private tests are on the classpath 

Check that the running JVM can support Java 1.5 class files before trying to
load the package private file (which are compiled with Java 1.5) when setting
up the security manager for tests.

Patch file: derby-5262-1a-secmansetup_check_class_version.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1132860 13f79535-47bb-0310-9956-ffa450edef68"
b317a06bead7e8bd8be289f770f9a3914d7e3eed,"DERBY-5263: xmlTestTriggerWithXMLOperators fails with java.lang.NoSuchMethodError

Skip the post soft upgrade phase if the old version suffers from DERBY-4835.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1132928 13f79535-47bb-0310-9956-ffa450edef68"
5f5bc5fbe818d3a7fe89c132d93666788b510349,"DERBY-5260 Remove unused ""replace"" argument to backup variant of StorageFactoryService#saveServiceProperties

The patch ""saveServiceProperties-1"" removes redundant code.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1133123 13f79535-47bb-0310-9956-ffa450edef68"
8129b86150f6411f62d22e661a96a288a4030b77,"Fixed javadoc warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1133273 13f79535-47bb-0310-9956-ffa450edef68"
ee17158fb5974783fcc9a39c63b3ff6897c78642,"DERBY-5108: Intermittent failure in AutomaticIndexStatisticsTest.testShutdownWhileScanningThenDelete on Windows 

Shut down the istat daemon thread at an earlier stage when the database is
being shut down (user initiated or due to a severe error). This should avoid
the problem where file containers are reopened by the istat daemon after the
container cache has been shut down.

Patch file: derby-5108-2a-early_istats_shutdown_broad.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1133304 13f79535-47bb-0310-9956-ffa450edef68"
764b3a0f4cad638df8d51cf125e2fb9889305a3b,"DERBY-5108: Intermittent failure in AutomaticIndexStatisticsTest.testShutdownWhileScanningThenDelete on Windows 

Adjust the istat log message if the scan is aborted.

Patch file: derby-5108-3a-istat_log_abort.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1133317 13f79535-47bb-0310-9956-ffa450edef68"
d92291d863e427d30af8d0bc70b808241198ecd4,"DERBY-5097: testMTSelect(org.apache.derbyTesting.functionTests.tests.store.AutomaticIndex StatisticsMultiTest)junit.framework.AssertionFailedError: failed to get statisti cs for table MTSEL (#expected=2, timeout=0) on AIX IBM JDK 1.5

Increased timeout to the test from failing on loaded/slower machines.

Patch file: derby-5097-2a-increase_timeout.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1133741 13f79535-47bb-0310-9956-ffa450edef68"
f1de50229abf3f8f9f0dab1b3dc3ecdb1a0316b8,"DERBY-4669: ClassLoaderBootTest fails if derbyclient.jar comes before derby.jar on the classpath 

Replaced an import of iapi.sanity.SanityManager in a client class.
Imported shared.common.SanityManager in JVMInfo (class included in both
derby.jar and derbyclient.jar).
Unsealed package org.apache.derby.shared.common.sanity.

Patch file: derby-4669-3a-unseal_common.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1133752 13f79535-47bb-0310-9956-ffa450edef68"
f1512cddf893df13cf9b9baac6261ca24a58502b,"DERBY-5252: make GrantRevokeTest pass in non-English locale

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This change adjusts 4 places in the test to compare the actual
error message text only if the test is running in the English locale.

This enables the test to pass when run in non-English locales, while
also preserving the error message text validation for runs of the
test in the English locale.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1134139 13f79535-47bb-0310-9956-ffa450edef68"
0be8cb5366ea646682c203026357c3f37afccd93,"DERBY-1482

This commit adds a new test case which creates a table with LOB column and insets large data into that column. There is a trigger defined on this table but the trigger does not need access to the LOB column. In 10.8 and prior releases, even though we don't need the LOB column to execute the trigger, we still read all the columns from the trigger table when the trigger fired. With 10.9, only the columns required by the firing triggers are read from the trigger table and hence for our test here, LOB column will not be materialized. In 10.8 and prior releases, the trigger defined in this test can run into OOM errors depending on how much heap is available to the upgrade test and hence the test will make sure that we do not fire the trigger is 10.8 and lower. But in 10.9 and higher, OOM won't happen for this test because LOB is never read into memory because it is not needed for the firing trigger.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1134467 13f79535-47bb-0310-9956-ffa450edef68"
729be573f884af9d6e4235ba78cf1b07c42d9173,"DERBY-4437: Replace old identity generator with a new, pre-allocating sequence generator.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1135226 13f79535-47bb-0310-9956-ffa450edef68"
86fd4054bb415468566d77b72dbc364d8822c0b7,"DERBY-3913 mismatch between error XCL30 and 22003.S.4 and parameters in usage

22003.S.4 had incorrect number of parameters in messages.xml, this commit fixes that.

XCL30 was not getting used correctly in Lob.java, this commit fixes that.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1135383 13f79535-47bb-0310-9956-ffa450edef68"
9c20c50b1cd75f3b0fd2ba519b05fa31b65f1552,"DERBY-3913: Link to the IOException instead of passing it as a message argument

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1135404 13f79535-47bb-0310-9956-ffa450edef68"
e39eee71b548e344dc291b99258010f6700c63e1,"DERBY-5267: Shut down engine for old versions in upgrade tests to save memory


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1135432 13f79535-47bb-0310-9956-ffa450edef68"
735e4a04c4c823c639da809e1bf7941439b078e7,"DERBY-5275: Remove empty, unused methods in client/am/Lob.java

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1135545 13f79535-47bb-0310-9956-ffa450edef68"
e7f58356465039fde04844a7b3a8d725d02f8810,"DERBY-5215: Check in message localizations for message changes introduced by 10.8.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1135568 13f79535-47bb-0310-9956-ffa450edef68"
fe9e3d4141e4917e67ecd7c18cc8cd1b2443db27,"DERBY-4437: Add tests for the generator-based identity columns: ALTER TABLE, bulk import, and deferred INSERT.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1135754 13f79535-47bb-0310-9956-ffa450edef68"
f81766adc000fe0436072aac589aa5f64a11f118,"DERBY-5269: Remove unused methods getSocketAndInputOutputStreams and checkAlternateServerHasEqualOrHigherProductLevel in NetConnection 

Removed unused methods getSocketAndInputOutputStreams and
checkAlternateServerHasEqualOrHigherProductLevel.

Patch file: derby-5269-1a-remove_methods.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1135976 13f79535-47bb-0310-9956-ffa450edef68"
1a9506381099fd5e494be0f522ad23f0450c6c04,"DERBY-4089: It should be possible to run unit tests right after ""ant all"" 

Automatically set the classpath for the various junit targets in build.xml
(doesn't happen if derby.junit.classpath is set by the user). Order of
preference for the various build artifacts:
 o insane jars
 o sane jars
 o classes-directory

An informational printout will tell which build artifacts are being used.

Patch file: derby-4089-1b-set_classpath.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1136011 13f79535-47bb-0310-9956-ffa450edef68"
6e000cc9caeb748a08e05f05901449ec1f744e20,"DERBY-4437: Add upgrade/downgrade test for new identity machinery.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1136036 13f79535-47bb-0310-9956-ffa450edef68"
849dab23716628f0fab2e4cba1e667cebe3266d7,"DERBY-4137: OOM issue using XA with timeouts 

Reduce the memory footprint when executing successful XA transactions that
have a timeout set by nulling out the reference to the XATransactionState
object in the timer task. The timer task will stay around in the timer queue
until reaching the scheduled time - even if the task is canceled.
Added a regression test (run as part of 'ant junit-lowmem').

Patch file: derby-4137-2a-reduce_memory_footprint.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1136363 13f79535-47bb-0310-9956-ffa450edef68"
e43e7e2dea7ec3c7347c96d4a9c8cac20cdfe369,"DERBY-5274: getColumns() doesn't work with auto generated identity
columns that start with large numbers

Removed hard-coded maximum length for the start value and increment in
the meta-data query.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1136371 13f79535-47bb-0310-9956-ffa450edef68"
4a5ad8e16706b6bf4c4ca1a0730b3b4af436d81b,"DERBY-5239: Remove usages of DriverManager to obtain an Embedded Connection in Derby Server

Remove import of DriverManager now that it's not used.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1136397 13f79535-47bb-0310-9956-ffa450edef68"
631e46c99b2daebc266f4b7ba0a9626949a1b81b,"DERBY-5278: AssertionFailedError in IndexSplitDeadlockTest.testBTreeForwardScan_fetchRows_resumeAfterWait_unique_split()

Made synchronization between threads more reliable with wait/notify instead of sleep.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1136844 13f79535-47bb-0310-9956-ffa450edef68"
f121a69cab9574207dcb5ea4e8485cb167991c41,"DERBY-5217: make ImportExportIJTest pass in non-English locale

- Reset IJ's locale between each ScriptTestCase

- Create fresh database for ImportExportIJTest to make it pick up
  the new locale

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1137213 13f79535-47bb-0310-9956-ffa450edef68"
faaf4641ebdb179a817a37f5042213b0c788200f,"DERBY-5156: convert store/longColumn.sql into junit test case

This patch was contributed by Houx Zhang (houxzhang at gmail dot com )

The new test program LongColumnTest.java is added to the source tree,
and is listed in store._Suite.java; the old longColumn.sql, longColumn.out,
longColumn_derby.properties are removed, and longColumn.sql is de-listed
from storemats.runall.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1137258 13f79535-47bb-0310-9956-ffa450edef68"
b0238434217dbb60f85b20b0cb92561e0ad3ff8b,"DERBY-4437: Reclaim unused sequence/identity values on orderly shutdown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1137985 13f79535-47bb-0310-9956-ffa450edef68"
0f4411b472daf80b34aa71018e76a2b3b59f7074,"DERBY-5286: Remove or update tools/ide/netbeans directory

Switched from two NetBeans projects to one and updated the classpath,
source level and formatting settings.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138000 13f79535-47bb-0310-9956-ffa450edef68"
e5d2c212d34e77011dd3627f4e9e9a6fdb4947a8,"DERBY-5286: Remove or update tools/ide/netbeans directory

- Set output directory and javadoc directory.

- Added debug targets for ij and network server.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138039 13f79535-47bb-0310-9956-ffa450edef68"
51beb8110b47580f68661f9014adf3e9c9b2bfa8,"DERBY-5288; running multiple suites.All concurrently should be possible
  Modifying SpawnedProcess.java to not run the streamReader with MIN priority,
  and to do a join before returning the output.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138201 13f79535-47bb-0310-9956-ffa450edef68"
b1043a6ab10c58057ca3678f26536b7674fa13f9,"DERBY-5284 A derby crash at exactly right time during a btree split can cause a corrupt db which can not be booted.

Fixed a problem during BTREE split.  The first phase of btree split sees
if it can reclaim space from committed deleted rows.  If it finds any
it purges these rows in a nested internal transaction.  It needs to hold
the latch on the page until end of transaction, but did not.  This allowed 
a very small window of a few instructions where another insert could use
the space on the page and then a system crash could cause the purges to undo
but fail due to the insert.

The fix was to hold the latch and let commit release it.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138275 13f79535-47bb-0310-9956-ffa450edef68"
c0091b3ff54eebbff592d3c9cf75d58c84031d56,"DERBY-5291: test failure: NullPointerException with J2ME (weme 6.2) in testDerby4137_TransactionTimeoutSpecifiedNotExceeded(org.apache.derbyTesting.functionTests.tests.memory.XAMemTest)

Disabled test case for DERBY-4137 on platforms that don't support XADataSource.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138341 13f79535-47bb-0310-9956-ffa450edef68"
311ee54c3653704621159a9852a313b25b8dedda,"DERBY-4437: Make the allocation of sequence/identity ranges pluggable.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138434 13f79535-47bb-0310-9956-ffa450edef68"
2949b9fb0d017a20c7c4293e73889992c2ee8164,"DERBY-3689: 'PrivilegedActionException: javax.management.InstanceNotFoundException' in '*(VersionMBeanTest / NetworkServerMBeanTest)'

Register MBeans before starting the client thread so that the MBeans
can be accessed by the tests once they detect the network server is
up and running.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138444 13f79535-47bb-0310-9956-ffa450edef68"
3d64085062641086d6d20c378d59d953e34c7b63,"DERBY-5277 Intermittent OutOfMemoryErrors in BasicSetup.testTriggersWithLOBcolumns()

Disabling testTriggersWithLOBcolumns() for now until we have resolved the jira.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138686 13f79535-47bb-0310-9956-ffa450edef68"
42114dab63f911bc867790296d4409d84379c4a5,"DERBY-5280: Large batch of DDL in a database procedure dies on a transaction severity error

Backed out the fix for DERBY-5161 since it's causing a regression and
shouldn't be needed after DERBY-5157.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138787 13f79535-47bb-0310-9956-ffa450edef68"
df02986bfb583974360dbffb8476ac10c8a92611,"DERBY-5288: running multiple suites.All concurrently should be possible

Wait for the threads that read stdout and stderr to finish before trying
to fetch the output from SpawnedProcess.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1138795 13f79535-47bb-0310-9956-ffa450edef68"
0f64b702033f94ed87d2edb01ed898e3b247d0b6,"DERBY-5289 Unable to boot 10.5.1.1 database - fails during soft/hard upgrade process for a new version number while trying to drop jdbc metadata

Checking testcase for DERBY-5289. In trunk theDERBY-3870 fix contributed by Knut Anders Hatlen fixed the issue so no code change is needed. Just the portion of DERBY-3870 that is relevant to DERBY-5289 will be backported to the other branches.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1139449 13f79535-47bb-0310-9956-ffa450edef68"
d9a720b296eba5fdea4c37ff5d2b15287663b2bd,"DERBY-4779: Commit patch contributed by Siddharth Srivastava which eliminates an NPE caused by the interaction of generated columns and triggers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1140222 13f79535-47bb-0310-9956-ffa450edef68"
3bfec452eebaa745a28a65d1f56e665735cef739,"DERBY-5304: Add signum function to GeneratedColumnTest so that a newly added test case should run on all platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1140744 13f79535-47bb-0310-9956-ffa450edef68"
7405b1747e5eea4737cac76d23d16a95d104d2a1,"DERBY-5286: Remove or update tools/ide/netbeans directory

Make the NetBeans project build the jar files to make it easier to add
it as a dependency in other NetBeans projects (typically for debugging).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1140995 13f79535-47bb-0310-9956-ffa450edef68"
ccb1894d57959ea842bc6d2dffbb1e36f07c8def,"DERBY-5293: Replace bubble sort in DataDictionaryImpl and CreateTriggerNode with Collections.sort()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1141005 13f79535-47bb-0310-9956-ffa450edef68"
04d93b660ca38851cf097a882cceb316856309d9,"DERBY-5282: Convert store/RowLockBasic.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch replaces tests/store/RowLockBasic.sql with RowLockBasicTest.java.

The new JUnit test is added to the store JUnit suite, while the old sql
test is removed from the storemats test suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1141368 13f79535-47bb-0310-9956-ffa450edef68"
365a7500d3986df4eef1b67fdee2ef021dd3dbe6,"DERBY-4437: Change default length of preallocated ranges for sequences and identities and make this default easy to configure.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1141567 13f79535-47bb-0310-9956-ffa450edef68"
f7c7987545427142e44d75dea0d63855cbc72f67,"DERBY-5282: Convert store/RowLockBasic.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch responds to several review comments by (a) adding some comments,
(b) changing the exception handling in the setUp / tearDown methods, (c) calling
the superclass appropriately, and (d) removing the unneeded save/restore of
the isolation level.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1141769 13f79535-47bb-0310-9956-ffa450edef68"
d8931702e04ed1baf821f7d43b4ec95b04357174,"DERBY-3337 convert jdbcapi/derbyStress.java to JUnit
DERBY-4200 client side OutOfMemoryError running derbnetclientmats:jdbcapi/derbyStress

Convert test to JUnit and also run the finalizer periodically if freeMemory() falls below 500K.  The converted tests is no longer called derbyStress. It is now memory.MemoryLeakFixes and runs with the junit-lowmem target or can be run directly with junit.textui.TestRunner with -Xmx16M.  




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1141924 13f79535-47bb-0310-9956-ffa450edef68"
35067bf65022aa540eaee5606c2220dbf05fce12,"DERBY-4437: Add more upgrade tests for the changes to the behavior of sequences/identities.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1142013 13f79535-47bb-0310-9956-ffa450edef68"
5a56eb0af1a671b6c385bd57777f2a3a386a5203,"DERBY-4275: Query executions fail when compressing a table using SYSCS_UTIL.SYSCS_COMPRESS_TABLE

Move invalidation of dependent statements until the system tables have
been updated with information about the new conglomerates created by
compression or truncation. This is to prevent that statements
executing concurrently get recompiled too early and don't see the new
conglomerates (and therefore fail on subsequent executions because
they cannot find the old conglomerates).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1142583 13f79535-47bb-0310-9956-ffa450edef68"
29ba0c10b3ea39d15014802a1e5e542e33e43cb0,"DERBY-5310: PropertySetter prints warning when building with JDK 7

Make PropertySetter recognize ""Oracle Corporation"" in java.vendor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1142591 13f79535-47bb-0310-9956-ffa450edef68"
581d0421ee4b690702648183aa4b9e996797ab2d,"DERBY-5305 Convert store/updatelocks.sql to JUnit

Patch derby-5305-b, which adds a new test store/UpdateLocksTest to
store._Suite and removes the old harness test updatelocks.sql and its
auxiliary files. The patch also fixes a bug in
JDBC#assertUnorderedResultSet exposed by usage in the new
UpdateLocksTest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1142626 13f79535-47bb-0310-9956-ffa450edef68"
7bfb37a830650117c26abd5b57017557bd2310d5,"DERBY-5292 SQLAuthorisation and views

Patch derby5292d: For views, the premissions collection is disabled
from tables in the query from-list since it should run with definer's
rights. However, this disabling did not work for all cases. The way to
reach all the ""from"" tables has been changed to use a node visitor
instead, so as to be able to also reach tables inside subqueries and
inside explicit JOIN and set operations, cf the repro issues. An added
test case was added to GrantRevokeTest: testViewDefinersRights.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1142635 13f79535-47bb-0310-9956-ffa450edef68"
b9960232a4c31b8e6f53e20c5e9956b12e11884e,"DERBY-5090: Retrieving BLOB fields sometimes fails

Make Derby close open streams obtained from the result set when the next
get-call is invoked (as dictated by JDBC standard). This was done for some
streams, but not all. What happened was also different for the client and the
embedded driver.
Added CloseFilterInputStream (modeled after existing class in the client).
Removed NewByteArrayInputStream, used Java API class instead.

Patch file: derby-5090-1b-fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1142896 13f79535-47bb-0310-9956-ffa450edef68"
348f1e418b72d6064f994ae4e670ccd4d64563c0,"DERBY-5010: bad equivalence check

Fix contributed by Dave Brosius <dbrosius@apache.org>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1143002 13f79535-47bb-0310-9956-ffa450edef68"
1f28163552bf6479f36a7a2266861f5dbf82bf4a,"DERBY-5311: Convert tools/ij4.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch adds a simple JUnit test case which extends ScriptTestCase
and runs ij4.sql. Note that in this situation, we are retaining ij4.sql
and ij4.out, even though we now run them only via JUnit, because we
are testing the behavior of the ij tool itself, and the way it runs
scripts, rather than testing the underlying Derby engine behaviors.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1143062 13f79535-47bb-0310-9956-ffa450edef68"
9fe4f60d9873916fc44c2a95f49c4a788d171e52,"DERBY-5311: Convert tools/ij4.sql to junit

Get system property in privileged block.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1143093 13f79535-47bb-0310-9956-ffa450edef68"
2f43f1692d16c30e40cdc32c4fd72a68191d6fe0,"DERBY-5311: Convert tools/ij4.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch moves the execution of ij4.sql from ij4Test.java to
ToolScripts.java. Improvements in the test harness, and in ij itself,
mean that we no longer need a special test case setup for this script,
so ij4Test.java is deleted from the test tree.

The patch also includes a line to reset maximumdisplaywidth in ij
back to the default setting of 128 at the end of the test, so the
test doesn't disrupt the running of subsequent ij tests.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1143416 13f79535-47bb-0310-9956-ffa450edef68"
42470497daec0f420a17ad754d1a277bf8fae1c7,"DERBY-5305: Convert store/updatelocks.sql to JUnit

Trivial cleanup: removed two unused imports and one unused variable.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1143768 13f79535-47bb-0310-9956-ffa450edef68"
8a7a732ed4dcfbddf4f56a7274043a5bda9fc5ff,"DERBY-5305 Convert store/updatelocks.sql to JUnit

Follow-up patch: commented out the unused debug method ""show"".


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1143939 13f79535-47bb-0310-9956-ffa450edef68"
0b1a784e6f2407b157b7b4cafba0b54ece81f8d6,"DERBY-5303: Convert tools/URLCheck.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch moves the execution of URLCheck.sql from the old derbytools
suite to the ToolScripts JUnit test suite.

The patch includes a modification to the LocalizedResource class in
the tools.jar library to ensure that if getNewOutput is called, then
subsequent uses of OutputWriter send their output to that output stream.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1144123 13f79535-47bb-0310-9956-ffa450edef68"
bdef579690157e3205982cd5f0998dc578f79cea,"DERBY-5314: Enable i18n tests in non-English locales

Run i18n tests regardless of locale. Also remove calls to
LocalizedResource.resetLocalizedResourceCache() in the tests
since that's done by ScriptTestCase after DERBY-5217.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1145057 13f79535-47bb-0310-9956-ffa450edef68"
f89c1b58159e2d66be2f09234fe71bc4dbe4faa7,"DERBY-5316: Unload old JDBC drivers when done with them in the upgrade tests

When we're done with an old version in the upgrade test, deregister all
JDBC drivers in the old version's class loader from DriverManager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1145111 13f79535-47bb-0310-9956-ffa450edef68"
72f9ec3fd9604cfa103801a6d8c28e766557e5bc,"DERBY-5326: Convert tools/ij6.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch moves the execution of ij6.sql from the old derbytools
suite to the ToolScripts.java suite in the tools JUnit suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1145425 13f79535-47bb-0310-9956-ffa450edef68"
c34c1d2fa3ae096342fdfcd5e68a2072cd2f0c84,"DERBY-5316: Unload old JDBC drivers when done with them in the upgrade tests

Clear a ThreadLocal in TableDescriptor after shutting down 10.5 and
10.6 engines. This works around DERBY-4895 which prevents the engine
classes from being garbage collected in those versions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1145552 13f79535-47bb-0310-9956-ffa450edef68"
eb60359d7bdd04e749e033522b927247e3f896b5,"DERBY-5316: Unload old JDBC drivers when done with them in the upgrade tests

Assert that the driver is only unloaded in the affected versions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1145553 13f79535-47bb-0310-9956-ffa450edef68"
7f7477d10552ce4be0369fe53e2c2db796f710f9,"DERBY-5077: [patch] remove non productive instanceof checks

Removed useless instanceof checks.
Made checkColumnOrdering in MergeSort private and rewrote the comment, and
merged two SanityManager.DEBUG blocks.

Patch provided by Dave Brosius (dbrosius at apache dot org), extended by kristwaa at apache dot org.

Patch file: derby-5077-1a-remove_useless_instanceofs.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1145926 13f79535-47bb-0310-9956-ffa450edef68"
4cded8521d05e8bb999a46c3841d93349887a268,"DERBY-5306: Remove dead methods (June 2011)

Removed a set of dead methods.

Patch file: derby-5306-1a-dead_methods.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1145961 13f79535-47bb-0310-9956-ffa450edef68"
e9666094e00449c9bf5651b883c1fe2bb699a688,"DERBY-5316: Unload old JDBC drivers when done with them in the upgrade tests

Added a workaround for DERBY-23.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1145973 13f79535-47bb-0310-9956-ffa450edef68"
acfdb76a2ab5b62850181877544deea6f2afe206,"Fixed incorrect reference in comment.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1146622 13f79535-47bb-0310-9956-ffa450edef68"
840ed3f5e186502cfb131fa306b62e71fbff11ff,"DERBY-5318: Use assertDirectoryDeleted in ReplicationRun and remove dead code 

Use assertDirectoryDeleted to get better error reporting when the test fails
to delete a database directory.
Remove dead code in ReplicationRun and Utils.

Patch file: derby-5318-1a-cleanup.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1146644 13f79535-47bb-0310-9956-ffa450edef68"
95971f27229327b27f8e47f703c257bae79ec88e,"DERBY-5120 Row from SYSDEPENDS gets deleted when a table has update triggers defined on it and an upate is made to the table


This commit moves recording to trigger action sps's dependency on trigger table from create trigger constant action and alter
table constant action to SPSDescriptor. This central location in SPSDescriptor for recording the dependency will take care of 
create trigger, alter table and sps regeneration cases. The checkin also required fixing triggerGeneral.sql because now
that we do not loose the dependency between trigger action sps and trigger table, the change in trigger table always sends
an invalidation signal to it's triggers which causes those triggers to recompile when they fire next time. For triggerGeneral
case, the trigger in question ends up being incorrect(because of alter table add column) and thus would cause the test to fail.
I resolved it by fixing the trigger action.

Additionally, I have added upgrade test case which checks how the trigger invalidation signal are missed prior to this fix
thus not catching incorrect triggers. This test has been disabled for 10.5.1.1, 10.5.3.0, 10.6.1.0 and 10.6.2.1 because those
4 releases do not have DERBY-4835 fix in them. Because of that missing fix, the triggers donot get invalidated as part of
upgrade for those releases and hence the test added by this jira would fail for those 4 releases. To avoid the failure, I have
disabled the test for those 4 releases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1146915 13f79535-47bb-0310-9956-ffa450edef68"
aacc4018692b480f26170a538dc6a3810e535d7e,"DERBY-5120 Row from SYSDEPENDS gets deleted when a table has update triggers defined on it and an upate is made to the table

Missed the master file for the test from earlier checkin



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1146962 13f79535-47bb-0310-9956-ffa450edef68"
e4e2bfd602056aa323d39d604fa82792ced6796d,"DERBY-1903 Convert largedata/LobLimits.java to junit

Initial patch to convert embedded test to JUnit.
derby-1903_embeddedp1_diff.txt converts test to LobLimitsTest.java and adds LobLimitsLiteTest.java which runs the test with smaller lobs. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1147219 13f79535-47bb-0310-9956-ffa450edef68"
7e79794037482734ffa061ee899aaf7f317cf4b0,"DERBY-1903 Convert largedata/LobLimits.java to junit

Just reformatting LobLimitsTest.java. No functional change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1147242 13f79535-47bb-0310-9956-ffa450edef68"
f30426b52921bfbf0e08be4513beb412be662533,"DERBY-1903 Convert largedata/LobLimits.java to junit
DERBY-5308 Investigate if largeData/LobLimits.java can be run for client

Patch derby-1903_client_diff.txt enables client for largedata.LobLimitsLite. It disables the test cases that fail with client:
DERBY-5338 client gives wrong SQLState and protocol error inserting a 4GB clob. Should be 22003

DERBY-5341 : Client allows clob larger than column width to be inserted.

DERBY-5317 cannot use setCharacterStream with value from C/Blob.getCharacterStream

Also fixes the test to fail if we do not get an exception for negative test cases and fixes a javadoc warning.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1147335 13f79535-47bb-0310-9956-ffa450edef68"
09ecd71ca079b61be695d0367721b7f60ccd8d04,"DERBY-5343: Upgrade tests failing with java.lang.IllegalAccessException

Rework the workaround for DERBY-23 added by DERBY-5316 so that it
doesn't attempt to modify final fields. Modifying final fields
doesn't seem to work prior to Java 5.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1148302 13f79535-47bb-0310-9956-ffa450edef68"
08b4ed59083790098516ae47e9dd3140eb0b0d52,"DERBY-5312 InterruptResilienceTest failed with ERROR 40XD1: Container was opened in read-only 

Patch derby-5312-simplify-reopen-1. It fixes the race condition by
reducing the amount of work done under reopening the container, thus
side stepping the issue by no longer updating the state variable that
caused the race.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1148344 13f79535-47bb-0310-9956-ffa450edef68"
b7f22c34f55ee6f42e38607e985ea481aa446775,"DERBY-5325 Checkpoint fails with ClosedChannelException in InterruptResilienceTest

Patch derby-5325a:

With NIO, writeRAFHeader has two methods leading to interruptible IO:
 - getEmbryonicPage
 - writeHeader
 
Currently, getEmbryonicPage may throw InterruptDetectedException and
hence, so may writeRAFHeader.

writeHeader may throw ClosedByInterruptException,
AsynchronousCloseException and ClosedChannelException because
writeHeader does not use RAFContainer4#writePage, but rather uses
RAFContainer4#writeAtOffset, which does not currently attempt to
recover after interrupt.

So currently, clients of writeRAFHeader need to be prepared for all of
InterruptDetectedException, ClosedByInterruptException,
AsynchronousCloseException and ClosedChannelException.

writeRAFHeader is used in three locations:

 - RAFContainer#clean
 - RAFContainer#run(CREATE_CONTAINER_ACTION)
 - RAFContainer#run(STUBBIFY_ACTION)

RAFContainer#clean is prepared for InterruptDetectedException
only. The issue shows that ClosedChannelException may also occur, and
it is not prepared for that (this bug).

RAFContainer#run(CREATE_CONTAINER_ACTION) is prepared for
ClosedByInterruptException and AsynchronousCloseException. Since IO
during container creation is single-threaded, this is sufficient: it
should never need to handle
ClosedChannelException/InterruptDetectedException, both of which
signal that another thread saw interrupt on the container channel.

RAFContainer#run(STUBBIFY_ACTION) is part of the removeContainer
operation which should happen after the container is closed, so it
should be single-threaded on the container as well(?). It should
handle ClosedByInterruptException and AsynchronousCloseException and
do retry, but doesn't, currently.

If we let writeAtOffset clean up just like writePage,
RAFContainer4#writeAtOffset (i.e.also writeHeader) would only only
throw InterruptDetectedException, i.e. another thread saw interrupt,
so retry. This would simplify logic in RAFContainer: we could remove
the retry logic from RAFContainer#run(CREATE_CONTAINER_ACTION). This
could also cover retry logic for RAFContainer#run(STUBBIFY_ACTION) wrt
its use of writeRAFHeader.

Next, RAFContainer#clean is already handling
InterruptDetectedException and would with this change no longer see
ClosedByInterruptException, AsynchronousCloseException or
ClosedChannelException. This should solve DERBY-5325 (this bug).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1148354 13f79535-47bb-0310-9956-ffa450edef68"
a3a31f8189a40c384aeaec35a4e54b042e49b33f,"DERBY-1903 Convert largedata/LobLimits.java to junit
DERBY-5308 Investigate if largeData/LobLimits.java can be run for client

- adds a separate test for the big client run LobLimitsClientTest.
- Adds largedata._Suite which will run first the lite tests and then the full embedded and client.
- Adds LobLimitsLiteTest to sutes.All
- Changes build.xml so that the the property files for the old test will still be copied. The previous change of build.xml accidentally removed this.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1148429 13f79535-47bb-0310-9956-ffa450edef68"
bee1dd5321a84e5de34c4bad13eeccf0d29d55dc,"DERBY-5332: Convert tools/ij3.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This change adds a new test program, ij3Test.java, to the
tools JUnit suite, and removes the old ij3.sql test program
from the derbytools.runall suite.

The purpose of the ij3Test program is to verify that ij can detect
the driver information by examining the ij.database property at startup.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1148590 13f79535-47bb-0310-9956-ffa450edef68"
b8c4379b1707a426251f76817b1d80f09a551a90,"DERBY-5345: URLCheck fails on phoneME

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1148657 13f79535-47bb-0310-9956-ffa450edef68"
a6bc42ec1ac4d3f61029eb5063a33859d708e964,"DERBY-5331: Incorrect use of CharsetEncoder in DDMWriter

Reset the encoder before use and flush when done.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1148658 13f79535-47bb-0310-9956-ffa450edef68"
6708cb9abf2a8ac87a5f9458e01d5303c8b2252d,"DERBY-5346: ij3Test fails on phoneME

Make the test use a data source instead of a connection URL on
CDC/Foundation Profile.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1148687 13f79535-47bb-0310-9956-ffa450edef68"
543e809d28ec4658157a595b948468c63904e859,"DERBY-1903: Convert largedata/LobLimits.java to junit

Force a particular ordering of the test cases since they are not
independent of each other.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1149054 13f79535-47bb-0310-9956-ffa450edef68"
d52bac61a1625dffb3a237ffabe1829e5af499e8,"DERBY-1903: Convert largedata/LobLimits.java to junit

Use framework helper methods to avoid the need for passing connections
as parameters, and to get statements automatically closed.

Close all readers in insertClob2().

Close result sets.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1149090 13f79535-47bb-0310-9956-ffa450edef68"
dfb7573fc455c6d34087f88ef2b44be9e979465a,"DERBY-1903 Convert largedata/LobLimits.java to junit

Move LobLimitsLite from suites.All to suites.AllPackages



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1149270 13f79535-47bb-0310-9956-ffa450edef68"
0f3e1f6e14e4ef485663b1162150a36f8c34a540,"DERBY-1903: Convert largedata/LobLimits.java to junit

Make sure the stream opened by compareBlobToFile() is closed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1149482 13f79535-47bb-0310-9956-ffa450edef68"
8c86e54ca0901d1e59be5aa3f367da7095789721,"DERBY-1903 convert LobLimits.java test to JUnit
Enable updateClob2 test for client and lite configuration. It is still 
disabled for embedded in LobLimitsTest because of 
DERBY-5344 updateClob2 test in LobLimitsTest gets OutOfMemoryError 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1149662 13f79535-47bb-0310-9956-ffa450edef68"
8b4e694eff22a9c63e532260272782eaf18f5bab,"Added a .gitignore file for those who use the Git mirror


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1150106 13f79535-47bb-0310-9956-ffa450edef68"
c851d84ac0fc41d25f73e3c0c55331161025d229,"DERBY-5333 Intermittent assert failure in testInterruptShutdown: thread's interrupted flag lost after shutdown

Patch derby-5333a fixes two instances where we neglected to note that
an interrupt had occured while in a wait call. They were missed during
the first code inspection because they appeared to be part of daemon
code from a superficial inspection, but the code was in fact called by
session threads (for which we expect interrupts).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1151101 13f79535-47bb-0310-9956-ffa450edef68"
b0a89283484329288e432a3872b24af99b4a10bc,"DERBY-5325 Checkpoint fails with ClosedChannelException in InterruptResilienceTest

Patch derby-5325-refactor-b, which refactors redundant code and cleans
up some comments and Javadoc.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1151612 13f79535-47bb-0310-9956-ffa450edef68"
400ea2e052178e05e927e2c6c33a4aaaf7beaf34,"DERBY-5342: make ScriptTestCase support ij properties

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch refactors the ij utilMain class so that the code
that supports the properties:

	- ij.showNoConnectionsAtStart
	- ij.showNoCountForSelect

is extracted into a separate method so that it can be called
from goScript. In addition, ScriptTestCase is modified so that
it sets these properties to 'true' (other test cases may
subsequently set them to 'false' for testing purposes).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1151691 13f79535-47bb-0310-9956-ffa450edef68"
7e177bd81f16f99f9a824c2f0ac962ab02b4a6f2,"DERBY-5342: make ScriptTestCase support ij properties.

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch fixes a bug in SystemPropertyTestSetup. In
SystemPropertyTestSetup.setUp() setProperties() is called, but a property
won't be added into oldValues if the old value equals the new one, yet then
the property will be removed in tearDown() later. 

The patch revises the behavior so that the property is not removed in this
case.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1152371 13f79535-47bb-0310-9956-ffa450edef68"
996fb7378317d8f4a93a08e9a4ba619575ab75ff,"DERBY-5327: Convert tools/ij5.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This change converts the ij5.sql test to the JUnit tools suite. The test
verifies that the ij properties that control displaying the list of
connections at startup, and showing the number of rows selected in a
query, are working properly.

The new ij5.java test is added to the tools JUnit suite, and the old
test is removed from derbytools.runall.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1152796 13f79535-47bb-0310-9956-ffa450edef68"
a7016bf7478d61ca30167f3bd5b9c4ca138f3a54,"DERBY-5352: Commit Brett Bergquist's patch to include org.apache.derby.vti classes in the database jar loader.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1153474 13f79535-47bb-0310-9956-ffa450edef68"
128ee498c1ad693cdd13781129889a57ccaecdae,"DERBY-5368: Convert tools/ij2.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch adds the new ij2Test.java test program to the tools JUnit suite,
and removes the old ij2.sql test program from the derbytools.runall suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1154813 13f79535-47bb-0310-9956-ffa450edef68"
ce63a70bd5d5bba693ae490234991fc909685a9f,"DERBY-5374; converted ij5Test fails with weme6.2 (CDC/Foundation): junit.framework.ComparisonFailure: Output at line 1 expected:<CONNECTION0* - jdbc:derby:wombat> but was:<ERROR XJ004: Database '' not found.>
  skipping the test with JSR169/CDC/Foundation.
  Also correcting a comment.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1155163 13f79535-47bb-0310-9956-ffa450edef68"
2d1bc8fce29d809acbd973770ace90cdce7720e1,"DERBY-5090: Retrieving BLOB fields sometimes fails 

Clean up use of messages when accessing closed objects (mostly streams):
 o remove unused XJ094.S
 o rename J104 to OBJECT_CLOSED.
 o replace uses of XCL53 with J104.
 o remove XCL53

Patch file: derby-5090-3a-change_messages.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1155332 13f79535-47bb-0310-9956-ffa450edef68"
cee7de4b1c8101f41d2b079efc0f062eb2175f0f,"DERBY-5328: Improve the re-entrancy of the NetServlet.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1155367 13f79535-47bb-0310-9956-ffa450edef68"
84e6d1e523aa74f7291ee2c7aaebb50c8e772549,"DERBY-5368; Convert tools/ij2.sql to junit
  Splitting off an section of the test which gives a slightly different output
  with JSR169. Also reinstates ij.database property testing in that section
  of the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1156856 13f79535-47bb-0310-9956-ffa450edef68"
d954835aec7a300a1a2215edc987a80d4d36198c,"DERBY-5271: Client may hang if the server crashes due to a java.lang.Error

Tries to ensure that if the network server crashes due to a condition
raising java.lang.Error, the client socket will be closed on the server
side. Note that even if one of the worker threads crashes, the network
server itself may remain operational. If the JVM process dies, the
sockets will be closed anyway.

Patch file: derby-5271-1a-inital_fix_proposal.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1158108 13f79535-47bb-0310-9956-ffa450edef68"
6659c24a4f5bdab59f8078d9223d3529586f8e20,"DERBY-1903 Convert largedata/LobLimits.java to junit

Remove old harness LobLimits test




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1158768 13f79535-47bb-0310-9956-ffa450edef68"
8f56d99d96fc5ab171a855795bb1096bab3a5f5d,"DERBY-4249 Create a simple store recovery test in JUnit

Contributed by Siddharth Srivastava
Simple test to verify recovery.  
- Connect, create a table, commit and shutdown the database.
- fork a jvm, add one row, commit, add another row, exit the jvm.
- Reconnect with the first jvm and verify that the first row is there and the second is not.

Launches a junit method for forked jvm and reports any errors back.
Currently disabled for weme due to DERBY-4647. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1158949 13f79535-47bb-0310-9956-ffa450edef68"
9b4c5f49a604e1baabb2b618dd1b37b9699c7cd3,"DERBY-4249 Create a simple store recovery test in JUnit

fix missing commas in policy file which caused failures with Sun JVM



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1158982 13f79535-47bb-0310-9956-ffa450edef68"
3b4b552c816f27289ca40946a86c2444b4021a10,"DERBY-4249 Create a simple store recovery test in JUnit

On failure print launched process error stream as well as ouput.
patch derby4249_showlaunchederr_diff.txt




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1159337 13f79535-47bb-0310-9956-ffa450edef68"
c4952068317307671cdfa9fa2675971ad8212d99,"DERBY-4249 Create a simple store recovery test in JUnit

Adjust RuntimeInfoTest to account for the new STDOUT and STDERR tags in readProcessOutput()



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1159511 13f79535-47bb-0310-9956-ffa450edef68"
8f23d8f77e7d8aa34a6fcc3c908a9a3b671e3066,"DERBY-5370: Checkin in Brett Bergquist's patch to make Restriction.toSQL() handle more data types.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1160445 13f79535-47bb-0310-9956-ffa450edef68"
c5a71001e2d3bcba1ab131c71d29d4d8f5191723,"DERBY-5336: Repeated database creation causes OutOfMemoryError 

Clean up context when the daemon is shut down.
Added regression test, more or less copied from patch provided by Aja Walker
(aja at ajawalker dot com).

Patch file: derby-5336-1a-remove_context_on_stop.diff
            derby-5336-2a-regression_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1160593 13f79535-47bb-0310-9956-ffa450edef68"
c4cfed4f5b6d4a0862846efb021a698a6b041bbf,"DERBY-4275: Query executions fail when compressing a table using SYSCS_UTIL.SYSCS_COMPRESS_TABLE

Fail in a controlled fashion (StandardException) if the conglomerate
disappears while binding the FromBaseTable. This used to cause a
NullPointerException.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1160597 13f79535-47bb-0310-9956-ffa450edef68"
324be4f4ac9bc26ac86f431a467d31fcd918a79b,"DERBY-5271: Client may hang if the server crashes due to a java.lang.Error

Added two extra comments.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1160667 13f79535-47bb-0310-9956-ffa450edef68"
91394bf7d1cac2b53560d1e19c7084f08d605ffc,"DERBY-5370: Disable new test case for Restriction.toSQL() on JSR169 platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1160680 13f79535-47bb-0310-9956-ffa450edef68"
0d2a54f39433b594291a42280cc1061e800faeda,"DERBY-5369: Checkin Brett Bergquist's patch to add != to the list of operators supported by restricted table functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1160858 13f79535-47bb-0310-9956-ffa450edef68"
ce62de662cd24ef69f9fc6e763120638ef692b05,"DERBY-4647 BaseTestCase.execJavaCmd() does not work with weme 6.2

Fix execJavaCmd to pass  -jcl:foun11. Enable BootLockTest and RecoveryTest  with weme. Changed BootLockTest to only force the database lock with PhoneME, not weme (j9)




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1161208 13f79535-47bb-0310-9956-ffa450edef68"
38b28475c8187b09d090defcf2b4f20497f34ec9,"DERBY-4785: Remove JCC tests and references to JCC in test code

Remove code to handle JCC and Java 1.3 in the compatibility tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1161422 13f79535-47bb-0310-9956-ffa450edef68"
26de07ed2af23bb2f1db6bcb9b73564c6b9f91fa,"DERBY-5394: Reduce chance of OOME with XAMemTest.testDerby4137_TransactionTimeoutSpecifiedNotExceeded in low memory suite

Execute the test XAMemTest last in the low memory suite because it doesn't
release all of the memory it uses (due to DERBY-4137).

Patch file: derby-5394-1a-execute_last.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1162737 13f79535-47bb-0310-9956-ffa450edef68"
70ff9b0291ab61e78c54d3d3a15977e514503b97,"DERBY-5391: Fix the statement duration and error log reader vtis to handle the new timestamp format which we've been using in Derby logs since 10.7.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1162827 13f79535-47bb-0310-9956-ffa450edef68"
7aa7651239bfe0cfa63cb237d4d2e52176d959db,"DERBY-5236: Client driver silently truncates strings that exceed 32KB

Prepare the network client for the possibility that a column is split
over more than two blocks in the response. This cannot happen until a
fix that makes the server stop sending truncated strings, has been
checked in.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1163131 13f79535-47bb-0310-9956-ffa450edef68"
41e4ad8e29b59a4f5de1cdcb1b50074d866860c7,"DERBY-5396: DRDAStatement and DRDAConnThread swallow IOExceptions


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1163616 13f79535-47bb-0310-9956-ffa450edef68"
431cefd731efd9378ae36d725335033994a53850,"DERBY-5395: Let only the DBO run certain diagnostic vtis.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1163740 13f79535-47bb-0310-9956-ffa450edef68"
a5006ebcedc93d66e490bfb80ea337a7b534c8ac,"DERBY-5301: Convert store/TableLockBasic.sql to junit

This patch was contributed by Houx Zhang (houxzhang at gmail dot com)

This patch replaces the TableLockBasic.sql test with an equivalent
assertion-based JUnit test. The TableLockBasic.sql test is removed
from storemats.runall, and the new TableLockBasicTest.java is added
to the store._Suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1163880 13f79535-47bb-0310-9956-ffa450edef68"
8f874691e1924f2c3c15c23bc8ef311e14f0d2b2,"DERBY-5390: NPE in BasicDatabase.stop in replication slave mode (dd.clearSequenceCaches)

Added check to see if the data dictionary is available.

Patch file: derby-5390-1a_check_for_null.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1164358 13f79535-47bb-0310-9956-ffa450edef68"
6d2e2b6d1732e427c355afa1c2a99a193dd4f3b3,"DERBY-5393: Remove old in-memory database purge mechanism

Removed deprecated functionality.

Patch file: derby-5393-1a.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1164370 13f79535-47bb-0310-9956-ffa450edef68"
c6e42941159534c4cab6d67ba6d89922d5a87e1d,"DERBY-5236: Client driver silently truncates strings that exceed 32KB

Truncate the strings at 65535 bytes instead of 32700 bytes, and make sure
that the truncation happens on a character boundary.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1164495 13f79535-47bb-0310-9956-ffa450edef68"
0ba8d94a5a5b583f8eee3669749d1da057b66498,"DERBY-5402: Assignment instead of comparison in Driver20.getPropertyInfo

Removed incorrect assignment-operation (which always evaluated as true) in
if-statement.

Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1165221 13f79535-47bb-0310-9956-ffa450edef68"
8af5f9e803f330aafdfbd77448611a0d6dba8652,"I am commiting change which include engine changes and upgrade test addition. Will add tests as another checkin

Following is a brief description of the engine changes.
For the table being altered, we will go through the dependency system to determine all the triggers that depend on the table being altered(this will include triggers defined directly on the table being altered and the triggers defined on other tables but using the table being altered in their trigger action plan.) This is done by first finding all the objects that depend on the table being altered. We are only interested in SPSDescriptors from that list of dependent objects. For each of these dependent SPSDescriptor, we want to find if they are defined for a trigger action SPS. If yes, then the trigger must be dependent on the table being altered. For each of these dependent triggers, we dropped their trigger descriptor from datadictionary, regenerate and rebind it's trigger action SPS and then add the trigger descriptor(with upto date version of internal representation of trigger action) back to datadictionary.During the rebind of trigger action, we will get exception if the trigger depends on the column being altered. If so, then if the alter table drop column is being done in restrict mode, then we will throw an exception that column can't be dropped because it has dependent object. If the drop column was issued in cascade mode, then we will drop the dependent triggers.

As part of this commit, I have removed the code which used to go directly through all the triggers defined on the table being altered and dropping, rebinding and recreating them. This is because the new code going through the dependency system should find all the triggers which would be impacted by drop column, no matter whether the triggers are defined on the table being altered or triggers defined on other tables but using table being altered in their trigger action.) DERBY-5120 could have prevented us from catching all the triggers defined on the table being altered through the dependency system because of missing dependency between trigger action sps and trigger table but that has been fixed in 10.9 and 10.8 so we should be fine. I have run all the existing junit suites and derbyall and they ran fine.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1166313 13f79535-47bb-0310-9956-ffa450edef68"
c8986dff1787c21eb52760923be530acd8021090,"DERBY-5398: Use a transient transaction to flush unused sequence values back to disk during orderly engine shutdown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1166859 13f79535-47bb-0310-9956-ffa450edef68"
b8501198b91b857db4dc28fa328245e17fce9cbd,"DERBY-5236: Client driver silently truncates strings that exceed 32KB

Add a java.sql.DataTruncation warning to the result if a string was
truncated.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1167017 13f79535-47bb-0310-9956-ffa450edef68"
d135928b39f86ba43c8568bfc1fa5a1348717f4c,"DERBY-5044 ALTER TABLE DROP COLUMN will not detect triggers defined on other tables with their trigger action using the column being dropped

Adding tests for DERBY-5044. The tests included are
1)Trigger actions with INSERT sql using column being dropped(from a non-trigger table) 
2)Trigger actions with UPDATE sql using column being dropped(from a non-trigger table) 
3)Trigger actions with SELECT from VIEWS with views and trigger action using column being dropped(from a non-trigger table) 
4)Combination of trigger types in the same test ie trigger defined on the table being altered and trigger defined on other tables but using the table being altered in their trigger action 
5)Tests using SYNONYMS
6)In upgrade, triggers who have lost one of their dependency row(DERBY-5120) and see how they work when they are using the table who column is being dropped 
7)In upgrade, triggers using column being altered and show how it is not detected prior to 10.9 
8)Trigger action with SELECT from table using column being dropped from non-trigger table(similar to the VIEWs variation of the test) 
9)Test to check how privileges might affect the trigger recompile by a user who doesn't own the trigger 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1167226 13f79535-47bb-0310-9956-ffa450edef68"
9b3e218ca75d4deff27ec37ba54ba7ffad8bda15,"DERBY-5236: Client driver silently truncates strings that exceed 32KB

Disable the fix when talking to old clients because they may get a
StringIndexOutOfBoundsException if they receive longer strings, and
they also don't know exactly how to handle java.sql.DataTruncation
warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1167470 13f79535-47bb-0310-9956-ffa450edef68"
774b7ed1b29e0cf958aac7bd756aa98aa5c085fa,"DERBY-5236: Client driver silently truncates strings that exceed 32KB

Third argument in call to greaterThanOrEqualTo() should be DRDA
maintenance version, not the third digit in the client's version number.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1169692 13f79535-47bb-0310-9956-ffa450edef68"
d43d3891e219955d7605fa1ac53a6d5550d10618,"DERBY-5408: Add extra parameter to localizations for the exhausted sequence range message.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1170176 13f79535-47bb-0310-9956-ffa450edef68"
0c8f58529655460db3cd05c892ac50323df1c79e,"DERBY-5409: GrantRevokeDDLTest fails under Java 7

Drop created schemas in test cases to prevent interference when
test cases run in a different order than the order in which they
appear in the source file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1170470 13f79535-47bb-0310-9956-ffa450edef68"
9355c131a01181ec20b7493d3348f153d5a08758,"Fixing comments for the tests written for DERBY-5044. The comments don't need to talk in terms of specific Derby release numbers. This will allow us to backport DERBY-5044 changes to 10.8 without having to fix the comments during the backport.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1171227 13f79535-47bb-0310-9956-ffa450edef68"
dc5f56a1d8116af8b21a1181e8508ad094a8ad99,"DERBY-5412: MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStats() fails on phoneME: java.lang.InternalError: Number of class names exceeds vm limit.

BaseTestCase: Added helper method isPhoneME() that checks if the test
is running on a phoneME platform.

OldVersions and lang._Suite: Replaced existing checks for phoneME with
the new helper method.

MemoryLeakFixesTest: Added assertion to verify that database was
successfully shut down. Added manually invoked garbage collection on
phoneME to avoid exceeding internal limit on number of class names.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1171665 13f79535-47bb-0310-9956-ffa450edef68"
38586ad63c510fd6c044d14456de1d6f5229f3e1,"DERBY-5414: SysDiagVTIMappingTest.test_5391() failed: java.text.ParseException: Unparseable date: ""Thu Sep 15 14:00:16 CEST 2011""

Always parse values returned by Date.toString() in US locale.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1171672 13f79535-47bb-0310-9956-ffa450edef68"
11194a8b70305d02a0c5c8a4affe4471b8b2760a,"Added missing closing parenthesis.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1172482 13f79535-47bb-0310-9956-ffa450edef68"
0e5e425ce1c71860c7789ef429f6fa54b6c46a5c,"DERBY-2720: remove dead code associated with unsupported National Char implementation 

Removed dead code.

Patch file: derby-2720-1a-remove_sqlchar_getXFormat.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1172535 13f79535-47bb-0310-9956-ffa450edef68"
132af0165d5f028d8a62b91800c0c2c60f1eaa3d,"DERBY-5389: Make sequence generators' internal state consistent when they clean up after errors.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1172608 13f79535-47bb-0310-9956-ffa450edef68"
e2807b6be464d6fd87f1a5d971514c9d8fd4758a,"DERBY-5418 Network server session's close method neglects to close down any open trace file

Added fix to close any open trace file when a session closes. Patch
derby-5418.diff.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1173446 13f79535-47bb-0310-9956-ffa450edef68"
b3afe2d1c511b9dbd8613b4aa0b81a1513bd6d04,"DERBY-5336: Repeated database creation causes OutOfMemoryError

Replaced a traceit-call with a println-call.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1173647 13f79535-47bb-0310-9956-ffa450edef68"
68c72e702823ecd0022f9c1c56419a5ce3080a62,"DERBY-5426: Improve error message for too much contention on a sequence/identity.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1174290 13f79535-47bb-0310-9956-ffa450edef68"
9a3cbedf016341ac513feb48e67140addf84c308,"DERBY-5367: Stale data retrieved when using new collation=TERRITORY_BASED:PRIMARY feature

Deoptimize code path for BTree insert when updating columns with a collation
different from UCS BASIC. Simply undeleting the existing matching row (marked
as deleted) may be incorrect, because the value stored there can be different
from the key value used for lookup due to the collation.

Added code to track whether a conglomerate contains a collated column or not,
such that the right insert code path can be chosen. The array of collation ids
is scanned when a conglomerate is created, and when a conglomerate is
""restored"" from disk (i.e. readExternal).

Added a test for the new code path (based on the issue report).

Patch file: derby-5367-4c-fix_with_optimization_improved.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1174436 13f79535-47bb-0310-9956-ffa450edef68"
dcfe1642bcf02fed48380ec474363b17ff8e0c1f,"DERBY-5419: Make Derby run on Oracle Java ME Embedded Client

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1174646 13f79535-47bb-0310-9956-ffa450edef68"
355491623ea7a013a955c28611c489a823c00ef0,"DERBY-5406: Intermittent failures in CompressTableTest and TruncateTableTest

Detect if a statement is invalidated while it is being recompiled and
retry the compilation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1175785 13f79535-47bb-0310-9956-ffa450edef68"
df381dd037d135ef324287d17b3d2c47cfd13cad,"DERBY-5406: Fixed typo in comment

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1176256 13f79535-47bb-0310-9956-ffa450edef68"
dc43cf84280752386d5e2706e46665997cb672e9,"DERBY-5363 Tighten default permissions of DB files with >= JDK6

Patch derby-5363-full-5 implements the ability to restrict file
permission of newly created directories and files beyond the default
access (cf. umask on Posix file systems and similar on NTFS), i.e. to
the account creating the file.  This behavior is controlled by a
property, ""derby.storage.useDefaultFilePermissions"", cf the release
notes attached to issue.  By default the property is true, i.e. gives
the existing (lax) behavior on embedded and with the network server if started
via the API.  If the server is started from the command line, the
new restrictive permissions apply by default.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1176591 13f79535-47bb-0310-9956-ffa450edef68"
df9ed37da1229ad3b475c4e371dcfcc3fae17692,"DERBY-5420 Regression suite appears locale sensitive: failed in TableLockBasicTest: bug in RealBasicNoPutResultSetStatistics

Patch derby-5420-2 changes the way the localization of the floating
point numbers is done for RealBasicNoPutResultSetStatistics to use an
explicit decimal format in the localized message text itself. When the
double argument is henceforth filled in, the locale is already set
correctly (in MessageBuilder), so the the decimal point/comma will be
chosen correctly according to locale.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1176633 13f79535-47bb-0310-9956-ffa450edef68"
53c9376b52849954bb3f94e29bdbf8eec0ea34a6,"DERBY-5420 Regression suite appears locale sensitive: failed in TableLockBasicTest: bug in RealBasicNoPutResultSetStatistics

Follow-up patch, removes an unused import.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1176636 13f79535-47bb-0310-9956-ffa450edef68"
94ebd3b3d948afa92fe3f41f9887cbc387ba7344,"DERBY-5363 Tighten default permissions of DB files with >= JDK6

Follow-up patch: javadoc fixes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1176647 13f79535-47bb-0310-9956-ffa450edef68"
1856e580d694cd26c18a34666058d66e9358568a,"DERBY-5434 On linux with IBM JDK 1.7 suites.All does not run at all failing with java.lang.reflect.InvocationTargetException

This patch does not fix the problem but skips adding engine.RestrictiveFilePermissiionsTest to the suite with IBM 1.7, so that other tests can run



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1177146 13f79535-47bb-0310-9956-ffa450edef68"
8ee7b83d09ef3f81b145a5cb033134d459ff46e5,"DERBY-5413 NetworkServerControl#main can exit with status 1 without printing an error message to console

Patch derby-5413, which makes sure the server doesn't die silently
even if the debug flag has not been set.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1177324 13f79535-47bb-0310-9956-ffa450edef68"
3d7c2eab93c0d51ab45bb2704052a71ff42bc1be,"DERBY-5421;  NullPointerException during system.nstest.utils.Dbutil.update_one_row
	merging 1177446 from 10.8 to trunk


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1177475 13f79535-47bb-0310-9956-ffa450edef68"
e0970c6f708444a0e1137b052c68256398937f57,"DERBY-5413 NetworkServerControl#main can exit with status 1 without printing an error message to console

Undo the patch for this issue, turned out to be mistaken, cf explanation on issue.
It lead to unwanted protocol output in some cases.

svn merge -r 1177324:1177323  https://svn.apache.org/repos/asf/db/derby/code/trunk



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1177482 13f79535-47bb-0310-9956-ffa450edef68"
04c92ef6da1f4afbb23dd5be5211062991f7a6c7,"DERBY-5438: Empty MAPS table in toursdb

- Let insertMaps.main() throw exceptions instead of just printing them
  to make errors stop the build

- Change URL in insertMaps to match the URL in build.xml

- Change directory for the process running insertMaps so that it finds
  the gif files

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1177589 13f79535-47bb-0310-9956-ffa450edef68"
8bdf7afe828e9b96786a98c67f9e97316ae9c240,"DERBY-5363 Tighten default permissions of DB files with >= JDK6

Patch derby-5363-followup, which adds a missing accessController block
around setting the system property
SERVER_STARTED_FROM_CMD_LINE. Without the patch, this would fail if
running with a security manager specified on the command
line. 

If the property permission is missing, the error is printed
unconditionally and exit(1) from main is taken. Cf. DERBY-5413 which
tried another (aborted) approach to make sure it got printed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1177718 13f79535-47bb-0310-9956-ffa450edef68"
88777c56b473a6ef9870667895e74329d7a68074,"DERBY-1046 JVMInfo is duplicated in derbyclient.jar

DERBY-5431 If 10.7 or greater derbyclient.jar is in the classpath before an older release's server jars, derby fails to boot with NoSuchFieldError for JVMInfo.JAVA_SQL_TYPES_BOOLEAN 

DERBY-5439 Remove JRE / JDBC line from sysinfo

JVMInfo now lives only in derby.jar. Removing the JRE / JDBC line is only a trunk soltion. In 10.8 we kept the duplicate code.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1177776 13f79535-47bb-0310-9956-ffa450edef68"
a6026ca86d4175d28351a45ddd8affe18270f26f,"DERBY-5363 Tighten permissions of DB files to owner with >= JDK7

Patch derby-5363-followup-linux.

RestrictiveFilePermissionsTest for this feature broke on some
platforms (thanks to Kathey for noticing). Apparently, the ACL view of
Posix file system permissions is not available for all Unix/Linux
versions in JDK 1.7 (I had tested on Solaris 11 and Windows). The
changes in the test now fall back on using
PosixFileAttributeView#readAttributes if the ACL view is not
available.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1179042 13f79535-47bb-0310-9956-ffa450edef68"
c2f2981d484db9d08048e3078315d0e2497ccdee,"DERBY-5363 Tighten permissions of DB files to owner with >= JDK7

Javadoc fix to RestrictiveFilePermissionsTest.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1179282 13f79535-47bb-0310-9956-ffa450edef68"
a65a5980325abb5b08a7ee2cb32ea6c0122ad33c,"DERBY-5363 Tighten permissions of DB files to owner with >= JDK7

Patch derby-5363-limit-to-java7b, which limits the default restrictive permission
for the network server further: only on Java 7 or higher.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1179320 13f79535-47bb-0310-9956-ffa450edef68"
db26d0a66d48721c715b45c7a234f571d016b458,"DERBY--5445 (Enhance existing concurrency test to stress sequence generators to also stress identity columns)

DERBY-4565 added a concurrency test to stress sequence generation. I am making simple modifications to that test to add	identity column stress testing. Based on a command line parameter, the test will either do sequence generation testing or identity column testing. If no parameter is specified, it will default to doing sequene generation testing.

The test already takes number of parameters. One of those parameters is load options parameter. Load option parameter is indicated by -load_opts on command line and it is followed by a comma separated list of sub-parameters. An eg of load option parameter is as follows
-load_opts debugging=1,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100
I am adding another pair to the comma separated sub-parameters,namely identityTest=aNumber. If identityTest is 1, then the test will do identity column stress testing. For any other value for identityTest, the test will do sequence generation testing. If the user doesn't specify identityTest in load options, the test will perform sequence generation testing. 

eg of asking the test to do identity column testing
java org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=1,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=1 -gen b2b -threads 10

Two possible way of asking the test to do sequence generation testing(identityTest set to a value other than 1 or identityTest is not specified)
java org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=1,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100,identityTest=2 -gen b2b -threads 10
OR
java org.apache.derbyTesting.perf.clients.Runner -driver org.apache.derby.jdbc.EmbeddedDriver -init -load seq_gen -load_opts debugging=1,numberOfGenerators=5,tablesPerGenerator=10,insertsPerTransaction=100 -gen b2b -threads 10

When I run the test for identity columns, I can consistently see it running into derby lock time out with nested sequencec contention error while trying to get current identity value and advancing(this is what we want to achieve from the test ie that it is able to stress the functionality enough to run into contention while trying to get next range for identity columns.) Additionally, there are some lock time out errors raised by store while trying to update system catalog(this is expected too because of multiple threads simulataneously trying to do inserts into a table with identity column). I also in my codeline reverted to changes before DERBY-5426 (DERBY-4526 is Improve the error raised by too much contention on a sequence/identity.) was fixed and saw sequence contention errors (without the lock time out error encapsulation).




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1179374 13f79535-47bb-0310-9956-ffa450edef68"
859720d8872924b5e304c4f26374d78b84199719,"DERBY-5444: SpawnedProcess.complete may fail to destroy the process when a timeout is specified

Rewrote loop logic to ensure that the process is destroyed when a timeout is specified and exceeded.

Patch file: derby-5444-1c-destroy_on_timeout.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1179546 13f79535-47bb-0310-9956-ffa450edef68"
0216b53b5473b6287d7dcdc17bb2140051699188,"DERBY-5437: Load all toursdb tables in one invocation of ij

- Execute all scripts in a single invocation of ij.

- Make toursdb.insertMaps shut down the database cleanly so that a
  final invocation of ij to perform recovery and clean the logs isn't
  necessary.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1179786 13f79535-47bb-0310-9956-ffa450edef68"
ff249585f82a397c3692e9996b54ff9ae140e9c9,"DERBY-5363 Tighten permissions of DB files to owner with >= JDK7

Patch derby-5363-followup-unix.

It turns out there is no guarantee the the underlying file system
supports ACLs even though Files#getFileAttributeView called with
aclFileAttributeViewClz.class as an argument returns an object. We
also need to call the method:

     FileStore#supportsFileAttributeView(AclFileAttributeView.class)

to ascertain whether we have support for ACLs. To get at the current
FileStore, we need to inquire about that given a path:

     Files.getFileStore(<path>)

which requires the RuntimePermission ""getFileStoreAttributes"", hence
the current patch's changes to the policy files.

With the patch, RestrictiveFilePermissionsTest run OK on Solaris/UFS. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1180713 13f79535-47bb-0310-9956-ffa450edef68"
b8339336a78a17a790f51898dd58ec8b04f7eb95,"DERBY-5447: Deadlock in AutomaticIndexStatisticsTest.testShutdownWhileScanningThenDelete (BasePage.releaseExclusive and Observable.deleteObserver (BaseContainerHandle)) 

Clean the daemon context only after the running worker thread (if any) has
finished to avoid Java deadlock when closing the container handles obtained
with the context.
The deadlock is intermittent, but can easily be reproduced, and involves
synchronization in BasePage and in java.util.Observable.

Patch file: derby-5447-2a-change_istat_shutdown.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1180790 13f79535-47bb-0310-9956-ffa450edef68"
5dcbe31ee0f7bc09e0e48a6e36b81beeffc70e26,"DERBY-5452: Possible NPE in NsTest.printException()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1180858 13f79535-47bb-0310-9956-ffa450edef68"
aff8c993dd366f1f64f0b8f893174142d02f0391,"DERBY-2720: remove dead code associated with unsupported National Char implementation 

Removed unused method DataType.getNationalString and its implementations.

Patch file: derby-2720-2a-remove_getNationalString.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1181679 13f79535-47bb-0310-9956-ffa450edef68"
5250aca2856ed6e333c7b6037315d2c4a9c7d272,"DERBY-5453: Remove unused methods in Cursor and NetCursor

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1181713 13f79535-47bb-0310-9956-ffa450edef68"
6de53a9dd46d8b262b1ba51ebc465c327d96f5d1,"DERBY-5436: Use helper method to add warning in EmbedResultSet.movePosition()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1181734 13f79535-47bb-0310-9956-ffa450edef68"
910eb10182156b3dc6b4f5b93d2e5343c7c6ab11,"DERBY-5440: test failure in testBTreeForwardScan_fetchRows_resumeAfterWait_nonUnique_split(org.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest)junit.framework.AssertionFailedError: expected:<1> but was:<0>

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1181756 13f79535-47bb-0310-9956-ffa450edef68"
33ca65d18f8afd985e558c77f7161614cd6eab57,"DERBY-5363 Tighten permissions of DB files to owner with >= JDK7

Removed one line of debugging trace.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1182266 13f79535-47bb-0310-9956-ffa450edef68"
4ff594e4ddcb3281ce71ac24784453e2d2a8eab1,"DERBY-5458: Add ant target to generate JavaDocs bundle

Added target to build and zip up the JavaDocs (ant javadoc-with-bundle).

Patch file: derby-5458-1a-javadoc_with_bundle.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1182444 13f79535-47bb-0310-9956-ffa450edef68"
7b429a3186a9c705baa9d5172f3ad3e2cfcc446c,"DERBY-3823 NullPointerException in stress.multi test

Adding a test case showing that in case of a network server, an open resulset's metadata can get changed underneath it but it is
	not reflected in the metadata. The test creates a table with one of column as varchar(5). It inserts 1000 rows and then
	opens a reulset on that table with varchar column as one of the columns. The test verifies that the reulset's metadata
	at this point shows the length of the column as 5. Next, while the resulset is still open, the tests does an ALTER TABLE
	to increase the varchar column's length to 8. In case of embedded mode, this fails because of the open resulset. In case 
	of network server, because of prefetching of rows, the ALTER TABLE is allowed but when the test gets the resulset's 
	metadata again and checks the length of varchar column, it still shows the length to be 5 rather than 8. 

There are couple other jiras related to network server prefetching, namely, DERBY-3839 and DERBY-4373.

Once DERBY-3823 is fixed, we should see the change in metadata reflected in resultset's metadata. A fix for DERBY-3823 will
        cause the following the test added here to fail. Right now, the new test accepts the incorrect metadata length obtained 
	through the resultset's metadata after ALTER TABLE has been performed in network server mode.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1182570 13f79535-47bb-0310-9956-ffa450edef68"
e8fb6d6013e3a3cd8054bfb3ee8e689c8cb8f444,"DERBY-3823 NullPointerException in stress.multi test

This patch fixes a race condition in
EmbedPreparedStatement#getMetaData: if we are trying to retrieve the
metadata for a prepared statement while it is being recompiled there
is a time window during which the activation class is null. The
existing code could therefore cause an NPE. The new code plugs the
race condition. This NPE led to intermittent errors in
stressTestMulti.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1183192 13f79535-47bb-0310-9956-ffa450edef68"
0086962a5842350df3ccb9a29219805d2a8648e4,"DERBY-5456: Make the network server more diligent about collecting up all of the local addresses which it can.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1183463 13f79535-47bb-0310-9956-ffa450edef68"
527b771e9b2179c8f59d2c8cd7496139ddc24ad2,"DERBY-5427  Unauthorized shutdown should not generate thread dump and javacore. AuthenticationTest dumps over 20 javacores with IBM JVM for normal user errors



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1183503 13f79535-47bb-0310-9956-ffa450edef68"
0a66fd03f098864d7f777e7c3004bceee810a915,"DERBY-5465: Broken null checks in NsTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1183671 13f79535-47bb-0310-9956-ffa450edef68"
4a8bbfaa738eb6192505782b4a815a059a945715,"DERBY-5458: Add ant target to generate JavaDocs bundle

Delete the existing bundle, otherwise the zip-operation fails.

Patch file: derby-5458-2a-delete_existing_bundle.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1185045 13f79535-47bb-0310-9956-ffa450edef68"
fdd3567fe6fc2c7c9a3d9933538c4d22ce79311e,"DERBY-5445: Enhance existing concurrency test to stress sequence generators to also stress identity columns

Don't print ""initializing database for sequence generator testing"" on
initializing the database, as most of the tests don't actually create or
use sequence generators.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1185056 13f79535-47bb-0310-9956-ffa450edef68"
8e9474f08862eb3a92580c064053f240b002f6c7,"DERBY-5468: Assertion failed in AutomaticIndexStatisticsMultiTest.testMTSelectWithDDL (expected:<0> but was:<1>)

Improves the error reporting such that the cause of the error is reported.

Patch file: derby-5468-1a-error_reporting.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1185187 13f79535-47bb-0310-9956-ffa450edef68"
39837074ef7eabd8a1261de26b3b13d796881cc2,"DERBY-5300: Change derby.tests.trace to print the class as well as fixture name

Introduces the following changes to the output controlled by derby.tests.trace:
 a) Print '(emb)' or '(net)' to show which driver/framework is being used.
 b) Test class names are shortened if possible. The following prefixes are
    stripped off:
    o 'org.apache.derbyTesting.functionTests.tests.'
    o 'org.apache.derbyTesting.'

Patch contributed by Jayaram Subramanian (rsjay1976 at gmail dot com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1185330 13f79535-47bb-0310-9956-ffa450edef68"
e7b124dda3d26a6c1dfc253044cdca38951ea625,"DERBY-5300: Change derby.tests.trace to print the class as well as fixture name

Changed code to agree with Javadoc param comment (""mainString"" -> ""test"").


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1185465 13f79535-47bb-0310-9956-ffa450edef68"
90e6ec9492853d9ab053129a4e5d5d5048fb809c,"DERBY-5449: 10.8 client with 10.5 server gives ClassCastException

Convert BOOLEAN parameter values to SMALLINT (and not only the parameter
meta-data) when talking to old servers that don't understand BOOLEAN.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1186020 13f79535-47bb-0310-9956-ffa450edef68"
028d92e6ecf7beda8bc6011371d18aa5a5f04249,"DERBY-5472: Speed up MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStats()

Reduce the amount of statement compilation and the number of iterations
to speed up the test case, while preserving the ability to reproduce the
original problem.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1186630 13f79535-47bb-0310-9956-ffa450edef68"
a07b078b0685a71300bdf7f64c7aceb93cbb2cf2,"DERBY-5472: Speed up MemoryLeakFixesTest.testRepeatedDatabaseCreationWithAutoStats()

Remove the workaround for DERBY-5412 on phoneME since that problem is
not present in the rewritten test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1186656 13f79535-47bb-0310-9956-ffa450edef68"
4c74a8cf75c437cf03441713e24ee36a9428cd12,"DERBY-5476: Copyright notice in the API documentation (generated by the Javadoc tool) is outdated

Use the existing ant property 'copyright.year' for the copyright end year in
the copyright notice for the API documentation (created by the Javadoc tool).

Patch file: derby-5467-1a-use_ant_prop.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1186691 13f79535-47bb-0310-9956-ffa450edef68"
d0c5d9c0f7d79bb80695975c8f5d40efa14d5dca,"DERBY-5406: Intermittent failures in CompressTableTest and TruncateTableTest

Make sure the statement receives an invalidation request if the
conglomerate disappears before FromBaseTable has created the dependency
on the table descriptor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1187204 13f79535-47bb-0310-9956-ffa450edef68"
4eea87550077be9f89fdb3481d00dd2135f7c212,"DERBY-5283: Crash / process termination during SYSCS_DISABLE_LOG_ARCHIVE_MODE can leave service.properties broken

Adds recover logic for service.properties. To be able to recover there must be
a backup file present. There are three different cases the logic can handle:
 o corrupt original (no EOF token) and backup: use backup
 o orignal and backup: delete backup
 o backup only: rename to original

Patch file: derby-5283-1b-recover.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1188109 13f79535-47bb-0310-9956-ffa450edef68"
d93d89fddeab93ae3edb956d767c70473996aa2e,"DERBY-5283: Crash / process termination during SYSCS_DISABLE_LOG_ARCHIVE_MODE can leave service.properties broken

Fixed Javadoc warning.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1188144 13f79535-47bb-0310-9956-ffa450edef68"
9d781902945d23bae6dcfad3d3952e01fa2c221d,"DERBY-5474: Speed up message splitting in build

Run splitmessages embedded in the Java process that runs Ant.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1188163 13f79535-47bb-0310-9956-ffa450edef68"
dc97960deb9b818cea8f4753ca64a559b8a3929a,"DERBY-5476: Remove unused parameter in splitmessages

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1188180 13f79535-47bb-0310-9956-ffa450edef68"
5e4a55fd1d0985a2aad07daefd40815732d76810,"DERBY-5287; tasks for 10.8.2 release
  adding 10.8.2.2 to list of upgrade versions for upgrade tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1188811 13f79535-47bb-0310-9956-ffa450edef68"
bc22725122d810d17fa2f382f53d04c6e6c3e447,"DERBY-5283: Crash / process termination during SYSCS_DISABLE_LOG_ARCHIVE_MODE can leave service.properties broken


Updated test with two new errors; XBM0B and XBM0C.

Patch file: derby-5283-2a-update_test_with_errorcodes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1188828 13f79535-47bb-0310-9956-ffa450edef68"
3b4d68e2b9a39f132fe0bdf0e32e3405aa0e983e,"DERBY-5479: Don't run MessageVetter unless messages have changed

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1189059 13f79535-47bb-0310-9956-ffa450edef68"
6e934c5d7d667f9fbade43f8782ed19249f7eddb,"DERBY-5480: File handle leak in MessageVetter

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1189063 13f79535-47bb-0310-9956-ffa450edef68"
ddde6fbef501391690663937b3bd36e2ad8234d5,"DERBY-5482: Reduce number of jar invocations in the buildjars target

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1189064 13f79535-47bb-0310-9956-ffa450edef68"
ce4bfc0835657b64893655dbeae03c035348e244,"DERBY-5478: Speed up creation of bin scripts

- Execute chmod once instead of six times

- Don't regenerate the scripts unless the templates have changed

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1189065 13f79535-47bb-0310-9956-ffa450edef68"
6555d3cebbc83c04e39eb2071f9f4912430e8c97,"DERBY-5406: Intermittent failures in CompressTableTest and TruncateTableTest

If GenericActivationHolder determines that a recompile is needed, it now
throws an exception to signal that to the caller instead of doing the
recompilation itself. This way, if the statement is invalidated again
during the recompilation, the already existing retry logic in the caller
(that is, GenericPreparedStatement.executeStmt()) will be used to detect
that the recompilation must be retried.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1189067 13f79535-47bb-0310-9956-ffa450edef68"
90e08c9221b7be2e289fb751afabca7c32fae46d,"DERBY-5469: Make it possible to build with Oracle JDK 7 on many platforms, including Mac OS X.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1189174 13f79535-47bb-0310-9956-ffa450edef68"
ec680c739ce91c62dde36e7780836fb66ee9168e,"DERBY-5287; tasks for 10.8.2 release
  updating status with new release


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1189201 13f79535-47bb-0310-9956-ffa450edef68"
012586ea471c3697fe2e5e78feecf23420c1b321,"DERBY-5287; tasks for 10.8.2 release
  fixing up some of the dates for the 10.8.2.2 release.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1189222 13f79535-47bb-0310-9956-ffa450edef68"
be1b5ea1a7ca6d102d1365d14c9756aafc621fb2,"DERBY-5406: Intermittent failures in CompressTableTest and TruncateTableTest

Push retry logic down to GenericStatement.prepare() so that it also
covers the code path from Connection.prepareStatement(). The previous
location only covered compilations requested by the execute methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1190220 13f79535-47bb-0310-9956-ffa450edef68"
3174d2a7406f8bea1e756bba0a532da723aaed72,"DERBY-5475 (partial): Formalize use of old Derby distributions in tests

Added support classes DerbyVersion and DerbyVersionSimple (may be removed later
if possible). DerbyVersion represents a Derby version number and has methods
for comparing versions against each other, plus a few other helper methods.
Added a basic unit test for DerbyVersion.

Patch file: derby-5475-1b-DerbyVersion.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1195449 13f79535-47bb-0310-9956-ffa450edef68"
9020cead56f8e1b9c64b69ca9549679a55c1ae72,"DERBY-5486: Remove special upgrade exception for 10.8.2 now that DERBY-4437 has been backed out of the 10.8 branch.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1195476 13f79535-47bb-0310-9956-ffa450edef68"
103248e39770915dac067e74d98dd4656de37ef1,"DERBY-5475: Formalize use of old Derby distributions in tests

Fixed class name in license header.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1195481 13f79535-47bb-0310-9956-ffa450edef68"
58253325c18289e90d401415b30ed4d69eacbd8c,"DERBY-4845: Improve the dependency tracking for our build targets

Move ResultSetStatistics interface from impl to iapi in order to
remove dependencies on impl packages in iapi code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1196542 13f79535-47bb-0310-9956-ffa450edef68"
70a4f2da3c64dda14c404633e736d50ab89ab199,"DERBY-4845: Improve the dependency tracking for our build targets

Don't use impl class StatementNode in iapi classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1196560 13f79535-47bb-0310-9956-ffa450edef68"
999e32af6e1672b89d8e23809b5aa5de08a6ac14,"DERBY-4845: Improve the dependency tracking for our build targets

Use DependableFinder interface instead of impl classes in iapi code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1196562 13f79535-47bb-0310-9956-ffa450edef68"
59f54f8f3d86449bb12d10d8e8c63b4d730959a6,"DERBY-5488: First changes to implement new JDBC 4.1 object mappings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1196680 13f79535-47bb-0310-9956-ffa450edef68"
ff02576059331e1864119c91a2abda79e8a04023,"DERBY-5488: Make setObject( int, BigInteger ) rely on the existing setObject( int, BigDecimal ) logic.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1197172 13f79535-47bb-0310-9956-ffa450edef68"
10608cf4ff6e0361ae97b6ef96a882fcd90aeaea,"DERBY-5488: Move BigDecimal getters/setters from JDBC 2.0 implementation into JSR 169 implementation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1197264 13f79535-47bb-0310-9956-ffa450edef68"
d313491885362beedfbbe1757d187cda8d1529cb,"DERBY-5486: Remove useless tests which are causing instabilities in the nightly test runs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1197272 13f79535-47bb-0310-9956-ffa450edef68"
514ee1dc06a12f58f6a3c7ac70c8e98d474628fe,"DERBY-5490: Fix the spawning of network servers on the OpenJDK 7 preview on Mac OS X.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1197563 13f79535-47bb-0310-9956-ffa450edef68"
d135e393befb52a9831b04b5803c255c6b7f6baa,"DERBY-5490: Fix previous patch to compile against CDC/FP 1.1 libraries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1197579 13f79535-47bb-0310-9956-ffa450edef68"
4a4b0a8f7a4a191fa2e55f9820801aa14cfdda9f,"DERBY-5491: new String("""") or new String() is pointless, and just allocates memory needlessly

Patch contributed by Dave Brosius <dbrosius@apache.org>.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1198653 13f79535-47bb-0310-9956-ffa450edef68"
9eb1bd1219a56341e58528b3bf3ec1bb0666a360,"DERBY-4845: Improve the dependency tracking for our build targets

Move getCreateAliasNode() and mapTableAsVTI() out of NodeFactory to
prevent that they expose impl classes to iapi code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1198695 13f79535-47bb-0310-9956-ffa450edef68"
be72b1444b9f2ba1c1c4a98e0e41391d11f65bf8,"DERBY-5244 DatabaseMetaData.getColumns(null, null, tableName, null) does not return the columns meta for a SYNONYM

Adding a test case which confirms the behavior noticed by DERBY-5244.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1199096 13f79535-47bb-0310-9956-ffa450edef68"
e6a9998277f545f41881b474be70318e81d6f526,"DERBY-4845: Improve the dependency tracking for our build targets

Make NodeFactory return nodes of type Node (in an iapi package) instead
of QueryTreeNode (which lives in an impl packages) to remove dependencies
on implementation code in iapi code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1199160 13f79535-47bb-0310-9956-ffa450edef68"
eddb67d3d9ec10b754b95a113bc1672695f53140,"DERBY-5496: Compile the JUnit infrastructure package against the small device classpath, rather than the jdk 1.4 classpath.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1199234 13f79535-47bb-0310-9956-ffa450edef68"
b53de62806da613f9cf158a4b03f5e6ffb84a772,"DERBY-5485: Reduce the responsibility of PropertySetter in order to make it less brittle.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1199248 13f79535-47bb-0310-9956-ffa450edef68"
fd4430da1dcb0f86a939115742a1987c0296d773,"DERBY-4845: Improve the dependency tracking for our build targets

Remove unused import statements that cause unnecessary dependencies
on implementation classes in the iapi package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1199348 13f79535-47bb-0310-9956-ffa450edef68"
96748ad12e1da41f237504adef5e9ae0ef15d2b1,"DERBY-5488: Eliminate some NPEs in ParameterMappingTest when run on OJEC.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1199392 13f79535-47bb-0310-9956-ffa450edef68"
e8afaebfd73a50955da5eef5d6b6db2b63fc3b2a,"DERBY-5492 Restrictive file permissions: permissions removed also for owner on NTFS if Acl does not contain explicit entry for owner

Patch derby-5492-2 which solves this issue plus make one other
adjustment, see item two below.

- Construct a new AclEntry for the owner with all rights, and removed
  existing ones (NTFS). This should handle the error seen in Oracle's
  regressions.

- For Solaris/ZFS and similar file systems which support both Posix
  file attributes view and ACLs, don't touch the ACLs but stick to the
  Posix flags.

 For the latter my rationale is as follows: Principle of least
 surprise: most users never touch the ACLs but use the more familiar
 Posix file masks. It turned out the existing Derby implementation,
 although protecting the file adequately, showed a ""+"" in the ls(1)
 listing indicating that the settings could not be directly mapped
 onto the Posix model. The reason was that we removed more permissions
 than the plain read,write, and execute. Since ZFS internally builds
 on ACLs, the ls(1) listing would should that Derby had been tinkering
 with the non-mappable ACL permissions. I think it is better to stick
 to the Posix permissions by default. If people are using ACL
 functionality they are likely more than average concerned with
 security and can run with default file permissions and take full
 responsibility of the permissions fo created filed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1199673 13f79535-47bb-0310-9956-ffa450edef68"
1ea68f8c16845ba4dec5db71a8f413542d0c57de,"DERBY-4845: Improve the dependency tracking for our build targets

Don't access the readOnlyUpgrade field in DataDictionaryImpl directly
from iapi code. Added a method to the DataDictionary interface instead.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1200232 13f79535-47bb-0310-9956-ffa450edef68"
a6532d02e5861ba8e0cb0fb23434414ed60774d5,"DERBY-4845: Improve the dependency tracking for our build targets

Don't call code that only works on Java SE platforms from code that's
supposed to work on CDC/Foundation Profile platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1200293 13f79535-47bb-0310-9956-ffa450edef68"
6ae5bb7961e76f8d3ad226587d80a7ed0042cd5f,"DERBY-4845: Improve the dependency tracking for our build targets

Fixed javadoc warnings introduced by the previous commit.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1200327 13f79535-47bb-0310-9956-ffa450edef68"
57c1b5cf652d2c49f063f3bfe11f1c89d6284ffd,"DERBY-5488: Add JDBC limit/offset escape syntax.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1200492 13f79535-47bb-0310-9956-ffa450edef68"
abf8151ced3b29509be8abb9360ef8fccb98c0f1,"DERBY-5498 ClosedByInterruptException in AuthenticationTest

Patch d5498b plugs a hole in the handling of NIO channel closures due
to interrupt in DirFile4#getExclusiveFileLock.
 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1200995 13f79535-47bb-0310-9956-ffa450edef68"
aff065731180ef5b59baac544bc9eef5558a66e7,"DERBY-5488: Revamped OFFSET/FETCH NEXT tests to run the same test cases against the corresponding JDBC limit/offset syntax.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1201020 13f79535-47bb-0310-9956-ffa450edef68"
87d06c2d3fe28dcd1707cf0dd80eb4d3b7585af1,"DERBY-5488: Eliminate needless Boolean object creation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1201025 13f79535-47bb-0310-9956-ffa450edef68"
955f104b29dfd04ee4e6d6444d95decdceb50833,"DERBY-5488: Add a couple additional limit/offset tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1201041 13f79535-47bb-0310-9956-ffa450edef68"
be3da0b3dae6e7818c05256e7d111bbd80d65034,"DERBY-5244 DERBY-5244 DatabaseMetaData.getColumns(null, null, tableName, null) does not return the columns meta for a SYNONYM. This is because for

Adding test case for views. The test comments for table, views and synonym is as follows

     * DERBY-5244 DatabaseMetaData.getColumns(null, null, tableName, null) 
     * 	does not return the columns meta for a SYNONYM. This is because for
     *  synonyms, we do not add any rows in SYSCOLUMNS. But the metadata query 
     *  for DatabaseMetaData.getColumns() looks at SYSCOLUMNS to get the 
     *  resultset. Views and Tables do not have problems because we do keep
     *  their columns information in SYSCOLUMNS.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1201945 13f79535-47bb-0310-9956-ffa450edef68"
565f51ec81af9d8996325adc90e4e50394f8de38,"DERBY-5485: Fix ProcedureTest to run again on JDK 1.4.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1202276 13f79535-47bb-0310-9956-ffa450edef68"
d34c2cebd37dfde8d2114c95bdc819d2b2242bae,"DERBY-5347 Derby loops filling logs and consuming all CPU with repeated error: java.net.SocketException: EDC5122I Input/output error.

If accept does not block and continues to throw errors, retry and log the exception two more times  times at 1 second intervals and then if it still fails, shutdown the server.





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1203050 13f79535-47bb-0310-9956-ffa450edef68"
bdd8f6d6f1a12a21b54eee54d2632927a9903871,"DERBY-5504: Use execJavaCmd() in SecureServerTest and Driver40UnbootedTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1203113 13f79535-47bb-0310-9956-ffa450edef68"
2198fafc41e4d72864ca1f7424701e82ddd92050,"DERBY-5379 testDERBY5120NumRowsInSydependsForTrigger - The number of values assigned is not the same as the number of specified or implied columns.
DERBY-5484 Upgradetest fails with upgrade from 10.8.2.2 (7 errors, 1 failure) on trunk

The above 2 jiras are duplicates. The upgrade tests are failing when doing an upgrade from 10.8.2.2 to trunk.

The tests that are failing were written for DERBY-5120, DERBY-5044. Both these bugs got fixed in 10.8.2.2 and higher.

The purpose of these tests is to show that when the tests are done with a release with those fixes missing, we will see the incorrect behavior but once the database is upgraded to 10.8.2.2 and higher, the tests will start functioning correctly. The problem is that we do not recognize that if the database is created with 10.8.2.2, then we will not the problem behavior because 10.8.2.2 already has the required fixes in it for DERBY-5120 and DERBY-5044. I have fixed this by making the upgrade test understand that incorrect behavior would be seen only for releases under 10.8.2.2




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1203252 13f79535-47bb-0310-9956-ffa450edef68"
19a48ec534d77e6ae5f13026be556c80988d228a,"DERBY-5504: Prepare replication tests for spaces in path names

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1203605 13f79535-47bb-0310-9956-ffa450edef68"
d00ad46c1820fde840dbbaf4f6ed87e9531397cd,"DERBY-5490: Revert previous work done on derby-5490 now that derby-5504 has provided a more comprehensive solution.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1203706 13f79535-47bb-0310-9956-ffa450edef68"
90f33a99ac10ac9cbbb5f64c2a34af3700fe75cb,"DERBY-5488: Change jdbc level to 4.1 when running on Java 6 or 7.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1203754 13f79535-47bb-0310-9956-ffa450edef68"
3f9d81236eb25e7ab61622b261f875b3a6c38369,"DERBY-5509; javadoc for NetServlet and NetworkServerControl are missing a few closing tags
  adding the missing tags.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1204128 13f79535-47bb-0310-9956-ffa450edef68"
7e7cb5fdf4c24b646ab642e88da217413b0e9662,"DERBY-5488: Add remaining JDBC 4.1 bits which did not appear in the Java 7 javadoc

Fix the expected JDBC major and minor versions when running at JDBC level 3.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1204432 13f79535-47bb-0310-9956-ffa450edef68"
ce664ad502539e6a1065879be1b2c56ed52c603d,"DERBY-5488: Rename SCOPE_CATLOG to SCOPE_CATALOG and add a redundant trailing SCOPE_CATLOG column to the ResultSet returned by DatabaseMetaData.getColumns().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1204684 13f79535-47bb-0310-9956-ffa450edef68"
28f8292610de77f669aef987d9cc1b66a5aa137b,"DERBY-5501 Subquery is only allowed to return a single column - When using derby with hibernate (or JPA) queries are created per JPA spec. For tables with multi-column PK, subqueries are created with two columns in select clause.

Patch derby-5501-3 lift the restriction that the select list in a
[NOT] EXISTS subquery may only contain ""*"" or a single column. This
implements SQL feature T501 ""Enhanced * EXISTS predicate"".



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1204712 13f79535-47bb-0310-9956-ffa450edef68"
c9ec6b98d90b335b3609f8d169cc072685a68865,"DERBY-4845: Improve the dependency tracking for our build targets

Get rid of a call to Util.notImplemented() from BrokeredStatement by
pulling the isClosed() method up from BrokeredStatement40,
BrokeredPreparedStatement40 and BrokeredCallableStatement40 to their
common super-class.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1204934 13f79535-47bb-0310-9956-ffa450edef68"
4e29c88dde7b8fa25dc82ad289d6674562d26a21,"DERBY-4845: Improve the dependency tracking for our build targets

Remove dependency on EmbedConnection40 from BrokeredConnection40.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1205195 13f79535-47bb-0310-9956-ffa450edef68"
ba954df72631ef63128332fa632f698c7c187859,"DERBY-4845: Improve the dependency tracking for our build targets

Remove dependency on EmbedCallableStatement40 from
BrokeredCallableStatement40.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1205378 13f79535-47bb-0310-9956-ffa450edef68"
f9a06892da20e79f82799d231cfd0c9b4e77ce32,"DERBY-5459 Result set metadata are out of sync on client after underlying table is altered

Patch derby-5459-3. We now resend the result set metadata to the
client when the cursor is opened if the prepared statement gets
recompiled due to it being out of date when the server tries to
execute it (DRDAConnThread line 871). To detect this we introduce a
version counter which is incremented each time a statement is
(re)compiled and make a note which version's metadata gets sent to the
client as part of the explicit prepare. That version is compared with
the current version when we execute to make the decision whether to
resend metadata or not.

This also fixes DERBY-2402, a duplicate.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1205426 13f79535-47bb-0310-9956-ffa450edef68"
ec600145775548ecaabe14fb77068d8e53baba65,"DERBY-4845: Improve the dependency tracking for our build targets

Don't use impl.jdbc.Util from the iapi.jdbc package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1205753 13f79535-47bb-0310-9956-ffa450edef68"
bc23e21c7fd33d04a6dbac18c92bcb6ee93d890d,"Fix javadoc

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1205757 13f79535-47bb-0310-9956-ffa450edef68"
90679b36760845259d73458106a9870726096420,"DERBY-5512: emma-single and emma-all don't use the instrumented jars

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1205760 13f79535-47bb-0310-9956-ffa450edef68"
eb17d45127a951846736611cc320e49a49975d3a,"Ignore the EMMA jar files when using git.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1205761 13f79535-47bb-0310-9956-ffa450edef68"
f16887a1d2d466071c35fec427e9dc1f97fec3ef,"DERBY-5514: SecureServerTest (and others) don't play nice with EMMA: AccessControlException

Grant permissions to write coverage data to all code bases, to work
around EMMA's lack of doPrivileged blocks.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1206409 13f79535-47bb-0310-9956-ffa450edef68"
dcfc481b194c593d5a999ee18b98e3efc8374064,"DERBY-5514 SecureServerTest (and others) don't play nice with EMMA: AccessControlException

Patch derby-5514-2:

- fixes the usa of String#contains,
- adds -Demma.verbosity.level=silent to RuntimeInfoTest
- adds the convenience method runsWithEmma to BaseTestCase
- adds fixes to NetworkServerTestSetup to
  a) always use Emma verbosity silent when spawning a server in separate VM, and also
  b) refrains from starting the server with the security manager when running with Emma since the default server policy doesn't contain permissions for Emma, and finally
- skips the assertion for the security manager being used in
  SecureServerTest (it is not, see preceding item) 

With patch d5514-emma-permissions-to-all, Emma now runs OK with ""ant
emma-all"" and suites.All.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1207471 13f79535-47bb-0310-9956-ffa450edef68"
0e00e5eae686a6c12f414a0df9a3efce07969d59,"DERBY-5096 DisconnectException: ""Connection was refused because the database DB was not found"" when creating db for first time

Patch adjusts the canonicalName after mkdirs() if it does not match getCanonicalPAth()




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1207729 13f79535-47bb-0310-9956-ffa450edef68"
c604fffb925467c94c824f663b4ee7097320f5bf,"DERBY-5096 DisconnectException: ""Connection was refused because the database DB was not found"" when 
creating db for first time

Change to unconditionally setCononicalName after the database directory is created.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1208775 13f79535-47bb-0310-9956-ffa450edef68"
418e135af40d59f709f91ab8e87c7451d9c79019,"DERBY-1016; javax.transaction.xa.forget (Xid) raises XAER_NOTA exception instead of XA_PROTO on a prepared transaction
  patch contributed by Jayaram Subramanian (rsjay1976 at gmail dot com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1210686 13f79535-47bb-0310-9956-ffa450edef68"
210e03495de8bd783b93586e70e7f1e9efd82dd2,"DERBY-4201: SecureServerTest AssertionFailedError: Timed out waiting for network server to start

Wait until server instances from earlier test cases have released the
server port before starting a new server.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1210846 13f79535-47bb-0310-9956-ffa450edef68"
387171c1d21363c66da092510c9b9acc7984eee1,"DERBY-1016; javax.transaction.xa.forget (Xid) raises XAER_NOTA exception instead of XA_PROTO on a prepared transaction
  adjusting master 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1210972 13f79535-47bb-0310-9956-ffa450edef68"
c69a52975c86adc6d1ded5863284e2c913a61689,"DERBY-5519 Update code in JVMInfo#derbyVMLevel to give correct results for Java 7 and provisionally for 8.

Fixed with patch derby-5519.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1211257 13f79535-47bb-0310-9956-ffa450edef68"
81923add4cca5d482868d741eb79e4f52af198ed,"DERBY-5521 JDBCMBeanTest#testAttributeDriverLevel uses Java assert in lieu of JUnit assert: no real testing happens

Patch derby-5521b which fixes this issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1211266 13f79535-47bb-0310-9956-ffa450edef68"
61a0de9b0e4392e44dac7b15e015dba2121896cc,"DERBY-5521 JDBCMBeanTest#testAttributeDriverLevel uses Java assert in lieu of JUnit assert: no real testing happens

Patch derby-5521-followup fixes a small issue with the regexp (JDK
name varied over time: J2SE -> Java SE) used in the test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1212210 13f79535-47bb-0310-9956-ffa450edef68"
c8afd4ff6ee581b2e69b2ca9e13636b474ef0cfc,"DERBY-5526  on upgrade from 10.5 to 10.8.2 , getting ERROR XBM0A: The database directory 'C:\cygwin\home\debugfat\clientdb' exists.
 However, it does not contain the expected 'service.properties' file.

Change to only throw this message if there is a seg0 directory so  this looks
like a partially created database




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1212541 13f79535-47bb-0310-9956-ffa450edef68"
aa609d54c3d69d8286bef629ded719b2ddbd0523,"DERBY-866: Add SYSUSERS table.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1212562 13f79535-47bb-0310-9956-ffa450edef68"
e7c4044ad6cfd586d2581ef79ecce603c5052e07,"DERBY-5529: XATransactionTest: Table/View 'DERBY1016' already exists

Fix contributed by Jayaram Subramanian <rsjay1976@gmail.com>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1213237 13f79535-47bb-0310-9956-ffa450edef68"
2cb19e2d71697777bbd7bfa00f8cd0bc48282c0e,"DERBY-5524: Speed up clean-up after StatementJdbc30Test.xtestMaxOpenStatementsWithQueryTimeout

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1213248 13f79535-47bb-0310-9956-ffa450edef68"
d109dedee33d1a7ffd17cf3f8ab95fa60fc11e53,"DERBY-5517: testReplication_Local_3_p1_StateNegativeTests failed with connection refused

Make sure server processes in one test case have stopped before the next
test case is started.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1213251 13f79535-47bb-0310-9956-ffa450edef68"
8e65593b7db5a2d2efe39dbea6549c061757b633,"DERBY-4463; JMX test in nightly test suite failed with: JMXTest:clientjava.lang.InterruptedException
  reviving tests for IBM 1.5 after release of  1.5 SR13


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1213467 13f79535-47bb-0310-9956-ffa450edef68"
4b013e1c9ae7fdbc480545ba8a2ab3d06fbd08bb,"DERBY-4836; many failures with IBM 1.5 and 1.6 on windows after test InternationalConnectTest
  revive test for IBM 1.5 and 1.6 jvms; need IBM 1.6 SR9 and IBM 1.5 SR13.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1213473 13f79535-47bb-0310-9956-ffa450edef68"
2d622c69a993c089f8f614c10ef0427588875a27,"DERBY-5535 Remove unused methods from client's CrossConverters class

Patch derby-5535 removes the unused methods.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1214423 13f79535-47bb-0310-9956-ffa450edef68"
ae40e9f8c0b10c379a1b2f029f15967caf811c54,"DERBY-5533 Client differs from embedded when rs.updateInt overflows: 22015 vs 22003

Patch derby-5533b. Changes the client driver to throw SQL state 22003
as does the embedded driver.  Also adds tests for over- and underflow
conditions with ResultSet#updateXXX and ResultSet#getXXX, which were
seen to be lacking in our coverage.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1215365 13f79535-47bb-0310-9956-ffa450edef68"
379e4cc25d97f6a426c081d08dfe27261351abe5,"DERBY-5540: Call initCause() and getCause() without reflection in BaseJDBCTestCase

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1220669 13f79535-47bb-0310-9956-ffa450edef68"
c14b3d44d1cfb8ecdfd7f235b16760d195b08ff0,"DERBY-5541: Remove unnecessary field rwsOK in DirStorageFactory4

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1220670 13f79535-47bb-0310-9956-ffa450edef68"
4e1ac7970a78cc1c513e7d78c57aab41570435e2,"DERBY-5542: Remove checks for Java version being greater than or equal to 1.4

No older versions are supported.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1220671 13f79535-47bb-0310-9956-ffa450edef68"
006b542c078fca7f23d0859c6b795435aa50e6bb,"DERBY-5507: Orderly shutdown fails if you are using BUILTIN authentication and turn on derby.database.propertiesOnly

Make sure passwords are mapped to a hashed token before they are stored
in the database, also if the password is already defined in a system
property.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1220685 13f79535-47bb-0310-9956-ffa450edef68"
92268ace63e4f0abff9901cafb634de221852c5a,"DERBY-866: Add syscs_create_user() and syscs_drop_user() system procedures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1220807 13f79535-47bb-0310-9956-ffa450edef68"
69884a3304fa81afc39bea482a4211937eb6be49,"DERBY-866: Fix javadoc problem introduced by revision 1220807.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1220828 13f79535-47bb-0310-9956-ffa450edef68"
04cfd282fc15f44eb9c9841476c85b7dd21e8a5a,"DERBY-866: Add syscs_reset_password() and syscs_modify_password() system procedures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1221423 13f79535-47bb-0310-9956-ffa450edef68"
c1152a408c21fb63159f5dbdb5acf8aaf2a79ad8,"DERBY-866: Adjust RolesTest to account for new tuple in SYSROUTINEPERMS.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1221434 13f79535-47bb-0310-9956-ffa450edef68"
8e6d8a0c86467a20af7e91cf3025eb3119a3c18e,"DERBY-866: Add regression tests for GRANT/REVOKE on new procedures supporting NATIVE authentication.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1221456 13f79535-47bb-0310-9956-ffa450edef68"
1ede0a8c4b6d407bf39d2a5e587dc8b11d9f7d40,"DERBY-5539: Harden password hashing in the builtin authentication service

Add random salt before hashing the credentials, and apply the hash
function multiple times.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1221666 13f79535-47bb-0310-9956-ffa450edef68"
b4c4ee0d4daa83ed71ebce231fc172069d7f5565,"DERBY-866: Adjust hard-coded permissions list in upgrade tests to account for the fact that the new syscs_modify_password() routine has PUBLIC access.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1221734 13f79535-47bb-0310-9956-ffa450edef68"
9916e65619fedf05b90d7de35fb07eca18cd090a,"DERBY-4845: Improve the dependency tracking for our build targets

Build files should reflect that JSR-169 isn't optional. Simplifies the
scripts and removes some redundancies.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1222151 13f79535-47bb-0310-9956-ffa450edef68"
65246387868bf2ee1e39a7520bea1a344813d10e,"DERBY-5547: NSSecurityMechanismTest.testNetworkServerSecurityMechanism() fails intermittently

Wait for previous network server to stop before starting a new one.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1222155 13f79535-47bb-0310-9956-ffa450edef68"
9495437c8b640d689c8a67563097b86cb0cd6fca,"DERBY-866: Remove SQLPassword internal data type.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1222215 13f79535-47bb-0310-9956-ffa450edef68"
510d4fbf3d4686fa9e40d0774eb35c62ac0d7ab4,"DERBY-5558; NullPointerException in store.RecoveryTest launchRecoveryInsert and failure in testBasicRecovery with weme 6.2
  working around this issue by tacking on emma.active value for this jvm forking.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1227016 13f79535-47bb-0310-9956-ffa450edef68"
efe47b403dc6128854b0684a4fdcbed81d91ad1c,"DERBY-5377: AssertionFailedError in testCaseCS4595B_NonUniqueIndex in AccessTest

Dump the statistics on assert failures to help debugging the problem.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1227121 13f79535-47bb-0310-9956-ffa450edef68"
a84fc2679293c30e3ebf1b62443cc8a34225b0df,"DERBY-866: Wire the new NATIVE password-management procedures to the recently checked-in password hashing improvements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1227150 13f79535-47bb-0310-9956-ffa450edef68"
fbae15db02c5e0dbd03c154d4bc45d703b9442a1,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation\

Adding a test case with following comments
  /**
   * Test USING clause and NATURAL JOIN for case insensitive and
   * 	case sensitive collations.
   * As per the SQL spec, ""the join columns in a natural join or in a named 
   *    columns join should be added to the select list by coalescing the 
   *    column from the left table with the column from the right table. ""
   * DERBY-4631 - Derby does not coalesce as suggested by SQL spec, instead
   * 	it picks up join column's value from the left table when working with 
   *    natural left outer join and it picks up the join column's value from 
   *    the right table when working with natural right outer join. This works
   *    ok with non-territory based databases. It works ok for natural left
   *    outer join for territory based database but depending on the data 
   *    value, it does not always work for natural right outer join in a 
   *    territory based database as shown in the test cases below.
   * @throws SQLException
  */




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1228332 13f79535-47bb-0310-9956-ffa450edef68"
5e1c7a74fecc293d34ceed12f84f16c92a0c7522,"DERBY-5559 AssertFailures (7, or 8) with ibm 1.6 and 1.5 on Windows XP in lang.NativeAuthProcs fixture testAll

This change just adds explicit printout in the tests when the asserts fail,
it does not fix the test failures.
I added them to the 4 places I saw them failing in nightly runs as reported
in the apache nightly test run site for the following report:
http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm15/1227449-suites.All_diff.txt

All the problem areas are asserts based on timestamps and the tests seem to 
be waiting for some time such that these asserts will be true.  My guess is
that this methodology is not portable with the current values and may need to
be tuned more to work across all JVMs and hardware. 

I am seeing errors on a XP laptop running ibm jvm 16.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1228537 13f79535-47bb-0310-9956-ffa450edef68"
841f8df35fc293e686ca82774c0e201099391c4a,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation\

Adding a test case with two join columns



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1228777 13f79535-47bb-0310-9956-ffa450edef68"
3e52818d6bf8937d1030ba5dfb9b12e9e2c07249,"DERBY-5568: AssertionFailedError: Should not hold locks after commit in ResultSetMiscTest

Wait for post-commit work to complete before checking lock table.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1229066 13f79535-47bb-0310-9956-ffa450edef68"
341974802a52be88f1a774e8f733d2a52fc3fcf6,"DERBY-5536 Client's ResultSet#getLong does not range check when converting from a DECIMAL column

Patch derby-5536-3, which fixes this issue and adds new tests.  It
changes the implementation of am.Decimal#getLong to allow it to detect
overflow. If the number of digits indicate it can't happen, we use an
optimized path.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1229082 13f79535-47bb-0310-9956-ffa450edef68"
fd4cb7fb899d2b24b229c5ef5241052d333c2bb9,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Adding variations of existing test but using USING clause rather than NATURAL JOIN.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1229266 13f79535-47bb-0310-9956-ffa450edef68"
b40d7705369653071e87229749ff258ca5eefd10,"DERBY-5536 Client's ResultSet#getLong does not range check when converting from a DECIMAL column

Followup patch ""derby-5536-refactor"" factors out the test cases for
DERBY-5536 into a separate fixture, adding ""ORDER BY"" to secure
correct row retrieval order.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1229481 13f79535-47bb-0310-9956-ffa450edef68"
a1ac6747169cb5b113e72f36defddcf01e733d57,"DERBY-5559 AssertFailures (7, or 8) with ibm 1.6 and 1.5 on Windows XP in lang.NativeAuthProcs fixture testAll

Adding longer waits and some additional waits to fix problems on my laptop with
this test.  Before this change the test would expect the timestamp to have
moved forward after some password manipulation operations, but instead the
timestamp would be the same as before.  I believe this is just a problem with
the known issue of JVM/machine caching of time, and not an actual problem
with the password mechanism.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1229835 13f79535-47bb-0310-9956-ffa450edef68"
c9ef16647d6e139c54c35c8ed80246c7a0b965d9,"DERBY-5564 Code does different things depending if derby.locks.deadlockTrace=true is set

original patch by Brett Bergquist, then modified by Mike Matrigali for submission.

Changes the code to always return 40XL1 as the SQL state when a lock timeout
occurs.  Previous to this change if deadlock diagnostics were enabled then
40X02 would be returned.  Internally multiple places in the code was not
expecting the second error code for a lock timeout.  Also it was agreed that
it was confusing for user applications to have to code for both states in
case they wanted to turn diagnostics on and off.  

Existing test cases were changed to match the new expected behavior.

The behavior in DDLConstantaction to immediately throw an error on first try
if a lock timeout is encounted with diagnostics enabled was preserved.  The
error thrown now will be with sql state 40XL1 and not 40X02 as before.  




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1230100 13f79535-47bb-0310-9956-ffa450edef68"
152986e7386f5c5afdc42692e2f694427831cc2e,"DERBY-5562: A read-only XA transaction that has a timeout never has the timer canceled when the transaction is complete

Cancel the timer when a read-only transaction is prepared and implicitly committed.

Based on a fix contributed by Brett Bergquist.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1230480 13f79535-47bb-0310-9956-ffa450edef68"
f5381cd828fb18009f7db596c12f47519bfccf2b,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

I am adding more tests for this jira to show the kind of joins and queries that are impacted by this defect.

In short, any join query which is either a NATURAL join or has a USING clause can run into the two problems as described in this jira.
Problem 1)As per SQL spec, the join column's value should be derived by 
		COALESCE(leftTable.joinColumn, rightTable.joinColumn).
	But Derby has it's own rule for deriving the join column's value. Derby's implementation, for a right outer join, gets the join column's value from the right table and for left outer join, it gets the value from the left table. This logic works for most cases, but it can give incorrect value for a right outer join (with NATURAL JOIN or USING clause) in case of a territory based database. Additionally, the join column in the SELECT list(with NATURAL JOIN or USING clause) gets associated with the left table's join column(for inner joins and left outer joins) or it gets associated with the right table's join column(for rihgt outer joins). Since SQL spec requires the join column to be COALESCE ( leftTable.C, rightTable.C ) AS C, the join column should not be really associated with any of the 2 join tables.
Problem 2)The Derby's assocation of join column to left or right table as described in problem 1) causes it to allow incorrect queries. eg query
select i from t1_D3880 inner join t2_D3880 USING(i) group by t1_D3880.i;
	The query above works because join column i got associated with left table which is t1_D3880. If the query was rewritten to do the group by on right table, it would fail.
select i from t1_D3880 inner join t2_D3880 USING(i) group by t2_D3880.i;





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1230873 13f79535-47bb-0310-9956-ffa450edef68"
b0356ec53e77d64a094e64789ea45429ca6db598,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Adding comments to some of the tests, stating that Derby is allowing incorrect behavior because of DERBY-4631. Once the jira is fixed, these tests should start failing and would need to be changed to show the correct behavior.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1231296 13f79535-47bb-0310-9956-ffa450edef68"
c21183360eaeb6696d02a0341ed427aac0149ad5,"DERBY-4540 AssertionFailedError in store.AccessTest.testCS4595B_UniqueIndex(AccessTest.java:1729)' on SUSE Linux / IBM JIT - r9

This change just adds some diagnostic print out to the assert that seems
to be intermittently failing.  Next time we should see the number of pages
expected and the full dump of the statistics output the test is getting when
it gets this failure.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1233098 13f79535-47bb-0310-9956-ffa450edef68"
5107349bda75befc505c8d9d18b356ac26f40f27,"First version of NATIVE authentication service, including first tranche of tests for it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1233377 13f79535-47bb-0310-9956-ffa450edef68"
0be52c832f4b994d7b5b2d3ee03f399d3f422c6c,"DERBY-1903: Convert largedata/LobLimits.java to junit

Removed master/canon file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1233791 13f79535-47bb-0310-9956-ffa450edef68"
878e2115faf34ceb0b761cfeb859cbb1887e706b,"DERBY-5406: Intermittent failures in CompressTableTest and TruncateTableTest

Retry compilation if it fails because a conglomerate has disappeared.
This may happen if DDL, compress, truncate or similar operations happen
while the statement is being compiled. When trying again, the compilation
should find the new conglomerate if one exists, or fail with a proper
error message if the SQL object has been removed.

This is a workaround for a race condition in the dependency management.
When binding a statement, the compiler typically builds descriptor
objects (like a TableDescriptor) from the system tables and then registers
the statement as a dependent on that descriptor. However, another thread
may at the same time be invalidating all dependents of that descriptor.
It is possible that this happens right before the current statement has
been registered as a dependent, and it will never see the invalidation
request. Once it actually tries to access the conglomerate associated with
the descriptor, it will fail with a ""conglomerate does not exist"" error,
and since the statement did not see the invalidation request, the compiler
doesn't know that it should retry the compilation.

This fix also backs out the changes made in revision 1187204, as they
addressed a subset of the cases handled by this broader fix, and are not
needed any more.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1234776 13f79535-47bb-0310-9956-ffa450edef68"
35e7aba5ac3457fcdea8424a51deab9aa9cc9d37,"DERBY-5580: NativeAuthenticationServiceTest fails to delete databases

Make sure the databases get shut down before attempting to delete them.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1235709 13f79535-47bb-0310-9956-ffa450edef68"
c0399dced2e026990bce930eead660637cdb756a,"DERBY-866: Prevent illegal changes to the on-disk version of derby.authentication.provider.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1235750 13f79535-47bb-0310-9956-ffa450edef68"
9efa649289613c214813f678438088c1b5d86b46,"DERBY-866: Add new upgrade test for NATIVE authentication and improve error raised when trying to read credentials in a database which hasn't been hard-upgraded to 10.9.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1236340 13f79535-47bb-0310-9956-ffa450edef68"
9e26acc4550922c1f2232f366e3670297a454f4c,"DERBY-5574 encryption test in encryption nightly suite test fails with ERROR XBM0S: Unable to rename file error

Catch errors on rename, and retry hoping that error is caused by some 
temporary file system resource issue.  Similar methodology that other
parts of the system uses on read and write errors.  Worst case system
retries 5 times and still throws the error, best case a subsequent retry
succeeds and user application is never aware an error was encountered.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1236370 13f79535-47bb-0310-9956-ffa450edef68"
1690ef635636afe5ebb5f03e393e5e9525de694b,"DERBY-5582 Access denied (java.lang.RuntimePermission modifyThreadGroup) in IndexStatisticsDaemonImpl.schedule()

Put index-stat thread in derby daemon group.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1236887 13f79535-47bb-0310-9956-ffa450edef68"
49901a4baf2c4c69cc3d104c52df6c3b37780b6f,"DERBY-866: Add expiration limits for NATIVE passwords.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1238727 13f79535-47bb-0310-9956-ffa450edef68"
9e951e287c93824f8647e43734ac2d3b922358dc,"fixing a comment.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1239893 13f79535-47bb-0310-9956-ffa450edef68"
398a04307c6b4cda51ce5e553da17935ad9c3c8a,"DERBY-5567 AlterTableTest#testDropColumn fails: drop view cannot be performed due to dependency

When a view (b) is defined on another view (a), dropping a column in
the base table can lead to both view being invalidated. This patch
(DERBY-5567-1) fixes a problem in the logic:

Depending on the order in which dependencies of the base table column
are registered, the invalidation will happen either view a or view b.
If it happens on view a first, this view in turn will try to
invalidate view b (since that depends on view a), but with the
DROP_VIEW action which fails. The patch changes this recursive
invalidation to use the original action, e.g. DROP_COLUMN which will
allow dropping the dependent view (dropping a column is allowed to
cause cascading drops of dependent views).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1239898 13f79535-47bb-0310-9956-ffa450edef68"
dc9cd0fec82dfa518bbc661218bbcb10ee58fd56,"DERBY-866: Add test for database restoration using NATIVE authentication.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1240152 13f79535-47bb-0310-9956-ffa450edef68"
0b402b7075b878b110dd0d5b91e15d0298393adf,"DERBY-5601   Windows hang in NativeAuthenticationServiceTest testAll

Temporarily disable test to get by hang in tests.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1240365 13f79535-47bb-0310-9956-ffa450edef68"
3149593e875290ec454fdaa4495846ef420cb959,"DERBY-3740 BlobClob4BlobTest.testLockingWithLongRowBlob fails with .AssertionFailedError: FAIL - statement should timeout

The 2 tests that were failing intermittently (testLockingWithLongRowBlob 
and testLockingBlob) would both select a target blob known to be returned
as a stream, and assign it to a variable.  The expectation was that until
the end of the routine Derby would maintain a read lock on the blob.  The
problem was that it looks like some JVMs/JITs would recognize that the variable
was never used and call finalize before the test executed the code to 
get an expected lock timeout on updating the blob in another connection.
Fixed by adding references to the variable in code executed after the 
expected timeout.  Before the fix test was failing about 1/2 time in my
environment, after the fix the test ran 100 times without a failure.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1240521 13f79535-47bb-0310-9956-ffa450edef68"
a3d7a74e38497ff919028f2eb0d38b68255ce3bc,"DERBY-866: Prevent authentication service from booting if NATIVE::LOCAL is specified at the system level.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1241479 13f79535-47bb-0310-9956-ffa450edef68"
a219537eb477470c2b569f31fb74e539eb54c4c8,"DERBY-5598: DerbyNetNewServerTest fails: Num of log item should add

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1241841 13f79535-47bb-0310-9956-ffa450edef68"
5a172c507a134829557f1bdeececd2b82a5f260a,"DERBY-5609: Prepare old test harness for running tests on Java 8


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242098 13f79535-47bb-0310-9956-ffa450edef68"
d94fffbd7149946f630e01e524db5a057676f408,"DERBY-5607: Use InternalDriver rather than a JDBC DataSource in order to get a connection to the credentials db when creating a database with NATIVE authentication enabled.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242105 13f79535-47bb-0310-9956-ffa450edef68"
48f6c5d27d508d082239b4d947d255774523f238,"DERBY-3808; Convert subquery.sql to junit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242409 13f79535-47bb-0310-9956-ffa450edef68"
3cf5562e0471af588b610c6f622567b6c0d87070,"DERBY-3808; convert subquery.sql to junit
  Removing 1 unnecessary import from the newly converted SubqueryTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242413 13f79535-47bb-0310-9956-ffa450edef68"
4662c4c0482f9b420c42d12641bfbae099523ca2,"DERBY-3808; convert subquery.sql to junit
  remove one more commented out old line


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242460 13f79535-47bb-0310-9956-ffa450edef68"
14621ff2721d9ae552d5e8ed54fa777b413392c8,"DERBY-5582 Access denied (java.lang.RuntimePermission modifyThreadGroup) in IndexStatisticsDaemonImpl.schedule()

Followup patch
Fix whitespace issue in AutomaticIndexStatisticsTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242610 13f79535-47bb-0310-9956-ffa450edef68"
cf5ac0ccac801b7ebc2e8af7770d5a2010c2fcfd,"DERBY-1913 storetests/st_reclaim_longcol.java fails intermittently

The test was counting on being able to control the number of FREE pages,
but the number is very dependent on ability of background thread to run
in a timely manner.  Changed the test to check number of allocated pages,
which at least correctly tests that what we think should be background reclaimed
eventually is.  Still needs some wait logic which I think will work better
now.  I tested against knut's patch to delay the daemon 1 second for every
piece of work and the old test always failed and the new test succeeded.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242620 13f79535-47bb-0310-9956-ffa450edef68"
0750c7b224c808228f11d9b8d883a17fe86acf6f,"DERBY-5604 access static constants with static references

Patch 'use_static_reference' makes this change to simplify code and reflect
member status correctly in the access pattern.

Patch provided by dbrosius at apache dot org. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242656 13f79535-47bb-0310-9956-ffa450edef68"
d96e3aa09c9de352719e5abf998236d7e739a012,"DERBY-5608: BaseTestCase.readProcessOutput should read getInputStream() and getErrorStream() in separate threads

Use SpawnedProcess to read stdout/stderr from the subprocess, since it already
has code to do this in separate threads.

Patch file: derby-5608-1a-use_spawnedprocess.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242681 13f79535-47bb-0310-9956-ffa450edef68"
79366f5f29142ae757d5ae0cfcf8797a4fd0b932,"DERBY-1913 storetests/st_reclaim_longcol.java fails intermittently

disabling test2, still machine dependent.  test1 covers the original intended
code path to verify that blobs are marked for post commit immediately, rather
than waiting for all rows on a page to be deleted.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1242889 13f79535-47bb-0310-9956-ffa450edef68"
b3d2e5880ee84e3107d43d919ffc88a93bb2dccf,"Set svn:eol-style=native.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1243447 13f79535-47bb-0310-9956-ffa450edef68"
df3ddef060352d51d1d25e906c0ac1830437049a,"DERBY-1913 storetests/st_reclaim_longcol.java fails intermittently

updating master, left out of last checking.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1243622 13f79535-47bb-0310-9956-ffa450edef68"
5ed54d8c0c2b8137b5afa7d0b393571e2ffb2f5d,"DERBY-5613 Queries with group by column not included in the column list for JOIN(INNER or OUTER) with NATURAL or USING does not fail

The issue of join column getting associated with left or right table is getting tracked under DERBY-5613. This commit changes the comments in the test to refer to DERBY-5613



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1243784 13f79535-47bb-0310-9956-ffa450edef68"
f74cf7a6a51653e960d845a1b5f6a43088589545,"DERBY-5530: SQLChar.getCollationKey NPE in index-stat-thread 

Propagate collation information to the new indexes on TRAUNCATE TABLE.

Patch file: derby-5530-1a-propagate_collation_info.diff (trivially modified)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1243878 13f79535-47bb-0310-9956-ffa450edef68"
d5492b97b5aa240724b00d8ce9907563564584c2,"DERBY-5601; Windows hang in NativeAuthenticationServiceTest testAll with prior interrupt error in SecureServerTest and other cascade errors and failures
DERBY-5607; Deadlock in Java 5 VM when using NATIVE authentication with a client running in the same VM as the server
  restoring running of NativeAuthenticationServiceTest under windows.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1244195 13f79535-47bb-0310-9956-ffa450edef68"
e15789d4d686ae7992fe508650598c61fe087a26,"Removing double listing of GrantRevokeDDLTest - mistakenly put in twice for DERBY-2525.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1244246 13f79535-47bb-0310-9956-ffa450edef68"
7dc89cfe97524dbcb547a8919d9df14b525ce039,"DERBY-4785; Remove JCC tests and references to JCC in test code
  Removing JCC and references to JCC and DB2Client from junit tests
  patch contributed by Jayaram Subramanian (rsjay1976 at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1244295 13f79535-47bb-0310-9956-ffa450edef68"
04846d1179f9c9b5d8cd6fe83ad4aa701c3da54f,"DERBY-5617: Improve process handling in SpawnedProcess

Added a mechanism to kill processes if they live for too long (currently
the threshold is 45 minutes, this may be too high).
Don't let interrupts abort waiting for or terminating a process.
Clean up the process properly when it has terminated.

Patch file: derby-5617-1a-spawnedprocess_improvements.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1244444 13f79535-47bb-0310-9956-ffa450edef68"
92a2169d3910ceeda47cbac68783a9cabd9ec3e8,"DERBY-866: Add tests for NATIVE/LOCAL authentication in databases accessed via the jar and classpath subprotocols.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1244666 13f79535-47bb-0310-9956-ffa450edef68"
a932daa14d2d872fdc1e390a15703f2415b3f7a5,"DERBY-866: Fix javadoc error introduced by previous checkin.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1244730 13f79535-47bb-0310-9956-ffa450edef68"
4082c881296c044a93c711694503b1c8e822d058,"DERBY-5599 readlocks.sql fails with extra locks.

readlocks checks for expected locks in a number of scenarios.  Intermittently
it could see extra locks if it happened to check the lock table, while the
background thread was running reclaiming deleted rows.  This is most likely
in the tests that put a single row per page, delete some rows, commit and
then shortly after do work and check the lock table.

Added workaround used other places which waits for post commit to finish
after the commit following the deletes.  Have updated all the places I saw
where the problem is likely - not just the one causing the diff reported
in this JIRA.  

Changes affect the readlocks test and the updatelocksJDBC30 test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1245056 13f79535-47bb-0310-9956-ffa450edef68"
ae21afbc71ffdbfd88552cabb19f52885a95996a,"DERBY-866: Add tests for system-wide authentication using a credentials db accessed via the jar and classpath protocols.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1245126 13f79535-47bb-0310-9956-ffa450edef68"
783dae78c35d5c4a505197fc657242e3f7d79075,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Adding test for left and right outer joins with VALUES caluse supplying the data instead of base tables.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1245143 13f79535-47bb-0310-9956-ffa450edef68"
b7c6a50e19c9c469036e8ee70bcce28576baadc5,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Rearranged the test code a little bit for reusability purposes.

Adding test for left and right outer joins with views supplying the data instead of base tables.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1245226 13f79535-47bb-0310-9956-ffa450edef68"
cd5b86cae550e8c3620b698fe04102ec3b12b5ad,"DERBY-4149; test failure in jdbcapi.InternationalConnectSimpleDSTest fixture testSimpleDSConnect on IBM iseries - Database '?' not found.
  reinstating the skipped test cases after fix of jvm on iseries


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1245283 13f79535-47bb-0310-9956-ffa450edef68"
e8c9fe3ec59f435f51c1eb92852a3480275af20b,"DERBY-5475: Formalize use of old Derby distributions in tests

Another preparation patch, mostly renaming a class and some methods.
Renamed DerbyVersionSimple to Version to indicate that it isn't coded
specifically to represent a Derby version - it can be used to represent any
version consisting of a major and a minor version component.
Made variables final, some formatting changes.
Renamed 'atLeastAs' to 'atLeast' to follow existing pattern.

Patch file: derby-5475-2a-rename_and_cleanup.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1245349 13f79535-47bb-0310-9956-ffa450edef68"
3b95c636a947eb70d64a730c09f6113fe5dec2af,"DERBY-866: Add tests for GRANT/REVOKE of execute permission on the NATIVE procs with NATIVE authentication turned on.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1245451 13f79535-47bb-0310-9956-ffa450edef68"
54cc8c1e94cc9d5a6c003c9d680e55fcd10f31f4,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Adding test for nested joins.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1290888 13f79535-47bb-0310-9956-ffa450edef68"
5e98e518ff9576d571252eedb84f345ca9e7b868,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Adding test for subqueries.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1290919 13f79535-47bb-0310-9956-ffa450edef68"
601800f8a3ec91e849d1f904259797a277816c62,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Test insert into a table with data from JOINs



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1291057 13f79535-47bb-0310-9956-ffa450edef68"
f09789b9837919825c919697fcadfddb78a2eab4,"DERBY-5617: Improve process handling in SpawnedProcess

Fix incorrect ordering of process cleanup and waiting for the output drainer
threads to terminate. Closing the process streams prematurely is wrong, and
truncated output was observed on a presumably slower/single-core machine.
Fixed a few typos in comments/messages.

Patch file: derby-5617-2a-join_destroy_ordering.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1291631 13f79535-47bb-0310-9956-ffa450edef68"
0a0a6c2b76702caf02054a354e605acd84046dbc,"DERBY-5608: BaseTestCase.readProcessOutput should read getInputStream() and getErrorStream() in separate threads

Removed space character from the text prepended to the stdout output from the
spawned process. Should be safe since all uses of the output relies on indexOf,
trimming or similar mechanisms (i.e. no exact match).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1291647 13f79535-47bb-0310-9956-ffa450edef68"
ff0050302d7b3b2990d77e825c213c10bb7de02e,"DERBY-5620: Replace illegal characters from test name when creating the failure folder

Replace all non-alphanumeric, except '-' and '_', with '_'. TestCase.getName
returning null is not dealt with, as all test cases should be given a name.

Patch file: derby-5620-2a-alphanum.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1291657 13f79535-47bb-0310-9956-ffa450edef68"
0eb5627ec2d7dd64748fb1ff6996758a39b15509,"DERBY-5382; Convert existing harness recovery tests to JUnit tests
  patch constributed by Siddharth Srivastava (akssps011 at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292027 13f79535-47bb-0310-9956-ffa450edef68"
987bbcbe0509c7aff4d44a2afc5dec9112be148d,"DERBY-5624 System can run out of stack space while processing DropOnCommit requests.

Taking care of cleanup after a commit is handled by notifying all ""Observers""
that an event has taken place that they might want to act on and cleanup.  In
the added test case this is triggered by off line commit which effectively
drops and recreates the base table and all of its indexes after loading the
data into them.  

Sometimes these Observers may execute work which adds to the Observer queue,
and that queue can ""miss"" them in the first pass through.

A previous fix for this problem added a recursive call to notifyObservers in
the place that could cause this addition of observers.  This recursive call
was causing stack problems when the number of Observers became large.  For
the checked in test case this was 1000 indexes on 1000 columns of the table.
For other users I believe the cause was a by product of sorts on large disk
based sorts for multi-gigabyte tables and indexes.  2 users were reporting
similar failed stacks for failing compresses of large tables, and one was
able to take this fix to their environment and then successfully run the
compress.

The fix was to remove the recursion and instead loop at the outermost point
until there were no Observers.

Adding the test to the largedata suite as it takes over 10 minutes to run
on my machine.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292079 13f79535-47bb-0310-9956-ffa450edef68"
5c759ff918ab448bc48dd872573158ee32d8dfb7,"DERBY-2687 store/encryptDatabase.sql fails intermittently with ClassNotFoundException, Log Corrupted

Patch derby-2687-2 + removed an additional unused line. This converts
encryptDatabase.sql to JUnit and also makes the test ignore a hash
collision case: the stored two byte digest of the secret key can in can
1/2**16 cases match the the digest of bogus key gotten by decoding the
encrypted key using the wrong bootpassword, thus allowing boot to
proceed using a wrong encryption key, leading to a boot crash (the
""boot issue"").

Another issue (less likely) can still make the test fail (the
""bootpassword change issue""), but cf. the improvement issue DERBY-5622
which would resolve that.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292084 13f79535-47bb-0310-9956-ffa450edef68"
f63124fddcda0ef3029b07fb73c5d5d5b2a5bd87,"DERBY-5624 System can run out of stack space while processing DropOnCommit requests.

forgot to svn add this file to last checkin.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292096 13f79535-47bb-0310-9956-ffa450edef68"
bba8dbfe5f0acffc1431671747282fccd047609a,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Test delete from a table with data from JOINs



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292108 13f79535-47bb-0310-9956-ffa450edef68"
b45dc5f1ac3e0608d87e25592ce2296ddca99ec6,"DERBY-5616 demo/vtis/sql/demoFileVtis.sql needs to be adjusted: messages_en.properties has moved

Patch derby-5616, path corrected.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292109 13f79535-47bb-0310-9956-ffa450edef68"
479cebfa3a0e48a98ae4e589bbd4280a9ad16755,"Delete zero-length file StringColumnVTI.java.

This change is a follow-on to revision 1043122, which intended to delete
StringColumnVTI.java, but that revision instead replaced the file by a
zero-length file. This change completes the deletion of the file.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292132 13f79535-47bb-0310-9956-ffa450edef68"
e3320c9cfe6a08f48dd3c2238467a275e1fc5cba,"DERBY-5584: distinct grouped aggregates can return wrong results

This change addresses a problem that can arise when a GroupedAggregateResultSet
that contains a distinct aggregate is processed multiple times in the
same query execution.

The problem involves this section of GroupedAggregateResultSet:

                        /*
                        ** If there was a distinct aggregate, then that column
                        ** was automatically included as the last column in
                        ** the sort ordering. But we don't want it to be part
                        ** of the ordering anymore, because we aren't grouping
                        ** by that column, we just sorted it so that distinct
                        ** aggregation would see the values in order.
                        */

The solution that was implemented in GroupedAggregateResultSet prior to this
change was assuming that the result set was only opened and read once; it
physically removed the last column from the ordering columns as a side effect
of processing the result set.

However, during a query plan such as this cartesian product, the GROUP BY
subquery is created, then opened/read/closed, opened/read/closed, etc.,
once per row of the other side of the cartesian product.

In that case, we can't physically remove the last column each time, because
then the second and subsequent times that we read the result set, we are
sorting on the wrong columns and we produce the wrong results.

The solution is to have a better way of handling that extra invisible column,
so that we can consider it sometimes, and ignore it other times,
without doing something as destructive as physically removing it from the
ordering array, which is what we do now. 

Note that Derby has had a limitation that there be at most one DISTINCT
aggregate in a query for a long time, probably ever since it was written.
See, for example, this link from the 10.2 docs:
http://db.apache.org/derby/docs/10.2/ref/rrefsqlj32693.html

        Only one DISTINCT aggregate expression per SelectExpression is allowed.
        For example, the following query is not valid:

            SELECT AVG (DISTINCT flying_time), SUM (DISTINCT miles) FROM Flights

The GroupedAggregateResultSet implementation is aware of this limit, and knows
that there is at most one distinct aggregate in the result set. This change
neither increases that dependency nor lessens it; I'm just noting it here
for the record.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292134 13f79535-47bb-0310-9956-ffa450edef68"
89c0bc383ea08eda5bf6f0a8e2678c48b2369f4b,"DERBY-5624 System can run out of stack space while processing DropOnCommit requests.

minor comment changes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292432 13f79535-47bb-0310-9956-ffa450edef68"
ea9ca61f1d6dbab79af7cc35ab8605bf7fe4e055,"updating comment.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292502 13f79535-47bb-0310-9956-ffa450edef68"
056eff7c74bafbb58feee6a5786840b068b6714b,"DERBY-5624 System can run out of stack space while processing DropOnCommit requests.

Only run the testDERBY_5624 in largedata on windows until linux issue resolved.

Currently on linux with 1024 file descriptors per user this test fails.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292595 13f79535-47bb-0310-9956-ffa450edef68"
dcd69d386e335bf049b9018b5356083406bfb4b0,"DERBY-5539: Harden password hashing in the builtin authentication service

Always generate a hashed token, also if there is no user with the
specified user name. This way, authentication failures take the same
amount of time regardless of the user's existence, which will make it
harder for attackers to tell whether a user exists.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292704 13f79535-47bb-0310-9956-ffa450edef68"
0a16899febf85e4d9b164f9a6ee0ffbd99c636bf,"Fix entry for Solaris in javadoc for BaseTestCase.isWindowsPlatform().
On Solaris, os.name is SunOS.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292716 13f79535-47bb-0310-9956-ffa450edef68"
7adbb9a9e129e9bf744fd97837775fd329739ef5,"DERBY-5623: Loosen up synchronization in FileMonitor

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292724 13f79535-47bb-0310-9956-ffa450edef68"
0b11ef40592cb7a06b32cef5e530b13876a9f81d,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Test create view with insert rows from join



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1292941 13f79535-47bb-0310-9956-ffa450edef68"
e06ed55374639822c9ac3a2e6c2ee105c578229a,"DERBY-5382; Convert existing harness recovery test to JUnit tests
  follow up patch, which
  - removes shutdowns which were preventing any recovery to happen
  - makes the first step a separate forkable method
  - adds some comments


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1293028 13f79535-47bb-0310-9956-ffa450edef68"
b9bd28c82bcd0c78fe862b5b1e6ed8380e2326e1,"DERBY-5627: Remove unused methods from the UUID classes

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1293147 13f79535-47bb-0310-9956-ffa450edef68"
9e63fcc41c16d220789f7a172e01226dd37eb816,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Test join using global temporary tables



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1293467 13f79535-47bb-0310-9956-ffa450edef68"
3fe228177494b1d94eba1acce545fbc468f94452,"DERBY-5552 Derby threads hanging when using ClientXADataSource and a deadlock or lock timeout occurs

Code patch contributed by Brett Bergquist - brett at thebergquistfamily dot com 
Derby will no longer null out the connection on lock timeout or deadlock.

I added test to verify proper behavior for the conneciton and transaction
state after the lock timeout occurs.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1293494 13f79535-47bb-0310-9956-ffa450edef68"
e6ffa2a1165e6e7b9e792dc5e2cef91c52261f4b,"DERBY-5631: Extend SecurityManagerSetup to add extra privileges to the set of default privileges (merge two policy files)

Introduced constant NO_POLICY for ""<NONE>"".
Corrected class name in license.
Fixed typo.

Patch file: derby-5631-2a-introduce_NO_POLICY_constant.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1294088 13f79535-47bb-0310-9956-ffa450edef68"
47f286f672c05c2806e8fe2554865a2fcdeac382,"DERBY-866: Add tests for encrypted credentials db.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1294183 13f79535-47bb-0310-9956-ffa450edef68"
ef2328a86324151c7c66bef3e541531b1cd58122,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Testing with more than 2 joins columns



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1294275 13f79535-47bb-0310-9956-ffa450edef68"
78b8a9c8b2a30ea0f6e350ffca19df6237efc00a,"DERBY-5603: EmbedConnection.clearLOBMapping() incorrectly clears lobFiles causing a ConcurrentModificationException 

Rewrote map iteration code.
Fixed incorrect comment.
Made getlobHMObj private.

Patch file: derby-5603-1a-avoid_concurrentmodification.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1294512 13f79535-47bb-0310-9956-ffa450edef68"
caa8627c64f6db6769dcdf00dbc6073083111f98,"DERBY-5614: NullPointerException with INSERT INTO [global temporary table] SELECT ... FROM [VTI]

Fixed string comparison with == in GTT test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1294522 13f79535-47bb-0310-9956-ffa450edef68"
85fa20474837c2fdd2368d9790866087e8fe3c16,"DERBY-5617: Improve process handling in SpawnedProcess

Make the timer thread run as a daemon thread.

Patch file: derby-5617-3a-timer_as_daemon_thread.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1294592 13f79535-47bb-0310-9956-ffa450edef68"
4ee7918f4c0dd9a7b1718bc42224066bb7a8e299,"DERBY-5382; Convert existing harness recovery tests to JUnit tests
  Adjusting OCRecoveryTest to create the database in the first launched method.
  Modifying TestConfiguration to this end to look for a property 
    'derby.tests.defaultDatabaseName'
  which can get passed on in a new BaseTestCase method 
  ((assertLaunchedJUnitTestMethod(String, String)). 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1294805 13f79535-47bb-0310-9956-ffa450edef68"
61b02b72e27b874561a17bc74ff14870f170b216,"DERBY-866: Add test for replicating databases when NATIVE authentication is on.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1294812 13f79535-47bb-0310-9956-ffa450edef68"
063dd554d30bb6ef19425e10b91b86cf973cbd0d,"DERBY-5614: NullPointerException with INSERT INTO [global temporary table] SELECT ... FROM [VTI]

Disables bulk-insert for GTTs when selecting from a VTI.
Added a new test case.
Added SampleVTI, which is an incomplete (only supports a few getters) VTI
intended for basic testing.

Patch file: derby-5614-1b-disable_bulkinsert_gtt.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1295085 13f79535-47bb-0310-9956-ffa450edef68"
601e027b04418d0d7c37ef12a66fac944396ff77,"DERBY-866: Cleanup an NPE in NATIVE authentication and add some defensive code to frustrate blackhats.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1295189 13f79535-47bb-0310-9956-ffa450edef68"
9414ec9540c21e9663fa75e42ad3e8c2d17472f4,"DERBY-5631: Extend SecurityManagerSetup to add extra privileges to the set of default privileges (merge two policy files)

Added the capability to merge two policy files in SecurityManagerSetup. For now
the only merge allowed is to merge an additional policy resource with the
default test policy. The intended use-case is for tests requiring a few extra
permissions to be runnable in the test framework.
Refreshed class comment.
Made getDefaultPolicy() private.
Added a debug println stating which policy is installed by the decorator.

Patch file: derby-5631-1c-merge_policy_files.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1295436 13f79535-47bb-0310-9956-ffa450edef68"
e1383165f541d305b98c66dcd91f53e128d4f3e2,"DERBY-5631: Extend SecurityManagerSetup to add extra privileges to the set of default privileges (merge two policy files)

The previous commit for this issue (revision 1295436) broke all test-cases
using no security policy (""<NONE>"").
Fixed handling of NO_POLICY.

Patch file: derby-5631-1d-merge_policy_files-fix.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1295507 13f79535-47bb-0310-9956-ffa450edef68"
ed505d03076e14d3d8d0a9eda1846bcc64f106a9,"DERBY-5631: Extend SecurityManagerSetup to add extra privileges to the set of default privileges (merge two policy files)

Deal with errors in the URL handling.

Patch file: derby-5631-1e-merge_policy_files-fix-url.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1295609 13f79535-47bb-0310-9956-ffa450edef68"
3bbf7e286891618068ba350b00d7ba61de179133,"DERBY-5639: Minor code cleanup for NetServlet

Removed the unused 'request' parameter from several methods.

Patch file: derby-5639-1a-removed_request_param.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1297016 13f79535-47bb-0310-9956-ffa450edef68"
cc2307182cad0a900d9651f5d251d578cf35eee9,"Removed TODO from the comments - there is nothing left to do as the storeless
service will never have a working store. The TODOs are also annoying because
they typically show up in the task list of IDEs.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1297385 13f79535-47bb-0310-9956-ffa450edef68"
036760687ec42fa5f5d2df1900d08e3e9aca639a,"Remove WiscVTI which has been unused since DERBY-398

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1297395 13f79535-47bb-0310-9956-ffa450edef68"
ca998af8fb8c7136a5957de18166a6ca925d9966,"DERBY-5635: Provide implementation for getMetaData() in VTITemplate

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1297396 13f79535-47bb-0310-9956-ffa450edef68"
fdaf2b584d789b48b93c3b78dfb5a16d2ee90e3d,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit

Rewrote testProtocol to JUnit, now called ProtocolTest. The tests themselves
still live in a separate file.
Added the new adapter ProtocolTestAdapter, which lives in the impl.drda
package. Added this file to the list of extra files to include in derbynet.jar.
Enabled the new test as part of derbynet._Suite and thus suites.All.
The test is compiled to JDK 1.5 level, and doesn't run on J2ME.

Patch file: derby-2031-5b-new_adapter.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1297517 13f79535-47bb-0310-9956-ffa450edef68"
46c48f85c6d84b379e34a08ccad1fd08b184f889,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit

Disabling test while investigating a permission issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1297524 13f79535-47bb-0310-9956-ffa450edef68"
10f4b0f6a46228e931f1b0a06a16c5298d3aa8c2,"DERBY-866: Prevent credentials db from being created with empty username or password.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1297528 13f79535-47bb-0310-9956-ffa450edef68"
c89f06a844902f17efb85d31c59fe546e9ace003,"DERBY-5586: Remove references to monohtml manuals in index.html

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1297541 13f79535-47bb-0310-9956-ffa450edef68"
92fee619d03181622a4a67e2aa82f1bec57eb354,"DERBY-5641: Remove unused BaseDataFileFactory methods plus minor cleanups
Removed methods syncSideLog, pageToDirty and getTempDirectory.
Additional cleanups:
 o removed unused imports
 o removed unnecessary return statement
 o made synchronization object freezeSemaphore final
 o removed unused instance variable backupPath
 o removed unused local variable (and exception instantiation)
   multipleJBMSWarning
 o replaces new Boolean with Boolean.valueOf 

Patch file: derby-5641-1a-unused_methods_plus_cleanup.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1298709 13f79535-47bb-0310-9956-ffa450edef68"
b2dc02cee92212f0d4ae82e3e374d279bca5d2c7,"DERBY-5642: OutOfMemoryError in OCRecoveryTest on phoneME

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1298765 13f79535-47bb-0310-9956-ffa450edef68"
b0ec63dbf5777cba109a90732b31034305de014a,"DERBY-5631: Extend SecurityManagerSetup to add extra privileges to the set of default privileges (merge two policy files)

Added missing privileged block in conversion from File -> URI -> URL -> String.
Replaced a block of code with an existing utility method.

Patch file: derby-5631-1f-merge_policy_files_fix-priv.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1298787 13f79535-47bb-0310-9956-ffa450edef68"
c89c0c98afd3f87d52cebfe3a6df19059ea4fef4,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit

Backed out revision 1297524 to re-enable the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1298789 13f79535-47bb-0310-9956-ffa450edef68"
c3b8ce0a82e7ee153684c7f4613b1166d8a00827,"Minor cleanup of ParameterMappingTest:
 o removed unused imports
 o made HAVE_BIG_DECIMAL final
 o removed empty statements
 o removed unused method unexpectedException
 o rewrote showException, no point with the do-while due to fail()
 o added casts for set[BC]lob(1, null) to remove warnings in IDEs and avoid
   compilation errors when we reach level 1.6 (ambiguous method call). 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1298863 13f79535-47bb-0310-9956-ffa450edef68"
b24d2b429351c7825045bd6ecdec41e23a3370a7,"DERBY-5638 intermittent test failure in test_05_ClobNegative when running full largedata._Suite; LobLimitsTestjava.sql.SQLException: Table/View 'BLOBTBL' already exists in Schema 'APP'.

The test fixture test_05_ClobNegative which runs into intermittent test failures does not commit/rollback the transaction after doing a series of negative testing. This may be the cause of left over locks which does not allow CleanDatabaseSetup to get the required locks to drop the tables as part of it's cleanup. As part of this change, we are adding a rollback at the end of test_05_ClobNegative method and see if that helps with the intermittent locking issues.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1298907 13f79535-47bb-0310-9956-ffa450edef68"
77fbd65a4fb26e8f6396c8cbd4aec70f13e995de,"DERBY-5643: Occasional hangs in replication tests on Linux

Make sure the forked processes have terminated completely before
starting the next test case.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1299573 13f79535-47bb-0310-9956-ffa450edef68"
5ea999a73bf83cb3205fcf4a34766afae2c33f5a,"DERBY-5639: Minor code cleanup for NetServlet

Code cleanups:
 o made 'Runnable service' local
 o removed three unused messages
 o made getHtmlLabelledMessageInstance private
 o removed a bunch of unused local variable initialization values 

Patch file: derby-5639-2a-misc.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1299600 13f79535-47bb-0310-9956-ffa450edef68"
3f6728fcdb1ce18010d04611153aa8e7d1b37514,"DERBY-5646: Get upgrade tests to pass on OJEC 1.1

Ignore 10.3.1.4 on all CVM-based VMs, not only phoneME.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1299620 13f79535-47bb-0310-9956-ffa450edef68"
6cc865c5eddced904a2a173e92d6a1ec75c30f7b,"DERBY-5639: Minor code cleanup for NetServlet

Fixed some HTML errors.

Patch file: derby-5639-3a-html.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1299982 13f79535-47bb-0310-9956-ffa450edef68"
31b96576d5a3d3ec49a97099efbb1b81d404c35a,"DERBY-5644: Correct typo in message 4251E.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1300090 13f79535-47bb-0310-9956-ffa450edef68"
65a5491f15f85c74e97415b0ba82430894ca87fd,"DERBY-5647: Add a separate warning message for the expiration of the DBO's password.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1300120 13f79535-47bb-0310-9956-ffa450edef68"
b60a998f0120af0e71da30cf6475b308ba88ec67,"DERBY-5648: Raise an error if NATIVE password maintenance is performed on a missing user.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1300248 13f79535-47bb-0310-9956-ffa450edef68"
bec8b0d66644f110a887e3de049ecf2a4e39766c,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit

Removed the package-private version of the test.
This used to be run as 'ant junit-pptesting'.

Patch file: derby-2031-6a-pptesting_removal.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1300285 13f79535-47bb-0310-9956-ffa450edef68"
45f25aa4ae6422789e123c8a063887cf59e2c0c4,"DERBY-5638 intermittent test failure in test_05_ClobNegative when running full largedata._Suite; LobLimitsTestjava.sql.SQLException: Table/View 'BLOBTBL' already exists in Schema 'APP'.

One of the tests run as part of large data suite is Derby5624Test and it has following in protected static Test baseSuite(String name) to set the lock timeout
       return new CleanDatabaseTestSetup(
               DatabasePropertyTestSetup.setLockTimeouts(suite, 2, 4))
       {

The test really doesn't need any special lock timeout setting and may be it is interferring with the locks timeouts that we see later on in subsequent suites in large data suite. This commit removes the unnecessay lock timeout setting from Derby5624Test.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1300459 13f79535-47bb-0310-9956-ffa450edef68"
7d6ee2f47266382d6b1b639cd52cfdbc876de925,"DERBY-5643: Occasional hangs in replication tests on Linux

Increase startup timeout to 4 minutes in NetworkServerTestSetup to work
around http://bugs.sun.com/view_bug.do?bug_id=6483406. Make replication
tests and compatibility tests use NetworkServerTestSetup's helper methods
to check if the server is up.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1300475 13f79535-47bb-0310-9956-ffa450edef68"
e276048f205b780af14e231542323b8f99c4776f,"DERBY-5649; make improvements to nstest so it's easier to run/analyze/debug


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1300658 13f79535-47bb-0310-9956-ffa450edef68"
60cc019de2fc5289940191a254ff30d0eeabb198,"DERYB-5658: Regularize the casing of procedure names in error messages for NATIVE authentication.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1301010 13f79535-47bb-0310-9956-ffa450edef68"
2489f473faeda0917c793c2b3ef7866eb7ce0c93,"DERBY-5657: Split complex error message into 3 shorter messages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1301064 13f79535-47bb-0310-9956-ffa450edef68"
afb7ad95a33188724cf4e566769607e97ef7f507,"DERBY-5638 intermittent test failure in test_05_ClobNegative when running full largedata._Suite; LobLimitsTestjava.sql.SQLException: Table/View 'BLOBTBL' already exists in Schema 'APP'.

The issue has been that the CleanDatabaseTestSetup, after the last test fixture of embedded suite is done, tries to drop the tables but runs into lock timeout errors and hence it never finishes dropping the tables. None of these errors get reported anywhere by CleanDatabaseTestSetup and we simply move on to the next suite which in our case is network server running the large data tests. As part of CleanDatabaseTestSetup decorator for network server, we try to drop the existing objects in the database again before creating the new objects required by the new suite and the drop tables again run into lock timeouts. Now when the CleanDatabaseTestSetup creates the objects needed by network server suite, it runs into object already exists error. 

This commit will use singleUseDatabaseDecorator for the network server suite run of large data suite so a brand new database will be created and that way it will not run into left over database objects from the embedded run of large data tests. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1301109 13f79535-47bb-0310-9956-ffa450edef68"
2f3260812ba0a59f74c01d55aa996282aae6be24,"DERBY-5649; make improvements to nstest so it's easier to run/analyze/debug
  adjusting the test so it runs better when -Dderby.nstest.backupRestore=false


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1301290 13f79535-47bb-0310-9956-ffa450edef68"
6a53c94a2678153fb26f462b4df0c52b2da0922d,"DERBY-5643: Occasional hangs in replication tests on Linux

Replication tests and compatibility tests should fail if ping does not
succeed before timeout.

Negative test case in AutoloadTest should not wait until timeout.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1302811 13f79535-47bb-0310-9956-ffa450edef68"
78c2db1dfb013500d6ec709df5384b9ade7f002a,"DERBY-5357 SQLJ.INSTALL_JAR shouldn't use identifier as file name

Since SQL identifiers can contain arbitrary characters, it is not safe
to use them as is as part of a file name. Trying ot map parts of the
name by excluding unsafe characters leads to a chance of name
collision. So, we have changed the naming altogether.

This patch, derby-5357-with-tests-4, changes the name (and location)
of the jar files stored in a database. The name is now based on UUID,
and no subdirectories under the directory ""jar"" are used: all
jar-files reside directly in the ""jar"" database directory, and the
name is of the form

<Derby uuid string>[.]jar[.]G[0-9]+

where <Derby uuid string> has the form hhhhhhhh-hhhh-hhhh-hhhh-hhhhhhhhhhhh
where h id a lower case hex digit, and the suffix "".G[0-9]+"" is the
version number as before.

The format is changed on hard upgrade, cf tests in Changes10_9.

Also, dblook has been updated to cater for this change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1302836 13f79535-47bb-0310-9956-ffa450edef68"
c5b9acbe447a05fade161d85178d083a57a35116,"DERBY-866: Mark a database as a credentials DB iff the DBO's credentials are stored in SYS.SYSUSERS.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1302868 13f79535-47bb-0310-9956-ffa450edef68"
c704594365ae0755e170810694479ebd6cc21e80,"DERBY-866: Improve the wording of some error messages for NATIVE authentication.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1303069 13f79535-47bb-0310-9956-ffa450edef68"
3ce7ebd11daddb71a1653ac6bdfc31ddd714ac8b,"DERBY-5638 intermittent test failure in test_05_ClobNegative when running full largedata._Suite; LobLimitsTestjava.sql.SQLException: Table/View 'BLOBTBL' already exists in Schema 'APP'.


Adding a new test fixture to LobLimitsTest.java which will shutdown the databases. This test fixture will be the last one to get executed in the suite since the tests are run in order in this particular suite. This shutdown will ensure that all the logs are applied to the database and hence there are no unapplied log files left at the end of the suite. Large data suite deals will large data objects which can cause us to have large log files and if the database is not shutdown at the end of the suite, the suite will finish successfully but will leave a database directory with large number of big log files. Nightly machines which run this suite on a regular basis can eventually run out of disk space if those machines do not delete the database directories from multiple runs.

I ran the large data suite on my machine and it ran with no problems. I checked the size of the database wombat after the suite finished and the size of the db was much smaller because of addition of shutdown databases fixture.

Another change made as part of the code changes is to do a truncate table after doing delete from table. TRUNCATE table will avoid post-commit work and shouldn't cause any concurrent locking to happen. We do not want to remove delete from table though because it exercises separate code path in Derby compared to TRUNCATE.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1303630 13f79535-47bb-0310-9956-ffa450edef68"
47bae99aaed2c9494b9d83172b9ef92528cf5c45,"DERBY-5664: Include driver tests in jdbcapi suite

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1303693 13f79535-47bb-0310-9956-ffa450edef68"
b5fcca5e0a7bc8aba88ca8509b5f428a6a721c1c,"DERBY-5638 intermittent test failure in test_05_ClobNegative when running full largedata._Suite; LobLimitsTestjava.sql.SQLException: Table/View 'BLOBTBL' already exists in Schema 'APP'.

Now that we truncate the tables and shutdown the databases after the large data suite run, we do not need to have a clean database test setup for network server run. I have run large data suite multiple times on my machine with the changes in this revision, and then all finished succesffuly with a fairly small wombat db size(3.9MB) and I did not see any lock timeouts in derby.log



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1305524 13f79535-47bb-0310-9956-ffa450edef68"
32457840a870e6ee15ab0ac175392ff80eefe046,"DERBY-5664: Include driver tests in jdbcapi suite

Remove tests from junit-core target now that they are already included
via jdbcapi.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1306452 13f79535-47bb-0310-9956-ffa450edef68"
8454e15e87ce523e46650347c915f7a57fc58f0f,"DERBY-5377; AssertionFailedError in testCaseCS4595B_NonUniqueIndex in AccessTest
  Adjusting the test to not check for pages visited in assertStatsOK method if
  'null' is passed in for the expPages parameter, and passing in 'null' with the
  three queries that have shown to hit this issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1306596 13f79535-47bb-0310-9956-ffa450edef68"
26fa4b7485e57c6df7725438331c11c19be45b26,"DERBY-5377; AssertionFailedError in testCaseCS4595B_NonUniqueIndex in AccessTest
  Adjusting the code to actually pass the null in the last query.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1306600 13f79535-47bb-0310-9956-ffa450edef68"
1b025bdc4b916abc0aebdf8b6654052a019f6e08,"Make test less greedy on the heap.
Added two extra asserts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1306734 13f79535-47bb-0310-9956-ffa450edef68"
1b06de684f3bc3780abe6b61b33567cdd9d7d344,"DERBY-5083: Document automatic update and creation of index cardinality statistics (istat)

Fixed comment, which used an incorrect value for the trace property.
Removed two TODOs.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1307392 13f79535-47bb-0310-9956-ffa450edef68"
8dc2ebcadad5971a6abeb4b077ec2916a4164e53,"DERBY-5639: Minor code cleanup for NetServlet

Added basic protection against XSS.

Patch file: derby-5639-4a-xss.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1308297 13f79535-47bb-0310-9956-ffa450edef68"
c1192c0b17d93f778fbb33db51e87f7188e67517,"DERBY-5677: ClassNotFoundException when running suites.All without derbynet.jar

Exclude tests that cannot run without derbynet.jar if the network server
classes are not available on the classpath.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1308434 13f79535-47bb-0310-9956-ffa450edef68"
70bfa37988fc74330ab44c67018c545887fedf74,"DERBY-5678: LocalizedDisplayScriptTest fails on JVMs that don't support EUC_JP encoding

Skip the test on platforms that don't support EUC_JP.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1308436 13f79535-47bb-0310-9956-ffa450edef68"
26e4e3f309325129a419a60c8037464956afa128,"DERBY-5682: ProtocolTest failures: Unsupported encoding MacGreek

Replaced usage of MacGreek with UTF-16BE in two tests, which should be
avaialble on all JVMs.

Patch file: derby-5682-1b-use_supported_encoding.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1308694 13f79535-47bb-0310-9956-ffa450edef68"
6a072f828dd040b8cf63d0c0fb160ee086ddb4e0,"DerbyDERBY-5663 Getting NPE when trying to set derby.language.logStatementText property to true inside a junit suite.

It is possible that the same instance of SystemPropertyTestSetup decorator is used more than once. In such a case, nulling out the oldValues in tearDown method can cause a null pointer exception in the subsequent use of the same SystemPropertyTestSetup. The right thing to do is to initialize oldValues to new Properties object everytime SystemPropertyTestSetup.setUp gets used. In order to do this, we are removing the initialization of oldValues from the constructor and putting it in setUp method.

Additionally, we do not want to null out newValues in tearDown method because the subsequent use of same SystemPropertyTestSetup instance will loose the new values requested by the user of the decorator. Because of this, we will not null newValues in tearDown anymore.

Existing junit All suite and derbyall ran fine with these changes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1309244 13f79535-47bb-0310-9956-ffa450edef68"
ca3a6774d4a2a0a64b72a312bcd0bf865ff81b6d,"DERBY-5328: The private fields of the NetServlet can be changed by multiple threads, giving rise to race conditions and corruptions.

Made doGet synchronized.

Patch file: derby-5328-02-aa-synchronized_doget.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1309264 13f79535-47bb-0310-9956-ffa450edef68"
7840c516a5512ee41fe63207ac92bc657e2638b3,"DERBY-5683: BaseJDBCTestCase.getDatabaseProperty() should close resources before returning

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1310413 13f79535-47bb-0310-9956-ffa450edef68"
bb4cfe91c4b83d555d6425353e778540f71f9db8,"DERBY-5687: Back out the concurrency improvements introduced by DERBY-4437.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1311285 13f79535-47bb-0310-9956-ffa450edef68"
c69fcab5a7e7cbad423cee7106fa334f8a06a1ee,"DERBY-5687: Adjust the public api javadoc for SequencePreallocator so that it no longer refers to identity columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1311310 13f79535-47bb-0310-9956-ffa450edef68"
23e8c92edd7e423b39a102d599e5f50cb5ba3857,"DERBY-5454; ERROR 40001 deadlock in nstest on select max(serialkey)
  replacing the code causing the intermittent deadlock with non-jdbc calls


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1311804 13f79535-47bb-0310-9956-ffa450edef68"
c3c7b7b97d35255043a7c98c4ddaec17c9022a5f,"DERBY-2031: Convert derbynet/testProtocol.java to JUnit 

Removed the files associated with the old harness test.
Removed references to the hold harness test.
Adjusted some comments, and removed some now deprecated code.

Patch file: derby-2031-7a-old_harness_test_removal.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1327050 13f79535-47bb-0310-9956-ffa450edef68"
5705f5bf26152d6c837b8f788d66d9932b24b609,"DERBY-5494

Prior to this fix the nested user update transaction used by sequence updater
was doing a ""lazy"" commit, where the log record for the commit waw written
to the stream but not forced to disk.  It would get forced to disk by any
subsequent user transaction commit.

Changed system to default doing a real commit for all nested user update
transactions, and those that don't need that behavior should use commitNoSync().
Changed identity columns to use the commitNoSync() to keep same performance
for those operations.

Includes the test contributed by rickh as part of DERBY-5493 change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1327218 13f79535-47bb-0310-9956-ffa450edef68"
8e352d60fa7b0eae8b95541f34af48a3be40dd84,"DERBY-5493: Fix correctness problem with sequences by introducing syscs_peek_at_sequence and simplifying the SequenceUpdater code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1327471 13f79535-47bb-0310-9956-ffa450edef68"
810f2b9658ddcbd881600c6a9e0cff232c9d4d35,"DERBY-5493: Boost the size of preallocated sequence ranges from 20 to 100 in order to boost concurrency.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1327682 13f79535-47bb-0310-9956-ffa450edef68"
5d3b815a4f6d000eddb231beef898859c54ab8ab,"DERBY-5693: BUILTIN should say passwords are hashed not encrypted

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1327910 13f79535-47bb-0310-9956-ffa450edef68"
60b725ace18ceaa18d661eff7779c6084b639e7f,"DERBY-5692; intermittent test failure in storetests/st_derby715.java
  added st_derby715_derby.properties to change derby.locks.waitTimeout from
  the default (1, in default_derby.properties) to 60 seconds.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1328061 13f79535-47bb-0310-9956-ffa450edef68"
ab4a13db59b932442b5242f6345627d5c56fd7fb,"DERBY-5699: Disable automatic conversion to star imports in NetBeans project

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1328280 13f79535-47bb-0310-9956-ffa450edef68"
76a3df4a2ecb0eb7ed4ecfbdb047919e069c66da,"DERBY-5695: Speed up population of tables in OrderByAndSortAvoidance

Use prepared statements to avoid unnecessary compilation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1328328 13f79535-47bb-0310-9956-ffa450edef68"
e3a636576a08f92b75ec6936ffc4f07725844a3b,"DERBY-5640: Make MessageBuilder add a desc element to the tables it generates so that they satisfy accessibility guidelines.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1328359 13f79535-47bb-0310-9956-ffa450edef68"
aa1dc7a9d4a4564c6d57f94106a54fa452d38d14,"DERBY-866: Prevent anyone other than the DBO from turning on NATIVE authentication.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1328431 13f79535-47bb-0310-9956-ffa450edef68"
673b7a795f61ce80ef03ee70f03ef24a3b9ddd13,"DERBY-5701: Make UpdatableResultSetTest less hungry on heap space

Close statements earlier.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1329148 13f79535-47bb-0310-9956-ffa450edef68"
f6c58c8c179f5d24aada043cdc68f6d0e27a75e5,"DERBY-5489: getBinary() returns incorrect data after getObject() call on BLOB column

Added a test for the expected behavior of valid getters invoked on LOB columns. 
A restriction has been put in place to allow for only one getter invocation on
a given field, with the possible exception of getBytes and getString (iff
invoked as the first getter on the field).

Patch file: derby-5489-1b-test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1329186 13f79535-47bb-0310-9956-ffa450edef68"
29a19ff96bceb0c2b60cc07b73e6a785e8c1976a,"DERBY-5681 When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed

This problem happens because when two constraints share the same backing index, we conditionally dropped the statistics. Instead, this fix will make sure that the statistics are always dropped even if the underneath backing index is still valid(and hence won't be dropped and recreated) for other constraints. I ran derbyall and junit suite and they both ran fine with no errors.I have also dded few tests for the issue. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1329359 13f79535-47bb-0310-9956-ffa450edef68"
ce3737f7b15f80371f899c4662eb2cb71fd23400,"DERBY-5706: Clean up statements in CreateTableFromQueryTest

Stop storing the statement in an instance variable, so that it is
automatically closed and forgotten by the framework.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1329633 13f79535-47bb-0310-9956-ffa450edef68"
980db345205d30257f9cc900a1c03a5b4abdfd5e,"DERBY-5707: Clean up statements in CharUTF8Test

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1329686 13f79535-47bb-0310-9956-ffa450edef68"
085b6e54a5a08930da537f8ec8ec37a05d63fc11,"DERBY-5667; testReadCommitted(org.apache.derbyTesting.functionTests.tests.store.UpdateLocksTest)junit.framework.AssertionFailedError: Missing rows in ResultSet
  adding call to wait for post-commit work after deletes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330066 13f79535-47bb-0310-9956-ffa450edef68"
9513bab439fb91e6c1aeaabf674654e4124b222d,"DERBY-5711: NullsTest doesn't call super.tearDown()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330120 13f79535-47bb-0310-9956-ffa450edef68"
b91e25a351d41551eaeae72bc6882a60e33259c5,"DERBY-5710: BigDataTest.tearDown() doesn't call super.tearDown()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330121 13f79535-47bb-0310-9956-ffa450edef68"
29966bcd0727eb6f31aea1149931e9ad06512fa4,"DERBY-5709: ResultSetFromPreparedStatementTest keeps references to non-default connections

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330127 13f79535-47bb-0310-9956-ffa450edef68"
0058f952f78e1bc114ea5512c81dfe7dea538313,"DERBY-5717: TableFunctionTest keeps reference to connection after completion

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330194 13f79535-47bb-0310-9956-ffa450edef68"
6e35772a0dc74df1ead79838fcccaa944b08b887,"DERBY-5704: Various cleanups in CoalesceTest

Remove the instance variables to make it easier to release resources.

Make sure negative test cases fail if no exception is thrown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330195 13f79535-47bb-0310-9956-ffa450edef68"
fcaa724a33e1ff179ebd8720e1fab710dd389f47,"DERBY-5705: Authorization decorators don't null out connections when done

- Callers that override DatabasePropertyTestSetup.tearDown() with an
  empty method are replaced by calls to getNoTeardownInstance().

- Make the tearDown() method in decorators returned by
  getNoTeardownInstance() close and null out the reference to the
  default connection.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330196 13f79535-47bb-0310-9956-ffa450edef68"
90b6f2f0b58632bf8830f359ce445b97d80e215b,"DERBY-5708: simpleThread test doesn't release connection

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330197 13f79535-47bb-0310-9956-ffa450edef68"
fd2f1f7385335104c2702ee48cdcf8147721608e,"DERBY-5712: CheckConstraintTest holds on to resources after completion

Use local variables instead of instance variables to prevent references from
being held after the test has finished.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330199 13f79535-47bb-0310-9956-ffa450edef68"
3015812063fe492d10f9b3a635ce0dd4056312af,"DERBY-5713: AlterTableTest holds on to resources after completion

Use local variables instead of instance variables to prevent references from
being held after the test has finished.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330200 13f79535-47bb-0310-9956-ffa450edef68"
082f2edeb5b6d684ed62e7263b7232658be3f1fb,"DERBY-5714: ColumnDefaultsTest holds on to resources after completion

Use local variables instead of instance variables to prevent references from
being held after the test has finished.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330201 13f79535-47bb-0310-9956-ffa450edef68"
6001ab6040a7517f0de5ff51cef60905f19eecde,"DERBY-5718: UniqueConstraintSetNullTest calls super.tearDown() too early

Call super.tearDown() last in tearDown(), and use framework helper methods
in setUp() and tearDown() to simplify and make resources freed automatically.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330202 13f79535-47bb-0310-9956-ffa450edef68"
8bc55f33c15dfa0054fc0aa4ecc6f4ffde9be35d,"DERBY-5719: UniqueConstraintMultiThreadedTest doesn't call super.tearDown()

- Call super.tearDown() from the override

- Use framework helper methods to simplify setUp() and tearDown()

- Eliminate the shared DataSource instance (use openDefaultConnection()
  instead)

- Remove unused imports

- Fix some typos in javadoc comments

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330203 13f79535-47bb-0310-9956-ffa450edef68"
8e08903b3fe6e1923e302d515a75e1523ea0c90a,"DERBY-5720: UngroupedAggregatesNegativeTest doesn't call super.tearDown()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330204 13f79535-47bb-0310-9956-ffa450edef68"
a3b9db04c161c88e8bab48d0ede01151ef838968,"DERBY-5715: InbetweenTest holds on to resources after completion

Use local variables instead of instance variables to prevent objects
from being held after the test completes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330206 13f79535-47bb-0310-9956-ffa450edef68"
cbce56014a7a4bbcb5e0d7d4976226614e243bea,"DERBY-5716: TimestampArithTest keeps references to statements after completion

- Add tearDown() method that closes the statements and clears the
  references to them

- Make the test data set static so that it is not cloned with one
  identical set for every test case

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330207 13f79535-47bb-0310-9956-ffa450edef68"
c748453af306ec334ff49287caef5fe9218e089c,"DERBY-5667; testReadCommitted(org.apache.derbyTesting.functionTests.tests.store.UpdateLocksTest)junit.framework.AssertionFailedError: Missing rows in ResultSet
  adjusting the test so every commit following a delete is followed in turn
   by a call to wait for post-commit threads to finish.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330482 13f79535-47bb-0310-9956-ffa450edef68"
bde7b3b8c7e25af5f4e3eb246ef090109c2dbd03,"DERBY-5489: getBinary() returns incorrect data after getObject() call on BLOB column

o Added missing check to getObject on LOB columns in the client driver.
o Added new checks to getBytes/getString for LOB columns in both drivers,
  which stands out from the rest of the getters because invoking them multiple
  times on a LOB column is allowed (this is an exception to the rule).
o Added two new tests which verifies that the data return when invoking the
  mentioned getters multiple times returns correct data, including when you
  first invoke getBytes/getString and then invoke one of the other valid
  getters for LOB columns. Some refactoring of LobRsGetterTest.
o Adjusted access pattern in UpdatableResultSetTest to comply with the rules.

At a later time it may be possible to lift this restriction on LOB columns.

Patch file: derby-5489-2b-fixes.diff
--This line, and tose below, will be ignored--

M    java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/LobRsGetterTest.java
M    java/testing/org/apache/derbyTesting/functionTests/tests/jdbcapi/_Suite.java
M    java/testing/org/apache/derbyTesting/functionTests/tests/lang/UpdatableResultSetTest.java
M    java/client/org/apache/derby/client/am/ResultSet.java
M    java/engine/org/apache/derby/impl/jdbc/EmbedResultSet.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330681 13f79535-47bb-0310-9956-ffa450edef68"
e2f4f825017984068887f8efe90f1bcfc33b631a,"DERBY-5475: Formalize use of old Derby distributions in tests

Added a very simple repository for Derby releases. It is compatible with
the existing property used to control where the tests look for old
releases (i.e. the upgrade and the compatibility test):
  derbyTesting.oldReleasePath
Added two new classes in the junit test framework directory:
 o ReleaseRepository
   The repository, from which you can obtain a list of available Derby
   distributions that exist on the local machine.
 o DerbyDistribution
   Represents an on-disk, JAR-based Derby distribution.

The initial repository is very simple, I expect that its functionality may
be somewhat extended as tests start using it.

Patch file: derby-5475-3a-repository.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330751 13f79535-47bb-0310-9956-ffa450edef68"
3abd440fbdd6d1c66d2b50f9eacd2980d9ae4213,"DERBY-5679: Fill nonexistent columns with NULLS during update of later column in the row.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1330877 13f79535-47bb-0310-9956-ffa450edef68"
9b4a4655d25db8e2280e6af50e14c4915ea76ea0,"DERBY-5722: InternationalConnectTest forgets to call super.tearDown()

- Call super.tearDown() from tearDown()

- Close XAConnections and PooledConnections

- Clear reference to ArrayList in tearDown() to allow it to be gc'ed

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1331262 13f79535-47bb-0310-9956-ffa450edef68"
316ae6365576d6c35776372f7d3e15be52709bf9,"DERBY-5721: ParameterMappingTest lacks call to super.tearDown()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1331263 13f79535-47bb-0310-9956-ffa450edef68"
4862eff2ba65f87190c27a9682bc96d7dbc89837,"DERBY-5723: LongColumnTest doesn't call super.tearDown()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1331264 13f79535-47bb-0310-9956-ffa450edef68"
4ef144b3cd4de37a590aaf58a0a7084aabc43f29,"DERBY-5724: EncryptionKeyTest sometimes keeps reference to connection

Null out the connection unconditionally, also if it is closed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1331265 13f79535-47bb-0310-9956-ffa450edef68"
cf6e8074aaeb31aa9e30bc40231822fb8b1d3be6,"DERBY-5725: ErrorStreamTest doesn't call super.tearDown()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1331266 13f79535-47bb-0310-9956-ffa450edef68"
76b75c3e756221d94ba35a4f8732f31acb875918,"DERBY-5679: Add more test cases to verify correct behavior of rollback on rows with lots of columns and on long rows.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1331484 13f79535-47bb-0310-9956-ffa450edef68"
f5bfd989648befc82da6df1bdf70bc1bf6674a1d,"DERBY-5686; multiple intermittent errors in nightly tests during DriverMgrAuthenticationTest test. reason: An SQL data change is not permitted for a read-only connection, user or database. 
  committing patch DERBY_5686_1.diff (after removing some unnecessary imports).
  Hopefully this will give us at least some insight into what's happening when
  this happens during teardown of the DatabasePropertyTestSetup.  


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1331601 13f79535-47bb-0310-9956-ffa450edef68"
136610d8b821eed75c0d594e2fdd50e9cea74d60,"DERBY-5729: Replication tests keep references to connections after completion

- close connections in tearDown()

- null out references to connections, and to other objects that are no
  longer needed, in tearDown()

- remove the fields masterServer and slaveServer since they are always
  null

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332133 13f79535-47bb-0310-9956-ffa450edef68"
eb14359fd87fb9c3ddd99593a2475968b147a5d9,"DERBY-5732: ProtocolTest doesn't clean up its test resources

Added tearDown-method that closes and nullifies test resources.

Patch file: derby-5732-1a-add_teardown.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332165 13f79535-47bb-0310-9956-ffa450edef68"
0d7d3daada071bbd5066abac296ef3334593a640,"[RELEASE CHECKIN] Derby release ID set to: 10.9.1.0

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332187 13f79535-47bb-0310-9956-ffa450edef68"
fab793317d7f595d6149b62609b914fefe5521c7,"[RELEASE CHECKIN] Check in NOTICE as part of building a release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332188 13f79535-47bb-0310-9956-ffa450edef68"
13e941a475e3d4e31ccaebe9aa0e5961b8acc43c,"[RELEASE CHECKIN] Derby release ID set to: 10.9.1.1

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332194 13f79535-47bb-0310-9956-ffa450edef68"
ba200762d5b2a20bdfa89a95fbf4ac06c1b3f470,"Undo previous checkin of release properties which happened during a dry-run of the release generation scripts.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332199 13f79535-47bb-0310-9956-ffa450edef68"
75e97c183570722b99e5337286ae647be21c0fa7,"DERBY-5686; multiple intermittent errors in nightly tests during DriverMgrAuthenticationTest test. reason: An SQL data change is not permitted for a read-only connection, user or database. 
  Another attempt to catch the error and print info - now if it happens in 
  DatabasePropertyTestSetup.setUp.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332484 13f79535-47bb-0310-9956-ffa450edef68"
623cd0d6e5891b4a3fbc59155cb1bf8e9ed4b78d,"DERBY-4321; test nstest generates errors XBM06 re reencryption and 22003 re value outside range for decimal/numeric.
  updating README to reflect occurrences of 40XL1 as normal.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332887 13f79535-47bb-0310-9956-ffa450edef68"
cc049626c70330be7e9b42d25a826d9048fdedaf,"DERBY-5733: Source file for OrderByAndSortAvoidance contains characters not available in the C locale

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332938 13f79535-47bb-0310-9956-ffa450edef68"
ade6fcfd6b88d252874b8824123a393b7c856014,"DERBY-5726: Make it more difficult to forget calling super.tearDown() from BaseJDBCTestCase's subclasses

Raise assert failure if test case has not called super.tearDown() after successful completion.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1332967 13f79535-47bb-0310-9956-ffa450edef68"
92dc6b812a2645ca665c0f3af5f48fbcedc76311,"Added a code comment.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1333096 13f79535-47bb-0310-9956-ffa450edef68"
5e39436ed025892a46da580b99f064b60ce2b2ed,"DERBY-5561: Race conditions in LogicalConnection checking for a null physical connection

Made methods calling checkForNullPhysicalConnection synchronized.

Patch contributed by Brett Bergquist (brett at thebergquistfamily dot com).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1333305 13f79535-47bb-0310-9956-ffa450edef68"
c44e39a922c4af3acf5b91041b075d54427897a6,"DERBY-5737: Remove GenericDescriptorList.elements and replace Enumerator usage with Iterator

Removed elements-methods and use of Enumerator in preparation of refactoring.

Patch file: derby-5737-1a-iterator.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1333356 13f79535-47bb-0310-9956-ffa450edef68"
73ff7eb9f48b7046e239c07d9c9e56367c9a399e,"DERBY-5734: End transaction if CleanDatabaseTestSetup.decorateSQL fails

Make sure the transaction is ended even if decorateSQL, which can be
overridden to perform custom setup tasks, fails.
This patch also nulls out the reference to the default connection
(clearConnection() must be paired with getConnection())

Patch file: derby-5734-1b-end_transaction.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1333360 13f79535-47bb-0310-9956-ffa450edef68"
22d98b53d8c248d7be29bda84b093b9cd04f9316,"DERBY-5742: Improve the wording of an error message.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1333915 13f79535-47bb-0310-9956-ffa450edef68"
7aa3f882bdf2b8fa2496e1555b8179e31ecfe332,"DERBY-5686: multiple intermittent errors in nightly tests during DriverMgrAuthenticationTest test. reason: An SQL data change is not permitted for a read-only connection, user or database.

Make assertDirectoryDeleted accept if the root directory disappears under it
even if it couldn't delete all the files inside. The prime example is when
db.lck is the only file that can't be deleted. The reason is that Derby hasn't
shut down before the deletion of the database directory starts. Depending on
timing, assertDirectoryDeleted may be able to delete all files (including the
root directory) except the lock file, and the lock file is deleted by Derby
itself.

This patch doesn't fix this JIRA issue, it's a general improvement to the
deletion logic only.

Patch file: DERBY-5686_3.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1334313 13f79535-47bb-0310-9956-ffa450edef68"
b8c92c0fa25c7f47c18314a442a879eeea4989a3,"Removed inaccurate comment. While integer reads/writes are atomic, we must also
use volatile for this code to be thread safe. We are, and that means we are 
using synchronization.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1334873 13f79535-47bb-0310-9956-ffa450edef68"
f1f7c042cf94888bcf67a2ce0d065131175413bf,"DERBY-5727: Update POMs to deploy Maven artifacts to repository.apache.org and use ASF parent POM

Inherit from the top-level ASF POM.
Updated instructions on how to test/release Maven artifacts.

Patch file: derby-5727-1b-inherit_asf_pom.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1334874 13f79535-47bb-0310-9956-ffa450edef68"
1d3aaa1ef1e34e5a702e54e1dceecdbc3919edcd,"DERBY-5745: Remove unused local variables from DataDictionaryImpl 

Removed a bunch of unused local variables in DDI. Some of them were obtained
by invoking various methods, but they should not cause side-effects on the
system.

Patch file: derby-5745-1a-remove_unused_lvars.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1334910 13f79535-47bb-0310-9956-ffa450edef68"
06a9c554ac150214a8deef2aca4c4d9fc9c33e3a,"DERBY-5561: Race conditions in LogicalConnection checking for a null physical connection 

Changes:
 o converted docs to Javadoc
 o removed stale doc
 o corrected/improved some comments
 o made physicalConnection_ package-private
 o made checkForNullPhysicalConnection final

Patch file: derby-5561-2a-minor_cleanups.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1334919 13f79535-47bb-0310-9956-ffa450edef68"
2be23a9276b41b8b760be13087b70158cf6993a8,"Remove comment that referred to old code.

The code was changed to use Calendar.setTimeInMillis() in DERBY-2397, so
there is no longer a need for a comment explaining why setTimeInMillis()
is not used.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1334929 13f79535-47bb-0310-9956-ffa450edef68"
33605bd716f12b196e752cecc151e83bd66cc5c4,"DERBY-5741: Improve error reporting for missing UserAuthenticators.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1335010 13f79535-47bb-0310-9956-ffa450edef68"
18ab492a15ae0e50108e1b1dd0f1ae68d2266c8e,"DERBY-5736: NullPointerException in GenericTriggerExecutor.executeSPS() caused by OutOfMemoryError

Guard the cleanup with a null check to prevent masking the original
error with a NullPointerException.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1335418 13f79535-47bb-0310-9956-ffa450edef68"
9765d83737ce221d67758a7ccf775c0622a291ae,"DERBY-5730: DataDictionaryImpl leaks references to itself via SYSFUN_AD

Make the AliasDescriptors for SYSFUN functions private to a single
DataDictionaryImpl instance instead of shared between them.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1335423 13f79535-47bb-0310-9956-ffa450edef68"
74e2f88a4d2b9424c78af045bae606d331ef97bd,"DERBY-5234: Fix database corruption during table compression.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1335570 13f79535-47bb-0310-9956-ffa450edef68"
355ebf60464ac8b7b2d50bab46576e6d11b13ae9,"DERBY-5234: Add edge case tests for compression-related data corruption.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1335677 13f79535-47bb-0310-9956-ffa450edef68"
33cfd07fbd4a2dd8345b958787645862147b19c7,"DERBY-5686; multiple intermittent errors in nightly tests during DriverMgrAuthenticationTest test. reason: An SQL data change is not permitted for a read-only connection, user or database.
  adding a finally block to increase the attempt count always. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1335820 13f79535-47bb-0310-9956-ffa450edef68"
3ed1ad12ab4044cccf31a75874d41a5573ac5db2,"Added a comment about the istat daemon.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1336197 13f79535-47bb-0310-9956-ffa450edef68"
b0902f1454da1a7e2e2523e19a8a0cbdc6860b77,"DERBY-5565 Network Server should reject client connections that are not Derby  Network Client.

We now reject all PRDID's that do not start with DNC.
The protocol tests have been changed to use the DNC10090 PRDID instead of TST01000. This actually alters the code path where there is slightly different behavior in later derby client versions, so that we have to skip an additional dss on connect for the diagnostic information.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1336268 13f79535-47bb-0310-9956-ffa450edef68"
1ac0fe849ac9276284372ccefb31f34fcca11aac,"DERBY-5565 
--This line, and  Network Server should reject client connections that are not Derby  Network Client.

Add test to verify non DNC client rejection

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1336292 13f79535-47bb-0310-9956-ffa450edef68"
43534c8a43c879d0c228e6eb15342d5890f2a228,"DERBY-5686 (partial): Fix broken logic in BaseJDBCTestCase.assertDirectoryDeleted

Added forgotten return statement. This should make the test/setup pass if the
root directory disappears on the second or later attempt to delete all files.

Patch file: DERBY-5686-3a-add_missing_return.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1336316 13f79535-47bb-0310-9956-ffa450edef68"
15097dd7af1c09b8fc2e2d1e011af9e683781e85,"DERBY-5686; multiple intermittent errors in nightly tests during DriverMgrAuthenticationTest test. reason: An SQL data change is not permitted for a read-only connection, user or database. 
  updating retry logic in DatabasePropertyTestSetup
  also adding code to CleanDatabaseTestSetup to catch any test leaving a
  connection in read-only mode and making it fail.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1336349 13f79535-47bb-0310-9956-ffa450edef68"
74086fa4a2463550a2f9269fe5fff32238b05935,"DERBY-5753: Derby5730Test fails on Java 5

Manually load the embedded driver in the sub-process so that
it's found on platforms that don't support driver autoloading.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1336526 13f79535-47bb-0310-9956-ffa450edef68"
0881157e597c5ca2ad0ca457230d2848833c7b0c,"DERBY-5751: Make TriggerTest less hungry on heap space

- Use LoopingAlphabetStream and LoopingAlphabetReader instead of
  ByteArrayInputStream and CharArrayReader so that the input data
  arrays don't need to be materialized in memory.

- Close statements and result sets earlier to allow gc of old
  test data.

- Use shared helper methods BaseTestCase.assertEquals(Reader,Reader)
  and BaseTestCase.assertEquals(InputStream,InputStream). These also
  ensure that the readers and streams are closed.

- Added new helper methods to ByteAlphabet and CharAlphabet to make
  it easier to create alphabets consisting of a single value.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1336527 13f79535-47bb-0310-9956-ffa450edef68"
43e6876913f11c9e3b3cff6964d5566ef6860a61,"DERBY-3146 Adjust length restriction on user identifiers (authorization ids) to same as other identifiers

Patch DERBY-3146 lift this DB2 legacy restriction. The new restriction
is 128, the same as other SQLIdentifiers. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1336775 13f79535-47bb-0310-9956-ffa450edef68"
a6a07338a44375205fd44a1a090cae102b6e0cfe,"DERBY-4115 Provide a way to drop statistics information

The details of all the changes in this commit are listed below. 
1)Added a new routine SYSCS_DROP_STATISTICS, with public access similar to SYSCS_UPDATE_STATISTICS. This happens in DataDictionaryImpl, where SYSCS_DROP_STATISTICS is added to the list of public access procedures in sysUtilProceduresWithPublicAccess 
2)The new stored procedure implementation is similar to update statistics, ie allow the routine to go through ALTER TABLE where permission/privilege checking, table/schema/index name validations happen automatically and we implement the routine logic through extension of ALTER TABLE syntax. This new syntax for ALTER TABLE syntax(same as we did for update statistics) is an internal syntax only and won't be available to an end user directly. 
3)This commit changes sqlgrammar.jj to recognize the following internal syntaxes for ALTER TABLE 
a)ALTER TABLE tablename ALL DROP STATISTICS 
The existing(corresponding syntax) for update statistics is as follows 
ALTER TABLE tablename ALL UPDATE STATISTICS 
b)ALTER TABLE tablename STATISTICS DROP indexname 
The existing(corresponding syntax) for update statistics is as follows 
ALTER TABLE tablename UPDATE STATISTICS indexname 
Notice the two syntaxes for index level statistics are different for drop vs update.(the reason for the syntax difference is explained above) 
4)After the statistics are dropped, we send invalidation signal to dependent statements so they would get recompiled when they are executed next time. This will make sure that they pick the correct plan given the statistics for the table. 
5)The commit takes care of some of the test failures(expected failures because of the addition of a new system procedure). 
6)The commit adds basic upgrade test for the new procedure. This test ensures that drop statistics procedure is available only after hard upgrade. 
7)While writing the upgrade tests, I found that a meaningful test for drop statistics could only be written for Derby releases 10.5 and higher. We have found that when constraints end up sharing same backing index, Derby won't create statistics for them. This is issue DERBY-5702. But if we run update statistics on that constraint, we will be able to get the statistics for such a constraint. Later, when the constraint is dropped, because of DERBY-5681, the statistics row for such a constraint(one that shares it's backing index with another constraint) is never dropped. We can use drop statistics procedure introduced in this jira to take care of such hanging indexes. But since update statistics procedure is only available in 10.5 and higher, I couldn't demonstrate use of drop statistics to drop hanging statistics rows. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1338017 13f79535-47bb-0310-9956-ffa450edef68"
5a72b2c26d8b672145d6b52ac5a385dda047f746,"DERBY-5759: Add IndexStatsUtil.release(boolean closeConnection)

Made it possible to clean up the resources used by the utility without
closing the connection.

Patch file: derby-5759-1a-release_with_arg.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1338068 13f79535-47bb-0310-9956-ffa450edef68"
9f6c678304b332e80616ed226291b785c99f8abc,"DERBY-5755: Minor cleanup of DataDictionaryImpl.getRoutineList()

Use java.util.Collections to create empty and single-element lists.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1338167 13f79535-47bb-0310-9956-ffa450edef68"
5db352a4ee042f60c31b9c80bd01d239b7ed9cf9,"DERBY-5746: Minor refactoring of DataDictionaryImpl.getSetAutoincrementValue

Dropped unused return value from the fetch-call.
Moved the instantiation/delcaration/modification of the bit set inside the code
block where it is actually used.

Patch file: derby-5746-1a-minor_refactoring.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1338618 13f79535-47bb-0310-9956-ffa450edef68"
5ea170fe8653213edeb11a12145a9b3384030b63,"DERBY-5762: Normalize casing of username inside NATIVE procedures.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1338760 13f79535-47bb-0310-9956-ffa450edef68"
671324f2a272f11d610cd1ad19dc93d3221704f5,"DERBY-5688: First rev of release notes for 10.9.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1338866 13f79535-47bb-0310-9956-ffa450edef68"
cde004ca509c9c32a4e5950a7b7f72459bdc8d8e,"DERBY-5764: Make DatabaseMetaDataTest more robust wrt changes made by other tests

Minor cleanups: removed unused imports, removed final from static method,
renamed method, and converted comment to Javadoc.

Patch file: derby-5764-1a-upgraderun_cleanup.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1339007 13f79535-47bb-0310-9956-ffa450edef68"
720294efdd863a459987b10c1c87120988e5896f,"DERBY-5764: Make DatabaseMetaDataTest more robust wrt changes made by other tests 

Use schema name in the queries to avoid ""pollution"" of the system tables from
other tests, specifically when run as part of the upgrade test. The schema name
is set to the user name, so to enable this feature wrap the test in a decorator
that changes the user.

Wrapped a ChangeUserDecorator around the tests from DatabaseMetaDataTest in the
upgrade tests.

Patch file: derby-5764-2a-specify_schema.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1339240 13f79535-47bb-0310-9956-ffa450edef68"
eff916922b62119e95c148976b3f038d1e402106,"DERBY-5749 Implicit cast of variable length values, e.g. as arguments to stored methods and generated columns values, silently truncate if too long

Patches derby-5749b (stored procedures and functions) and
derby-5749-2b (generated columns).

Quote from releaseNote.html attached to the issue:

Summary of Change

SQL now does correct checking of the length of variable strings in
these two cases:

    Arguments to stored procedures and functions
    Values assigned to generated columns

Previously, if the actual value was longer than the datatype of the
argument or column to which it was assigned, Derby would silently
truncate the value and ignore the truncation. The SQL standard
requires a truncation exception be thrown.

Derby now throws an SQLException with SQL state 22001 in these cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1339281 13f79535-47bb-0310-9956-ffa450edef68"
213d360ea9dbdf2cfe669d90398c8c20981cebfa,"DERBY_5652: Improve error handling when credentials db name ends in trailing garbage.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1339575 13f79535-47bb-0310-9956-ffa450edef68"
65bdc4d2cf3058a5f7d825b8310fab203f6ddf7e,"DERBY-5768: Remove references to NATIVE::LOCAL from Derby messages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1339869 13f79535-47bb-0310-9956-ffa450edef68"
94388c5ad367d9357cee4e0d07b42107b77a8cfb,"DERBY-5746: Minor refactoring of DataDictionaryImpl.getSetAutoincrementValue 

Add debug asserts for two cases where the return value of
ConglomerateController.fetch is ignored (primarily for consistency with other
cases).

Patch file: derby-5746-2a-assert_on_fetch.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1339986 13f79535-47bb-0310-9956-ffa450edef68"
ebe46425fa8d97d73769d3fc6c5c577485415151,"DERBY-5770: Reduce window of opportunity for queries being compiled without statistics on istat update 

Moved invalidation to after the new statistics have been written.

Patch file: derby-5770-1a-move_invalidation.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1339999 13f79535-47bb-0310-9956-ffa450edef68"
7e333995c5e9ba4433a8c5559d1e39d76fcc29f4,"DERBY-5680: indexStat daemon processing tables over an over even when there are no changes in the tables 

Added functionality in the update statistics code to drop statistics considered
disposable; orphaned (i.e. the referenced index doesn't exist), or not
required (the optimizer doesn't need the statistics).
Disposable statistics are only dropped when the istat daemon kicks in, or
SYSCS_UPDATE_STATISTICS is run without specifying an index.
The functionality is not enabled for soft-upgraded databases.
Included a debug property to force the old behavior.


Patch file: derby-5680-1b-remove_disposable_stats.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1340549 13f79535-47bb-0310-9956-ffa450edef68"
b0e73bc617424ed554010d1861264a4e81e87ead,"DERBY-5681: When a foreign key constraint on a table is dropped, the associated statistics row for the conglomerate is not removed

Made test less sensitive to statistics created by other tests.

Patch file: derby-5681-3a-test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341002 13f79535-47bb-0310-9956-ffa450edef68"
387174c8f807e782b37d93c0b5420c32cf9aca2a,"DERBY-5774: Failures in UpdateStatisticsTest (order-dependent test cases)

Made asserts on statistics specific to the relevant table(s) in testUpdateAndDropStatistics.
Made testDisposableStatsEagerness drop the tables it creates.

Patch file: derby-5774-1a-focused_asserts.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341019 13f79535-47bb-0310-9956-ffa450edef68"
75ec275f8f143d7113402389010c97ba6c01614c,"DERBY-129: CAST should warn about truncation

Made subclasses of SQLChar and SQLBinary generate a DataTruncation
warning when they are truncated to a shorter value.

Pass warnings up to the statement from NoRowsResultSetImpl.

Make the network server transfer DataTruncation in a way the client
accepts.

Update test canons to expect warnings on truncation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341046 13f79535-47bb-0310-9956-ffa450edef68"
c1e0f8ee5f828507efa3b9ff191ad08989b0ecf5,"DERBY-4115/DERBY-5681: Provide a way to drop statistics information

Moved upgrade test from BasicSetup to Changes10_9.
Includes some simplifications that could be made because of the move.

Patch file: derby-4115-7a-move_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341059 13f79535-47bb-0310-9956-ffa450edef68"
0eb98f10af965e418aa0b5f7e350482e8db23114,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation 

To recap this issue, SQL:2003 says that the join columns in a natural join or in a named columns join should be added to the select list by coalescing the column from the left table with the column from the right table 

Derby has it's on logic to retrieve the join column values. It always picks up join column's value from the left table when we are working with natural left outer join and it picks up the join column's value from the right table when we are working with natural right outer join. 

But this logic does not work for all cases for right outer join. The fix provided in this patch will pick the join column's value based on following logic(this logic mimics the functionality of COALESCE) 
1)if the left table's column value is null then pick up the right table's column's value. 
2)If the left table's column value is non-null, then pick up that value 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341204 13f79535-47bb-0310-9956-ffa450edef68"
f8a53ec3869da969976d6dff9628cf920748c0d7,"DERBY-4631 Wrong join column returned by right outer join with NATURAL or USING and territory-based collation

Javadoc fix


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341266 13f79535-47bb-0310-9956-ffa450edef68"
d349a1fb8b67f8b819f993410437490a5fc44977,"DERBY-5760: Missing argument in some XJ022 errors

Use helper method that sets the argument automatically.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341350 13f79535-47bb-0310-9956-ffa450edef68"
bce78c96d721837c39ab32fd0074e71a54cc1838,"DERBY-3790: Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.

Make update statistics code skip generation of statistics for single-column
unique indexes. This affects the istat daemon, the create index code, and the
SYSCS_UTIL.SYSCS_UPDATE_STATISTICS system procedure.
As a safe-guard a temporary debug property has been added to allow users to
revert to the old behavior in case the changes mess up their query plans.
Adjusted tests for the reduced number of statistics entries.
Added new tests for the debug property, for upgrade, and for behavior
verification.

Patch file: derby-3790-1c-skip_stats_scui.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341481 13f79535-47bb-0310-9956-ffa450edef68"
f661a5fafea5e9bbbf011396e1328e3a902a0989,"DERBY-5680: indexStat daemon processing tables over an over even when there are no changes in the tables

Removed redundant check.

Patch file: derby-5680-2a-remove_redundant_check.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341622 13f79535-47bb-0310-9956-ffa450edef68"
f422f446f671502d2dab5fc7a79e462a974240bb,"DERBY-5680: indexStat daemon processing tables over an over even when there are no changes in the tables

Renamed debug property to a more descriptive name.

Patch file: derby-5680-3a-rename_debug_property.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341629 13f79535-47bb-0310-9956-ffa450edef68"
1cba10ae23d7bba80f6c3feedf63ca563391c375,"DERBY-5776; test failure in iepnegativetests_ES with weme 6.2 (J2ME/CDC) with trunk (10.9 alpha) as of revision 1339441
  updating the j9/weme canon in master/j9_foundation


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341682 13f79535-47bb-0310-9956-ffa450edef68"
9feb3acb4a15480a0263e169e8da65374d4cc797,"DERBY-5777: Update description of Maven artifact for the Derby net servlet to reflect that it is not intended for production use

Changed the name and description in the POM.

Patch file: derby-5777-1a-update_description.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341793 13f79535-47bb-0310-9956-ffa450edef68"
148a1f009ddfddc9c34a07c68cb93cce9414639b,"DERBY-5771: Use TestNullOutputStream where possible

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341814 13f79535-47bb-0310-9956-ffa450edef68"
3574e108f1e594fa11c34f609b0b83791bcd1b14,"DERBY-3790: Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.

Minor test improvements: added/improved comments, skipped use of reduced row
count, removed unnecessary query execution.
Added a new method to wait for the old/current statistics to be replaced, and
then fetch the new statistics for the table.

Patch file: derby-3790-2a-minor_test_improvements.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341830 13f79535-47bb-0310-9956-ffa450edef68"
670253ef2e1e8b41ed19f61dfbf068933be77e22,"DERBY-5688: Bump the release id on the trunk after creating the 10.9 branch.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1341912 13f79535-47bb-0310-9956-ffa450edef68"
2f759ba313a308b5079ad576df57e00dbc0a2bd2,"DERBY-3371: Remove unnecessary remove() before put()
in RAMTransaction.addColumnToConglomerate()

Map.put() replaces the old mapping for the key, if there is one, so
there is no need to remove it first.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1342566 13f79535-47bb-0310-9956-ffa450edef68"
45f517449bf498473001804ae6e107e9e11b148c,"DERBY-5688: Bump version on trunk to 10.10.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1343384 13f79535-47bb-0310-9956-ffa450edef68"
7e7bd0bd935681590707a249e712a207058ce157,"DERBY-5787: [patch] remove dead allocation 

Removed dead allocation.
Patch contributed by Dave Brosius (dbrosius at apache dot org).

Patch file: remove_dead_allocation.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1343593 13f79535-47bb-0310-9956-ffa450edef68"
108093d02f567932f9e46de5f4af3de07f3f5062,"DERBY-5789: Improve istat log message when dropping disposable statistics

Modified a log message, and removed a TODO.

Patch file: derby-5789-1a.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1343667 13f79535-47bb-0310-9956-ffa450edef68"
ceaf7dfd1aeec51b52713792391ec6a3b77f4a1e,"DERBY-5494 Same value returned by successive calls to a sequence generator flanking an unorderly shutdown.
DERBY-5780 identity column performance has degredated 

The previous patch for DERBY-5494 had the unintended affect of forcing a 
synchronous write for all nested user transactions at abort time.  This
in turn caused identity column inserts to have one synchronous write per
insert as the nested user transaction is destroyed for each insert which
does an abort each time.

To solve this interfaces were changed so that calling code could set the
default commit sync behavior when the transaction was committed rather than
count on the ""type"" of transaction.  Nested user transactions used for identity
columns have default set to not sync, and the rest of the nested user transactions
default to syncing.  Behavior of other types of transactions should not
be affected.  User transactions still sync by default and internal and ntt's still
default to not sync.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1344065 13f79535-47bb-0310-9956-ffa450edef68"
02ac42cee63d0e7815c8075f85dbddcc31a6049f,"DERBY-5783: Remove duplicated code for starting remote processes in replication tests

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1344190 13f79535-47bb-0310-9956-ffa450edef68"
f0951abae36bafeb3c64b57714ba8de819e0a911,"DERBY-5791: Replication tests should use BaseTestCase.execJavaCmd() to run local commands

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1344191 13f79535-47bb-0310-9956-ffa450edef68"
7ed557e782c36b0879f95cc68d4e9d16f32a96da,"DERBY-5791: Fix misspelled parameter name in javadoc

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1344194 13f79535-47bb-0310-9956-ffa450edef68"
0ede6f3a860d9ce45021047180bfa63301ca38e0,"DERBY-5488: Adjust top level index.html (and JDBC 4.1 javadoc) to note that the JDBC 4.1 DataSources should be used on Java 7 and higher as well as on Java 6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1345197 13f79535-47bb-0310-9956-ffa450edef68"
47d24bfc4e1e6fef98ba146fc89669cfa4a92bce,"DERBY-5272: Remove eclipse plugin generation from the top-level release script.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1345254 13f79535-47bb-0310-9956-ffa450edef68"
7dc679c67802f9fddc229350dd6a3960d6bd96c0,"DERBY-4269 Failover did not succeed in 2 min.: testReplication_Local_3_p6_autocommit_OK

Fixed a typo in slave's failover message.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1345272 13f79535-47bb-0310-9956-ffa450edef68"
7367e57e9f3c8ed09d73491300da6f5f3ff49d62,"DERBY-5795: Make release target copy css stylesheets into doc distributions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1345301 13f79535-47bb-0310-9956-ffa450edef68"
c130ecd5995902b0e8fd2eed9c2535c6b46fbf80,"DERBY-5688: Add some more files to the source distribution.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1346054 13f79535-47bb-0310-9956-ffa450edef68"
eb472301d93cbb0cafc2d4a621cad807bcacecaa,"DERBY-5686; multiple intermittent errors in nightly tests during DriverMgrAuthenticationTest test. reason: An SQL data change is not permitted for a read-only connection, user or database.
  implementing a change that waits for completely shutting down of the database.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1346174 13f79535-47bb-0310-9956-ffa450edef68"
23714700b4e906635af899db3851e92c42a990bf,"DERBY-5786: Duplicate copies of InputStreamUtil and DynamicByteArrayOutputStream

This patch was contributed by Mohamed Nufail (nufail56 at gmail dot com)

In solving DERBY-4491, the InputStreamUtil and DynamicByteArrayOutputStream
classes were copied from org.apache.derby.iapi.services.io to create duplicate
copies of those classes in the org.apache.derby.client.net package.

Since the client uses only a small part of the functionality those classes
provide, this change modifies the client to use the PublicBufferOutputStream
which was present as a nested class within the EncodedInputStream class,
promoting the class into a top-level class to enable this use.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1346234 13f79535-47bb-0310-9956-ffa450edef68"
7141fc711e723ebd4ad6540f4aa17ab31af94499,"Remove unnecessary wrapping of UDTTest in CleanDatabaseTestSetup.

TestConfiguration.defaultSuite() already makes sure that it is wrapped
in that decorator.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1346319 13f79535-47bb-0310-9956-ffa450edef68"
4d04d503efe82beb045522a1ec097b9b66e407b0,"DERBY-5796: Remove unused methods in client.am.DateTime

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1346320 13f79535-47bb-0310-9956-ffa450edef68"
b54db0f3cad0f9345c574eb8ba8c53d772462b8a,"DERBY-2601: Server SQLException error codes are not returned to client

Encode the error code in the SQLCODE value sent from the server. This
value used to be -1 for all errors, but the client was OK with any
negative value. Now it's a negative value equal to -(errorCode+1).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1346833 13f79535-47bb-0310-9956-ffa450edef68"
83446d06e95e318eed66568c6972368138ffd57e,"DERBY-5357: SQLJ.INSTALL_JAR shouldn't use identifier as file name

Removed unused local variable.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1347412 13f79535-47bb-0310-9956-ffa450edef68"
b9e0e745c6a1204961fd014647ceb2ea4870a12a,"DERBY-5801: Sub-processes should write EMMA coverage data to separate files

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1347667 13f79535-47bb-0310-9956-ffa450edef68"
77ba1811188c70fc0d0559cdfa799ab2576ae542,"DERBY-5802: Remove unused class ExecProcUtil


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1347885 13f79535-47bb-0310-9956-ffa450edef68"
afe4dfdfd23be510fcfb373de969428a128e283f,"DERBY-5797: AssertionFailedError in functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness

Make the test sleep for at least one tick of the system timer to ensure the
comparison of statistics creation timestamps are valid in the normal case
(i.e. when there is no bug).
Added two utility methods to BaseTestCase:
 o sleep(long ms)
 o sleepAtLeastOneTick()
Removed two existing sleep-methods in test classes (note that the one taking
numbers of seconds as argument was unused).

Patch file: derby-5797-1a-sleep_a_tick.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1347888 13f79535-47bb-0310-9956-ffa450edef68"
abb261355d1c36abb4174de359d7085fd60a3417,"DERBY-5798: Disable i18n/JapanCodeConversion.sql on platforms that don't support EUC_JP or SJIS

Converted the test to JUnit and added logic that would skip it if
the required encodings are not supported.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1348064 13f79535-47bb-0310-9956-ffa450edef68"
f448bbbd1716e4c80d60375add40fb89e52b55da,"DERBY-5578 Provide a way to invalidate stored prepared statements 

Commiting changes for adding a new procedure(SYSCS_UTIL.SYSCS_INVALIDATE_STORED_STATEMENTS) which will allow users to invalidate all the stored statements inside SYS.SYSSTATEMENTS. At this point, there are only two types of stored statements in SYS.SYSSTATEMENTS system table - statements for metadata calls and statements for trigger action plans. I have also added test cases including the regression tests and upgrade tests. Upgrade tests show that this procedure is available only after hard upgrade. Regression test show how the procedure can be executed only by dba unless dba grants execute permission to other users. Additionally, it has test cases showing statements getting invalidated by the procedure call and subsequent execution of metadata call or trigger causing their corresponding statements to become valid. 

Since these changes fiddle around with system tables, this jira can't be backported to released branches. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1348275 13f79535-47bb-0310-9956-ffa450edef68"
4b4365a12f8b30af15d0a5732a86f8ed74a18fb9,"DERBY-5578 Provide a way to invalidate stored prepared statements

Close the resultset in the helper methods as suggested by Knut.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1348520 13f79535-47bb-0310-9956-ffa450edef68"
a844e87535561d46cfeabff23b49fdb8bb093ec6,"Fixed package names in headers from com.ihost.cs to org.apache.derby.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1348768 13f79535-47bb-0310-9956-ffa450edef68"
8ab3fa6dde0979bc580fd2bf77cd4856347cc831,"DERBY-5803: Make error handling in xaHelper more explicit 

Make error handling method return an execption and raise it explicitly.
Note that the method may still throw runtime exceptions.

Patch file: derby-5803-1a-explict_throw.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1348818 13f79535-47bb-0310-9956-ffa450edef68"
3a3894282c267aee160ac7f7604418ad4c46d7c2,"DERBY-5813 Remove unused class ErrorKey

Patch removing client.am.ErrorKey


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1349921 13f79535-47bb-0310-9956-ffa450edef68"
1efca1c5c28183a8b85a41a00e3385666ae859e7,"DERBY-5804 Remove unused class GenericClassInfo

Patch removing this class.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1349924 13f79535-47bb-0310-9956-ffa450edef68"
e437bc340d30ef1ec9ba406c24adfc4536f931d6,"DERBY-5808: Compatibility test should use BaseTestCase.execJavaCmd()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1350133 13f79535-47bb-0310-9956-ffa450edef68"
99028754fa5ea7b774579f3275b8040d21b3ceb0,"DERBY-5810: Include emma.jar on classpath when running compatibility test with instrumented jars

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1350134 13f79535-47bb-0310-9956-ffa450edef68"
fb3ede5a7509a4b8f436081aed8fe24b0f22fcbc,"DERBY-5815: Add replicationTests.ReplicationSuite to junit-core ant target

Added the replication suite to the list of tests run by junit-core.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1350166 13f79535-47bb-0310-9956-ffa450edef68"
bd3d1848ae24925b6e8297e0ff4966b5dec1edfd,"DERBY-5424 On z/OS testConnectWrongSubprotocolWithSystemProperty(org.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest)junit.framework.AssertionFailedError

Fix test encoding issue



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1350258 13f79535-47bb-0310-9956-ffa450edef68"
afe6225b8a675bb2979fc61a7e9dffb335f2ca88,"DERBY-5814 Source cleanup in catalogs ""impl.sql.catalog"" and ""impl.sql.compile""

Patch catalog-compile-cleaning-2, which:

a) removed unused private methods
b) removed unused local variables and members
c) cleaned up imports
d) remove unused formal arguments 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1350289 13f79535-47bb-0310-9956-ffa450edef68"
b7d90735b810e03d78391d7ea14d7adecbc53fba,"DERBY-5424 On z/OS testConnectWrongSubprotocolWithSystemProperty(org.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest)junit.framework.AssertiFailedError

Fix code and test to read and write to service.properties with a consistent 
encoding 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1350361 13f79535-47bb-0310-9956-ffa450edef68"
fa3a4bc00b5f1b135795c37a3151646d884f0219,"DERBY-5764: Make DatabaseMetaDataTest more robust wrt changes made by other tests

Added some additional tests to test code paths where schema is set to null.
Added utility method JDBC.assertResultSetContains, used where the query may
return more rows due to data added by other tests but we still want to assert
that a specific subset of rows exists in the result.

Patch file: derby-5764-3b-add_test_case_schema_null.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1351212 13f79535-47bb-0310-9956-ffa450edef68"
959d9f88a597879facd03213fb9da88291329cbe,"DERBY-5820: emma-instrumentation target should instrument derbyrun.jar

Tell EMMA to instrument derbyrun.jar. The other product jars will be
instrumented automatically, as EMMA recursively instruments all the
jars mentioned in derbyrun.jar's manifest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1351247 13f79535-47bb-0310-9956-ffa450edef68"
01c7acbe13e4045a0f7c6e239a7864c24b97b2cf,"DERBY-5554: Add a trailing tableid column to the SPACE_TABLE vti.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1351714 13f79535-47bb-0310-9956-ffa450edef68"
271e7dd1c768307c9b4e86cc77446c066be9c439,"DERBY-5554: Add 0-arg constructor to SPACE_TABLE vti.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1351795 13f79535-47bb-0310-9956-ffa450edef68"
88b4254684a3817386d3557e509e55f9968782be,"DERBY-5475: Formalize use of old Derby distributions in test

Expose the release repository in TestConfiguration.
Removed some leftover throws IOException, and added some exception handling
to avoid one throws IOException clause.

Patch file: derby-5475-4a-less_exceptions_and_expose.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1352498 13f79535-47bb-0310-9956-ffa450edef68"
273ad5f73ebf34bf105bad4884be4be69a97d1ec,"DERBY-5817: Add support for the JaCoCo code coverage tool

Adds initial support for the JaCoCo code coverage tool.
Top-level ant targets:
 o jacoco-complete: runs derbyall, suites.All, junit-lowmem and junit-pptesting
 o jacoco-junit: runs suite.All
 o jacoco-junit-single: runs test specified by the property

The report currently ends up under 'junit_{timestamp}/coverage-report'.
You need to install 'jacocoant.jar' and 'jacocoagent.jar' in 'tools/java/'

Refactored the ant target 'getsvnversion' (now also loads the version into the
property 'changenumber' and runs only if that property isn't already set).

Patch file: derby-5817-1c-jacoco_support.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1352502 13f79535-47bb-0310-9956-ffa450edef68"
a4c1c3a384f4deeb4fa5fc1a15a3ebf0d8508ba3,"DERBY-5779: Do not let table function parameters refer to other tables in the same FROM list.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1352631 13f79535-47bb-0310-9956-ffa450edef68"
3d59ed14168161a60900e951be4e8fa8bea58214,"DERBY-5688: Remove eclipse plugins from the download page produced by the transformrelnotes build target.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1352913 13f79535-47bb-0310-9956-ffa450edef68"
413279fae4ddf173977087d36b1025b44073a235,"Adjusted comment to match code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1353028 13f79535-47bb-0310-9956-ffa450edef68"
f5868b548c2921243e02721c719afeb5ceeb3f1c,"DERBY-4593 (fallout): Track tasks needed to release Derby 10.6.1

Adjusted argument count check according to the changes made.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1353507 13f79535-47bb-0310-9956-ffa450edef68"
6f130af5e22d14cd4582a4977ce346b70bfde477,"DERBY-5688: Update trunk STATUS file to record 10.9.1.0 release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1353510 13f79535-47bb-0310-9956-ffa450edef68"
3dbd09b77dfeac9180da9fd6e6c434393a34b30f,"DERBY-5688: Add 10.9.1.0 as a starting point in the upgrade tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1353578 13f79535-47bb-0310-9956-ffa450edef68"
5cac7553c7c249f82d62775955423a6b230240d0,"DERBY-5688: Fix template text for MD5 links in release notes transformer.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1353718 13f79535-47bb-0310-9956-ffa450edef68"
36f1be9027730352e34dbe2b7a81e3a02a6f9aa6,"DERBY-5816 ServicePropertiesFileTest fails on z/OS.
Fix comment issue



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1353764 13f79535-47bb-0310-9956-ffa450edef68"
1966619e30575bd99c30783d153ae658cf6bb0bc,"DERBY-5830: Make DoubleProperties.propertyNames() thread-safe

Don't store the property values in the intermediate Hashtable as they
are not needed. They may be null if the Properties instances are
modified after the recursive calls to Properties.propertyNames(), and
trying to store a null value in a Hashtable results in a
NullPointerException, causing issues such as DERBY-4269.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1353852 13f79535-47bb-0310-9956-ffa450edef68"
3919c5252479604374cb9cbd832ffc1ddda8a049,"DERBY-5821: tools/derbyrunjartest.java doesn't use jvmflags

Converted the test to JUnit to allow it to use BaseTestCase's helper
methods for starting sub-processes.

Extended BaseTestCase's helper methods with support for running jar
files with java -jar.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1353862 13f79535-47bb-0310-9956-ffa450edef68"
5355fd279c89855562c74dccb8d59cc75fee2913,"DERBY-5358: SYSCS_COMPRESS_TABLE failed with conglomerate not found exception

Make TableDescriptor.heapConglomNumber volatile to ensure that
getHeapConglomerateId() never sees a partly initialized value.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1354015 13f79535-47bb-0310-9956-ffa450edef68"
f1c232e415e5cb0badf3460d6c50f60302ddcc6a,"DERBY-5829 Lift DB2 restriction on the DEFAULT clause

It removes the restriction on VARCHAR defaults length to maximally 254 characters.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1354024 13f79535-47bb-0310-9956-ffa450edef68"
76f811d50571b8767a6d23784c76cd125294663d,"Deleted block that has been commented out for a while.
Enabling the gpg plugin is done in the parent POM.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1354327 13f79535-47bb-0310-9956-ffa450edef68"
a0f4b6889ab113bcf342542657c708b5b987ad10,"DERBY-5836: Move assertDirectoryDeleted from BaseJDBCTestCase to BaseTestCase

Moved the method to a better home.

Patch file: derby-5836-1a-move.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1354955 13f79535-47bb-0310-9956-ffa450edef68"
a69fa12a746e6f6c46e2749d0871f34b653f0a5b,"DERBY-2076: Rewrite junitTests/derbyNet/CompatibilityTest to conform to current JUnit usage

Initial check-in of the modernized compatibilty test.
Most of the supporting code is new, the tests themselves are copied from the
old-style test (with modifications).
See package.html for an intro, and note the usage of ReleaseRepository.
If you are already specifying derbyTesting.oldReleasePath no action is needed,
otherwise you must create the release repository (check out the release jar
repos) at the default location $HOME/.derbyTestingReleases.
Main entry point is the _Suite class (run with JUnit).

Note that both the server being tested and the clients tested are run in
separate JVM processes.
VersionedNetworkServerTestSetup controls the server process.
ClientCompatibiltyRunControl control the client process.
VersionCombinationConfigurator generates the version combinations according to
the requested configuration.
ClientCompatibiltySuite defines the suite of tests being run for each client.

Patch file: derby-2076-1b-initial.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1354960 13f79535-47bb-0310-9956-ffa450edef68"
eafe5f2dc9c3f67e09ce1d7f38e20e477cf6239c,"DERBY-2076: Rewrite junitTests/derbyNet/CompatibilityTest to conform to current JUnit usage

Compile the old compatibility test before the new one, otherwise a support class
is compiled with JDK 1.5 instead of JDK 1.4.

Patch file: n/a


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1355147 13f79535-47bb-0310-9956-ffa450edef68"
f6e9c2124a97e99b8a7a3487df59c97867da6661,"DERBY-5750 Sending an empty string as table name to compress table procedure or empty string as index name to update statistics procedure makes the parser throw an exception. 


Committing changes for DERBY-5750 which will provide following functionality 
a)if schema name is provided as an empty string, we will throw SQLState.LANG_SCHEMA_DOES_NOT_EXIST
b)if table name is provided as an empty string, we will throw SQLState.LANG_TABLE_NOT_FOUND
c)if index name is provided as an empty string(this is for update and drop statistics procedures), we will throw 
	SQLState.LANG_INDEX_NOT_FOUND
d)if schema name is null, we will use current schema to resolve the table name
e)if table name is null, we will throw SQLState.LANG_TABLE_NOT_FOUND
f)if index name is null, we will drop/update statisitcs for all the indexes for the given table.

I have added few test cases for each of these procedures. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1355552 13f79535-47bb-0310-9956-ffa450edef68"
2d14fe729ea3db2ae9117dab1439434a5f4f0c73,"DERBY-1914 test lang/wisconsin gives garbage output on zOS



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1355569 13f79535-47bb-0310-9956-ffa450edef68"
666ab8f5e87e16bb44c88dc04acbb77b53b6b7ab,"DERBY-5826: Remove unused methods in NetConnectionReply class

This patch was contributed by Mohamed Nufail (nufail56 at gmail dot com)

This change removes several unused methods from the NetConnectionReply
class. Code inspection of the NetConnectionReply class reveals that
the following methods are not used at all:

- verifyConnectReply(int codept)
- readDummyExchangeServerAttributes(Connection connection)
- checkRequiredObjects(boolean receivedFlag, boolean receivedFlag2, boolean receivedFlag3, boolean receivedFlag4, boolean receivedFlag5, boolean receivedFlag6)
- checkRequiredObjects(boolean receivedFlag, boolean receivedFlag2, boolean receivedFlag3, boolean receivedFlag4, boolean receivedFlag5, boolean receivedFlag6, boolean receivedFlag7)

The change also removes the method parseConnectError() which is being used
only by the removed method verifyConnectReply(int codept)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1355959 13f79535-47bb-0310-9956-ffa450edef68"
f7066326cfd5357aacae179ac47b0b5cfce3c0d4,"DERBY-5827: Remove unused methods in NetStatementReply class

This patch was contributed by Mohamed Nufail (nufail56 at gmail dot com)

This change removes several unused methods from the NetStatementReply
class. Code inspection of the NetStatementReply class reveals that
the following methods are not used at all:

parseQRYPRCTYP()
parseSQLCSRHLD()
parseQRYATTSCR()
parseQRYATTSET()
parseQRYATTSNS()
parseQRYATTUPD() 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1356065 13f79535-47bb-0310-9956-ffa450edef68"
ab750e37554eb3e8795994b81cc8bd3a06a9e0df,"DERBY-5833: Remove unused methods in NetCallableStatement class

This patch was contributed by Mohamed Nufail (nufail56 at gmail dot com)

This change removes the following unused methods from the
NetCallableStatement class:

- resetNetCallableStatement(NetAgent netAgent, NetConnection netConnection, String sql, Section section)
- resetNetCallableStatement(NetAgent netAgent, NetConnection netConnection, String sql, Section section, ColumnMetaData parameterMetaData, ColumnMetaData resultSetMetaData) 

I suspect that, of the two remaining overloads of the resetNetCallableStatement
method, the 3-argument variant could be made private, as it is called only
by the 6-argument variant. That might be a further improvement we could do
at some future time. For now, this change simply removes the two variants
that are wholly unused.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1356066 13f79535-47bb-0310-9956-ffa450edef68"
31bea464f5e7f8b67b15ee02b379cc8ca5527798,"DERBY-5838: Prevent users from changing the value of the DataDictionaryVersion property.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1356333 13f79535-47bb-0310-9956-ffa450edef68"
f5c1abdc405812364a0844bc492672b42fc47806,"DERBY-5819 Add logic to BaseTestCase to start subprocesses ready to be attached to from a Java debugger

Adds options to allow this capability for Oracle Java (properties below
ignored for other implementations):

derby.test.debugPortBase=<int> default 8800
derby.test.debugSubProcesses=<boolean> default false 
derby.test.debugSuspend=<y|n> default 'y' 

If several subprocesses are created, the port for subprocess two will be
debugPortBase + 1 (i.e. 8801 by default) etc.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1356457 13f79535-47bb-0310-9956-ffa450edef68"
29fe9b7f61df2d9d26b6386a3eeaa661b821b6f3,"DERBY-5828: Remove unused methods in NetPackageReply class

This patch was contributed by Mohamed Nufail (nufail56 at gmail dot com)

This change removes the unused parsePKGNAMCT method in NetPackageReply.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1356568 13f79535-47bb-0310-9956-ffa450edef68"
ca72f66a4a5dbd02ffe96de6abdc93e69864712a,"DERBY-5834: Remove unused methods in NetPreparedStatement class

This patch was contributed by Mohamed Nufail (nufail56 at gmail dot com)

This change removes two unused overloads of the resetNetPreparedStatement
method in NetPreparedStatement.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1356573 13f79535-47bb-0310-9956-ffa450edef68"
ffa2d1b285d781ac670f4d245f806681de07a8d0,"DERBY-5840: Silence compiler warnings in the compatibility tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1356735 13f79535-47bb-0310-9956-ffa450edef68"
49aa62a255f569b6bebc45db0967873ede7c5f9f,"DERBY-5622: Reduce chance for hash collisions when changing boot passwords.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1356749 13f79535-47bb-0310-9956-ffa450edef68"
2cd035c179bcb5fcb28387c755ed298abaa1fe5f,"DERBY-4269 Failover did not succeed in 2 min.: testReplication_Local_3_p6_autocommit_OK

Patch fix-ignored-runtime-exceptions-b

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1356766 13f79535-47bb-0310-9956-ffa450edef68"
3c065e9bd1eadad7335626a22dbb4ac1c7baac8f,"DERBY-5554: Forbid the joining of VTIs to one another in the FROM list.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1357692 13f79535-47bb-0310-9956-ffa450edef68"
91f376ccb33ab6ba23a37a88e270df0aac3f2c35,"DERBY-5425: Updateable holdable ResultSet terminates early after 65638 updates

Use a BackingStoreHashtable to store rows updated in such a way that
they may be seen again later in the scan. The BackingStoreHashtable is
made holdable if the ResultSet is holdable so that rows are not lost on
commit, as they were before.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1359052 13f79535-47bb-0310-9956-ffa450edef68"
001ac6343dc73db9ced0caba7f50c05690a42df3,"DERBY-5821: tools/derbyrunjartest.java doesn't use jvmflags

Add the test to the tools suite. Skip testing the server command on
J2ME platforms, where it's not supported.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1359068 13f79535-47bb-0310-9956-ffa450edef68"
654f47f697d98db6097f9f37fdc65cece4414165,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Simplifications enabled by the original cleanup of the compatibility tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1359069 13f79535-47bb-0310-9956-ffa450edef68"
ba034cf9c8bd01ef858e98e2a7671a45129c2fb1,"DERBY-2076: Rewrite junitTests/derbyNet/CompatibilityTest to conform to current JUnit usage

Set compiler level to 1.5 to allow the test to run on Java 5 platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1359070 13f79535-47bb-0310-9956-ffa450edef68"
70a608eb80c7dc1843038322e693a6b4eae9e2f5,"DERBY-5847: Clean up IDE warnings in DRDAConnThread

- Compare SQL states with String.equals() instead of !=

- Remove unused variable

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1359098 13f79535-47bb-0310-9956-ffa450edef68"
68a67abc9df6b44a180eb9b14c4f5db772475790,"DERBY-5847: Clean up IDE warnings in DRDAConnThread

Removed unnecessary return statements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1359110 13f79535-47bb-0310-9956-ffa450edef68"
b690b7aeb16d014017099fb64fb58294950ccfc8,"DERBY-5847: Clean up IDE warnings in DRDAConnThread
DERBY-436: Clean up imports and static field references in DRDA classes

Changed in DRDAConnThread:

- Use class name to reference static fields
- Use direct references to constants in java.sql.ParameterMetaData
  instead of JDBC30Translation
- Organize imports alphabetically

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1359559 13f79535-47bb-0310-9956-ffa450edef68"
761351a0791cdd1531f43e5b4a50d46985c531d7,"DERBY-5847: Clean up IDE warnings in DRDAConnThread

Remove assignment of values that are never used.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1359624 13f79535-47bb-0310-9956-ffa450edef68"
0972a574699cd885a2053ea1870bfabe309597ef,"DERBY-5847: Clean up IDE warnings in DRDAConnThread

Clean up performance warnings:

- Use System.arraycopy() instead of manual copy
- Use StringBuilder instead of StringBuffer where synchronization is
  not needed
- Don't use string concatenation in arguments to StringBuffer.append()
- In convertToHexString(), replace use of StringBuffer with
  StringUtil.toHexString()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1359635 13f79535-47bb-0310-9956-ffa450edef68"
1562d537b863f92274af0706754f9ae4b580c9d7,"DERBY-5847: Clean up IDE warnings in DRDAConnThread

Replace use of obsolete collection class Vector with ArrayList.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1360133 13f79535-47bb-0310-9956-ffa450edef68"
dc4894328d01ce132ddf4de4606b8a3fba736841,"DERBY-5847: Clean up IDE warnings in DRDAConnThread

NetBeans warns about synchronization on non-final objects. Since
the synchronization is only used to ensure that set operations are
visible in other threads, make the fields volatile instead of having
a separate synchronization object per field.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1360134 13f79535-47bb-0310-9956-ffa450edef68"
296695c04476f262b61cf394ba5ef34c607fcdbe,"DERBY-5847: Clean up IDE warnings in DRDAConnThread

Fix warnings:

- Remove if statement that was previously disabled by prepending
  ""false &&"" to the condition. Silences ""unreachable code"" warning.
- Remove no-op bitwise shift operation.
- Rename local variable that hides field.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1360135 13f79535-47bb-0310-9956-ffa450edef68"
b4af06bb172dee4a06ac4e1ed7160c6348183bf0,"DERBY-5847: Clean up IDE warnings in DRDAConnThread

Silence warning about possible leak of reference to ""this"" from
constructor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1360137 13f79535-47bb-0310-9956-ffa450edef68"
60dc440d58a4a90c4a8c95fcbb9ef2ed4161b162,"DERBY-5554: Allow multiple tables in FROM lists which join tables to VTI arguments.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1360306 13f79535-47bb-0310-9956-ffa450edef68"
9495b40dcf0f9d31d1de6fb87a0a6482194b2187,"DERBY-5779: Forbid joining to VTI/tableFunction args in <joined table> clauses.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1360736 13f79535-47bb-0310-9956-ffa450edef68"
8c3c7e88967541e2fb74f287e91f9c438862707f,"DERBY-5779: Add more tests for illegal joins of VTI/tableFunction args in <joined table> clauses.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1360846 13f79535-47bb-0310-9956-ffa450edef68"
27fbf3305bc9b531f7b1d60409eeee5aed4e74de,"DERBY-5840: Compile network server code with source and target level 1.5

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1361925 13f79535-47bb-0310-9956-ffa450edef68"
34681435dea29ea2207b860d3f25dd95433b3514,"DERBY-5779: Prevent VTIS in FROM list subqueries from referencing other elements in the FROM list.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1362159 13f79535-47bb-0310-9956-ffa450edef68"
4772c7ee2b0f7c59edf32db2f21294904e286293,"DERBY-5840: Compile network client with source and target level 1.5

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1362419 13f79535-47bb-0310-9956-ffa450edef68"
c784df507ab6b6b8082377a5476f21bb1a7be0d0,"DERBY-5840: Silence deprecation warnings in the network client

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1362420 13f79535-47bb-0310-9956-ffa450edef68"
44a867f867a2eef04dd70a72402cbb7a7b4b12d1,"DERBY-5840: Update JDBC 3.0 stubs for Java 5

Some JDBC signatures were changed to generics between 1.4.2 and 1.5.0.
Update the stubs so that we get the same results when we compile against
the stubs as when we compile against Java 5 class libraries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1362464 13f79535-47bb-0310-9956-ffa450edef68"
eb0e14c0cc0a93c4b09643a4fc9db05c1c30bc44,"DERBY-5851: Inconsistent code coverage for LogicalPreparedStatement40

This change was contributed by Mohamed Nufail (nufail56 at gmail dot com)

This change incorporates a connectionCPDecorator into the
PreparedStatementTest in order to exercise the LogicalPreparedStatement40
class in a JDBC4 environment.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1362745 13f79535-47bb-0310-9956-ffa450edef68"
542c2b74796aceb6e9c8ccd19cde994fd58e8560,"DERBY-5860: Remove unused methods in DDMReader and DDMWriter

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1362837 13f79535-47bb-0310-9956-ffa450edef68"
e474e5100c78811d8408ccf8e04c81feb8b0369d,"DERBY-5840: Use for-each loops in the network server code

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1363264 13f79535-47bb-0310-9956-ffa450edef68"
8c854a900dc19c23399605aff23f6d6727666ca7,"DERBY-5864: Cannot load derbynet._Suite on some J2ME platforms

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1363508 13f79535-47bb-0310-9956-ffa450edef68"
353a4990b68b8c1b5b40f75470f01a6e65284dc3,"DERBY-5847: Clean up IDE warnings in DRDAConnThread

Last chunk of warnings: Missing override annotation and missing
braces in if/else and for statements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1363661 13f79535-47bb-0310-9956-ffa450edef68"
db4c995379b44bce61ae08fbd12d892e0e10f22a,"DERBY-436: Clean up imports and static field references in DRDA classes

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1363662 13f79535-47bb-0310-9956-ffa450edef68"
5ef7a0d9e4f315a3b0b72012ab3fd8add5e7a6dc,"DERBY-5868: Move java.sql.Wrapper implementations to base classes on the client

Moved isWrapperFor() and unwrap() implementations to base classes to
reduce duplication of code.

Also moved some other methods that were duplicated in PreparedStatement40
and CallableStatement40 to their common base class PreparedStatement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1364042 13f79535-47bb-0310-9956-ffa450edef68"
0cfef0d125110e926bd7d798a8ec4b9a7f5afde3,"DERBY-5871: Invoke logical statements with existing statement tests

Contributed by Mohamed Nufail.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1364068 13f79535-47bb-0310-9956-ffa450edef68"
2ff02ef7eb120880f846a419740cde8e21fe09f0,"DERBY-5872: Inconsistency between isWrapperFor() and unwrap() in logical statements

Make LogicalStatementEntity's isWrapperFor() only check the interfaces
implemented by the logical statement. This makes it consistent with the
unwrap() method, and also consistent with how isWrapperFor() works in
LogicalConnection40 and LogicalDatabaseMetaData40.

Add test cases for the new behaviour in PreparedStatementTest and
CallableStatementTest.

Enable ClosedObjectTest for logical statements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1364524 13f79535-47bb-0310-9956-ffa450edef68"
55d3591dd22183a7216e1d12f5d03dd891e8dd23,"DERBY-5407 When run across the network, dblook produces unusable DDL for VARCHAR FOR BIT DATA columns. 

The serialization of UDT associated with SYSCOLUMNS.COLUMNBDATATYPE on the wire from the network server end happens correctly. The same serialized data is received by the client but when we try to instantiate the UDT's TypeDescriptor based on this serialized data, we get confused between ""VARCHAR () FOR BIT DATA"" and ""VARCHAR FOR BIT DATA"". The deserialization on the client side happens through BaseTypeIdImpl.getTypeFormatId(). Here, we look at the string representation of the type descriptor that we received on the wire and choose the appropriate format id based on that string. The problem is in this 
BaseTypeIdImpl.getTypeFormatId() code, where the code looks for ""VARCHAR FOR BIT DATA"" rather than ""VARCHAR () FOR BIT DATA"" (notice the missing parentheses) 
            else if ( ""VARCHAR FOR BIT DATA"".equals( unqualifiedName ) ) { return StoredFormatIds.VARBIT_TYPE_ID_IMPL; } 
Since ""VARCHAR FOR BIT DATA"" and ""VARCHAR () FOR BIT DATA"" do not match, we do not use format id VARBIT_TYPE_ID_IMPL.
 
Later, we go through a switch statement based on the format id in BaseTypeIdlImpl.toParsableString(TypeDescriptor). In the switch statement, we are supposed to stuff in the width of the varchar for bit data into the parentheses ie string ""VARCHAR () FOR BIT DATA"" should get converted into ""VARCHAR (NUMBER) FOR BIT DATA"" but we don't do it because of getTypeFormatd() code problem explained earlier.

To fix this, the patch has added check for 
If there might be dependencies on the original ""VARCHAR FOR BIT DATA"" check, then we can add additional check for ""VARCHAR () FOR BIT DATA"" in addition to the existing check for ""VARCHAR FOR BIT DATA"" as shown below and that fixes the problem
            else if ( ""VARCHAR FOR BIT DATA"".equals( unqualifiedName ) ) { return StoredFormatIds.VARBIT_TYPE_ID_IMPL; } 
            else if ( ""VARCHAR () FOR BIT DATA"".equals( unqualifiedName ) ) { return StoredFormatIds.VARBIT_TYPE_ID_IMPL; } 
This commit does similar thing for ""CHAR FOR BIT DATA"", ie in addition to the existing test for ""CHAR FOR BIT DATA"", it adds a check for ""CHAR () FOR BIT DATA"". 

Keeping the existing checks will not break any dependencies that might exist on ""VARCHAR FOR BIT DATA"" check and ""CHAR FOR BIT DATA"" check.

Have added a test for SYSCOLUMNS.COLUMNBDATATYPE for all the supported data types. This test will be run in both embedded and network server mode.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1364690 13f79535-47bb-0310-9956-ffa450edef68"
850aba4e86ceef21caf1ce22aa2c9653dfd7ce98,"DERBY-5840: Compile embedded JDBC 3.0 classes for Java 5

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1364917 13f79535-47bb-0310-9956-ffa450edef68"
6f660672993bbce667d04d1dda8190680639b410,"DERBY-5874: Remove JDBC 3 constants from client.am.Statement

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1365173 13f79535-47bb-0310-9956-ffa450edef68"
f44e479b7d17331e66859d57ef6ea18470d74fb4,"DERBY-5877: Prune the brokered class tree

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1365465 13f79535-47bb-0310-9956-ffa450edef68"
66527ec1a468b9eeb1d008c19d62b96bd446b332,"DERBY-5873: Avoid unnecessary allocation of Number instances in client/server

Replace explicit calls to constructors for java.lang.Number sub-classes and
java.lang.Boolean with valueOf() calls or with auto-boxing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1365468 13f79535-47bb-0310-9956-ffa450edef68"
7e9a11de9f8ca6d4c57fc4119210c8615fd1a2b1,"DERBY-5878: Add message argument names, as comments, to message file generated by MessageBuilder.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1365552 13f79535-47bb-0310-9956-ffa450edef68"
f52a901addd8a1c1306a479d2c4071d9be441958,"DERBY-4279: Statement cache deadlock 

Modified ResultColumnList.generateHolderMethod to only take a lock when
obtaining row template(s) if the data dictionary is in DDL_MODE. The lock that
used to be obtained was a CIS lock/latch.
The purpose of this change is to avoid the deadlocks that have been observed in
some scenarios when statements are being compiled or recompiled.

Patch contributed by Brett Wooldridge (brett dot wooldridge at gmail dot com).

Patch file: patch4279_2.txt


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1365661 13f79535-47bb-0310-9956-ffa450edef68"
853f07d9d85f351bbe7e7277cd012760de685c33,"DERBY-5879: Help translators by adding comments to multi-line tools messages and by changing a couple of ALL CAPS words to ordinary casing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1365672 13f79535-47bb-0310-9956-ffa450edef68"
53cda201bf2465d684eac831bc5a4268df64507d,"DERBY-5871: Fix capitalization errors in messages with error codes in MessageId.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1366362 13f79535-47bb-0310-9956-ffa450edef68"
870f7cd3a3f74712c5e83b43a17ffcd83d97a1a7,"DERBY-5885: Re-order message args to correspond with argument numbers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1367150 13f79535-47bb-0310-9956-ffa450edef68"
0919fda2d9173dfc9eff3d108227cb4f02560a30,"DERBY-5878: Add ability to add comments for translators to the message descriptors in messages.xml.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1367230 13f79535-47bb-0310-9956-ffa450edef68"
de41eb3831c2e3e5119fed9b66ba5680df343e20,"DERBY-2076: Rewrite junitTests/derbyNet/CompatibilityTest to conform to current JUnit usage

Enabled the test as part of suites.All (the minimal / MATS variant).

Patch file: derby-2076-2a-enable_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1367428 13f79535-47bb-0310-9956-ffa450edef68"
7b6cb41f1d72059e2f5b17ce0ccb5c9ce91906ba,"DERBY-5879: Fix capitalization and punctuation problems in messages with SQLStates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1367610 13f79535-47bb-0310-9956-ffa450edef68"
ffd37479deeb42b94d512193bc75c752a0825a2c,"DERBY-5879: Correct capitalization and punctuation in some DRDA messages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1367691 13f79535-47bb-0310-9956-ffa450edef68"
5c29a4d2f30e0eee6253db738d76dc99f548992b,"DERBY-5879: Add comments for translators to some error messages, fix some string concatenation problems.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1367985 13f79535-47bb-0310-9956-ffa450edef68"
e09c18a0947ac87bfdb128491c989249d3fc31e9,"DERBY-5888: Fix test broken by work on localization audit.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1368483 13f79535-47bb-0310-9956-ffa450edef68"
3fc6fd911c908bfcbf6131bd6bb71fbfc96f667e,"DERBY-5891: Fix single quotes in a couple French versions of engine messages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1369011 13f79535-47bb-0310-9956-ffa450edef68"
526b9ed4c2de25f68336d4327efbfb51f43f5ce1,"DERBY-5878: Add bracketed argument numbers to comments in generated English properties file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1369040 13f79535-47bb-0310-9956-ffa450edef68"
62d63f668d5ab98928d897a34bfde37fffb9e15e,"DERBY-5879: Fix translatability problems having to do with ALL CAPS and camelCase words.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1369173 13f79535-47bb-0310-9956-ffa450edef68"
79860e7a85569bf33f9298248553065b352ee4ab,"DERBY-5890: Remove the ij EXPECT command.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1369814 13f79535-47bb-0310-9956-ffa450edef68"
896ca35c8995d3a0a2811fa85ca21d28e92a67d6,"DERBY-5879: Add comments to query plan messages, telling the translators that the strings are ok as is even though they look like the kind of string fragments which cause concatenation problems when they are localized.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1369831 13f79535-47bb-0310-9956-ffa450edef68"
043a571125a755cf49cf2635f59d5a9a7cb2aa83,"DERBY-5879: Various changes to messages to give translators more context.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1369889 13f79535-47bb-0310-9956-ffa450edef68"
057ec75a807c943ff992f298b05af602d1734326,"DERBY-5879: Fix some spelling and capitalization errors in Derby messages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1369949 13f79535-47bb-0310-9956-ffa450edef68"
8922f7c5792594121bca2e903557292fdb871193,"DERBY-5879; Fix problems in English messages disclosed by a localization audit.
  adjusting master/j9_foundation/outparams.out similarly to master/outparams.out
  changes of revision 1369173. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1370023 13f79535-47bb-0310-9956-ffa450edef68"
b27d8ec16f7645c44f4fc8f087c652c8b90b36e4,"DERBY-5667; testReadCommitted(org.apache.derbyTesting.functionTests.tests.store.UpdateLocksTest)junit.framework.AssertionFailedError: Missing rows in ResultSet
  Adding wait_for_post_commit calls after commits following updates; 
  changing JDBC.assertRSContains() to print out more details if there are missing rows.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1370058 13f79535-47bb-0310-9956-ffa450edef68"
5aa7a29e7ad96d29cdb62fd5cdcc1b339c6ee84e,"DERBY-5889: tests.compatibility._Suite has AccessControlException errors on Windows

Disabled test temporarily on Windows platforms.

Patch file: derby-5889-1a-disable_test.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1370233 13f79535-47bb-0310-9956-ffa450edef68"
218eb5267ac58a0c9098c79a1c3c42a02289597f,"DERBY-5879: Delete an unused message fragment.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1370266 13f79535-47bb-0310-9956-ffa450edef68"
f3ade652da6361a22f6601c49eeda6e8a12b0d95,"DERBY-5839 (dblook run on toursdb fails on triggers with java.lang.StringIndexOutOfBoundsException in dblook.log)

We document that SYSTRIGGERS.REFERENCEDCOLUMNS is not part of the public API and hence that allows Derby to change underneath the behavior of the column. Prior to 10.9, this column only had information about columns referenced by UPDATE trigger. But, with 10.9, we use this column to also hold information about the trigger columns being used inside trigger action plan. This enables Derby to read only necessary columns from trigger table. But because of this change, it is not enough in dblook to check if SYSTRIGGERS.REFERENCEDCOLUMNS.wasNull. We need to also check if the string representation of that column is ""NULL"". Making this change fixes DERBY-5839




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1370446 13f79535-47bb-0310-9956-ffa450edef68"
4f996a414c659869c5eb4d8918632e78e518df25,"DERBY-5896 Change java/drda source code to use  spaces instead of tabs



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1370674 13f79535-47bb-0310-9956-ffa450edef68"
7baf56256ba953e46a4d3d5ee2f5d54a28d02dc5,"DERBY-5879: Remove untranslatable tokens from messages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1370897 13f79535-47bb-0310-9956-ffa450edef68"
9ef6c29f3895e5f16f1e0b8299d847c425ff88a2,"DERBY-5240 (Log Operating system information to derby.log on boot)

Adding following piece of information into derby.log for OS right after the existing info about JVM
OS name=XXX 
OS architecture=YYY 
OS version=ZZZ 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1371041 13f79535-47bb-0310-9956-ffa450edef68"
e0166622f694334803485be2085b8b3d7724174b,"DERBY-5878: Update dtd for messages.xml to include the newly added comment element.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1371234 13f79535-47bb-0310-9956-ffa450edef68"
6eb29f67238d5a33089acf436712ed2eba969ee4,"DERBY-5896 Change java/drda source code to use spaces instead of tabs and clean up tab creep in java/client

Change client tabs to spaces.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1371306 13f79535-47bb-0310-9956-ffa450edef68"
989d36ed2c3d1cab1b99ea9a7d1c51e6f57937bc,"DERBY-5898; add ibm18 class to functionTests.harness
  adding an ibm18 class svn-copied from ibm17, then only replaced the 7s with 8s.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1371382 13f79535-47bb-0310-9956-ffa450edef68"
3c9599fa1519c346a47c695974c596ce65c37729,"Cleanup code in network server's DRDAStatement class
* pkgcnstkn, pkgid, pkgsn variables removed from DRDAStatement since these are derived from pkgnamcsn object.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1371677 13f79535-47bb-0310-9956-ffa450edef68"
829491234bb90084788d006a4977fd9b925b3bc8,"DERBY-5897: Broken handling of paths with special characters in compatibility/VersionCombinationConfigurator

Fixes URL to File conversion by going via URI and using the new File(URI) ctor.
As an example, URLs containing '%20' for spaces will now result in valid files.

Patch file: derby-5897-1a-url_handling.diff (with formatting modifications)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1372345 13f79535-47bb-0310-9956-ffa450edef68"
46e89a99d1651323c61d3be4b9f92fcb3d4bf4bb,"DERBY-5880: Move java.sql.Wrapper implementations to base classes in embedded driver

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1372403 13f79535-47bb-0310-9956-ffa450edef68"
f17b81fe74871b4700817d2eb2fbf979d215d506,"DERBY-5883: Simplify JSR-169 implementation class tree

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1372404 13f79535-47bb-0310-9956-ffa450edef68"
4020781552ef30e828af0b9b60a15ae2e2614112,"DERBY-5873: Avoid unnecessary allocation of Number instances in client/server

Use BigDecimal's valueOf() factory methods instead of explicit constructor
calls where possible.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1372405 13f79535-47bb-0310-9956-ffa450edef68"
db9a0131c4858d543589defbd90fec9c3c35f6ca,"DERBY-5896: Change java/drda source code to use spaces instead of tabs and clean up tab creep in java/client

Align with tab stops if the replaced tab character itself wasn't located on a tab stop.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1372814 13f79535-47bb-0310-9956-ffa450edef68"
cff65238542350304eb1f2962beeba5f3fbce80a,"DERBY-5896: Change java/drda source code to use spaces instead of tabs and clean up tab creep in java/client

Align with tab stops if the replaced tab character itself wasn't located on a tab stop.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1372818 13f79535-47bb-0310-9956-ffa450edef68"
7f6e8aad927c0ae7ca2b941ba06e689d63ac8544,"DERBY-5896: Change java/drda source code to use spaces instead of tabs and clean up tab creep in java/client

Align with tab stops in java/client.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1372841 13f79535-47bb-0310-9956-ffa450edef68"
0e8b73ab2b9a36531268bde9a6c54bfd9624dfae,"DERBY-5854: Test for methods in BrokeredCallableStatement

Based on patch contributed by Siddharth Srivastava.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1372848 13f79535-47bb-0310-9956-ffa450edef68"
45a2906b6a7db9c8e68ee7dcbb468534e73faa0a,"DERBY-5854: Test for methods in BrokeredCallableStatement

Exclude XA and connection pool tests on small devices.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1374215 13f79535-47bb-0310-9956-ffa450edef68"
22d64f57ef38696c84d9245ca6d3d3a1aefcf27a,"Add CREATE and DROP ddl for user-defined aggregates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1374399 13f79535-47bb-0310-9956-ffa450edef68"
66ed10161bafe4140f89c8be8c6cde80e229b5af,"DERBY-5531 Assert failure when inserting NULL into indexed column with territory-based collation

At bind time of insert node, we go through the individual columns in the insert statement to determine if there is a need for normalization or not. In case if the insert resultset has all null values, we conclude that we do not need normalization. At execution time, as part of normalization, the data type conversion from datatypes like SQLVarchar to CollatorSQLVarchar will happen if we are dealing with territory based database. But this never happens if insert resultset has all null values and hence a later assert check in OpenBTree fails because the datatypes do not match(in the example given in this jira, SQLVarchar and CollatorSQLVarchar mismatch at runtime will cause an assert failure). Here is the relevant code in InsertNode.bindStatement() 
/* Insert a NormalizeResultSetNode above the source if the source 
* and target column types and lengths do not match. 
  */ 
if (! resultColumnList.columnTypesAndLengthsMatch( 
resultSet.getResultColumns())) 
{ 
             
   resultSet = 
          (ResultSetNode) getNodeFactory().getNode( 
              C_NodeTypes.NORMALIZE_RESULT_SET_NODE, resultSet, 
              resultColumnList, null, Boolean.FALSE, 
              getContextManager()); 
} 

To fix this problem, we are changing OpenBTree.isIndexableRowConsistent to not throw an assert failure if dealing with null values. If the value is null, then we will not assert the column datatypes. As it is, this method is meaningful only in sane mode. Insane jars do not give any error for the test case provided in the jira because assertion only happens with sane jars.

In short, the fix is, if the row column's value is null, then don't worry about the data type match at execution time.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1378206 13f79535-47bb-0310-9956-ffa450edef68"
c8603c409254e00c631896c2ea83ccc20fad6104,"DERBY-672: Wire in bind and execute logic for non-distinct user-defined aggregates in the SELECT list.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1378639 13f79535-47bb-0310-9956-ffa450edef68"
ea6232df2c37fa76e2fb978bc9d513780e2825a8,"DERBY-5912; testIsValidImplemented fails for NetworkServer in some slow running machines/configurations
  changing the timeout setting from 1 to 200 so the test will pass even in slow configurations


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1379163 13f79535-47bb-0310-9956-ffa450edef68"
c8563f47c66aef1867646485a70613090615c403,"DERBY-5913: Remove unused classes [GS]et*Action in client.am

Removed unused classes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1379390 13f79535-47bb-0310-9956-ffa450edef68"
d389f7d54c5e7c63f5423b6745d98e98a5bfa302,"DERBY-672: Add support for DISTINCT user defined aggregates in the SELECT list.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1379505 13f79535-47bb-0310-9956-ffa450edef68"
1cb558f10626a378c04a00583a5727e815c434c3,"DERBY-672: Attempt to fix broken test case for user defined aggregates on jsr169 platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1379519 13f79535-47bb-0310-9956-ffa450edef68"
61bb5d0a911c5a0dc41168270659f10749efca8e,"DERBY-672: Attempt to fix test order problem on Java 7 on Sol32.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1379527 13f79535-47bb-0310-9956-ffa450edef68"
f3c6217515c36cd50e767e72b2fbd21db4e49710,"DERBY-672: Adding GRANT/REVOKE support for user-defined aggregates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1380202 13f79535-47bb-0310-9956-ffa450edef68"
9662d0215de6534d3037f3df347837b709e75ba2,"DERBY-672: Second attempt to fix test for trying to invoke a user-defined aggregate on a small device which doesn't support generics.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1380207 13f79535-47bb-0310-9956-ffa450edef68"
521b4d2cfc947b0bed63b1b78a914216ffce31f3,"DERBY-5213; Write tests to verify the interaction of TRUNCATE TABLE and online backup
  adding a test for the two test cases described in the description of the issue.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1380779 13f79535-47bb-0310-9956-ffa450edef68"
02b86bb06df76605afb6c5ac08d390cb662d15d9,"DERBY-672: Third attempt to fix user-aggregate test failure on jsr 169.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1380784 13f79535-47bb-0310-9956-ffa450edef68"
8cede140d09830e535cf374dc7bdde9c642e27c0,"DERBY-2855;  Convert jdbc4/TestConnectionMethods.java to JUnit
  removing orphaned master file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1381429 13f79535-47bb-0310-9956-ffa450edef68"
ad188f4439279260a6246a876e8ddb5ddd0c8f28,"DERBY-5912; testIsValidImplemented fails for NetworkServer in some slow running machines/configurations
  This commits the following changes:
  - changes the timeout in ConnectionMethodsTest from isValid(1) to isValid(200) and adds a comment
  - updates the comment in ConnectionTest so it refers to ConnectionMethodsTest
  - has commented out sleep code in DRDAConnThread that can be uncommented to test this
  - adds a fixture, testIsValidWithTimeout, that is disabled by having an 'x' in front of it, to ConnectionTest. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1381731 13f79535-47bb-0310-9956-ffa450edef68"
20e175836bb7d72de0cadcd2ba4a3a4fd24eb78c,"Removed unused variable.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1381745 13f79535-47bb-0310-9956-ffa450edef68"
fd0edf9df811f22c5f866eb64c03fa61f7443c2e,"DERBY-5917: NoClassDefFoundErrors when running tests without derbynet.jar and derbyclient.jar

Avoid attempts to load client classes when the client driver is not there.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1382032 13f79535-47bb-0310-9956-ffa450edef68"
3ec6a935169ded144e35e658c661d14b2e246e23,"DERBY-5213; Write tests to verify the interaction of TRUNCATE TABLE and online backup 
  temporarily disabling the test because of reports of failures.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1382114 13f79535-47bb-0310-9956-ffa450edef68"
8f0d45d8ebd0ea18c176f352913aadd477a4cfb6,"DERBY-5917: NoClassDefFoundErrors when running tests without derbynet.jar and derbyclient.jar

Stop using client classes in XATransactionTest and CacheSessionDataTest
when running with the embedded driver.

Skip compatibility tests when client or server is not available.

Skip test case for server command in derbyrunjartest if the server
is not available.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1382791 13f79535-47bb-0310-9956-ffa450edef68"
898c8da78d5d4eae41871fd0c846b6fb0cba11b6,"DERBY-5213; Write tests to verify the interaction of TRUNCATE TABLE and online backup
  - add a third fixture, which tests an uncommitted truncate table followed by freeze/copy/unfreeze
  - remove the decorateSQL method and moves the creation and population of the truncable table to setUp(), and drops the table in teardown()
  - reinstate the test in lang._Suite 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1383677 13f79535-47bb-0310-9956-ffa450edef68"
d35198dbcaca20f26a38cec3f70f864e96dca912,"DERBY-5911 WHERE condition getting pushed into sub-query with FETCH

Patch ""derby5911b"", which changes logic in ProjectRestrictNode#pushExpressions to avoid pushing WHERE conditions into SELECTs that uses windowing and/or FETCH FIRST/OFFSET clauses. This fixes the bug in this issue. 

Adds new test cases in OrderByAndOffsetFetchInSubqueries.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1384035 13f79535-47bb-0310-9956-ffa450edef68"
aea21f6f553b3cb607a1064db54a637904bf3ad7,"DERBY-5927: Add utility methods to query state of URL attributes in EmbedConnection

Added static utility methods for improved readability.

Patch file: derby-5927-1b-isset_istrue.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1386480 13f79535-47bb-0310-9956-ffa450edef68"
59dbeaa15aed3ebe9ce59bafc11325d3cf6bcde2,"DERBY-5930: Reformat RawStore.setupEncryptionEngines

Fixed indentation, typos, long lines, and adjusted some comments.
Replaced tabs with spaces.

Patch file: derby-5930-1a-reformat.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1386483 13f79535-47bb-0310-9956-ffa450edef68"
d466c8048377303cde3a806959e9f3584984fd57,"Made init-method private.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1387611 13f79535-47bb-0310-9956-ffa450edef68"
f92846fa40f836722a0b0f70195e11e65f43733c,"Ignore, test-commit to verify commit notification delivery.
--This line, nd those below, will be ignored--

M    BUILDING.html


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1389014 13f79535-47bb-0310-9956-ffa450edef68"
9c32f1d5c4e5f5bcc7c289e9448ca89ae2aaad71,"DERBY-5775; Upgrade tests should print full IOException stack trace when it fails to access old versions 
  slight modification of message and printing the stack trace in case of an IOException.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1390126 13f79535-47bb-0310-9956-ffa450edef68"
d7f41dde542ce3c94015778452ef5d7ca14d3668,"DERBY-5933 SQL sorting error

Patch ""d5933-remap+test"", which fixes a problem in column reference
remapping in connection with flattening of a left outer join with a
base table. See the Javadoc for the new test case
JoinTest#testDerby_5933 for details.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1390205 13f79535-47bb-0310-9956-ffa450edef68"
6790718a3af595ef956fcbcef877c9472d8383eb,"DERBY-5935: Remove unused code for factory classes in the reflection service

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1390342 13f79535-47bb-0310-9956-ffa450edef68"
89a66256b35c2c820177258a0de360ad446be198,"DERBY-5792: Make it possible to turn off encryption on an already encrypted database.

A set of changes made in preparation of adding database decryption support.
These modifications should not cause functional changes.

Description:
 o DataFactory.setDatabaseEncrypted: introduced boolean flag to be able
   to tell the data factory that encryption has been turned off.
   Updated implementing method in BaseDataFileFactory
 o setDatabaseEncrypted: introduced second boolean flag to be able to
   tell the log factory that encryption has been turned off.
   Updated implementing methods in LogToFile and ReadOnly.
 o RawContainerHandle.encryptContainer: renamed to
   encryptOrDecryptContainer, added boolean flag to control crypto
   operation.
   Updated implementing method in BaseContainerHandle
 o BaseContainer.encryptContainer: renamed to encryptOrDecryptContainer,
   added boolean flag to control crypto operation.
   Updated implementing methods in RAFContainer and InputStreamContainer
 o EncryptData: renamed to EncryptOrDecryptData, added method
   decryptAllContainers, whitespace changes.
 o RawStore:
    - removed import
    - removed instance variable encryptDatabase
    - removed unused instance variable dataDirectory
    - renamed databaseEncrypted to isEncryptedDatabase
    - renamed configureDatabaseForEncryption to applyBulkCryptoOperation
    - made setupEncryptionEngines return a boolean: whether or not
      existing data must be transformed (applyBulkCryptoOperation)
    - simplified parts of the logic in setupEncryptionEngines
    - introduced isTrue/isSet for property sets
    - removed unused method privList(File)

Patch file: derby-5792-1b-boilerplate_and_preparation.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1390712 13f79535-47bb-0310-9956-ffa450edef68"
0acf7976c436fa24cd3b9825286fa2f96adeb350,"DERBY-672: Allow aggregates on user defined types.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1391034 13f79535-47bb-0310-9956-ffa450edef68"
36b5480b6f1e04effe610f7440afc4e48a35c807,"DERBY-5740: Remove unsued code in AlterTableConstantaction.columnDroppedAndTriggerDependencies

Removed unused code.

Patch file: derby-5740-1a-code_removal.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1392243 13f79535-47bb-0310-9956-ffa450edef68"
4f3aa606000212a5f59285af8029db8243bc62be,"DERBY-5914: Incorrect list of compatible JRE versions in client trace #2

Removed 1.4 and added 1.7.

Patch file: derby-5914-1a-versions.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1392294 13f79535-47bb-0310-9956-ffa450edef68"
d861c2306f46fbb9076c9e3773b5fcc6714c0397,"DERBY-672: Allow binding of user-defined aggregates to generic classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1392307 13f79535-47bb-0310-9956-ffa450edef68"
f9817edd945a6cae6b60e4dd0afb36d22f52c0d4,"DERBY-5340  Comment in demo server policy should follow RFC 2606 convention 

Fixed comments in policy file and template.

Patch: DERBY-5340.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1392332 13f79535-47bb-0310-9956-ffa450edef68"
69333bd558301005ae40354776d9c52977a22feb,"DERBY-5941: Assert failure in jdbcapi.InvalidLDAPServerAuthenticationTest.testInvalidLDAPServerConnectionError

Use .invalid for invalid/non-existngs hosts (see RFC 2606).

Patch file: derby-5941-1a-rfc2606.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1392338 13f79535-47bb-0310-9956-ffa450edef68"
698e88050afe92af856eb56d27e677420447f5c7,"DERBY-5934: Convert store.ReEncryptCrashRecovery

Converted old-style Java test to JUnit.
Changed the name of the test, since tests for database decryption are expected.

Patch file: derby-5934-1a-converted_to_junit.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1392375 13f79535-47bb-0310-9956-ffa450edef68"
7379752e3bb0ccfe54888ceea94781f60f3dce4a,"DERBY-5940: Disable securityMechanism=8 in NSSecurityMechanismTest on ARM platforms

Disabled strong password substitution tests on ARM platforms. The check is
simply based on the value of ""os.arch"", which must be ""ARM"" for the tests
to be disabled.

Patch file: derby-5940-1a-disable_secMec8_on_ARM.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1392819 13f79535-47bb-0310-9956-ffa450edef68"
3f01c97f100a8b1a9cd7a17ea6f52d852e7c49d8,"DERBY-5937: File handle is leaked when a Slave replication is shutdown with failover=true

Added a test case that exposes the bug when run on Windows.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1392847 13f79535-47bb-0310-9956-ffa450edef68"
86ebb44a6714bd7faad442476d5329dea23b8770,"DERBY-5792: Make it possible to turn off encryption on an already encrypted database. 

Added basic tests for database decryption, verifying that:
 o core functionality works
 o nothing is decrypted if the database is already booted
 o conflicting attributes are detected

The test has not yet been enabled as part of the store suite.

Patch file: derby-5792-2a-decryptdatabasetest.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1392856 13f79535-47bb-0310-9956-ffa450edef68"
d4254d9a61bb023318592a3fa57465e238890d5d,"DERBY-5942: Assert failure in derbynet.NetworkServerControlClientCommandTest.testPingWithWrongHost

Bring invalid host name in accordance with RFC 2606.

Patch file: derby-5942-1a-rfc2606.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1393462 13f79535-47bb-0310-9956-ffa450edef68"
d203eea661f3914a68a5419f94492e2109e41574,"DERBY-5792: Make it possible to turn off encryption on an already encrypted database.

Added the new connection attribute ""decryptDatabase"", which will decrypt an
encrypted database given the correct boot password or key if set to true.
The request is ignored if the database has already been booted.
If authentication and authorization are both enabled, only the DBO is allowed
to decrypt the database.

Enabled the DecryptDatabaseTest, and added new tests to DboPowersTest and
CryptoCrashRecoveryTest.

A few high-level comments:
o EmbedConnection
Deals with connection attributes and DBO powers.

o RawStore
Deals with the meat of the feature; configuring cryptograhic operations (based
on connection attributes and service properties), modifying
service.properties, and extra crash recovery logic.

o RAFContainer
This is where we skip encrypting the data pages when writing the containers,
effectively decrypting the database.

Patch file: derby-5792-3a-decryption_feature.diff,
            derby-5792-4b-crash_and_dbo.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1393993 13f79535-47bb-0310-9956-ffa450edef68"
761ebfb64392c5b9bee38becf283567b20308a23,"DERBY-5889: tests.compatibility._Suite has AccessControlException errors on Windows

Relaxed the criteria casuing the test to be disabled on Windows such that it
will only be disabled if at least one of the releases is located on an UNC path.

Patch file: derby-5889-1b-disable_test_relaxed.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1394250 13f79535-47bb-0310-9956-ffa450edef68"
9700792cdc71ae8b84958b9bd9934a9c8823d071,"DERBY-5937: File handle is leaked when a Slave replication is shutdown with failover=true

Recovery should close current log file before opening a new one.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1394407 13f79535-47bb-0310-9956-ffa450edef68"
c6892a1d01448ac745a16afcf57d6793b60609a5,"Fix some common typos in code comments.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1394480 13f79535-47bb-0310-9956-ffa450edef68"
0a8f8408a5e4070ec8a88f786601e601c30d3da0,"DERBY-5792: Make it possible to turn off encryption on an already encrypted database.

Simplified code removing old container files generated during encryption and
decryption of a database. There were two implementations, I removed one of them
and removed the parameter of EncryptOrDecryptData.removeOldVersionOfContainers
(and calling methods).

Patch file: derby-5792-5b-old_container_removal_cleanup.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1394522 13f79535-47bb-0310-9956-ffa450edef68"
9f8442735d3d1d33a0ec0c7d007003702b9ed99b,"DERBY-5916 (java.lang.NullPointerException org.apache.derby.impl.store.raw.data.BaseDataFileFactory.stop() connecting to network server)

Check for the nullability of storageFactory before using it in shutdown code



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1394883 13f79535-47bb-0310-9956-ffa450edef68"
f978b1f812ae4e113b357e740e55c9211f16533f,"DERBY-5937: File handle is leaked when a Slave replication is shutdown with failover=true

Use DataSource in the test to prevent internal deadlock in DriverManager
when running the test on Java 5. This also allows the test to run on
JSR-169 platforms.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1395482 13f79535-47bb-0310-9956-ffa450edef68"
f798a41afd09048c795a955626c4c14c7276a1d0,"DERBY-672: Add tests of user-defined aggregates on all builtin Derby types except for XML.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1396589 13f79535-47bb-0310-9956-ffa450edef68"
2cf546d5479758e2815529aaebece0e66652741a,"DERBY-672: Add implicit casts and handle string truncation for user-defined aggregates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1398352 13f79535-47bb-0310-9956-ffa450edef68"
db69e7016768198af1bbf9f1082755094b671072,"DERBY-672: Let user-defined aggregates have different input and return types.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1398489 13f79535-47bb-0310-9956-ffa450edef68"
85e788bae2148c7f33e75ea7854b39b3972e3d1a,"DERBY-5951: Supply missing CLOB instantiator.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1398914 13f79535-47bb-0310-9956-ffa450edef68"
2f535f8a56f1753de5ca65201a53b5c1357f9712,"DERBY-672: Run user-defined aggregate tests with collation turned off and turned on.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1398934 13f79535-47bb-0310-9956-ffa450edef68"
a35cf8de296e09f6b65372f790eae96aa5c1bc90,"DERBY-672: Set the collation of the input and return types of user-defined aggregates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1398952 13f79535-47bb-0310-9956-ffa450edef68"
03937751e49fccb943d80e089452155250ac1b7d,"DERBY-5947: Factor out common code from generated classes

Remove three generated fields and six corresponding accessor methods
with a single field (an instance of a class with three fields) and one
getter method.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1399139 13f79535-47bb-0310-9956-ffa450edef68"
edb7fcc6cf66fc79fcb2c8d827aa986ec93502a6,"DERBY-5947: Factor out common code from generated classes

- Move common code from the generated execute() method to a method
  in BaseActivation, and rename the generated execute() method to
  doExecute(), called from BaseActivation.execute().

- Simplify generated code in doExecute(). Specifically, fetch the
  resultSet field only once.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1399140 13f79535-47bb-0310-9956-ffa450edef68"
2bf0a9d51ca755cea2fcf62095bbbbd60ca1eb78,"Silence javadoc warning


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1399150 13f79535-47bb-0310-9956-ffa450edef68"
46e7e7c5d2d10a6a4d661d1d6a9707e1ffe44887,"DERBY-5918: Allow BOOLEAN columns in CREATE TABLE ... AS SELECT statements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1399306 13f79535-47bb-0310-9956-ffa450edef68"
63e09107058a04b1d4ab4396593a6b7af48e06b5,"DERBY-672: Forbid user-defined aggregates in GROUP BY clauses just as builtin aggregates are illegal there.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1399364 13f79535-47bb-0310-9956-ffa450edef68"
d11ed0893582387510ebc63c1478832b16745227,"DERBY-5947: Factor out common code from generated classes

Moved more code to BaseActivation.execute(). Specifically, code to
initialize BaseActivation's resultSet field and marking the root of
the result set tree as the top-level result set.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1400023 13f79535-47bb-0310-9956-ffa450edef68"
dd9ad0704f2415ad4a80894f1f0fc63b1c29d382,"DERBY-5947: Factor out common code from generated classes

Move authorization check for CursorNodes from generated code to
CursorActivation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1400024 13f79535-47bb-0310-9956-ffa450edef68"
cb25c6566a700bd4013c106eb5981f104031819e,"DERBY-672: More negative tests for illegal placement of user-defined aggregates in various statements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1400083 13f79535-47bb-0310-9956-ffa450edef68"
b3834d357bc2dfa7886c0f954026521a7903cbaf,"DERBY-672: Add support for loading user-defined aggregates from jars stored in the database.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1400161 13f79535-47bb-0310-9956-ffa450edef68"
b215dfd0cf1a1d5bdd711a4f3bf26957f3b292b4,"DERBY-672: Add tests for precision mismatches when using user-defined aggregates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1400208 13f79535-47bb-0310-9956-ffa450edef68"
0ad97c9a2e0aba019a72867189ccc60943c366bd,"DERBY-672: Tighten up the bounds checking for input and return types of user-defined aggregates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1400984 13f79535-47bb-0310-9956-ffa450edef68"
3d1bc57ed18277bc7c52d98a6ad48fec69d6c9e8,"DERBY-672: Remove unneeded exceptions and a redundant null check

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1401250 13f79535-47bb-0310-9956-ffa450edef68"
aad605761b7f5ef0c6f22459155fac97c75974f9,"DERBY-672: Add support and tests for dependencies between user-defined types and aggregates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1401303 13f79535-47bb-0310-9956-ffa450edef68"
d34116dae00c2ce4fe0ecde031bef3b9ab182c4f,"DERBY-4323: test failure in lang.ErrorMessageTest with IBM iseries IBM 1.5

Make the two threads that race for locks do as little as possible in order
to reduce the risk of missing the two-second window for constructing the
deadlock. That is, move query compilation and thread startup out so that
the participating threads only perform query execution.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1402043 13f79535-47bb-0310-9956-ffa450edef68"
e82e672f46368c266f8ab5507ac0d2c30a2a33ab,"DERBY-5960: VirtualRandomAccessFile.close() is not idempotent

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1402111 13f79535-47bb-0310-9956-ffa450edef68"
2bedeb17c4ac46fbfcf16729457a5694ae6a7256,"DERBY-2572: Clarify that the summary section of a detailed release note should be a one line, one sentence summary suitable for using as the title for the issue.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1402255 13f79535-47bb-0310-9956-ffa450edef68"
3c3ffd8c3c541cd64303a16c79968b4d00bc5aec,"DERBY-5962: Internationalize error messages for database decryption

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1403268 13f79535-47bb-0310-9956-ffa450edef68"
651c99e8578fe7ab29dde92faed4a84eedf31a75,"DERBY-5232 (Put a stern README file in log and seg0 directories to warn users of corrpution they will cause if they touch files there)

This will create 3 readme(README_DONT_TOUCH_FILES.txt) files at database creation time, One at the database level, one in the ""log"" directory and another in the ""seg0"" directory. 
a)Content of the readme file at the database level are as follows 
# ************************************************************************* 
# *** Do not touch files in this directory! *** 
# *** FILES IN THIS DIRECTORY AND SUB-DIRECTORIES CONSTITUES DERBY *** 
# *** DATABASE WHICH INCLUDES THE DATA(USER AND SYSTEM) AND THE *** 
# *** NECESSARY FILES FOR DATABASE RECOVERY. *** 
# *** EDITING, ADDITING OR DELETING ANY OF THESE FILES MAY CAUSE DATA *** 
# *** CORRUPTION AND LEAVE THE DATABASE IN NON-RECOVERABLE STATE. *** 
# ************************************************************************* 
b)Content of the readme file at ""seg0"" directory are as follows 
# ************************************************************************* 
# *** Do not touch files in this directory! *** 
# *** FILES IN THIS DIRECTORY ARE USED BY THE DERBY DATABASE TO STORE *** 
# *** USER AND SYSTEM DATA. EDITING, ADDING, OR DELETING FILES IN THIS *** 
# *** DIRECTORY WILL CORRUPT THE ASSOCIATED DERBY DATABASE, AND WILL *** 
# *** NOT BE RECOVERABLE. *** 
# ************************************************************************* 
c)Content of the readme file at ""log"" directory are as follows 
# ************************************************************************* 
# *** Do not touch files in this directory! *** 
# *** FILES IN THIS DIRECTORY ARE USED BY THE DERBY DATABASE RECOVERY *** 
# *** SYSTEM. EDITING, ADDING OR DELETING FILES IN THIS DIRECTORY WILL *** 
# *** CAUSE THE DERBY RECOVERY SYSTEM TO FAIL LEADING TO UNRECOVERABLE *** 
# *** CORRUPT DATABASES. *** 
# ************************************************************************* 





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1403611 13f79535-47bb-0310-9956-ffa450edef68"
345f23d478d8005e66030f8d1fbd5ad7391e97a3,"DERBY-5970: Prevent user from setting the decryptDatabase attribute to anything other than true.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1403735 13f79535-47bb-0310-9956-ffa450edef68"
393f243f0caa7584ce4fb5c5c9b309a5ddc0d5f6,"DERBY-5232 (Put a stern README file in log and seg0 directories to warn users of corrpution they will cause if they touch files there)

The earlier commit caused test failures because readme file creation was not getting done inside a privileged block. This commit fixes that problem and it was also fixes so typo and gets rid of redundant file close since that is already happening in the finally block.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1403807 13f79535-47bb-0310-9956-ffa450edef68"
af85a43d63fdd7a6808b24cdd969624019b8284b,"DERBY-5232 (Put a stern README file in log and seg0 directories to warn users of corrpution they will cause if they touch files there )

Fixing a typo


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1403973 13f79535-47bb-0310-9956-ffa450edef68"
82bf2d5095fb262d6e6831d7d34801cc6b764aa5,"DERBY-5971: Improve test coverage for SQLBoolean class

Remove two unused methods and add test cases for binary operators.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1404190 13f79535-47bb-0310-9956-ffa450edef68"
6051d0cd8ad51eb7b5026c8a3d6ee4d645974db0,"DERBY-5964: Timestamp comparison failure in AutomaticIndexStatisticsTest.testStatisticsCorrectness

Run test in GMT timezone to prevent instabilities around transition
to or from DST.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1404886 13f79535-47bb-0310-9956-ffa450edef68"
fcd3d4815ac24ce999b0fb7665a9ec3000bd1410,"DERBY-5966: Run NativeAuthenticationServiceTest in GMT time zone
to prevent instabilities when changing to or from DST.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1404888 13f79535-47bb-0310-9956-ffa450edef68"
f0f1666bf7e01df57e678a2e5b0ac2983a36c62f,"DERBY-5970: Forbid illegal settings of the dataEncryption attribute.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1404944 13f79535-47bb-0310-9956-ffa450edef68"
e744e8406bb1545e6871bec9902d090af86f1df9,"DERBY-5969: Raise a SQLWarning if someone attempts to change the encryption state of an already booted database.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1404947 13f79535-47bb-0310-9956-ffa450edef68"
88fc5dd00aeb7fec1a7ed964b80d897ecfbd6530,"DERBY-5948 Update JVMInfo to include JDK8



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1406053 13f79535-47bb-0310-9956-ffa450edef68"
d101510a2f4e62e6d6f001c488853d2b4833cb02,"DERBY-5795: Documentation in release doesn't include stylesheets

Fix tarball too.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1406083 13f79535-47bb-0310-9956-ffa450edef68"
5948150058fce0b2df3f1f13a9aa0384acc222bc,"DERBY-5971: Improve test coverage for SQLBoolean class

Cover the hashCode() method by testing SELECT DISTINCT, which performs
a hash scan.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1406125 13f79535-47bb-0310-9956-ffa450edef68"
0af1f882a8d733446656542a4f55aba7785828a3,"DERBY-5954 NPE in SELECT involving subselects and windows functions

Patch ""derby-5954-with-test-2"" makes the code only look for in-lined
window specification in simply contained select lists. Adds a new test
case to OLAPTest which would fail with an NPE before this patch,
cf. original JIRA problem.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1406240 13f79535-47bb-0310-9956-ffa450edef68"
e27c25c282f92e73725997c68da7137076753ec3,"DERBY-5986: Make ArithmeticTest test DECIMAL data type

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1406950 13f79535-47bb-0310-9956-ffa450edef68"
1bb2c59c7f142255c0f0f2a57dc2ab69753e8f7b,"DERBY-5232 (Put a stern README file in log and seg0 directories to warn users of corrpution they will cause if they touch files there)

This commit fixes 
a)a typo in the readme file content.
b)uses OutputStreamWrtier to deal with UTF-8 encoding for the readme files.
c)fixes the if condition used to create readme files



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1407170 13f79535-47bb-0310-9956-ffa450edef68"
4ecfb0ef5e0a8f80fa2065f7ef45404575950399,"DERBY-2920: Share code between readExternal() and readExternalFromArray()

Provide a default readExternalFromArray() method that simply forwards
calls to readExternal() in the DataType class. Remove the method from
sub-classes where the readExternal() and readExternalFromArray() methods
are identical.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1407432 13f79535-47bb-0310-9956-ffa450edef68"
eca1f7c6be455ce07bbd6f08f7a5c393817139a5,"DERBY-5972: Grammar doesn't accept OR operator without parentheses

Update grammar to allow full value expressions where it previously
only allowed conjunctions of boolean primaries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1408136 13f79535-47bb-0310-9956-ffa450edef68"
0dfad316ab3df9bb2285d0b1809f9a59faa65a6a,"DERBY-5232 (Put a stern README file in log and seg0 directories to warn users of corrpution they will cause if they touch files there)

Adding a test case for default database creation with the checks for the existence of the 3 readme files. These readmes warn users against editing/deleting any of the files in the database directories. The location of the readme files are  
 1)at the db level directory, 
 2)in seg0 directory and 
 3)in the log directocy.
All the three readme files are named README_DONT_TOUCH_FILES.txt



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1409100 13f79535-47bb-0310-9956-ffa450edef68"
c724a49e505c573ceabebf82db30e65d86b054b2,"DERBY-5992: Use BaseTestCase.execJavaCmd() to start process from NetworkServerTestSetup

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1409113 13f79535-47bb-0310-9956-ffa450edef68"
80fb744986ff0c81de35d506b943cbdf27d62623,"DERBY-5989: Stop producing byte code for non-existent qualifiers

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1409120 13f79535-47bb-0310-9956-ffa450edef68"
ce0c0aed66e1bdb04f6e69e99cc05d1aea80d970,"DERBY-5232 (Put a stern README file in log and seg0 directories to warn users of corrpution they will cause if they touch files there)

Remove redundant file length check on readme files. It is sufficient to check that they exist. Additionally, assert the value returned by file exists method.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1409254 13f79535-47bb-0310-9956-ffa450edef68"
70ddc118f3577b7cbc02adb22dc285bcb8c95a03,"DERBY-5232 (Put a stern README file in log and seg0 directories to warn users of corrpution they will cause if they touch files there)

Change the readme file's name to README_DO_NOT_TOUCH_FILES.txt



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1409654 13f79535-47bb-0310-9956-ffa450edef68"
24fec02f16864c9194411a4da3cca09f7adc78cc,"DERBY-5232 (Put a stern README file in log and seg0 directories to warn users of corrpution they will cause if they touch files there)

Add ReadMeFilesTest to engine suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1409866 13f79535-47bb-0310-9956-ffa450edef68"
91f701796534e64e9539384cfddc1e6265c7611a,"DERBY-5232 (Put a stern README file in log and seg0 directories to warn users of corrpution they will cause if they touch files there )

Wording fixes in the readme files.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1410465 13f79535-47bb-0310-9956-ffa450edef68"
026c5e8fa7f332e1b9846ab999aa23d3bdfd6092,"DERBY-5998: Replication tests fail on CDC platforms without optional JSSE package

Skip the replication tests if the optional package is not available.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1411160 13f79535-47bb-0310-9956-ffa450edef68"
5baee936bfc3cfad872489a9b57eb39bec6900b6,"DERBY-2920: Remove unused readExternal() methods


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1411164 13f79535-47bb-0310-9956-ffa450edef68"
8467ac548b8885886da79a0d771262f64a1d4583,"DERBY-6001: ErrorMessageTest assert failure: Only one of the waiters should be aborted

Improve diagnostics. Print stack traces to the log if both threads fail.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1412042 13f79535-47bb-0310-9956-ffa450edef68"
cfd0e57c2a02f1c1fa451d006450a1c12f892a29,"DERBY-5975; intermittent nightly test failure across releases in Derby5937SlaveShutdownTest.testSlaveFailoverLeak
  disabling test for weme


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1412392 13f79535-47bb-0310-9956-ffa450edef68"
083db506cc32db19bd29b4752218aa318c700ed9,"DERBY-6001: ErrorMessageTest assert failure: Only one of the waiters should be aborted

Increase the wait timeout for the deadlock test. This prevents the
intermittent timeout errors that could happen on slow machines if the
deadlock detector hasn't picked and killed a victim before the other
waiting thread has timed out.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1412577 13f79535-47bb-0310-9956-ffa450edef68"
a280bebe82f0143903a92b3a4d9fc6a7c2ff80f9,"DERBY-6003: Create row templates outside of the generated code

Initial cleanup: Remove unused fields in ResultSet classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1412763 13f79535-47bb-0310-9956-ffa450edef68"
12cc1f1d8108524e2c62726efc09847365f624c5,"Fix javadoc warning.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1412780 13f79535-47bb-0310-9956-ffa450edef68"
f54263274562543167f266652f90031fd4ff1482,"DERBY-5947: Factor out common code from generated classes

Move execution count from generated class to GenericPreparedStatement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1413586 13f79535-47bb-0310-9956-ffa450edef68"
b79d9d807f8e8641f22c115592a0b66d82d3a0ec,"DERBY-5995 (Add a test case to check the 3 readme files get created even when log directory has been changed with jdbc url attribute logDevice )

Adding a junit test for readme files but the log directory has been redirected using logDevice jdbc url attribute.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1413740 13f79535-47bb-0310-9956-ffa450edef68"
b77b23cd30fad215c8707ee6b750b865dc22f2aa,"DERBY-5975; intermittent nightly test failure across releases in Derby5937SlaveShutdownTest.testSlaveFailoverLeak
  removing unintended unneeded import


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1413812 13f79535-47bb-0310-9956-ffa450edef68"
58f6f98714e2066e42f1438ccbc468794c6a438e,"DERBY-5462;  ant release needs to accommodate for different ant executables on different systems

  applying conditional setting of ant exec name


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1414316 13f79535-47bb-0310-9956-ffa450edef68"
bbd82de408c9ca1a68a13da938c3019c9fd39875,"DERBY-6003: Create row templates outside of the generated code

Initial cleanup: Remove unused field from TypeId, and remove the
corresponding parameter from the constructor.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1414718 13f79535-47bb-0310-9956-ffa450edef68"
f9596d49421ef01dac027363f1154c63aaa510d0,"DERBY-3069: DDL for varargs routines.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1417835 13f79535-47bb-0310-9956-ffa450edef68"
576d3b75bab93c1eb9b73074d6e753f3da7d3985,"DERBY-6006: NullPointerException in INSERT INTO ... SELECT FROM ... ORDER BY

A NormalizeResultSet should not expose generated ORDER BY columns to
its parent.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1417991 13f79535-47bb-0310-9956-ffa450edef68"
5f587f79125d2e7752a8deb8c5d22623695d1156,"DERBY-3069: Fix a bug in the upgrade tests introduced by revision 1417835.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1418022 13f79535-47bb-0310-9956-ffa450edef68"
ae72a30839ef93a03eeb6031f3a1c3c5c05ce602,"DERBY-6003: Create row templates outside of the generated code

Upgrade test fix in preparation for the actual fix for this issue.

Improve SYSCS_INVALIDATE_STORED_STATEMENTS by making it null out the
plans in SYS.SYSSTATEMENTS. Previously, it only marked them as invalid.

Use the improved SYSCS_INVALIDATE_STORED_STATEMENTS to work around
problems in the upgrade tests when downgrading to a version that suffers
from DERBY-4835 or DERBY-5289. Remove the old workarounds for DERBY-4835,
DERBY-5105, DERBY-5263 and DERBY-5289, as they are now handled by the
centralized workaround that uses SYSCS_INVALIDATE_STORED_STATEMENTS.

This change is needed because later patches for this issue will change
the format of many stored plans, so more of the test cases need to work
around the downgrade bugs in some old versions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1418296 13f79535-47bb-0310-9956-ffa450edef68"
959fef25ed69208f7a83e35f253eec9007bdaa4b,"DERBY-6003: Create row templates outside of the generated code

Create and store an ExecRowBuilder in the GenericPreparedStatement
instead of creating a generated method for allocating row templates.

This patch makes ScanResultSet and its sub-classes use the new approach.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1418297 13f79535-47bb-0310-9956-ffa450edef68"
9496f49a652b3f16b0c5afa8a8fcd939683f3449,"DERBY-5996(Create readme files (cautioning users against modifying database files) at database hard upgrade time)

During hard upgrade to 10.10, Derby will create 3 readme files, one in database directory, one in ""seg0"" directory and one in log directory. These readme files warn users against touching any of files associated with derby database




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1418568 13f79535-47bb-0310-9956-ffa450edef68"
232d09ab72168cdc641ddaea67c7a585f92971b9,"DERBY-3069: Enable the execution of varargs routines.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1420165 13f79535-47bb-0310-9956-ffa450edef68"
d868eed096b89da2862d87b898deddb379eba1c2,"DERBY-6003: Create row templates outside of the generated code

Make SortResultSet, VTIResultSet, aggregates and WindowResultSet use an
ExecRowBuilder instead of a generated method to allocate row templates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1420579 13f79535-47bb-0310-9956-ffa450edef68"
ba70926bc377813bf22baec7952c16f25d8c2429,"DERBY-3069: Fix varargs bugs in handling of primitive args and out/inout args.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1421052 13f79535-47bb-0310-9956-ffa450edef68"
be4b1306f4fc7259d080fab6d9edeb93e79d8b98,"DERBY-5832: Localize messages introduced or changed in 10.9.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1421449 13f79535-47bb-0310-9956-ffa450edef68"
0325a5d646b6614e95fbd0ec24cdeadfb657796d,"DERBY-5832: Fix some test canons to align them with the new translations which were just checked in.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1421972 13f79535-47bb-0310-9956-ffa450edef68"
4d044a3f7a7b8bc70860629bded778972f617ce1,"DERBY-6008 Allow ORDER BY and FETCH/OFFSET in set operands

Patch derby-6008-e; adds this feature as well as accompanying new tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1422164 13f79535-47bb-0310-9956-ffa450edef68"
6d4d95d4142be4cdb94927093372d2b085034e21,"DERBY-5894: NPE in OnlineBackupTest1 while backing up in stubFileToRemoveAfterCheckPoint

Stop using the shared run() method from RAFContainer.backupContainer(),
as it is not safe to use without synchronization (which is why the
NullPointerException happened).

Also, use doPrivileged() only to execute those parts of the code that
need to run with privileges, as most of the code called from
backupContainer() does not need privileges.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1422845 13f79535-47bb-0310-9956-ffa450edef68"
d2a3ac25cf070fa2f4b72065cda3085a1f937540,"DERBY-5832; Localize messages introduced or changed in 10.9.1 
  adjusting one j9 canon to match the changes for the master


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1423209 13f79535-47bb-0310-9956-ffa450edef68"
8a818c865a64e687c32d23e0e18803f3bc8ddfaf,"DERBY-3069: Add datatype and coercion tests for varargs arguments and prevent table functions from being created with parameter style DERBY.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1423714 13f79535-47bb-0310-9956-ffa450edef68"
63a21e71472816e37039ddaaf4f0e4c6bc411802,"DERBY-6012 (Print thread dump and dump javacore if NetworkServerTestSetup has to kill off the Network Server start up process due to timeout)

Simple code change to dump threads and javacore



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1423985 13f79535-47bb-0310-9956-ffa450edef68"
2e57170bd821f8ec1a4cdb84fbfb64c45e6a0e91,"DERBY-6017: IN lists with mixed types may return wrong results

Fix the case where all the constant values in an IN list get reduced
to a single constant after conversion to the dominant type. In such
cases, the remaining constant should be converted to the dominant type.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1424889 13f79535-47bb-0310-9956-ffa450edef68"
bda7291d62819bc38c1535f40ab397191feb9111,"DERBY-6003: Create row templates outside of the generated code

Make IndexRowToBaseRowResultSet use an ExecRowBuilder instead of a
generated method to produce row templates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1426151 13f79535-47bb-0310-9956-ffa450edef68"
8ef7e92c6c78ca39864b1d4162907478502b77b4,"DERBY-3275: Mismatch between comments and actual use of initialSize parameter in CacheFactory and Clock

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1426360 13f79535-47bb-0310-9956-ffa450edef68"
58bf06e16a27d9c18c59c52779df8f38b31ce794,"DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161)

Patch derby-5955-embed-restructure-04. This restructures the class
hierarchy for embedded data sources to prepare for introduction of the
non-JNDI dependent ones for JEP 161.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1427045 13f79535-47bb-0310-9956-ffa450edef68"
eea0d50c8d732cad9ba563ddfa786b7028eb092f,"DERBY-4955 Prepare Derby to run with Compact Profiles (JEP 161) 

Patch derby-5955-embed-restructure-followup, some white space changes
plus a missed fix to EmbeddedDataSource40 which was in the original
proff-of-concept patch but fell through the cracks in the committed
patch derby-5955-embed-restructure-04.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1427047 13f79535-47bb-0310-9956-ffa450edef68"
1bd559bd90940c04ea29ac765bdf9dfaf8ab24c2,"DERBY-5988 Instability in DataSourceTest: some test fixture orderings makes test_jdbc4_1 fail 

Patch derby-5988: temporary measure to avoid tests failing
intermittently.  Could be removed when the issue is fixed, but IMHO
running fixtures in in a predicatable order is good anyway.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1427660 13f79535-47bb-0310-9956-ffa450edef68"
092cf8b28bf6e07ea2978305142a2a7ca01c3713,"DERBY-6022: Add a system procedure for (un)registering optional packages of tools.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1427859 13f79535-47bb-0310-9956-ffa450edef68"
f99d2075ca8e3dfd99ee7579d572e2a2f9f50923,"DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161) 

Trivial Javadoc fix.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1428130 13f79535-47bb-0310-9956-ffa450edef68"
49300a73c96bca79d4ae44cf10dba18645b8dd3a,"DERBY-6009 Need stricter checking of ORDER BY clause in VALUES expressions

This patch, derby-6009c, improves on the restriction that ORDER BY for
VALUES be limited to column numbers (SQL-92 style) only. It should now
give an understandable error message if anything else is tried. It
adds a new error message, ""4287B"" and test cases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1428160 13f79535-47bb-0310-9956-ffa450edef68"
b98b60eae63f4bfef55affeda6685db315cd394d,"DERBY-2516: Network Client allows execution of callable statement when one of the parameters is not set

Check that INOUT parameters are set, not only registered with registerOutParam().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1428256 13f79535-47bb-0310-9956-ffa450edef68"
cf427292d8ca32e457abb97887d50a836632f732,"DERBY-2699: Change how collation elements for ESCAPE clause are calculated

Since we only need to know whether or not there is a single collation
element, just look at the first two elements to see if we have none, one
or many.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1428305 13f79535-47bb-0310-9956-ffa450edef68"
ea335da7476079fe7c556ee8695aaea583abfc94,"DERBY-6022: Add optional dbmd tool which creates wrapper routines for the DatabaseMetaData methods so that they can be invoked in queries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1428506 13f79535-47bb-0310-9956-ffa450edef68"
c87505f3e4889ce4301a354eb39e1d934cb3a7f3,"DERBY-6033: Remove the arbitrary limit on the number of parameters allowed for a Derby routine.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1428567 13f79535-47bb-0310-9956-ffa450edef68"
99d9d5c2344d36bdbe42e18c5a251e557b82c8b8,"DERBY-6033: Lift the arbitrary limit on the number of routine parameters

Test that stored procedures can have as many parameters as the Java
specification allows.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1428775 13f79535-47bb-0310-9956-ffa450edef68"
946f53dc7e3c8ebe3b6882311239f2cd2378428c,"DERBY-5945 Inappropriate error message when calling a procedure as a function (as if it had a return value) 

Committed patch ""DERBY-5945"". It adds new usage checks for a procedure
called as a function and vice versa, two new eror messages,
LANG_PROC_USED_AS_FUNCTION (42Y03.S.3) and LANG_FUNCTION_USED_AS_PROC
(42Y03.S.4) as well as new test cases to LangProcedureTest.

The patch also does some cleanup of LangProcedureTest and activates to
be run as a standard part of the regressions in the lang suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1429197 13f79535-47bb-0310-9956-ffa450edef68"
300e268c33b999c2e3b92c3b7a729df05f0eec88,"DERBY-6027 ORDER BY a cast expression gives NPE

Patch derby-6027b, plugging this hole and adding accompanying tests.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1430150 13f79535-47bb-0310-9956-ffa450edef68"
2be230feda197d92e28cbbbaa02660c30ab729b1,"DERBY-4855: Fix targets in distribution links in the template used by the ReleaseNotesTransformer tool.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1430291 13f79535-47bb-0310-9956-ffa450edef68"
fbe18c55312d8aa1e26ada61893d6ad6b34c83af,"DERBY-4855: Convert the publication of new release docs to svnpubsub.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1430417 13f79535-47bb-0310-9956-ffa450edef68"
8269b78486a5ad7fa66942b2f47a0cce1ea3c968,"DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161) 

Patch derby-5955-client-restructure-02 (as modified by the delta patch
derby-5955-client-restructure-02-delta.diff) restructures the client
data source hierarchy in anticipation for the non-JNDI dependent
datasources to be introduced into Derby to work on SE with compact
profile 2. The current API is kept as is.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1430648 13f79535-47bb-0310-9956-ffa450edef68"
63baf27697e6f37f41b45d10fb27b04bb89a20c8,"Various small changes in CollationTest:

- Reorganized how the test suite was built in order to prevent
  unnecessary database creation when there are multiple test cases
  that should run with the same collation.

- Enabled test case for DERBY-5951 and fixed typos in some of its
  SQL statements.

- Removed some unused code.

- Use more of the framework's helper methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1430735 13f79535-47bb-0310-9956-ffa450edef68"
431cbeb5320ced59a4b24b4bfbaffd7b56d396d9,"DERBY-6036: Add a test case to verify that restrictions are pushed through views even though projections aren't.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1430957 13f79535-47bb-0310-9956-ffa450edef68"
e081c8565e18f2ac7901a781e7b716aff46ce71a,"DERBY-6022: Add optional tool for bulk-importing data from foreign databases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1431041 13f79535-47bb-0310-9956-ffa450edef68"
b48393e641e4c50ccb18c6e5728204fd17f77c5d,"DERBY-5945; Inappropriate error message when calling a procedure as a function (as if it had a return value).
  updating the j9_foundation/outparams.out canon.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1431120 13f79535-47bb-0310-9956-ffa450edef68"
35d6658fa4f241267698246384e44f6e7212937d,"DERBY-6030: Length of escape string in LIKE ... ESCAPE not properly checked with territory based collation

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1431259 13f79535-47bb-0310-9956-ffa450edef68"
25959e322bf0c93202dad6cdde96cc1e814f3e8f,"DERBY-6022: Add ability to load/unload custom tool packages via syscs_util.syscs_register_tool().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1431526 13f79535-47bb-0310-9956-ffa450edef68"
1653bccb930c677a96605a13624333de53d6590d,"DERBY-3069: Add stringArrayTable, a VTI useful for testing VTIs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1431623 13f79535-47bb-0310-9956-ffa450edef68"
ac5abd96fd65361a1b0e1cb5cc0dd5c3ff1520da,"DERBY-6038: Intermittent failure in LangProcedureTest: cannot drop table because of open ResultSet

Explicitly close the non-dynamic result set in the regression test case
for DERBY-3304. Also update the comments to reflect that DERBY-3304 only
affected the internal CallStatementResultSet and its dynamic result sets.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1431945 13f79535-47bb-0310-9956-ffa450edef68"
1381e706e59edb6e7e8e61e597df869be9b0dde5,"DERBY-6039: Intermittent failure in LangProcedureTest.testDynamicResultSets: Table/View 'T1' does not exist.

Let testDynamicResultSets() create its own test table, rather than
relying on one created by another test case. Removes dependency on
test case ordering.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1431948 13f79535-47bb-0310-9956-ffa450edef68"
a3b16f95b39626b04416d6e32851f0b2c8d3b01f,"DERBY-6039: Intermittent failure in LangProcedureTest.testDynamicResultSets: Table/View 'T1' does not exist.

Make the test cases drop all SQL objects they have created.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1431961 13f79535-47bb-0310-9956-ffa450edef68"
4e0e1f13ce0b429a3b552cb4880f57597a64c2ae,"DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161)

Patch derby-5955-new-non-jndi-ds-02. This introduced the six (three
for embedded, three for client drivers) new reduced functionality data
sources that will work in the absence of JNDI. It adds a sanity test
which will run even on a full Java SE platform. Full tests to be
exercised when running in a constrained environment will follow in a
subsequent patch.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1432380 13f79535-47bb-0310-9956-ffa450edef68"
a8dfc0a0c98b20634796c44c26f1f0149a75b2d3,"DERBY-6040: Fix sort order bug when selecting a partial column list from a table function.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1433031 13f79535-47bb-0310-9956-ffa450edef68"
401072ff096573fdf8de953c0597af7c6a3d284a,"Fixed a comment typo.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1433218 13f79535-47bb-0310-9956-ffa450edef68"
106919eb7a4922de2dc98549f6b6960edb53796e,"Fixed comment typo


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1433219 13f79535-47bb-0310-9956-ffa450edef68"
f6fea403ba3055ddac66c2b3fa1f72fa8cc245f8,"DERBY-6041: Remove unused parameters from the BTreeLockingPolicy interface

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1433331 13f79535-47bb-0310-9956-ffa450edef68"
6a23c3b00ec5b57a5979fd39e0e708ce15286a85,"Added information about the value of the id-tag in the server section of settings.xml. The server-entry is required to be able to log into Nexus to upload the Derby artifacts.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1433353 13f79535-47bb-0310-9956-ffa450edef68"
fbf52ee492c624169e72cd35cc918b452a370e20,"DERBY-6022: Fix NPE when resolving a function/aggregate name in a schema which hasn't been created yet.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1434363 13f79535-47bb-0310-9956-ffa450edef68"
05e6355ebbad040a67f515a63e2a2db60e3eafe2,"DERBY-6043: Make JQL default query mode for 'ant genrelnotes'

Made the switch to JQL, and cleaned up some ant code.
Note that you can still specify jira.filter.id explicitly if you wish to.

Patch file: derby-6043-1a-make_jql_default.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1434599 13f79535-47bb-0310-9956-ffa450edef68"
615cb37cc1e569b5ff5838722d102dc17dcf6d14,"DERBY-6047: Fix NPE in routine resolution introduced by work on DERBY-3069.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1435267 13f79535-47bb-0310-9956-ffa450edef68"
6819612dd96ccf51257be1b51b4b99f88778405e,"DERBY-553: With JDK 1.5 signatures from signed jar in a database are not returned by Class.getSigners() when database in stored in a jar file.

Enable test case that fails because of this bug, on the platforms where it is fixed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1437359 13f79535-47bb-0310-9956-ffa450edef68"
086e8176419d334504bbdebff447367c1108b3b7,"DERBY-6044: Fix poor word breaking in table on download page(s)

Some browsers break up DERBY-XXXX at the hyphen even though they shouldn't.
Work around this by using a div-element to size the first column of the table.

Patch file: derby-6044-1a-stop_breaking_up_jira_id.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1437872 13f79535-47bb-0310-9956-ffa450edef68"
e552d382ab2155b5bed3d91f13427e09af0afb70,"DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161) 

Patch derby-5955-add-cp2-to-jars. This add a new attribute to the
manifest in the jar files to make sure the user will get a good error
message if Derby is attempted run with compact profile less than 2,
i.e. CP1:

MANIFEST.MF:
:
Profile: compact2 
:

Cf. this quite in http://openjdk.java.net/jeps/161:

""jar ‚Äî The JAR-file manifest specification will be extended with a new
attribute which can be used to specify the minimum Profile required by
the code in a JAR file.""



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1437995 13f79535-47bb-0310-9956-ffa450edef68"
c35e4f0abcfa5aadcbb502ef7eb39ddc95f3320e,"DERBY-5955 DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161)

Patch derby-5955-make-tests-run-03. This makes the regression tests
work on CP2. Also, is updates the DataSourceSerializationTest for
10.10 with serialized data sourced for existing and the new
datasources.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1438035 13f79535-47bb-0310-9956-ffa450edef68"
7fb99569ce3cb7758e90be5e2ebff3906f039e68,"DERBY-6000: Add new JDBC 4.2 Statement.executeLargeUpdate() methods to the embeddeded JDBC 3.0 implementation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1438600 13f79535-47bb-0310-9956-ffa450edef68"
f26c60c74666fce3053f41341b6c1bcb09f802b9,"DERBY-6000: Add the JDBC 4.2 large update methods to the client implementation of Statement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1439883 13f79535-47bb-0310-9956-ffa450edef68"
31e29dea5c07d8731cff939d259fbabed34f6022,"DERBY-6058: When running on jsr169, skip a test which requires varargs, a feature which was introduced by Java 5.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1439889 13f79535-47bb-0310-9956-ffa450edef68"
0b0a105a0f40f20050e00cd3b5f4f6e58603b017,"DERBY-6000: Add JDBC 4.2 method Statement.executeLargeBatch() to embedded and client drivers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1440035 13f79535-47bb-0310-9956-ffa450edef68"
879ca5decdce3b2e41d3800ebf48bc758d2c7bcd,"DERBY-5924; Tasks for 10.8.3 maintenance release; add 10.8.3.0 to oldVersions for upgrade tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1440129 13f79535-47bb-0310-9956-ffa450edef68"
38667d90c4142b29af466282e30981d29a1f098f,"DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161)

Patch derby-5955-rename. Rename the new datasources from using prefix
""NonJNDI"" to prefix ""Basic"".

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1440262 13f79535-47bb-0310-9956-ffa450edef68"
29136120613dd82122c3d7bc2ce51bde1d2d215f,"DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161)

Patch derby-5955-javadoc, which updates the javadoc with a single line
usage advice at the top of the javadoc for all the data sources, and
also adds description of the new data sources to the jdbc package's
javadoc. Removed ClientBaseDataSource from the public api, added
adding ClientDriver40 to the jdbc4 instead of ClientDriver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1440264 13f79535-47bb-0310-9956-ffa450edef68"
e6d2f6728502868b45903c879c9c787c1497b9a6,"fix typo

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1440269 13f79535-47bb-0310-9956-ffa450edef68"
6d275504816aeb569af9becc58011b2d6d1cbcb4,"DERBY-5924; Tasks for 10.8.3 maintenance release
  Updating STATUS after announcement 10.8.3.0.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1440586 13f79535-47bb-0310-9956-ffa450edef68"
47a8183bee4c86d4bebffaee59f92420357f779e,"DERBY-6000: Add JDBC 4.2 large max rows methods to Derby's embedded and client implementations of java.sql.Statement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1440656 13f79535-47bb-0310-9956-ffa450edef68"
20b2fd9c5a42c6e9f1fd09fc641a325fecfe85e1,"DERBY-6000: Add JDBC 4.2 java.sql.PreparedStatement.executeLargeUpdate() to embedded and client drivers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1441088 13f79535-47bb-0310-9956-ffa450edef68"
7b5f96489016b7d68b10822a160fb79344944bc7,"DERBY-6060 Fix Javadoc for UpgradeTrajectoryTest dangling reference

Patch derby-6060, class javadoc fixes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1441313 13f79535-47bb-0310-9956-ffa450edef68"
cb88209e90383bd21fa06b7047c66b6b83c143d5,"DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161)

Patch derby-5955-javadoc-followup; typo fix plus clarify usage: JDBC 4.2/Java
8/Java 8 Compact profile 2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1441327 13f79535-47bb-0310-9956-ffa450edef68"
8072e989d9a72e1e7cdb185934eee3a52b21264c,"DERBY-6063: Access static variables by class name in TabInfoImpl, InsertResultSet and ControlRow

Replaced occurrences of accessing static variables via instances with access via class names.
Removed unused meothod in ControlRow.
Removed a few unused local variables.

Patch file: derby-6063-1a_statics-by-class_and_unused_method.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1441396 13f79535-47bb-0310-9956-ffa450edef68"
0be21896e2056ad699004dacdc664ec0ce3bf90f,"DERBY-6000: Add JDBC 4.2 DatabaseMetaData changes to embedded and client drivers.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1441436 13f79535-47bb-0310-9956-ffa450edef68"
e6a4a471f71206285dd657822ff2a166d069c7b1,"DERBY-5949: Add Java 8 to the list of build environments understood by PropertySetter.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1441568 13f79535-47bb-0310-9956-ffa450edef68"
a24588ccc34d4f5479d18492e3104d114e4d0a58,"DERBY-5955 Prepare Derby to run with Compact Profiles (JEP 161)

Javadoc formatting fix: derby-5955-javadoc-followup-2.diff

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1441869 13f79535-47bb-0310-9956-ffa450edef68"
6be56bc9723325f35ab3e850d48dba77463db64b,"DERBY-6064: Failures in upgradeTests.Changes10_9 related to index cardinality statistics

Added logic to adjust asserts based on the version of the old database.
The fix affecting the tests is in the released 10.8.3-version of Derby, and
the fix has been backported to older branches back to 10.3.

Patch file: derby-6064-1a-istat_upgrade_test_fixes.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1441923 13f79535-47bb-0310-9956-ffa450edef68"
b54918e7ce530ca391f4cdf7b949b717da630199,"DERBY-6000: Add support for JDBC 4.2 changes to BatchUpdateException.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1442195 13f79535-47bb-0310-9956-ffa450edef68"
0b963b2bd3d3e981ca02bd39a679d9465580a3d6,"DERBY-6053(Client should use a prepared statement rather than regular statement for Connection.setTransactionIsolation)

Use prepared statements rather than regular statement to change the isolation level in client server mode. This will be better for performance and will also avoid possible garbage collection issues.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1442474 13f79535-47bb-0310-9956-ffa450edef68"
31c208ab4a2dda7ce23f2092f977a1e8a6ea500d,"DERBY-6064: Failures in upgradeTests.Changes10_9 related to index cardinality statistics

Improved comment(s) and fixed a typo.

Patch file: derby-6064-2a-fix_comment.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1442483 13f79535-47bb-0310-9956-ffa450edef68"
af2d9d288206fe647639cb22201b7ac774db57d1,"DERBY-6011: Prefer unique index when accessing a small number of rows

If there is a choice between accessing a table with a unique index scan
that is guaranteed to return at most one row, and some other non-covering
index scan that might return multiple rows, adjust the cost of the other
scan so that it includes the cost of fetching at least one row from the
base table.

This change makes it more likely that the unique index is chosen if both
of the index scans are believed to return no more than one row on average.
The unique index is the safer choice since it is guaranteed to return at
most one row. The other index may in the worst case return many rows,
which requires more locking and increases the likelihood of deadlocks.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1442554 13f79535-47bb-0310-9956-ffa450edef68"
2ca14a59e60971b72d9b4680093551bec1668742,"DERBY-6053: Add a lint directive to the compilation of Connection.java so that we can see what the newly introduced compiler warning means.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1442732 13f79535-47bb-0310-9956-ffa450edef68"
7d6c180f293c3511c682b12cff1d1100585501ef,"DERBY-4480: ""No suitable driver found"" when attempting to connect while other thread is auto-loading the driver

Add test case to verify that it does not affect Java 7 and newer.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1442937 13f79535-47bb-0310-9956-ffa450edef68"
cd1db93397d46667e38f7b7b06ccd4099189429e,"DERBY-6000: Fix bug on contruction of BatchUpdateExceptions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1443086 13f79535-47bb-0310-9956-ffa450edef68"
94ee9f57a2319f3f8619e88df77325b7a6737947,"DERBY-5949: Add a -noverify switch to the java commands in the toursdb targets in order to shortcircuit the VerifyError which chokes the Derby build on Open JDK 8.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1443109 13f79535-47bb-0310-9956-ffa450edef68"
c7f0048d4f770bd2812b8880d585ce04e5ed6f38,"DERBY-6053 (Client should use a prepared statement rather than regular statement for Connection.setTransactionIsolation)

Sinnce Connection object is already synchronized, no need to use synchronized Hashtable, instead us HashMap.

Also parameterize HashMap object declaration for easier usage and tighter type checking by the compiler.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1443599 13f79535-47bb-0310-9956-ffa450edef68"
7cfb7e6fe52a683abd962207fdbd80b2f1de8588,"DERBY-6000: Add new PreparedStatement.setObject() overloads introduced by JDBC 4.2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1443697 13f79535-47bb-0310-9956-ffa450edef68"
40b723cf7bacce64be759031e7b1f3932316a012,"DERBY-6000: Rename DatabaseMetaData.getMaxLogicalLOBSize() to getMaxLogicalLobSize().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1443712 13f79535-47bb-0310-9956-ffa450edef68"
1b89987acc71f044230e44b21adcf2105bc80f2a,"DERBY-5977; Run storemore and possibly other store .sql tests in junit harness using ScriptTest mechanism
  Committing patch DERBY-5977_2, which:
  - adds the StoreScriptsTest, and adds it to store._Suite
  - modifies the .sql scripts run in it to have fully qualified resources
  - modifies the canons affected to adjust for running them through the 
    ScriptTest mechanism
  - removes the now unused properties files
  - removes the .sql scripts run this way from derbyall's storemore suite.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1443812 13f79535-47bb-0310-9956-ffa450edef68"
d8912cc4bb3a310e2077633362b48687f096ec63,"Added build-classes target to netbeans project (""ant all"").

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1443847 13f79535-47bb-0310-9956-ffa450edef68"
1ed2c9984c48870c8a111712fa7e0488337adef9,"DERBY-6065: LockTable API link in the documentation is broken

Fix to javadoc for java/engine/org/apache/derby/diag/StatementCache.java.

Patch: DERBY-6065-code.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1444154 13f79535-47bb-0310-9956-ffa450edef68"
fc9b418d86b26971132218b15c6ce093d063dbec,"DERBY-6000: Add support for new JDBC 4.2 methods in ResultSet.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1444210 13f79535-47bb-0310-9956-ffa450edef68"
9206d5b23e712140f0efd733d5b640c9e1f5f319,"DERBY-6000: Add new CallableStatement.registerOutParameter() overloads introduced by JDBC 4.2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1444960 13f79535-47bb-0310-9956-ffa450edef68"
394efd9876432796a50291436adee8a2dd031074,"DERBY-6045 (in list multi-probe by primary key not chosen on tables with >256 rows)

Adding a junit test but it will not run since the the fixture name is not starting with ""test""... We should remove the x in front of test fixture's name once DERBY-6045 has been fixed



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1445030 13f79535-47bb-0310-9956-ffa450edef68"
875585e1e2bcc2a920d8389f995810e6ed1dd79c,"DERBY-6000: Fix javadoc on Java 7.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1445196 13f79535-47bb-0310-9956-ffa450edef68"
c1ecc42c68cf3d0f8816805b9ec183bcf477b62b,"DERBY-6000: Exclude deliberately unimplemented CallableStatement.registerOutParameter() overloads from the checks performed by the UnsupportedVetter test on Java 8.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1445235 13f79535-47bb-0310-9956-ffa450edef68"
17efc1624e1ab53955c3a725f6892c2b632883ba,"DERBY-6000: Add new CallableStatement.setObject() overloads introduced by JDBC 4.2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1445327 13f79535-47bb-0310-9956-ffa450edef68"
ca48ab4958210d6aafac64f98e8568598b1d5347,"DERBY-6000: Fix javadoc build on Java 8.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1445393 13f79535-47bb-0310-9956-ffa450edef68"
969c4c05d0f2329a2180043998cf8f036eb823f6,"Set svn:eol-style to native.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1445557 13f79535-47bb-0310-9956-ffa450edef68"
ce930bc12da42ae56ba4db19df0a521212c690b3,"DERBY-6000: Make DatabaseMetaData.getMaxLogicalLobSize() return the value which means unknown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1445591 13f79535-47bb-0310-9956-ffa450edef68"
92d6084f382b61dc9f9cb828f28363b511a222d0,"DERBY-6071; trunk javadoc build fails with Javadoc failed: java.io.IOException: Cannot run program \bin\javadoc.exe"": CreateProcess error=206, The filename or extension is too long.
  adding useexternalfiles=true to the offending javadoc section


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1445994 13f79535-47bb-0310-9956-ffa450edef68"
d89ca1f75215efe3617f8695b274686505577516,"DERBY-6045 (in list multi-probe by primary key not chosen on tables with >256 rows)

Added a new test scenario where we add about 10K rows into a table with primary key and check if we are still using index scan for the queries being tested

Additionally, cleaned up the test a little bit.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1446048 13f79535-47bb-0310-9956-ffa450edef68"
7658caa6e49762feaf5b7d02a65c41356c1bd999,"DERBY-5977; Run storemore and possibly other store .sql tests in junit harness using ScriptTest mechanism. 
  Adding databaseProperties.sql to the scripts in StoreScriptsTest. 
  Also adding 2 additional test cases to databaseProperties.sql


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1446227 13f79535-47bb-0310-9956-ffa450edef68"
fef325352f1037751d142b21d4f0cd5eaa91f5cd,"DERBY-5949: Revert the hack around the Open JDK 8 bug which choked the generation of toursdb; the Open JDK bug has been fixed and the fix has propagated to the Open JDK repository which contains JDBC 4.2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1446255 13f79535-47bb-0310-9956-ffa450edef68"
38b200a310aedb5635b8802f1abdb4fb262607ee,"DERBY-6000: Fix NPE in embedded implemention of new ResultSet.updateObject() overloads added by JDBC 4.2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1446562 13f79535-47bb-0310-9956-ffa450edef68"
482878d48de294f4809eae11ce04b9036ead5e58,"DERBY-6072: Move lang/reopenScan.sql to LangScripts

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1446592 13f79535-47bb-0310-9956-ffa450edef68"
50b2112463d426539dfa00ae903a586a30b6aaed,"DERBY-6061  Upgrade language is inconsistent

Modified messages.xml, Italian messages, and test file.

Patch: DERBY-6061-code2.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1446656 13f79535-47bb-0310-9956-ffa450edef68"
314a6da01dbf0b1f5c7765b937d79a22fc4241d1,"DERBY-6073: Fix StatementPoolingTest bug by making test order deterministic.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1446675 13f79535-47bb-0310-9956-ffa450edef68"
2a51fce9951289e7e4e0708f097359819adadd27,"DERBY-6073: Adjust StatementPoolingTest to account for class names introduced by JDBC 4.2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1446698 13f79535-47bb-0310-9956-ffa450edef68"
10149326a15f3885fdbb6db1fb3746402f888cae,"DERBY-6061  Upgrade language is inconsistent

Modified Chinese messages files, using Dag's patch.

Patch: derby-6061-chinese.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1446728 13f79535-47bb-0310-9956-ffa450edef68"
1e0c703817c80db94ef46d9adaf1eeb5a54fea6b,"DERBY-6067: JaCoCo fails with missing permissions when writing results

Added a ""jacoco.active"" property, which will grant the required privileges to
JaCoCo (or more specifically, all code bases) when set to the empty string ("""").
Enabled logic to disable the security manager when spawning processes and at
the same time obtaining code coverage with JaCoCo.
Added comment in build.xml, explaining what derby.tests.jacoco.agent is for.

Patch file: derby-6067-1b-fix_privileges.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1447388 13f79535-47bb-0310-9956-ffa450edef68"
4a515d83fad108b08b95df7efe7597eac1558b5c,"DERBY-6073: Test ordering instability in StatementPoolingTest

ConnectionPoolDataSourceConnector should enable statement pooling
also if the database doesn't already exist.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1447667 13f79535-47bb-0310-9956-ffa450edef68"
c2fe2805b35932f5f2d66c015f20c5ffbfb69354,"DERBY-5752: LOBStreamControl should materialize less aggressively

Only materialize LOBs that are smaller than 32 KB in memory.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1447722 13f79535-47bb-0310-9956-ffa450edef68"
841c8990e1ffecaeb1770e6111f0f57e09879c01,"DERBY-5546 ResultSet#updateBigDecimal on a REAL column does not do underflow checking 

Patch derby-5546-2. For both Real and Double, check for underflow. For
Double underflow is currently detected but only because we didn't fix
DERBY-3398 yet, so we introduce the same check now as for Real.  Once
DERBY-3398 it will no longer be redundant. The tests are still guarded
by a check for embedded until DERBY-5534 is fixed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1447996 13f79535-47bb-0310-9956-ffa450edef68"
c0a5ce180fe1f888a31d4e0955db0847fd6c7eef,"DERBY-3398 Support min/max values for Java types float/double in real/double columns

Patch derby-3398-8.

Removes the legacy DB limits on floating point numbers.

This lets the application use Derby for all Java float and double
values with the exception of NaN (not a number), -0.0 (normalized to
+0.0) and +/- infinity as defined in the IEEE-754 1985 floating-point
standard.

After this change, on soft upgrade, instead of throwing on the DB2
limits when calling ResultSet#updateXXX or PreparedStatement#setXXX,
the check throws on ResultSet#updateRow, or #insertRow, and similarly
on PreparedStatement#execute.

Upgrade tests test this behavior. But don't run floating ResultSet#updateXXX on old
releases prior to 10.2 (they don't support forward updatable result
sets).

The patch also fixes max display width for real and double numbers
since some values's printed representation were truncated by ij (even
before the DB2 limits change). This accounts for the all the canons
changes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448002 13f79535-47bb-0310-9956-ffa450edef68"
4d09732dd2c06f0913a0e66e193216e091453eca,"DERBY-6017: IN lists with mixed types may return wrong results

Cast the left operand to the dominant type if it isn't already of
that type. This ensures the dominant type is always used in all the
comparison operations when evaluating an IN predicate.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448025 13f79535-47bb-0310-9956-ffa450edef68"
c0a807c0e14c958aa3653bd341deed228b610bc2,"DERBY-6075: Use modern collections in impl/sql/compile

Make CollectNodesVisitor return a List instead of a Vector.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448064 13f79535-47bb-0310-9956-ffa450edef68"
f33fbafeb66f5e908ab069736ccd6be855165887,"DERBY-6075: Use modern collections in impl/sql/compile

Change the signatures of

  - ValueNode.bindExpression(FromList, SubqueryList, Vector)
  - ValueNode.bindExpression(FromList, SubqueryList, Vector, boolean)
  - JavaValueNode.bindExpression(FromList, SubqueryList, Vector)
  - all overrides of the above methods

to use java.util.List instead of java.util.Vector.

The actual arguments passed to said methods are still of type
java.util.Vector.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448065 13f79535-47bb-0310-9956-ffa450edef68"
e25c098c0cf4415bbd2e4baba370b27ae240994b,"DERBY-6081: JDBC 4.2 setObject() and updateObject() methods throw NPE when type is null

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448278 13f79535-47bb-0310-9956-ffa450edef68"
305a23d4e51661c56c1ae3eae081efe834dd0b9b,"DERBY-6079: 100's of errors in nightly test run on weme after jacoco property/priviledges checkin

Propagate jacoco.active on weme6.2 (1a).
Always set jacoco.active and emma.active on weme6.2 (2a).

Patch file: derby-6079-1a-propagate_jacocoactive_j9.diff, derby-6079-2a-set_props_j9.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448280 13f79535-47bb-0310-9956-ffa450edef68"
9cfe785d0bfcbe0c28c1031380ef3207023a6317,"DERBY-6078: Propagate a set of properties to the junit tasks in build.xml

Command line properties are now propagated to the JUnit tasks in build.xml.
Added to be able to specify properties controlling Derby or test behavior
when invoking ant (i.e. ant -Dderby.tests.trace=true junit-all).

Patch file: derby-6078-1a-cmdline_property_passing.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448359 13f79535-47bb-0310-9956-ffa450edef68"
2054f14589be2dc4c5f3394eafe318b1644c613b,"DERBY-6075: Use modern collections in impl/sql/compile

Fix javadoc warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448421 13f79535-47bb-0310-9956-ffa450edef68"
e1e0b16e22c4028b49366e2f108054aaf2a2b5c0,"Introducing temporary JavaDoc error to test Hudson error/warning reporting.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448434 13f79535-47bb-0310-9956-ffa450edef68"
5bf45ca2379d7e8e0165c325ea5f77e504ff0c65,"DERBY-6085: Improve error reporting when server port is unavailable

Added port and host to error message.

Patch file: derby-6085-1a-port_host_errmsg.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448441 13f79535-47bb-0310-9956-ffa450edef68"
5899871ea47b91c2ce4ce9862ec2a906f80c69aa,"DERBY-5679

just an improved comment.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448457 13f79535-47bb-0310-9956-ffa450edef68"
003b97517e76d5943aa414b53c751994ca966a35,"Backed out temporary JavaDoc error.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448520 13f79535-47bb-0310-9956-ffa450edef68"
80e4af5c0cf39a49170932e75e55eae18dae780a,"DERBY-3398: Fixed JavaDoc tag typo.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448521 13f79535-47bb-0310-9956-ffa450edef68"
987a1584b0044375f2a678c98ab5ba9317d63523,"DERBY-3398 Support min/max values for Java types float/double in real/double columns

Fix two missing commas that broke test upgrade tests after a clerical change.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448532 13f79535-47bb-0310-9956-ffa450edef68"
df4030f7dd2bbbda460dca04bf0ca7348ae63eef,"DERBY-6078: Removed a debug line that sneaked into the fix.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448667 13f79535-47bb-0310-9956-ffa450edef68"
c5cb6340f1fa920c25af817438011cb88b907003,"DERBY-3398; Support min/max values for Java types float/double in real/double columns
  updating j9 canon to match master for iepnegative_ES test


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448865 13f79535-47bb-0310-9956-ffa450edef68"
cf2526ea5e3a0c8110b327c160749e9852bbea79,"DERBY-6012: Print thread dump and dump javacore if NetworkServerTestSetup has to kill off the Network Server start up process due to timeout

Incremental improvement for error reporting in the case of timeouts.

Patch file: derby-6012-1a-error_reporting.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448941 13f79535-47bb-0310-9956-ffa450edef68"
b6af70a4053353c2f536d4191b67adb3739c89a2,"DERBY-6086: Factor out logic for creating custom connection in jdbcapi.StatementPoolingTest

Factored out logic for creating logical connections with statement caching into
a separate inner helper class. Used when you need to get more than one logical
connection from a single pooled connection.

Patch file: derby-6086-1b-logical_con_boilerplate.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1448956 13f79535-47bb-0310-9956-ffa450edef68"
38b597972601b7b89d0841a1b8af1fd9aa860b7c,"DERBY-6075: Use modern collections in impl/sql/compile

Change signatures of

  CompilerContext.setParameterList(Vector)
  CompilerContext.getParameterList()
  ResultColumnList.bindExpressions(FromList, SubqueryList, Vector)

to use List instead of Vector.

Also change overrides of those methods, as well as signatures of
local variables, fields and methods used by those methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1449020 13f79535-47bb-0310-9956-ffa450edef68"
23cf182504855cd40fac0786d361d35147434ab0,"DERBY-6087 Can't build Javadoc with JDK 1.8 if explicit j15lib, j16lib and j17lib paths are set

Simple fix which make the javadoc build use java18compile.classpath.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1449437 13f79535-47bb-0310-9956-ffa450edef68"
9f0c37aef1916a60ac622bf6d3604abe894b4d3f,"DERBY_6089: Make client behave more like embedded when invoking the new registerOutParameter overloads added to CallableStatement by JDBC 4.2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1450168 13f79535-47bb-0310-9956-ffa450edef68"
aa474ad0af9f500cad0c31ec6455fc5a8f25a893,"DERBY-6045 (in list multi-probe by primary key not chosen on tables with >256 rows)

Adding another junit test which has following 2 test cases(the test is named such that it won't get run for now until we understand the impact of the 2nd unique index on the selection of table scan vs index scan for 10K rows)
    //  1)If we insert 10K rows to an empty table with primary key on column
    //    being used in the where clause, we use index scan for the queries
    //    being tested
    //  2)To the table above, if we add another unique index on 2 columns 
    //    which are being used in the select clause, we stop using index scan
    //    for SELECT queries with IN and OR clause on the primary key



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1450363 13f79535-47bb-0310-9956-ffa450edef68"
01c7f8356c2c8dfc2a42a52f65fa2715b59662cb,"DERBY-6000: Fix misc issues raised by JDBC 4.2 buddy testing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1450422 13f79535-47bb-0310-9956-ffa450edef68"
45a820416dbfad9bbdf7918dba7388ae86a00bc7,"DERBY-6066(Client should use a prepared statement rather than regular statement for Connection.getTransactionIsolation)

This commit has the client user a PreparedStatement rather than a Statement to get the current isolation level. 
Additionally, we found while working on this issue, that the calls to get isolation level were not always getting sent to the server side. The research on this found following

The get transaction isolation call will be sent to the server on the wire in at least following 2 cases
1)When a newer client is working with the older versions of servers(ie server that do not have support for isolation level caching) - Server version 10.3 and earlier do not support isolation level caching and hence when a newer client(10.4 and higher) is talking to a 10.3 and earlier server, there will be no information available about the current isolation level on the client side and client will ask for the isolation level from the server by sending ""VALUES CURRENT ISOLATION"" over the wire. 
  For server versions 10.4 and above, there is a possibility that the current isolation level was already piggybacked to the client as part of some other client server communication and hence the current isolation level is already available to the client and there is no need to send ""VALUES CURRENT ISOLATION"" over the wire to the server.
2)Additionally, as per DERBY-4314 and write up on piggybacking at http://wiki.apache.org/db-derby/Derby3192Writeup, there might be cases, where even though server has support for isolation level caching, server has not had a chance to send the isolation level piggybacked to the client as part of some other communication between client and server and hence the client will actually need to send ""VALUES CURRENT ISOLATION"" to the server to get the current isolation level.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1450499 13f79535-47bb-0310-9956-ffa450edef68"
390011462b2ed32276ed88e416cb4db67f713f9c,"DERBY-6017: IN lists with mixed types may return wrong results

Make the test check numeric values rather than the string
representation of the values. This should make the test less likely
to fail if the string representation of floating point numbers is
different on a platform.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1450695 13f79535-47bb-0310-9956-ffa450edef68"
1149dc1dfb8e25f6d950e3097a980cb96e122134,"DERBY-6000: Add negative tests for the new JDBC 4.2 overloads of ResultSet.updateObject.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1450776 13f79535-47bb-0310-9956-ffa450edef68"
c7000cb792440a317184a4187542d272709bb1d4,"DERBY-6075: Use modern collections in impl/sql/compile

- Use ArrayList instead of Vector in ColumnOrdering and RowOrderingImpl

- Use ReuseFactory to allocate Integer instances for table number and
  column number

- Use library methods List.contains() and List.isEmpty()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1451125 13f79535-47bb-0310-9956-ffa450edef68"
e18b37101c420b6b3c129a78c1053aed7ce8e18b,"DERBY-5977; Run storemore and possibly other store .sql tests in junit harness using ScriptTest mechanism
  moving st_b5772 and st_derby1189 from the storetests directory to the store
  directory so they can run in the StoreScriptsTest. Removing st_1.sql as its
  functionality is tested elsewhere.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1451262 13f79535-47bb-0310-9956-ffa450edef68"
89166547574d29d314e9275fe1b121946fe123b5,"DERBY-6045 (in list multi-probe by primary key not chosen on tables with >256 rows)

Splitting a junit fixture into two so that we have different tests for table with just primary key and table with primary and unique key. Additionally, got rid of the extra column in the table which is not part of any index to keep things simple and is not impacting the behavior of the queries in question.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1451683 13f79535-47bb-0310-9956-ffa450edef68"
5d9ef3f01f3f0f6f93711ccf23648065140922e6,"DERBY-6075: Use modern collections in impl/sql/compile

Replace use of java.util.Vector with java.util.ArrayList in
DMLModStatementNode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1452350 13f79535-47bb-0310-9956-ffa450edef68"
b1a7fdacc8cfb4afbcb1f1cc62bf7cb49310eadc,"DERBY-6097: Management test suite fails when JMX is not supported

Skip the management tests if JMX is not supported.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1453179 13f79535-47bb-0310-9956-ffa450edef68"
47d4a4c195b07fcf18eae0af91a541d6e9240437,"DERBY-6075: Use modern collections in impl/sql/compile

Replace use of Vector in method signatures and field declarations
with List. The actual instances are still Vectors.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1453240 13f79535-47bb-0310-9956-ffa450edef68"
234a2b69bcd3d3ae90bb4383b77876814eec6d69,"DERBY-6075: Use modern collections in impl/sql/compile

Replace Hashtables used for duplicate checking with HashSets.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1453745 13f79535-47bb-0310-9956-ffa450edef68"
4131bd79f4a0992244c4e34abcec9e85648b1b07,"DERBY-6098: Skip compatibility testing of old servers on compact profile 2

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1453748 13f79535-47bb-0310-9956-ffa450edef68"
9a818929a6f32b3326425cfd2a7d91aed55937dc,"DERBY-6100: Upgrade tests fail on compact2

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1453856 13f79535-47bb-0310-9956-ffa450edef68"
3541af3cb3051bfc3d63fa090ec29e764c867c40,"DERBY-6075: Use modern collections in impl/sql/compile

Replace Hashtable fields with HashSets.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1454296 13f79535-47bb-0310-9956-ffa450edef68"
5b9c3b7028b0334e1dba8d7c11a0e5805b2e2759,"Add the generated source folder to the NetBeans project.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1454358 13f79535-47bb-0310-9956-ffa450edef68"
c57876e39914ebb70d685abcf0f4a9185014669a,"DERBY-6022: Add an optional tool for turning on optimizer tracing and dumping the trace to the console.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1454537 13f79535-47bb-0310-9956-ffa450edef68"
25c1e7bc3b1d8801b2410e0fda41b541c23a5637,"DERBY-6094: Enforce login timeouts in the embedded driver and data sources.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1454600 13f79535-47bb-0310-9956-ffa450edef68"
43fdf4505306f282aacb8d14ea9c516de2c5ea6e,"DERBY-6075: Use modern collections in impl/sql/compile

Use ArrayLists for the aggregate vectors.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455045 13f79535-47bb-0310-9956-ffa450edef68"
2520683380309fb71eb72e8ae10ab6370c5044b6,"DERBY-6094: Create the database before running login timeout tests, in order to prevent slow database creation from killing the LoginTimeoutTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455156 13f79535-47bb-0310-9956-ffa450edef68"
d5beee79b6d55e9f6bdc1d0fc35c1c221cfe2927,"DERBY-6094: Make login timeouts recover from interrupts and retry.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455230 13f79535-47bb-0310-9956-ffa450edef68"
f63235de59acad7acb1a0e77d4b5e22505f0b794,"DERBY-6094: Further cleanup of LoginTimeoutTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455238 13f79535-47bb-0310-9956-ffa450edef68"
64635d6896553993a9b548599ec3bf03389f49eb,"DERBY-6104: Publish first rev of 10.10.1 release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455291 13f79535-47bb-0310-9956-ffa450edef68"
bb2c3118d3699efe7f5e449498b69497caab9cc3,"DERBY-6104: Correct some typos in the release notes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455509 13f79535-47bb-0310-9956-ffa450edef68"
1c6c2e8318851afcd6bbaca2b2b3fb261fe32f4b,"DERBY-6075: Use modern collections in impl/sql/compile

Replace remaining Vectors with ArrayLists.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455518 13f79535-47bb-0310-9956-ffa450edef68"
98d628e878cd7724f20ad2b62335daf42d4a4283,"DERBY-6075: Use modern collections in impl/sql/compile

Remove use of java.util.Stack.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455523 13f79535-47bb-0310-9956-ffa450edef68"
4c2fc4ab4ad58001bcd18e39152b0212a53721f7,"DERBY-6089: Make old overloads of CallableStatement.registerOutParameter raise a SQLFeatureNotSupportedException when illegal types are used.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455602 13f79535-47bb-0310-9956-ffa450edef68"
402f3c2b7be9cecdf142cc831b89a1f70fc71942,"DERBY-6075: Use modern collections in impl/sql/compile

Remove some unnecessary use of java.util.Properties. Mostly unused
imports, but also some unused parameters.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455902 13f79535-47bb-0310-9956-ffa450edef68"
c8b3cc28f19332d093fbfacfb9a3d129adf23577,"DERBY-6075: Add negative test for unsupported syntax

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1455992 13f79535-47bb-0310-9956-ffa450edef68"
fd6aa02034d422e5fe97388fad8216e01459c1df,"DERBY-6089 CallableStatement#registerOutParameter on client lacks check of legal types.
  updating the j9_foundation canon similarly to the master to reflect the modified message. 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456075 13f79535-47bb-0310-9956-ffa450edef68"
6964bdc5df6ba26644cd80a5637915ee065d52ae,"DERBY-6108: Fix NPE in small device tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456111 13f79535-47bb-0310-9956-ffa450edef68"
fa87f1c03efeb780fa4ccfdc650ed79ecfc3d3f4,"DERBY-5632: Logical deadlock happened when freezing/unfreezing the database

Stop using explicit synchronization on the conglomerate cache.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456352 13f79535-47bb-0310-9956-ffa450edef68"
b1f3176d1175ce355d1e7fee9c18c421dded1422,"DERBY-6075: Use modern collections in impl/sql/compile

- Remove dead code for old syntax that allowed declaring columns as
  nullable explicitly.

- Remove unneeded imports.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456369 13f79535-47bb-0310-9956-ffa450edef68"
7222c329bb1c429eb3192159bcb4d7ebb90b7f60,"DERBY-6075: Use modern collections in impl/sql/compile

Replace the remaining Vectors in sqlgrammar.jj with ArrayLists.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456370 13f79535-47bb-0310-9956-ffa450edef68"
f96fbeb240c14c95300115692104f165f515a881,"DERBY-6022: Add filename argument to the optional tool which turns off optimizer tracing, so that the trace can be dumped to a file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456579 13f79535-47bb-0310-9956-ffa450edef68"
5ace06ec0310e4875c975f119885524cd2d08ac7,"[RELEASE CHECKIN] Re-ordering some lines in STATUS.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456936 13f79535-47bb-0310-9956-ffa450edef68"
885c3385df1ad43b8cd1c83063a0dc92020f4814,"DERBY-5461: Make release build fail if it encounters an error while trying to check in a file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456937 13f79535-47bb-0310-9956-ffa450edef68"
d932c90dea9dded8a6e6f2c190098bad74723dc8,"DERBY-5460: Add local.properties to the list of files which ant ignores, so that the presence of this file won't choke the release build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456949 13f79535-47bb-0310-9956-ffa450edef68"
364fef1d429e8baae107c90368a340f5132c860e,"DERBY-6104: Check in third draft of release notes for 10.10.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1456972 13f79535-47bb-0310-9956-ffa450edef68"
fd18ba77df5d44527ee8f6c1bfdd3db8d75b9a04,"[RELEASE CHECKIN] Derby release ID set to: 10.10.1.0

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1457013 13f79535-47bb-0310-9956-ffa450edef68"
066820dd72272234da4a5fed8848dbcd1ae92f25,"[RELEASE CHECKIN] Check in NOTICE as part of building a release.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1457014 13f79535-47bb-0310-9956-ffa450edef68"
3ebb51420d47fa34bd1e6b1f53326f6034565005,"[RELEASE CHECKIN] Derby release ID set to: 10.10.1.1

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1457018 13f79535-47bb-0310-9956-ffa450edef68"
97db214ee0e971e1b92fcd430c5d212f37354a96,"DERBY-6104: Revert trunk release id to 10.10.0.0 after dry-run of release building scripts.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1457023 13f79535-47bb-0310-9956-ffa450edef68"
72fde17184631037b7d35c3af0db31f5337dc039,"DERBY-6104: First attempt to get the createBranch target to understand the current revision number.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1457735 13f79535-47bb-0310-9956-ffa450edef68"
94b316d381af0abc70442d39d56c976796db5406,"DERBY-6104: Bump the release id on the trunk to 10.11.0.0 beta.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1457771 13f79535-47bb-0310-9956-ffa450edef68"
ab65c1af5f56b1c465c797cae1cb1d25d0fe9dff,"DERBY-6104: Cleanup source distributions by removing the jirasoap cruft left behind by release notes generation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1457942 13f79535-47bb-0310-9956-ffa450edef68"
caa2d7c1460ef20e6ef91c6efae873798e4c284a,"DERBY-6104: Remove more references to J2SE 1.4.2 from the public api and the top level index.html.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1458256 13f79535-47bb-0310-9956-ffa450edef68"
4289b55c99bc2c32e9b1466f515b3e33a8264255,"DERBY-6090 Package javadoc publishedapi/jdbc4/index.html

Committed patch but also merging in Rick's changes in
http://svn.apache.org/viewvc?view=revision&revision=r1458262 and
adding a paragraph as suggested by Knut.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1458647 13f79535-47bb-0310-9956-ffa450edef68"
09c26978ccc38d96c534583c78c7ad40b9b2592d,"DERBY-6075: Use modern collections in impl/sql/compile

Rename variables from aggregateVector to aggregates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1459276 13f79535-47bb-0310-9956-ffa450edef68"
ed01e3c6afedd129ea78491cfbf2d4bec8699cba,"DERBY-672: Make a helper class serializable so that the test class ModeAggregate can be used for tests of grouped aggregates with many groups.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1459784 13f79535-47bb-0310-9956-ffa450edef68"
0e07b2e922474440854e4d500c075daca04a3f6f,"DERBY-672: Improve the javadoc for the merge method of Aggregator so that implementors can figure out how to test their code.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1459837 13f79535-47bb-0310-9956-ffa450edef68"
e316d23f257e8e91b371c2dfbaf0c22794f53a57,"DERBY-6124: Add serialVersionUID to Price UDT.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1460743 13f79535-47bb-0310-9956-ffa450edef68"
508f8f6cf73cff347f9aeaf2ed5c76964e922d3f,"DERBY-6125 Code clean up in client driver

Patch 2derby-6125-01-b; removes dead code and refactors a mutable
public static.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1460949 13f79535-47bb-0310-9956-ffa450edef68"
b73b0457c876376bff211e3d4ab26e7fbd95dcaa,"DERBY-3838; Convert derbynet/DerbyNetAutoStart to JUnit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1461415 13f79535-47bb-0310-9956-ffa450edef68"
9fd9272eb990835a9d30b100a36c538d1037903b,"DERBY-6125 Code clean up in client driver.

Patch derby-6125-02-a. Removes the always false public static
Configuration#traceSuspended__ and its uses. It also removes a couple
of unused methods.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1462394 13f79535-47bb-0310-9956-ffa450edef68"
49be70bcc98a7265bd64f89c8a85de8729f2eda0,"DERBY-6125 Code clean up in client driver.

    Patch derby-6125-03-a. This patch

    - makes a mutable public array (dncPackageConsistencyToken) private.
    - removes a couple of assignment with values that are never used (e.g. myPVH)
    - makes some members final and public
    - reworks an invariant to use SanityManager assert
    - replaces a StringBuffer with StringBuilder
    - makes a lazy initialization thread safe (codePointNameTable__)
    - removes a couple of noop bit operations
    - removes an unused method (computeDncLogWriter with existing connection overload)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1463079 13f79535-47bb-0310-9956-ffa450edef68"
43fb59eefadbb6a87ad96fa09d06fb2f01134c93,"DERBY-6125 Code clean up in client driver

Patch derby-6125-04-a. Patch details:

- removed unused var Configuration.traceFileSuffixIndex__,
  #enableConnectivityToTargetServer__, #jvmSupportsMicrosClock

- made #dncCompatibleJREVersions private, added ""1.8"" as a legal JRE,
  and added accessor getDncCompatibleJREVersions

- made NetConnection#msgutil final

- removed unused var targetExtnam_

- made #indoubtTransactions_ private and changed to genericized
  HashMap, I believe this is multi thread safe, being used within a XA
  connection. Added accessors #getIndoubtTransaction and
  #getIndoubtTransactionIds

- made some methods final (e.g. #completeConnect, #flowConnect,
  #flowSimpleConnect, #isConnectionNull)

- removed unused extnam

- reduced some variable's scopes to silence FindBugs.

- made #targetPublicKey_ private, changed accessor #getTargetPublicKey
  to copy the the mutable array's contents

- removed instances of useless code of this shape:
      :
      if (!isXAConnection_)
           return;
      if (isOpen()) { // <--- has no side effects
           return; // still open, return
      }
  } <---- we return here anyway...

- removed unused vars NetConnectionReply#srvdgnReceived, #srvdgn

- replaced StringBuffer with StringBuilder in
  NetConnectionReply#doMgrlvlrmSemantics

- removed unused var NetXAResource#numXid

- removed unused var ClientBaseDataSourceRoot#globaltraceFileSuffixIndex

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1463080 13f79535-47bb-0310-9956-ffa450edef68"
35d6997095897464dc1057c5c1dbf6305a8b3f9a,"DERBY-6045 (in list multi-probe by primary key not chosen on tables with >256 rows)

Changes for DERBY-3790 (Investigate if request for update statistics can be skipped for certain kind of indexes, one instance may be unique indexes based on one column.) caused Derby to use table scan rather than index scan since we do not generate stats for single column unique index. As part of that change, we forgot to make code changes in optimizer to compensate for missing stats for such indexes. As found in DERBY-6045 (in list multi-probe by primary key not chosen on tables with >256 rows), even though we do not keep the statistics for single-column unique indexes, we should improve the selectivity of such an index when the index is being considered by the optimizer.

Making the relevant code changes now allows us to enable the tests in InListMultiProbeTest.java since they will now run correctly by picking up index scan rather than table scan.

Additionally, one test in refActions1.sql does not have order by to it and there are only 3 rows in the table. Without the changes for DERBY-6045 we were using index scan for it but now it uses table scan which is giving the rows in different order. I have added order by to the query so plan selection does not change order of the rows. The reason behind table scan might be that with only 3 rows in the table, it is cheaper to do table sccan rather than index scan. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1463378 13f79535-47bb-0310-9956-ffa450edef68"
00db860ec67146d2559c2cfb8e4349137932a128,"DERBY-6133 simple array index typo 

Patch 6133.txt contributed by Dave Brosius (dbrosius at mebigfatguy
dot com).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1463379 13f79535-47bb-0310-9956-ffa450edef68"
bd2bc2bb09fdcc7d086c97104b76094e35ab94f4,"DERBY-6138 org.apache.derbyTesting.functionTests.tests.store.ClassLoaderBootTest fails with sealing violation: package org.apache.derby.iapi.services.sanity is sealed depending on classpath order

Correct import to use shared SanityManager


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1463757 13f79535-47bb-0310-9956-ffa450edef68"
6e591dc9cf43f1816b1532195570d100c535c4e8,"DERBY-5172: testTimeAndDateWithCalendar (jdbcapi.CallableTest) fails intermittently with AssertionFailedError: hour expected: differs from actual.

Make the test convert between timezones via the local timezone, like
Derby does when passing a timestamp through a stored procedure.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1463874 13f79535-47bb-0310-9956-ffa450edef68"
90645152c8f1afee0e9c506285c4712f4d433bc5,"DERBY-6000: Fix UnsupportedVetter failures when 10.9 jars run on Java 8.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1464103 13f79535-47bb-0310-9956-ffa450edef68"
7f0f7751440bc8d28123d3ea9e93d8cce3095aa8,"DERBY-6096 OutOfMemoryError with Clob or Blob hash join: DataTypeDescriptor.estimatedMemoryUsage() has no case for BLOB or CLOB so would underestimate memory usage for those types at zero 

Estimate BLOB/CLOB size at 10000 like other long types.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1464247 13f79535-47bb-0310-9956-ffa450edef68"
7fc16c3fda6f3b77debd4f942c334f30beb12b26,"DERBY-6147: ClosedObjectTest fails on the 10.9 branch when running on Java 8

Skip testing of JDBC methods that have not been implemented.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1464367 13f79535-47bb-0310-9956-ffa450edef68"
5a557ed33cfa6b5d7c4d11cd753a7f313209486f,"Remove special handling of the abort() method in ClosedObjectTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1464369 13f79535-47bb-0310-9956-ffa450edef68"
33efbae6e9b5f0849965e7856d3751d22efb15b1,"DERBY-3519: junit regression test failure in testInertTime(org.apache.derbyTesting.functionTests.tests.lang.TimeHandlingTest)junit.framework.AssertionFailedError: expected:<2> but was:<3>

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1464386 13f79535-47bb-0310-9956-ffa450edef68"
90553c50632208d191ec3fd9f0dc23044ba02a77,"DERBY-6096: Only run gc if debug output has been requested

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1464470 13f79535-47bb-0310-9956-ffa450edef68"
232f5efcc70c6433ea3511099fde4dd8e8683369,"DERBY-6131 select from view with ""upper"" and ""in"" list throws a ClassCastException 

Prior to this fix the following query on a view would throw a ClassCastException
    select name from myView where upper(name) in ('AA', 'BB');
This query got in code that was trying to ""push"" predicates down, and
that code is only currently build to push constants and column references.
In this case it was mistakenly trying to push down the ""upper"" call, and
when it tried to cast it as a column reference it got the error.  The fix
was to check the type of the node and not push in this case.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1464594 13f79535-47bb-0310-9956-ffa450edef68"
68968aa7b668c388f1ebe217beedf8ecba0b70ad,"DERBY-6125 Code clean up in client driver.

Patch derby-6125-03-04-followup. Incorporates Knut's further
simplification suggestions for patches 03 and 04:

After the 04-a patch, these three methods in NetConnection do nothing except calling the method with the same name in the super class:

  - close()
  - closeX()
  - closeResources()

Removed, let NetConnection inherit them from its super class.

Make Connection.closeX() private and unsynchronized, as it will only
be called from Connection.close().

The patch also touches NetConnection's closeForReuse() method, which
doesn't have any callers. Removed.

Replaces System.arraycopy with Object.clone for byte array copies as
suggested.

NetConnection.completeConnect(): remove the override and make the
super method final instead.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1464835 13f79535-47bb-0310-9956-ffa450edef68"
fe1ac60a9fb28bec7474abea019106122889a761,"DERBY-6151: Preserve the SQLWarnings raised by table functions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1464934 13f79535-47bb-0310-9956-ffa450edef68"
c61e6e82a382d36f8f05ad41ff1daeaee0b2c0f3,"DERBY-6150 Add automatic cleanup of connections opened with openDefaultConnection() 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1465187 13f79535-47bb-0310-9956-ffa450edef68"
95049cfc37248d0187a8c7d8158938ea3143a5c7,"DERBY-6125 Code clean up in client driver.
Patch derby-6125-05-d; details:

** ClientXid

- reworked ClientXid#equals to find favor with FindBugs: now tests for null and wrong type.
  The old version would get classcastexception if a wrong type object was compared.

- made ClientXid#getData clone the result - it is a byte array

** Section

- clone bytes in Section#setPKGNAMCBytes to avoid having a package private variable
  wriable from outside the package (it's an array).

- make Section#getPKGNAMCBytes return a clone

** Sqlca

- removed unnecessary a priori allocation to Sqlca#sqlErrd_.

- made Sqlca#sqlWarn_ private

- changed #getSqlWarn to return String since all its uses need a String anyway.

- made Sqlca#getSqlErrd private

- simplified implementation of Sqlca#getSqlWarn

- made Sqlca#rowsetRowCount_ private

- made Sqlca#containsSqlcax_ private

- made Sqlca#sqlErrmcMessages_ private

- removed argument sqlErrpBytes from Sqlca#setContainsSqlcax (only called once; with null).

- removed argument sqlErrpBytes from Sqlca#resetRowsetSqlca  (only called with null).

- introduced Sqlca#getReturnValue in Statement#completeExecute instead
  of allowing access to sqlca.getSqlErrd()[0]

- removed unused Sqlca#sqlErrmcCcsid_

- introduced public String Sqlca#formatSqlErrd as replacement for
  direct access to Sqlca#sqlErrd_.

** NetSqlca

- made NetSqlca#setSqlwarnBytes package private

- made NetSqlca#setSqlerrmcBytes package private and removed its
  argument sqlErrmcCcsid

- made NetSqlca#setSqlerrd package private

- removed unnecessary test for BIG_ENDIAN in NetSqlca#getRowCount: the
  protocol always uses big endian (SignedBinary.BIG_ENDIAN = 1 is final).

- removed unnecessary type argument to NetSqlca#getRowCount now that endian test is no longer done

** Statement

- made Statement#materialStatement_ private; new accessors

** NetConnection

- removed unnecessary default NetConnection finalizer

- three methods in NetConnection do nothing except calling the method with the same name in the super class:

  - close()
  - closeX()
  - closeResources()

  Remove them and let NetConnection inherit them from its super class.

- Since we remove these methods from NetConnection, we also make
  Connection.closeX() private and unsynchronized, as it will only be
  called from Connection.close().

- NetConnection's closeForReuse() method doesn't have any callers;
  remove that one too.

- NetConnection.completeConnect() doesn't actually do anything except
  calling super.completeConnect(). Remove the override and make the
  super method final instead.

** NetXAConnection

- removed potentially harmful finalizer in NetXAConnection: it calls a
  finalizer for another class (NetConnection). FindBugs advice on this
  (quote):

  ""If a connected set of objects beings finalizable, then the VM will
  invoke the finalize method on all the finalizable object, possibly
  at the same time in different threads. Thus, it is a particularly
  bad idea, in the finalize method for a class X, invoke finalize on
  objects referenced by X, because they may already be getting
  finalized in a separate thread. ""

  It also neglected to call super.finalize()...

** Typdef

- made Typdef#FdocaSimpleDataArray private

- removed unused TypDef#getByteOrder

- made Typdef#environmentTables_ private

** SqlException

- made SqlException#SQLExceptionFactory package private (was protected)

** EncryptionManager

- removed unused methods EncryptionManager#setInitVector and #setSecKey

** NetXACallInfo

- removed unused NetXACallInfo#getCorrelatorToken

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1465193 13f79535-47bb-0310-9956-ffa450edef68"
b153b241b7dbf4de0e40262b8cc6c9e46be817e2,"DERBY-6075: Use modern collections in impl/sql/compile

Rename variables that have ""vector"" in their names and update
comments.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1465368 13f79535-47bb-0310-9956-ffa450edef68"
02876822cf3b0be7097db1b3c6530e05470e2fe1,"Fix javadoc warning.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1465369 13f79535-47bb-0310-9956-ffa450edef68"
fc86bf8c622a12bfe7e1c984fb3ce21dcd4ff8e4,"DERBY-6000: Suppress diagnostic in UnsupportedVetter unless debug printing is on.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1465600 13f79535-47bb-0310-9956-ffa450edef68"
4c0bf643bb716c5a6796d94eea48e80570fbcc4f,"DERBY-6045 (in list multi-probe by primary key not chosen on tables with >256 rows)

Adding tow more test fixtures(testDerby6045WithUpdateStatistics and testDerby6045WithoutUpdateStatistics). 
Difference between the two fixtures is testDerby6045WithUpdateStatistics issues an update statistics after inserting the required number of rows in the table, where as testDerby6045WithoutUpdateStatistics does not issue an update statisitcs.
The code for them looks as follows
1)Create a brand new table with a primary key
2)Add 10 rows/24 rows/10,000 rows.
3)One of the test fixture(testDerby6045WithUpdateStatistics) will issue an update statistics at this time
4)Run following 3 queries and make sure they all use index scan
	SELECT * FROM newTable WHERE TERM_ID = 11
	SELECT * FROM newTable WHERE (TERM_ID = 11) OR (TERM_ID =21) OR (TERM_ID = 31)
	SELECT * FROM newTable WHERE (TERM_ID IN (11, 21, 31))
5)Drop the table



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1465830 13f79535-47bb-0310-9956-ffa450edef68"
ee33904c48eb6a8f81a0a462682daabc11f7ce2d,"DERBY-6125 Code cleanup in client driver

Patch derby-6125-visibility-01-b; details

- limits visibility of many classes, methods and fields to what's
  necessary,

- adds final specification to ClobWriter#clob_ and

- removes ClientPooledConnection.getNetXAConnection by inlining its
  content in the one usage location.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1465956 13f79535-47bb-0310-9956-ffa450edef68"
2c5ca3b1464d7069ab9bfa96992651c42e03ea0f,"DERBY-6045 (in list multi-probe by primary key not chosen on tables with >256 rows)

These tests are similar to the ones added by revision 1465830 except that here we use parameters in the WHERE clause to pass the constants and check that we are still using index scan



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1466097 13f79535-47bb-0310-9956-ffa450edef68"
8ce125fba8993c2ef00faaaa8263e15a3b396439,"DERBY-6122 -  InterruptResilienceTest fails with: junit.framework.ComparisonFailure: Database shutdown expected:<[08006]> but was:<[XBDA0]> 

The core problem that led to this assert was that an attempt by the
test to shutdown the database timed out with:
Caused by: java.sql.SQLException: Login timeout exceeded. 

The test had set a 10 second timeout assuming that was large enough such that
no timeout would be encountered, but failed a few times in public IBM lab 
nightly regression runs.  Raising the number to 1000.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1466225 13f79535-47bb-0310-9956-ffa450edef68"
643af3da699a0f1505ade3e2232582d160a60e7f,"DERBY-6092: IOException when closing LOBFile at end of transaction

A bug in Java 5 may cause IOException if two threads attempt to
close the same RandomAccessFile at the same time.

Avoid this situation by removing the LOBFile from the list of open
files before closing it from LOBStreamControl's finalizer. Then the
cleanup code at the end of the transaction won't find the file and
try to close it if the finalizer is about to close it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1466362 13f79535-47bb-0310-9956-ffa450edef68"
fac3fe7b118b7f021471546faf970b07589752dd,"DERBY-6137: Don't clear the sequence cache during most DDL write operations.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1466481 13f79535-47bb-0310-9956-ffa450edef68"
ec69f5f301c0caee54512c9a0ce06753a132ddec,"DERBY-6161: Simplify code that handles LOB files

- remove EncryptedLOBFile.close() and let it inherit from super class

- move code that doesn't need privileges out of privileged block in
  LOBStreamControl.init()

- remove unnecessary exception handling in privileged block in
  LOBStreamControl.deleteFile()

- fix typos and misformatted @throws clauses in javadoc comments

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1466503 13f79535-47bb-0310-9956-ffa450edef68"
6395944fed56beb14219d0efc55307f0183160c2,"DERBY-6161: Simplify code that handles LOB files

Remove unused method in EngineConnection and BrokeredConnection,
and reduce the visibility of the method with the same name in
EmbedConnection.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1466504 13f79535-47bb-0310-9956-ffa450edef68"
31fad6a68e108c374ba4a8d4075f415357c70d4b,"DERBY-6162: Simplify privileged actions in NetworkServerControlApiTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1466508 13f79535-47bb-0310-9956-ffa450edef68"
2684c7723b3a98f20462cb5c4c2b1c7d14c81c25,"DERBY-6137: Cleanup cache manager usage by SYSCS_UTIL.SYSCS_PEEK_AT_SEQUENCE.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1466522 13f79535-47bb-0310-9956-ffa450edef68"
b32256d01a8e533c17d1ada5353d4d3aa4c951ac,"DERBY-6162: Simplify privileged actions in NetworkServerControlApiTest

Remove calls to deprecated method java.io.File.toURL().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1466914 13f79535-47bb-0310-9956-ffa450edef68"
afbc4ba9521372bfb1245c6d190f5136ec802f1d,"DERBY-6144 nightly regression test failure, intermittent error : testStatisticsCorrectness(org.apache.derbyTesting.functionTests.tests.store.AutomaticIndexStatisticsTest)junit.framework.A

test was asserting that stats had to be created after ""now"".  I think the
nightly was getting a case where the time was the same.  DERBY-5046 fixed
a different part to the same test to check for greater than now, so implemented
that same fix at the offending line.  Also added some text to be printed with
the variable values if it happens again.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1467011 13f79535-47bb-0310-9956-ffa450edef68"
266f0f00bb039071c8014e8ba70e1766f8e6560d,"DERBY-5866 (testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW)

In case of failure, this test only has information about the failing trigger. It will be good to also have a complete list of triggers in the order that they got fired. This will help figure out the intermittent test failure,

Some background information on the test
The failing test creates table T with primary key, unique key, check constraint. It creates another table TCHILD which has a foreign key reference to table T. Next, the test creates a random number of triggers on T. Triggers are one of the 12 types with various combinations of BEFORE/AFTER, INSERT/UPDATE/DELETE, ROW/STATEMENT. The trigger definition has a string associated with it which has a unique number and description of the type of trigger eg it might be '0,NO CASCADE BEFORE, DELETE, ROW', next might be '1,NO CASCADE AFTER,INSERT,STATEMENT' and so on and so forth. After the trigger creation, the test does various INSERTS/UPDATES/DELETES and for each case, it wants to test if the eligible triggers are fired in the order they were created. For instance a DELETE sql should cause all BEFORE DELETE ROW triggers to fire in the order they were created. And if the order of firing is not the order of creation, then we will run into an assertion failure error like ""matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW"". What I find interesting though is that all the failures mentioned in this jira are for triggers created at the very begnning. For instance, jira description has the failure ""matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW"" which means trigger number 1 got fired before I am assuming trigger number 0(provided trigger 0 is a NO CASCADE BEFORE DELETE ROW"".) Another failure reported in this jira is for ""0,NO CASCADE BEFORE,UPDATE,STATEMENT"" but there couldn't have been another trigger created before trigger 0. 




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1467170 13f79535-47bb-0310-9956-ffa450edef68"
3546404ba20c7181bc0e59558179da41b9ac3081,"DERBY-6163: Reduce visibility of methods in subclasses of PageBasicOperation

Make all abstract classes in the PageBasicOperation class hierarchy
package protected. Make all constructors in the class hieararchy
package protected, except the no-argument constructors as the
Formatable interface requires them to be public.

Also reduce visibility of the RawField class, which is only used by
StoredPage in the same package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1467197 13f79535-47bb-0310-9956-ffa450edef68"
373cf9d41b2c4744fc51c385980f63c8f552e7e0,"DERBY-6168: Clean up registered format ids

Removed the format ids for the run-time statistics classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1467200 13f79535-47bb-0310-9956-ffa450edef68"
ca6ed1764c149402787d151c9c957976da64b7d0,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

- Reduce visibility of some classes, fields and constructors under
  impl/sql/execute

- Expose InternalTriggerExecutionContext.getAutoincrementValue()
  through the interface so that callers don't have to cast the
  context to the internal implementation type

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1467201 13f79535-47bb-0310-9956-ffa450edef68"
d9b64a640c331bb964d7a33722dee972c40735e5,"DERBY-6176 (Couple failures in SequenceGeneratorTest suite on trunk(1466748) with weme 6.2.)
 Disabling the test for small devices.





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1467494 13f79535-47bb-0310-9956-ffa450edef68"
9b362a6406421c2228e8f062e06cb32a1e3b2749,"DERBY-6178 AutoloadTest does not proprogate original jvm -D flags to spawned JVM, leading to LAB regression test failures

This change disables the AutoloadTest when a non-default base port is
passed to the test run.  Currently the test does not work correctly
for multiple concurrent runs using different base ports.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1467664 13f79535-47bb-0310-9956-ffa450edef68"
a40bc130f678c899cf3c1eb1e3d3d481e1ae38b8,"DERBY-6179 Insert some guarding code into the first replication test to check port availability

Patch replscratch: checks the availability of the ports needed for the
replication test testReplication_Local_TestStraightReplication (the
first fixture) of the first test in the replication suite. This should
make it readily apparent in test log if there is such a
problem. Presently one needs to dig into the master or slaves' log
files to find that root cause.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1467722 13f79535-47bb-0310-9956-ffa450edef68"
b13b17c2ae2b4f2fc47b06be04d5be8aa7088928,"DERBY-6125 Code clean up in client driver.

derby-6125-imports-01-a. This ""horizontal"" patch makes the import
policy consistent for the client driver:

- iff a class from java.sql.* can be shadowed by a Derby class
  (i.e. Clob, ResultSet); we do not import such java.sql.* classes but
  refer to them using the full package and class name. The Derby
  classes are always imported and referenced in the short form. This
  makes the code much more readable IMHO.

- I'd like to change the names of the Derby classes that can shadow
  java.sql.* classes (so we can import such classes from java.sql.*
  too), but I need to investigate whether that can have any
  compatibility issues first. Does anyone know?

- removes unused public static variable ClientXid#MAXGTRIDSIZE

- removes a few unused initial values to silence NetBeans warnings

- removes unused Cursor#getUnicodeStream

Otherwise, the patch contains a few Javadoc improvements and typo
fixes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1467726 13f79535-47bb-0310-9956-ffa450edef68"
57465efaee83ee70e8fcf4b11992b5ab90fd1657,"DERBY-3177: Cleanup suspect coding practices in the types package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468143 13f79535-47bb-0310-9956-ffa450edef68"
d22ef84806a59b4322f3efd891c1e6a8f1fbb0cc,"just adding to a test comment.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468167 13f79535-47bb-0310-9956-ffa450edef68"
9c18af12a7e63821fc7804806b119ec4952d229f,"DERBY-6182: Shore up the encapsulation of StandardException.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468225 13f79535-47bb-0310-9956-ffa450edef68"
0e593fafa3545ef918eaa32b03a69040382df115,"DERBY-6154 add non-order by cases to the BlobClob4BlobTest

While debugging DERBY-6092 it was noted that some other code
paths could be exercised by adding non order by queries to 
one of the test cases.  This change just reruns one of the
test cases with order by queries and then again with non-order by 
queries.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468229 13f79535-47bb-0310-9956-ffa450edef68"
1958f1bb25a290ac215929f67654be1d1ecd3b60,"DERBY-6154

backing out change #1468229.  test worked when run standalone but changes
did not work when test was run as full suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468307 13f79535-47bb-0310-9956-ffa450edef68"
28f9484370226d9356bd4f604d14242d4aed7d9c,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

Changes under impl/sql/compile:

- Reduce visibility of some classes, fields and methods

- Remove some unused methods (including one actually used setter
  method where the field it sets is unused)

- Make last parameter of UnaryOperatorNode.init() a scalar rather
  than an array, since it's always a single value

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468317 13f79535-47bb-0310-9956-ffa450edef68"
bf5ef968d709f1f73e921870710cb563257411a3,"DERBY-6104: Add 10.10.1.1 to the table of starting points for the upgrade tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468554 13f79535-47bb-0310-9956-ffa450edef68"
c945009c8b6df542bb17cc870dbe8a41fe7d2367,"DERBY-6104: Update STATUS file to reflect the release of 10.10.1.1.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468560 13f79535-47bb-0310-9956-ffa450edef68"
2e1e5099335ebe2d98e521e56bd5d810159dac18,"DERBY-6157; text for message XSLA4 might encouraging people to delete part of the transaction log.
  replacing the message in English with a more elaborate one.
  adding translations to de_DE, fr, es and it, removing from all other translated files so
  the English message will pop up.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468647 13f79535-47bb-0310-9956-ffa450edef68"
ca9270d853ba715f0e13a58469d86373364784a7,"DERBY-6154 add non-order by cases to the BlobClob4BlobTest

While debugging DERBY-6092 it was noted that some other code
paths could be exercised by adding non order by queries to
one of the test cases. This change just reruns one of the
test cases with order by queries and then again with non-order by
queries.

This change adds non-order by test runs based on the 
testTriggersWithClobColumn() test case.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1468661 13f79535-47bb-0310-9956-ffa450edef68"
8f1a708d1a756aa39e3d5bddaa5712ecc196fe17,"DERBY-6154 add non-order by cases to the BlobClob4BlobTest

While debugging DERBY-6092 it was noted that some other code
paths could be exercised by adding non order by queries to
one of the test cases. This change just reruns one of the
test cases with order by queries and then again with non-order by
queries.

This change adds non-order by test runs based on the
testPositionAgressive() test case.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469000 13f79535-47bb-0310-9956-ffa450edef68"
961107869350184ab4a518eefa12fe29006719af,"DERBY-6179  Insert some guarding code into the first replication test to check port availability

Add simplification suggested ny Knut; no functional change.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469165 13f79535-47bb-0310-9956-ffa450edef68"
217bf8a087837f6d88c9f77a7def596b9251c763,"DERBY-6128 Examine Derby classes to determine if we need to add serialVersionUID to any of them 

Patch derby-6128-ecpds40.diff. 

Added comment to EmbeddedConnectionPoolDataSource40:

// This explicit UID was missing for releases 10.10.1.1 and lower.
// The default changed between 10.7 and 10.8,
// so even with this explicit UID in place, serialized data sources
// created with 10.7 or older would not be readable.
// The default UID in 10.7 was -2155993232624542236.
// This was not caught by the serialization tests at the time since
// the ""40""-suffixed data sources were not tested back then, cf DERBY-5955
// http://svn.apache.org/viewvc?view=revision&revision=1438035 .




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469197 13f79535-47bb-0310-9956-ffa450edef68"
3221b8c5d0baad798d0bdd123d9b8f7bf912e0f0,"DERBY-6186: Encapsulation improvements

- Use DataDescriptorGenerator.newTriggerDescriptor() to build descriptor
  in SYSTRIGGERSRowFactory instead of calling constructor directly

- Make TriggerDescriptor's constructor package private

- Make UserDescriptor's constructor package private

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469240 13f79535-47bb-0310-9956-ffa450edef68"
0fad4e6d5ce5911fddb7afd24820eaca3a1dcba6,"DERBY-6184: Clean up warnings in XA transaction id classes

- simplify existing cloning of arrays by using clone() instead of
  calling new and arraycopy

- reduce visibility of array-returning methods in GlobalXactId to make
  it clearer for code analysis tools that they are not called from
  outside of the package in which the class lives

- remove said methods from the GlobalTransactionId to allow them to be
  non-public

- make the public, array-returning methods in XAXactId return copies
  of the internal arrays to protect the internal state, as instances
  of this class may be returned all the way out to the user

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469243 13f79535-47bb-0310-9956-ffa450edef68"
bcfe2dfd24e12f22151de9a5e0b8dc40e83e5d65,"DERBY-6183 rlliso2multi and rlliso3multi failing with [WARNING 01004: Data truncation] 

Removed casts from lock_table2 view, which was only used in a few
places.  I was not able to reproduce, but assumption is that a
system background lock when running full suite sometimes triggered
a problem with the cast.  




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469445 13f79535-47bb-0310-9956-ffa450edef68"
d976a70c0ef867a0b0849e571900fa5de25250b2,"DERBY-5886 FILE_CANNOT_REMOVE_FILE exception prints garbage. 

Added new messages to cover cases where no exception was available for
the second argument, and made text of those messages more specific to 
the actual usage.  Fixed the calls in RAFContainer.java to be consistent, and
still use original error.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469505 13f79535-47bb-0310-9956-ffa450edef68"
126f27bc3e379a8c76c1b72ac7faf0dcd3f755f7,"fixed wrong indent of comment

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469675 13f79535-47bb-0310-9956-ffa450edef68"
54a46498119e425108bc72deeb43e8ef4e1bbdbe,"DERBY-6189: Fix NPE involving rollback of temporary table.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469802 13f79535-47bb-0310-9956-ffa450edef68"
775bd93be026da604374d6c371c3c1c8909a8b5f,"DERBY-6189: Streamline test case.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469861 13f79535-47bb-0310-9956-ffa450edef68"
25fff6a4bef048c647379005b401cdbc9718f409,"DERBY-5886

fixed typo in new messages: controled -> controlled



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469923 13f79535-47bb-0310-9956-ffa450edef68"
6b2380215f8a8cdc70416ee113cf2d3e66fed493,"DERBY-6188: Improve encapsulation in Formatable machinery.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469948 13f79535-47bb-0310-9956-ffa450edef68"
e4ad0a5cf64b55ff00762d6baa0b8457d5382ef2,"DERBY-6188: Improve the encapsulation of FormatableArrayHolder.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1469992 13f79535-47bb-0310-9956-ffa450edef68"
dda453ed9a8ade48793d8bcbbdc6b2ae7da018a6,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

- Remove the unused targetColumns fields in CursorInfo and
  GenericPreparedStatement

- Replace the getter for the updateColumns field in
  GenericPreparedStatement with more specific accessor methods that
  don't expose the underlying array

- Make CursorInfo.updateColumns a list instead of an array to take
  advantage of helper methods in java.util.List

- Make ArrayUtil.readStringArray() create one array rather than two

- Move QueryTreeNode.getCursorInfo() to StatementNode, since it's only
  called on nodes of that type

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1470478 13f79535-47bb-0310-9956-ffa450edef68"
da7973c39cf04670667dcb8dbea1739cdeff6072,"DERBY-6166: Encapsulate the list of service properties.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1470551 13f79535-47bb-0310-9956-ffa450edef68"
7e7983048ba0bc384c45bfe18c75253281e20cbf,"DERBY-6195: Cleanup encapsulation problems in ij.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1470982 13f79535-47bb-0310-9956-ffa450edef68"
8c151840af228b7bcb22f0de1df9ae6bdfc0f66d,"DERBY-6185 (Query against view  with ""where name LIKE 'Col1' ESCAPE '\' "" failed)

During optimizer's pre-processing phase, while cloning a BinaryComparisonOperatorNode, we were not copying the entire state.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471022 13f79535-47bb-0310-9956-ffa450edef68"
0d74a93a3bdbedc1d1a19f1044b73e9f5b3cb092,"DERBY-6195:  Cleanup encapsulation problem in utilMain.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471037 13f79535-47bb-0310-9956-ffa450edef68"
eaa0d8cf018a0e5866888f1b60b97faf82db332e,"DERBY-4729 add more information to the XACT_PROTOCOL_VIOLATION returned from sto
re.

When this error is reported it is often hard to reproduce, so adding
printing of internal state of the Transaction when it is hit.  Hopefully
this help in understanding what is going on when the error is hit.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471079 13f79535-47bb-0310-9956-ffa450edef68"
80d6162294ce31d6215152a3d7e32a7ba433f2c3,"DERBY-6197: Cleanup various encapsulation problems.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471087 13f79535-47bb-0310-9956-ffa450edef68"
69e3d06219a06473d22d679ff9801b7e2283e3b7,"DERBY-6125 Code clean up in client driver.

derby-6125-rename-c which renames the name overloaded JDBC classes in
the client driver thus:

    am/<JDBCClassName>.java -> am/Client<JDBCClassName>.java

This allows import statements to be used for all JDBC and Derby
classes. The rest of the patch implements such usage instead of full
pathnames in usages. After this patch, the only overload that needs
explicit package path is ""java.util.Date"" which would otherwise
collide with java.sql.Date. In one instance, I let a full path remain
in order to avoid a compiler warning: the deprecated use of
StringBufferInputStream in ClientClob.java.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471245 13f79535-47bb-0310-9956-ffa450edef68"
9b33bd11004812960c4c6d15ddb0957ee232fafe,"DERBY-6193: AutomaticIndexStatisticsTest doesn't delete its single-use database

Delete the extra database on successful completion. Also wrap the test
in a CleanDatabaseTestSetup so that it also cleans up the default
database when it's done.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471264 13f79535-47bb-0310-9956-ffa450edef68"
de89be1afd354f4129220e39e32b3aec28dbb45b,"DERBY-6196: ArrayIndexOutOfBoundsException in SURQueryMixTest

Make sure the random array index is never negative.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471275 13f79535-47bb-0310-9956-ffa450edef68"
554386cc4618d0b60dbafaa8f6e9e482d672e56d,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

Stop exposing references to the internal array of saved objects in
GenericPreparedStatement by making the following changes:

- IndexRowToBaseRowResultSet: Since it doesn't need the complete
  array, make it use getSavedObject(int) instead of getSavedObjects()
  so that it only retrieves the single object that the caller is
  interested in.

- VTIResultSet: Remove code that may perform lazy initialization of
  one of the saved objects at run time if it was initially null.
  Instead, make sure it is initialized when the query is compiled.

- GenericPreparedStatement: Change getSavedObjects() to return a
  read-only view of the internal array, so that callers cannot
  accidentally modify it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471331 13f79535-47bb-0310-9956-ffa450edef68"
e22e8dc70c075d79da132fd42cc20204ceb77bb7,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

Remove unused methods and make DDColumnDependableFinder's constructor
package private.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471382 13f79535-47bb-0310-9956-ffa450edef68"
9e741396c3242c9b54a02ab0eda659a9ff7d4464,"DERBY-6200: Encapsulate the bytes in the eof marker for character streams.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471562 13f79535-47bb-0310-9956-ffa450edef68"
36b48921cc5a71a29fdf7d6f3ec65e3cc58724d5,"DERBY-6201: Fix mutability issues in plan statistics package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471715 13f79535-47bb-0310-9956-ffa450edef68"
286780b67fcc567d2c825ddfaf1292cb4b7a4b6f,"DERBY-5866 ( testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW)

Adding more debugging info



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1471721 13f79535-47bb-0310-9956-ffa450edef68"
8d3ac9bf7a2e23969ad8008546d45987b69b1a56,"DERBY-5866 ( testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW)

I forgot to remove the forced failure from the test which I had used for debugging. Fixing the forced failure part with this commit.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1475624 13f79535-47bb-0310-9956-ffa450edef68"
bc2c59e81758b22a9172134476e27ecd91d65607,"DERBY-6202: Cleanup mutability issues in org.apache.derby.iapi.sql.dictionary package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1475809 13f79535-47bb-0310-9956-ffa450edef68"
06797bdb7e8df219c7c897e7507a231f92939365,"DERBY-6206: Cleanup encapsulation problems in NetworkServerControlImpl.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1475919 13f79535-47bb-0310-9956-ffa450edef68"
475fc20137eae7067a89175f8e924d8fc2c3cc40,"DERBY-6125 Code clean up in client driver. 

Javadoc fixup after changes in derby-6125-rename-01-c (svn 1471245).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1476040 13f79535-47bb-0310-9956-ffa450edef68"
e2245e624e18bd503bf99dcdea762027086577c2,"DERBY-6202: Fix bug involving upgrade, triggers, and dropped columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1476235 13f79535-47bb-0310-9956-ffa450edef68"
38f02ec549fbf03d6453731c53c2141ead319045,"DERBY-6206: Encapsulate constants and names used for isolation levels.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1476291 13f79535-47bb-0310-9956-ffa450edef68"
b09644478ea9e14f4fd1b9abbdc521267ffe2c70,"DERBY-6206: Clone timestamps in XPLAIN code to fix mutability problems.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1476344 13f79535-47bb-0310-9956-ffa450edef68"
b49cc553807c95b00c2eb852c5caa2c17e84d987,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

- Change visibility of all classes generated from sqlgrammar.jj to
  package protected.

- Make CompilerContextImpl.getParameterTypes() package protected since
  it's never called from outside the package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1476915 13f79535-47bb-0310-9956-ffa450edef68"
2e87a4cf5ff53c10fa48ebe422d360b81c085ba4,"DERBY-6206: Cleanup mutability problems in org.apache.derby.impl.jdbc.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1476983 13f79535-47bb-0310-9956-ffa450edef68"
6cc0702d2f966f4311e4cf5b343cf9d2aa3a7b50,"DERBY-6206: Cleanup some mutability problems in the rg.apache.derby.impl.sql package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1477222 13f79535-47bb-0310-9956-ffa450edef68"
b046e716ceb502db5aa051b444271b7aaf37c72c,"DERBY-6206: Cleanup mutability problem in GenericResultDescription.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1477320 13f79535-47bb-0310-9956-ffa450edef68"
600780d1b84363d5e786f992a7ca6c3eb3f43ec4,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

- Make all fields of CreateViewNode and BasicProviderInfo private.

- Make BasicProviderInfo's constructor package private.

- Make CreateViewNode.getProviderInfo() return an immutable list
  instead of the actual array to prevent accidental modification by
  the caller.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1477476 13f79535-47bb-0310-9956-ffa450edef68"
c67f5dd273d5ff2db6be8fac36f561ac28294b91,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

Remove two unused methods in the TriggerExecutionContext interface,
and their implementations in InternalTriggerExecutionContext. This
also made it possible to remove some fields that were only used by the
removed methods, and also corresponding fields and parameters in
neighbour classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1477477 13f79535-47bb-0310-9956-ffa450edef68"
706f2eb0fd89eeb1e6d070ca4e6ff14c466b1a31,"DERBY-6206: Cleanup mutability issues in BaseActivation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1477711 13f79535-47bb-0310-9956-ffa450edef68"
42544c4b9aaa77cf216d7690956beaaca2099a29,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

- Reduce visibility of fields in ColumnInfo, FKInfo,
  InsertConstantAction and TablePrivilegeInfo to private or package.

- Reduce visibility of TablePrivilegesNode.makePrivilegeInfo() and
  InsertConstantAction.getAutoincRowLocation() to package.

- Clone arrays passed in to public constructors of the above mentioned
  classes as well as ConstraintInfo.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1478295 13f79535-47bb-0310-9956-ffa450edef68"
9858a84876f60af70e43a53dfb20a2925eb0884d,"DERBY-6211: Make it possible to plug alternative trace logic into the Optimizer.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1478347 13f79535-47bb-0310-9956-ffa450edef68"
0326967fa95194845412beb4eb72a2c9e0bfac75,"DERBY-6125 Code clean up in client driver.

Patch derby-6125-visibility-02-e.

Further limits scopes of program entities and also removes dead code,
including maintenance of fields that are never read, i.e. they are not
used for anything except setting them.

When I use the term ""unused"" below it may mean that something is
ultimately/transitively unused, e.g a method used to set an unused
field, or due to other code removal transitively. All references are
to client classes.

* Agent

  Removed unused method batchUpdateExceptionGenerated

* ClientCallableStatement

  Removed two unused overloads: resetCallableStatement

* ClientClob

  Removed unused field encoding_

  Removed unused methods createClobWrapper, convertFromAsciiToCharacterStream

* ClientPreparedStatement

  Removed unused methods resetPreparedStatement,
  initPreparedStatement, writeDescribeOutput, readDescribeOutput,
  writePrepareDescribeInputOutput, checkScaleForINOUTDecimal

  Inlined creation of method not implemented exception, removed
  jdbc3FeatureNotSupported.

* ClientResultSet

  Commented out unused fields updatability_unknown__, updatability_readOnly__

  Removed unused fields NEXT_ROWSET, PREVIOUS_ROWSET, ABSOLUTE_ROWSET,
  FIRST_ROWSET, LAST_ROWSET, RELATIVE_ROWSET, REFRESH_ROWSET, nestingLevel_

  Removed unused method rowCountIsKnown. flowFetch moved to NetResultSet.

* ClientStatement

  Removed unused field returnValueFromProcedure_

  Commented out unused fields isCommitSql__, isRollbackSql__, isPositionedUpdateDeleteSql__

  Removed unused method clientmarkResultSetsClosed, getProcedureName,
  upperCaseProcedureName, jdbc3FeatureNotSupported

* ClobLocatorOutputStream

  Removed unused field connection

* ColumnMetaData

  Removed unused fields singleMixedByteOrDouble_,
  protocolTypeToOverrideLidMapping_, mddOverrideArray_

  Removed unused method isParameterModeGuessedAsOutput, columnIsNotInUnicode

* Configuration

  Removed unused fields jreLevelMajor, jreLevelMinor, jreLevel,
  dncPackageVersion, enableNetConnectionPooling,
  cursorAttribute_InsensitiveRowset,
  cursorAttribute_SensitiveDynamicRowset,
  cursorAttribute_InsensitiveRowset

* CrossConverters

  Removed unused method getBooleanFromByte, getBigDecimalFromBoolean,
  getStringFromBoolean, getDateFromTime(Time),
  getDateFromTimestamp(Timestamp), getTimeFromTimestamp(Timestamp),
  getTimestampFromTime(Time), getTimestampFromDate(Date)

* DisconnectException

  Removed unused constructor DisconnectException(Agent, ClientMessageId, SqlCode)

* LogWriter

  Removed unused traceExit overloads.

* SectionManager

  Removed unused fields collection_, HOLD, NO_HOLD,

* SqlCode

  Removed unused fields invalidCommitOrRollbackUnderXA,
  invalidSetAutoCommitUnderXA, undefinedError

* SqlException

  Removed unused constructor SqlException(LogWriter, ClientMessageId, SqlCode)

* SqlWarning

  Removed unused constructors
  Removed unused method getNextWarning

* Sqlca

  Removed unused methods getReturnValue, includesSqlCode

* Utils

  Removed unused methods getStringFromStrings, padOrTruncate,
  checkForNegativePositiveSqlcard (2X), getUpdateCountFromSqlcard,
  accumulateSQLWarning, getSQLTypeName (we might want to keep this for
  debugging possibly?)

* Version

  Removed unused methods getDriverName, getBuildNumber, isAlpha, isBeta

* XaException

  Removed unused constructors
  Removed unused method copyAsUnchainedXAException

* CodePoint

  Removed many unused code points (fields). One could argue that it's
  nice to keep these if we need them later, opinions welcomed. For me
  it seems clearer to only keep those we need, we know what the source
  for the constants is anyway, i.e. the DRDA specification.

* DssConstants

  Removed many unused constants, cf previous item considerations.

* FdocaConstants

  Removed many unused constants, cf previous item considerations.

* FdocaSimpleDataArray

  Removed unused fields fdocaFieldType_, representation_, mode_, fieldLength_

* NetAgent

  Removed unused fields packageRequest_,
  Removed unused method convertToStringTcpIpAddress

* NetConfiguration

  Removed unused fields INITIAL_CAPACITY, NON_CHAR_DDM_DATA_PAD_BYTE,
  CURSOR_NOT_OPEN, CURSOR_OPEN, CURSOR_CLOSE_ONLY, DDMHDR_LENGTH,
  PRDDTA_MAX_ACCT_SUFFIX_LEN, MGRLVL_3, MGRLVL_4, MGRLVL_6,
  SECMEC_DCESEC, SECMEC_EUSRIDNWPWD, SYSTEM_ASC

* NetConnection

  Removed unused field pendingEndXACallinfoOffset_, targetSrvclsnm_, seqNo_

  Removed unused methods getSpecialRegisters, addSpecialRegisters,
  getSequenceNumber, getIndoubtTransaction, doResetNow,
  serverSupportsBooleanValues

* NetConnectionRequest

  Removed unused method writeDummyExchangeServerAttributes

* NetCursor

  Removed unused fields targetSqlamForTypdef_, numMddOverrides_

* NetResultSet

  Removed unused method queryDataWasReturnedOnOpen

* NetResultSet

  Method flowFetch moved from ClientResultSet to be able to make it
  package private.

* NetStatement

  Removed unused constructor
  Removed unused method netReset

* NetXACallInfo

  Removed unused fields xaInProgress_, xaWasSuspended,
  currConnection_, freeEntry_, convReleased_, xaResource_, uowid_,
  readOnlyTransaction_

  Removed unused methods setUOWID, getUOWID,
  setReadOnlyTransactionFlag, getReadOnlyTransactionFlag

* NetXAConnection

  Removed unused methods writeLocalXAStart_, readLocalXAStart, getUOWID, getPort

* NetXAResource

  Removed unused fields TMTIMEOUT, ACTIVE_ONLY, XA_NULL_XID,
  RECOVER_XID_ARRAY_LENGTH, XAFUNC_NONE, rmId_, numXACallInfo_,
  connectionCount_, activeXATransCount_, rmIdx_, rmIdy_, port_,
  ipaddr_, specialRegisters_

  Removed unused methods throwXAException, getSpecialRegisters,
  addSpecialRegisters

* Reply

  Removed unused fields dssIsChainedWithDiffID_

  Removed unused methods readIntArray, readLong, readBoolean,
  readString(int), readLDBytes, peekLength

* Request

  Removed unused method createXACommand, writeScalarBytes,
  writeScalarHeader, writeScalarPaddedBytes, writeDDMString

* Typdef

  Removed unused constructor(NetAgent, int, String)
  Removed unused field environment_
  Removed unused methods clearCcsidSbc, clearCcsidDbc, clearCcsidMbc

* NetIndoubtTransaction removed altogether

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1478635 13f79535-47bb-0310-9956-ffa450edef68"
9f1ddc5d6885dcbbe08ae4b3198870f6628ef995,"DERBY-6125 Code clean up in client driver.

    Patch ""derby-6125-visibility-03-a"" to limit sharing of state
    between classes not in the same package by cloning arrays not
    considered performance sensitive.

    * ClientStatement
      made indexOfCurrentResultSet private by adding accessors

      removed unused field numInvisibleRS

      cloned execute, executeLargeUpdate and executeUpdate's overloads
      input arrays columnIndexes and columnNames

      cloned completeExecuteCall's argument resultSets

    * ClientPreparedStatement

      use new accessor resetResultSetList instead of accessing
      ClientStatement#indexOfCurrentResultSet directly

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1478641 13f79535-47bb-0310-9956-ffa450edef68"
049f993f04e57f5dbd562367f559204d9ae0058c,"DERBY-6211: Cleanup optimizer trace support.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1478932 13f79535-47bb-0310-9956-ffa450edef68"
85e98cb02d77cb945696f3a903eee0acc48d64ac,"DERBY-6211: Add ability to plug custom trace logic into the optimizer.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1479552 13f79535-47bb-0310-9956-ffa450edef68"
519bfa7404b4b7620c77c1d48f0f8a3f3f6cad9f,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

Remove the CreateViewNode.getProviderInfo() method in which a bug (it
returns colInfos instead of providerInfos) was introduced in revision
1477476.

Also remove the single caller of that method, as it appears to be dead
code that was only needed for views that had been created with a
pre-Derby version of the engine. Since upgrade is only supported from
other Derby versions, that logic should not be needed anymore.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1479562 13f79535-47bb-0310-9956-ffa450edef68"
ce5c76306db3f5bd699a2ebe695166c24d3d252d,"DERBY-6045 (in list multi-probe by primary key not chosen on tables with >256 rows)

Commiting a test showing that we use index scan for DELETE statement on a table with appropriate indexes. This happens with or without update statistics and with or without parameterized statement.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1479607 13f79535-47bb-0310-9956-ffa450edef68"
2c50eb383e31c366aad7c6b8bbc5fd0d681dabda,"DERBY-6211: Move optimizer tracer from tools jar to engine jar.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1479642 13f79535-47bb-0310-9956-ffa450edef68"
e77d3a1584e35e5849d5243c8e2239aba2b7f91b,"DERBY-6213: Remove jdbc4 variant of the public api javadoc.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1479881 13f79535-47bb-0310-9956-ffa450edef68"
bbc882f87e0a360ef9731b391b0a79dc9500f733,"DERBY-6213: Convert the org.apache.derby.vti package to Java 6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1479972 13f79535-47bb-0310-9956-ffa450edef68"
ab098e217d8b785d543a9c11d38011577baf2443,"DERBY-6213: Fix some compilation problems in the vti package when compiling on Java 7.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480052 13f79535-47bb-0310-9956-ffa450edef68"
8fe3166c0b20d693bfd71f4478b2ead935e8895b,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

Reduce visibility of the following methods, and all overrides of them,
to package:

- QueryTreeNode.generate()
- QueryTreeNode.getNullNode()
- ResultSetNode.bindResultColumns()
- ResultSetNode.generateNormalizationResultSet()
- ResultSetNode.generateResultSet()
- ResultSetNode.getFromTableByName()
- ValueNode.generateExpression()

Remove unused method:

- ValueNode.generateFilter()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480187 13f79535-47bb-0310-9956-ffa450edef68"
2b467cf8e31ceeaecc5e7334f9372108e06f0741,"Fix javadoc warning (mismatch between @param and actual parameter name)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480232 13f79535-47bb-0310-9956-ffa450edef68"
0758fb61a79b071e6c6fbb1cc8b49c37a8afc770,"DERBY-6213: Convert misc packages to Java 6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480251 13f79535-47bb-0310-9956-ffa450edef68"
996ca721561d0507997d33180a5b8b85e539bfac,"DERBY-6213: Convert a couple misc packages to Java 6.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480365 13f79535-47bb-0310-9956-ffa450edef68"
ef15574ab17cccf74035f318c83daad7b44a1271,"DERBY-3838; Convert derbynet/DerbyNetAutoStart to JUnit
  removing an orphaned file from suites, and adjusting the README. It appears there never was 
  a derbynetautostart suite, so this file was pointless anyway.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480446 13f79535-47bb-0310-9956-ffa450edef68"
b5468e93eef6ecabd0497ccdb20bb6019a0720c0,"DERBY-6181; fix AutoloadTest to support running concurrently when different base ports are specified.
  Re-enable the test, passing the baseport on to when set, including on to spawned processes.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480462 13f79535-47bb-0310-9956-ffa450edef68"
b565f41eb31d118c572770aaf69bd0c568538ff5,"DERBY-6125 Code clean up in client driver

Patch derby-6125-misc-01-b, which further removes dead code opened up
by previous removals, further limits visibility, and corrects one
error introduced in a previous patch for this issue.

* deleted:    client/am/SqlState.java

Removed this class as there were no longer any references to it.

* modified:   client/ClientPooledConnection.java

Removed unused field netPhysicalConnection_.

* modified:   client/ClientXAConnection.java

Removed unused method createControlConnection; import fix.

* modified:   client/am/ClientBlob.java

Removed unused method getBinaryString.

* modified:   client/am/ClobLocatorWriter.java

Corrected error introduced in a previous patch.

* modified:   client/am/ClientConnection.java
* modified:   client/am/ClientDatabaseMetaData.java
* modified:   client/am/ClientPreparedStatement.java
* modified:   client/am/DateTime.java
* modified:   client/am/ExceptionFormatter.java
* modified:   client/am/SqlWarning.java
* modified:   client/am/Sqlca.java
* modified:   client/am/StatementCacheInteractor.java
* modified:   client/net/NetConnectionReply.java
* modified:   client/net/NetConnectionRequest.java
* modified:   client/net/NetStatementReply.java

Visibility restrictions.

* modified:   client/am/ClientJDBCObjectFactory.java
* modified:   client/net/ClientJDBCObjectFactoryImpl.java

Removed unused method newClientPooledConnection(ClientBaseDataSourceRoot, LogWriter, String, String, int)
Removed unused method newNetConnection(LogWriter, String, Properties)
Removed unused method newNetConnection(LogWriter, ClientBaseDataSourceRoot, String, String)
Removed unused method newNetConnection(LogWriter, String, int, ClientBaseDataSourceRoot, boolean)
Removed unused method newStatement(Agent, ClientConnection)

* modified:   client/am/ClientResultSet.java

Removed unused fields updatability_delete__, updatability_update__. Visibility restrictions.

* modified:   client/am/ClientStatement.java
* modified:   client/am/Configuration.java
* modified:   client/am/Lob.java

Visibility restrictions. Import fix.

* modified:   client/am/CloseFilterInputStream.java
* modified:   client/am/ColumnMetaData.java
* modified:   client/am/Utils.java
* modified:   client/net/NetCursor.java
* modified:   client/net/NetResultSet40.java
* modified:   client/net/NetSqlca.java
* modified:   client/net/NetXAResource.java
* modified:   client/net/NetXAConnection.java
* modified:   client/net/Typdef.java
* modified:   jdbc/ClientConnectionPoolDataSource.java
* modified:   jdbc/ClientXADataSource.java

Import fixes.

* modified:   client/am/Cursor.java

Import fix, visibility restrictions, removed unused constants
SBCS_CLOB, MBCS_CLOB, DBCS_CLOB, VARIABLE_BYTES.

* modified:   client/am/Diagnosable.java

Import fixes. Removed interface method printTrace (+ implementations).

* modified:   client/am/LogWriter.java

Removed unused method traceEntry(Object, String, int, Object, Object, Object)

* modified:   client/am/LogicalConnection.java

Removed unused method preparePositionedUpdateStatement

* modified:   client/am/MaterialPreparedStatement.java

Removed unused abstract methods methods writeDescribeOutput_ and readDescribeOutput_ (+ implementations)

* modified:   client/am/SqlException.java

Import fixes.  Visibility restrictions. Removed unused method printTrace(PrintWriter, String)

* modified:   client/am/XaException.java

Import fixes. Removed unused method printTrace(PrintWriter, String)

* modified:   client/net/ClientJDBCObjectFactoryImpl40.java

Removed unused method newClientPooledConnection(ClientBaseDataSourceRoot, LogWriter, String, String, int)
Removed unused method newNetConnection(LogWriter, String, Properties)
Removed unused method newNetConnection(LogWriter, ClientBaseDataSourceRoot, String, String)

* modified:   client/net/DssConstants.java

Removed unused constant GDSFMT_RQSDSS_NOREPLY

* modified:   client/net/FdocaConstants.java

Removed unused constants FDOCA_TYPE_FIXEDBYTES,
FDOCA_TYPE_NFIXEDBYTES, FDOCA_TYPE_NVARBYTES, FDOCA_TYPE_NTBYTES,
FDOCA_TYPE_NNTBYTES, FDOCA_TYPE_NPSCLBYTE, FDOCA_TYPE_FIXEDCHAR,
FDOCA_TYPE_NFIXEDCHAR, FDOCA_TYPE_NVARCHAR , FDOCA_TYPE_NTCHAR,
FDOCA_TYPE_NNTCHAR, FDOCA_TYPE_NPSCLCHAR, FDOCA_TYPE_INTEGER_BE,
FDOCA_TYPE_NINTEGER_BE, FDOCA_TYPE_NDECIMAL, FDOCA_TYPE_FLOAT_IEEE,
FDOCA_TYPE_NFLOAT_IEEE, FDOCA_TYPE_NLOBBYTES, FDOCA_TYPE_NLOBCHAR.

* modified:   client/net/NetAgent.java

Visibility restriction. Removed unused method getPort.

* modified:   client/net/NetConfiguration.java

Visibility restriction. Removed unused constant SECMEC_USRIDNWPWD.

* modified:   client/net/NetConnection.java

Import fix. Removed unused fields cnntkn_, readOnlyTransaction. Removed unused methods getCnnToken.
Removed useless method setReadOnlyTransactionFlag.
Removed unused constructor NetConnection40(NetLogWriter, String, int, ClientBaseDataSourceRoot, boolean)

* modified:   client/net/NetConnection40.java

Visibility restrictions. Removed unused constructor NetConnection40(NetLogWriter, String, int, ClientBaseDataSourceRoot, boolean)

* modified:   client/net/NetPackageReply.java

Import fixes. Removed unused field rdbnam. Unused ultimately useless
setting of netConnection_.setReadOnlyTransactionFlag, cd. NetConnction changes.

* modified:   client/net/NetPackageRequest.java

Removed unused field collectionName.

* modified:   client/net/NetPreparedStatement.java

Removed unused methods writeDescribeOutput_, readDescribeOutput_.

* modified:   client/net/NetXACallInfo.java

Removed unused field crrtkn_

* modified:   jdbc/ClientBaseDataSourceRoot.java

Import fixes. Visibility restrictions. Removed unused constant SUPPORTS_EUSRIDPWD.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480892 13f79535-47bb-0310-9956-ffa450edef68"
4ce6a9b488aff11cc705a26c1ca30d61091a3ca2,"DERBY-6212: NullPointerException when calling a procedure with sub-query as argument

Raise a syntax error instead of a NullPointerException if a sub-query
is given as argument to a CALL statement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480909 13f79535-47bb-0310-9956-ffa450edef68"
9f2ed7dad0742fdc69597529e6f47a08d2e7486e,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

Reduce visibility of some methods and fields in impl/sql/compile that
expose package-private classes outside of the package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480941 13f79535-47bb-0310-9956-ffa450edef68"
4068b5254561d136c037d72fc61dcc9cf8b5e2cc,"DERBY-6215: derby.log grows enormously during StressMultiTest

Make sure ClobReclamationTest clears the DaemonTrace debug flag when
it has completed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1480947 13f79535-47bb-0310-9956-ffa450edef68"
a8b9c708164175707848183de5104337a9a1ac53,"DERBY-6213: Deprecate support for Java 5 and CDC

- Revive build target for SqlXmlUtil to ensure that it always includes
  the org.w3c.dom.xpath interfaces on the compile classpath.

- Update SqlXmlUtil.java so that no warnings are printed during
  compilation.

- Remove code that's only used on Java 1.4 and CDC.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1481187 13f79535-47bb-0310-9956-ffa450edef68"
5570eb085195529674c75459be4af57b820037e8,"DERBY-6213: Remove CDC DataSource and Driver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1481248 13f79535-47bb-0310-9956-ffa450edef68"
dfc9ab0c17d3d0f68e3cf70ab27b1461797ca7a5,"DERBY-6213: Convert remaining non-JDBC packages to Java 6 build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1481379 13f79535-47bb-0310-9956-ffa450edef68"
b5bb4db3b6ca7097aea528ee8f01788e9aded08f,"DERBY-6181; fix AutoloadTest to support running concurrently when different base ports are specified.
  removing an unnecessarily introduced import.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1481448 13f79535-47bb-0310-9956-ffa450edef68"
05623b686ef5ba583291e5d6a6061739db8910af,"DERBY-6169: Reduce visibility of classes and methods under impl/sql

Changes to prevent exposing package-private classes outside the
package via public or protected fields or methods:

- Reduce visibility to package or private if possible

- Remove the code if it's not actually used

- Use public interfaces rather than implementation classes in the
  method signatures if the methods have to be public

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1481816 13f79535-47bb-0310-9956-ffa450edef68"
890e5d2747c3c318d0fa2200d93d0e868dba9215,"DERBY-6213: Deprecate support for Java 5 and CDC

Compile all test code against Java 6 libraries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1481818 13f79535-47bb-0310-9956-ffa450edef68"
eec86ed87462846a8683a5082a55f357142579d1,"DERBY-6213: Convert JDBC build scripts to Java 6 and misc merges.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482044 13f79535-47bb-0310-9956-ffa450edef68"
2510115ec6cd5714fbad3869d3e236f220a152e2,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

- Clean up deprecation warnings in the tests

- Clean up unchecked conversion warnings in org.apache.derbyTesting.junit

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482234 13f79535-47bb-0310-9956-ffa450edef68"
fe15de1d1da23576053983a3c5461b5ae8ca28b2,"DERBY-6213: Deprecate support for Java 5 and CDC

Fix build break when j15lib is defined. The classes in the
org.apache.derby.jdbc package now implement the JDBC 4 interfaces, but
they are still compiled against the JDBC 3 libraries, which don't
include all necessary classes. This patch makes them compile against
the JDBC 4 libraries instead.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482252 13f79535-47bb-0310-9956-ffa450edef68"
9a0cdf1f8cd16526b16733b28ea0b8a498ba530c,"DERBY-6213: Deprecate support for Java 5 and CDC

Build network client against Java 6 libraries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482405 13f79535-47bb-0310-9956-ffa450edef68"
400f6eb4c5ebd30de379479a6cb980f102970c5b,"DERBY-6213: Cleanup Java6 related lint warnings in types, load, db, io, and security.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482443 13f79535-47bb-0310-9956-ffa450edef68"
a15a470293c2e960c95ccde71099d7f4724be397,"DERBY-6213: Generify impl/services packages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482578 13f79535-47bb-0310-9956-ffa450edef68"
04fc939ba516a4b6f84952dea3fca68702eeab61,"DERBY-6213: Deprecate support for Java 5 and CDC

Move getParentLogger() to ClientBaseDataSourceRoot and remove it
from all the *40 leaf classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482632 13f79535-47bb-0310-9956-ffa450edef68"
6469ca64dab8d27b2c9f9da9db07db599a94114d,"Fixed javadoc warning.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482695 13f79535-47bb-0310-9956-ffa450edef68"
9d44c9e98c81913375328e14e14ce5a1d2f15160,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Clean up warnings in various test packages:

  - derbynet
  - perf
  - system

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482780 13f79535-47bb-0310-9956-ffa450edef68"
c393694c042abca4c6baa901700fe13f5546a2d2,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Fix unchecked warnings in test packages:

  - engine
  - i18n
  - store
  - tools

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482862 13f79535-47bb-0310-9956-ffa450edef68"
7e7a589002905adf5d945daef7b8fd7bd8dbc5bd,"DERBY-6213: Generify impl/store packages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1482984 13f79535-47bb-0310-9956-ffa450edef68"
e18f54b3c2b5c6c1472d00c1fe90ba9a3fa630bc,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Clean up warnings in jdbcapi test suite, and some classes that the
jdbcapi tests depend on in the upgrade test suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1483202 13f79535-47bb-0310-9956-ffa450edef68"
227dca6c86b7ff45ad02e3188f9b33b61b00002b,"DERBY-6207 Update policy files in java/drda/org/apache/derby/drda

Removed permission java.util.PropertyPermission ""derby.storage.jvmInstanceId"", ""write"";

which is no longer needed, plus formatting improvements.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1483215 13f79535-47bb-0310-9956-ffa450edef68"
3f5c48a93f9606e6cb021dac0f5914ce71205b63,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Fix the warnings in the remaining test packages.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1483727 13f79535-47bb-0310-9956-ffa450edef68"
f2fad755786fe08bf2e65632d2b3bb1e17f32990,"DERBY-6213: Generify impl/sql/catalog and impl/sql/depend.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1483911 13f79535-47bb-0310-9956-ffa450edef68"
274c5ba43e62aa1f1f5c5ef25cf8260bfc27035f,"DERBY-6213: Generify impl/sql/conn package.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1484498 13f79535-47bb-0310-9956-ffa450edef68"
d7582c6e843a3afca910e879e023734ce792fe17,"DERBY-5610 ServerPropertiesTest prints .java.net.SocketException: Connection reset to console but test passes 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1484507 13f79535-47bb-0310-9956-ffa450edef68"
9d5bd0e49030e2eb12a919b5bf93f53fb8cbb499,"DERBY-6213: Generify impl/sql/compile and impl/sql/execute.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1484566 13f79535-47bb-0310-9956-ffa450edef68"
81fbf525d3e8a9e7b1ddd5268fc756be558ce703,"DERBY-6214 (PreparedStatement.setObject(int, Object, Types.CLOB) fail with DerbyNet)

Adding junit test to set CLOB column value using setObject and setString. The test has been disabled when updating more than one row and 
1)using setObject to set the value since it runs into closed stream error
2)using setString with large string(test works fine for smaller strings) since it runs into closed stream error



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1484649 13f79535-47bb-0310-9956-ffa450edef68"
073b862de35afe70afc288b34da12140633e39da,"DERBY-6213: Generify more classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1484818 13f79535-47bb-0310-9956-ffa450edef68"
89f21fb483b1a2d98bd44f1d2e5013b964b5d8b9,"DERBY-6213: Deprecate support for Java 5 and CDC

- Make ColumnDescriptorList extend ArrayList<ColumnDescriptor> instead
  of ArrayList<TupleDescriptor>

- Make ConglomerateDescriptor extend ArrayList<ConglomerateDescriptor>
  instead of ArrayList<TupleDescriptor>

- Make GenericDescriptorList extend ArrayList<UniqueTupleDescriptor>
  instead of ArrayList<TupleDescriptor>

- Change signatures of getDescriptorViaIndex() and
  getDescriptorViaHeap() so that they can take lists of more specific
  types than List<TupleDescriptor>, and so that they can return a more
  specific type than TupleDescriptor

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1484821 13f79535-47bb-0310-9956-ffa450edef68"
a784994d20402718277c4cd9417bdfe021d6d75b,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Stop suppressing some unchecked conversion warnings. Make the
conversions checked instead.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1484920 13f79535-47bb-0310-9956-ffa450edef68"
9548d383f0272d5584d11ffa9330abb85bea9837,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Make DataValueDescriptor.setBigDecimal() take a BigDecimal instead of
a Number. The argument is always null or a BigDecimal instance, but
its declared type had to be Number in order to compile on CDC, which
is no longer supported.

By making the declared type BigDecimal, we avoid an unchecked cast to
Comparable in NumberDataType's implementation of the method.

Also remove the classes that contain the CDC-specific implementation
of the DECIMAL data type.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485076 13f79535-47bb-0310-9956-ffa450edef68"
f9a152bd9d452c8af38efc4578835052cdc8686c,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Remove various @SuppressWarnings annotations and adjust the code so
that the compiler doesn't complain.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485321 13f79535-47bb-0310-9956-ffa450edef68"
8b47bc7a65ebcacbab628781dea7f4edaa1e87e5,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Refactor ClassSizeCatalog to prevent unchecked conversion warnings when
ClassSize creates an instance via reflection and casts the result to
Hashtable<String, int[]>.

Introduce a new abstract ClassSizeCatalog class and rename the generated
class to ClassSizeCatalogImpl, which extends ClassSizeCatalog. ClassSize
can now access the catalog via the abstract class instead of casting it
unchecked to Hashtable<String, int[]>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485322 13f79535-47bb-0310-9956-ffa450edef68"
71c8e86b3ab5d573761ea37a96a691cb361aa96f,"DERBY-6213: Generify more classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485333 13f79535-47bb-0310-9956-ffa450edef68"
a045b63998bac9369524ddcf09fd22e885c24e53,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Make the declared type of the lock groups HashMap<Lock, Lock> instead
of HashMap<Lock, Object>.

Stop suppressing unchecked conversion warnings in
PropertyConglomerate, and make all conversions checked.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485609 13f79535-47bb-0310-9956-ffa450edef68"
3f7581c05bb94eb6050ecb7ffc39c6aac683d97e,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

- Make ArrayUtil.asReadOnlyList() use checked conversions and remove
  SuppressWarnings annotation

- Generify the signature of ArrayUtil.copy(Object[]), remove the now
  redundant copy(String[]) overload, and remove the now redundant
  casts in many of the call sites

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485676 13f79535-47bb-0310-9956-ffa450edef68"
16d3334c536d40d284ac1cf3cc451d96a4298942,"DERBY-6213: Generify remaining classes needed to remove lint warnings in Derby build.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485822 13f79535-47bb-0310-9956-ffa450edef68"
b3b16bf31a11da891c66f3c088ada42e6a57b493,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Fix warning in DDUtils by using Hashtable's constructor instead of
clone() for type-safety.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485827 13f79535-47bb-0310-9956-ffa450edef68"
6d76f32f60f408c3add34c0d226d3754784143c7,"DERBY-6225 SecureServerTest assertion error on contents of stdout from subprocess

Patch changing the order of

a) the waiting for the process to finish
   starting and
b) read its standard output.

This is done to avoid a race condition in which we read the output
before it has been printed by the subprocess.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485936 13f79535-47bb-0310-9956-ffa450edef68"
9f0dc0eb1c0354e7fd85303733e155e8851520a6,"DERBY-6148 Wrong sort elimination when using permuted sort order

Patch derby-6148-3. Adds lacking use of join order index map into
optimizableList in method OrderByList#sortRequired. Also adds
regression tests for previously failing (and a some good) queries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485938 13f79535-47bb-0310-9956-ffa450edef68"
a6d25cd5fc407b731bdd4819773da60d3e3f05b9,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Generify CollectNodesVisitor so that the SuppressWarnings annotation
on its visit() method can be removed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485961 13f79535-47bb-0310-9956-ffa450edef68"
503b49c47247f8d797a861c985aae475f1498b21,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Fix compiler warning in CursorNode.init() by changing parameter from
List<String> to String[] so that the cast from Object can be checked.

Fix compiler warning in TriggerEventActivator by using a List instead
of an array to store generic types.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1485984 13f79535-47bb-0310-9956-ffa450edef68"
89e145b786c4e3050e4a52b680b99ccfabf2cb7c,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Fix unchecked warning in GroupedAggregateResultSet by changing the type
of the distinctValues field from HashSet[][] to List<List<Set<String>>>.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1486028 13f79535-47bb-0310-9956-ffa450edef68"
ed47eefa80796dfbbaf100f9bcf7a0990ee728b4,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Tell JavaCC to generate Java 5 code for the parsers. This change
silences the warnings previously seen when compiling the parsers, so
it also removes the build target that post-processes the parsers and
inserts @SuppressWarnings annotations.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1486039 13f79535-47bb-0310-9956-ffa450edef68"
0d15ddc0664094557ca0250c4e9acc2bbfa08709,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Use ArrayList's constructor instead of Object.clone() to create a copy of
a list in a type-safe way.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1486071 13f79535-47bb-0310-9956-ffa450edef68"
e76d29e44b0b9a0481113d11e820a755be0cd670,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Remove SuppressWarnings annotation in DiskHashtable and use strongly
typed variables instead of an overloaded Object variable to prevent
the warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1486780 13f79535-47bb-0310-9956-ffa450edef68"
fcc3580048e6e07d5299a38e52db60134d1432fc,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Remove the @SuppressWarnings(""unchecked"") annotation from
BackingStoreHashtable and introduce a specialized sub-class of
ArrayList to make the casts type safe.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1486782 13f79535-47bb-0310-9956-ffa450edef68"
2a57bb0842fb71a6cf17354420072db90ade1bd2,"DERBY-5840: Clean up compiler warnings introduced by using Java 5 language features

Store lists of implementation classes in a list instead of an array,
since arrays cannot have generic types. This silences an unchecked
conversion warning and allows us to remove a SuppressWarnings
annotation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1486826 13f79535-47bb-0310-9956-ffa450edef68"
78bdf3609f28001f8801bf9bc7a738f53d349d41,"DERBY-6213: Collapse the embedded DataSources into their Java 6 base classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1486921 13f79535-47bb-0310-9956-ffa450edef68"
fd584b02cf9232770eb109f69542e692cedf83f1,"DERBY-6213: Cleanup published javadoc for the Derby DataSources now that we have removed support for Java 5 and CDC.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1486949 13f79535-47bb-0310-9956-ffa450edef68"
209fdc067b286a8186c2cdb9e551a5e06322588a,"DERBY-6213: Remove java15compile.classpath build variable and the JDBC 3 and JSR 169 stubs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1487040 13f79535-47bb-0310-9956-ffa450edef68"
70516989758107f419c5dc7bde5cf7d5f75ad5f0,"DERBY-6213: Generify the Felix stubs in order to remove a lint diagnostic at build time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1487051 13f79535-47bb-0310-9956-ffa450edef68"
b5b131644fb270152a47fd3d52d7e7bd2334a2c1,"DERBY-6213: Convert 1.4 and 1.5 to 1.6 in source/target clauses of compilation tasks.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1487133 13f79535-47bb-0310-9956-ffa450edef68"
5b2aa2714ba535b31d8b4ea7ade912f290f633f2,"DERBY-6213: Remove SimpleMobileApp.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1487461 13f79535-47bb-0310-9956-ffa450edef68"
8b3b6fcb2bada1427923ec621fad772d7fc33b33,"DERBY-6213: Make BasicClientConnectionPoolDataSource40 public.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1487559 13f79535-47bb-0310-9956-ffa450edef68"
af88ec8d24fca7550282198fbd5802251b30cf85,"DERBY-6230: Use the JVM's cache of Number instances in ReuseFactory

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1487773 13f79535-47bb-0310-9956-ffa450edef68"
a0b894382f7fd9616d694fa51c901905cf6de8b6,"DERBY-6231: Remove unnecessary checks for UnsupportedEncodingException in the client

Refer to encodings with Charset constants instead of names.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1487774 13f79535-47bb-0310-9956-ffa450edef68"
8eec7a946d2ff628e58021b22fa65025619f0348,"DERBY-6221: Check for invisible PASSWORD column at preprocessing time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1487946 13f79535-47bb-0310-9956-ffa450edef68"
3983f42f4b2a40ff61c9c1a79c10a82f87dfb6d8,"DERBY-6233: XMLBindingTest fails on latest JDK 8 EA

Set the system property javax.xml.accessExternalDTD in the test to
allow the XML parser to access the DTD.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1488116 13f79535-47bb-0310-9956-ffa450edef68"
8d5db17f62016b37f5aae30b5fa7209f1c8ac5a4,"DERBY-6224: Many test failures on latest JDK 8 EA build because of missing SQLPermission

Add the missing permission to the tests' policy files and wrap
AutoloadedDriver's calls to DriverManager.deregisterDriver() in a
privileged block.

Make the deregister=false attribute really prevent
DriverManager.deregisterDriver() from being called during system
shutdown, and make the network server shutdown logic use the attribute
to prevent the need for an extra permission in the default server
policy.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1488125 13f79535-47bb-0310-9956-ffa450edef68"
c40208a653e89c78705e6087d838d9ae14327e04,"DERBY-6220: Flag additional Derby properties which are undocumented and remove an unused property.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1488345 13f79535-47bb-0310-9956-ffa450edef68"
1fec7db83eccabe50a947625d5facb4cb6ce2334,"DERBY-6238: Lock timeout in GrantRevokeTest.testGrantRollbackAndCommit

Improve error reporting to help debugging:

- Check that all exceptions are as expected
- Provide stack trace for all unexpected exceptions
- Dump lock table on lock timeouts

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1488896 13f79535-47bb-0310-9956-ffa450edef68"
ee16f470126e0491b3ff6d1a78082d37614ce4f0,"DERBY-6240: Remove Clock cache manager from trunk

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1488903 13f79535-47bb-0310-9956-ffa450edef68"
a6e95d8080245d813c573cbac1ac4afb732b1c55,"DERBY-6241: Remove SinglePool from trunk

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1488904 13f79535-47bb-0310-9956-ffa450edef68"
a809756dcaaf253cdbe727b271452609251b94c6,"DERBY-6242: Merge ConcurrentXactFactory into XactFactory

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1488905 13f79535-47bb-0310-9956-ffa450edef68"
e33b8d871ece038784769f3e95d16bc1b259eb09,"DERBY-2438: Remove JDBC30Translation and most of JDBC40Translation

- Replace references to JDBC30Translation constants with direct
  references to the corresponding constants in
  java.sql.ParameterMetaData where possible.

- Replace references to JDBC40Translation constants with direct
  references to the corresponding constants in
  java.sql.DatabaseMetaData and java.sql.Types where possible.

- Move the non-JDBC constants in JDBC30Translation to
  JDBC40Translation.

- Remove JDBC30Translation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1488929 13f79535-47bb-0310-9956-ffa450edef68"
a22130db3c9042f0a661ae0db1cd995d73a41b78,"DERBY-6237(PreparedStatement.execute() fails starting 10.2 when multiple rows are updated and PreparedStatement.setCharacterStream(int, Reader, int) is used)

This commit tests setCharacterStream on CLOB and VARCHAR columns as 2 separate tests. This way failure of one data type will not mask the behavior of the other data type.

I found through these tests that in trunk,
1)setCharacterStream on VARCHAR columns work fine(just like 10.1 through 10.10 releases) for both one row and multi-row update through prepared statement.
2)But setCharacterStream on CLOB column when update touches more than one row(both for embedded and network server) fails in trunk.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1489246 13f79535-47bb-0310-9956-ffa450edef68"
027484f14ded94edc8756b9197b68effcb8adbdc,"Fix javadoc warning

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1489311 13f79535-47bb-0310-9956-ffa450edef68"
4e5e9650b77c23ae33a1240f2ef7bee6e548ff08,"DERBY-6243: Fold Java5ClassFactory into ReflectClassesJava2

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1489314 13f79535-47bb-0310-9956-ffa450edef68"
be94230d3546899f28ffe258217b008768d2fa11,"DERBY-6213: Deprecate support for Java 5 and CDC

Use Java 6 library methods to simplify logic in some cases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1489348 13f79535-47bb-0310-9956-ffa450edef68"
c712a5b8374c0fc28dbedec71dd9ceef57ab34b2,"DERBY-6213: Deprecate support for Java 5 and CDC

Add @deprecated tag to the DataSource classes that have been removed
from the public API.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1489349 13f79535-47bb-0310-9956-ffa450edef68"
daaebdbdcb37bf4751567ce244274f2484d19bd3,"DERBY-6168: Clean up registered format ids

Remove entries that reference non-existing classes or classes that do
not implement the TypedFormat interface or the InstanceGetter interface.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1489354 13f79535-47bb-0310-9956-ffa450edef68"
951fa45bb965951da80f66952e4d0a88b190e956,"DERBY-6244 convert i18n/caseI_tr_TR.sql to JUni


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1489924 13f79535-47bb-0310-9956-ffa450edef68"
0d6fda9d8a1ff2aad69e7812d0b6fb081cf3f4c0,"DERBY-6246 convert i18n/urlLocale.sql to JUnit 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1490716 13f79535-47bb-0310-9956-ffa450edef68"
7f17ba1a4e0e76bdd1aa0734b515ec5386e43824,"DERBY-6256: Commit derby-6256-01-aa-move-XmlVTI-into-product.diff, moving the XmlVTI into the vti package of the product.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1490799 13f79535-47bb-0310-9956-ffa450edef68"
e3b570dd322c4b60c60d6a9177d98ec7ad1c8e0d,"DERBY-6246 convert i18n/urlLocale.sql  to JUnit

Correct extinout path resolution. Files were not getting deleted.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1491005 13f79535-47bb-0310-9956-ffa450edef68"
a98538edec35b03b6ccb73bbed710571c16b747f,"DERBY-6246: Fix javadoc warning

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1491364 13f79535-47bb-0310-9956-ffa450edef68"
97f7c7af7af711cccc8cc9e8cfb0f1a21ce6a9f6,"DERBY-6254: Reduce number of factory methods in StandardException

Generalize the factory methods by using varargs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1491366 13f79535-47bb-0310-9956-ffa450edef68"
23643e8a3660f8bfcad0d7ac156d3490a7dd65f9,"DERBY-6256: Commit derby-6256-02-aa-allowParentTags.diff, allowing XmlVTIs to inherit columns from outer xml elements in which the primary row element is nested.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1491490 13f79535-47bb-0310-9956-ffa450edef68"
8c41013721a4207a06d90c40615fb82a67ab1f2f,"DERBY-6255  convert i18n/messageLocale.sql



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1491542 13f79535-47bb-0310-9956-ffa450edef68"
c55d855c84af29bbfdba0d7385bce377616a4303,"DERBY-6255 convert i18n/messageLocale.sql

additional minor cleanup of use of literal extinout in UrlLocaleTest



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1491590 13f79535-47bb-0310-9956-ffa450edef68"
b6cc9d73b92275e25f231f80c4b0492a70d6821e,"DERBY-6211: Committed derby-6211-05-aa-xmlOptimizerTracer, which adds xml-based optimizer tracing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1491893 13f79535-47bb-0310-9956-ffa450edef68"
bb1cfcc146e389cceca8c30663c732061ce274fc,"DERBY-6158; mailjdbc test in networkserver configuration does not perform compress correctly if server is started in a different directory 
  updating the README.txt file


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1491950 13f79535-47bb-0310-9956-ffa450edef68"
86e7a0addbc42459bfa5ce45f431a38990ddc716,"DERBY-6255: convert i18n/messageLocale.sql

Reset the default locale when the test is done.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492088 13f79535-47bb-0310-9956-ffa450edef68"
13673bddb42525a5ae9704ca5de8e920b9616d9f,"DERBY-6114: OOME in XAMemTest.testDerby4137_TransactionTimeoutSpecifiedNotExceeded

Periodically run purge() on the cancellation timer to reclaim the
space occupied by cancelled tasks.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492094 13f79535-47bb-0310-9956-ffa450edef68"
29435de7f6ac85f280bba0ee053d6225aa1e8d51,"DERBY-6258: Restrict permissions on BACKUP.HISTORY

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492110 13f79535-47bb-0310-9956-ffa450edef68"
38c638d9487035ba6d57b1e84cc32457ee2b3d8a,"DERBY-6213: Deprecate support for Java 5 and CDC

- Remove checks for the JVMInfo.J2ME constant

- Move functionality from DirStorageFactory4 to the base class

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492111 13f79535-47bb-0310-9956-ffa450edef68"
923a60f9c672312452e7e2393430afb215ff5470,"DERBY-6213: Deprecate support for Java 5 and CDC

Remove constants for no longer supported Java versions in JVMInfo.

Remove checks for Java version where same action would be taken
for all supported Java versions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492116 13f79535-47bb-0310-9956-ffa450edef68"
bbd2a0173145e78c1778858a4a3295a2137cd9f4,"DERBY-6211: Commit derby-6211-06-ab-packageProtect-XMLOptTrace.diff, reducing the visibility of XMLOptTrace.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492378 13f79535-47bb-0310-9956-ffa450edef68"
585730d4c24cceb5aa4d64699c1fecfd6bdcbba7,"DERBY-4035 i18n tests fail with Lexical error on z/os

Complete conversion of i18nTest suite.
I18NImportExport change to ScriptTestCase
iepnegativetests_ES changed to extend tools/ImportExportProcedureTest which has 
conversion for iepnegativetests



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492393 13f79535-47bb-0310-9956-ffa450edef68"
b5f27763c7c2c9dc1d24eeb4ddf2d6673db8211e,"DERBY-1984: Re-factor JDBC classes to remove support for JDBC 2

Collapsed sub-classes of EmbedStatement by moving functionality
to the base class and removing specialized sub-classes for
JDBC 2.0, JDBC 3.0 and JDBC 4.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492544 13f79535-47bb-0310-9956-ffa450edef68"
2ae1afef523aefff51367b4b4e8adf82b5927cbf,"DERBY-6259: Commit derby-6259-01-aa-collapseOptimizers.diff, eliminating the level 2 optimizer.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492641 13f79535-47bb-0310-9956-ffa450edef68"
7f6b163b8af17ee861236e58810000bc18c50d0b,"DERBY-6259: Make optimizer fields private: tests passed cleanly on derby-6259-02-aa-increasePrivacy.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492766 13f79535-47bb-0310-9956-ffa450edef68"
80f5d3cd640124156e1130a5c3fe0a4aa4166339,"DERBY-6261; test getCurConnJdbc20.sql is no longer useful and can be removed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492870 13f79535-47bb-0310-9956-ffa450edef68"
9b69f6672e003506e3e1ab0f6555b494994867d0,"DERBY-4785; Remove JCC tests and references to JCC in test code
  Removing the last few files from the suites dir and the entire master/DerbyNet directory.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1492887 13f79535-47bb-0310-9956-ffa450edef68"
8251716446eb659969fd046a7cfeab1b16028e8b,"DERBY-6224: Many test failures on latest JDK 8 EA build because of missing SQLPermission

Continue shutdown if deregistering fails, and report the failure in derby.log.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1493077 13f79535-47bb-0310-9956-ffa450edef68"
91405aff2fdbb312ba4b3a3348e286b1e73768b8,"DERBY-6263: Make the Visitor logic inspect ORDER BY, FETCH, and OFFSET CLAUSES. Tests passed cleanly for me on derby-6263-01-aa-visit-ignored-clauses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1493123 13f79535-47bb-0310-9956-ffa450edef68"
aa5c5de5eb62b79a8519e216a711858161ed1072,"DERBY-6253: Collapse SQLException factories

- Move functionality from SQLExceptionFactory40 to SQLExceptionFactory

- Move logic for retrieving the exception factory from Util to
  ExceptionFactory in order to reduce compile-time dependencies on
  impl classes from iapi classes

- Use varargs in Util's helper methods in order to reduce the number
  of methods

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1493701 13f79535-47bb-0310-9956-ffa450edef68"
8514aa2013d181b6edfd2dc3dfd4c5a476dfcec1,"DERBY-1984: Re-factor JDBC classes to remove support for JDBC 2

Move methods supporting JDBC versions up to 4.1 into the base class
for the implementations of the following JDBC interfaces in the
embedded driver:

java.sql.ResultSet
java.sql.DatabaseMetaData
java.sql.ParameterMetaData
java.sql.ResultSetMetaData

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1493707 13f79535-47bb-0310-9956-ffa450edef68"
7043754f6419dda94fba1d4236660ed42c95637a,"DERBY-6253: Fix javadoc warning

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1493708 13f79535-47bb-0310-9956-ffa450edef68"
1f18dc31619390bfee7e71c55eb315db2bd7662b,"DERBY-6262: Simplify message-generating methods using varargs

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1493714 13f79535-47bb-0310-9956-ffa450edef68"
54d20ec0a3064b7acd58be9f828601a4b2cec6a4,"DERBY-6263: Add missing clauses to Visitor logic of SelectNode; tests passed cleanly on derby-6263-02-aa-ignored-clauses-in-SelectNode.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1493789 13f79535-47bb-0310-9956-ffa450edef68"
863daa05f92c2e531c3340dff6f1b6a8c525e8ba,"DERBY-1984: Re-factor JDBC classes to remove support for JDBC 2

Collapse BrokeredStatement, BrokeredConnection, EngineConnection and
EmbedConnection class hierarchies.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1494071 13f79535-47bb-0310-9956-ffa450edef68"
b197ffafa17a9fc627e87232016a488ee80fc358,"DERBY-6266: Add ability to print Derby execution ResultSet graph as xml.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1494115 13f79535-47bb-0310-9956-ffa450edef68"
65ffd9b1f5a61e60105eaa1e995322ee3f9589f6,"DERBY-6263: Add defensive code to Visitor support in SelectNode; tests passed cleanly on derby-6263-03-ab-defensiveNullChecking-in-SelectNode.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1494220 13f79535-47bb-0310-9956-ffa450edef68"
595307e2d7839dff5c6ffacf74f479ff686a8afa,"DERBY-1984: Re-factor JDBC classes to remove support for JDBC 2

Move all functionality from Driver20, Driver30 and Driver40 to
InternalDriver. Move all functionality from AutoloadedDriver40
to AutoloadedDriver.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1494482 13f79535-47bb-0310-9956-ffa450edef68"
e1a79c33113291fafe8dff00172625b02fc9c535,"DERBY-6262: Simplify message-generating methods using varargs

Use varargs in more constructors in SqlException and
DisconnectException. Since the message arguments in some of those
methods were not the last arguments, some reordering of arguments in
the callers was needed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1494541 13f79535-47bb-0310-9956-ffa450edef68"
572f3e8b63e5f5dd73ac2687869c4897b22a4424,"DERBY-6126: compatibility._Suite fails if derbyTesting.jar lives in different directory than product jars

Based on fix contributed by Kristian Waagan.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1494883 13f79535-47bb-0310-9956-ffa450edef68"
04d1513d418116979f7ee8a6e6ab1fa8b714b87a,"DERBY-6126: Fix javadoc warning

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1494901 13f79535-47bb-0310-9956-ffa450edef68"
a8f9739f28237cc81352a6987ff92ff03e3d5f6c,"DERBY-6211: Use schema-qualified names in plan summaries printed by the xml-based optimizer tracer; commit derby-6211-07-ab-useSchemaQualifiedNamesInSummaries.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1494954 13f79535-47bb-0310-9956-ffa450edef68"
c465481d7a09c47ab55247013cf9a1d13e864d02,"DERBY-6262: Simplify message-generating methods using varargs

Reduce number of methods that format messages in tools classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1495023 13f79535-47bb-0310-9956-ffa450edef68"
99ae840866cfb8d1619fa64d0c15ed9f02adcaa7,"DERBY-1984: Re-factor JDBC classes to remove support for JDBC 2

Remove version-specific sub-classes of EmbedPooledConnection and
EmbedXAConnection.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1495024 13f79535-47bb-0310-9956-ffa450edef68"
3bb140c798f2e5afae03749cd4ed328cdc50aa7d,"DERBY-673 Get rid of the NodeFactory

Patch derby-673-3.

a) Replaced the old init methods in ""*Node.java"" classes with
   constructors. Some logical node types have different ""C_NodeType""
   values in their nodeType field after construction but still share
   the same node class. I have not attempted to increase the number of
   node classes to match logical == physical node classes this
   once. Actually one class was removed because it unused:
   ""SQLBooleanConstantNode"". ""IsNode"" is also currently unused but
   there is a JIRA to make use of it (DERBY-5973), so I left it in
   place.

   Boxed argument types were replaced by primitive types except in a
   few cases where instanceof was used on them to detect type
   overloading; this could be gotten rid of by adding more
   constructors.

   Since the constructor arguments are now strongly typed, a great
   many casts were removed in the process and readability is improved
   a lot.

   In some cases the old init procedures did computations before
   calling ""super.init"". Since the call to the corresponding super
   constructor needs to be the first code in a constructor, I
   sometimes had to introduce new private static methods to compute
   the correct arguments to send on to the super class constructor,
   e.g. ""getTypeId"" in ""UserTypeConstantNode"". I think there is some
   redundancy here that could be removed in a follow-up patch.

   All the non-abstract node classes (still) set their corresponding
   ""C_NodeType"" value; but in many (most?) cases the field is no
   longer needed. This could be improved by removing them altogether
   and introduced class constants where needed to differentiate
   between logical node type mapped to one class. This is already done
   halfheartedly to some extent, e.g. enum ""Sign"" in ""IsNullNode"".

   The old ""tools/jar/DBMSnodes.properties"" file could be removed
   altogether since the node classes are now added automatically due
   to dependencies that the compiler can see (no longer constructed by
   reflection).

   The old nodeFactory method ""doJoinOrderOptimization"" was moved to
   the OptimizerFactory now that the NodeFactory has gone.

b) Added @Override tags to methods that override existing methods (not those
   that merely implement an interface)

c) Removed unused imports and sorted import statements for ease of future
   maintenance by IDEs

d) Renamed variables that shadowed class members

e) Replaced usage of StringBuffer with StringBuilder

f) Restricted public visibility to package private for all classes, methods and
   members in compile/impl unless they needed more visibility according to
   actual usage.

g) Made List arguments to node classes use generics in those cases it was
   missing.

e) Renamed some node types to make the the type mirror the node class correctly
   (there were only very few exceptions to that rule), e.g. LIKE_OPERATOR_NODE
   -> LIKE_ESCAPE_OPERATOR_NODE since the class is called
   LikeEscapeOperatorNode.

f) Reduced scope of some variables: initialized to null values never used long
   before actual usage in code. By moving the declaration closed to usage, the
   unnecessary initialization could often be removed.

g) Fixed some spelling errors in comments.

h) Renamed some SQL-related constants (StoredFormatIds, TypeId) from ""longint""
   "" to ""bigint"" to reflect Derby SQL syntax.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1495305 13f79535-47bb-0310-9956-ffa450edef68"
ab2cc4a686f92c5bab8a6982411d79dc7b48a466,"DERBY-673 Get rid of the NodeFactory

Patch derby-673-fixcomments; which fixes a couple of comments that
were accidentally changed by the first patch (""public"" keyword was
removed).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1495317 13f79535-47bb-0310-9956-ffa450edef68"
64521e8b5a87f5a267f1275369b9f2f64d625bb2,"DERBY-673: Fixed javadoc warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1495361 13f79535-47bb-0310-9956-ffa450edef68"
2e4b1b18c94008d59ee8ada4c96656f27b5f6865,"DERBY-6213: Remove more references to EmbeddedSimpleDataSource; tests passed cleanly on derby-6213-25-aa-remove-reflective-references-to-EmbeddedSimpleDataSource.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1495471 13f79535-47bb-0310-9956-ffa450edef68"
da3d219ad64cd229869d9627b30ffa542b0afe45,"DERBY-6268: Run-time statistics not collected if query contains always false predicate

Make ProjectRestrictResultSet.close() call super.close() so that the
logic for dumping run-time statistics gets executed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1495943 13f79535-47bb-0310-9956-ffa450edef68"
ddca784d39f341a43b55def486c14918109981f5,"DERBY-6272: LoginTimeoutTest fails if server is missing

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1496406 13f79535-47bb-0310-9956-ffa450edef68"
b5a921a8be79ba72dadb0ea05c1f7f9a20fec5ef,"DERBY-6262: Simplify message-generating methods using varargs

Reduce number of trace methods in LogWriter using varargs and
auto-boxing.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1496410 13f79535-47bb-0310-9956-ffa450edef68"
434e1655b2c2e96c37880c44e93c5bc94496a1f7,"DERBY-6262: Simplify message-generating methods using varargs

Use varargs in EmbedConnection.newSQLException() and
ConnectionChild.newSQLException().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1496449 13f79535-47bb-0310-9956-ffa450edef68"
cd5717c780b8b41031ed25c3efeb4aafcc410b3a,"DERBY-6273: NullPointerException when using more than one parameter in COALESCE

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1496837 13f79535-47bb-0310-9956-ffa450edef68"
b06ac7aeb94196b200f4c037b439deae8e509a09,"DERBY-1997: Remove custom exception printing methods and replace with printStackTrace as suggested

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1496870 13f79535-47bb-0310-9956-ffa450edef68"
62907283eecdf6d88372f643231d7e7c66378576,"DERBY-6264: Improve test coverage of org.apache.derby.iapi.db.PropertyInfo

This patch was contributed by Ahsan Shamsudeen (ahsan dot competition at gmail dot com)

This patch removes several unused methods from the PropertyInfo class. These
classes were part of the original Cloudscape SQL-J language many years ago,
but are not used in Derby.

Removing the unused methods simplifies the class. Should we ever decide to
revive the features of the SQL-J language, we can recover these methods from
the older versions of the class in Subversion.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1497205 13f79535-47bb-0310-9956-ffa450edef68"
9bf29d2d2007bfa19d22f494e22fd05a9150a7c6,"DERBY-673: Get rid of the NodeFactory 

Remove an erroneously re-introduced ""public"" keyword from method
getParameterTypes. This removes a FindBugs warning about ""exposing
internal representation by returning reference to mutable object"".



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1497230 13f79535-47bb-0310-9956-ffa450edef68"
866d96b3987f63b3dbcbc0c9065955ddccb2bccf,"DERBY-6211: Fix NPE in xml-based optimizer tracing; committing derby-6211-08-aa-fixNPE.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1497537 13f79535-47bb-0310-9956-ffa450edef68"
e1f49caa894e522705f3254a44761a24451125d9,"DERBY-673: Get rid of the NodeFactory

Patch derby-673-typesafe-lists-2, which introduces generics to the
lists based on QueryTreeNodeVector. I also let the latter implement
the Iterable interface, which opens up for using Java 6 ""foreach""
syntax in many cases. The patch makes use of this. Together, these
changes enables many casts to be eliminated and code clarification in
the compiler implementation.

It also removes most -Xlint warnings from impl/sql/compile classes, so
it should be ready to run with full lint.

Diffstat summary:
63 files changed, 854 insertions(+), 1236 deletions(-)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1497644 13f79535-47bb-0310-9956-ffa450edef68"
57f2b05c18ef54f30a30fd52d418cd9da6b3e3fa,"DERBY-673: Get rid of the NodeFactory

Followup fix to patch derby-673-typesafe-lists-2. The patch introduced
an issue causing ConcurrentModificationException. Roll back that change.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1497742 13f79535-47bb-0310-9956-ffa450edef68"
5ae7bc1026c1ab31bf1067f4c0448b0fd5366698,"DERBY-673: Get rid of the NodeFactory

Followup fix to patch derby-673-typesafe-lists-2. The patch introduced
a bug in FromSubquery: wrong loop upper bound. Roll back that change.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1497767 13f79535-47bb-0310-9956-ffa450edef68"
a56ecfa31c1400e7113a6b3e28477a1c06b56f86,"DERBY-6267: Add first rev of complete plan overrides; merged derby-6267-01-ae-compactSyntax.diff to head of trunk.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1499012 13f79535-47bb-0310-9956-ffa450edef68"
cfa33f59858da6abd25e3248629fb43b511c4169,"DERBY-5979: Part b: 1)  Make properties.dir absolute by prepending ${basedir}. This way the release-targets work even when cwd is not equal to ${basedir} (as could be the case when invoking those target from within an IDE). 2) Change the value of derby.junit.jvm from java to ${java.home}/bin/java. This ensures that junit-ant-tasks work even if invoked from an environment (such as an IDE) where the JAVA_HOME jvm may be different from the first jvm in PATH.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1499244 13f79535-47bb-0310-9956-ffa450edef68"
8032298dd0eec06d1826ff2d89c0573e81ae617b,"DERBY-6114: Fold Java5SingletonTimerFactory into SingletonTimerFactory

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1499256 13f79535-47bb-0310-9956-ffa450edef68"
daaa04666ffa6ece04f5ab9a78caab0560352602,"DERBY-6285: Use factory method to create thread pool for timed login

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1499257 13f79535-47bb-0310-9956-ffa450edef68"
93fd82e115124755aa598feee896a231089fa603,"DERBY-5979: Part a: Do not use \n to terminate lines in Apache License header String constant and instead join the line strings with the value of line.separator property.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1499287 13f79535-47bb-0310-9956-ffa450edef68"
edd6d3c8f69dc4c81bea245e3be4e26ed4f153c4,"DERBY-6287: Don't use reflection to call Java 6 methods in FileUtil

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1499317 13f79535-47bb-0310-9956-ffa450edef68"
3397f9f0920679b9cfcf4c495a05144201c015c8,"DERBY-6256: Make XmlVTI take a file name argument rather than a file URL argument; commit derby-6256-03-aa-useFileNotURL.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1499484 13f79535-47bb-0310-9956-ffa450edef68"
23e89ebd15ab1a666488c4c62f216edb9c2e7f86,"DERBY-6211: Add basic tests for xml-based optimizer tracing; tests passed cleanly on derby-6211-09-aa-addTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1500056 13f79535-47bb-0310-9956-ffa450edef68"
e1c9e2b761b08e29f28c1ea5756346da8cc4b855,"DERBY-6167: Interrupt restarts clock for login timeout

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1500585 13f79535-47bb-0310-9956-ffa450edef68"
a368514ed9818d760575932b12998aab183c3b1f,"Ignore jacocoant.jar and jacocoagent.jar in git

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1500650 13f79535-47bb-0310-9956-ffa450edef68"
d08ab9b87a1b0a9ecb6e7cb7a8b136740463bdfd,"DERBY-6256: Add basic tests for XmlVTIs, including a new way to create XmlVTIs from url strings; tests passed cleanly on derby-6256-04-aa-addURLFactoryMethodAndTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1500706 13f79535-47bb-0310-9956-ffa450edef68"
478d624cbd15ed3cb2f071639070ba2dba2d2467,"DERBY-6288: Skip 10.0.2.1 upgrade test with JaCoCo

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1501096 13f79535-47bb-0310-9956-ffa450edef68"
bbb545efcd8af459b33241813e9eb3f1bdda7fde,"DERBY-6267: Count row sources in optimizer overrides at optimize() time rather than bind() time; add more tests for optimizer overrides; tests passed cleanly on derby-6267-02-aa-moreTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1501411 13f79535-47bb-0310-9956-ffa450edef68"
a80adcad69e2f3a3635d6aa04594e1b3dd837af0,"DERBY-6267: Add optimizer override tests for more kinds of subqueries; tests for derby-6267-03-aa-moreSubqueryTests.diff passed cleanly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1501891 13f79535-47bb-0310-9956-ffa450edef68"
44db2d0ad2faf83c24d8f1dfe2c5682b3d23de42,"DERBY-6284: Improve test coverage of org.apache.derby.iapi.db.ConnectionInfo

This patch was contributed by Ahsan Shamsudeen (ahsan dot competition at gmail dot com)

This patch removes the method lastAutoincrementValue from the ConnectionInfo
class. This method is no longer part of the public Derby API; Derby
applications should be using java.sql.Statement.getGeneratedKeys() instead.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1502089 13f79535-47bb-0310-9956-ffa450edef68"
e44d6245f49ae0cb1c5693277d6967cc13bc415a,"DERBY-6267: Fix javadoc warning

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1502155 13f79535-47bb-0310-9956-ffa450edef68"
a2f00b4a3a7c213e2b2c09dba239e70b806d6d71,"DERBY-6283 indexStat daemon processing tables over and over even when there are no changes in the tables in soft upgraded database.

Changed system to always drop orphaned stats during update statistics call.  

Without this change soft upgraded systems running on 10.8 or higher derby 
software, that had an orphaned statistic would spin forever in the index 
stat daemon due to the same problem fixed by DERBY-5680 for hard 
upgraded databases.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1502319 13f79535-47bb-0310-9956-ffa450edef68"
2a4654bba0315686b7569e5365b32c78cf111442,"DERBY-6216: XPLAIN feature does not work, gives XCL16: ResultSet not open

This change adjusts the implementation of the explain-only mode feature,
which is enabled via syscs_util.syscs_set_xplain_mode(1).

Prior to this change, the implementation short-circuited the open() method
of the ResultSet classes, causing the execution engine to terminate
immediately because the result sets were not open.

This change takes an alternate approach, suggested by Knut Anders: the open()
is allowed to proceed normally, but we short-circuit the getNextRow()
method of the ResultSet classes. This way, the result sets all appear to be
normal result sets, open and ready for business, but they do no work and
always produce an empty result.

Then, at the end of the execution, the statistics are gathered. They show
that no work was done, but they contain information about the overall ""shape""
of the query plan (which result sets were constructed, and what the overall
result set tree looks like).

We also discovered that we were completely missing regression tests for the
explain-only feature, so this change adds a handful of regression tests,
including an IJ-based test, a simple embedded query, and a test that verifies
that explain-only mode can be turned on and off between executions of a
prepared query.

More testing would clearly be beneficial, but this should at least give us
a feature that basically works.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1502795 13f79535-47bb-0310-9956-ffa450edef68"
801cf0d354e0fae9e30dbba9a1ca157f6c0eb0f6,"DERBY-673: Get rid of the NodeFactory

Patch, derby-673-more-typesafe-6. This cleans up most compiler
warnings in the classes touched, including unnecessary casts due to
changes introduced by this use, but also others.  Some warnings were
silenced using the @SuppressWarning tag (mostly use of old classes
like Vector, Hashtable), in other cases the underlying problem was
fixed by changing the code as required.

It also introduces an explicit TriggerDescriptorList class extending a
generified GenericDescriptorList<TriggerDescriptor>.

Some local variables shadowing others are renamed and in in case
the two variables were merged into one.

I left in place warnings about missing serialVersionUID in
serializable classes since I am not sure whether they can be safely
suppressed; it would need further analysis.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1502965 13f79535-47bb-0310-9956-ffa450edef68"
99c48bc061860b57dadf3f2897cbbb8965b2151d,"DERBY-4478: Use AtomicLong for XactFactory.tranId

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1503157 13f79535-47bb-0310-9956-ffa450edef68"
473d692ea94c2cc625fed807c2fa69549797420b,"DERBY-6292: Use Arrays.copyOf() in FormatableArrayHolder.getArray()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1504808 13f79535-47bb-0310-9956-ffa450edef68"
221abb6f4e9735b1333db4ae5d2ee7caa7f5b9e1,"DERBY-6296: Simplify PropertyUtil using Properties.stringPropertyNames()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1504809 13f79535-47bb-0310-9956-ffa450edef68"
077d16c4bf4a3cf46927ad20e5fccda9aee5bf54,"DERBY-2091: Increase coverage for StatementEventsTest

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1504820 13f79535-47bb-0310-9956-ffa450edef68"
63729073dad740153e675b6723787657589b63ae,"DERBY-1028: Change constructors in NetConnection classes to use LogWriter instead of NetLogWriter

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1505928 13f79535-47bb-0310-9956-ffa450edef68"
8eb8753dac26469198279cf3719a033e592dfedf,"DERBY-6267: Add tests for compact optimizer overrides on queries with FETCH/OFFSET clauses; commit derby-6267-04-aa-fetchOffsetTest.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1506054 13f79535-47bb-0310-9956-ffa450edef68"
2706d1f7201e57c2ad41aa0e79d77166bddf477d,"DERBY-673: Get rid of the NodeFactory

Patch derby-673-nuke-ctypes-without-enum-3.

This patch removes the usage of the global nodeType integer (see
QueryTreeNode) defined by C_NodeType.java. After the removal of the
node factory, this global quantity whose use mimicked ""instanceof"" can
be discarded, mostly. For some node which represent several logical
node types, e.g. BinaryArithmeticOperatorNode which can represent for
example both + and minus, a new quantity, ""kind"" is introduced to
differentiate between the logical types of nodes.

We introduce a default method ValueNode#isSameNodeKind which the
classes that implement several kinds need to override to add the extra
kind check. This is then called from the isEquivalent overrides as
needed.

JavaDoc for isSameNodeKind:

/**
 * Some node classes represent several logical node types (to reduce
 * footprint), which we call kinds.
 * This means that implementations of {@link #isEquivalent()}
 * cannot always just use instanceof to check if the other node
 * represents the same kind. Hence this method needs to be
 * implemented by all node classes that represent several kinds.
 * It is only called from implementations of isEquivalent.
 *
 * @param other The other value node whose kind we want to compare with.
 * @return true if this and o represent the same
 *         logical node type, i.e. kind.
 */

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1506827 13f79535-47bb-0310-9956-ffa450edef68"
eb88678a9d52db210c75059af801feea4c5d15dd,"Java doc warning fixes

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1506885 13f79535-47bb-0310-9956-ffa450edef68"
19aa0ac9fcf3b9999bf5fde677373bb31113b181,"Java doc fix

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1506904 13f79535-47bb-0310-9956-ffa450edef68"
1cb370904504cc091f0c9edf35880bf479b95062,"DERBY-6304: Remove unused methods in Predicate

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1507211 13f79535-47bb-0310-9956-ffa450edef68"
c95594cca20ccd5143e62c14c8e969cf37ccbf53,"DERBY-4378: Create test cases for MultiProbeTableScanResultSet with duplicates in the probe list

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1507212 13f79535-47bb-0310-9956-ffa450edef68"
c7eddf684898f930a02c845435d996ada4583e51,"DERBY-6295: Allow tests to show detailed error when spawning new process fails

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1507215 13f79535-47bb-0310-9956-ffa450edef68"
7eac2106219e99685aaaf3a8dadada1b17acb83c,"DERBY-6291: Improve test coverage of org.apache.derby.iapi.jdbc.BrokeredCallableStatement

This patch was contributed by Ahsan Shamsudeen (ahsan dot competition at gmail dot com)

This patch adds a collection of test cases which exercise the ""named
parameters"" APIs in the CallableStatement interface. Currently, these APIs
are not implemented by Derby, and stub implementations are present in
BrokeredCallableStatement, LogicalCallableStatement, ClientCallableStatement,
and EmbedCallableStatement.

These stub implementations are now exercised by the CallableTest test suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1507337 13f79535-47bb-0310-9956-ffa450edef68"
1942bd1f42faff265ce896faa9e0f57df040392f,"DERBY-6294 On z/os on some machines:testAttributeDrdaHost(org.apache.derbyTesting.functionTests.tests.management.NetworkServerMBeanTest)junit.framework.AssertionFailedError 

Improve message when failure occurs. This does not fix the issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1507368 13f79535-47bb-0310-9956-ffa450edef68"
7b87db0674fdb92e2ebf23356c313afe7feedb94,"DERBY-673: Get rid of the NodeFactory

Javadoc fix.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1507747 13f79535-47bb-0310-9956-ffa450edef68"
c360fc0b74160209178385863fc5279982ccf7a4,"DERBY-6294  On z/os on some machines:testAttributeDrdaHost(org.apache.derbyTesting.functionTests.tests.management.NetworkServerMBeanTest)junit.framework.AssertionFailedError

Add IPV6 loopback address (0:0:0:0:0:0:0:1) to test


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1508853 13f79535-47bb-0310-9956-ffa450edef68"
626de50a13c4956fe36010413e593aee205ced14,"DERBY-6308: Correct type in the license header of OptimizerOverridesTest; commit derby-6308-01-aa-correctLicenseHeader.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1509000 13f79535-47bb-0310-9956-ffa450edef68"
744dc8beede3f687b803f5002ad0f4436cf16a15,"DERBY-5865 On IBM 1.7 TestDurabilityProperty fails with FAIL -- derby.system.durability=test mode seems to be broken. 

Add timing values to fail output to make test easier to debug.
Does not fix the issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1509348 13f79535-47bb-0310-9956-ffa450edef68"
6a270cbc09d9c007e0ad9dfba120c69a55122127,"DERBY-6211: Don't instantiate new optimizers just to create empty CostEstimate objects; commit derby-6211-10-aa-makingCostEstimateObject.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1509671 13f79535-47bb-0310-9956-ffa450edef68"
9881ca44cbe7b515f315f20d7d83b735840f2e48,"DERBY-6211: Move the tracer out of the optimizer; tests passed cleanly on derby-6211-11-ab-moveTracerOutOfOptimizer.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1509815 13f79535-47bb-0310-9956-ffa450edef68"
3c3e7dbfdd405ebfd650c3fdc362fa95fb7f2fa5,"DERBY-6211: Trace the end of optimizing a query block so that the xml-based optimizer tracer can associate trace information with the correct query block; commits derby-6211-12-aa-traceEndOfQueryBlock.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1511315 13f79535-47bb-0310-9956-ffa450edef68"
270c77b20db418493eaac566629e9a09edc23165,"DERBY-6211: Mark the end of join optimization with a call to traceEndQueryBlock(); commit derby-6211-13-aa-SelectNode_optimizer.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1512294 13f79535-47bb-0310-9956-ffa450edef68"
b4177107285e33dbe1ed123c930fb6e15428b94f,"DERBY-5560 Java deadlock between LogicalConnection40 and ClientXAConnection40

Patch contributed by Brett Bergquist



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1513218 13f79535-47bb-0310-9956-ffa450edef68"
4cc167fae1d323f6e657329c8fd169b6e85a5233,"DERBY-4628: Replace the Derby jargon term territory with the more familiar term locale in some Derby messages; commits derby-4628-01-ab-useLocaleInMessagesRatherThanTerritory.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1514387 13f79535-47bb-0310-9956-ffa450edef68"
7e51e9dee30476b9d0f35203c5fe1e58e7bcbd2b,"DERBY-6299: Improve code coverage of org.apache.derby.iapi.services.sanity

This patch was contributed by Ahsan Shamsudeen (ahsan dot competition at gmail dot com)

This patch removes the classes SanityManager and AssertFailure from the
org.apache.derby.iapi.services.sanity package, replacing all uses of those
classes with references to the same-named classes in the
org.apache.derby.shared.common.sanity package.

This change is a follow-on to DERBY-1115, which moved the body of these
classes to the new location, but left the old classes around as wrappers.

Removing the wrapper classes simplifies the code, but is not intended to have
any other effect. There are no known bugs fixed by these changes, although
as pointed out during review, there may be behavior changes as a result of
this change. For example, code which specifies

	if (re instanceof AssertFailure)

may have different behavior now, since it is testing for an instance of the
underlying type, not an instance of the wrapper type.

This change affects a large set of files, but the change itself is quite simple.

Each of the files has a diff roughly like:

-import org.apache.derby.iapi.services.sanity.SanityManager;
+import org.apache.derby.shared.common.sanity.SanityManager;
 
In addition to modifying the import statement in all such .java files, we are
also deleting the two files

D       java\engine\org\apache\derby\iapi\services\sanity\AssertFailure.java
D       java\engine\org\apache\derby\iapi\services\sanity\SanityManager.java

These two files, left over from DERBY-1115, are trivial wrappers around the
same-named classes in o.a.d.shared.common.sanity package.

So all we're doing, then, is following up on DERBY-1115 by fixing the import
statements and removing the two wrapper classes.

So it's a big change, but conceptually quite simple.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1514927 13f79535-47bb-0310-9956-ffa450edef68"
b37283b3d704f980fea3b4186783fbfd99456a21,"DERBY-6299: Remove org.apache.derby.iapi.services.sanity package.

This change is a followup to revision 1514927 and removes the javadoc warnings.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1514936 13f79535-47bb-0310-9956-ffa450edef68"
59a01fea3b0d0cc1c6aa151e958d84feddf10e03,"DERBY-4628; The Derby docs would be clearer if we replaced our jargon term ""territory"" with the term ""locale"" which is used commonly across the Java ecosystem.
  Updating a master which reflects the modified message text.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1515604 13f79535-47bb-0310-9956-ffa450edef68"
96c158598c8f5689420f17ce5376a8ade0de420a,"DERBY-2999; convert lang/lockTable.sql to Junit
  converted the test lang/lockTable.sql to lang/LockTableTest.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1515691 13f79535-47bb-0310-9956-ffa450edef68"
61661c1091ecc56cb888a68e853dcaaa8631572e,"DERBY-2999: Fix javadoc warning

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1515737 13f79535-47bb-0310-9956-ffa450edef68"
661c2e6c456ac261cbcaff6e0832de9e93ea2b87,"DERBY-3155: Add grammar and bind logic for MERGE statement; commit derby-3155-01-ac-grammar.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1516157 13f79535-47bb-0310-9956-ffa450edef68"
54655611dcf48b2f2e74ed42636162d74559c2fd,"DERBY-6213: Deprecate support for Java 5 and CDC

Remove reflection code that guards access to the BigDecimal class,
which is now available on all supported platforms.

Remove J2SEDataValueFactory and move all functionality to the base
class DataValueFactoryImpl.

Remove initalization code for DECIMAL in DataValueFactory.boot(), no
longer needed since there is just a single implementation of the
DECIMAL type.

Make the parser represent DECIMAL literals as BigDecimals instead of
Strings.

Remove now unused methods in DataValueFactory for constructing
SQLDecimal values from String values.

Clean up references to CDC in comments.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1516715 13f79535-47bb-0310-9956-ffa450edef68"
81d9f9df248d5db2193b2496791e90d4e68f7162,"DERBY-6307: Improve code coverage of org.apache.derby.iapi.services.info

This patch was contributed by Ahsan Shamsudeen (ahsan dot competition at gmail dot com)

This patch adds several tests which directly exercise the utility methods in
org.apache.derby.iapi.services.info.JVMInfo.

Note that the precise code paths that are tested by these new test cases will
depend on the configuration of the test environment, since the JVMInfo code
is highly sensitive to the user's JDK level and JDK vendor.

The only JVMInfo method not directly tested at this point is javaDump,
which is a bit delicate to directly test because exercising this method can
give the appearance that a fatal error has occurred, which might confuse
somebody running the tests into thinking there was a real crash instead of
just an artificial execution of javaDump. So testing that method is deferred
until a later date.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1517149 13f79535-47bb-0310-9956-ffa450edef68"
e6ea6446ed9a9f6363ba9b682536f0db6c5e1e61,"DERBY-6314: Upgrade from 10.10 fails with ClassCastException

Make sure stored plans for metadata queries are cleared the same
way as trigger plans during upgrade, so that upgrade doesn't fail
if the format of the old metadata plans cannot be read by the new
version.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1517533 13f79535-47bb-0310-9956-ffa450edef68"
489530b1ca52d8f8b240d8d713d5ba94f93d7427,"DERBY-6314: Upgrade from 10.10 fails with ClassCastException

Make ExecRowBuilder implement the Formatable interface so that any
Formatable instances referenced from its fields are stored using
Formatable logic instead of Serializable logic.

Add type checking in FormatIdInputStream's error handlers to prevent
the underlying exception from being shadowed by a ClassCastException
under certain circumstances.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1517761 13f79535-47bb-0310-9956-ffa450edef68"
09bee7db56add7dce137134c926aae6f58253d12,"DERBY-532 Support deferrable constraints

Patch derby-532-syntax-binding-dict-all-1. This patch wires in the syntax
for deferred constraints (aka ""constraint characteristics""). It also
does

- binding checks for CREATE TABLE constraints and SET constraints
  statement (new). Binding is still missing for ALTER TABLE
  constraints clauses.

- temporarily throws not yet implemented (0A000.S) for all usage
  *except* when characteristics coincide with the current (and future)
  Derby defaults, i.e. NOT DEFERRABLE [INITIALLY IMMEDIATE] ENFORCED

- checks inconsistencies in characteristics (illegal combinations), cf.
  42X97 ""Conflicting constraint characteristics for constraint""

- implements implied DEFERRABLE of (only) INITIALLY DEFERRED is
  specified.

- if the property ""derby.constraintsTesting"" is set, persists
  characteristics to dictionary by overloading the existing STATE
  character according to specification. This property will go away
  once the feature set is implemented, only implemented not to be able
  to test dictionary persistence

- throws 42XAK ""Constraint characteristics not allowed for NOT NULL.""
  for NOT NULL characteristics since this constraint type is not
  explicitly implemented as a constraint in Derby (yet, at least)

- adds a new test, ConstraintCharacteristicsTest to test the above and
  wires it into the lang suite.

(part 2):
- Elaborates ALTER TABLE ALTER TABLE, correcting syntax, adding name
  binding and updating dictionary (subject to the property
  derby.constraintsTesting) in a new AlterConstraintConstantAction
  class.

- Built out tests in ConstraintCharacteristicsTest to systematically
  check all possible characteristics combinations in all cases, and
  adding tests for ALTER TABLE ALTER TABLE, including dictionary
  updates.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1517823 13f79535-47bb-0310-9956-ffa450edef68"
643e68c9a99bf42b30075bd09da416ed6d132ce1,"DERBY-6297: Intermittent failures in XplainStatisticsTest.testSimpleXplainOnly

Make AccessDatabase.schemaExists() close the ResultSet.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1518111 13f79535-47bb-0310-9956-ffa450edef68"
9850fb9a96ab5d802c760c9cd1328d6fa3618549,"DERBY-6306: XplainStatisticsTest.testSimpleQuery: BEGIN_COMP_TIME unexpectedly NULL

Clear the statement cache between test cases so that statements from
earlier test cases don't affect the results.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1518533 13f79535-47bb-0310-9956-ffa450edef68"
638cea5ec7403363f454b7f82580f82125adca81,"DERBY-6318: Simplify setting of possibly null parameters in XPLAIN descriptors

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1518534 13f79535-47bb-0310-9956-ffa450edef68"
537fdabe84ce6a09a46b3c8f2bb07c298ddf8060,"DERBY-5553 System property for client tracing -Dderby.client.traceDirectory does not work with XADataSource 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1518766 13f79535-47bb-0310-9956-ffa450edef68"
7ff75059c9bfc83ac22a878a7877aaea779f838b,"DERBY-6321: NetBeans project file: add XML api to source classpath

Patch derby-6321: Now that the Derby source code has been modernized
on trunk, there are less red squiggles seen in the NetBeans project
view: the old mix of Java source level versions in different parts of
Derby made the IDE confused.

There are still a few remaining red warning flags to be seen: one is
in classes that reference the XML api.  Adding
""${project.dir}/tools/java/xml-apis.jar"" to the project file's source
classpath gets rid of those warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1519006 13f79535-47bb-0310-9956-ffa450edef68"
b89bd48b39d8d2cf1f5a5d5804aa8dc695248a88,"DERBY-6322: Remove erreoneous warning in NetBeans: superfluous use of super to access inherited member variable

This code in SortBufferScan makes NetBeans (7.4beta) issue a warning:

return (super.current != null);

""Incompatible types: boolean is not a functional interface <identifier expected>
; expected""

Patch derby-6322 removes the redundant ""super."" prefix.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1519007 13f79535-47bb-0310-9956-ffa450edef68"
ae2d0e55f7ea80785d6746228c518ceaf1568230,"DERBY-6276: Convert lang/DB2IsolationLevels.sql to JUnit

Patch which performs the conversion.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1519008 13f79535-47bb-0310-9956-ffa450edef68"
00df88c3ac8b24cb4586010ca2057fa01cd6285e,"DERBY-532: Support deferrable constraints

Patch derby-532-testAlterConstraintInvalidation.

Adds a fixture to test that prepared statement is invalidated when a
table its depends on undergoes an ALTER TABLE ALTER CONSTRAINT
statement. As it turns out, this is already handled by the common
machinery for ALTER TABLE.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1519045 13f79535-47bb-0310-9956-ffa450edef68"
b6cdb88b8a6e69493cd4363f1801188ceac1a575,"DERBY-6324; DatabaseMetaData.getJDBCMinorVersion() should return 2 now that we've implemented JDBC 4.2
  Adding logic to JVMInfo to identify the supported JDBC level based on the 
  (currently supported) JVM versions, which then is used in the client and embedded drivers.
  Tests are changed to reflect this.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1519785 13f79535-47bb-0310-9956-ffa450edef68"
5950015c0d9bea73ae25b7ed50d1bcb6b8204928,"DERBY-6276; Convert lang/DB2IsolationLevels.sql to JUnit
  giving svn delete another go to remove master and .sql. Also removing test from derbylang.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1519870 13f79535-47bb-0310-9956-ffa450edef68"
f668d94de58a55f31318cfe288b5d57ec9b5d8d2,"DERBY-6323: Fix incorrect @throws and @exception tags in javadoc

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1519954 13f79535-47bb-0310-9956-ffa450edef68"
b25e3a7880ec2bf24aa035e64a109ed84970550e,"DERBY-6317 Optmizer can choose the wrong path when BTreeCostController.java returns an estimate cost and row count of 0.0 

The Optimizer estimates do not handle well 0 row counts coming out of store.
These estimates end up getting multiplied by other estimates and the resulting
0 costs caused the incorrect plan to be picked in the repro included with
this fix.  This fix changes store cost to always return at least a minimum
of one row when asked to estimate the number of rows in an exact range of
keys from an index.  This minimum is consistent with the optimizer assumption
that an exact key match on a unique index will also return 1 row.

Thanks to Brett Bergquist for debugging and suggesting a fix and to mamta 
satoor for providing a reproducible test case for the bug.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1521310 13f79535-47bb-0310-9956-ffa450edef68"
54dce4451acaa2df512b538ad8c1ce08dda1fa9e,"DERBY-6330: Simplify StringBuffer use, as they are mutable

Patch contributed by Dave Brosius.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1521816 13f79535-47bb-0310-9956-ffa450edef68"
84cc283ad61509e72d98c48ebf1552cda99e821b,"DERBY-6315: Improve test coverage of org.apache.derby.impl.io.InputStreamFile

This patch was contributed by Ahsan Shamsudeen (ahsan dot competition at gmail dot com)

This patch removes the unused method StorageFile.length().

The length method is removed from the StorageFile interface, as well as
from the InputStreamFile, JarDBFile, and CorruptFile implementations.

The method was not called anywhere, and removing it simplifies this area
of the Derby code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1523334 13f79535-47bb-0310-9956-ffa450edef68"
b9b6cd81fa136ed08eb4beb90d2ce86599f696f3,"DERBY-5866( testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest) junit.framework.AssertionFailedError:matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW )

Move the cleanup code from tearDown() to setup() so that if a test fixture fails, we will have the left over wombat database with the schema and data used by the failing fixture for further debugging.





git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1523501 13f79535-47bb-0310-9956-ffa450edef68"
8d0da4fe9bb1d870a22694b54e90b26b630e49b1,"DERBY-5866( testFiringConstraintOrder(org.apache.derbyTesting.functionTests.tests.lang.TriggerTest)junit.framework.AssertionFailedError: matching triggers need to be fired in order creation:1,NO CASCADE BEFORE,DELETE,ROW)

As per Knut's recommendation, moving cleanup of TRIGGER_INFO back to tearDown(). Otherwise, the info from the last test case in TriggerTest won't be released until the JVM terminates. I don't expect it to take up a huge amount of memory, but with the big number of tests in suites.All unreleased data structures could accumulate and cause OOME.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1523821 13f79535-47bb-0310-9956-ffa450edef68"
1725dd14b63de6717b2157e30242b1fce1fd8de1,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Add the WHEN clause syntax to the grammar and wire it together with the
existing partial code for the WHEN clause.

Make RowTriggerExecutor and StatementTriggerExecutor execute the WHEN
clause and use the result to decide whether the trigger action should
be executed.

Add some basic positive tests for the currently supported subset of the
functionality.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1523965 13f79535-47bb-0310-9956-ffa450edef68"
c3f6b1be087031bd2e6344348bd2d4d4feeef14f,"DERBY-6346: Dump wrapped Java exceptions to derby.log; tests passed cleanly on derby-6346-01-aa-logJavaException.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1524026 13f79535-47bb-0310-9956-ffa450edef68"
3249e7733839797302d24e6460ae8f5ee2adda59,"DERBY-6346: Fix LEFT JOIN involving a table with a generated column; tests passed cleanly on derby-6346-02-aa-generateNullForLeftJoins.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1524194 13f79535-47bb-0310-9956-ffa450edef68"
0bc529bd114e99ffa8354c87029bb60565b58976,"DERBY-3155: Remove spurious comma from grammar production for multiple WHEN [NOT] MATCHED clauses in MERGE statement; tests ran cleanly on derby-3155-02-ag-fixParserWarning.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1524432 13f79535-47bb-0310-9956-ffa450edef68"
37ad9f3534104ecaa0920f041bebd85ac5f270fd,"DERBY-6349 DaylightSavingTest - java.security.AccessControlException



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1524579 13f79535-47bb-0310-9956-ffa450edef68"
db60062ac410d5d0708674b7d089d8a55dd2898a,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Move common logic for executing WHEN clause and trigger action to the
base class GenericTriggerExecutor. In addition to reducing code
duplication, the change makes row triggers reuse the prepared
statement for the WHEN clause (same as it already does for the trigger
action), and it makes statement triggers not leave the before and
after result sets open if the WHEN clause evaluates to false.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1524645 13f79535-47bb-0310-9956-ffa450edef68"
b79920cce88f7cb842025b52967da820c237bd57,"DERBY-6338; Remove Profile attribute from jar file manifests
  removing the Profile=compact2 lines added with DERBY-5955.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1525061 13f79535-47bb-0310-9956-ffa450edef68"
75fbb86586cf9fdaefbb883e6daff51410818fb1,"DERBY-534: Add a disabled test case for NPE with subquery in WHEN clause

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1525819 13f79535-47bb-0310-9956-ffa450edef68"
8c02f7457b0041a3700b143ff8587c43134a51f7,"ServerPropertiesTest prints .java.net.SocketException: Connection reset to console but test passes 

Remove e.printStackTrace() of error if log writer is null, unless derby.drda.debug is true



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1526172 13f79535-47bb-0310-9956-ffa450edef68"
29f83260ad648eabfdbda8f60b3be274f3ac4be0,"DERBY-6351: Syntax error on equal transition table name and correlation name in statement trigger

Change how CreateTriggerNode.bindReferencesClause() checks for the
lack of a correlation name. Instead of checking it indirectly (and
unreliably) by seeing if the table name matches the base table name,
check directly if the correlation name is null.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1526406 13f79535-47bb-0310-9956-ffa450edef68"
dfb19f248810261aa8ff1aefcb0222276eeef61b,"DERBY-6146 testMultipleLastKeyWaitsInMaxScan(org.apache.derbyTesting.functionTests.tests.store.IndexSplitDeadlockTest)junit.framework.AssertionFailedError: Column value mismatch @ column '1',

Check that locks have been taken as expected instead of always just waiting one second to avoid intermittent failure



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1526569 13f79535-47bb-0310-9956-ffa450edef68"
d9878ca0e7ef3de5e19f7b11710322832125513e,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Allow references to transition variables and transition tables in the
WHEN clause. To support this, a new column WHENCLAUSETEXT is added to
the SYS.SYSTRIGGERS table, and a corresponding field is added to the
TriggerDescriptor class.

The logic that transforms triggered SQL statements to internal syntax
for accessing the transition variables and transition tables (via Java
method calls and VTIs) is reused on the WHEN clause text so that the
same transformation happens there.

Upgrade logic is added so that the new column in SYS.SYSTRIGGERS will
be created when a database is upgraded from an older version. The WHEN
clause is now disabled in the parser when running in soft upgrade
mode. An upgrade test case checks that the WHEN clause can only be
used in a hard-upgraded database, and that a reasonable error is
raised otherwise.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1526831 13f79535-47bb-0310-9956-ffa450edef68"
9698d412a2329524fb4343ad192495a6b731bd0c,"DERBY-6356; java.security.AccessControlException in i18n.LocalizedDisplayScriptTest
  switching the test to use TimeZoneTestSetup which already has the required privilege blocks.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1527143 13f79535-47bb-0310-9956-ffa450edef68"
6a17f800eb0fef898ea947901c2c3c346ce521b0,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Reject references to generated columns in the NEW transition variables
of BEFORE triggers, as required by the SQL standard. See also
DERBY-3948.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1527489 13f79535-47bb-0310-9956-ffa450edef68"
1a58030d62478e73f58d0e9645f4cc8f245111f9,"DERBY-6357: CREATE TRIGGER doesn't detect all illegal references to SESSION schema

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1527963 13f79535-47bb-0310-9956-ffa450edef68"
51f910f6aec93a0a23b93660149cd81deba0ffda,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Disallow references to tables in the SESSION schema in the WHEN clause.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1527993 13f79535-47bb-0310-9956-ffa450edef68"
df73e361d05673d88dfe17006b55f5069fac360c,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Forbid CREATE TRIGGER statements whose WHEN clause contains a
parameter marker or returns a non-BOOLEAN value.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1528401 13f79535-47bb-0310-9956-ffa450edef68"
2335e5c56b07edf073dfcf3f368215040a1d9ffb,"DERBY-6363: Incorrect evaluation of logical expressions in CASE

Skip conversion of OR nodes to IN lists if the OR node is not on
conjunctive normal form.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1529099 13f79535-47bb-0310-9956-ffa450edef68"
00b0dbe4123c0d64fb379fb4140116d8a00825b0,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Add a test case to verify that the WHEN clause SPS is invalidated and
recompiled if one of its dependencies requests a recompilation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1529145 13f79535-47bb-0310-9956-ffa450edef68"
6c2e1b4adc783bba21353b4f662677a0fd0eb0fc,"DERBY-6371: DROP COLUMN looks in wrong schema when checking trigger dependencies

Use the same schema during dependency checking as during compilation
of the trigger action.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1530517 13f79535-47bb-0310-9956-ffa450edef68"
d76dd28c6619868e332d6eb1a511ba23e2b76014,"DERBY-3624 testfailure in storetests/st_derby715 with ibm 1.5 on iseries machine; one deadlock message missing

Change test to check locks rather than sleep for synchronization.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1530696 13f79535-47bb-0310-9956-ffa450edef68"
b862050f562929ba2760f051fa984da04d2750c6,"DERBY-5317: Detect attempts to reuse a connection that in the middle of sending a request to the server. Use this to provide a better error message and avoid the NPE.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1530704 13f79535-47bb-0310-9956-ffa450edef68"
d23659a09e9d6b3cfdbe95db53fc9a7b9a85f35d,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Reuse code for dependency checking of the triggered SQL statement for
checking dependencies in the WHEN clause.

Add test to verify that attempts to drop columns referenced in the WHEN
clause detect that the trigger is dependent on the columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1530887 13f79535-47bb-0310-9956-ffa450edef68"
ddc67070ac8b8d79dc75274f2f18ab561f7d0825,"DERBY-6371: DROP COLUMN looks in wrong schema when checking trigger dependencies

Fix another occurrence where the wrong schema is used. This occurrence
doesn't cause any problems currently, since it's only used for
parsing, and the problems wouldn't appear until one attempt to do
binding with the incorrect schema. Fix it anyway for consistency.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1530913 13f79535-47bb-0310-9956-ffa450edef68"
50734d82d276fa9ed8e8d5caad2be8ecec410910,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Make the code in TriggerDescriptor.getActionSPS() reusable for
TriggerDescriptor.getWhenClauseSPS() so that the fixes for DERBY-4874
and Cloudscape bug 4821 also get applied to the WHEN clause.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1531226 13f79535-47bb-0310-9956-ffa450edef68"
c955b823a151678dbc437fdb03dbb5833169ca7d,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Add tests to verify that the when clause operates with the privileges
of the user that created the trigger, and that exceptions thrown in
the WHEN clause are handled gracefully.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1531279 13f79535-47bb-0310-9956-ffa450edef68"
636f0a05c3fcc83d186719835d803cbaa4598ee7,"DERBY-6352; Access denied (""java.lang.RuntimePermission"" ""modifyThread"") in store.RecoveryAfterBackup test
  adding try/catch code to provide more information when this happens


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1531721 13f79535-47bb-0310-9956-ffa450edef68"
504ba175eb608a99a8a12bd7b19c94e1f87ab80c,"DERBY-2446; Remove notion of the old test harness from TestConfiguration
  Removing remaining references, and also removing remaining files from tests/junitTests


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1531729 13f79535-47bb-0310-9956-ffa450edef68"
ba7d8d3999e6babc38491bd0ba3325229c26d1dc,"DERBY-2446; Remove notion of the old test harness from TestConfiguration


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1531730 13f79535-47bb-0310-9956-ffa450edef68"
c66c15d5f1fa4f7638def1bf9b13f63799d98059,"DERBY-2423: Make EmbedResultSetMetaData.isCrurrency() return false for DECIMAL and NUMERIC columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1531821 13f79535-47bb-0310-9956-ffa450edef68"
51d91d5c614e4cd32dc37c129b11c7432843193c,"DERBY-3573: Remove incorrect check against maxRows when setting fetchSize. Patch contributed by Nirmal Fernando.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1531854 13f79535-47bb-0310-9956-ffa450edef68"
1ddf21356062a8c2191568ab6020dd30052f1e6c,"DERBY-2446; Remove notion of the old test harness from TestConfiguration
  removing a now unnecessary line from the test policy file


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1532613 13f79535-47bb-0310-9956-ffa450edef68"
800a411c4c61975e97260a40665690d8dd3dc57a,"DERBY-6377; Add Derby Nature doesn't work wirh Eclipse Kepler 4.3, only with Juno 4.2
  Adding a note to the top of the Readme to indicate this is no longer being maintained.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1532636 13f79535-47bb-0310-9956-ffa450edef68"
05b022f3e5e341b4f695d93f74e74962ea89dee0,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Fix incorrect null check when merging subqueryTrackingArray and
materializedSubqueries in GenericStatementContext.setTopResultSet().
Used to cause NullPointerException in some cases when a WHEN clause
contained a subquery.

Add more tests for scalar subqueries in WHEN clauses.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1532666 13f79535-47bb-0310-9956-ffa450edef68"
99aa241182f5f914609d6207b6738d020458e491,"DERBY-6361: Valid statements rejected if Derby has not implicitly
created the current user's schema.

Make compilation of the generation clause accept that the original
compilation schema does not exist.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1532997 13f79535-47bb-0310-9956-ffa450edef68"
24d620a6ad34dc39c10f997669c69a7e5b9191a6,"DERBY-6350 (Provide a rolling file implementation of derby.log)

Committing patch submitted by Brett Bergquist



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1533320 13f79535-47bb-0310-9956-ffa450edef68"
93ded62646342103944c36b95a7110d562158d5c,"DERBY-6386 - Errors in jdbc4.LobStreamTest if derbyclient.jar is first in the classpath


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1534425 13f79535-47bb-0310-9956-ffa450edef68"
fa6bcd6bd16dc632f764a5570f01157f01f7d36f,"DERBY-2130 - Optimizer performance slowdown from 10.1 to 10.2

Patch contributed by Army Brown



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1534465 13f79535-47bb-0310-9956-ffa450edef68"
d3fbd72700c8839e8eafb5d4c45049e0a9661549,"DERBY-6373: NPE in Statement.getWarnings()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1534523 13f79535-47bb-0310-9956-ffa450edef68"
ea25568c625904993e4bca03d22e867dabec3efc,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Add dblook support for triggers with a WHEN clause.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1534988 13f79535-47bb-0310-9956-ffa450edef68"
e81e52cca13a06846b8fd39b68fc159432ca0c58,"DERBY-3155: Add (optional) row locations to backing hash tables: derby-3155-03-ag-backingStoreHashtableWithRowLocation.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1535001 13f79535-47bb-0310-9956-ffa450edef68"
e8e1864a540ec5061e6769a53b9ebfe28df398da,"DERBY-6320 Log a page dump to derby.log if ERROR nospc: nospc.U is returned to the user
This patch adds the ability to dump a page in an insane build, and adds 2 calls to do so in 2 outstanding nospc error cases. In those two cases a new user
level error is thrown and nests the nospc.U error so that we still know the
original stack trace where the lowest error was thrown.  
The patch passes all tests and the specific errors were hand tested, one of 
them using the test case filed in DERBY-4923 and in the other case just by hand forcing the codepath.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1535075 13f79535-47bb-0310-9956-ffa450edef68"
508a010301af3c7d01e94cc5dc9f6dcf7b071583,"DERBY-3155: Add support for DELETE action of MERGE statement; checking in derby-3155-04-af-deleteAction.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1535360 13f79535-47bb-0310-9956-ffa450edef68"
bba59bbb6a44b26935b40fdab71d0480bf401314,"DERBY-3155: Uncomment a test verifying that trigger transition tables cannot be used as the target tables of MERGE statements: derby-3155-05-aa-triggerTransitionTableAsTarget.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1535397 13f79535-47bb-0310-9956-ffa450edef68"
121a5329dd496b579dfd9faefecf7e156bb26c86,"DERBY-4923 update of a long row can fail with ERROR nospc: nospc.U exception.

This checkin fixes the problem repro'd by the included new test, which shows
an update of an existing row in db failing with a nosp.U exception. 
The problem was an off by 1 error in checking for enough space to update a row
on an overflow page to just an overflow pointer. The intent of the code is to 
always reserve enough space in every overflow row to allow for this update. 
In this case there was exactly enough space, but the code mistaken thought it 
needed 1 more byte.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1535413 13f79535-47bb-0310-9956-ffa450edef68"
bff25717b15fa8e7ec071ea85bc133a9afb60260,"DERBY-3155: Fix some serialization bugs in the MERGE ConstantActions and add test cases for using trigger transition tables as the source tables of MERGE statements; check in derby-3155-06-aa-triggerTransitionTableAsSource.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1535447 13f79535-47bb-0310-9956-ffa450edef68"
1498aba5dc09d632c772bfb881b5e118bb4476b2,"DERBY-2813 store/ClassLoaderBootTest fixture testBootingAnAlreadyBootedDatabase fails indicating derby booted a database that was already booted by another CLR if security manager is on

This patch just improves the assertion with security manager on to show that we are picking up the wrong class loader. It does not fix the issue.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1535536 13f79535-47bb-0310-9956-ffa450edef68"
211adc3c4892aa47bbc68185505dce7f3b0eabc2,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Remove logic in the readExternal() and writeExternal() methods of
TriggerInfo and TriggerDescriptor that was originally put there for
compatibility between different Derby versions. Since these objects
are only persisted as part of a stored prepared statement, and Derby
always clears all stored prepared statements on version change, there
is no requirement that TriggerInfo and TriggerDescriptor instances
written by one Derby version must be possible to read by other Derby
versions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1535654 13f79535-47bb-0310-9956-ffa450edef68"
b4cda60309bc30086f5e19dabc68ca31f6e136ac,"DERBY-6378 OFFSET/FETCH NEXT ignored when query is enclosed in parentheses

Patch derby-6378-4.

To address the required generality of several layers of nested
multiple clauses allowed by SQL, this patch introduces a stack
mechanism for order by and offset/fetch clauses, factored out into
ResultSetNode#QueryExpressionClause (nested class). From the javadoc
for that class:

For ease of handling order by clause, offset clause and fetch
first/next clauses in subclasses. Clauses on the same nesting level
have the same index in the lists, so at any level, any of the lists'
elements may be empty. For example, (select * from t order by a fetch
next 5 rows only) order by b would have

            obl[0] = ""order by a"",
            offset[0] = null,
            fetchFirst[0] = ""next 5 rows""
and
            obl[1] = ""order by b"",
            offset[1] = null
            fetchFirst[1] = null

When starting a new level, always remember to do a push() before
adding clauses via
setOffset(org.apache.derby.impl.sql.compile.ValueNode),
setFetchFirst(org.apache.derby.impl.sql.compile.ValueNode),
setOrderByList(org.apache.derby.impl.sql.compile.OrderByList) and
setHasJDBCLimitClause(java.lang.Boolean).

Added tests to OrderByAndOffsetFetchInSubqueries in #testDerby6378,
running regressions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1536507 13f79535-47bb-0310-9956-ffa450edef68"
65aba97a20ef9ec7355f3b4cf558ad12ad0869cd,"DERBY-6350

Committing the test cleanup provided by Brett



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1536808 13f79535-47bb-0310-9956-ffa450edef68"
1061fd2082258262eccb55c3194a79c28b3bc8cf,"DERBY-6348: NPE or assert failure in recursive trigger

Reset the activation in the statement context before setting up the
activation for the next trigger, so that the nested trigger activation
is a child of the top-level activation, and not a child of the
previous trigger's activation.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1537393 13f79535-47bb-0310-9956-ffa450edef68"
d32b042dd2b5ad4403988d21310f28d9c0ac2a77,"DERBY-6396: NullPointerException in DirFile

Check that the array returned by File.list() is non-null before
attempting to iterate through it. Null is a valid return value.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1537394 13f79535-47bb-0310-9956-ffa450edef68"
22f9da71b619e93a05615c8239521f9abf2d30b5,"DERBY-6378: Silence javadoc warning

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1537420 13f79535-47bb-0310-9956-ffa450edef68"
374d58fee6063b6f96f3b6c0c6f24fb6d21d5fcb,"DERBY-6383(Update trigger defined on one column fires on update of other columns). 

This regression is caused by DERBY-4874(Trigger does not recognize new size of VARCHAR column expanded with ALTER TABLE. It fails with ERROR 22001: A truncation error was
encountered trying to shrink VARCHAR)

The regression is for Statement level triggers. The statement trigger gets fired incorrectly for any column update rather than just the column specified in the UPDATE of column clause. The fix is going to ensure that SYSTRIGGERS has the correct list of columns on which trigger should be fired. Row level triggers work fine. The only workaround at this point is to drop and recreate the statement triggers. 



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1537593 13f79535-47bb-0310-9956-ffa450edef68"
02a05f82727e3da744b89f8c2ebd2885b4503444,"DERBY-6378 OFFSET/FETCH NEXT ignored when query is enclosed in parentheses

Javadoc fix.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1537618 13f79535-47bb-0310-9956-ffa450edef68"
69cf74986d04016b3a1c27815e6b854a09cce19b,"DERBY-5908: Fix incorrect URLs for network shares. Patch contributed by Kristian Waagan

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1537862 13f79535-47bb-0310-9956-ffa450edef68"
4bdaec2078aab325696701b34b59f2b5b19a5e1f,"DERBY-5806: Fix parsing of empty string in DRDAConnThread. Set ClientStatement.sqlMode_ correctly for empty statements.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1537874 13f79535-47bb-0310-9956-ffa450edef68"
4c9b831a0cfc770fc8029e7e6f19846e0b5efb8f,"DERBY-6228: Add parsing of SQLCARD warnings after next(). Don't commit tx when calling getWarnings(). Fix various locator-release errors when navigating SURs. 

Patch file derby-6228-a.diff. (+ typo fix mentioned in review) 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1537881 13f79535-47bb-0310-9956-ffa450edef68"
8f8881fd32b2a4cf924dff56b5226a2dc9f7f80e,"DERBY-5823: Multi-row insert fails on table without generated keys with RETURN_GENERATED_KEYS

The fix contains two parts:

1. Don't collect generated keys if the statement does not actually
   generate key values. (This is the fix for the reported problem.)

2. Cache the array of generated key columns between executions. In the
   existing code, the array of key columns was created only on the
   first execution. Since it wasn't cached, it was null on all
   subsequent executions. When it is null, all columns are collected
   into the temporary row holder, which wastes space. Now, only the
   key columns are collected, also on re-execution.

The test case was contributed by Kristian Waagan.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1537888 13f79535-47bb-0310-9956-ffa450edef68"
b2686e644ffc3810164ec000ef6bff3abeb609e6,"DERBY-6400; harness.NetServer method waitFor() is not reflecting timeout values
   adding code to pass on a timeout value when specified on in the commandline


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1538692 13f79535-47bb-0310-9956-ffa450edef68"
861b8b68e4e2f3d755247bc37fab983db0622b36,"DERBY-6383(Update trigger defined on one column fires on update of other columns)

Following old harness tests need their master files updated after the code changes for DERBY-6383. Now the behavior of these master match those of 10.6 codeline where DERBY-6383 regression does not exist.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1538854 13f79535-47bb-0310-9956-ffa450edef68"
74fb1b0a1eabae280f124b4deffd2978ae80f624,"DERBY-6082: Removed re-prepares trigged by openOnServer_

Changed piggy-backing of prepare of preparedStatementForAutogeneratedKeys_ so that it doesn't need openOnServer_ 

Removed MaterialStatement.markClosedOnServer and implementation since it did not do anything.

Since this reduced ClientStatement.markClosedOnServer() to a cleanup-method for section_, it was removed and section_ was encapsulated as a private member where setSection is responsible for cleanup.

Patch file derby-6082a.diff. (+ review comment) 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1539540 13f79535-47bb-0310-9956-ffa450edef68"
68e06acc0ff636995d7143f9d42f2657891aed04,"DERBY-6401 Create a test option to stop running Junit tests after first failure or error
Adds test option. If run with  -Dderby.tests.stopAfterFirstFail=true tests will stop after first failure or error



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1539729 13f79535-47bb-0310-9956-ffa450edef68"
a50f89546bd6626b6c8aeff1219b071ec0a22ccb,"DERBY-534: Support use of the WHEN clause in CREATE TRIGGER statements

Add more tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1540690 13f79535-47bb-0310-9956-ffa450edef68"
01632c255e82eb6f5c284ce993703d7b77cf099d,"DERBY-3155: Add support for INSERT action of MERGE statement; commit derby-3155-07-ad-insertAction.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1540713 13f79535-47bb-0310-9956-ffa450edef68"
10982582d7fee5f122455714fba0243e52e2f363,"DERBY-6383(Update trigger defined on one column fires on update of other columns)

Adding more junit tests for checking the affects of adding/dropping columns to the table with update triggers defined on it.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1541170 13f79535-47bb-0310-9956-ffa450edef68"
e3720ab07a808863f45eeb5c896d87aa78dfc7dd,"DERBY-6411: Minimal select privilege should be checked in subqueries

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1541461 13f79535-47bb-0310-9956-ffa450edef68"
cc67949e80eec15b60334500c608ae4a50938861,"DERBY-2041: Trigger should register a dependency on tables and columns used in its body

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1545179 13f79535-47bb-0310-9956-ffa450edef68"
6ab10839d238b59ae3e43177ead275935278a834,"DERBY-3155: Add support for UPDATE action of MERGE statement: derby-3155-08-ah-updateAction.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1545343 13f79535-47bb-0310-9956-ffa450edef68"
0c5bc3acda255bb4c1a29675fd6ea12009ce1e28,"DERBY-532 Support deferrable constraints

Patch derby-532-post-scan-4 implements basic support for deferred
constraints for PRIMARY KEY and UNIQUE constraints. Deferrable
constraints are not enabled by default yet; one needs to set a
property to try the feature: ""derby.constraintsTesting"".

This patch enables deferred constraints for:

    a) primary key constraints
    b) unique constraint with not nullable columns
    c) unique constraint with nullable columns

by new logic in insertion and sorts.

The patch includes relaxing the constraint at insertion and update
time, as well as adding a constraint to an existing table. 

Derby treats constraints a) and b) the same, and in the code these are
marked as ""unique"" when they are not deferrable (as in existing code).

Constraint type c) is currently marked as
""uniqueWithDuplicateNulls"". Insert/update of these is implemented in
the BTree by including the RowLocation of the base row in the set of
keys in the index row (DERBY-3330). This makes them trivially unique,
but there is an extra code path in BTreeController that checks
neighbor rows for duplicates, and only allows insertion if the key
contains a null. When adding a constraint to an existing table, these
are handled by a specially crafted sorter
(UniqueWithDuplicateNullsMergeSort).

The implementation of insert/update of deferrable indexes is based on
a similar approach, i.e. by backing with a non-unique index, and checking 
duplicates in the language layer, notably IndexChanger.

In IndexChanger, after inserting a row, we check if it is unique by
performing a scan of the BTree. A time-out here leads to a pessimistic
assumption that there is a duplicate. Duplicate key values are saved
until checking time (usually commit time), when a new scan is
performed to validate the uniqueness property.

[This means a) and b) if deferrable are no longer marked ""unique""].

Deferrable indexes are not shared.

If there are duplicates and we have deferred constraint mode (a
dynamic session property), we save the duplicate index row in a disk
based hash table (DeferredDuplicates#rememberDuplicate).

For a) and b), constraints which are deferrable are marked as
""uniqueDeferrable"" and ""hasDeferrableChecking"". Constraints of type c)
which are deferrable are marked ""uniqueWithDuplicateNulls"" and
""hasDeferrableChecking"". These marks determines the code paths
used. Note that existing indexes and non-deferrable constraint do not
get a new code path, which should preserve correctness and performance
of those.

Now, with these markers in place, deferral of checks happens in three
places:

    {{ IndexChanger#insertAndCheckDups}}

    {{CreateIndexConstantAction#executeConstantAction +
     MergeSort#compare and UniqueWithDuplicateNullsMergeSort#compare }}

    {{InsertResultSet#setUpAllSorts}}


The former is active for deferral under INSERT and UPDATE. The middle
when adding a deferrable constraint to an existing table, when we sort
existing rows detecting any duplicates. The last is used when importing
rows.

At transaction commit (1), or when the constraint mode for a deferred
constraint is changed back to immediate (2), we validate the
constraint (DeferredDuplicates#validate) by replaying the hash table
and scanning the index for the duplicate index rows to ascertain there
are none, or else we have an error: transaction or statement severity
respectively for (1) and (2).

The constraint mode is a SQL session level variable, and inside
routines (nested connections), we push this on the stack. This means
change of the constraint mode inside nested connections will be popped
on routine exit. If, as part of this, a constraint changes from
deferred to immediate mode, we also validate it for correctness. If
this fail, the transaction rolls back
We needed to do this from a newly introduced method,
GenericLanguageConnectionContext#popNestedSessionContext. This
pops the SQL session context.
That hook is called from GenericPreparedStatement#executeStmt. As a
part of this effort, we also renamed #setupNestedSessionContext to
#pushNestedSessionContext.

The patch also adds support for checking deferred constraints in
xa_prepare and xa_commit (.., true), cf. specification attached to the
JIRA issue.

Concurrency: if a transaction gets a lock time-out when trying to
establish if a row just inserted is a duplicate (another transaction
may have just inserted a row with a similar index key), we use a
pessimistics assumption and add that key to the set of keys to be
checked at commit time. If a key can't be grabbed then, a time-out is
thrown. We plan to add an optimized scan to avoid waiting for the lock
at insertion time, cf DERBY-6419.

The ""not enforced"" feature is not yet implemented in this patch.

Several new test cases been added to ConstraintCharacteristicsTest to
test these basic behaviors.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1545394 13f79535-47bb-0310-9956-ffa450edef68"
ccf120cb4326b113adcfefb7f3fea1889aaeeb26,"DERBY-6380; Rolling log files do not get copied in failed directory when a junit test fails
   adjusting ErrorStreamTest to copy files created in it on fail, and BaseTestCase to copy defaults on fail.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1545935 13f79535-47bb-0310-9956-ffa450edef68"
1850f64908b9f195b758084e868e8adf3cbed8e3,"DERBY-6380; Rolling log files do not get copied in failed directory when a junit test fails
   removing two 'fail' commands left over from debugging, and streamlining clean up in ErrorStreamTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1545957 13f79535-47bb-0310-9956-ffa450edef68"
3511a12d7c0ce3f381375447bad8f91ef7ed8f24,"DERBY-3155: Improve handling of correlation names for the target tables in MERGE statements; commit derby-3155-09-aa-correlationNames.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1547585 13f79535-47bb-0310-9956-ffa450edef68"
23362a4374af7d970f6a3bb9b0867b08f5697f82,"DERBY-2041: Trigger should register a dependency on tables and columns used in its body

Add an upgrade test to verify how the dependencies are handled after
upgrade and downgrade.

Skip some cross checking between getColumns() and ResultSetMetaData
for views in DatabaseMetaDataTest, since those checks only pass for
tables. The upgrade test case adds a view that upsets the meta-data
test. (This is the first upgrade test that uses views.)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1548032 13f79535-47bb-0310-9956-ffa450edef68"
35c061a65d9e20a7515a69812d63b673f4e207f2,"DERBY-6421: Cast to UDT in CHECK constraint causes NPE or assert failure

Delay binding of target UDT in CastNode till bind time.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1548104 13f79535-47bb-0310-9956-ffa450edef68"
69f8afa5c014b4405d3989e0bf82e42da9758cd3,"DERBY-6362: CHECK constraint uses wrong schema for unqualified routine invocations

Part 1: Make sure visitors descend into all TableName nodes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1548127 13f79535-47bb-0310-9956-ffa450edef68"
1c42a9373424fee8c5b0d3112819b73ac8e4db38,"DERBY-6362: CHECK constraint uses wrong schema for unqualified routine invocations

Part 2: Fix offset of qualified table names. Their begin offset
pointed to the beginning of the table name token, but should point to
the beginning of the schema name token if they have one.

Also leave begin and end offset unspecified (-1 implied) for some
synthetic table name nodes that previously set the offsets to 0
explicitly. This makes it easier to tell whether they are synthetic
later.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1548128 13f79535-47bb-0310-9956-ffa450edef68"
9d9f6dd03af6d44d7eac9c7a12e1bdb80c4cf7ae,"DERBY-6362: CHECK constraint uses wrong schema for unqualified routine invocations

Part 3:

- Refactor code that rewrites trigger actions so that it can be reused
  for rewriting CHECK constraints.

- Rewrite CHECK constraints and make all identifiers schema qualified
  before storing them in the dictionary.

- Make the parser preserve the TableName node for the target type in
  CAST expressions for user-defined types, so that they get detected
  by the rewrite logic.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1548132 13f79535-47bb-0310-9956-ffa450edef68"
1cd5dd1c1eafbac029e84e2fdae2c4ee71a221b2,"DERBY-3155: Improve support for correlation names for the source tables of MERGE statements; tests passed cleanly for me on derby-3155-10-aa-correlationNames.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1548298 13f79535-47bb-0310-9956-ffa450edef68"
6f55de19d898430fec96d3041a03b25fd218454f,"DERBY-6256: Fix typo in javadoc header of XmlVTI; commit derby-6256-05-aa-javadocTypo.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1549938 13f79535-47bb-0310-9956-ffa450edef68"
a7d99c10fbf80045f8b594661488bdb249bd0477,"DERBY-3155: Add tests to verify that BEFORE triggers can't fire MERGE statements, just as they can't fire INSERT/UPDATE/DELETE statements; commit derby-3155-11-ab-beforeTriggersCantFireMerge.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1549948 13f79535-47bb-0310-9956-ffa450edef68"
fe9655204590626d480bfbb7c616446fb82cfd27,"DERBY-6354 DatabaseMetaDataTest.testGetColumnsReadOnly fails with NPE when releasing page

Diagnostics patch; to be removed when issue is fixed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1549983 13f79535-47bb-0310-9956-ffa450edef68"
eebc9c7199b435b1296cf548a03ead27f538545d,"DERBY-5416: SYSCS_COMPRESS_TABLE causes an OutOfMemoryError when the
heap is full at call time and then gets mostly garbage collected later
on.

Improve the accuracy of the code that estimates the memory requirement
of the sort buffer. When it detects that the current memory usage is
lower than the initial memory usage, it now records the current usage
and uses that value instead of the initial memory usage in future
calculations.

This compensates to some degree, but not fully, for the skew in the
estimates due to garbage collection happening after the initial memory
usage. The memory requirement will not be as badly underestimated, and
the likelihood of OutOfMemoryErrors is reduced.

There is no regression test case for this bug, since the only
reliable, reproducible test case that we currently have, needs too
much time, disk space and memory to be included in the regression test
suite.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1550103 13f79535-47bb-0310-9956-ffa450edef68"
908f0a966b64f4797ba2e5d7b8404caf434fb6a1,"DERBY-532 Support deferrable constraints

A patch (""derby-532-fix-metadata-1"") that fixes broken database
metadata for deferred constraint indexes: the metadata query used the
method IndexDescriptor#isUnique to determine logical uniqueness, but
it really represents physical uniqueness now. For deferred unique
constraints, the method that should be used is
""isUniqueDeferrable"". Added a test, and also added client/server run
of the regression test for deferred constraints.

Before the fix, the added test fixture ""testDatabaseMetaData"" failed
in that the index in question was identified as non unique, but it is
logically unique and so should be reported as such.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1550113 13f79535-47bb-0310-9956-ffa450edef68"
040d5c506d2fc6418c1e9cb13b7d70d45c79b418,"DERBY-6419 Make BTree scan honor OPENMODE_LOCK_NOWAIT for row locks

Patch derby-6419-1 introduces a mode to avoid waiting for row locks in
BTeee scans.  Using the debugger I can see that the current wait in
ConstraintCharactericsTest#testLocking, line 417 as of svn 1545394 is
no longer waiting with the patch, and stepping through the code in
IndexChanger I can see that the second next() which currently waits
returns immediately with an exception as desired.

Instead of overloading the current flag OPENMODE_LOCK_NOWAIT, I
introduced a new flag OPENMODE_LOCK_ROW_NOWAIT instead. The short
circuiting logic was added in B2IRowLocking3#LockRowOnPage: I had to
added an accessor to HeapController to get at the open_mode of the
base table's conglomerate; not sure if that's kosher or not. An
alternative could be to keep to flag in the B2IForwardScan object.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1550135 13f79535-47bb-0310-9956-ffa450edef68"
400cc602c9de23105bdaca4c790e5c6afbac451e,"DERBY-532 Support deferrable constraints

Patch derby-532-nullableUniqueFix. When we changed the implementation from
special treatment of deferrable constraints in the BTree, a couple of extra
predicates needed to be added were omitted - added those here: we should not
mark the physical index with ""uniqueWithDuplicateNulls"" if it is deferrable.
This error was found when running the regressions with default deferrable for
all pk and unique constraints.

We also removed an unused flag ""hasDeferrableChecking"" in the same places (it is
not longer used by the physical index).

Added a new test case, testCompressTable, which tests the
""uniqueWithDuplicateNulls"" case.

We also change the behavior in the following way for deferrable, but not
deferred constraints: if we hit a time-out or dead-lock when checking uniqueness
(in the BTree scan), we throw that time-out or dead-lock. Up till now we
converted it to a duplicate exception. We will only assume it can be a duplicate
- for later checking - iff the constraint mode is deferrable.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1550152 13f79535-47bb-0310-9956-ffa450edef68"
e03c074514d193c8b6366ee750dfafa8f6e98096,"DERBY-532 Support deferrable constraints

Patch derby-532-fix-drop-not-nullable. Fixes a broken predicate when
recreating the index when going from UNIQUE NOT NULL to plain UNIQUE:
the existing predicate missed the deferrable case, so the index was not
recreated.

Added a test case.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1550284 13f79535-47bb-0310-9956-ffa450edef68"
0889c64d6b43fb48896fead0be174731d4304ba4,"DERBY-6426 Fix isLoginException
code treats any StandardException as a login exception due to curious no-op code. Added login state check to make it work as expected. 

Contributed by Dave Brosius



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1550287 13f79535-47bb-0310-9956-ffa450edef68"
ea36b4207a2ce0c62e1a81b0f7db369270a3b26f,"DERBY-6419 Make BTree scan honor OPENMODE_LOCK_NOWAIT for row locks

A follow-up patch: derby-6419-followup.

Only short circuit waiting for lock in BTree scan to check duplicates
for a deferred unique/pk constraint if constraint mode is deferred
(i.e. not if immediate).

Added a test case lifted from UniqueConstraintMultiThreadedTest, which
exposed the issue when we run the regressions with default deferrable
by default (see DERBY-532).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1550299 13f79535-47bb-0310-9956-ffa450edef68"
51e6268144aa8b240694700dd34cb5c78994e1e4,"DERBY-532 Support deferrable constraints

Patch derby-532-test-speedup changes ConstraintCharacteristicsTest to
use a main memory database for some tests for increased speed. It also
changes the way SystemPropertyTestSetup for static properties closes
down the database to not deregister the driver; without this change we
saw a test setup try to connect via the client driver to a Derby server
engine without a registered driver.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1550308 13f79535-47bb-0310-9956-ffa450edef68"
586ae9de73d7861cd5c26b8749d2984861a07221,"DERBY-5196; Correct the layout of log.ctrl as described on the Derby web site
   fixing the header in the source file


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1550525 13f79535-47bb-0310-9956-ffa450edef68"
892463481d96b49fd998851cf9fb58058a17ec32,"DERBY-5196; Correct the layout of log.ctrl as described on the Derby web site
   adding a comment to warn about updating the web site when updating the code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1551307 13f79535-47bb-0310-9956-ffa450edef68"
a9d2040c7c3e1cf5962216d161fa4840ee3ada7a,"DERBY-5865; On IBM 1.7 TestDurabilityProperty fails with FAIL -- derby.system.durability=test mode seems to be broken.
   Commenting out the section that compares the timing, with a comment referring to this JIRA.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1551311 13f79535-47bb-0310-9956-ffa450edef68"
0d4cef5892793a4c0e6b6cdb2daa139f16b5ca5f,"DERBY-6387: Incorrect ordering of triggers in dblook

Order the triggers by the CREATIONTIMESTAMP column so that dblook
produces a script that recreates the triggers in the same order as
they were originally created.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1551940 13f79535-47bb-0310-9956-ffa450edef68"
ead987318e2697045e670a4e22e85bd1c2857c1a,"DERBY-6438: Explicitly grant SocketPermission ""listen"" in default server policy

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1553081 13f79535-47bb-0310-9956-ffa450edef68"
070d37e30600755f16216090af3cc2a8987d2972,"DERBY-6429: Bring privilege checks on UPDATE statements into closer alignment with the SQL Standard; tests passed cleanly on derby-6429-01-af-privilegeFilters.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1553197 13f79535-47bb-0310-9956-ffa450edef68"
b412f102f0e8b14d9f7bef30c029af1daf9b18d1,"DERBY-6440: Drop connection to foreign database when foreignViews optional tool is unloaded.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1553269 13f79535-47bb-0310-9956-ffa450edef68"
acbecbb96a5ae0a3b6bc5948b03f061dfea91662,"DERBY-6441: Add ORDER BY clauses to a number of queries in GrantRevokeDDLTest in order to force deterministic results; checks in derby-6441-01-addOrderByClauses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1553280 13f79535-47bb-0310-9956-ffa450edef68"
831e54e7651e6c9debb9c9034b93edb5acdab69b,"DERBY-532 Support deferrable constraints

Patch derby-532-allow-pk-unique-1, which opens up for using deferrable
constraints for primary key and unique constraints, i.e. it is no
longer required that the special property ""derby.constraintsTesting""
be used for those constraints, since the implementation is complete
modulo bugs. Upgrade tests still remain to be built, though.

For foreign key and check constraints as well as for ""not enforced"",
the property will still required till the implementation for those is
completed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1555006 13f79535-47bb-0310-9956-ffa450edef68"
6bd38476c74bafb0868e98a42199ad5b2bfe0330,"DERBY-5866: Triggers fire out of order

Make sure the creation timestamp of a newly created trigger is higher
than the timestamps of the existing triggers on the same table. If it
is not higher, the triggers may fire in the wrong order. If the
current timestamp is not higher than the timestamp of the previous
trigger defined on the table, the new trigger now gets a creation
timestamp that is one millisecond higher than the creation timestamp
of the previous trigger.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1555702 13f79535-47bb-0310-9956-ffa450edef68"
531b4694839af03f446dd6593fc28e8220e8e19a,"DERBY-5866: Triggers fire out of order

In order to avoid ambiguities around switch from daylight saving time
to standard time, and other time zone changes, store the trigger
creation timestamps in Coordinated Universal Time (UTC) instead of the
local time zone.

Only use UTC if the database has been upgraded to 10.11 format, so
that the change won't cause problems on downgrade.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1555703 13f79535-47bb-0310-9956-ffa450edef68"
ee5954e227084db554fa9f57271715f3a6a2367c,"DERBY-532 Support deferrable constraints

Patch _*derby-532-upgrade-1b*_. It checks that deferrable constraints
cannot be used unless hard upgrade has happened.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1555724 13f79535-47bb-0310-9956-ffa450edef68"
5611698faa23928e99bca7029ea7195408948f18,"DERBY-6446: Filter an unwanted schema name which may turn up in query results depending on the order that tests run: derby-6446-01-aa-filterUnwantedSchema.diff

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1555911 13f79535-47bb-0310-9956-ffa450edef68"
3d2d88b7a1ac5f70efcdb7c8d6355fd232dc4871,"DERBY-6434: Correct privileges required for INSERT statements; tests passed cleanly on derby-6434-01-ac-correctInsertPrivs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1556571 13f79535-47bb-0310-9956-ffa450edef68"
0f77c7a4e61d0618712373b79d0e61978c0db031,"DERBY-6437 testLockingWithRollback failing on trunk with AssertionFailedError - isolation levels: 4 2

Added information about which exception caused the assertNull errors
in ConstraintCharacteristicsTest#executeThreads to help debugging.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1556780 13f79535-47bb-0310-9956-ffa450edef68"
065a81f2db882a299b700b582e1a6e0b79e219f8,"DERBY-6443: ArrayIndexOutOfBoundsException when calling function from trigger

StaticMethodCallNode.bindExpression() was a no-op if the node had
already been bound. This caused problems for queries that need to bind
expressions multiple times (for example INSERT INTO ... SELECT).

This fix makes StaticMethodCallNode.bindExpression() work if it's
called a second time, while still making it a no-op if it is called
recursively in order to prevent infinite recursion.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1556809 13f79535-47bb-0310-9956-ffa450edef68"
584c0fb11be30148e06b54818948e697acf96ce1,"DERBY-6447: Use StrictMath for more functions in SYSFUN

Make LOG10, COSH, SINH and TANH use the corresponding methods in
java.lang.StrictMath instead of custom implementations.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1556810 13f79535-47bb-0310-9956-ffa450edef68"
f16776261c331f4b37a4e702a7be2d6539e571a7,"DERBY-6453 Remove dead code in InsertResultSet and flag skipCheckConstraints

Patch _*cleanup-misc-3*_ which removes dead code but inserts asserts
in sane mode if we should somehow end up with triggers in bulk insert
mode and also removes a boolean variable in some interfaces which was
always called with false: {{skipCheckConstraints}}.
It adds a new test case, {{CheckConstraintTest#testbulkInsert}}.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1556938 13f79535-47bb-0310-9956-ffa450edef68"
404a2f06f6de30e22b6be7ffc76de2c6c0bf0530,"DERBY-5463: Don't alter the value of drdamaint when generating a new release.properties file; commit derby-5463-01-aa-leaveDRDAmaintIDAlone.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1557823 13f79535-47bb-0310-9956-ffa450edef68"
7de985b1c3f008b5e2dbf3aeaa832374956a6618,"DERBY-6453; Remove dead code in InsertResultSet and flag skipCheckConstraints
   fixing a javadoc error by removing the javadoc comment relating to the removed parameter skipCheckConstraints


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1557832 13f79535-47bb-0310-9956-ffa450edef68"
fc9fd0d2a33cc8adc462a7489b8d95c9c4ef6709,"DERBY-6434: Correct privilege checks for DELETE statements; commit derby-6434-02-ac-correctDeletePrivs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1558387 13f79535-47bb-0310-9956-ffa450edef68"
dc3a0d791c894640ca95ec3b325973b3fcb3e388,"DERBY-6434: Test case verifying that DERBY-6432 has been fixed; commit derby-6434-03-ac-testCaseForDerby-6432.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1558398 13f79535-47bb-0310-9956-ffa450edef68"
d1ad6c975b076860aaec888713d29205f6fa7885,"DERBY-6434: Don't make INSERT statements require USAGE privilege on the datatypes of generated columns; fix remaining problem described by DERBY-6433; commit derby-6434-04-aa-dontNeedPrivOnGeneratedColumnTypeForInsert.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1558559 13f79535-47bb-0310-9956-ffa450edef68"
69ab4bd8f72122e9af37033d5cbd7b5f8aacc088,"DERBY-3155: Make the INSERT column list optional in the WHEN NOT MATCHED clause of a MERGE statement provided that the number of values in the VALUES subclause equals the number of columns in the target table; commit derby-3155-12-aa-canOmitInsertColumnList.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1558871 13f79535-47bb-0310-9956-ffa450edef68"
2945dbb8c8722c678779b5b4e6bdbcb7925bb177,"DERBY-3155: Allow system and temp tables in MERGE statements; commit derby-3155-13-aa-allowSystemAndTempTables.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1558912 13f79535-47bb-0310-9956-ffa450edef68"
856f8920445ea07819fcffe3d8140265cc0e0444,"DERBY-3155: Replace correlation names on the left side of the SET clauses in MERGE statements: commit derby-3155-14-aa-replaceCorrelationNamesOnLeftSideOfSETclauses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1559183 13f79535-47bb-0310-9956-ffa450edef68"
898f3f5adb736a5de8b464b5d6e9e3e65cd20b4f,"DERBY-3155: Make cleanup logic in MergeResultSet more closely resemble the cleanup logic in InsertResultSet; commit derby-3155-15-aa-replumbMergeResultSetCleanup.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1559218 13f79535-47bb-0310-9956-ffa450edef68"
4a2a03864caf1bf9487efa991a7baaf54ebd092c,"DERBY-6456: Infinite loop in NetworkServerControlImpl when reply >= 32k

Make sure the reply buffer in NetworkServerControlImpl is able to hold
the longest possible reply that it could see.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1559943 13f79535-47bb-0310-9956-ffa450edef68"
1d5c5918cb09f5f947df7bbee706e6520d35d04c,"DERBY-6455: Infinite loop in NetworkServerControlImpl.ensureDataInBuffer

Make NetworkServerControlImpl.ensureDataInBuffer() stop immediately if
it reaches end-of-stream.

Based on patch contributed by Martin Janda.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1559946 13f79535-47bb-0310-9956-ffa450edef68"
480456f6622db69484bb88b291e5e458a328ef70,"DERBY-3155: Allow for row location columns in the result column list of base tables; tests passed cleanly for me on derby-3155-16-aa-treatCurrentRowLocationNodeLikeBaseColumnNode.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1560134 13f79535-47bb-0310-9956-ffa450edef68"
1b72b60b2ce27b55ea0ea9d8bf9bf877ddffad38,"DERBY-3955; test lang/selectivity.sql can be revived
   committing patch 3 - which adds the remaining test cases from selectivity.sql to SelectivityTest.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1560247 13f79535-47bb-0310-9956-ffa450edef68"
badaed78c952b2b43205ffd21e4886121c5fbfaa,"DERBY-6457: NetworkServerControl API breaks when username or password
contains non-ascii characters

Make NetworkServerControlImpl.writeLDString() write the length in
bytes instead of characters to match how it is read by
NetworkServerControlImpl.readLDString().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1560311 13f79535-47bb-0310-9956-ffa450edef68"
7f8154de8fba4665f3019cd5cf6cdc6b2ddc9ca1,"DERBY-3155: Make MERGE statement serialize SQLRefs rather than HeapRowLocations; commit derby-3155-17-aa-serializingRowLocations.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1560452 13f79535-47bb-0310-9956-ffa450edef68"
c2a0bdd90984cc77cca542949902407445de95db,"DERBY-3155: Basic support for views as the source tables of MERGE statements; commit derby-3155-18-aa-basicView.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1560507 13f79535-47bb-0310-9956-ffa450edef68"
29007f04870842cee939c2e51a8978d4d0147d1e,"DERBY-6117: Give table functions more information about their execution environment; commit derby-6117-01-ab-AwareVTI.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1561668 13f79535-47bb-0310-9956-ffa450edef68"
1484b835a3fba878d1cba9f7c6ab3dfa3d28fd5a,"DERBY-3155: Forbid subqueries in the WHEN [ NOT ] MATCHED clauses of MERGE statements; commit derby-3155-19-aa-forbidSubqueriesInMatchedClauses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1561671 13f79535-47bb-0310-9956-ffa450edef68"
9f4fc5a7f7b111c9db5ca51885a883359ff31dd5,"DERBY-3955; test lang/selectivity.sql can be revived
   fixing an issue that showed up when the sequence of fixtures was different


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1561859 13f79535-47bb-0310-9956-ffa450edef68"
862666b908cc05f4beeadb8ab4ffe42990a1bf21,"DERBy-3955; test lang/selectivity.sql can be revived
   adding more checks for specific runtime statistics output, and attempting to eliminate further instability


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1561949 13f79535-47bb-0310-9956-ffa450edef68"
abd7a1226e9a7642303804a3dfceae0e3cf56c69,"DERBY-6437; ConstraintCharachteristicsTest testLockingWithRollback or testLockingWithCommit failing on trunk with AssertionFailedError - isolation levels ...
   adjusting the derby.locks.waitTimeout.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1563032 13f79535-47bb-0310-9956-ffa450edef68"
70d436bd39cf8c1fa637fc72f2dd176e174c7142,"DERBY-6117: Allow StringColumnVTIs to change their column names (once) based on their runtime environment; tests passed cleanly for me on derby-6117-02-aa-changeColumnNamesInStringColumnVTI.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1563135 13f79535-47bb-0310-9956-ffa450edef68"
b0456a0d2fb2f2f2d3689d544632817c2e86d11d,"DERBY-6464: Improve encapsulation of ResultColumn and ColumnReference; tests passed cleanly for me on derby-6464-01-aa-makeFieldsPrivate.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1563368 13f79535-47bb-0310-9956-ffa450edef68"
feecfdda8d13ba6553d03b92006d2c8d1a9ad8a0,"DERBY-6464: Fix javadoc warning; commit derby-6464-02-aa-fixJavadoc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1563512 13f79535-47bb-0310-9956-ffa450edef68"
10df8a5b0daa7be3d1907978d0d0c096570e4bfc,"DERBY-6117: Add a context-aware table function which could be used as an example in user docs; commit derby-6117-03-aa-ArchiveVTI.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1563944 13f79535-47bb-0310-9956-ffa450edef68"
35b7277594a2eaad691f16789781bd0ef351336c,"DERBY-6117: Add a sample CREATE FUNCTION statement to the javadoc for ArchiveVTI; commit derby-6117-04-aa-improveJavadoc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1563947 13f79535-47bb-0310-9956-ffa450edef68"
3c6be538665ba4d2f9d40f57669c8742c2faa5f7,"DERBY-6464: Make more fields in ResultColumn private; tests passed cleanly on derby-6464-03-aa-morePrivateFields.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1563987 13f79535-47bb-0310-9956-ffa450edef68"
c030c7861751591258e40cec0a9872ba52f6c284,"DERBY-6463  localcal demo seems to be obsolete and should be removed

Removed localcal directory, modified HTML files that referred to it.

Patch: DERBY-6463-2.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1564508 13f79535-47bb-0310-9956-ffa450edef68"
179127e1b65d17913d5a9a686a39a1946e7c3616,"DERBY-6463 localcal demo seems to be obsolete and should be removed

Removed build file that referred to obsolete demos.

Patch: DERBY-6463-2.diff



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1564513 13f79535-47bb-0310-9956-ffa450edef68"
1643c9c036a51b636087887b19b502bca92cb77c,"DERBY-5630; intermittent test failure in store/lockTableVTI.sql
  converting the lockTableVti.sql to LockTableVtiTest and take advantage of improved timing control.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1564608 13f79535-47bb-0310-9956-ffa450edef68"
a5a01336f594468eacb3927984f91219a6dc9912,"DERBY-5630; intermittent test failure in store/lockTableVTI.sql
   fixing up javadoc, some comments, adjusting some exception class thrown


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1564635 13f79535-47bb-0310-9956-ffa450edef68"
2f8e6fbd1c003ccb657a56b9009902c5449f4be0,"DERBY-3155: Revamp how columns referenced by WHEN [ NOT ] MATCHED clauses are linked to the columns coming back from the driving left join of a MERGE statement; commit derby-3155-20-aa-reworkColumnMatching.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1564874 13f79535-47bb-0310-9956-ffa450edef68"
813aa38e55d9dd4b54c5e28bb189318afe8d8526,"DERBY-4805(Increase the length of the RDBNAM field in the DRDA implementation)

This commit will allow RDBNAM to be 1024 bytes, thus lifting the limit from current 255bytes. I have changed the existing boundary test case to test for the new limit but the tests now use in-memory db jdbc url since on disk long urls were running into problem because of OS/file system limitation on the length of file name length.

As for newer client(version 10.11 and higher) going against an older server(10.10 and lower which will not have the fix for DERBY-4805 and hence will not accept the longer RDBNAM) with new RDBNAM limit, it will result in protocol exception. This is because when the client makes the first connect request to server, it has no way of knowing what server version it is talking to and hence there is no way to catch the length violation on the client side at this point.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1565491 13f79535-47bb-0310-9956-ffa450edef68"
b3f38f87e62a95d53852ab199144b4e6be2e46b0,"DERBY-3155: Forbid synonyms in MERGE statement; tests passed cleanly for me on derby-3155-21-ac-cleanupAndForbidSynonyms.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1565830 13f79535-47bb-0310-9956-ffa450edef68"
f2cad07d01b5265161ce477cfefb8fd5944d0315,"DERBY-3155: Add test to verify use of identifiers on the left side of SET clauses in MERGE statements; commit derby-3155-22-ad-testIdentifiersOnLeftSideOfSetClauses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1566625 13f79535-47bb-0310-9956-ffa450edef68"
6995fff99e95d4129fc0f65d01f9b278387d9d2c,"DERBY-2380: Make the generated class eligible for gc once the statement is invalidated

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1566635 13f79535-47bb-0310-9956-ffa450edef68"
3cc631bb8e1a76b642a35c2ea247e93c515782cf,"DERBY-3155: Forbid derived column lists in MERGE statements; commit derby-3155-23-aa-forbidDerivedColumnLists.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1566649 13f79535-47bb-0310-9956-ffa450edef68"
1a5b33edf4e0ce2e1486133641ef4587aa0b0227,"DERBY-3155: Add support for ? parameters to MERGE statements; commit derby-3155-24-aa-supportParameters.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1566673 13f79535-47bb-0310-9956-ffa450edef68"
3c26ad097ee4669f15c3428ad8f47d8cb8d14534,"DERBY-4805(Increase the length of the RDBNAM field in the DRDA implementation)

This commit makes the in-memory URLs in the test use absolute path names. That way, they won't be made longer after java.io.File.getCanonicalPath() has been called on them.

Without this change, the test was failing on Solaris but passing on Windows and Linux.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1566771 13f79535-47bb-0310-9956-ffa450edef68"
5d1ab6314bec5cf3a935e51a05685ab9cda39d72,"DERBY-3155: Add support for ? parameters as INSERT values in MERGE statements; commit derby-3155-25-aa-parametersAsInsertValues.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1567368 13f79535-47bb-0310-9956-ffa450edef68"
8ab61cc58611d28489c447bab15c4ccedb5f35b6,"DERBY-6477: OutOfMemoryError selecting from SYS.SYSALIASES

Disable LIKE optimization for very long columns.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1567604 13f79535-47bb-0310-9956-ffa450edef68"
04e416a676c36f2d7414564a4b7800425c28b049,"DERBY-5667; testReadCommitted(org.apache.derbyTesting.functionTests.tests.store.UpdateLocksTest)junit.framework.AssertionFailedError: Missing rows in ResultSet
   further improving error message in assert, and avoiding error message re table exists if a test case fails


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1567787 13f79535-47bb-0310-9956-ffa450edef68"
11f7ee3bcbc9799ba4bff23505bbf6e32fa95dd5,"DERBY-6464: Improve the encapsulation of ResultSetNode; commit derby-6464-04-ac-ResultSetNode.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1568436 13f79535-47bb-0310-9956-ffa450edef68"
fae21bfc8a583c39a253616069d7907316fe367f,"DERBY-6256: Modernize the vti demos and eliminate many obsolete classes; commit derby-6256-06-aa-revampVTIdemos.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1568509 13f79535-47bb-0310-9956-ffa450edef68"
c1a0ff21aef510df65aeca6758a9a5134d818341,"DERBY-896: Allow casts from DATE and TIME to TIMESTAMP

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1568924 13f79535-47bb-0310-9956-ffa450edef68"
1705596ae1f17af8d826864411d9f78eeb38af7a,"DERBY-3155: Propagate RowLocations out of index probes as necessary for the driving left join of a MERGE statement; commits derby-3155-26-aa-copyRowLocationForIndexScans.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1569396 13f79535-47bb-0310-9956-ffa450edef68"
1695a5dd72119b5f9286fff6d1204762d8f4874f,"DERBY-6459  Remove Class.forName calls that load JDBC driver from Derby samples/demos

Modified 9 Java files and 7 documentation files, and replaced 2 documentation text files with HTML files.

Patch: DERBY-6459-2.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1569470 13f79535-47bb-0310-9956-ffa450edef68"
bbd6aff4a0747159737ba23d5cbc9c56a63d5cd3,"DERBY-3155: Point matching refinement clauses into the row returned by the driving left join of the MERGE statement; commit derby-3155-27-aa-adjustMatchingRefinements.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1569521 13f79535-47bb-0310-9956-ffa450edef68"
66ed4a2e041558b96895f6e4856132277bc00fd0,"DERBY-6482: Revamp the VTI demo to behave more like the other demos; commit derby-6482-01-aa-moveResources.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1569611 13f79535-47bb-0310-9956-ffa450edef68"
dc795a594f4f3f35c207570f5e42694299e70cea,"DERBY-6459: Fix SimpleApp test failures

Update canon to match the changed demo.

Make the simpledemo suite use old-style JDBC driver autoloading (by
setting the jdbc.drivers property) so that it succeeds when running
from classes without reintroducing Class.forName() in SimpleApp.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1569662 13f79535-47bb-0310-9956-ffa450edef68"
b555753319d9dac47409f2e82d058d1550b2d011,"DERBY-6482: Copy built VTI demo classes into the demo directory of Derby distributions; commit derby-6482-02-aa-copyClasses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1570065 13f79535-47bb-0310-9956-ffa450edef68"
efa1efa9520fb98a271853e7a0b3cce00fe96bb2,"DERBY-3155: Prevent a MERGE statement from altering the same target row twice; commit derby-3155-28-aa-cardinalityViolations.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1570230 13f79535-47bb-0310-9956-ffa450edef68"
30e18dbac5c139059b56da54c4adc87d2923ff4c,"DERBY-3155: Remove some obsolete code which was causing a cross-schema MERGE statement to raise a missing schema error: commit derby-3155-29-aa-missingSchema.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1570352 13f79535-47bb-0310-9956-ffa450edef68"
fed9c08fd6198e8106156887720cfd5c83f61256,"DERBY-4160: getMetaData().getIndexInfo crashes with ""ERROR X0Y68: Column 'PARAM1' already exists.""

Use a shared code path for adding parameters to SYS.SYSCOLUMNS on the
first compilation and subsequent compilations of a meta-data query.
Previously, the first compilation took a different code path, but that
caused problems if two threads compiled a meta-data query at the same
time, and both threads thought they were first.

Set a savepoint before attempting to write a stored prepared statement
to the system tables in a nested transaction, and roll back to the
savepoint if an error happens. This prevents partially stored prepared
statements from lying around in the system tables after an error.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1570488 13f79535-47bb-0310-9956-ffa450edef68"
7b6ad6daa38a43b5fee2e297403f0791f671fa25,"DERBY-4753: ""ERROR 42X01: Syntax error: FALSE."" during call to java.sql.DatabaseMetaData.getIndexInfo

When recompiling a meta-data query after detecting that its plan is
stale, pass down a flag to the compiler to say that it's a meta-data
query and that use of internal syntax is allowed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1570490 13f79535-47bb-0310-9956-ffa450edef68"
29357110da3bee2746972164c0ff9088aec2951c,"DERBY-6280; test failure in SetQueryTimeoutTest ComparisonFailure: Output at line 16 expected:<Test[ing that PreparedStatement remembers timeout.]> but was:<Test[ SetQueryTimeoutTest FAILED]>
   adding details to the failure messages for this case


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1571534 13f79535-47bb-0310-9956-ffa450edef68"
d6401b1d9169446beeee792170224e2ecd001e00,"DERBY-6484: Include SQLState in client exception messages

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1571615 13f79535-47bb-0310-9956-ffa450edef68"
e71eb4681e8c3d2b6ca5280037b21b16ea04510c,"DERBY-6280; test failure in SetQueryTimeoutTest ComparisonFailure: Output at line 16 expected:<Test[ing that PreparedStatement remembers timeout.]> but was:<Test[ SetQueryTimeoutTest FAILED]>
  adjusting location getting start time for enhanced error message on failure


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1571764 13f79535-47bb-0310-9956-ffa450edef68"
2b606551629346933f3502033dc90d5a5ed8a572,"DERBY-6280; test failure in SetQueryTimeoutTest ComparisonFailure: Output at line 16 expected:<Test[ing that PreparedStatement remembers timeout.]> but was:<Test[ SetQueryTimeoutTest FAILED]>
  one more fix to the enhanced messages


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1571769 13f79535-47bb-0310-9956-ffa450edef68"
3e77b5adbd5b197ecbfe0849a720fc07f93a396f,"DERBY-3155: More improvements to column resolution in MERGE statements; tests passed cleanly for me on derby-3155-30-ab-moreCorrelationNames.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1571808 13f79535-47bb-0310-9956-ffa450edef68"
c655d66cd0cf1350b8174c6098e417dec92e7955,"DERBY-6213: Deprecate support for Java 5 and CDC

Remove reflection code in SQLDecimal.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1571938 13f79535-47bb-0310-9956-ffa450edef68"
daffaee4b8323b1f248e539e3db747f22740de8c,"DERBY-3155: Enforce correct privileges for DELETE actions of MERGE statements; tests passed cleanly on derby-3155-31-aa-deletePrivs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1572665 13f79535-47bb-0310-9956-ffa450edef68"
3c7d0d9d57f080f8f1df0b3b251bbe98f5d85ad1,"DERBY-3155: Add a test function to help in testing of udt privileges; commit derby-3155-32-aa-newTestFunction.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1572949 13f79535-47bb-0310-9956-ffa450edef68"
b93f9db8c6b9415539d059d8d33d25a8fa0fa565,"DERBY-6491: Don't require USAGE priv on the datatypes of SELECTed columns; commit derby-6491-ab-stopRequiringUsagePriv.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1573030 13f79535-47bb-0310-9956-ffa450edef68"
28dc366eb6cb39ddb58e4837215686aaa80b18eb,"DERBY-6488: Remove the EmbedSQLException class and the associated DerbySQLException interface.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1573534 13f79535-47bb-0310-9956-ffa450edef68"
09c30dd3e88b78235bdeebe1aef27b4aaf18e88f,"DERBY-6408: EXISTS returns NULL instead of FALSE

Make sure EXISTS subqueries are wrapped in an IsNullNode to convert
NULL to a BOOLEAN. Before, only NOT EXISTS subqueries were wrapped.

Make RowResultSetNode.preprocess() invoke preprocess() on the result
columns instead of directly on the subquery nodes. Calling it directly
on the subquery nodes prevented the result columns from seeing the
added IsNullNode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1573548 13f79535-47bb-0310-9956-ffa450edef68"
e5acc07dcf6b0e706ebf5c25d1c2b434d9a01225,"DERBY-6459  Remove Class.forName calls that load JDBC driver from Derby samples/demos

Modified top-level demo.html file to reflect changes to VTI demos.

Patch: DERBY-6459-3.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1573577 13f79535-47bb-0310-9956-ffa450edef68"
9a9d6589d26973d4b4764e885ecc65b447337ced,"DERBY-6434: Don't require privileges implicitly added by SELECT-driven INSERTS; tests passed cleanly on derby-6434-05-aa-selectDrivenInserts.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1573686 13f79535-47bb-0310-9956-ffa450edef68"
63574ff9a1f3f77426d27c79027b002a7b74b007,"DERBY-6488: Get rid of the EmbedSQLException class

Remove the newEmbedSQLException methods, since they don't produce
EmbedSQLExceptions anymore, and use the SQLExceptionFactory methods
instead.

Add a Throwable parameter to seeNextException() so that the root cause
will be shown when printStackTrace() is called on the top-level
exception.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1573934 13f79535-47bb-0310-9956-ffa450edef68"
87920f7aa369ef2640483813f91242112bb375e9,"DERBY-6409: Wrong result from quantified comparison

Add test case to verify that the fix for DERBY-6408 fixed this bug too.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1573935 13f79535-47bb-0310-9956-ffa450edef68"
18792e22b2e025d650619cab20376346ea3b5e99,"DERBY-3155: Add privilege checks for the INSERT actions of MERGE statements; tests passed cleanly on derby-3155-33-ab-insertPrivs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574131 13f79535-47bb-0310-9956-ffa450edef68"
cb184fe833ba1e5564ee05c030295f9b7d1ea32d,"DERBY-6493: Improve reporting of exceptions wrapped in InvocationTargetException

Unwrap InvocationTargetException and PrivilegedActionException before
reporting them so that it is easier to see what the real error is.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574425 13f79535-47bb-0310-9956-ffa450edef68"
7dd317bc152847c5ef7abffb271850035ccb0f60,"DERBY-6408: Fix typo in comment

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574464 13f79535-47bb-0310-9956-ffa450edef68"
0d23c0d8112e8a50e715e1525fb629f7181040e6,"DERBY-6025(Wrong results with IN lists and indexes in territory based collation)

Basically, when all the elements in the inlist are not all constants, then we can not figure out at compile time the minimum and maximum values in the list. Mimimum and maximum values in the in list are required to be passed as start and stop keys if compiler decides to use an index for the inlist predicate. Since these can not be determined at compile time for non constant elements, InListOperatorNoce.generateStartStopKey ends up generating code which will run at execution time of the query and at that time, we will compare the values of the individual elements in the in list to determine the minimum and maximum values. The porblem is that currently, Derby does not pass the collation information of the left operand of the inlist to execution time and because of that, we end up doing English comparison of the values rather than terriroty based comparison in case of territory based database. The fix is to have InListOperatorNoce.generateStartStopKey generate code to pass collation information also. This way, we will do collation based comparison of in list elements in case of territory based database. I have run the reproducible case from jira against my changes and the query now returns correct row. I have run derbyall against the changes and it finished with no errors. The junit suite is running into following 3 failures but I have verified that those 3 failures happen without my changes too. So I will assume that these failures are not caused by my changes. The failures are copied below.
There were 3 failures:
1) testStartNetworkServerLogMessageOnDualStart(org.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetAutoStartTest)junit.framework.AssertionFailedError: did not find the expected string: An exception was thrown during network server startup within the maximum wait time 240000
at org.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetAutoStartTest.testStartNetworkServerLogMessageOnDualStart(DerbyNetAutoStartTest.java:272)
2) test_5391(org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest)junit.framework.AssertionFailedError
at org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.vetTimestamp(SysDiagVTIMappingTest.java:933)
3) test_5391(org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest)junit.framework.AssertionFailedError
at org.apache.derbyTesting.functionTests.tests.lang.SysDiagVTIMappingTest.vetTimestamp(SysDiagVTIMappingTest.java:933)




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574565 13f79535-47bb-0310-9956-ffa450edef68"
ffbe8135876ae861feb9995f51a251723b469a8a,"DERBY-3155: Add privilege checks for the UPDATE actions of MERGE statements; commit derby-3155-34-ab-updatePrivs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574566 13f79535-47bb-0310-9956-ffa450edef68"
b1c9bd27989d7163ac4ad9c7286e38a170757958,"DERBY-6495; Error in SelectivityTest.testBasic
   add more columns to a number of order by statements to pin the results down.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574634 13f79535-47bb-0310-9956-ffa450edef68"
02fcca3729ed28a4be5900f965da3f8413b4026e,"DERBY-6496: Fix NPE while loading optional tools; tests passed cleanly on derby-6496-01-ab-useClassFactoryContext.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574752 13f79535-47bb-0310-9956-ffa450edef68"
63ecb285f23d6087e4bf314e7e3f02dc2bc8d555,"DERBY-6496: Fix NPE in loading of the optimizer tracing tool; tests passed cleanly on derby-6496-02-aa-optimizerTracer.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574927 13f79535-47bb-0310-9956-ffa450edef68"
4e7a614bfccaa2cac63b80973b0018c36fa19320,"DERBY-6496: Simplify the test case

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574946 13f79535-47bb-0310-9956-ffa450edef68"
6ffb11250ad4f40f2bf064671774246e5c769c64,"DERBY-3155: Add a test case for privilege checking on a MERGE statement with all 3 kinds of actions; commit derby-3155-35-aa-allPrivsTest.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1574956 13f79535-47bb-0310-9956-ffa450edef68"
a19ac61c58127cf95cb6ddefb802c30272ccdbff,"DERBY-3155: Add lock mode comment to master MERGE node; commit derby-3155-36-aa-lockModeComment.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1575026 13f79535-47bb-0310-9956-ffa450edef68"
ddfefebc5205f026d556edf08287fa8607d66bf7,"DERBY-3155: Implement printSubNodes() for MergeNode and MatchingClauseNode; commit derby-3155-37-aa-printSubNodes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1575032 13f79535-47bb-0310-9956-ffa450edef68"
6e6ee8d9006496005969a11cc3ebc892d9fe836a,"DERBY-6250; nightly regression test failure: jdbc4.LoginTimeoutTest testBasic client/server java.sql.SQLTimeoutException: XBDA0, Login timeout Exceeded and junit.framework.AssertionFailedError: Should not have been able to connect!
  attempt to add more time for failing situations, and add more details to error message on failure.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1575065 13f79535-47bb-0310-9956-ffa450edef68"
15e94e0d3b31c9d0bb28841f7e591536832a30b1,"DERBY-6267; Add ability to compactly specify a complete query plan in an optimizer override.
   adding accessDeclaredMembers permission to the derbyTesting.codeclasses codebase in lang/resultSetReader.policy.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1575164 13f79535-47bb-0310-9956-ffa450edef68"
3e293c2435ff52a91169f8ec8f555c0b83fbec2c,"DERBY-4403: Disallow subqueries in the GROUP BY list

Queries that were grouped by subqueries used to fail with a
NullPointerException or an assert failure. Make them fail with a
proper syntax error instead.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1575226 13f79535-47bb-0310-9956-ffa450edef68"
e828232ee333129964ccae4c0ac7a1684c67ef28,"DERBY-5313: Assert failure with CASE expression in GROUP BY clause

Remove assert that doesn't expect expressions in the GROUP BY list.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1575866 13f79535-47bb-0310-9956-ffa450edef68"
d3347b5f7da5ca4c00634c30761fab58aa0464d7,"DERBY-3155: Add datatype tests for MERGE statement and fix bug involving xml types in MERGE statements; tests passed cleanly on derby-3155-38-aa-datatypes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1576027 13f79535-47bb-0310-9956-ffa450edef68"
a4a5f1acb1da9161a22976dbceec6e04c4f58e60,"DERBY-3155: Fix build problem introduced by derby-3155-38-aa-datatypes.diff; commit derby-3155-39-aa-fixBuild.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1576062 13f79535-47bb-0310-9956-ffa450edef68"
05677661f08366f96257a924ad9349c9afb12157,"DERBY-1997  Misleading text in WwdEmbedded demo source file for Working With Derby

Modified two demo source files to make embedded and client error handling identical.

Patch: DERBY-1997.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1576342 13f79535-47bb-0310-9956-ffa450edef68"
af1c18c5023d0a43dc2d404a44edd30f20cfeac2,"DERBY-532 Support deferrable constraints

Patch derby-532-check-constraints-2 which implements deferred CHECK
constraints and supporting tests.

The high level approach is as follows.  When a violation occurs, we note the row
location in the base table of the offending row. At commit time (or when
switching a constraint to immediate), we revisit those rows using the row
locations if they are still valid, and validate those rows again. This is
achieved by positioning to the saved row locations in combination with a
specially crafted result set: ValidateCheckConstraintResultSet (see
ProjectRestrictResultSet#getNextRowCore) which positions to the offending base
row using ValidateCheckConstraintResultSet#positionScanAtRowLocation before
letting ValidateCheckConstraintResultSet read the row. If the row locations are
no longer valid, e.g. an intervening compress happened, we do a full table scan
to verify the constraints instead.

Adding a constraint in deferred constraint mode is currently sub-optimal, since
we currently do a full table scan via an internally generated ""SELECT .. WHERE
NOT <constraints>"", and we don't have a way the get at the row locations of the
offending rows in this case. I might add a specially tailored result set for
that purpose later.

Normally, when a row is inserted or updated, we execute a generated method which
combines evaluation of all check constraints on the table relevant for the
inserted or updated columns. This evaluation is performed using McCarthy boolean
evaluation (short-circuits as soon as result is known). This isn't optimal for
deferred constraints, as we'd need to assume all constraints were violated in
such a case. The implementation replaces the short-circuited evaluation with a
full evaluation, so we can remember exactly which constraints were violated,
cf. AndNoShortCircuitNode and SQLBoolean#throwExceptionIfImmediateAndFalse. A
violation in throwExceptionIfImmediateAndFalse when we have a deferred
constraint is noted (DMLWriteResultSet#rememberConstraint implemented by
UpdateResultSet and InsertResultSet) by adding the violation to a list for that
row. After the insert/update is completed, the set of violations is remembered
for posterity, cf. InsertResultSet#normalInsertCode and
UpdateResultSet#collectAffectedRows by inspecting the lists
(#violatingCheckConstraints).

Note that we currently do not note which constraints were violated *for each
individual row*, only per table in the transaction. This means that we visit
potentially more rows over again when a single constraint is changed to
immediate.  This could be improved further by storing the set of violated
constraints along with the row location.

For bulk insert and deferred (see panel 1 below) insert row processing there is
special code paths, cf.  InsertResultSet#offendingRowLocation which is invoked
via a callback from HeapController#load and another path in
InsertResultSet#normalInsertCode respectively.

For update, the code for deferred treatment is in in one of
UpdateResultSet#collectAffectedRows and UpdateResultSet#updateDeferredRows
depending on whether there are triggers.

The existing test ConstraintCharacteristcsTest has been built out by adding
check constraint to those fixture for which it is relevant, as well as adding
new ones which are only relevant for check constraints.

[1] This ""deferred"" refers to Derby special handling of rows in certain
situation, for example when doing an insert which uses the same table as a
source result set, we need to make sure we don't get confused and see the
incrementally inserted rows ""again"" as we process the original result set,
essentially we do a snapshot of the source result set, hence ""deferred rows"".

All regressions passed.

Detailed code comments:

M java/engine/org/apache/derby/iapi/sql/conn/SQLSessionContext.java
M java/engine/org/apache/derby/impl/sql/conn/SQLSessionContextImpl.java
M java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java
M java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java
D java/engine/org/apache/derby/impl/sql/execute/DeferredDuplicates.java
A java/engine/org/apache/derby/impl/sql/execute/DeferredConstraintsMemory.java

Extended and refactored slightly existing mechanism for deferred primary
key/unique constraints to also cater for check constraints. Since the hash key
we used for the memory of primary key and unique constraints was the
conglomerate id of the indexes, and those are guaranteed to be disjoint from the
conglomerate ids of the base tables having deferred constraints, we can use the
same hash table to find the ""memory"" in the form of the disk based hash table
(BackingStoreHashtable), cf.  LCC#getDeferredHashTables.--

M java/engine/org/apache/derby/iapi/sql/dictionary/ConstraintDescriptor.java-

Code to drop any deferred constraints memory in the transaction when a
constraint is dropped.-

M java/engine/org/apache/derby/impl/store/access/heap/HeapController.java

Call back added for bulk insert in the presence of deferrable check constraints.

M java/engine/org/apache/derby/iapi/sql/execute/NoPutResultSet.java
M java/engine/org/apache/derby/impl/sql/execute/NoPutResultSetImpl.java
M java/engine/org/apache/derby/iapi/store/access/RowLocationRetRowSource.java

Extra plumbing to be able to signal to HeapController that we need to do a
callback with the inserted row location (for bulk insert)

M java/engine/org/apache/derby/iapi/sql/execute/TargetResultSet.java

Extra interface method, offendingRowLocation. Only implemented with meaningful
semantics for NoPutResultSetImpl which calls it for its targetResultSet, an
InsertResultSet.

M java/engine/org/apache/derby/iapi/sql/execute/ResultSetFactory.java
M java/engine/org/apache/derby/impl/sql/execute/GenericResultSetFactory.java

More parameters to getProjectRestrictResult set to do the magic mention in the
overview for that result set, pass along schema and table name to
InsertResultSet so we can remember them for check violations. They are used to
produced checking SQL statements. This may be a bit fragile, since a rename
schema or table could make those invalid. However, there is presently no RENAME
SCHEMA in Derby and the RENAME TABLE is illegal in certain cases, notably if
there is a check constraint defined on it, so the solution should be OK for
now. Also adds an interface method, getValidateCheckConstraintResultSet, to
allow the execution run-time to build one of those, cf. code generation logic in
NestedLoopStrategy#resultSetMethodName.

M java/engine/org/apache/derby/iapi/sql/execute/RowChanger.java
M java/engine/org/apache/derby/impl/sql/execute/RowChangerImpl.java

Extra parameter to insertRow to get at the row location if needed.

M java/engine/org/apache/derby/iapi/store/access/BackingStoreHashtable.java
M java/engine/org/apache/derby/iapi/store/access/ScanController.java

Javadoc fixes.

M java/engine/org/apache/derby/iapi/types/BooleanDataValue.java
M java/engine/org/apache/derby/iapi/types/SQLBoolean.java

Extra method throwExceptionIfImmediateAndFalse used by deferred check
constraints to make a note of all violated constraints as evaluated by the
generated method. Picked up by InsertResultSet or UpdateResultSet.

A java/engine/org/apache/derby/impl/sql/compile/AndNoShortCircuitNode.java
M java/engine/org/apache/derby/impl/sql/compile/AndNode.java
M java/engine/org/apache/derby/impl/sql/compile/DMLModStatementNode.java

AndNoShortCircuitNode is used to represent a non-McCarthy evaluation of the
combined check constraints. See usage in DMLModStatementNode#generateCheckTree.

M java/engine/org/apache/derby/impl/sql/compile/DeleteNode.java

Extra dummy parameter added for call to super#bindConstraints
(DMLModStatementNode). Only used by insert.

M java/engine/org/apache/derby/impl/sql/compile/FromBaseTable.java

Pick up the DERBY_PROPERTIES value for property ""validateCheckConstraint =
<conlomerateId>"" we provide to the checking query (internal syntax only)
generated by DeferredConstraintsMemory#validateCheck.  The conglomerate id is
used to retrieve the violating rows information set up by
ProjectRestrictResultSet#openCore to drive ValidateCheckConstraintResultSet.

M java/engine/org/apache/derby/impl/sql/compile/InsertNode.java

Boolean member variable to know if we have a deferrable check constraint; also
pass only schema and table name to the result set. Passed on to the
InsertConstantAction from which InsertResultSet can pick it up.

M java/engine/org/apache/derby/impl/sql/compile/ProjectRestrictNode.java

Logic to keep track of whether we are used by the special internal query to
check violated check constraints.  In this case we also do not push the check
predicates down to store for simpler handling.

M java/engine/org/apache/derby/impl/sql/compile/QueryTreeNode.java

Code to parse a long value from ""--DERBY-PROPERTIES"" property.

M java/engine/org/apache/derby/impl/sql/compile/SetConstraintsNode.java

Extra code to comply with the sane mode parse tree printing conventions.

M java/engine/org/apache/derby/impl/sql/compile/TestConstraintNode.java

Handle different code generation for deferrable check contraints.

M java/engine/org/apache/derby/impl/sql/compile/UpdateNode.java

Pass on more info: schema and table name + small refactoring.

M  java/engine/org/apache/derby/impl/sql/compile/sqlgrammar.jj

Handle the new internal query to validate violated check constraints. Cf. query
in DeferredConstraintsMemory#validateCheck.

M java/engine/org/apache/derby/impl/sql/execute/AlterConstraintConstantAction.java
M java/engine/org/apache/derby/impl/sql/execute/CreateConstraintConstantAction.java

Open up for check constraints.

M java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java
M java/engine/org/apache/derby/impl/sql/execute/ConstraintConstantAction.java

ATCA: Special handling of adding a deferred check constraint: need different
code path to get the UUID of constraint soon enough to be able to note any
constraint violations. CCA: note any violation and remember it.  We'd like to
remember that row locations of the offending rows here, but not done for now, so
at checking time, we'll need a full table scan. This can be improved upon, see
code comment.

M java/engine/org/apache/derby/impl/sql/execute/GenericConstantActionFactory.java
M java/engine/org/apache/derby/impl/sql/execute/UpdateConstantAction.java
M java/engine/org/apache/derby/impl/sql/execute/InsertConstantAction.java

Pass on more info to InsertConstantAction and UpdateConstantAction needed by the
result sets.

M java/engine/org/apache/derby/impl/sql/execute/InsertResultSet.java

Drives the checking for check constraints, and picks up the result. If we have
violations and deferred constraints, we remember that. Also some refactorings to
avoid local variables shadowing globals.

M java/engine/org/apache/derby/impl/sql/execute/UpdateResultSet.java

Drives the checking for check constraints, and picks up the result. If we have
violations and deferred constraints, we remember that.

M java/engine/org/apache/derby/impl/sql/execute/NoRowsResultSetImpl.java

Removed unused method.

M java/engine/org/apache/derby/impl/sql/execute/ProjectRestrictResultSet.java

Drive the special result set, ValidateCheckConstraintResultSet by positioning it
correctly for each row retrieved, using the remembered row locations from
violation time.

M java/engine/org/apache/derby/impl/sql/execute/SetConstraintsConstantAction.java

Added logic for check constraints. Also added a new check that the user don't
specify the same constraint twice, cf new test case for it.

M java/engine/org/apache/derby/impl/sql/execute/TableScanResultSet.java

Make some members protected rather than private, to let the new result set
ValidateCheckConstraintResultSet inherit from it.

M java/engine/org/apache/derby/impl/sql/execute/TemporaryRowHolderResultSet.java
M java/engine/org/apache/derby/impl/store/access/sort/MergeScanRowSource.java
M java/engine/org/apache/derby/impl/store/access/sort/SortBufferRowSource.java
M java/engine/org/apache/derby/impl/sql/execute/CardinalityCounter.java
M java/engine/org/apache/derby/impl/sql/execute/DMLWriteResultSet.java

Boiler plate to comply with interface (not used).

M java/engine/org/apache/derby/impl/sql/execute/UniqueIndexSortObserver.java
M java/engine/org/apache/derby/impl/sql/execute/UniqueWithDuplicateNullsIndexSortObserver.java
M java/engine/org/apache/derby/impl/sql/execute/IndexChanger.java
M java/engine/org/apache/derby/impl/sql/execute/CreateIndexConstantAction.java

Refactoring only.

A java/engine/org/apache/derby/impl/sql/execute/ValidateCheckConstraintResultSet.java

The new result we use to check violating rows only based on row location

M java/engine/org/apache/derby/iapi/sql/compile/JoinStrategy.java
M java/engine/org/apache/derby/impl/sql/compile/HashJoinStrategy.java
M java/engine/org/apache/derby/impl/sql/compile/NestedLoopJoinStrategy.java

New boolean to signal that we want ValidateCheckConstraintResultSet

M java/engine/org/apache/derby/jdbc/EmbedXAResource.java
M java/engine/org/apache/derby/jdbc/XATransactionState.java

Extra logic to handle check constraints (already had it for primary key and unique).

M java/engine/org/apache/derby/iapi/error/ExceptionUtil.java

Utility method to determine if an exception if a transaction deferred constraint
violation. Needed by the XA code.

M java/engine/org/apache/derby/loc/messages.xml
M java/shared/org/apache/derby/shared/common/reference/SQLState.java

New error messages

M java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConstraintCharacteristicsTest.java

New test cases and extension of present ones to include check constraints

M java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_11.java

Extension of present test cases to include check constraints.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1576367 13f79535-47bb-0310-9956-ffa450edef68"
273d23fd787569342d5c6e4793d333f0db8b4db6,"DERBY-3155: Add tests for largish lobs in MERGE statements; commit derby-3155-40-aa-bigLobs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1576383 13f79535-47bb-0310-9956-ffa450edef68"
d56ee6a7a494e027ed3617ad2596408ba3469217,"DERBY-6505: Clean up dead code in FileUtil

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1576673 13f79535-47bb-0310-9956-ffa450edef68"
030bfacb0277eb2704a083c0db627181137fcda5,"DERBY-6505: Clean up dead code in FileUtil

Add test that exercises FileUtil methods that are only used in soft
upgrade from 10.8 or earlier when backing up databases that contain
jar files.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1576691 13f79535-47bb-0310-9956-ffa450edef68"
03170a559b875f2f2d5b945682605be5db417bbf,"DERBY-3155: Add a test for MERGE statements which sometimes put nulls into generated columns and sometimes don't; commit derby-3155-41-aa-nullGeneratedColumns.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1576710 13f79535-47bb-0310-9956-ffa450edef68"
2d835fe52f714dd90230b1eb7a825ad432623c5b,"DERBY-3155: Add test for MERGE statement which fires triggers involving generated columns; commit derby-3155-42-aa-triggersAndGeneratedColumns.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1576893 13f79535-47bb-0310-9956-ffa450edef68"
8d4d0876793ac1104024f39db60b8d3b40a33c77,"DERBY-6505: Clean up dead code in FileUtil

Remove FileUtil.newFile(), which is a workaround for a bug in old Java
versions that are no longer supported.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1577083 13f79535-47bb-0310-9956-ffa450edef68"
c4cfffbb74a943bf874b9ffdca24f6c6b538079b,"DERBY-532 Support deferrable constraints

Added an extra test case.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1577134 13f79535-47bb-0310-9956-ffa450edef68"
efb65feff79e50dd2cd2be5b7c734a2c3b703428,"DERBY-6507 Convert lang/fk_nonSPS.sql to JUnit ForeignKeysNonSpsTest

Patch derby-6707-2 which does the conversion.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1577135 13f79535-47bb-0310-9956-ffa450edef68"
0ee1994f0618a6fc4a04b74f6fbc30892029afc9,"DERBY-6500: Add ORDER BY clauses to the queries in AutoIncrementTest in order to eliminate row ordering diffs in the test results; commit derby-6500-01-aa-addOrderByClauses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1577190 13f79535-47bb-0310-9956-ffa450edef68"
562dccb14161089d305809d84bc4003faa85f651,"DERBY-6508 Convert lang/LOBDB2compatibility.sql to JUnit LOBDB2compatibilityTest

Patch derby-6508-2 which converts the test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1577253 13f79535-47bb-0310-9956-ffa450edef68"
77b6e859ea23e8162d311b3af9843c73a88742ae,"DERBY-3155: Eliminate redundant copies of columns in the select list of the driving left join for MERGE statements; commit derby-3155-43-aa-eliminateDuplicateColumnRefs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1577566 13f79535-47bb-0310-9956-ffa450edef68"
83f11b860cec6d12c3d6cbff39d149850f4d66a2,"DERBY-6248; nightly regression test failure: testDerby966(org.apache.derbyTesting.functionTests.tests.jdbcapi.XATest)java.sql.SQLFeatureNotSupportedException: The DDM object 0x2408 is not supported. The connection has been terminated.
  working around the issue by adding a rollback.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1578192 13f79535-47bb-0310-9956-ffa450edef68"
8c39c1c30655853ee29d6317a6cc1f4f5f112fe7,"DERBY-6511: Convert primitives to wrapper types as appropriate when chaining functions; tests passed cleanly on derby-6511-01-aa-fixPrimitiveToWrapper.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1578479 13f79535-47bb-0310-9956-ffa450edef68"
a2b37c2a1064eaf3070b30c23853781efbb57714,"DERBY-3155: Materialize LOBs before buffering them up for processing by WHEN [ NOT ] MATCHED clauses; commit derby-3155-44-aa-lobsInTriggers.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1578535 13f79535-47bb-0310-9956-ffa450edef68"
8a90f7cdbfdd4ec9a1d734ee3197d4d25956fa35,"DERBY-3155: Add tests for the (de)serialization of MERGE statements; commit derby-3155-45-aa-serialization.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1578920 13f79535-47bb-0310-9956-ffa450edef68"
89f969c4dc94fde81b71888f1c18e35fbc1242a7,"DERBY-3155: Verify that columns needed for triggers are buffered up by MERGE statements, even when the MERGE statements do not mention those columns; commit derby-3155-46-aa-deferredDeletes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1578945 13f79535-47bb-0310-9956-ffa450edef68"
1a3e2c0c89daf2cfd1e19bff18385e84dcacf482,"DERBY-3155: Run all MERGE tests with and without collations; commit derby-3155-47-aa-collations.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579040 13f79535-47bb-0310-9956-ffa450edef68"
9d3ad3252ff0f8ade5fce4903c574b719b5e9185,"DERBY-3155: Add test for MERGE statement which reads the target table via an index; commit derby-3155-48-aa-indexScan.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579685 13f79535-47bb-0310-9956-ffa450edef68"
757bc0e12832474d0a3e107c9053140593b5b7c6,"DERBY-3155: Cleanup MERGE statement in order to make the code more readable; commit derby-3155-49-aa-cleanup1.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579725 13f79535-47bb-0310-9956-ffa450edef68"
358b3c8ba46635be9c19962aad7d651bba556aa1,"DERBY-6509 Convert lang/currentSchema.sql to JUnit CurrentSchemaTest

Patch derby-6509-1 which converts the test and wires in and out of
the JUnit and harness test suites respectively.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579759 13f79535-47bb-0310-9956-ffa450edef68"
e8ae6c99946e2894a971fd9849ef211e7e711b4b,"Remove unused file master/largeCodeGen.out

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579760 13f79535-47bb-0310-9956-ffa450edef68"
53521cca489eeb2d5fefc2238b7dcc9e607e4ffc,"DERBY-6514 Convert lang/aggbuiltin.sql to JUnit AggBuiltinTest

Patch derby-5614 which does the conversion.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579761 13f79535-47bb-0310-9956-ffa450edef68"
748a5b61a987b7b6aeff7d1014d95eb102705ffd,"DERBY-6516 Convert lang/nestedCommit.sql to JUnit NestedCommitTest

Patch derby-6515 converts the test in question to JUnit and wires it
into the lang suite while removing it from the harness tests.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579762 13f79535-47bb-0310-9956-ffa450edef68"
43ec8350292e5c1d22a41a1c45f85c80dcb8c93e,"DERBY-6517 Convert lang/consistencyChecker.sql to JUnit ConsistencyCheckerTest

Patch derby-5617.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579763 13f79535-47bb-0310-9956-ffa450edef68"
86db097119858feb0af610086ac473e6bafdc5cf,"DERBY-6519 Convert lang/joinDeadlock.sql to JUnit JoinDeadlockTest

Patch derby-6519.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579765 13f79535-47bb-0310-9956-ffa450edef68"
6048528d42980e27c7774a3eb5c01a17086f3c5b,"DERBY-5111 NullPointerException on unique constraint violation with unique index

Patch derby-5111.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579766 13f79535-47bb-0310-9956-ffa450edef68"
d36ca188ac308db6125f1a8685fb7ac9918d732c,"DERBY-6523 Convert lang/triggerBeforeTrig.sql to JUnit TriggerBeforeTrigTest

Patch derby-6523.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579767 13f79535-47bb-0310-9956-ffa450edef68"
8a59583bbbc63f60cf37e5bac558d04ecc29c10f,"DERBY-6520 Convert lang/triggerGeneral.sql to JUnit TriggerGeneralTest

Patch derby-6520-3.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579768 13f79535-47bb-0310-9956-ffa450edef68"
0ae3b6de0233efefe0e5342cb1ced8faa38ec424,"DERBY-3155: Simplify processing of then rows for the DELETE actions of MERGE statements; commit derby-3155-50-aa-revampDeleteThenRows.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579937 13f79535-47bb-0310-9956-ffa450edef68"
4cf6633b3aa0c1ff7147a31aee21a32ec152b3c0,"DERBY-3155: Improve comments for compilation of MERGE statements; commit derby-3155-51-aa-cleanup2.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1579950 13f79535-47bb-0310-9956-ffa450edef68"
d847cede36f79454a35275a76801ace0a981d32d,"DERBY-590: First increment of support for Lucene indexing of Derby text columns; tests passed cleanly on derby-590-01-am-publicAccessToLuceneRoutines.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1580387 13f79535-47bb-0310-9956-ffa450edef68"
5b79ae0774a8f30b1eeedbcf256d6a46d3687a4d,"DERBY-590: Cleanup some suspect coding practices disclosed by running the Findbugs lint tool; commit derby-590-02-aa-cleanupFindbugsErrors.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1580587 13f79535-47bb-0310-9956-ffa450edef68"
24a50ba629952e4b814876cc6b41839c8dc6f70e,"DERBY-590: Remove some debug cruft from the junit-single target; commit derby-590-03-aa-removeTestingDiagnostic.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1580611 13f79535-47bb-0310-9956-ffa450edef68"
4f7eee8a87813dab15257f7974d62a24ac0fd79d,"DERBY-6503: ClassCastException when network server cannot restrict file permissions

Make sure the underlying IOException is exposed if the network server
fails to restrict file permissions. The original exception used to be
shadowed by a ClassCastException.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1580789 13f79535-47bb-0310-9956-ffa450edef68"
9fb7cc55d2def22078e725e76732667649ed37e6,"DERBY-6503: Ignore LinkageErrors when loading FilePermissionServiceImpl

When attempting to load the class on Java 6, an
UnsupportedClassVersionError is (correctly) raised, but it is not
among the exceptions that are caught and ignored. Add a catch clause
for its superclass LinkageError to handle it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1580845 13f79535-47bb-0310-9956-ffa450edef68"
9cfeeb1e41494d6d04e0544aefe2bc9247d7510f,"DERBY-3155: Forbid MERGE statements in soft-upgraded databases; commit derby-3155-52-aa-upgrade.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1580889 13f79535-47bb-0310-9956-ffa450edef68"
cb621993d29a362d73ac3fc745490efa482968cd,"DERBY-590: Remove the ID column from the Lucene plugin listIndexes() table function; commit derby-590-04-aa-removeIDFromListIndexes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1581312 13f79535-47bb-0310-9956-ffa450edef68"
c40b7edf6ceda44519c8a2fde3442a2c50446eb6,"DERBY-6518: JVMInfo should not use parseFloat() to parse java.specification.version

Change the parse logic so that it recognizes that version 1.10 is greater than 1.9.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1581777 13f79535-47bb-0310-9956-ffa450edef68"
27905092e72ba64271310444606fb8edffa28960,"DERBY-6468; Add a version number to derbyTesting.jar
   - a new properties file, org/apache/derby/info/tsting.properties, is generated with the required info
   - this file is inserted in to derbyTesting.jar
   - sysinfo reflects the location of the org.apache.derbyTesting package if an indicative class is found in the classpath


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1581885 13f79535-47bb-0310-9956-ffa450edef68"
6aeea9cd177638d4e1ba5212db4ce45b432c8f61,"DERBY-590: Fix two problems seen in LuceneSupportPermsTest during the continuous integregation and nightly tests; commit derby-590-05-aa-accessDeclaredMembers.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1581935 13f79535-47bb-0310-9956-ffa450edef68"
a81af8ac05e4e3ede7f80e3f918b139401d62d5d,"DERBY-590: Add another privilege to the test policy for the Lucene plugin; commit derby-590-06-aa-suppressAccessChecks.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1582090 13f79535-47bb-0310-9956-ffa450edef68"
c01834e06bfc3fab14b4946b467a28f6d38b48ce,"DERBY-590: Grant another privilege to Lucene; commit derby-590-07-aa-accessClassInPackage.sun.misc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1582178 13f79535-47bb-0310-9956-ffa450edef68"
4a08a159f268438fdb016cff0586f89da18dd579,"DERBY-2162/DERBY-5618: Close the URLClassLoader when tests are done
with it so that file handles are freed and the jar files can be
deleted.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1582220 13f79535-47bb-0310-9956-ffa450edef68"
d3c56ba64828e30f3ce32724a77285afcda7388e,"DERBY-590: Add flag for running tests without the Lucene jar files; commit derby-590-08-aa-omitLuceneFlag.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1582514 13f79535-47bb-0310-9956-ffa450edef68"
9f1b314645ee725b3b94fe8372efc2da4d52800c,"DERBY-5615: Permission problems with classpath subsubprotocol

Wrap CPFile's privileged operations in doPrivileged() so that
classpath databases can be accessed with a security manager.

Make more of the test cases in DatabaseClassLoadingTest and
NativeAuthenticationServiceTest run with a security manager.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1582655 13f79535-47bb-0310-9956-ffa450edef68"
0f43aec711b158ad9a142d688f7940caba4bd84c,"DERBY-5615: Permission problems with classpath subsubprotocol

Change the structure of CPFile.getInputStream() back to what it was
before the original fix for this issue (revision 1582655), but with
doPrivileged() calls around all operations that require privileges.

The restructuring in the original fix apparently prevented some
resources from being freed, so that DatabaseClassLoadingTest and
NativeAuthenticationServiceTest failed on Windows platforms because
they could not delete the jar file that contained the classpath
database.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1582754 13f79535-47bb-0310-9956-ffa450edef68"
75227075f76b4222d3b346b7662e39b1d84767eb,"DERBY-5111 NullPointerException on unique constraint violation with unique index

Patch derby-5111-test, which adds the repro for this issue as a new test case.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1582819 13f79535-47bb-0310-9956-ffa450edef68"
2277df22efd124bc5fef9e1d9650687499daa4df,"DERBY-590: Make the Lucene plugin locale-sensitive; commit derby-590-09-aa-localeSensitiveAnalysis.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583032 13f79535-47bb-0310-9956-ffa450edef68"
1a8d0346733f2ab06a7a66c6ac1d5f645e8b7d84,"DERBY-590: Fix a locale-sensitive Lucene test; commit derby-590-10-aa-fixLocaleTest.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583200 13f79535-47bb-0310-9956-ffa450edef68"
fbf176c8d2ac784f2f6ffc9a0b3aaa9b4e78b50e,"DERBY-590: Move Lucene code to a new directory tree intended for optional code; commit derby-590-11-aa-moveCode.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583216 13f79535-47bb-0310-9956-ffa450edef68"
f40e25a589bb8b0bc8ac7bfaf9f0eeb7bc6e47eb,"DERBY-6107: Connection to classpath database fails when login timeout is set

Don't cache threads used for connecting to the database when a login
timeout is set, to prevent that the connection attempt uses the wrong
context class loader.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583304 13f79535-47bb-0310-9956-ffa450edef68"
a24468bdc7b599bb51e0b9d6d8ebc4c004086492,"DERBY-6529 nightly regression test failure in newly added junit test TriggerGeneralTest

Patch to make the test work also on Windows (CR LF issue).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583343 13f79535-47bb-0310-9956-ffa450edef68"
c0432742380d3205261c605abb64439fcd26f984,"DERBY-6533: Add a quiet mode to NsTest; commit derby-6533-01-aa-quietMode.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583398 13f79535-47bb-0310-9956-ffa450edef68"
7d9c8c771ef2efc55c5cf4dc3ed5a183e08c2c14,"DERBY-590: Move the Lucene plugin into a new derbyoptionaltools.jar file; commit derby-590-12-aa-newJar.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583505 13f79535-47bb-0310-9956-ffa450edef68"
8ae4e1581db22486e8433b83c1d8381cd0d3e1cd,"DERBY-6534: Remove StorageFile.getURL() and its implementations

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583578 13f79535-47bb-0310-9956-ffa450edef68"
ccbbcd4bc0608a5a52979bd32e3503eb342f9912,"DERBY-6535: Remove storageFactory field from subclasses of InputStreamFile

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583650 13f79535-47bb-0310-9956-ffa450edef68"
b13fb1c7a924268a5feec796037c2aad98b31d64,"DERBY-6533: Add a sequence generator to NsTest along with start and end timestamps; commit derby-6533-02-aa-sequencesAndMoreStats.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583749 13f79535-47bb-0310-9956-ffa450edef68"
fcf3e6db342c920597a7afd7b749e9b9494f03bf,"DERBY-590: Add ability to create a Lucene index on an arbitrary view; commit derby-590-13-aa-indexViews.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1583855 13f79535-47bb-0310-9956-ffa450edef68"
2a8df97dc47beb1dd093e6396b985686ba8ab3a2,"DERBY-590: Enforce coarse-grained authorization checks in the Lucene plugin; commit derby-590-14-aa-coarseGrainedAuthorization.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1584242 13f79535-47bb-0310-9956-ffa450edef68"
96e2ea4066ce8b3351533f1012ede24631057e8a,"DERBY-590: Require hard-upgrade to 10.11 in order to use the Lucene plugin; commit derby-590-15-aa-requireHardUpgrade.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1584493 13f79535-47bb-0310-9956-ffa450edef68"
777a463e8744d7642775f72d1d460395352d2bc6,"DERBY-6533: Add a knob to NsTest, allowing you to set a time limit for the test run; commit derby-6533-03-timerThread.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1584636 13f79535-47bb-0310-9956-ffa450edef68"
78227e48f0b994681b11f395c8eaaac3a38c4c88,"DERBY-6516 Convert lang/nestedCommit.sql to JUnit NestedCommitTest

Patch derby-6516-gc to fix the intermittent error we saw on this
issue. The patch makes sure we close the result set for the statement
'values doConnCommitInt()' when executed inside a stored
procedure. Previously, it was executed by the stored procedure
""doConnStmtIntNoRS"". We changed that to ""doConnStmtInt"" since this
statement does indeed have a result set.

The supporting procedure in Triggers#doConnStmt also had to be fixed a
bit, since this particular result set closes itself by performing a
commit inside the store procedure, which led the second ResultSet#next
to throw XLC16.

With the patch, I do not see the original error even when disabling the
explicit garbage collection (Java option -XX:+DisableExplicitGC).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1584638 13f79535-47bb-0310-9956-ffa450edef68"
12086f0320231283f705c68c33e81a9ad5df7267,"DERBY-590: Attempt to fix upgrade tests which were broken by derby-590-15-aa-requireHardUpgrade.diff; commit derby-590-16-aa-adjustUpgradeTest.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1584721 13f79535-47bb-0310-9956-ffa450edef68"
8fbaf268aa244ee6b662bb3575179ddf8b830f17,"DERBY-590: Eliminate some file-closure race conditions by explicitly closing the stream from which index properties are read; commit derby-590-17-aa-closeInputStreamOnPropertiesFile.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1584859 13f79535-47bb-0310-9956-ffa450edef68"
cbdf82746a9ea2a8f8549e3f6bf3e0671217ed43,"DERBY-590: Rename rank to score and forbid duplicate column names for the Lucene plugin; commit derby-590-18-aa-cleanupAPI.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1585313 13f79535-47bb-0310-9956-ffa450edef68"
9cc25e287512df42800ce134b5655d9f03208eb5,"DERBY-590: Add a windowSize parameter to the lucene query function; commit derby-590-19-aa-cleanupAPI2.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1585315 13f79535-47bb-0310-9956-ffa450edef68"
d27662da5855eac51763785c399e5b0bf3c7c89d,"DERBY-6410: ClassCastException when launching derby from windows subst drive

Avoid calling Files.getFileStore() since it fails when called on a
file that lives on a subst drive. (Because of a bug in the JVM:
JDK-8034057.)

It is used for checking if a specific FileAttributeView is supported
on the file system. The same information can be found by checking if
Files.getFileAttributeView() returns null, which we already do, so
skip the failing call.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1585407 13f79535-47bb-0310-9956-ffa450edef68"
0b71ff5e6a1b96b77fb324e0f238cc880a0d486d,"DERBY-590: Add the ability to configure the query parser used for lucene queries; commit derby-590-20-aa-customQueryParser.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1585488 13f79535-47bb-0310-9956-ffa450edef68"
7d889ca12512499738fb4c520cfa568a54db5b39,"DERBY-590: Prevent Derby from using an earlier version of Lucene to read an index created by a later version of Lucene; commit derby-590-21-aa-noTimeTravel.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1585774 13f79535-47bb-0310-9956-ffa450edef68"
93448896c012e8acefa2cbb4ede3a899b033e170,"DERBY-590: Hide doPrivileged() blocks inside private methods, seal derbyoptionaltools.jar, and create more relevant SQLExceptions; commit derby-590-22-aa-cleanupPrivacy.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1586114 13f79535-47bb-0310-9956-ffa450edef68"
2f455bb5d5a10cc7a4d600fa766a83bcca5eee86,"DERBY-6532; sysinfo does not show derbyTesting package info if junit.jar not in classpath
   switching the indicator class from BaseTestCase to XATestUtil.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1586158 13f79535-47bb-0310-9956-ffa450edef68"
d8804a852ab6312b845ba250d9a65553a067ea97,"DERBY-6540: Schema-qualified table names could be mistaken for transition tables

Don't treat schema-qualified table names as transition tables, as
transition table names are always unqualified.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1586226 13f79535-47bb-0310-9956-ffa450edef68"
e225bfbf11d23f7dee3ae06d18e1fb50c3bf3f7a,"DERBY-6533: Give NsTest more defenses against OutOfMemoryErrors; commit derby-6533-04-outOfMemory.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1586366 13f79535-47bb-0310-9956-ffa450edef68"
561e69f7d30b17924eeaaaedd1b8c38473fedccc,"DERBY-590: Fix locale-related errors which surfaced on some platforms during the Lucene tests; commit derby-590-23-aa-correctTestLocale.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1586755 13f79535-47bb-0310-9956-ffa450edef68"
6b8d71bb4b84f56d0c46053dd55f928e8a66ddec,"DERBY-3155: Fix bug in MERGE statement fired by a trigger; commit derby-3155-53-aa-transitionSimpleColumn.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1587317 13f79535-47bb-0310-9956-ffa450edef68"
5a56bccd2092c451ca0e10b57d738b7faa37e1d0,"DERBY-6533: Add more defensive code to NsTest; commit derby-6533-05-aa-dieQuickly.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1587581 13f79535-47bb-0310-9956-ffa450edef68"
cfa139d4aefca31ff636f9b3829c8d467dde48b0,"DERBY-6218; Tasks for producing a 10.10.2 maintenance release.
  adding 10.10.2.0 to OldVersions.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1587780 13f79535-47bb-0310-9956-ffa450edef68"
396a5cda91b7d83f8032d6ebc5fab85bfe3a6a9b,"DERBY-6218; Tasks for producing a 10.10.2 maintenance release.
   reflecting release of 10.10.2.0


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1587785 13f79535-47bb-0310-9956-ffa450edef68"
0c997ed8e2cf7d46f3bebc0131cbd684bf0d518d,"DERBY-6533: Plug another NPE in NsTest; commit derby-6533-aa-anotherNPE.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1588289 13f79535-47bb-0310-9956-ffa450edef68"
970e7f328c234b898f9dc428b0a191d88de45932,"DERBY-6218; Tasks for producing a 10.10.2 maintenance release.
   updating trunk status.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1588316 13f79535-47bb-0310-9956-ffa450edef68"
f56a644c615dea9574d029bd739a1a4e5d3b35e5,"DERBY-6218; Tasks for producing a 10.10.2 maintenance release.
   fixing oops on the year for the release


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1588319 13f79535-47bb-0310-9956-ffa450edef68"
6fdf9c01acdcf398f6e260cb16628c7c7a64f0d1,"DERBY-6545: Prevent ALTER TABLE from adding a default to an identity column; commit derby-6545-01-aa-forbidDefaultOnIdentityColumn.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1588455 13f79535-47bb-0310-9956-ffa450edef68"
435459ecf6a94616eb1ce37dfbf86756e86f54d5,"DERBY-6544: Run locale-sensitive Lucene tests in single-use databases; commit derby-6544-01-aa-singleUseDatabases.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1588933 13f79535-47bb-0310-9956-ffa450edef68"
7b9e6859859a990d1edf93b1aaf10ee24ef81acb,"DERBY-6543: Syntax error when reference to transition variable has whitespace around it

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1589036 13f79535-47bb-0310-9956-ffa450edef68"
5cf7a467dfbae703497d3306b4aa2e3340dcdf56,"DERBY-590: Add support for creating Lucene indexes in in-memory databases; commit derby-590-24-ad-luceneDirectory.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1589124 13f79535-47bb-0310-9956-ffa450edef68"
7fd0c6ef96372e2612d3d189ee3dac0aae44f35b,"DERBY-6542: Add catalog support for using sequence generators to implement identity columns; commit derby-6542-01-ab-catalog.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1589379 13f79535-47bb-0310-9956-ffa450edef68"
1fa09cea36074f094878c9d2cbfe3cc91c834698,"DERBY-6521: Improve error handling when restricting file permissions

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1589396 13f79535-47bb-0310-9956-ffa450edef68"
5ccbc167265029c92e9318f316e486d8730823c6,"DERBY-6533: Add more defensive code to NsTest; commit derby-6533-07-aa-moreDefensiveCode.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1589404 13f79535-47bb-0310-9956-ffa450edef68"
689206ce496900f1a646770ca0e275452793fad6,"DERBY-6546: Database can't be dropped on Windows using the decoration of LuceneSupportPermsTest

Move database shutdown from the tearDown() method of the test case to
DropDatabaseTestSuite so that no intermediate decorators reboot the
database before it is dropped.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1589624 13f79535-47bb-0310-9956-ffa450edef68"
2c381e05d53ea4ae63fbed74422854bfa5d4fe3e,"DERBY-6533: Sort NsTest errors by the timestamp of their first occurrence; commit derby-6533-08-aa-sortErrors.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1589747 13f79535-47bb-0310-9956-ffa450edef68"
ddfc19d4515b34c1a4cc93a42f96ca0839bb5ffd,"DERBY-6555: Fix typo in too-much-contention message; commit derby-6555-01-aa-errorMessageTypo.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1590016 13f79535-47bb-0310-9956-ffa450edef68"
770bedf7f98ddffbacea6976f8654f4b5dda5b35,"DERBY-6352; Access denied (""java.lang.RuntimePermission"" ""modifyThread"") highly intermittent, but e.g. in store.RecoveryAfterBackup test
  When we see a AccessControlException during shutdown in the notifyAll call, do nothing, which lets the Thread finish on its own.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1590817 13f79535-47bb-0310-9956-ffa450edef68"
4cc0287cfe5318155d8b4a5bf33df8752ff61b42,"DERBY-532 Support deferrable constraints

Deferred foreign key constraint. Patch derby-532-fk-7.

The approach taken for deferring foreign keys is similar to that taken
for the other constraints: when we detect a violation inserting or
updating the referring table, and when detecting a violation when
deleting or updating the referenced table (only when we have ON DELETE
(or UPDATE) NO ACTION), we save the key in a temporary table instead
of throwing an exception. At check time, typically on commit, we
revisit first the supporting index of referencing table to see if
there might still be a problem. If that key is (still) present, we
must also check the corresponding index in the referenced table. If
that is found, all is good. Otherwise we throw.

Patch details:

M       java/engine/org/apache/derby/iapi/sql/conn/LanguageConnectionContext.java
M       java/engine/org/apache/derby/impl/sql/conn/GenericLanguageConnectionContext.java

Move logic related to constraints checking to
DeferredConstraintsMemory. 

M       java/engine/org/apache/derby/impl/sql/execute/DeferredConstraintsMemory.java

New logic from LanguageConnectionContext; added logic for the case of
foreign key constraints violation memory and checking. Make old ""if""s
on object type object oriented: new interface methods in
ValidationInfo: possiblyValidateOnReturn and validateConstraint which
are implemented differently for each constraint type.

M       java/engine/org/apache/derby/impl/sql/execute/InsertResultSet.java
M       java/engine/org/apache/derby/impl/sql/execute/UpdateResultSet.java
M       java/engine/org/apache/derby/impl/sql/execute/ConstraintConstantAction.java

More fk info to bulk insert; smaller refactorings.

M       java/engine/org/apache/derby/iapi/sql/dictionary/ReferencedKeyConstraintDescriptor.java

Change the method hasNonSelfReferencingFK to getNonSelfReferencingFK;
we need to get at them, see AlterTableConstantAction for truncate.

M       java/engine/org/apache/derby/impl/sql/execute/AlterTableConstantAction.java

Refactored logic to DeferredConstraintsMemory#compressOrTruncate.
Allow truncate (if deferred and NO_ACTION constraints only) of
deferenced table.

M       java/engine/org/apache/derby/iapi/types/SQLBoolean.java
M       java/engine/org/apache/derby/impl/sql/execute/IndexChanger.java
M       java/engine/org/apache/derby/impl/sql/execute/ProjectRestrictResultSet.java

Minor refactorings.

M       java/engine/org/apache/derby/impl/sql/execute/FKInfo.java

Extended with information about deferred constraints; conglomerate ids and constrain ids.

M       java/engine/org/apache/derby/impl/sql/compile/DMLModStatementNode.java

More information collection to support extended FKInfo, see above.

M       java/engine/org/apache/derby/impl/sql/compile/TableElementList.java

Extra predicates to avoid logic for unique and primary key constraints to inferere with
deferred foreign keys.

M       java/engine/org/apache/derby/impl/sql/execute/CreateConstraintConstantAction.java

Remove foreign keys as ""not supported"", minor refactorings.

M       java/engine/org/apache/derby/impl/sql/execute/DeleteResultSet.java

Added arguments, refactorings.

M       java/engine/org/apache/derby/impl/sql/execute/ForeignKeyRIChecker.java

This is where we actually defer when we see a fk violation at insert/update of referencing table.

M       java/engine/org/apache/derby/impl/sql/execute/GenericRIChecker.java

Minor interface changes: new member variable: lcc

M       java/engine/org/apache/derby/impl/sql/execute/RIBulkChecker.java

This is where we actually defer when we see a fk violation at bulk insert
into referencing table.

M       java/engine/org/apache/derby/impl/sql/execute/RISetChecker.java

Minor interface changes; added parameters.

M       java/engine/org/apache/derby/impl/sql/execute/ReferencedKeyRIChecker.java

This is where we actually defer when we see a fk violation at delete or update of
a row in the referenced table.

M       java/engine/org/apache/derby/impl/sql/execute/SetConstraintsConstantAction.java

Make SET CONSTRAINTS work also for foreign keys.

M       java/shared/org/apache/derby/shared/common/reference/SQLState.java
M       java/engine/org/apache/derby/loc/messages.xml

New error messages.

M       java/testing/org/apache/derbyTesting/functionTests/tests/lang/ConstraintCharacteristicsTest.java

Extended existing deferrable constraints to also work for foreign constraints.

A       java/testing/org/apache/derbyTesting/functionTests/tests/lang/ForeignKeysDeferrableTest.java

New tests only for foreign key constraints.

M       java/testing/org/apache/derbyTesting/functionTests/tests/upgradeTests/Changes10_11.java

Remove asserts for not implemented on deferrable foreign key
constraints, check basic sanity iff hard upgraded.

M       java/testing/org/apache/derbyTesting/junit/BaseJDBCTestCase.java

Added assertCommitError; minor changes to support fk testing.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1590849 13f79535-47bb-0310-9956-ffa450edef68"
001fd9fce42e19fc85c1f2be3080e8fc142a9ff3,"javadoc fix

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1590861 13f79535-47bb-0310-9956-ffa450edef68"
43aa7cd946cb3a42d3e62b42c4c150ba601f5ec6,"Javadoc fix: Replace Unicode hyphen with plain ASCII hyphen

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1590953 13f79535-47bb-0310-9956-ffa450edef68"
0cefeda9118c57813f6d2bc80f5a39c11d7ab5ab,"DERBY-6370: dblook doesn't schema-qualify identifiers in trigger actions

Rewrite the triggered SQL statement and the WHEN clause of a trigger
so that all identifiers are fully qualified, before they are stored in
SYS.SYSTRIGGERS and SYS.SYSSTATEMENTS. This way, dblook is able to use
the information in the system tables to produce DDL that is
independent of the schema in which it is executed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1591216 13f79535-47bb-0310-9956-ffa450edef68"
7953b49b738f30d0c6cbf869e1141fd68e0512f6,"DERBY-6554: Fix some bugs in cache management for sequence generators; commit derby-6554-01-ad-bugfixes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1591703 13f79535-47bb-0310-9956-ffa450edef68"
edfffd2e2b7ef0d6cae191a9bcb538b8ad23d85b,"DERBY-590: Make the NetBeans project recognize the Lucene classes

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1591839 13f79535-47bb-0310-9956-ffa450edef68"
966ec59f0416deef641453dff75e58e739935dfc,"DERBY-6213: Change source level to 1.6 in the NetBeans project

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1591878 13f79535-47bb-0310-9956-ffa450edef68"
502ed2ea556ca92ee5fd23ea72c237d9beafb6e2,"DERBY-590: Add backup/restore support for Lucene indexes and prevent the Lucene plugin from being used in an encrypted database; commit derby-590-26-ad-backupRestoreEncryption.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1591910 13f79535-47bb-0310-9956-ffa450edef68"
46f3e96ac3dca60a97b9a4292416f95e4acf5a3a,"DERBY-590: Add LuceneUtils to the public api; commit derby-590-27-aa-publicAPILuceneUtils.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1592214 13f79535-47bb-0310-9956-ffa450edef68"
faa9027b1335bb878cac5374c548fe09b1edcf7d,"DERBY-6562: Failed to delete directory in LuceneSupportPermsTest.test_005_deleteDirectory()

The test should look for the ""LUCENE"" subdirectory rather than the
""lucene"" subdirectory.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1592464 13f79535-47bb-0310-9956-ffa450edef68"
aaac214f298b00d797ef129208f868ec9c019e63,"DERBY-6423: The expression syntax in CASE's THEN clause doesn't accept boolean value expression

Allow boolean value expressions in CASE and NULLIF expressions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1592465 13f79535-47bb-0310-9956-ffa450edef68"
c8af381962a7cc88919de18ba609d951ffb8232a,"DERBY-590: Remove the version ids from the names of the Lucene jar files in order to make it easier to upgrade the version of Lucene checked into the Derby source tree; commit derby-590-28-renameLuceneJars.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1592527 13f79535-47bb-0310-9956-ffa450edef68"
5658baeaf825c8fbe287319d89538cbe06a788ac,"DERBY-590: Change the checked-in version of Lucene from 4.5.0 to 4.7.1; commit derby-590-29-aa-useLucene_4.7.1.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1592543 13f79535-47bb-0310-9956-ffa450edef68"
dc1acc4bae6543b590900a136ee5b46da8d5d5c0,"DERBY-6502; Failure in OnlineCompressTest
   adding calls to wait for post commit tasks in the hope of addressing instability in OnlineCompressTest.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1592630 13f79535-47bb-0310-9956-ffa450edef68"
0342a825a138d49e6e2bcac5be4328c5bb9d6a3f,"DERBY-6370: dblook doesn't schema-qualify identifiers in trigger actions

Remove no longer needed offset fields in CreateTriggerNode.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1592695 13f79535-47bb-0310-9956-ffa450edef68"
eab88ec51aad407c3cb77723bd69cd46e46a7f9a,"DERBY-6370: dblook doesn't schema-qualify identifiers in trigger actions

Remove unnecessary DataDictionary parameter from TableName.bind().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1592726 13f79535-47bb-0310-9956-ffa450edef68"
f273581666ded6d82fda7179687466753d6440e6,"DERBY-6563: NOT elimination for CASE expressions is broken

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1592945 13f79535-47bb-0310-9956-ffa450edef68"
800a91de34d2f97b756f9beb18860188e3ec6ffe,"Fixed some odd formatting that made the code hard to read (comment
indentation).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593123 13f79535-47bb-0310-9956-ffa450edef68"
67d855a1dba58b0e4f47110de88f3692ee38d0be,"Fix typo

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593124 13f79535-47bb-0310-9956-ffa450edef68"
68e682544bdc8e831532a778ba35040345c5e2ec,"Fix typos and add some Javadoc and @Override tags

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593126 13f79535-47bb-0310-9956-ffa450edef68"
acd0d8b7c83e51dcb7e6e56b9c298c7e21a433db,"Javadoc and typo fixes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593127 13f79535-47bb-0310-9956-ffa450edef68"
7a94b75e13e2e5cc4984804e23e7c3c9e91f656d,"Typo fixes

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593128 13f79535-47bb-0310-9956-ffa450edef68"
2543043c2f9be8a0ba962348142a1cb7298f6a2a,"Reformat an unwieldy call.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593131 13f79535-47bb-0310-9956-ffa450edef68"
d6b5ab3577f01559b8ae5ec03de3a9cbbf6900c3,"DERBY-6567: Incorrect nullability for CASE expression with parameter

Make sure the result of a CASE expression is nullable if (and only if)
at least one of the result expressions is nullable.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593495 13f79535-47bb-0310-9956-ffa450edef68"
9179199d2b58bea97f8b79000b89cc2d4f262113,"DERBY-6559 A immediate Fk constraint blows up iff its referenced PK is deferred and we delete a duplicate

Patch derby-6559 changes ReferencedKeyRIChecker to omit checking
dependent tables iff the referenced key is deferred and has rows with
duplicate keys one of whom is attempted deleted. So, in effect, the
check in such a case happens only if the row is ""the last of its
kind"", i.e. the last row having a particular referenced key. Added
tests for this behavior. To determine whether we have duplicates, we
open an extra scan on the index.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593557 13f79535-47bb-0310-9956-ffa450edef68"
4cedf31f836a56771d19284970ebc1e41ebde2d7,"DERBY-590: Change the special NO_CEILING value from 0 to NULL for the scoreCeiling argument to the Lucene query table function; commit derby-590-30-aa-nullableScoreCeiling.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593701 13f79535-47bb-0310-9956-ffa450edef68"
9819cf8e6a4208f0c0b61d5331127ec01e541a34,"DERBY-6554: Raise SelfDeadlock when a nested subtransaction can't immediately get a lock because it is blocked by its parent transaction; commit derby-6554-02-ae-selfDeadlock_sps_compress.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593702 13f79535-47bb-0310-9956-ffa450edef68"
5d7388daa95c98f2cbf281945d98556086329dad,"DERBY-6566: Simplify handling of untyped nulls in CASE and NULLIF expressions

Make the parser represent untyped nulls the same way in CASE
expressions as in NULLIF expressions, so that ConditionalNode can
handle the two kinds of expressions uniformly.

Make the parser create a single ConditionalNode for each CASE
expression, instead of creating a tree of ConditionalNodes for a
single CASE expression.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593898 13f79535-47bb-0310-9956-ffa450edef68"
e28a36f3b7e73388bc6632bab4c82cf268c5d543,"DERBY-532 Support deferrable constraints

Patch derby-532-metadata-queries: updates the metadata queries to give
correct results in the DEFERRABILITY column returned by the calls:

- DataBaseMetaData#getImportedKeys
- DataBaseMetaData#getExportedKeys
- DataBaseMetaData#getCrossReference.

Test have been added.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1593949 13f79535-47bb-0310-9956-ffa450edef68"
044f4f4bc88990d1bc8be5755da5698749c6253c,"DERBY-6575: LangScript.floattypes gets REAL instead of expected DOUBLE

Add ORDER BY to query to make the results stable.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1594196 13f79535-47bb-0310-9956-ffa450edef68"
8566ca39d342e1c14ecc6bd2d067346e600c0767,"DERBY-5133; nightly test failure in derbyall/storeall/storemore/SpaceTable
   converting the test to junit, with a retry for the selects that have shown instability


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1594231 13f79535-47bb-0310-9956-ffa450edef68"
0493010bd2b31b51c27c17d364aa2ea46f0e7891,"DERBY-532 Support deferrable constraints

Substituted BaseJDBCTestCase#dropTable for home grown version, we
prefer the standard way to do it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1594255 13f79535-47bb-0310-9956-ffa450edef68"
47758e26068c30056827b41fd1cb7da903c58188,"DERBY-6337(derbynet.ServerPropertiesTest.ttestSetPortPriority prints exception java.lang.Exception: DRDA_InvalidReplyTooShort.S:Invalid reply f rom network server: Insufficient data. but test passes)

Basically the issue is that sometimes when server is shutting down and a ping is sent to it around the same time, ping might be able to connect to server but before the ping hand shake can complete, the server might shutdown thus resulting in the ping client receiving a DRDA_InvalidReplyTooShort. This is probably why the test in this issue fails intermittently. To fix the issue, if ping does run into DRDA_InvalidReplyTooShort.S:Invalidreply, we will send another ping after waiting for a little time, and this time around we should get expected can't connect to server exception because server is down by now.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1594435 13f79535-47bb-0310-9956-ffa450edef68"
8709c8a9d208939deae6fa2aff3220b87b71205d,"DERBY-5133; nightly test failure in derbyall/storeall/storemore/SpaceTable
   addressing review input; using JDBCTestCase.dropTable(), simplifying the retry and eliminating the code duplication, and adjusting comments.
   Also addresses failure with Java8 because of different test case sequence.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1594451 13f79535-47bb-0310-9956-ffa450edef68"
39e20ff22f532bbbe3cdfc1d58d695cdf502bf8c,"DERBY-6577: Quantified comparison returns wrong result in CASE, COALESCE, IN and BETWEEN

ValueNodeList.preprocess() should update the list with the rewritten expressions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1594816 13f79535-47bb-0310-9956-ffa450edef68"
f3e70a15395d82cfd5c9f3c63a349d624453839f,"DERBY-6577: Preserve return value from recursive calls to preprocess()

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1595121 13f79535-47bb-0310-9956-ffa450edef68"
18a6fb272a26cab64131c81304162f4e3765d429,"DERBY-6576 A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column

Patch derby-6576-3. We need to keep better track of how many rows are
deleted/modified of each key when we are doing deferred code path
deletes since the actual deletes doesn't happen until after all the
checking.

The patch does this by using a disk based hash table. Then after going
through all the rows/keys to be deleted/updated and adding them to the
hash table (one entry per unique key, with a counter), we compare the
number of key duplicate instances present with the number of (planned)
deletes. Unless at least one row would remain in the referenced table,
we have a violation of the foreign key constraint.

This method is used for both deletes in deferred row processing mode
and for updates, which always has this mode in the presence of foreign
key).

For deletes in direct delete code path, we simply check that at least
one row would remain when we do the delete.

Added extra tests, including a test that uses a compound fk/pk to
check that the index mapping happens correctly when we save the keys
to the temporary hash table.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1595384 13f79535-47bb-0310-9956-ffa450edef68"
2455f1ac2eb3bab1eb004959861dae7d6ca23d6f,"DERBY-1576: Extend the CASE expression syntax for ""simple case""

Implement simple case as described by the SQL:1999 standard, including the
SQL:2003 extension F262 ""Extended CASE expression"", and the SQL:2011
extension F263 ""Comma-separated predicates in simple CASE expression"".

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1595778 13f79535-47bb-0310-9956-ffa450edef68"
c077ea0033fc17aa500e4c4d32c1d948c6f841d7,"DERBY-6553: Adding test cases to verify that we can create trigger-invoking sequences: commit derby-6553-01-aa-verifyFix.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1595977 13f79535-47bb-0310-9956-ffa450edef68"
190c06edae1698e0ff37e54c47da6cb79d92f8db,"DERBY-6547(testDERBY5120NumRowsInSydependsForTrigger fails when the starting version of the upgrade trajectory is 10.10.2.0)

10.10, 10.9 and 10.8 jars started failing in upgrade suite(in testDERBY5120NumRowsInSydependsForTrigger) after following was backported into those codelines
*****
DERBY-6383(Update trigger defined on one column fires on update of other columns)

Backporting following 2 revisions from trunk to 10.10. Had to hand do the changes because of conflicts during svn merge.
1537593, 1538854 
*****

The reason behind the failure is actually how testDERBY5120NumRowsInSydependsForTrigger test was written and not a code regression. 

The test creates a trigger which is supposed to fire on a specific column
	create trigger ATDC_TAB1_TRG1 after update of C11 on ATDC_TAB1 REFERENCING old_table as old 
        	for each statement MODE DB2SQL insert into ATDC_BKUP1 select * from old
But later on it the test, it is expecting the trigger to fire on update of non-trigger column of the table. This was fine before DERBY-6383 was backported because w/o the fix for DERBY-6383, triggers would fire on update of any column on the table(DERBY-6383 - Update trigger defined on one column fires on update of other columns). But after those codelines got the fix for DERBY-6383 as part of the backport, the trigger correctly won't fire any more on non-trigger columns and that started the test failure. I have fixed the test to update the trigger column in order to fire the trigger and now the test behaves correctly. I will backport this test fix upto 10.8 codelines which is how far DERBY-6383 got backported to.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1596451 13f79535-47bb-0310-9956-ffa450edef68"
13d34b0c4ffdda31d8b627314b479e084ada4b92,"DERBY-1576: Extend the CASE expression syntax for ""simple case""

Forbid untyped parameters in the case operand.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1596492 13f79535-47bb-0310-9956-ffa450edef68"
79c07f743cb26da068b4aefccbafac9b202bbeb4,"DERBY-590: Update the NetBeans project to use the new names of the Lucene jars

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1596513 13f79535-47bb-0310-9956-ffa450edef68"
a18028722d0d3ee9ec76cca7cb2a69eea24b87ed,"DERBY-6542: Use sequence generators to create identity values; commit derby-6542-02-af-useNewSequenceGenerator.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1596548 13f79535-47bb-0310-9956-ffa450edef68"
72344982ef3a4e04d75e2a163ae8619f0cdcf6ad,"DERBY-590: Remove handling of impossible exceptions

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1596552 13f79535-47bb-0310-9956-ffa450edef68"
8612b0bfab1f4f6f8b6e2438e95490aef343c36d,"DERBY-6542: Raise LockTimeout when there is too much contention on an identity column; commit derby-6542-03-aa-lockTimeoutForIdentityContention.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1596619 13f79535-47bb-0310-9956-ffa450edef68"
668aa4b944d167241b54ddcdcffdad666f3835ca,"DERBY-6515; ij doesn't list its command NoHoldForConnection in the help menu
   adding the NoHoldForConnection command to the help command output and updating one master file


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1596677 13f79535-47bb-0310-9956-ffa450edef68"
d75118e9072a37f8187b545bda10e205ecedfc77,"DERBY-1576: Extend the CASE expression syntax for ""simple case""

Add test cases for subqueries.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1597082 13f79535-47bb-0310-9956-ffa450edef68"
f8d3a60c1570eee82093fef3ceb5abf324f20c78,"DERBY-6585; add HoldForConnection ij command to match NoHoldForConnection
   adding the new command, including updating the help output. Also adding a test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1597910 13f79535-47bb-0310-9956-ffa450edef68"
f2dfe0602572c0b3f819fa584d33788b6e6f2779,"DERBY-1576: Extend the CASE expression syntax for ""simple case""

Cache the case operand so that it is only evaluated once per
evaluation of the CASE expression.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1597979 13f79535-47bb-0310-9956-ffa450edef68"
effc902874d4e9eb5644788633f0c1935eb1c46c,"DERBY-6589: Wire the new Security Guide into the top level index.html of release distributions; commit derby-6589-01-aa-addSecurityGuideToTopIndex.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1597995 13f79535-47bb-0310-9956-ffa450edef68"
2bd5cbdb7a4add150415817766981851b71ad52c,"DERBY-1576: Extend the CASE expression syntax for ""simple case""

Allow untyped parameters in the case operand.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1598472 13f79535-47bb-0310-9956-ffa450edef68"
d8df14045bf24156d9833fcfe634fee1d75080da,"DERBY-1576: Fix javadoc warning


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1598529 13f79535-47bb-0310-9956-ffa450edef68"
986f195af09ade04f7728099703ba150b0edc796,"DERBY-6589: Add the new Security Guide to the top level repackagedocs target used at release publication time; commit derby-6589-02-aa-repackagedocsTarget.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1598590 13f79535-47bb-0310-9956-ffa450edef68"
fa747aa470abce1f8be1a4b416a5bace67dc01e5,"DERBY-6592: Update ant version recommended by our build instructions for new developers; commit derby-6592-01-aa-updateAntVersion.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1598706 13f79535-47bb-0310-9956-ffa450edef68"
6f52e78a436ac3e815a16c6b14e2b61b7ea4d315,"DERBY-2002: Case expression allows NULL in all parts of <result>

Require at least one expression with a known type (that is, not NULL or
a ? parameter) in the THEN and ELSE clauses of a CASE expression.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1599142 13f79535-47bb-0310-9956-ffa450edef68"
45da2f58ad14179d96ad5d7951762cc36e663a36,"DERBY-6576 A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column

Patch derby-6576-forbid-deferred+cascade-set-null-1. It simplifies the
code of the previous patch for thi sissue that handles RESTRICT and NO
ACTION in combination with a deferrable primary key. It also forbids
CASCADE and SET NULL of the target primary key is deferrable, at least
for now until a satisfactory implementation can be found. Test have
been added for the new cases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1599383 13f79535-47bb-0310-9956-ffa450edef68"
bedbcf27db930b48c13dad32b3af23b973cbc1b8,"import fix, type

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1599391 13f79535-47bb-0310-9956-ffa450edef68"
2d7d37f1f9b79eb830093e28f8485928abf9bab0,"DERBY-5824: Disable OSReadOnlyTest when run as privileged user

When running the test as root, it is able to modify the database even
though all database files have been made read-only. Disable the test
in such environments.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1599544 13f79535-47bb-0310-9956-ffa450edef68"
846080f8c379165d37dbf5627f5c347a9f6098b0,"DERBY-6588: First draft of 10.11.1 release notes; commit derby-6588-01-aa-firstDraftReleaseNotes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1599609 13f79535-47bb-0310-9956-ffa450edef68"
cdc596eb0c2f40a3e480f852c2ae46bbed7e6c1d,"DERBY-6599: Incorrect quoting of 42ZB4 message

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1600062 13f79535-47bb-0310-9956-ffa450edef68"
2ad822f414b27104425edd8faaeac6bed9e36b99,"DERBY-6504; change AllocPage.ReadContainerInfo to catch ArrayIndexOutOfBoundsException and turn it into Derby error.
   Adding error message XSDG4 to provide analysis info if this exception is hit


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1600417 13f79535-47bb-0310-9956-ffa450edef68"
0a769410e89229d9c3ae2abbf2ffdb669fa61b1e,"DERBY-6595: Fix sequence cache-flushing problem during trigger re-compilation: tests passed cleanly on derby-6595-01-aa-dontClearSequenceCache.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1600687 13f79535-47bb-0310-9956-ffa450edef68"
a1fe49a688b2d8e9ec4f52b463942fc19faaf6d2,"DERBY-6504; change AllocPage.ReadContainerInfo to catch ArrayIndexOutOfBoundsException and turn it into Derby error.
   Adjusting lang/ErrorCodeTest to reflect the new message.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1600721 13f79535-47bb-0310-9956-ffa450edef68"
b306655c2eb85315f66a3e31dc28874f2082ff3f,"DERBY-6595: Fix sequence cache-flushing problem during trigger re-compilation: tests passed cleanly on derby-6595-01-aa-dontClearSequenceCache.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1600729 13f79535-47bb-0310-9956-ffa450edef68"
72446ed8a0d3f60d4fa4a2507dd08e71f7e3ebb3,"DERBY-6576 A immediate Fk constraint blows up iff its referenced PK is deferred and we modify a duplicate key column

A follow-up patch, derby-6576-repeatable-read. In the case where we do
not throw an exception because the deferred unique/pk constraint
referenced by an fk is upheld by another row, we need to make sure
that condition holds until we commit. This patch changes the check (in
ReferencedKeyRIChecker#isDuplicated) to scan using repeatable read
isolation level instead of read committed. This will set a read lock
on any (well, the first we find) duplicate row till transaction end
and thus ensure things are good till we commit.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1600779 13f79535-47bb-0310-9956-ffa450edef68"
7d2377d6ed44d1170e23b0a330696eb1de6b00b7,"DERBY-6587; Foreign Key constraint not matched when using UUID in a composite foreign key when using SYSCS_UTIL.SYSCS_IMPORT_TABLE
   Adding a test for this issue


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1600788 13f79535-47bb-0310-9956-ffa450edef68"
a4094369b12a88c90eea067c22559ab07ffcd493,"DERBY-6600: Make Derby resolve custom Lucene Analyzers and QueryParsers by using the database classpath.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1600866 13f79535-47bb-0310-9956-ffa450edef68"
515a63e8d3a3b751c72fbdf0012900aca7ff78f2,"DERBY-6600: Make it possible to bind functions to methods in the org.apache.derby.optional.api package; tests passed cleanly on derby-6600-02-aa-addAPIpackage.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1600928 13f79535-47bb-0310-9956-ffa450edef68"
3235c139809c43f995bda506cb6dcd378d60c169,"DERBY-6587; Foreign Key constraint not matched when using UUID in a composite foreign key when using SYSCS_UTIL.SYSCS_IMPORT_TABLE
  test data and fix patch contributed by Pascal Gr√ºn (pascal dot gruen at gmail dot com)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1601169 13f79535-47bb-0310-9956-ffa450edef68"
041c4f130b084a4710cc3c0275280657939594d9,"DERBY-6588: Check in 2nd draft of the 10.11.1 release notes: derby-6588-02-aa-secondDraftReleaseNotes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1601379 13f79535-47bb-0310-9956-ffa450edef68"
4e1453d18376dfa611f9e2f6be66782306c4e692,"DERBY-6597: Write the properties for a Lucene index only once and not for each indexed row; commit derby-6597-01-aa-writePropertiesOutsideIndexingLoop.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1601391 13f79535-47bb-0310-9956-ffa450edef68"
abb2084ecbd01f2535dddf6b03263e82913fa857,"DERBY-6602: Make the lucene plugin handle null keys; commit derby-6602-01-aa-handleNullKeys.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1601440 13f79535-47bb-0310-9956-ffa450edef68"
4f7c14304132c8b3549c478110056d738e1050c2,"DERBY-6596: Forbid null args to lucene support routines; derby-6596-01-aa-checkNotNull.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1601465 13f79535-47bb-0310-9956-ffa450edef68"
371ad98d718a1199d3b543ea31926ff74e002e9d,"DERBY-6588: Add SQL Standard feature ids to the descriptions of 10.11.1 features; commit derby-6588-03-aa-addSQLStandardFeatureNumbers.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1601756 13f79535-47bb-0310-9956-ffa450edef68"
894a72f1366e7544503b49a6a75b7f9fa5f1bf45,"DERBY-4381; Connection to Derby database using jar subprotocol doesn't work if the path has round braket  in it
   adding a test and changing search for matching bracket to be from the last occurrence.
   fix suggested by Rafael Soares (rafael dot enq at gmail dot com) 


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1602054 13f79535-47bb-0310-9956-ffa450edef68"
939acffba3d412c6dd4cac41932b8ef3be2534ec,"DERBY-6613: StatementPoolingTest fails on JDK 9

Check for JDBC 4.2 support in the JVM (that is, Java 8 or higher)
instead of checking for Java 8.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1602087 13f79535-47bb-0310-9956-ffa450edef68"
85038ef2848bf5eba3345066352403e64c07d414,"DERBY-6614: Enable JDBC 4.2 tests on Java 9 and higher

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1602094 13f79535-47bb-0310-9956-ffa450edef68"
7be704812e19e732f07317cdfde9be4ea5d99c5a,"DERBY-6610: suites.All cannot be run with classes without failures

Grant the derbyTesting.codeclasses code base permission to access
temporary files to allow DatabaseClassLoadingTest and
NativeAuthenticationServiceTest to run with classes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1602102 13f79535-47bb-0310-9956-ffa450edef68"
d54c775bbfebe6ef48792b6250c4764d95ab723e,"DERBY-4381; Connection to Derby database using jar subprotocol doesn't work if the path has round bracket in it
   fixing formatting, comments, and removing an unnecessary import


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1602232 13f79535-47bb-0310-9956-ffa450edef68"
7ff421331fab98934ff3f7f2fcc14aeb2a85d748,"DERBY-6612 Add code to harness tests to allow running under JDK9 VMs.

Patch derby-run-with-java19 adds the expected harness class fort JDK1.9.
    


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1602266 13f79535-47bb-0310-9956-ffa450edef68"
114014f9a8140d3f3c9156a16f524f0568634cf0,"DERBY-6588: Add SQL Standard feature number for WHEN clause in trigger to 10.11.1 release summary; commit derby-6588-04-aa-addFeatureNumberForWHENclause.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1602898 13f79535-47bb-0310-9956-ffa450edef68"
7863d831e22bebb1786a92eda74f4892c80fa3db,"DERBY-6552 The public api includes methods inherited from superclasses which aren't in the public api and so have no javadoc comments

Patch derby-6552-restructure-more:

- adds wrappers so that the exposed classes have the expected methods
  and constants.

- changes the doc build for publishedapi so that we have a
  ""sourcepath"" for Javadoc which contains all the sources. This is
  necessary to make the wrappers inherit the (common for Basic* and
  regular data sources) javadoc from a class that is otherwise not in
  the API.

- added reference ""link""s to official Java Javadocs for ease of
  reading (SE: 8, J2EE: 7)

- removed ClientBaseDataSourceRoot putting its contents into
  BasicClientDataSource40

- removed ClientBaseDataSource moving its contents into ClientDataSource

- added new serialized data source tests for 10.11

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603019 13f79535-47bb-0310-9956-ffa450edef68"
a08662010a66201a4765ad5da09b4cefc21d50b9,"DERBY-6552 The public api includes methods inherited from superclasses which aren't in the public api and so have no javadoc comments

Follow-up patch derby-6552-restructure-even-more. This restructures
the embedded hierarchy to avoid duplication also. It eliminates
EmbeddedBaseDataSource. Removed a slew of warnings in the IDE also by
some code washing, and regenerated the 10.11 serialized data sources
for the SerializedDataSourceTest. I removed some Javadoc from
non-public members in the API classes, and replaced them with
end-of-line comments instead (to avoid user confusion).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603022 13f79535-47bb-0310-9956-ffa450edef68"
6a9200600ce2b5082d75ccbe1d4c7866c7528d67,"DERBY-6615: Remove unused newInstance() method in BaseMonitor

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603099 13f79535-47bb-0310-9956-ffa450edef68"
de00d25c2ab570533e28acc2495b671723ec5e8e,"DERBY-6621: Reduce the visibility of two methods; commit derby-6621-01-aa-reduce1.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603436 13f79535-47bb-0310-9956-ffa450edef68"
d89b65120b91514edc0c078f5a43ab53fab13d43,"DERBY-6552 The public api includes methods inherited from superclasses which aren't in the public api and so have no javadoc comments

Patch (derby-6552-link-fixes) to make it possible to run ""ant
publishedapi"" behind a firewall: one can manually download the
package-list files of Java SE 8 and J2EE 7 into to directories that
javadoc can pick up if it can't use the URLs.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603548 13f79535-47bb-0310-9956-ffa450edef68"
b004dff2b30832cbef090d292d4fc655cf2c2c1d,"DERBY-6552 The public api includes methods inherited from superclasses which aren't in the public api and so have no javadoc comments

Patch derby-6552-only-public-members.

Changes the way we generate public API javadocs by restricting it to
public class members.

Adds back Javadocs for private, class private and protected members
removed before.

Added some missing Javadocs.

Moved the top level class javadocs that were nto visible (root
classes) down to the first level visible data sources, so we can get
the data source properties documented for embedded. Added this for
client.  Cf. BasicEmbeddedDataSource40 and BasicClientDataSource40
respectively.

Added missing @serial tags

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603549 13f79535-47bb-0310-9956-ffa450edef68"
ce433402d14643e3cb72a974d43be32fe4b46bd4,"DERBY-4808; write a test that checks that optional packages are in place and clearly exposes when this is not the case
   Adding some more checks to the EnvTest, plus modifying output mechanism


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603557 13f79535-47bb-0310-9956-ffa450edef68"
41935d54ad973f2b0f50f8af06db990ce014e753,"DERBY-6552 The public api includes methods inherited from superclasses which aren't in the public api and so have no javadoc comments

Javadoc fix.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603568 13f79535-47bb-0310-9956-ffa450edef68"
031e59cfbf6a6ea32cd83be5d9c3ca14f155d2d0,"DERBY-6227: Distinct aggregates don't work well with territory-based collation

Make the duplicate elimination use the DataValueDescriptors directly instead
of converting the values to String objects first. This ensures that the
collation rules of the database are used to compare the values, and those
rules may be different from those used by String.equals().

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603793 13f79535-47bb-0310-9956-ffa450edef68"
edfc7083f76b5436ba7cfa6c681a70bd0e6ec849,"DERBY-6552 The public api includes methods inherited from superclasses which aren't in the public api and so have no javadoc comments

Patch derby-6552-firewall-balm:

- Use an explicit <get> task to download the required package lists
  for the external Java SE and J2EE Javadocs we want to link to from
  our published API docs.

- Remove the explicit boot classpath set to 16 level lest we get
  errors generating the docs for classes which require a higher
  level. The new method needs to see all source file to be able to
  resolve links and inherit javadocs. The first time the publishedapi
  target is built, the package lists will be downloaded and cached in
  local directories. Added svn ignore setting for those. On subsequent
  builds, the cached values will be used. If behind a firewall the
  first time one builds, one needs to let ant know how to bypass the
  firewall, e.g. this way in bash:

     > export ANT_OPTS=""-Dhttp.proxyHost=proxyserver -Dhttp.proxyPort=80""

  in bash(1).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603943 13f79535-47bb-0310-9956-ffa450edef68"
0308feb5fcb16beee709eb25fdee89e9c71da47f,"DERBY-6623 DatabaseMetaDataTest fails intermittently

Patch derby-6623 introduced JDBC#assertunorderedResultSet to solve the
issue. It also cleans up a number of IDE warnings (missing Javadocs,
old style loop code, variable shadowing).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603944 13f79535-47bb-0310-9956-ffa450edef68"
6ac51606d9f69026df51465fc74e088a9cecdbac,"DERBY-6621: Make client-side getLogWriter() method private; tests passed cleanly on derby-6621-02-aa-move-getPrintWriter.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1603973 13f79535-47bb-0310-9956-ffa450edef68"
bc76319d03acd9a84543bd10d9b274bc0b94974c,"DERBY-6621: Remove unused method; commit derby-6621-03-aa-removeUnusedMethod.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1604168 13f79535-47bb-0310-9956-ffa450edef68"
1ffa77b9a6a836e0da12f8144c92282628985dc0,"DERBY-6624: Use javax.xml.xpath interfaces for XPath support

Stop using the interfaces in the org.w3c.dom.xpath package, since they
are not part of the Java SE specification.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1604758 13f79535-47bb-0310-9956-ffa450edef68"
aba4ea11771ffe282e3b19820b5af7cd11de5782,"DERBY-6629: Restrict privileged operation in CreateXMLFile

Remove the privileged operation in the CreateXMLFile class. Instead, let
the caller do the privileged operation and pass in a Writer object that
CreateXMLFile can write the file to.

Make the tests invoke the plan exporter tool via its main class instead
of calling the internal API.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1605021 13f79535-47bb-0310-9956-ffa450edef68"
93590dfd72ef5dfbf3bd4fa334b30b153911a5ff,"DERBY-6621: Reduce the visibility of StreamFileContainer; tests passed cleanly on derby-6621-04-aa-StreamFileContainer.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1605165 13f79535-47bb-0310-9956-ffa450edef68"
ed7f8b90560cfb8b4f6369a9e5e60e4caea35ffb,"DERBY-6634: Improve test coverage of SqlXmlUtil.java

Remove dead code from the time when SqlXmlUtil implemented the
Formatable interface (before DERBY-3870).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1605285 13f79535-47bb-0310-9956-ffa450edef68"
cc2990dc757bca68e591a89e633e70044b556520,"DERBY-6634: Improve test coverage of SqlXmlUtil.java

Add missing test cases for:

- XMLQUERY that returns an atomic boolean

- XMLEXISTS where the query returns an atomic value

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1605287 13f79535-47bb-0310-9956-ffa450edef68"
b23250c05588b32f307283d1564963d264ddc67c,"DERBY-6637: test errors failures in lang.XMLTypeAndOpsTest, XMLBindingTest and XMLConcurrencyTest with ibm jvms

Work around quirk in IBM JVMs when security manager is enabled by
broadening a catch block to include the exception thrown by IBM in
such cases.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1605364 13f79535-47bb-0310-9956-ffa450edef68"
b69f59c6fecd655d7bf7000505eef9ac31d979be,"DERBY-6623 DatabaseMetaDataTest fails intermittently

Patch *derby-6623-2a*, which adds an extra ordering [1] using
IndexDescriptor's *getBaseColumns* method as input to
*Arrays.toString()*. This imposes a total order on the rows returned
from the metadata query, so hopefully we get rid of the
Heisenbug. Note that this caused another unique constraint to be
chosen in the example that failed.

[1] *after* the number of columns in the index: small numbers
    before higher numbers since constraints with a small number of
    columns are considered better

The ordering makes sorting stable iff:

    - the row layout doesn't change
    - no indexes or constraint are added or removed.

Mostly, indexes with early base columns will be sorted first (and
selected as best), although not always: ""[11,1]"" sorts before ""[2,1]"",
but the main thing is the same index will be selected for the same
(unchanged) database always.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1605478 13f79535-47bb-0310-9956-ffa450edef68"
a516dd2cf979eada9ff2b14c174a0a6848248da2,"DERBY-6638 Remove unnecessary use of reflection in SignatureChecker

Remove the reflection + some missing javadocs and IDE warning fixes.

Removes unused argument from method ""checkSignature"", and changes all
StringBuilder usage to avoid concatenation.

I tested the tool manually for a simple case, but see DERBY-6639.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1605738 13f79535-47bb-0310-9956-ffa450edef68"
eb79cc039ea7f312351f25e1d7e04a0dbe5a11ce,"DERBY-6621: Reduce the visibility of some classes and methods in the Lucene plugin; commit derby-6621-05-aa-luceneClasses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1605794 13f79535-47bb-0310-9956-ffa450edef68"
8d64950dbb1586c51523fdd309d5db452d8c8e56,"DERBY-6621: Reduce the visibility of more classes and methods

Make util.getResourceAsStream() package-private, and make utilMain use
that method instead of implementing its own.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1605981 13f79535-47bb-0310-9956-ffa450edef68"
a4e629822d2034810243b184b3ef0b3f10e184e8,"DERBY-590: Add multi-field support to the Lucene plugin; commit derby-590-31-aa-multiField.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1606161 13f79535-47bb-0310-9956-ffa450edef68"
7e538ec7a418e7614aafa3d7faed98341a59b8bd,"DERBY-590: Add checks for legal field names for Lucene indexes; commit derby-590-32-aa-vetFieldNames.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1606719 13f79535-47bb-0310-9956-ffa450edef68"
0bfd4d7ccd3a1a6d7f4b5b36ce351db22016b2ec,"DERBY-6628 Intermittent error in TriggerGeneralTest

Patch derby-6628-more-diagnostics: a diagnostics patch that will dump
the entire lock table in if we see the unexpected set of locks seen in
this issue.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1606723 13f79535-47bb-0310-9956-ffa450edef68"
1447937e93e7ac847788017f5fbb74a476fbf738,"DERBY-6625: Make the JUnit tests correctly resolve the location of the engine jar when running on compact profile 2; tests passed cleanly on derby-6625-01-aa-useBasicEmbeddedDataSource40.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1606831 13f79535-47bb-0310-9956-ffa450edef68"
7139f7c7802892c820ead435823795030e7209f0,"DERBY-6634: Improve test coverage of SqlXmlUtil.java

Remove impossible code paths so that they don't show up as untested
code. In particular:

- Remove some unnecessary null tests. The callers already make sure
  that the arguments cannot be null, so it's better to skip the checks
  so that potential future bugs get reported as NPEs instead of being
  silently ignored.

- Remove code that serializes lists of atomic values. Derby only
  supports queries that return single atomic values.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1607017 13f79535-47bb-0310-9956-ffa450edef68"
8ee4fdfa303c8ef2add3c93549c9933dfee19494,"DERBY-6642 Make the JUnit result set assertion methods dump the actual rs when assertion fails

Patch derby-6642b. The patch works by always collecting columns and
rows as they are read. The method JDBC#addRsToReport takes these
collections and what's left of the result set and formats a dump of
the result set and adds it to the text of already existing assertion
failure. This is then (re)thrown.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1607069 13f79535-47bb-0310-9956-ffa450edef68"
11da6184ebcad1be6ce3916cbaa32af61ba752fb,"DERBY-6611 Broken link in API docs to derby.drda.keepAlive documentation

Javadoc fixup for this issue: Use textual cross reference instead.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1607135 13f79535-47bb-0310-9956-ffa450edef68"
9b8c04f9062c0f12219274ca7c2364e9df43f256,"DERBY-6626: Check type of user-supplied modules before creating instances

Check that the encryptionProvider connection attribute specifies an
implementation of java.security.Provider before trying to create an
instance of it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1607266 13f79535-47bb-0310-9956-ffa450edef68"
497ce7bdb596c9bf1d32fc20be69a5b980c3dc73,"DERBY-6644: Support standard syntax for altering column nullability

Implement SQL:2011 syntax for altering nullability:

  ALTER TABLE t ALTER COLUMN c SET NOT NULL
  ALTER TABLE t ALTER COLUMN c DROP NOT NULL

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1607559 13f79535-47bb-0310-9956-ffa450edef68"
adbd39fc7485d000b57687d7a6299dcb0781fd0b,"DERBY-6621: Reduce the visibility of more classes and methods

Make ReflectLoaderJava2.loadGeneratedClass() package-private.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1607575 13f79535-47bb-0310-9956-ffa450edef68"
59f29e43d89d0f3c378d235128d1ae4e27f9c183,"DERBY-6626: Check type of user-supplied modules before creating instances

Make SequenceUpdater verify that the class specified by the
derby.language.sequence.preallocator property is a
SequencePreallocator before attempting to create an instance of it.

Make dblook and ij verify that user-specified JDBC driver class names
and DataSource class names implement the correct interfaces before
attempting to create and use them.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1607795 13f79535-47bb-0310-9956-ffa450edef68"
d31131199c0511c089317a07709d3d3fd0df7d2c,"DERBY-6588: Third draft of release notes for 10.11.1; commit derby-6588-05-aa-thirdDraftReleaseNotes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1608471 13f79535-47bb-0310-9956-ffa450edef68"
f5ac375aad5ef67068d3194327b7645eac623941,"DERBY-3476: Improve serialization logic for SystemPermission

Validate name and actions fields when deserializing a stored
SystemPermission, and throw an exception if the stored
SystemPermission is not a valid one.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1608670 13f79535-47bb-0310-9956-ffa450edef68"
3a2ad96bbf2e41c72487b6545871d2f1f9787ded,"Fix javadoc warnings.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1608674 13f79535-47bb-0310-9956-ffa450edef68"
1ae02c9f1702772950170afebaf30e4aafd535d0,"DERBY-6590 Make JUnit tests run the fixtures in a deterministic order.

A new test suite class is introduced to replace the standard JUnit
TestSuite: BaseTestSuite. From its Javadoc:

/**
 * Derby replacement for TestSuite. This version, when provided with a
 * {@code Class} argument in a constructor or method, wraps a {@code TestSuite}
 * around a lexicographically sorted set of fixtures (i.e. test cases) to avoid
 * random fixture ordering (after Java 6). Its usage is similar to the original
 * JUnit TestSuite class.
 */

The old TestConfiguration#orderedSuite has been removed. Import
sections have been updated.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1608782 13f79535-47bb-0310-9956-ffa450edef68"
844595b25fb8384f6b123c9866f75f58533e67d9,"DERBY-6590 Make JUnit tests run the fixtures in a deterministic order.

Javadoc fix.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1608810 13f79535-47bb-0310-9956-ffa450edef68"
3c2347618cea21db0f0a08c37c40b6a4acc98434,"DERBY-3476: Improve serialization of DatabasePermission

Store the URL only once (remove the url field, as the URL is already
stored in Permission.name).

Make the pathType field transient, since it is recalculated on
deserialization anyway.

Store the actions portion of the permission.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609039 13f79535-47bb-0310-9956-ffa450edef68"
a946353854390963902bfcc710600a0ee2b60153,"DERBY-6651: BootLockTest fails on compact profile 2

Get the correct kind of DataSource from the test framework instead of
creating an EmbeddedDataSource directly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609092 13f79535-47bb-0310-9956-ffa450edef68"
0196a8f1782dfd7f03c0a769b8046c3e3f8f2404,"DERBY-6626: Check type of user-supplied modules before creating instances

Check explicitly that a custom tool implements the OptionalTool interface.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609099 13f79535-47bb-0310-9956-ffa450edef68"
44ea8afbad2f6b8aaa7d8eebc44ca7e41a1c5a7b,"DERBY-3476: Improve serialization of SystemPrincipal

Validate the name when reading a SystemPrincipal object from a stream.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609138 13f79535-47bb-0310-9956-ffa450edef68"
d3f7a7c179d9722a399375c76b3df2e5ffc62ac8,"DERBY-6650: Lucene tests fail on compact profile 2

Implement IndexOutput.getChecksum() which is required by Lucene 4.8.
Lucene 4.8 works on compact profile 2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609428 13f79535-47bb-0310-9956-ffa450edef68"
57f53e3ec6afdb9a61fb5ef798c5626f33aa874d,"DERBY-6652: Disable the use of views as the source data sets of MERGE statements; tests passed cleanly for me on derby-6652-01-aa-disableSourceViews.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609450 13f79535-47bb-0310-9956-ffa450edef68"
38b93c2f120bd790f6a28bf056359c6a63d46d4e,"DERBY-6649  Meaningless permissions granted to sysinfo.

Modified the template.policy and server.policy files.

Patch: DERBY-6649-src-2.diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609461 13f79535-47bb-0310-9956-ffa450edef68"
bf32514bd617d9fc6d68c1304c57d1e74d46c337,"DERBY-6616: Prevent applications from bypassing SQL authorization by directly calling system procedure entry points; commit derby-6616-01-ad-reauthorize.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609501 13f79535-47bb-0310-9956-ffa450edef68"
699ab55ab351ad2c32179166360699ec47a2c38d,"DERBY-6256: Improve javadoc for constructor for XmlVTI; commit derby-6256-07-aa-constructorJavadoc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609549 13f79535-47bb-0310-9956-ffa450edef68"
a69ff90a5f97f98d2cb7f0ae3a7d34d43d2a498c,"DERBY-6650: Lucene tests fail on compact profile 2

Implement the IndexInput.slice() method required by Lucene 4.9. Lucene
4.9 works on compact profile 2.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609655 13f79535-47bb-0310-9956-ffa450edef68"
d1c479d2804d86d90945a2bb568fdccc303bcadf,"DERBY-6650: Lucene tests fail on compact profile 2

Disable LuceneSuite on platforms that don't support JMX if the Lucene
version is lower than 4.8.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609686 13f79535-47bb-0310-9956-ffa450edef68"
c31614772ac2cf9da87d8340e599c988389dfdc8,"DERBY-6650: Parse Lucene versions leniently

Lucene 4.9 changed the format of version strings (from LUCENE_48 to
LUCENE_4_9). We need to recognize both in order to detect if an
upgrade has happened.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609716 13f79535-47bb-0310-9956-ffa450edef68"
55720b3940302cdafed66ffa251d67e876a9626f,"DERBY-6617 Silently swallowed SecurityExceptions may disable Derby features, including security features.

Patch derby-6617-2. With reference to the list of issues mentioned in the JIRA, the following
""silent swallows"" are addressed with this patch:

* FileMonitor PBgetJVMProperty Catch java.lang.SecurityException 1 line 183
* FileMonitor PBinitialize Catch java.lang.SecurityException 1 line 120
* FileMonitor PBinitialize Catch java.lang.SecurityException 1 line 157

These are not addressed in code yet:

  BaseMonitor readApplicationProperties Catch java.lang.SecurityException 1 line 1360
  BaseMonitor runWithState Catch java.lang.SecurityException 0 line 280
  FileMonitor createDaemonGroup Catch java.lang.SecurityException 1 line 89

A new test (MissingPermissionsTest) has been added to verify that we
get errors in either derby.log or on the console's standard error
(depending on what's possible) if we see a SecurityException in the
former ""silent"" swallow location.

In the case of FileMonitor line 157, the boot fails so we show the
error on the console (i.e. standard error). In order for that to
happen, we added a flushing of the temporary in-memory error log,
cf. added call to dumpTempWriter if we fail BaseMonitor#initialize in
console.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1609717 13f79535-47bb-0310-9956-ffa450edef68"
709b46ee20f75c5f963bec6c0e59e1c6fc3d30d4,"DERBY-6342: failure in ConglomerateSharingTest.testConstraintDrops

Accept different errors from statements that violate multiple
constraints, since it's not deterministic which constraint is checked
first.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1610373 13f79535-47bb-0310-9956-ffa450edef68"
ec4eb072cbe3471c74dd1d7f3b32e2c6b2fe4632,"DERBY-6617: Fix setting of permissions in MissingPermissionTest

- When forking a new JVM, pass on the properties that tell where
  various jar files are located.

- The specialized policy files for the test should include permissions
  required when running the test from Ant.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1610374 13f79535-47bb-0310-9956-ffa450edef68"
84e1fb36129d0cc92e1018813391b8e12a1c4ed3,"DERBY-6617: Make MissingPermissionsTest look for different error text on Java 6; commit derby-6617-04-aa-platformSpecificErrorText.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1610406 13f79535-47bb-0310-9956-ffa450edef68"
c93982898a790a296b8ed8a5eca61d97bf4ff15a,"DERBY-6660: ResultSet assertion methods fail in upgrade tests

If an error happens in addRsToReport(), don't let it shadow the
original error.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1610412 13f79535-47bb-0310-9956-ffa450edef68"
f6df18497bba79b6e8d474c0a1b0b7a2a5b7ec69,"DERBY-6617: Stabilize MissingPermissionsTest

Make sure the ij process is shut down cleanly to make the exit code stable.

Use a regular expression to check for messages in the test output. The
regular expression accepts both double-quoted and unquoted names, and
any directory separator, to account for platform differences.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1610662 13f79535-47bb-0310-9956-ffa450edef68"
b08f4211aa72f8fa43cb04a12d0258f06e4b461f,"DERBY-6663: NPE when a trigger tries to insert into a table with a foreign key

Make sure FKInfo serializes its fkIds field so that the information is
available in stored prepared plans too.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1610711 13f79535-47bb-0310-9956-ffa450edef68"
f65be8f9e8ee8e7b77680e3f014b0205848f31e4,"DERBY-6664: Schema 'null' does not exist when trigger inserts into table with deferred foreign key

Make sure the FKInfo class stores its schemaName field.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1610836 13f79535-47bb-0310-9956-ffa450edef68"
3130800aa6986b70e5c8072220b27c655103a1ee,"DERBY-6661: Make dblook recognize deferrable constraints; tests passed cleanly on derby-6661-01-aa-recreateDeferrableConstraints.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1610858 13f79535-47bb-0310-9956-ffa450edef68"
4b1a145257a03364489214b0aa0ed2c92c053830,"DERBY-6667: Remove redundant word from error message; commit derby-6667-01-aa-removeRedundantWord.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1611037 13f79535-47bb-0310-9956-ffa450edef68"
64b63085233fe33674a06eda4d7999da6cc7c59c,"DERBY-6668: Forbid TRUNCATE on tables referenced by deferred foreign keys; commit derby-6668-01-ab-disallowTruncateOnReferencedTable.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1611342 13f79535-47bb-0310-9956-ffa450edef68"
5e5e3c3616857a65992e4bbf09b73808d8416f0c,"DERBY-6617: Make MissingPermissionsTest run cleanly on IBM

The error message of the AccessControlException on IBM is the string
""Access denied"" (with capital A), whereas the expected message was
""access denied"" (lowercase a). Adjust the regular expressions used to
check the messages so that they accept both.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1611546 13f79535-47bb-0310-9956-ffa450edef68"
881d002452764eda0265cb8122f278b175b9c619,"DERBY-6667: Make Test_6661 create its own, empty, single-use database; commit derby-6676-01-aa-singleUseDecorator.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1614077 13f79535-47bb-0310-9956-ffa450edef68"
2db96c55e9d3a5691bb39f7ac308fc3c1f602682,"DERBY-6665 Violation of deferred constraints not detected when conglomerates are shared

Patch (derby-6665-dhw-dont-share) to fix missing logic to exclude
deferrable foreign key constrants form sharing supporting index. Adds
repro tests to ForeignKeysDeferrableTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1614327 13f79535-47bb-0310-9956-ffa450edef68"
f80e3cee4f81eb674b78311b39a20bb4cbde70e3,"DERBY-6672: Allow the renaming of referenced tables; commit derby-6672-01-ab-addTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1614681 13f79535-47bb-0310-9956-ffa450edef68"
f6d02c92a45dc8883c9be38704ec9d2699589c9d,"DERBY-6670 Rollback to savepoint allows violation of deferrable constraints

Patch derby-6670-2-c. This patch is a rewrite of the prototype patch
derby-6665-01-ae-deferredCheckAndDroppedFK.diff which moves from using
physical conglomerate ids as keys in the internal identification of
constraints and their indexes for deferrable constraints to

- UUID for the constraints for primary key, unique and foreign key
- UUID for base table (or constraint dependening on where in the code)
  for check constraints

This is essentially only a refactoring which simplifies the code. But
it also makes possible the fix for this issue, which is to stop
removing the deferrable constraint violation information when
constraints are dropped (directory or as a result of the table being
dropped), since a rollback to savepoint might undo drops, at which
point we need the violation information again. The solution is to make
the validation code robust against the absence of dictionary objects
(tables, constraints): if at commit or ""set immediate"", the objects
are gone we know there is no checking to be done.

The patch also adds rollback to savepoint test cases in
ConstraintCharacteristicsTest#testDerby6670_a, including the repro for
this issue.

Also removed the release of violation information at a successful
change to immediate constraint mode as part of a SET CONSTRAINTS
statement, since a rollback to savepoint might re-introduce the
violations. New test cases added for this, too (#testDerby6670_b).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1614777 13f79535-47bb-0310-9956-ffa450edef68"
bde481bd2c6a910703178426879ac2865d3bebbb,"DERBY-6666 Deferred constraint validation fails with ""dead statement"" when query plan logging is enabled

Patch derby-6666c.

It removes this issue by adding push and push of the statement context
to the lcc before we execute the internal query to check for check
constraint violation. We had neglected to do this, which caused a
problem for the logging since the statement context should always be
properly initialized during execution.

This patch also adds a new test, derby6666 to
ConstraintCharacteristicsTest which fails without the fix in this
patch (equivalent to repro).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1614796 13f79535-47bb-0310-9956-ffa450edef68"
a42c32ea298f47a55f00a72591ad9997dec5d95c,"DERBY-6674 Cleanup brittle code in ValidateCheckConstraintResultSet

Patch derby-6674. Refactors the code by reusing getNextRowCore (to
avoid the redundancy) for ValidateCheckConstraintResultSet but
abstracting out the loop control, which is overridden by
ValidateCheckConstraintResultSet.

fix

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1614963 13f79535-47bb-0310-9956-ffa450edef68"
aa841e74eb1d3d575d51b36c47c4e92a8874ed0d,"DERBY-6588: Bump trunk version number to 10.12; commit derby-6588-06-aa-bumpTrunkVersionNumber.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1615084 13f79535-47bb-0310-9956-ffa450edef68"
b69e68cbe336b730ec1157f95d23ef03ffeff4e2,"DERBY-6588: Add the new Security Guide to the source distribution; commit derby-6588-09-aa-addSecurityGuideToSourceDistribution.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1615140 13f79535-47bb-0310-9956-ffa450edef68"
7fc0b8f92d949be10dc96e5db7c16f177c79d159,"DERBY-6683: Add vti demo classes to the bin.tar.gz distribution just as they are added to the bin.zip distribution; commit derby-6683-01-aa-addVTIdemoClassesToTargzDistro.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1615565 13f79535-47bb-0310-9956-ffa450edef68"
4637dbf55d56c8fbd649ec3270efda783639031a,"DERBY-6623 DatabaseMetaDataTest fails intermittently

Another instance of the test neglecting to consider that the rows may
legimimately come back in another order.  Switched to using
*assertFullUnorderedResultSet* instead of *assertFullResultSet*.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1615821 13f79535-47bb-0310-9956-ffa450edef68"
591ff9f9781e2b2dc2964366dc118d14ad3adff4,"DERBY-6565 ROW_NUMBER function throws NullPointerException in UPDATE statement

Patch *derby-6565-forbid.diff* which makes it illegal to use window
functions in the update source. Adds a new test for this error
condition. Also cleans up some Javadocs and modernizes some loops.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1615982 13f79535-47bb-0310-9956-ffa450edef68"
6f9270a1c516e2cbde8334d5e1e160de26a696aa,"DERBY-6685: Permission problems when running JUnit tests with Ant 1.9.4

Grant write permission to ant.jar so that test results can be written
to a file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616111 13f79535-47bb-0310-9956-ffa450edef68"
8bf622ba1220f438584d9653670df8ac2e9e135a,"DERBY-2234: ant junitreport gives fatal error during transformation

Use Ant's replace functionality to insert the sysinfo link into
overview-frame.html, instead of using an XSLT script. The XSLT script
only works if overview-frame.html is a valid XML document, which is
not the case without some massaging.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616112 13f79535-47bb-0310-9956-ffa450edef68"
dd908e8e6c6e2fae29bfaa4c302bb9ba3a4bb344,"DERBY-6336: Print more information when StalePlansTest fails

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616163 13f79535-47bb-0310-9956-ffa450edef68"
4222fe98ddeecbedbca29e6d9a5eddc7bd8de43d,"DERBY-6692: Fix self-deadlock regression in soft-upgraded database; commit derby-6692-01-ab-withTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616299 13f79535-47bb-0310-9956-ffa450edef68"
e9ac824113c436a74aa642fc4995071a6c4366cf,"DERBY-6688 NPE (or sane: ASSERT failure) with ROW_NUMBER in some subqueries

In FromSubquery (used in the OK subquery) the phasing is different
than in SubqueryNode (used in the failing query): the order by list is
pushed down too late in the SubqueryNode (after the
SelectNode#preprocess), so that the fact that the order by carries an
implicit window definition isn't recorded, causing the ""windows"" field
to be null, leading to missing rewriting in the getProjectRestrict
phase, hence the error.

In FromSubquery, the order by list is pushed down into the child
select node just before calling its preprocess method, i.e. the order
by list is present what that happens.

The patch (derby-6688-b) moves the pushing down of the order by list
in SubqueryNode#preprocess to the resultSet (the SelectNode) to just
before the call to preprocess of the resultSet, so the rest of the
windows rewriting machinery kicks in.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616332 13f79535-47bb-0310-9956-ffa450edef68"
ed8967c0b5de3bfaacf58d82272ad371571f1624,"DERBY-6689 Assert failure/NPE when using ROW_NUMBER in MERGE ... INSERT

Patch derby-6689. Adds checking for presence of window functions in
the matching clause nodes and throws 42ZC2 is that's the case. Adds a
test case.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616334 13f79535-47bb-0310-9956-ffa450edef68"
5b0cb063a824eae2a078808adae854b56e108e40,"DERBY-6691 ROW_NUMBER should not be allowed as argument in a procedure call

Patch *derby-6691* makes this usage throw 42ZC2 and adds a test to
OLAPTest#testBasicOperations.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616335 13f79535-47bb-0310-9956-ffa450edef68"
b737f16b1e20d4150656912e59473186271437f4,"DERBY-6690 ROW_NUMBER should not be allowed in generation clause

Patch *derby-6690* makes this illegal by adding a check in
TableElementList#bindAndValidateGeneration. I had to add an
acceptChildren method to GenerationClauseNode for the visitor to reach
down into the generation clause. Added a test to
OLAPTest#testBasicOperations for both CREATE TABLE and ALTER TABLE ADD
COLUMN.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616365 13f79535-47bb-0310-9956-ffa450edef68"
843145a211f76c83672df5c64b538d299b5d0d7d,"DERBY-6693 Assert failure/ArrayIndexOutOfBoundsException when using COUNT in MERGE matching clause

Patch derby-6693 which forbids aggregates in the matching clauses, and
adds a test case to MergeStatementTest, but:
the checked in code using assertCompileError instead of
assertStatementError for more precision (in MergeStatementTest).

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616523 13f79535-47bb-0310-9956-ffa450edef68"
5c2ad7166434bc3245aba29323e40772b1778419,"DERBY-6699 Error in PredicatePushdownTest.test_predicatePushdown

Patch derby-6699-diagnostics makes the sane build print information about the contents
of the two stacks when the ASSERT fails. Since this error is intermittent it may
help debug the issue.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1616807 13f79535-47bb-0310-9956-ffa450edef68"
3be846451b1aff1fb2ba50378780c589d7f9ee48,"DERBY-6697: Failures when running tests with JaCoCo

Add permissions needed by JaCoCo to MissingPermissionTest's custom
policy file.

Make BaseTestCase.execJavaCmd() propagate the empty jacoco.active
property to sub-processes if the tests are running with JaCoCo.

Adjust dummy arguments given to procedures in DBOAccessTest so that
they fail with an error that is not affected by the broader
permissions granted when running with JaCoCo.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1617240 13f79535-47bb-0310-9956-ffa450edef68"
d6aaec931465ec4c8849d9170a5608b3fc40ab3a,"DERBY-6336: Disable index statistics daemon in StalePlansTest

Eliminate the daemon as potential source of instability.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1617439 13f79535-47bb-0310-9956-ffa450edef68"
87c74010813e4c18f87142af426caefd684e9be8,"DERBY-5003 NPE in ReplicationRun_Local_3_p5 when stopping slave after purposefully crashing master

Patch to collect diagnostics (sane jars only): derby-5003-diagnostics.diff

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1617484 13f79535-47bb-0310-9956-ffa450edef68"
dd7698b80238812ec39e32cfbe1889b2c0dbb22f,"DERBY-6684(Failure in testDERBY5120NumRowsInSydependsForTrigger when upgrading from 10.11.1.0 to trunk)
We ran into DERBY-6684 after the fix for DERBY-2041 went into 10.11
The failure is the expected behavior since when dropping a table,
we should detect any dependent triggers defined on other tables
and drop table should fail if such dependencies exist. To fix the
test failure, we just need to switch the order of drop table
DERBY-2041(Trigger should register a dependency on tables and columns used in its body)
Drop ATDC_TAB1 before ATDC_BKUP1 because ATDC_TAB1 has a trigger
on it which references ATDC_BKUP1. If we try dropping ATDC_BKUP1
without first dropping ATDC_TAB1, there will be an error message
that trigger ATDC_TAB1_TRG1 depends on ATDC_BKUP1



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1617641 13f79535-47bb-0310-9956-ffa450edef68"
a2ecbd3eaa631be3ff5eefc86561c287b43e1603,"DERBY-6117 Silently swallowed SecurityExceptions may disable Derby features, including security features.

Patch derby-6617-3b. It adds reporting of the swallowed
SecurityException in FileMonitor#createDaemonGroup.

To get that printed I also i had to to make sure to dump the temporary
log in a change added to BaseMonitor#runWithState.

Additionally, I discovered that Derby became unbootable if we lack the
modifyThreadGroup permission: the monitor in such an event, lacking a
proper handler, thought it was already initialized so subsequent boot
attempts (from a non-system thread so we wouldn't see the
modifyThreadGroup issue) would also fail. I added a handler to clear
the monitor to fix this.

A new test fixture, testModifyThreadGroup checks that the warning
message being written to the console.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1617737 13f79535-47bb-0310-9956-ffa450edef68"
bc39f0edfa2d3be286ece1e55b2f770055d5723a,"DERBY-6704 Hang in AutoloadTest.spawnProcess:JDBCDriversEmbeddedTest on Mac/jdk7,8

Diagnostic patch to print the output of stderr and stdout from the
subprocesses if one of ""derby.tests.{trace,debug}"" is true.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1617825 13f79535-47bb-0310-9956-ffa450edef68"
8ad67d3b766b525b94eaf87a8abf24aad4f48b32,"DERBY-6704 Hang in AutoloadTest.spawnProcess:JDBCDriversEmbeddedTest on Mac/jdk7,8

Patch derby-6704b: it collects std out and err for the spawned
subprocesses, and also forward the debug options ""derby.tests.debug""
and ""derby.tests.trace"" to the subprocesses. If any of those are set,
we collect the std err and std out and print them interleaved with
that of the top process.

The patch will also try to get a jstack status of a hanging subprocess
before killing it (only works on Unixen) - hopefully this would work
also on MacOs; it uses a little dirty reflection to access a private
PID field in the underlying Process class object before trying a
jstack. For this to work, the test must also run using an Oracle JDK,
a JRE doesn't have a jstack.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1618088 13f79535-47bb-0310-9956-ffa450edef68"
4fc5f9c837aab62a44f559e5bbb38abb2be3299a,"DERBY-6703: MERGE statement fails with NullPointerException if ON clause references non-existent column

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1618114 13f79535-47bb-0310-9956-ffa450edef68"
d043e29ff73801bb9e12b44fd0fe919c6fddca0d,"DERBY-6705: Triggers should not allow MERGE statements that reference temporary tables

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1618544 13f79535-47bb-0310-9956-ffa450edef68"
4f29da3d8f359314f70347182034f322caa2e45d,"DERBY-3624: Missing deadlock in storetests/st_derby715.java

Make both tests wait until the other thread has executed the SELECT
statement and exhausted the ResultSet before they go on to the INSERT
statements that should deadlock.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1618821 13f79535-47bb-0310-9956-ffa450edef68"
dff2bf5747339c542db12a59055f902cfaf685d8,"DERBY-6704: Cleanup some javadoc warnings; commit derby-6704-01-aa-cleanupJavadocWarnings.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1618859 13f79535-47bb-0310-9956-ffa450edef68"
0a9a64973e599a3a6ce7880d2a5deff0182e9b4e,"DERBY-6680 Other jar files may need to be granted permission to read derby.ui.* properties

Patch derby-6680 adds a caveat to the template policy file to help
users avoid the issue seen by the user.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1618881 13f79535-47bb-0310-9956-ffa450edef68"
af6497ca39aa22dd0917aba0e4a5bd1d532adc43,"DERBY-6680 Other jar files may need to be granted permission to read derby.ui.* properties
   Correcting tiny comment typo.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1618930 13f79535-47bb-0310-9956-ffa450edef68"
7f53212912def8a93033af7111a391d567546b08,"DERBY-6619 After silently swallowing SecurityExceptions, Derby can leak class loaders

Patch derby-6619 which prints warnings on derby.log if permissions are
missing to get and set the context class loader in
SingletonTimerFactory (which can lead to classloader leak). Also adds
a test of this by checking derby.log in SecureServerTest.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1618955 13f79535-47bb-0310-9956-ffa450edef68"
f743fbcf42dda83f4bafff690d27d2db5f2daf2f,"DERBY-6619 After silently swallowing SecurityExceptions, Derby can leak class loaders

Fix to make a path to derby.log OS agnostic; used to fail on Windows.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1619154 13f79535-47bb-0310-9956-ffa450edef68"
43bb9d4687027a38c4c7e0c26b81d19c78350174,"DERBY-6709: Convert the storetests suite to JUnit

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1619376 13f79535-47bb-0310-9956-ffa450edef68"
b21afa1fc52b1a8cbb240f80bd0f3e7cfa0fa63e,"DERBY-6708 OOME when running ConstraintCharacteristicsTest with smaller heap

Patch derby-6708. Reduces the number of rows of the fixture
testManySimilarDuplicates from 40K to 4K. Removes the use of
in-memory database for all fixtures that use it.  In my setup (Ubuntu
12.04 64 bits, JDK 8u20) the test now runs fine with -Xmx128M, in ca.
70 seconds with ""derby.system.durability=test"".

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1619456 13f79535-47bb-0310-9956-ffa450edef68"
086dc6d316eadac185c9596d80359717084c22b6,"DERBY-6701: Instability in RuntimeInfoTest.x_testRuntimeInfoAfterConnClose

Keep calling getRuntimeInfo() for up to a minute until it gives the
expected response.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1619776 13f79535-47bb-0310-9956-ffa450edef68"
953afd7067e35b3982ef2f2bb8703f6e814c4501,"DERBY-6680 Other jar files may need to be granted permission to read derby.ui.* properties

derby-6680-2. This patch moves the reading of the two system properties up into
NetworkServerControlImpl. Other usage of LocalizedResource is
unaffected and might still try to read those system properties,
i.e. as called from ij.

Removes the note about LocalizedResource in the policy template file.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620378 13f79535-47bb-0310-9956-ffa450edef68"
493b80e2839ae5cd71d2014b4b1db40736e9ebb7,"DERBY-6619 After silently swallowing SecurityExceptions, Derby can leak class loaders

Patch derby-6619-2.

The fix introduced in DERBY-3745 correctly is there in order to
protect against the case where the thread that starts Derby, has a
context class loader that is different from the system class
loader. In such cases, if the timer thread inherits the context class
loader, the context class loader will stay in memory until the Derby
engine is shut down, even if all other references to the class loader
are gone.

If the context class loader is the same as the system class loader, on
the other hand, such a ""leak"" would not be a problem, since the system
class loader will stay in memory until the JVM is shut down anyway.

We take advantage of this and only attempt to change the context class
loader if it is different from the system class loader.  With this
patch, no warning is printed to derby.log when starting the server
from the command line, and there's no warning when starting the server
using the API with a security manager installed when the context class
loader hasn't been changed from the default. However, if the server is
started using the API with a non-default context class loader, we do
see warnings in derby.log if a security manager is installed and the
permission to set the class loader is missing.

Added tests for this behavior. Moved utility methods from
UpgradeClassLoader to ClassLoaderTestSetup, a new decorator. It seemed
more logical to put them there to allow reuse.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620379 13f79535-47bb-0310-9956-ffa450edef68"
921e39eae66a8196924d0aa214641361fe3c471c,"DERBY-6619 After silently swallowing SecurityExceptions, Derby can leak class loaders

Patch derby-6619-2-refinement which implements the following
refinements to the test to avoid changing the context class loader in
SingletonTimerFactory (suggested by Knut):

The orginal test tested against the system class loader. This new patch will:

1) Check if the context class loader is the same as the loader of the
SingletonTimerFactory class (that is, the class loader from which
Derby classes are loaded). Even if this isn't the same as the system
class loader, it would be safe to skip the workaround for DERBY-3745,
since the class loader for the Derby classes would not be eligible for
garbage collection until the engine is shut down anyway. This would
prevent some more false positives from being reported in
derby.log. I'd assume this is a kind of false positive that could
easily occur in an application server environment where the Derby
classes are not found on the system class loader.

2) Check against Thread.class.getClassLoader() instead of
ClassLoader.getSystemClassLoader(). Normally, those two checks would
be identical. If however the setup is such that they aren't identical,
we'd still know that the class loader actually used for system classes
such as the Thread class would have to stay in memory for as long as
the timer thread is alive, regardless of the context class loader of
the thread, so the workaround for DERBY-3745 can be skipped if it's
the same as the context class loader. The check will be a bit more
specific this way.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620385 13f79535-47bb-0310-9956-ffa450edef68"
e7deac451eaaa3626b5f9301e5b35ef9d3b749e6,"DERBY-6631: FileMonitor can be used to elevate an application's privileges

Don't elevate privileges in the setThreadPriority() method. Instead, let
the callers use doPrivileges() themselves.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620534 13f79535-47bb-0310-9956-ffa450edef68"
c0f956b48966bcf9abd230e78939b684cb3886b0,"DERBY-6619: Improve comments

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620539 13f79535-47bb-0310-9956-ffa450edef68"
4f1dcde01543d1e64d04e66ee020ec2542d9d31e,"DERBY-6714: RuntimeInfoTest failed with insufficient data from server

Tighten up checks for sessions being closed while reading runtime info from
them, in order to protect against NullPointerExceptions on the server.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620608 13f79535-47bb-0310-9956-ffa450edef68"
dfbbfaf117785efd211a3a6e179db2823207e510,"DERBY-6588: Add 10.11.1.1 to the table of starting points for upgrade trajectories; commit derby-6588-13-aa-addToTableOfUpgradeStartingPoints.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620676 13f79535-47bb-0310-9956-ffa450edef68"
4e269977c60503ec4230bb480dff4b54bcb6b43f,"DERBY-6715: MissingPermissionsTest fails under JaCoCo

Add permissions required by JaCoCo to the custom policy used by the test.

Change how SecurityManagerSetup checks for JaCoCo. By using
Class.forName() instead of getURL() we avoid the need for calling the
privileged getProtectionDomain() method, and the URL of the JaCoCo jar
file is not needed.

(It is usually OK to call this method without any special permissions
granted when the SecurityManagerSetup class is initialized. This is
because the SecurityManagerSetup is usually initialized before a
SecurityManager has been installed. In this test, however, a
subprocess is started with -Djava.security.manager, so a
SecurityManager is already in place before the SecurityManagerSetup
class is initialized in the subprocess.)

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620793 13f79535-47bb-0310-9956-ffa450edef68"
132bd11c2376c2af80b76a9cf4d2692a83f17944,"DERBY-6716: Minor fixes in SystemPrivilegesPermissionTest

Fix typos to improve test coverage:

- check both ""p1 implies p2"" and ""p2 implies p1"" in
  assertEquivalentPermissions(), instead of checking ""p1 implies p2""
  twice.

- remove a stray if statement that disables an assert in situations
  where it's expected to succeed.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620828 13f79535-47bb-0310-9956-ffa450edef68"
925ba701a36689d627d8f8d55271eea5d575ca76,"DERBY-6588: Update the STATUS file to record the publication of 10.11.1.1; commit derby-6588-15-aa-updateSTATUS.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620894 13f79535-47bb-0310-9956-ffa450edef68"
2e9fed48db3e589fa6e04a382a512466cd21dfc1,"DERBY-6720: Add support for publishing the derbyoptionaltools jar to the maven repositories; commit derby-6720-01-aa-installOptionaltools.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620961 13f79535-47bb-0310-9956-ffa450edef68"
3c6d42868615b4a39aa3a94a2e80518d8fdb0b5b,"DERBY-6720: Add changes needed to the master pom in order to publish derbyoptionaltools.jar to the maven repositories; commit derby-6720-02-aa-masterPom.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1620964 13f79535-47bb-0310-9956-ffa450edef68"
3c7296286c47e9f44949134afa7abe538c853c69,"DERBY-6628 Intermittent error in TriggerGeneralTest

Patch derby-6628b filters away any locks on system tables stemming
from (re)compilations of statements, since compilation locks is not of
primary interest in this test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1621215 13f79535-47bb-0310-9956-ffa450edef68"
e5b33f3d186613eb0d26a5d4a628702ffd2fcb79,"DERBY-6620 Network client DataSources silently swallow SecurityExceptions when trying to read the tracing properties

Added explanatory comments in the source where we swallow the
SecurityException.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1621216 13f79535-47bb-0310-9956-ffa450edef68"
5bfb338965c067a830ddd5126a6da9dfc4996c2a,"DERBY-6628 Intermittent error in TriggerGeneralTest

Patch derby-6628-2.

We decided, instead of filering the unexpected system table locks, to
retry the assert for the lock result set for a while to rule out slow,
lingering (re)compilation locks (by the index statistics daemon?).

If the locks of the system tables hang around for a minute (max
waiting time), something fishy is going on.

We'll run with this for a while, and if we don't see this issue again,
close the issue.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1621223 13f79535-47bb-0310-9956-ffa450edef68"
281f90334ade03375929047b9e1f68f372da4dbc,"DERBY-6717: Policies with multiple SystemPermissions are not handled well

Override newPermissionCollection() and return an instance that is able
to distinguish between SystemPermissions with the same name and
different actions. The default implementation in BasicPermission only
considers the name of the permission.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1621257 13f79535-47bb-0310-9956-ffa450edef68"
d09cda8fdd4897ab8a52d44245a3eb63d9699365,"DERBY-6717: Policies with multiple SystemPermissions are not handled well

Extra test cases to improve test coverage.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1621260 13f79535-47bb-0310-9956-ffa450edef68"
7af32f6954f0d94893a04fea8f78c74dd7057781,"DERBY-5165; Prepared XA transaction locks are not kept across DB restart
   Adding a test case (currently not enabled) based on the repro provided.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1622301 13f79535-47bb-0310-9956-ffa450edef68"
8bef59d404c84b3288e6b86afb8328721ac31cf1,"DERBY-6724: NPE if insert statement needs recompilation after having fired a trigger

Allow InternalTriggerExecutionContext.cleanup() to be called more than once.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1622631 13f79535-47bb-0310-9956-ffa450edef68"
3240e21f622d7d8822cf4d3f4409f68c9833baaa,"DERBY-6730: Allow case-sensitive names for key columns when creating Lucene indexes; commit derby-6730-01-aa-correctCasing.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1623782 13f79535-47bb-0310-9956-ffa450edef68"
dac3aab9fec5e860214e33471a5531e1823fe279,"DERBY-6702; test failure in NSSecurityMechanismTest; The expected SQL state must be five characters long
   Working around this intermittent error condition; when it happens we'll see 'ALARM', but no test failure.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1624064 13f79535-47bb-0310-9956-ffa450edef68"
dc57c1f4e22f6dc408fe194ff585a2d8038bf80a,"DERBY-5165; Prepared XA transaction locks are not kept across DB restart
   Adding License comment to the test


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1624105 13f79535-47bb-0310-9956-ffa450edef68"
86ee0a0d31ca72d3c710d1f68489904414c20eb2,"DERBY-6733: Implement an MBean for monitoring caches

Add a new MBean called CacheManagerMBean, which provides information
about a CacheManager instance.

Create CacheManagerMBean instances for the page cache and the
container cache when a database is booted.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1624469 13f79535-47bb-0310-9956-ffa450edef68"
19ca71c195adffddc2ca134a439cda35e3217845,"DERBY-6730: Allow spaces in the names of key names used by Lucene indexes; commit derby-6730-02-ab-spacesInKeyName.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1624507 13f79535-47bb-0310-9956-ffa450edef68"
6da88fc6f2325cc1dceda3ff740161504683536e,"DERBY-6733: Implement an MBean for monitoring caches

Add an MBean for the statement cache.

Fix the values returned from getAllocatedEntries() and
getUsedEntries(). The first patch got them mixed up.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1624974 13f79535-47bb-0310-9956-ffa450edef68"
c2ff5c763fb55d55514fa81622ccb4d2ec887153,"DERBY-6736: The jacoco-junit target fails to store coverage data for some sub-suites

Set the jacoco.active property to the empty string when the tests run
under JaCoCo. The code that did this was removed by mistake in
DERBY-6715.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1625037 13f79535-47bb-0310-9956-ffa450edef68"
947a723311026b35844ebe3f37f50c794ac1b7fb,"DERBY-6727; test behavior of open XA transactions when the database is crashed (not just shutdown)
   Adding further test cases to Derby5165Test


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1625093 13f79535-47bb-0310-9956-ffa450edef68"
6f49e16208c957fed223e91bc80f4840b05de879,"DERBY-6112; SSL Test (and network server )  can hang if serverSocket.accept() fails for something other than an IOException
   Changing the IOException to an Exception will prevent a hang/OOM.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1625453 13f79535-47bb-0310-9956-ffa450edef68"
1f1b46b1bf87faee95dba55030bdef2c15f79579,"DERBY-6569: NULLIF may return incorrect results if first operand calls non-deterministic function

Make sure the left operand of the NULLIF expression is only evaluated
once, so that it does not matter if it is non-deterministic.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1625520 13f79535-47bb-0310-9956-ffa450edef68"
ac5a3a2dd8aaeee21707f3051420d5c7784041df,"DERBY-2051: Remove the unused CachedItem class

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1625521 13f79535-47bb-0310-9956-ffa450edef68"
a826375a5482ff797e90b93a83b12173964fd181,"CERBY-6414(Incorrect handling when using an UPDATE to SET an identity column to DEFAULT)

I have created DERBY-6742 for JDBC part of this feature so we can generate auto generated resultset for an update statement updating generated columns. This implementation is supported through Statement.RETURN_GENERATED_KEYS flag.

Junit tests for this feature are in GeneratedColumnsTest.java. Upgrade tests are in Changes10_12.java. Upgrade test shows that a soft upgrade from pre-10.11 will not support update of generated columns using DEFAULT but 10.11 to trunk soft upgrade will allow it. This is because starting 10.11, we have started using sequence generator to create unique ids. If we want to support updating of idetity columns for pre-10.11 releases, we will need to maintain the code for old way of generating unique ids. In order to avoid that, this feature is available to only 10.11 db during soft upgrade.

For UPDATE of identity column to work in the MERGE sql, we need to make changes to MERGE code(DERBY-6743). MERGE already has required code for insert putting DEFAULT in generated columns. Implementation needs to be added for update putting DEFAULT in generated columns in case of MERGE. In the mean time, I have renamed existing junit test test_015_bug_6414 to atest_015_bug_6414 in MergeStatementTest.java so we do not run into failures.

Some detail about the part of the implementation that was tricky for DERBY-6414.
The existing code was originally written to handle inserting values in identity columns using DEFAULT. In case of insert, InsertResultSet uses ColumnDescriptors in resultDescription to find the type of the generated columns. This data structure holds the column descriptors of all the columns in the table. All the columns are in this data structure because even though INSERT statement may not explicitly assign a value to each and every column in the table, all the columns end up getting some value in them through an INSERT statement. The code in InsertResultSet.initializeAIcache method relies on availability of all the columns type information. But in case of Update, resultDescription does not include all the columns in the table. It only has the columns being touched by the Update statement(the rest of the columns in the table will retain their original values), and for each of those touched columns, it has a duplicate entry in resultDescription in order to have before and after values for the changed column values. This difference in array content of resultDescription requires us to have separate implementation of initializeAIcache method for insert and update.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1625884 13f79535-47bb-0310-9956-ffa450edef68"
012a4edf7c5f670985a17974121a245ae90009db,"DERBY-6737: CLOB retrieve exceptions after moving cursor around

Always fetch the row again from the server when moving the position of
a scrollable result set that contains LOB columns.

Without this fix, if one of the absolute positioning methods is used
(first(), last() or absolute(int)), and the old position is the same
as the new position, the result set will use the values it already has
for the row on that position. Any locators will have been released,
though, so accessing LOBs in the row will fail with 'invalid locator'.

By fetching the row again from the server, we get a fresh and valid
locator for the LOB columns in that row.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1625904 13f79535-47bb-0310-9956-ffa450edef68"
a0dbbd7285ba1ad5e560e5fc18c336c4fa5890dc,"DERBY-6648: Prevent user code from calling the public static entry points in ContextService; commit derby-6648-01-ae-regressionTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1625960 13f79535-47bb-0310-9956-ffa450edef68"
e1277c406dc449db66c3b2023d22c1b2d3a92576,"DERBY-6719; Add derbyoptionaltools.jar to the class paths of the scripts in the bin directory
  adding derbyoptionaltools.jar to the source bin and bin/templates files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1626094 13f79535-47bb-0310-9956-ffa450edef68"
b5392dbeee7daa38895fd7a10356735d73c2d2c7,"DERBY-3888: ALTER TABLE ... ADD COLUMN cannot add identity columns

Enable support for adding identity columns with ALTER TABLE. It is
only enabled if identity columns are backed by sequences. That is, the
database format has to be 10.11 or higher.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1626141 13f79535-47bb-0310-9956-ffa450edef68"
b6a45f5eb530689b5f4b5951ced4ab69bc4e12da,"DERBY-6741: Add a privilege barrier to prevent users from getting a ContextManager from an embedded connection object; tests passed cleanly on derby-6741-01-aa-usederbyinternals.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1626274 13f79535-47bb-0310-9956-ffa450edef68"
0c12cdeacdee5945a07aa00582fdbfc43bb1a0c0,"DERBY-6733: Implement an MBean for monitoring caches

Add test that verifies that a SecurityException is raised if the MBean
is accessed by code that hasn't been granted permission to monitor the
engine.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1626682 13f79535-47bb-0310-9956-ffa450edef68"
5afd169ece516df0489cd356c0f0cb22d10dece0,"Make some methods added in DERBY-6414 non-public to avoid exposing
internal arrays publicly.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1626735 13f79535-47bb-0310-9956-ffa450edef68"
b990fe92321611e94c40e1efec172c927deaed90,"DERBY-6648: Grant usederbyinternals permission to the classes directory to fix tests which don't run against the Derby jar files; commit derby-6648-02-aa-packagePrivateTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1626757 13f79535-47bb-0310-9956-ffa450edef68"
edcd5111a24e45079be28f7097aad4fc9186338a,"DERBY-6654: Require that generated code live in the org.apache.derby.exe package; commit derby-6654-01-aa-requireCorrectPackage.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1626806 13f79535-47bb-0310-9956-ffa450edef68"
35b010b57c1ec091cf21bf17c9e10db822aa6535,"DERBY-6654: Commit ClassLoadingTest with derby-6654-02-aa-ClassLoadingTest.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1626807 13f79535-47bb-0310-9956-ffa450edef68"
5b451646f452eb953b593b59992dd853300a779a,"DERBY-6180; DatabaseMetaDataTest should not fail if there are extra columns but only check the expected ones
   Making DatabaseMetaDataTest use a local method that only checks the expected columns.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1627436 13f79535-47bb-0310-9956-ffa450edef68"
35bdb15ae9035fece4cc96fde22cd6007b2e70d0,"DERBY-6180; DatabaseMetaDataTest should not fail if there are extra columns but only check the expected ones
  Moving the assertDatabaseMetaDataColumns method to junit.JDBC and making jdbc4.TestDbMetaData use it.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1627578 13f79535-47bb-0310-9956-ffa450edef68"
656a1ad2819f13024ec3a7cec0c347323f88dbcc,"DERBY-6662; DatabaseMetaData.usesLocalFiles() returns true for in-memory databases
   Making the usesLocalFiles and usesLocalFilePerTable method return false if it's a memory database and add a test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1627671 13f79535-47bb-0310-9956-ffa450edef68"
56c1dc22dc5036b048a2c0b6b772d7a0eae13c9f,"DERBY-6648: Prevent application code from calling the public static Monitor methods; commit derby-6648-03-ac-monitor.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1627831 13f79535-47bb-0310-9956-ffa450edef68"
f0d43cea040a810f2dde94a084d7d3c14f786af1,"DERBY-6662; DatabaseMetaData.usesLocalFiles() returns true for in-memory databases
   Adding a test case using the metadata optional tool.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1627851 13f79535-47bb-0310-9956-ffa450edef68"
d28e0af6e90c0f88da6a8fcfeb42f9acf667a439,"DERBY-6662; DatabaseMetaData.usesLocalFiles() returns true for in-memory databases
   changing the in-memory databasename used in the test.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1628008 13f79535-47bb-0310-9956-ffa450edef68"
b1008f380eb0ac261c99371263281744c3c8f8a0,"DERBY-6630: Reduce visibility of JCECipherFactory and protect it with the usederbyinternals permission; tests passed cleanly on derby-6630-01-aa-usederbyinternals.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1628206 13f79535-47bb-0310-9956-ffa450edef68"
d7a318a469f60a91fbdfd5ed2bbb89ce6ce01801,"DERBY-6636: Prevent blackhats from creating a BaseDataFileFactory; tests passed cleanly for me on derby-6636-01-aa-usederbyinternals.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1628256 13f79535-47bb-0310-9956-ffa450edef68"
7f3bcb486739425d7c66f3032f489208545b932a,"DERBY-6722(GenericStatementContext.cleanupOnError() needs protection from later errors during statement cleanup.

Handle unexpected exceptions while preserving the original exception for debugging purposes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1628331 13f79535-47bb-0310-9956-ffa450edef68"
aa302c30bc69cb120be583bf9011f942df7c07c3,"DERBY-6742(For update statement, collect generated keys if Statement.RETURN_GENERATED_KEYS flag is supplied to the JDBC call.)

This commit now allows JDBC statement to receive a resultset for auto generated keys for an UPDATE statement updating the generated values with DEFAULT clause. Such a resultset will be generated only if the UPDATE statement updated a single row and there were generated columns involved in the update. This functionality already exists for INSERT statement. It is currently implemented for INSERT statement by calling VALUES IDENTITY_VAL_LOCAL() from EmbedStatement.getGeneratedKeys(). I have used this existing mechanism to collect generated values resultset for UPDATE too. This means that the scope of IDENTITY_VAL_LOCAL() function has grown from INSERT statement to also include UPDATE statement. This will require us to update the documentation for IDENTITY_VAL_LOCAL(). I have created DERBY-6753(Docs for IDENTITY_VAL_LOCAL needs to be updated to indicate that the return value will be impacted by single row UPDATE of identity column) for the documentation task.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1628596 13f79535-47bb-0310-9956-ffa450edef68"
1ae0d7dc30707229ad752e668b9fd747e0198829,"DERBY-6751: Prevent user code from getting a LanguageConnectionContext out of an EmbedConnection; tests passed cleanly on derby-6751-01-ad-usederbyinternals.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1628855 13f79535-47bb-0310-9956-ffa450edef68"
7e03dbd2a042d04b7c48ab8df918ee2f369fe7fb,"DERBY-6748: Localize message changes introduced by 10.11.1.1; commit derby-6748-01-ab-engineAndToolsMessageChanges.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1628960 13f79535-47bb-0310-9956-ffa450edef68"
75d58b2a87c2ef0468b213f9b45bbaaa0a3528e9,"DERBY-6269(Misleading warning text if you create an index duplicating a constraint.)

Improve the warning text if a user requests an index creation which duplicates a constraint.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1629014 13f79535-47bb-0310-9956-ffa450edef68"
0fb596b0825cbd7fe4b72d6887a2a7a5c49f1cb2,"DERBY-6247; updatelocksJDBC30 test failing in nightly regression tests
  addressing the issue by merging the test into junit test UdateLocksTest.java


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1629099 13f79535-47bb-0310-9956-ffa450edef68"
c670aa4404d9fb5bff961bf724fc02173b94d604,"DERBY-6635: Prevent the optimizerTracing optional tool from writing its output over an existing file; commit derby-6635-01-ab-noOverwrite.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1629192 13f79535-47bb-0310-9956-ffa450edef68"
cf8e7ff488b483281cc8c89d1f5b54eea06cae19,"DERBY-6755: Adjust MathTrigFunctionsTest to account for discrepancy introduced by Java 9; commit derby-6755-01-aa-java9diff.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1629251 13f79535-47bb-0310-9956-ffa450edef68"
c1f3bbe2cd509826156c7ca464f118bda7ef7563,"DERBY-6269(Misleading warning text if you create an index duplicating a constraint.)

Fix a master diff


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1629282 13f79535-47bb-0310-9956-ffa450edef68"
67225cdcaee1990f1e3b16eec2bc3bbaf7e0b2fd,"DERBY-1040; Run store locking  tests with network server and investigate locking behaviour
   Pushing LockTableVtiTest to run with both embedded and DerbyNetClient/Network Server


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1629764 13f79535-47bb-0310-9956-ffa450edef68"
a57220c2ddbbafeea6f66d565263aceefa5b8228,"DERBY-6751: Improve performance of ResultSet.next() by caching the lcc in ConnectionChild; tests passed cleanly on derby-6751-02-ab-cacheLCC.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1629866 13f79535-47bb-0310-9956-ffa450edef68"
977383fcf826cd44acd1c7700c3c41b24f844650,"DERBY-6610; suites.All cannot be run with classes without failures
  returning an empty compatibility suite if the classes are not loaded from jar files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1630000 13f79535-47bb-0310-9956-ffa450edef68"
1f8bedfd556d1986a0c1fafea5f145f9be0ec559,"DERBY-6760; test_01_planCost has been failing for last couple nights on trunk and 10.11 with Unexpected SQL state. expected:<XIE0S> but was:<null>
  making the test accept a 38000 sqlstate with ibm 1.6 jvm.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1630598 13f79535-47bb-0310-9956-ffa450edef68"
c3ce6de85c126f75c2e58e37033e097775faec30,"DERBY-6610; suites.All cannot be run with classes without failures
   adding usederbyinternals permission to the codeclasses area for a number of test policy files.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1631263 13f79535-47bb-0310-9956-ffa450edef68"
c761a0e33bfa664da038a34935a67ce3ce02890a,"DERBY-6610; suites.All cannot be run with classes without failures
   fix up policy file for Derby3980DeadlockTest


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1631509 13f79535-47bb-0310-9956-ffa450edef68"
350dbf947a7418ae0ffb5690dd3597ede42c3c50,"DERBY-6610; suites.All cannot be run with classes without failures
   grant DeclaredMember permission to the codeclasses area in policy file for lucene tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1632198 13f79535-47bb-0310-9956-ffa450edef68"
e10f0e978da11fa190cb2c8834857c11de08e61c,"DERBY-6471; Create a regression test which will fail if classes from one Derby jar file leak into another jar file
   implementing a test which runs as part of ant buildjars, and compares the contents of the newly
   built jar files with a list of classes saved from a previous good build.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1635613 13f79535-47bb-0310-9956-ffa450edef68"
af5936c8577a2e8dadd492b8e7a4fb1fcbf4ef2e,"DERBY-5165

Update code to reclaim locks on prepared but not committed XA transaction
update locks on recovery reboot following crash.  Enable checked in test
that demonstrated the bug, which was verified to fail before the change
and pass after the change.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1635803 13f79535-47bb-0310-9956-ffa450edef68"
f78eb01cd75e9064599e3fc71f45c5db0e504ea1,"DERBY-6764(analyze impact of poodle security alert on Derby client - server ssl support)

Removed SSLv3 and SSLv2Hello from list of enabled protocols on the client and server side to avoid poodle security breach. Also, changed  NaiveTrustManager to use TLS as the default protocol rather than SSL. If NaiveTrustManager used SSL, then it won't find any enabled protocols for SSL after the removal of SSLv3 and SSLv2Hello. Changing it to TLS makes TLS protocols available for communication.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1636509 13f79535-47bb-0310-9956-ffa450edef68"
c3c7251ea354b11f12e64d42b2657325dfa01014,"DERBY-674(analyze impact of poodle security alert on Derby client - server ssl support)

Changes based on Knut's feedback.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1636668 13f79535-47bb-0310-9956-ffa450edef68"
383bfd5fabf836838130d78b37bead95dc2791ea,"DERBY-6764(analyze impact of poodle security alert on Derby client - server ssl support)

Fixed problem with array counter.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1636798 13f79535-47bb-0310-9956-ffa450edef68"
27cb6ed1eb956a112df83561f14e040281998437,"DERBY-6769; sane.derbyTesting.jar.lastcontents can be ""out of date"" but no build error results
   updating the contents with results from a clean environment


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1639245 13f79535-47bb-0310-9956-ffa450edef68"
f9c173bb93b1baae2a0bb255ee0d8785fd9b8ad4,"DERBY-6471; Create a regression test which will fail if classes from one Derby jar file leak into another jar file
   Modifying the text printed out when an error occurs with more details.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1639421 13f79535-47bb-0310-9956-ffa450edef68"
99d48bafbde84402be89088feb039db191e6e0a4,"DERBY-6768(List the enabled protocols in derby.log for network server configuration)

With this change, we will now print the enabled protocols list in the log file when the server starts up. A sample new line in the log will look as follows
 Wed Nov 12 21:32:21 PST 2014 : Apache Derby Network Server - 10.12.0.0 alpha - (1636020M) Enabled Protocols are SSLv3, TLSv1, TLSv1.1, TLSv1.2




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1639804 13f79535-47bb-0310-9956-ffa450edef68"
aafee40c55622e5e1e7c932fbd1b770d29144531,"DERBY-6772; intermittent test failure in LangScripts schemas
   changing the affected query to return the rows in a fixed order.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1640439 13f79535-47bb-0310-9956-ffa450edef68"
888d12ea88f0edf1afc9ef98170d15efed5f1b78,"DERBY-4057 Space is not reclaimed if transaction is rolled back

Added infrastructure called at insert abort time to queue post abort work.
After the abort work is queued in the case of aborted inserts to reclaim
space and if possible mark pages free, which then in turn allows them to
be used by subsequent work on the table.  This work queues this work
on heap tables when the aborted insert is the last row on a page, or
if the aborted insert is a row that contains a long column (a row that
is bigger than a page - usually a blob or clob), or a long row (a row
that spans multiple pages).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1641418 13f79535-47bb-0310-9956-ffa450edef68"
9fb8a065102a49966cfb9df971ffc8055645c432,"DERBY-4057 Space is not reclaimed if transaction is rolled back

javadoc fixes for previous checkin.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1641521 13f79535-47bb-0310-9956-ffa450edef68"
1bd9cd277e46075e449044be35d1a3cc21b2420e,"DERBY-4057 Space is not reclaimed if transaction is rolled back

a few changes to make the ClobReclamationTest better behaved across a variety
of platforms.  The test tries to measure background thread behavior, and needs
to allow for machines/jvms that might be single threaded and slow.  

In one case added a sleep after all aborts to allow the background thread
to catch up and mark all pages but head one free.  

In other case added more to the fudge factor of how much immediate insert
might progress before background thread can catch up and make free page 
available.  If this does not work may just need to add sleep after every 
insert.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1641526 13f79535-47bb-0310-9956-ffa450edef68"
160639711686cdfb251de4e52949501483c96320,"DERBY-4057 Space is not reclaimed if transaction is rolled back

more tweaking to get tests to run successfully across all platforms.  



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1641731 13f79535-47bb-0310-9956-ffa450edef68"
dbde907f04fc32a8ad6d10a62937d46d5bfe90a0,"DERBY-6774 org.apache.derbyTesting.functionTests.tests.lang.AlterTableTest.testAddIdentityColumn failed with assert in nightlys

Temporarily removing assert that is failing, looks like code should handle
the condition anyway.  Will renable after figuring out what is going on, 
hoping this will allow for clean runs from others while I work on this issue.
My current theory is that there is a long time problem with alter table
and the conglomerate cache that has been uncovered by this relatively new
test and the new background work introduced by DERBY-4057.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1641753 13f79535-47bb-0310-9956-ffa450edef68"
2678c360720250ecbab84930065809f4c4a3f4fb,"DERBY-4057

Removing one check in test that is failing across platforms.  Separate
work under DERBY-6775 will improve the test in this area.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1643463 13f79535-47bb-0310-9956-ffa450edef68"
38d132995fd1953832b1d585252a101f8956dc60,"just comment changes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1643573 13f79535-47bb-0310-9956-ffa450edef68"
3b6ebbaa56f61ee3ea0db7062a514e6840237532,"DERBY-6774

Temporarily disabling the failing test in nightly testing while
actively working on fixing this bug.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1643721 13f79535-47bb-0310-9956-ffa450edef68"
2cd0cc18fbd1c9b88831f37046780db55a0cbe5e,"DERBY-4057 Space is not reclaimed if transaction is rolled back

Another change to try and get test to behave well across all platforms.
Still encountering some issues that I believe are because background work
piles up on slow machines.  

Trying to address errors encountered in nightly tests:
http://people.apache.org/~myrnavl/derby_test_results/main/windows/testlog/ibm16/1643981-suites.All_diff.txt
http://download.java.net/javadesktop/derby/request_5600553/javadb-task-3984530.html



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1644145 13f79535-47bb-0310-9956-ffa450edef68"
c05d3df3cb62a287c7bc20bc67123bf499125b45,"DERBY-6774 background post commit threads cause ASSERTS/errors on interaction with alter table add column

Renable the tests that were failing on some platforms, and adds tests that
were failing consistently in my environment (laptop, windows 7, ibm17). 

The fix was to insure that background threads waited on table intent lock 
before going to the conglomerate cache.

Before doing this an inconsistent conglomerate would sometimes be faulted into 
the cache between time when alter table abort was invalidating the cache and 
abort had finished backing out the alter table. Then a subsequent alter table 
would fail as it correctly passed in that there was 1 existing column, but the
conglomerate cache thought there were 2 columns.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1645055 13f79535-47bb-0310-9956-ffa450edef68"
2540da694132723bcefe322bf1ce7a73bfa62e75,"DERBY-6775 add to testBlobLinkedListReclamationOnRollback() test to check that free space is used on subsequent inserts

fix retry counter, it was being reset every time through loop.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1645081 13f79535-47bb-0310-9956-ffa450edef68"
e358ca7c9b1c03f222e979d0db9f840f8cd791ae,"fixing some long lines and comments in a file I am looking
at changing for a new fix, rather have format only changes
separate from real changes.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1646311 13f79535-47bb-0310-9956-ffa450edef68"
10acff8dce3450075bdc631046c9250ccecd5bb3,"DERBY-3195; Describe if default security manager & policy is installed or not on each of the mechanisms to start the network server.
   updating the javadoc for NetworkServerControl to reflect information about the security manager.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1646373 13f79535-47bb-0310-9956-ffa450edef68"
7258ed2200b3ddce051cb1e6849632b109a6026b,"DERBY-3195; Describe if default security manager & policy is installed or not on each of the mechanisms to start the network server.
   Adding a period to finish the headers in two places, for readability.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1646502 13f79535-47bb-0310-9956-ffa450edef68"
c802b18b1ce4b6c6a072480824b372d194e7cafd,"DERBY-6775 add to testBlobLinkedListReclamationOnRollback() test to check that free space is used on subsequent inserts

increasing wait time, hoping to make test stable on slow machine in
oracle nightly testing.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1646815 13f79535-47bb-0310-9956-ffa450edef68"
a48aa44d0d22b63a5bb0d31a837535be7149d736,"DERBY-6775 add to testBlobLinkedListReclamationOnRollback() test to check that free space is used on subsequent inserts

increasing wait time, hoping to make test stable on slow machine in
oracle nightly testing.  Making it retry at least twice and increasing
second retry time.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1647844 13f79535-47bb-0310-9956-ffa450edef68"
d4d09722e1b3116d2b1b7c379f2aec9d38bd8893,"DERBY-6775 add to testBlobLinkedListReclamationOnRollback() test to check that free space is used on subsequent inserts

adding information to one of the test assert messages.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1648583 13f79535-47bb-0310-9956-ffa450edef68"
314a19ac8bb51ab665c4e72961950ebd69d8bcba,"DERBY-6725(Add a system function which returns the name of the database.)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1651284 13f79535-47bb-0310-9956-ffa450edef68"
2302f2a55d00d7acd4eaf7800f5a1660ab3a7a1d,"DERBY-6786(NullPointerException in INSERT INTO statement with multiple subselects)

Adding test casee for DERBY-6786. One test case(zztestDerby6786InsertIntoSelectCase3) which will result into NPE has been disabled. Once DERBY-6786 is fixed, we should enable that test by removing the zz in front of the test name.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1651707 13f79535-47bb-0310-9956-ffa450edef68"
ed3bfc8520fbb2b535e60cea3c2ee96a0947f660,"DERBY-6789; intermittent test failure in test case testNetworkServerSecurityMechanism in NSSecurityMechanismTest with Oracle Java 1.8
   correcting the work around of DERBY-6702


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1652162 13f79535-47bb-0310-9956-ffa450edef68"
e94357aad8f6ac748d1a969dc928d0fbe1b3ca17,"DERBY-4277; ReplicationRun_Local and ReplicationRun_Local_StateTest_part1 failed after testing fix of 4268
  Applying the minor improvement suggested to replace 'slaveDatabasePath + FS + slaveDbSubPath + FS + replicatedDb' by 'db' in the waitForConnect() method.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1653975 13f79535-47bb-0310-9956-ffa450edef68"
36dd3e2035ffd195f054abf6755ce38388410166,"DERBY-6788(Wrong value inserted by INSERT INTO with multiple subselects)

Adding a junit test case for DERBY-6788. This bug might be related to DERBY-6786(NullPointerException in INSERT INTO statement with  multiple subselects)


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1653986 13f79535-47bb-0310-9956-ffa450edef68"
8a0b9782ac6582bbf37959a103ed5378cdea0d5e,"DERBY-6800: Implement DerbySQLIntegrityConstraintViolationException class

This change adds the new DerbySQLIntegrityConstraintViolationException class,
which extends java.sql.SQLIntegrityConstraintViolationException, but adds
additional methods getConstraintName and getTableName.

This patch was contributed by Abhinav Gupta (abhinavgupta2004 at gmail dot com)



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1680979 13f79535-47bb-0310-9956-ffa450edef68"
0a1be27fce4f2be06daeed20f2cb8dd8f1932ae9,"DERBY-6810: Add regression tests for XXE vulnerability.

This patch was contributed by Abhinav Gupta (abhinavgupta2004 at gmail dot com)

This change adds a new regression test suite to hold tests for XXE
vulnerabilities in XML data type processing.

The new test case is in a suite by its own because we want to control the
overall security configuration (e.g., we want to ensure that no security
manager is installed).

Over time, as other types of XXE vulnerabilities are studied, we can add
additional test cases to this test suite.

Note that this test case demonstrates incorrect behavior, we believe. When
DERBY-6807 is fixed, this test case will need to be changed accordingly.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1684807 13f79535-47bb-0310-9956-ffa450edef68"
e0981a87b5b1d3b784a79ea59637b1442aecac82,"DERBY-6810: Add regression tests for XXE vulnerability.

Add XMLXXETest to the insane jardriftcheck. Follow-up to revision 1684807.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1685197 13f79535-47bb-0310-9956-ffa450edef68"
fa89f79fe7310c1d0ee7f182659738bf00c5816a,"DERBY-6810: Add regression tests for XXE vulnerability

This change adds the so-called ""billion laughs"" XML attack to the
XMLXXETest suite of XXE test cases. See:

    https://en.wikipedia.org/wiki/Billion_laughs

Note that even though this suite runs with no security manager, the default
limit of 64,000 entity expansions still applies, as documented in the Java
documentation here:

    http://docs.oracle.com/javase/1.5.0/docs/guide/xml/jaxp/JAXP-Compatibility_150.html#JAXP_security

And thus Derby, even with no security manager, is not vulnerable to the
billion laughs attack, at least since J2SE version 5.

Even though this test case does not demonstrate any error in Derby behavior,
so far as I can tell, it is still a worthwhile test to have in the suite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1685313 13f79535-47bb-0310-9956-ffa450edef68"
6622d69351f7ec1584e99f3d19633304965e35d8,"DERBY-6810: Add regression tests for XXE vulnerability

This change adds XMLXXETest to the XMLSuite Junit suite, so that it will be
run as part of the suite of XML tests, and will also be included in those
tests (such as lang._Suite) which include XMLSuite.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1686138 13f79535-47bb-0310-9956-ffa450edef68"
12a36413fedc75e161bf5173c36f0e68cdeb0b1b,"DERBY-6810: Add regression tests for XXE vulnerability

The new tests in XMLXXETest are reliable on Windows, but not on Unix. For the
time being, until I can figure out where the test portability problem is,
this change backs out revision 1686138.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1686347 13f79535-47bb-0310-9956-ffa450edef68"
94baca2882f6a39134bbbaff05ba1b77f0538a37,"DERBY-6810: Add regression tests for XXE vulnerability

This change adjusts XMLXXETest.testDerby6807FileAccess() slightly so
that it doesn't add an extra File.separator, which appeared to throw
off the file: scheme parsing on Unix platforms and caused the test to
misbehave.

For me, the test now behaves as expected on both Windows and Linux.

This change also re-adds XMLXXEtest to XMLSuite so that it will get
run by the main Jenkins build scripts and we can see how it behaves
on those platforms.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1686755 13f79535-47bb-0310-9956-ffa450edef68"
54844c3a13aff719d4d758f5cfd9e90c75b609d2,"DERBY-6783: WHEN clause in CREATE TRIGGER for UPDATE is not working.

This patch was contributed by Abhinav Gupta (abhinavgupta2004 at gmail dot com)

The main challenge raised by this issue involved the analysis of which
columns are referenced by the trigger. Trigger statements can reference
columns in a number of ways, including the ""AFTER UPDATE OF"" clause, the
trigger's action statement, and the trigger's ""WHEN"" clause.

When the WHEN clause support was introduced, this added a new way in which
a TRIGGER could reference columns, and the compiler code which translated
the trigger's logic into specific column references at runtime wasn't
getting the right set of columns.

The intent of this patch is to successfully run sql queries in Derby that
trigger updates in a table, affecting only a certain rows of data that
is determined by the when clause. This patch tries to cover a wide range
of possible ways in which rows are conditionally updated after an event.

Before this patch such trigger commands failed to execute correctly and
left the data in an inconsistent state.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1688062 13f79535-47bb-0310-9956-ffa450edef68"
7ed0ef04265fdaa8f926d8f6273693c5f32f6014,"DERBY-6820: Improve error handling in XmlVTI

This patch refines some of the error-handling behavior in the XmlVTI class:
- next() no longer calls printStackTrace if an exception is encountered.
- the SQLException thrown by next() now chains the original exception as cause
- an XMLErrorHandler is installed to process any internal parsing errors
- the XMLErrorHandler closes the input source, so resources can be freed

No new tests are included in this change. Additional new tests which exercise
these code paths are being developed as part of DERBY-6810, however, and
will be submitted in the near future.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1688297 13f79535-47bb-0310-9956-ffa450edef68"
5c8e2930730af24beadfd98486d4d9bc4ad13250,"DERBY-6810: Add regression tests for XXE vulnerability

This change adds tests which provoke XML External Entity vulnerabilities
in the XmlVTI class. One test demonstrates a file access vulnerability;
the other test attempts the ""billion laughs"" attack. These are the XmlVTI
versions of similar tests added in revision 1685313.

These new tests exercise error-handling code paths in XmlVTI and hence
are related to (and serve as tests of) the changes made by DERBY-6820.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1689194 13f79535-47bb-0310-9956-ffa450edef68"
4b58cc07fb95805b67bd294ef75e9140ca7773f1,"DERBY-6824: Refactor ShutdownException into shared code area

Having the ShutdownException as a common shared exception class offers no
benefit on its own, but it is an enabler for being able to share the
exception encoding/decoding routines between the network client and the
network server.

There should be no functional changes as a result of this patch, and there
are no new tests added. Subsequent projects intend to build on this change
to introduce functional enhancements and they will include tests for that.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1690384 13f79535-47bb-0310-9956-ffa450edef68"
2dcd13150c1d9c0efe9605577ba8a61614d51af2,"DERBY-6824: Move ShutdownException into shared code area

For reasons similar to those described in DERBY-4669, the new code in
o.a.d.shared.common.error is designed to be able to be present in multiple
jar files (e.g., in both derby.jar and in derbyclient.jar), so it needs
to be unsealed to avoid sealing violations when that occurs.

Marked the package unsealed.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1690482 13f79535-47bb-0310-9956-ffa450edef68"
2c38f3ce2c6ffa90ef1cf1ded971713e9db4e49e,"DERBY-6825: First rev of the simpleJson optional tool.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1690814 13f79535-47bb-0310-9956-ffa450edef68"
7643f9651406e12c9563a92b3dd258505e6c7144,"DERBY-6807: XXE attack possible by using XmlVTI and the XML datatype

This change enhances the DocumentBuilderFactory which is used by the
XmlVTI for parsing XML documents. The XmlVTI now automatically disables
external entity expansion and enables FEATURE_SECURE_PROCESSING.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1690855 13f79535-47bb-0310-9956-ffa450edef68"
a72ebf9def427bd0e3838eb0e3fa9c3266e88297,"DERBY-6807: XXE attack possible by using XmlVTI and the XML datatype


I believe that, when a Java Security Manager is in place, the XML Parser
instantiated by SqlXmlUtil obeys the policies defined by that security
manager, and hence is not vulnerable to XXE attacks (in the sense that
the only attacks that will succeed are those which are permitted by the
security policy).

But when a Java Security Manager is not in place, the SqlXmlUtil code
could be more secure.

This change modifies SqlXmlUtil so that it can detect that there is no
active Security Manager, and, if so, it now disables external entity
expansion and enables FEATURE_SECURE_PROCESSING.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1691461 13f79535-47bb-0310-9956-ffa450edef68"
99015e84dda39940e67f668033b2759e30b7ca6b,"DERBY-6741: User code can get the ContextManager from an EmbedConnection

This change adjusts NoDBInternalsPermissionTest so that the try block in
test_002_EmbedConnection covers the getConnection() call. At least in my
particular configuration, the getConnection() call can raise the (expected)
AccessControlException due to this test's security policy.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1691466 13f79535-47bb-0310-9956-ffa450edef68"
06340a7fb2dd178b8571bf12aa1244a55385d86f,"DERBY-6821: Include XMLOptimizerTraceTest in XMLSuite

This change simply moves XMLOptimizerTraceTest from lang._Suite to XMLSuite.

Except for the fact that running XMLSuite by itself now runs more tests,
there should be no other differences in behavior.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1691752 13f79535-47bb-0310-9956-ffa450edef68"
860c587f6347ea67c2a5b6c9bc23a59255a649e2,"DERBY-6802: Change NetworkServer code to use new MessageUtils class

In order to use the new MessageUtils library in the derbynet.jar package,
we need to unseal o.a.d.shared.common.error in that jar.

It was already unsealed in derby.jar and derbyclient.jar; this unseals it
in derbynet.jar.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1691759 13f79535-47bb-0310-9956-ffa450edef68"
2c3ad3beabde6e466a250cf4b74d183aa8487e54,"DERBY-6827: Fix LocalizedDisplayScriptTest on jdk 9; commit derby-6827-01-ab-omitColumn.diff patch.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1692008 13f79535-47bb-0310-9956-ffa450edef68"
4394bdd1e21def171e722031402157269bbcbfeb,"DERBY-6825: Add SimpleJsonVTI and helper functions to the simpleJson optional tool; commit derby-6825-02-aa-vti.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1693506 13f79535-47bb-0310-9956-ffa450edef68"
fd0d01feddc5ee8c9c506ac97250627c2df7da58,"DERBY-6825: Add datatype tests for SimpleJsonVTI. Also, close InputStreams opened by that VTI. Commit derby-6825-03-aa-datatypeTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1693708 13f79535-47bb-0310-9956-ffa450edef68"
6b8ad3897e554d8abef570eb925c8a6db195609a,"DERBY-6825: Grant public privileges to the users of the UDT and FUNCTIONS created by the simpleJson optional tool. Tests passed cleanly for me on derby-6825-04-aa-grantPrivileges.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1693818 13f79535-47bb-0310-9956-ffa450edef68"
5acdc77499679b29bd67bc95702792f1d3ac9937,"DERBY-6801: Implement MessageUtils class so client/server can share error code.

This patch was contributed by Abhinav Gupta (abhinavgupta2004 at gmail dot com)

This change implements a new class in the ""shared"" portion of the Derby code
tree. The MessageUtils class contains code which was refactored from various
Engine and Network Server classes, including MessageService and DRDAConnThread.

The purpose of this class is to encapsulate certain details about how error
messages and exceptions are encoded and decoded when passed between the Network
Server and the Network Client, so that the Network Client can decode the
error information to access the arguments to the message when needed.

Nothing about the protocol between the client and server is changed, nor is
anything about the encoding of the data changed. The only change is to make
the logic which implements the encoding/decoding available to both the server
and the client so that they can both use it without duplicating the logic.

As of this change, nothing uses the MessageUtils class. That is, this change
adds the new class, but doesn't remove any of the existing implementations in
the Engine and Network Server code bases.

Follow-on changes will (incrementally) change the Engine, the Network Server,
and the Network Client to use the code in this new MessageUtils class.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1694134 13f79535-47bb-0310-9956-ffa450edef68"
16aa6a483dcf1feb57063dcb01e9b374cf861035,"DERBY-6802: Change NetworkServer code to use new MessageUtils class
DERBY-6823: Refactor uses of DB2_JCC_MAX_EXCEPTION_PARAM_LENGTH

This patch was contributed by Abhinav Gupta (abhinavgupta2004 at gmail dot com)

This change modifies several classes in the Network Server and Engine
code bases to use the new features of the MessageUtils class in the
shared code.

The intent of this change is that no behavior is altered. The same
algorithms, data structures, network protocols, etc. are in use;
the only difference is that the implementation of the error message
and exception encoding logic is now drawn from MessageUtils methods
rather than being spread over several classes in the Network Server
and Engine code.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1694383 13f79535-47bb-0310-9956-ffa450edef68"
a0e4e78c9146669a43032623ed1bffc40e5c6db5,"DERBY-5466: Check in Scott Lewis' aggregator classes for var_pop(), var_samp(), stddev_pop() and stddev_samp(); tests passed cleanly for me on derby-5466-01-aa-aggregatorClasses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1694392 13f79535-47bb-0310-9956-ffa450edef68"
d57ff1756d3c728bdefaf61b255f67a22c6c371b,"DERBY-6803: Change Sqlca and SqlException to call MessageUtils

This patch was contributed by Abhinav Gupta (abhinavgupta2004 at gmail dot com)

This patch modifies the code in the client libraries
which analyzes the error or exception information in
the sqlerrmc message data, to use the new features of
the MessageUtils shared code to decode the message format.

In particular, the code can now locate and decode the
arguments as well as the message id, and therefore can
include those arguments when constructing a custom
Derby-specific subclass of SQLIntegrityConstraintViolationException.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1694492 13f79535-47bb-0310-9956-ffa450edef68"
2782d722ba60a29b994e2453a0a18c561059d2df,"DERBY-5466: Enable the new var_pop(), var_samp(), stddev_pop(), and stddev_samp() aggregates by wiring Scott's aggregators into the Derby bind logic. Commit derby-5466-02-ab-bindLogic.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1694918 13f79535-47bb-0310-9956-ffa450edef68"
a37ea51466aef71e21e44778844177c6397587a3,"DERBY-5466: Raise a useful error when someone attempts to use DISTINCT with the statistics aggregates. Commit derby-5466-03-aa-distinctError.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1695154 13f79535-47bb-0310-9956-ffa450edef68"
d02bb72fb23b16ca38713ea2c2decabe074539e1,"DERBY-6773: Derby throws plain SQLIntegrityConstraintViolationException

This patch includes contributions from Abhinav Gupta (abhinavgupta2004 at gmail dot com)

This patch enables use of the new Derby-specific subclass
of SQLIntegrityConstraintViolationException in both the embedded
and client-server configurations of the SQLExceptionFactory.

In addition, a number of new tests are added to verify that
the new exception is thrown and can be caught as we expect,
and that the accessor methods on the new exception allow
applications to determine which table name and constraint
name were responsible for the exception.

We still have a couple cleanup tasks before DERBY-6773 is
fully complete, but as of this patch the new behavior is
in effect.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1696690 13f79535-47bb-0310-9956-ffa450edef68"
e47763a7a120574151f5a60385beaef48411de8a,"DERBY-6803: Change Sqlca and SqlException to call MessageUtils

This patch was contributed by Abhinav Gupta (abhinavgupta2004 at gmail dot com)

This change removes the redundant definition of the
sqlerrmc message delimeter from Sqlca in favor of the
shared definition of that constant available in the
new MessageUtils class.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1697005 13f79535-47bb-0310-9956-ffa450edef68"
d29162f65568c8d7320b65d60561916e0975c583,"DERBY-5466: Add regression tests, contributed by Scott Lewis, for the new var_pop(), var_samp(), stddev_pop(), and stddev_samp() aggregates. Commit DERBY.5466.aggtest.patch.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1697892 13f79535-47bb-0310-9956-ffa450edef68"
56e04f783d48b71c237b873f4529cf0a586c05ac,"DERBY-6811: Commit initial version of the 10.12.1 release notes: derby-6811-01-aa-preliminaryReleaseNotes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1700164 13f79535-47bb-0310-9956-ffa450edef68"
73cd58f3dcc3d5e1854e1f6cdd09c92f33c54dc3,"DERBY-6811: Include another issue in the detailed release notes:  commit derby-6811-02-aa-releaseNotesWith6807.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1700166 13f79535-47bb-0310-9956-ffa450edef68"
961b0f44795cd3c76e521f03a463cde99f777a91,"DERBY-6825: Add to the simpleJson tool a function which converts a JSONArray into a Clob; commit derby-6825-05-aa-toClobFunction.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1701885 13f79535-47bb-0310-9956-ffa450edef68"
3a93342556c339371da65aa8f98e7dd8d4701f71,"DERBY-6811: Update STATUS file in preparation for producing the first 10.12.1 release candidate; commit derby-6811-03-aa-updatedStatus.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1702804 13f79535-47bb-0310-9956-ffa450edef68"
a93cd2074fa42d9b6eeb6bdb06b2a10fba33b31d,"DERBY-6811: Bump the release id on the trunk to 10.13; commit derby-6811-04-aa-bumpReleaseIdOnTrunk.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1702816 13f79535-47bb-0310-9956-ffa450edef68"
88f527cab9399115ca5957a222ef3fee8eba4fd5,"DERBY-6811: Wire the license information for the simple json tool into the build logic for the Derby NOTICE file; commit derby-6811-07-aa-simpleJsonNotice.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1702830 13f79535-47bb-0310-9956-ffa450edef68"
ded8b36826d7c4ee89de0e9edd1f2aff1a7bb3ec,"DERBY-6811: Checkin new, generated NOTICE file; commit derby-6811-08-newNOTICEfile.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1702836 13f79535-47bb-0310-9956-ffa450edef68"
50650bc14ae2ecd477a03340afd5d095bf26aa5c,"DERBY-6811: Wire 10.12.1.1 into the table of starting points for the upgrade tests; commit derby-6811-12-aa-addNewReleaseToUpgradeTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1707991 13f79535-47bb-0310-9956-ffa450edef68"
26671ec8ec5a2c1b8b4b5d37b7e9e0787b40aa8a,"DERBY-6811: Update the STATUS file to reflect the publication of 10.12.1.1; commit derby-6811-14-aa-updateSTATUS.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1708011 13f79535-47bb-0310-9956-ffa450edef68"
45a4a1da4c7f1bcb61a23372c452331a942ab601,"DERBY-5605 Calling Blob/Clob free() explicitly after implicit free throws exception in client driver.
Changed stored  procedures to noop if the locator is already freed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1709431 13f79535-47bb-0310-9956-ffa450edef68"
28c4dc47fe0c6f4ef42682748251777759a5ea82,"DERBY-6136: Introduce the rawDBReader optional tool for last-chance retrieval of data from unbootable databases; commit derby-6136-01-ab-teardownCorruptDB.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1716761 13f79535-47bb-0310-9956-ffa450edef68"
5e33d798bddb8da8696af326635a39a1987868a9,"DERBY-6136: Cleanup RawDBReader; commit derby-6136-02-aa-cleanup.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1716908 13f79535-47bb-0310-9956-ffa450edef68"
3967d8becac9f8b1e620473211fe8b7b11b7616c,"DERBY-6725: Canonicalize the database names returned by syscs_get_database_name(); comit derby-6725-02-aa-canonicalize.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1717646 13f79535-47bb-0310-9956-ffa450edef68"
a9431f51bdb7a17f8b240d72ce8580337a4788a5,"DERBY-6854: Fix the tests so that they run on the early access build 100 of Java 9; tests ran cleanly for me on derby-6854-01-aa-fixFor9-ea.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1725139 13f79535-47bb-0310-9956-ffa450edef68"
579dc9f4698f42e153325223d93f2c81ef3dbd72,"DERBY-6857: Remove support for java 6 and 7; compile Derby completely into java 8 byte code; commit derby-6857-01-aa-remove6and7.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1726495 13f79535-47bb-0310-9956-ffa450edef68"
c52bd601a13fb396b0d36c22704f69ca69c68657,"DERBY-6857: Remove references to jsr 169 from the build machinery; commit derby-6857-02-aa-cleanupOldJdks.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1726535 13f79535-47bb-0310-9956-ffa450edef68"
5d1f9f03c2741809d15ef482ac2a7989607970dc,"DERBY-6857: Replace hardcoded references to 1.8 in the build scripts with a min.version constant; commit derby-6857-03-aa-minimumVersion.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1726721 13f79535-47bb-0310-9956-ffa450edef68"
ac112f79ede15f50f04fd6a1254e65ff32276149,"DERBY-5944: The hard-coded PlanExporter help message should be internationalized

This patch was contributed by  Yun Fang ( fangyuncn at gmail dot com  )

This change replaces the literal string text in PlanExporter.java with
references to Derby messages.

The change also contributes both the English message text and the corresponding
Chinese message text.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1727230 13f79535-47bb-0310-9956-ffa450edef68"
c491355c756941aea59517685eb8e9274474b7f2,"DERBY-6857: Make classlister prune the constants files from the rosters of jar file contents; commit derby-6857-04-aa-pruneConstantClasses.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1727680 13f79535-47bb-0310-9956-ffa450edef68"
f4fa6c267495492935eb14813c8305fcd2406713,"DERBY-5950: PlanExporter and SignatureChecker don't appear in derbyrun.

This patch was contributed by Yun Fang (fangyuncn at gmail dot com)

This patch externalizes the help for 'java -jar derbyrun.jar' to reflect that
the PlanExporter and SignatureChecker tools are available from derbyrun.

The patch also enables PlanExporter from derbyrun, as it was not previously
available via this launch technique.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1727887 13f79535-47bb-0310-9956-ffa450edef68"
0b6bfd8d2e967c9d0f6a5e86e7bd03c0ece9f838,"DERBY-6856: Cleanup some cruft in the build machinery; commit derby-6856-01-ac-cleanup.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728250 13f79535-47bb-0310-9956-ffa450edef68"
695195e0a330ea3838816c6c448b8cd6fda4ce98,"DERBY-6861: Update the pointer to the KEYS file in the release summary file which used as an input to the ReleaseNotesGenerator; commit derby-6861-03-aa-releaseSumary.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728254 13f79535-47bb-0310-9956-ffa450edef68"
3602a8c883aad43e065b4e4b564a5a12c57631f0,"DERBY-6864: RawDBReaderTest fails on Windows

RawDBReaderTest.runRecoveryScript() opens a FileReader, but doesn't
close it. When the test harness tries to delete the test directory
upon completion of the test, it fails because one of the files in the
directory is still open.

This patch makes runRecoveryScript() open the FileReader in a
try-with-resources statement, so that it is automatically closed when
it goes out of scope.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728370 13f79535-47bb-0310-9956-ffa450edef68"
21dfcf06c6232354aa3fdab26931f5cebaa0995d,"DERBY-6857: Change source level to 1.8 in the NetBeans project configuration

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728371 13f79535-47bb-0310-9956-ffa450edef68"
5eb3cdfee9ac863e0b3a7ce0ce82d6853b37d889,"DERBY-6864: RawDBReaderTest fails on Windows

Use BaseTestCase.assertDirectoryDeleted() instead of File.delete()
to delete the db directory, so that we get more information if the
directory cannot be deleted.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728426 13f79535-47bb-0310-9956-ffa450edef68"
6d6a8733fde9d37d22d81077bc723798fea71702,"DERBY-6860: Automatic download of junit.jar broken

Invoke the install_junit target before the setCompilerProperties
target. setCompilerProperties sets the junit property, and the
install_junit raises an error if the junit property is set and
points to a file that doesn't exist. install_junit must therefore
be invoked before the junit property is set in order to be able to
download junit.jar.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728431 13f79535-47bb-0310-9956-ffa450edef68"
5a3453dbfe3a3cc639d908704c1a134b291a9697,"DERBY-6864: RawDBReaderTest fails on Windows

DataFileVTI.makeDecryptionEngine() opens a stream that reads from
service.properties, but it never closes the stream. This prevents the
file from being deleted later. This patch makes it open the stream in
a try-with-resources statement so that it gets closed automatically.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728459 13f79535-47bb-0310-9956-ffa450edef68"
8aa8deb9b2d0b9bd20afca6b21aa2aae0a34245f,"DERBY-6865: RestrictiveFilePermissionsTest fails on Windows

Remove use of reflection in the test. Reflection was used to access
functionality only available on Java 7 and higher. Since Java 8 is
the minimum level now, reflection is no longer needed.

This doesn't fix the test failure, but it makes it easier to debug
the test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728667 13f79535-47bb-0310-9956-ffa450edef68"
14248ac90504521fb5a89c737d23e1429311a529,"DERBY-6865: RestrictiveFilePermissionsTest fails on Windows

Move the contents of FilePermissionServiceImpl into FileUtil. It was
originally separated out of FileUtil because it used functionality
only available on Java 7 and higher, so it had to be loaded via
reflection. Since Java 8 is the minimum level on trunk, it could be
used directly from FileUtil without reflection.

The reason for the test failure was that a recent change caused
FilePermissionServiceImpl to be excluded from derby.jar, so that its
services were not used, and the database files ended up with unexpected
permissions.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728681 13f79535-47bb-0310-9956-ffa450edef68"
0feae43b70baf831f874eada40f3299ee9a5cc0b,"DERBY-6857: Deprecate support for building Derby under JDKs 6 and 7

Make ClassInvestigator understand the new byte codes added in Java 7
to support InvokeDynamic and lambda. Also transform an inner class to
a lambda in the NetworkServerControl class to test that
ClassInvestigator understands the new codes.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728732 13f79535-47bb-0310-9956-ffa450edef68"
0d57d84cbdf250b621756d55015fcd7e9369a695,"DERBY-6857: Deprecate support for building Derby under JDKs 6 and 7

Remove the JVMInfo constants for Java 6 and 7, since they are no longer
supported.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1728767 13f79535-47bb-0310-9956-ffa450edef68"
949e80b7688c7b616569653ffcfb5e8b1e0b0b4d,"DERBY-6868: Remove the dependency on Jakarta ORO

Rewrite the Sed class so that it uses java.util.regex instead of
Jakarta ORO for regular expression matching and substitution.

Remove tools/java/jakarta-oro-2.0.8.jar and all references to it.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1729326 13f79535-47bb-0310-9956-ffa450edef68"
3592c633238833efeff69dc16c45241e1c5c5867,"DERBY-6869: XMLXXETest fails in non-English locales

Decorate the test with a LocaleTestSetup that forces it to run in US
locale, so that it always sees English error messages.

Change the failing assert so that it reports the original exception in
case it doesn't get the expected exception. Makes it easier to debug
the test.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1729402 13f79535-47bb-0310-9956-ffa450edef68"
ed043d3dc8f57b11830011b7b0d1c76e9e19659f,"DERBY-6866: Add URLs to Maven POM files

This patch was contributed by Bindul Bhowmik ( bindulbhowmik at gmail dot com )

Maven POMs have a 'url' element, which is optional, but if not present Maven
automatically calculates the URL using the parent project POM's URL and
adding the child artifact's ID.

Because of this, Derby jar files in Maven repositories were being displayed
by Maven-related tools with URLs like

	http://db.apache.org/derby/derbyclient/

which is not a valid URL.

This change supplies the url element for each of the individual jar file
artifacts, using the preferred URL

	http://db.apache.org/derby/

in all case.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1729514 13f79535-47bb-0310-9956-ffa450edef68"
820eb0adcc1ce3ba0a5c8106680cfc430a873724,"DERBY-6828: Network Server fails to start in Czech locale.

LocalizedResource.getTextMessage has special exception-handling behavior
for situations where the chosen ResourceBundle does not contain the
message key that we are trying to format.

The exception handler simply displays the message key, together with
any arguments to the message.

But some messages have no arguments, for example the message
DRDA_SecurityInstalled.I has no arguments, and so NetworkServerControl
passes a null set of arguments when displaying that message.

Therefore, LocalizedResource.getTextMessage needs to include a null
guard, so that its exception handler doesn't trip over the non-existent
arguments and crash with a NullPointerException.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1730254 13f79535-47bb-0310-9956-ffa450edef68"
bd22c37bc17a29d7355fd501f702d969402636cf,"Update with new  4096 RSA key. Keeping old key during transition

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1730596 13f79535-47bb-0310-9956-ffa450edef68"
98378b52eca964d642b442996b13585b9414bef3,"DERBY-6828: Network Server fails to start in Czech locale.

This change modifies the drda message properties filename so that it
works more elegantly with the LocalizedResource utility class, and with
the underlying JDK ResourceBundle class on which it is based.

If your locale is cs_CZ, ResourceBundle will look for the message in
messages_cs_CZ.properties. If it is not found there, it will try
with a less specific locale and look for it in messages_cs.properties.

If it is not found there either, it will try with an even less specific
locale and look for it in messages.properties. If we move the English
messages from messages_en.properties to messages.properties, they will
become fallback for messages that lack translation to the requested locale.

The tools messages are already structured like this. There is a
toolsmessages.properties, but not a toolsmessages_en.properties.

The engine messages don't go through LocalizedResource; they have a
different mechanism for falling back to English (using MessageService).

It would be best if we had a single approach for Derby message property
files. However, messages processed by MessageService use a different
naming convention than messages processed by LocalizedResource, so for
the time being it seems the best approach is to rename the drda messages
to follow the LocalizedResource naming convention.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1730839 13f79535-47bb-0310-9956-ffa450edef68"
9a1012a629924d72f0c35816b988dc7d2d66cac3,"DERBY-6875: Mirror selection broken on Derby download pages.

This change changes the tool which generates the Derby download page for
a new release, to remove the comment markers from the mirror selection
portion of the page.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1732683 13f79535-47bb-0310-9956-ffa450edef68"
b9e22cc3278b05119ce6c08c406feffb19ee1eb8,"DERBY-1773: cursor updates fail with syntax error when column has an alias

This change enhances the runtime column analysis code so that an updatable
cursor can make a more nuanced decision about whether a column update is
or is not allowed.

Specifically, certain columns may not be updated, if they have been aliased.

Prior to this change, a confusing syntax error message would be delivered
when attempting to update an aliased column. Now, a more clear error message
is delivered, pointing at the fact that the aliased column is not in the
FOR UPDATE list of the cursor.

So the net result is (at least, should be) that the same set of queries are
accepted, but those that are not accepted have a slightly more clear message
issued when they are detected.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1734744 13f79535-47bb-0310-9956-ffa450edef68"
8d4cd27a60b8c2127ee90be7ab0e64da7d7b3eac,"DERBY-4091: Investigate size_problem column in MailJdbc test

This patch was contributed by Sandeep Samdaria (ssamdar at ncsu dot edu)

This change removes the column size_problem from the inbox table used
by the MailJdbc test. Our investigation leads us to believe that this
column was in place to work around an old problem in Derby that no longer
exists, and is no longer needed.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1735532 13f79535-47bb-0310-9956-ffa450edef68"
349d2a293c11c7c412a286b19d925aa371b08d21,"DERBY-6881: Test failures with JDK 9-ea b111

ClassLoaderTestSetup casts the context class loader to URLClassLoader
in order to create a new URLClassLoader with the same URLs as the
original class loader. In JDK 9, the context class loader is no longer
a URLClassLoader after JEP 261. This code now results in a
ClassCastException.

The point of ClassLoaderTestSetup is to change the context class
loader to something which is not the system class loader. It does not
have to be a clone of the original context class loader. This patch
therefore changes ClassLoaderTestSetup so that it sets the context
class loader to an empty URLClassLoader which wraps the system class
loader. This avoids the unreliable cast and the resulting
ClassCastException.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1737188 13f79535-47bb-0310-9956-ffa450edef68"
9fb4631a57510944cf40d9be8d1b3551dfcce3be,"DERBY-6881: Test failures with JDK 9-ea b111

Some stack traces are formatted differently in JDK 9. For example,
what used to look like this
  at java.io.FileInputStream.open0(Native Method)
now looks like this
  at java.io.FileInputStream.open0(java.base@9-ea/Native Method)

The old test harness filters out stack traces to get stable results in
the canon-based tests, but it doesn't recognize the new look of the
stack traces.

This patch updates the regular expression that filters out native
methods from stack traces, so that it also recognizes the new format.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1737189 13f79535-47bb-0310-9956-ffa450edef68"
5b838fd0ed5943f813ba15bcf5076faf3dd1cd85,"DERBY-6882: Add ALTER TABLE ALTER COLUMN ... SET GENERATED functionality, which switches an identity column from ALWAYS to BY DEFAULT and vice-versa.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1738368 13f79535-47bb-0310-9956-ffa450edef68"
bb5be6f126530b204f92b4f98fa643d07248da98,"DERBY-6885: Remove ReuseFactory

The methods getInteger(), getShort(), getByte(), getLong() and
getBoolean() are now simple wrappers around Integer.valueOf(),
Short.valueOf(), and so on. They no longer have any purpose, and can
be removed. Callers can either call the corresponding valueOf() method
directly or rely on auto-boxing (which use valueOf() implicitly).

The remaining method, getZeroLenByteArray(), which returns a static
instance of an empty byte array, is replaced with a static final field
in the ArrayUtil class.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1740842 13f79535-47bb-0310-9956-ffa450edef68"
21044de332f0d0fc94d2cc8efb7a1619dfb159b7,"DERBY-6880: Update failing with java.sql.SQLDataException

This change reverts part of the changes made by revision 1628596 for DERBY-6742.

Specifically, the section of code added to UpdateResultSet.collectAffectedRows
is removed. That code caused problems with certain SQL UPDATE statements
which were compiled with Statement.RETURN_GENERATED_KEYS. The new test cases
added by this change include several examples of such SQL statements.

The JDBC documentation for the intended behavior of UPDATE statements with the
RETURN_GENERATED_KEYS option is unclear; the intended behavior is much
clearer with INSERT statements. Given that I don't understand the intended
behavior, it seems safer to me to return Derby to the previous state for
UPDATE statements; namely, that no attempt is made to compute the set of
generated keys for an UPDATE statement.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1741380 13f79535-47bb-0310-9956-ffa450edef68"
62ab90001a696ea89c87407704de6c9c90efbc83,"DERBY-6884: SYSCS_IMPORT_TABLE_LOBS_FROM_EXTFILE can't import lob data

This change modifies the ImportLobFile.getString() and
ImportReadData.initExternalLobFile() methods so that they use a Java ""long""
variable for the offset into the external lob file; prior to this change
they were using a Java ""int"" variable and hence would malfunction when the
lob offsets exceeded Integer.MAX_VALUE ( 2,147,483,647 ).

The regression test which demonstrates these problems is a bit slow to run;
on my system, it takes approximately 15 minutes to execute, and requires
about 10 GB of available disk space during the test run. Therefore, the
test cases are placed in a new test program (Derby6884Test), which is not
listed in the ""standard"" system test suites, but rather is only added to the
""largedata"" suite. The new test can also be run by itself, e.g.:

ant -Dderby.junit.testclass=org.apache.derbyTesting.functionTests.tests.largedata.Derby6884Test junit-clean junit-single


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1742057 13f79535-47bb-0310-9956-ffa450edef68"
39b3237a9c0221a3db09eb910d53712baeb31ac1,"DERBY-6856: Eliminate some autoboxing-related deprecation warnings when building with jdk 9: derby-6856-03-ab-autoboxingDeprecationWarnings.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1742289 13f79535-47bb-0310-9956-ffa450edef68"
2677ed1e6cd308492d5df8db1e08dea697ff7d5d,"DERBY-6856: Make it possible to build Derby using JDK 9

This change reverts one particular change from revision 1742289.

The java.util.List class supports two remove methods:
remove(Object o) and remove(int i). In the DatabaseMetaDataTest's
testGetTypeInfo test, there is a List<Integer>, and changing
the autoboxing code to call remove(Types.BOOLEAN) rather than
remove(new Integer(Types.BOOLEAN)) caused the JDK 8 compiler to
choose remove(int i) rather than remove(Object o), thus
causing failures in the upgrade test suite.

This change returns the test code to using the explicit
object creation in order to ensure we call remove(Object o).



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1742756 13f79535-47bb-0310-9956-ffa450edef68"
ce40a31daf0c8c7c2d8a7059e5c0a6d01d3ed440,"DERBY-6856: Fix more deprecation warnings when Derby is compiled with JDK 9 build 116; commit derby-6856-04-ab-autoboxingDeprecationWarnings-part2.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1742858 13f79535-47bb-0310-9956-ffa450edef68"
80d39eee6bcc5c73184ea4d35d2a09d7947c6592,"DERBY-6856: Revert ShardingKey changes introduced by revision 1742858.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1742861 13f79535-47bb-0310-9956-ffa450edef68"
0f80d123c6d32c9a8415d2da0461a3855d40b430,"DERBY-6856: Make it possible to build Derby using JDK 9

As a follow-up to revision 1742756, and a slight improvement to it,
use Integer.valueOf(Types.BOOLEAN) rather than new Integer(Types.BOOLEAN)
which avoids an unnecessary object allocation.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1743093 13f79535-47bb-0310-9956-ffa450edef68"
cd362863b4e93014c1302b60b6fb831657095941,"DERBY-6854: Make it possible to run Derby tests on early access
versions of JDK 9

JDK 9 will move the JDBC classes out of the boot class loader and into
the platform class loader (see JDK-8154189 in the OpenJDK bug
tracker).

Derby has some test and debug code that assumes that the JDBC classes
live in the boot class loader.

1) Some tests create a new class loader in order to make the test load
the Derby classes afresh (SysinfoLocaleTest), or to test against a
different version of Derby (the upgrade tests). To achieve this, they
create a URLClassLoader which contains the Derby jar files they want
to test against, and set the parent of the URLClassLoader to null,
which means that the boot class loader is the parent.

Now that the JDBC classes are not on the boot class loader, this
URLClassLoader is not able to find the JDBC classes, and the tests
fail with NoClassDefFoundErrors when trying to load them.

This is fixed by setting the parent of the created URLClassLoader to
what java.sql.Connection.class.getClassLoader() returns. On JDK 8 and
earlier it returns null, so nothing changes there. On JDK 9 it returns
the platform class loader, which is capable of loading the JDBC
classes.

2) The org.apache.derby.impl.services.bytecode.d_BCValidate class
contains some debug code (only included in the sane jars) which runs
some sanity checks on the generated byte code. To do this, it accesses
the class loader of all the classes in the method signatures.

When getClassLoader() is called on JDBC classes, a RuntimePermission
is needed now. This was not the case before when the JDBC classes were
in the boot class loader, since Class.getClassLoader() does not check
for permissions if the class loader is null. Now this causes an
AccessControlException in tests that run with a security manager. The
tests actually grant the required permission to derby.jar, but the
call is not wrapped in AccessController.doPrivileged(), so it fails
because the permission is not granted to the test code.

The fix is to wrap the call to getClassLoader() in a doPrivileged()
block. Additionally, because RuntimePermission(""getClassLoader"") is
not a mandatory permission for derby.jar, we need to check if it
raises a security exception. d_BCValidate only needs the class loader
in order to check if it is the same class loader as d_BCValidate's own
class loader. Since Class.getClassLoader() does not require any
permissions if the class has the same class loader as the calling
class, we can conclude that the class loaders are different if a
security exception is raised.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1744989 13f79535-47bb-0310-9956-ffa450edef68"
38e6a8d2f5aa0939f647f1a6ee25ea226445a281,"DERBY-3181: DatabaseMetaData.getBestRowIdentifier behavior with invalid scope

This patch was contributed by Danoja Dias (danojadias at gmail dot com)

The DatabaseMetaData.getBestRowIdentifier method takes a number of arguments,
including ""scope"", which is supposed to be one of the enumerated values:
bestRowTemporary, bestRowTransaction, and bestRowSession.

If an invalid scope argument was passed to this method, Derby was returning
a hard-coded ""empty"" row identifier, which was slightly different, in detail,
to the row identifier that is returned for a valid scope argument.

Since JDBC does not require that we return such a row identifier for an
invalid scope argument, it seems cleaner and more useful to throw an
exception with a message indicating that an invalid scope argument was
passed. The caller can then correct their application to make the call with
a valid scope argument, and will then receive a valid row identifier.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1745414 13f79535-47bb-0310-9956-ffa450edef68"
44694000a916010bf7013ce95277efe9ea1805e1,"DERBY-6856: Eliminate build warnings related to RoundingMode and Class.newInstance() introduced by build 118 of JDK 9: commit derby-6856-05-ag-roundingMode-Class.newInstance.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1745932 13f79535-47bb-0310-9956-ffa450edef68"
a12152aea62541add46b22880557d3fc79850c39,"DERBY-6856: Remove deprecation warnings related to Observer/Observable by adding Derby implementations of the observable behavior.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1746066 13f79535-47bb-0310-9956-ffa450edef68"
4ba78a4bbbeb52a751d47a5546f51183e6e4c69c,"DERBY-6856: Accidentally checked in the ShardingKey changes again; reverting.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1746068 13f79535-47bb-0310-9956-ffa450edef68"
02597f233f3cb7fbceceeafe9ea81ff42999a5c8,"DERBY-6856: Clean up the last deprecation warning introduced by build 118 of JDK 9: commit derby-6856-07-aa-oneMoreNewInstance.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1746132 13f79535-47bb-0310-9956-ffa450edef68"
cb08288228eeea4b882d5925072d8c23e2929fa7,"DERBY-3181: DatabaseMetaData.getBestRowIdentifier behavior with invalid scope

This patch was contributed by Danoja Dias (danojadias at gmail dot com)

This change is a follow-on to revision 1745414, and removes the
getBestRowIdentifierEmpty query definition from the queries in
metadata.properties.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1746487 13f79535-47bb-0310-9956-ffa450edef68"
d21039a4ecc510b9d8337794807c4a6ca084c8b2,"DERBY-6856: Cleanup javadoc warnings introduced by the previous patch on this issue.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1746712 13f79535-47bb-0310-9956-ffa450edef68"
0806f7366e068ddb4342e24a9545533a48c212e7,"DERBY-6550: Bulk-insert causes identity columns to cycle when they shouldn't

This change was contributed by Danoja Dias (danojadias at gmail dot com)

Adds a new test case to verify that a bigint identity column correctly
refuses to cycle when the identity value reaches the maximum value.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1747486 13f79535-47bb-0310-9956-ffa450edef68"
dc05c9d8149d540a78ddfe85401331c7e31a8789,"DERBY-6890: ALTER TABLE DROP COLUMN corrupts secondary index collation data.

During ALTER TABLE DROP COLUMN, we rebuild all the indexes on the table. Some
indexes may be entirely dropped, some indexes may be rebuilt with a subset
of columns, some indexes are simply rebuild with essentially the same content.

The issue is that the index rebuild logic was incorrectly setting the
collation data for each index. So the indexes had the right data, but the
wrong collation information, causing them to be damaged.

This change moves the computation of the index collation ids out of the
setUpAllSorts method, into the getAffectedIndexes method, where it is simpler
to compute the index collation ids appropriately, because the code in that
location already has logic to manipulate both the old (pre-DROP) and new
(post-DROP) table descriptions, and so it is straightforward to compute the
correct collation ids there.

As part of this change, an old test case in CollationTest2, which was marked
with the comment ""this test does not work yet"", and was disabled, is changed
(un-commented) and is now enabled.

I found no new problems with this test case. I believe that, at the time
that comment was written, there were bugs in Derby that have since been
repaired, and hence it is appropriate to enable this test case at this time.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1749069 13f79535-47bb-0310-9956-ffa450edef68"
f5bf9a9edf37b991d79e21ac4a90ca5858e93f1e,"DERBY-6891: Improve the synchronization behavior of DerbyObservable; commit derby-6891-01-ab-synchronizeMethods.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1750214 13f79535-47bb-0310-9956-ffa450edef68"
ea2e9393b599b3822fd2ab88aa5f015813906b3e,"DERBY-4555: Expand SYSCS_IMPORT_TABLE to accept CSV file with headers
DERBY-6892: Create new SYSCS_IMPORT_TABLE_BULK procedure

This change was contributed by Danoja Dias (danojadias at gmail dot com)

This change modifies the method Import.importTable so that it has
a varargs interface, which makes it easier to call it in a variety
of ways from different system procedures.

Additionally, the change adds a new system procedure, named
SYSCS_UTIL.SYSCS_IMPORT_TABLE_BULK, which is a variant of the
existing SYSCS_IMPORT_TABLE system procedure, but has an additional
argument at the end that specifies the number of initial lines of
data in the input file to be skipped.

The anticipated use for this system procedure is to process input
data files which have been generated by a CSV-data-generating tool
which includes column header data at the start of the input file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1751159 13f79535-47bb-0310-9956-ffa450edef68"
08cc0f89fe077234078430bf9b93ebc9dfd70ac5,"DERBY-4555: Expand SYSCS_IMPORT_TABLE to accept CSV file with headers
DERBY-6893: Create new SYSCS_IMPORT_DATA_BULK procedure

This change was contributed by Danoja Dias (danojadias at gmail dot com)

This change modifies the method Import.importTable so that it has
a varargs interface, which makes it easier to call it in a variety
of ways from different system procedures.

Additionally, the change adds a new system procedure, named
SYSCS_UTIL.SYSCS_IMPORT_DATA_BULK, which is a variant of the
existing SYSCS_IMPORT_DATA system procedure, but has an additional
argument at the end that specifies the number of initial lines of
data in the input file to be skipped.

The anticipated use for this system procedure is to process input
data files which have been generated by a CSV-data-generating tool
which includes column header data at the start of the input file.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1751852 13f79535-47bb-0310-9956-ffa450edef68"
88b727b011954bad8ccbce7f29f24d5a9d09003c,"DERBY-6879: Engine deadlock between XA timeout handling and cleanupOnError

This patch was contributed by Brett Bergquist (brett at thebergquistfamily dot com)

The original problem to be solved is that a connection that is performing a
XA transaction that discovers an error that must be cleaned up is going to
have a lock on a EmbedConnection and will then require a lock on the
XATransactionState.

And if the same XA transaction times out (because of the XA transaction
timer value) while the original XA transaction is being worked, then the
timeout handling is going to have a lock on the XATransactionState and then
require a lock on the EmbedConnection, triggering the deadlock.

The change in the patch fixes this problem by altering the locking on
the XATransactionState when invoked via the timeout by removing the
synchronization on the ""cancel"" method and instead using inline
synchronization on the ""XATransactionState"" while its internals are being
altered.

Then, it releases the XATransactionState lock to allow the
EmbedConnection.rollback method to be invoked without the lock.

Finally, it acquires the lock again to finish cleaning up the XATransactionState.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1751977 13f79535-47bb-0310-9956-ffa450edef68"
677a71c4cddf10f8d81307499d9cdb7fb5731015,"DERBY-6879: Engine deadlock between XA timeout handling and cleanupOnError

This patch was contributed by Brett Bergquist (brett at thebergquistfamily dot com)

The original problem to be solved is that a connection that is performing a
XA transaction that discovers an error that must be cleaned up is going to
have a lock on a EmbedConnection and will then require a lock on the
XATransactionState.

And if the same XA transaction times out (because of the XA transaction
timer value) while the original XA transaction is being worked, then the
timeout handling is going to have a lock on the XATransactionState and then
require a lock on the EmbedConnection, triggering the deadlock.

The change in the patch fixes this problem by altering the locking on
the XATransactionState when invoked via the timeout by removing the
synchronization on the ""cancel"" method and instead using inline
synchronization on the ""XATransactionState"" while its internals are being
altered.

Then, it releases the XATransactionState lock to allow the
EmbedConnection.rollback method to be invoked without the lock.

Finally, it acquires the lock again to finish cleaning up the XATransactionState.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1751978 13f79535-47bb-0310-9956-ffa450edef68"
bb55cc3e452a7cbac32384d77c2b47a58cb16b57,"DERBY-4555: Expand SYSCS_IMPORT_TABLE to accept CSV file with header lines
DERBY-6894: Enhance COLUMNINDEXES parsing for SYSCS_IMPORT_DATA

This patch was contributed by Danoja Dias (danojadias at gmail dot com)

The purpose of this patch is to allow the COLUMNINDEXES value to specify
columns in the input file by column header ""name"", as an alternate to
column index number. Column header names can be specified as double-quoted
strings, and you can mix-and-match indexes and names, so that
COLUMNINDEXES could be specified as:

    1,3,""LastName"",""FirstName"",7

During the preparation of the input file for import processing, the
new ""readHeaders"" method that is added to the Import class will,
if 'skip > 0', open the input file, read the first 'skip' number of lines,
parse the column structure, and construct an array of the column headers,
then close the input file and return the headers array.

Then, the COLUMNINDEXES value, if it contains any column names, rather
than column index numbers, is matched against the headers array to
determine which column(s) to use.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1752990 13f79535-47bb-0310-9956-ffa450edef68"
dbed020d3949dd7707a6eca23741aa5ba155ece1,"DERBY-6856: Fix javadoc warnings raised when compiling Derby javadoc with build 124 of JDK 9: commit derby-6856-09-aa-javadocEntities.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1753091 13f79535-47bb-0310-9956-ffa450edef68"
698bfec50980e157610430c491ead020e90c824b,"DERBY-6879: Engine deadlock between XA timeout handling and cleanupOnError

This patch was contributed by Brett Bergquist (brett at thebergquistfamily dot com)

This change is a follow-up to revision 1751977.

The problem with that revision occurs if a timeout occurs calling ""cancel""
and if an error occurs on the clients connection causing the ""cleanupOnError""
to be called at the same time.

This change creates a new private static class that is used to track if
""cancel"" or ""cleanupOnError"" has been invoked. The methods are synchronized
so that there is no timing issue on checking and recording the state.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1753333 13f79535-47bb-0310-9956-ffa450edef68"
83668f1a2f5c1d1978c5565ccf570a49f27762ec,"DERBY-4555: Expand SYSCS_IMPORT_TABLE to accept CSV file with header lines
DERBY-6894: Enhance COLUMNINDEXES parsing for SYSCS_IMPORT_DATA

This patch was contributed by Danoja Dias (danojadias at gmail dot com)

This patch is a follow-on to revision 1752990, and ensures that the
new readHeaders() logic correctly increments the ImportReadData's
lineNumber field as it's reading the column header lines, so that if
an error occurs while reading those header lines, a reasonable line
number is reported in the error message.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1753876 13f79535-47bb-0310-9956-ffa450edef68"
d07d421ba6bc6d96f3165a2af971eea663d8d4e1,"DERBY-5585: Improve error message when user function can't find class.

This patch was contributed by Danoja Dias (danojadias at gmail dot com)

Additional text is added to the 42x50 and 42x51 error messages suggesting
an additional possible cause of the error might be derby.database.classpath.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1754348 13f79535-47bb-0310-9956-ffa450edef68"
5a91706c51defcf0a80c94d61f2f15d40edd435a,"DERBY-5585: Improve error message when user function can't find class.

This patch was contributed by Danoja Dias (danojadias at gmail dot com)

Several test output files are adjusted to reflect the new error message text.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1754588 13f79535-47bb-0310-9956-ffa450edef68"
5e5b9497246176cb0eca34175f4a15d9d2f33498,"DERBY-6752: Derby tries to load non-existent class AutoloadedDriver40

This patch was contributed by Danoja Dias (danojadias at gmail dot com)

This patch removes the code that tries to load AutoloadedDriver40. That code
was always failing, because the class was removed from the Derby code by
revision 1494482, but the attempt to load the class was wrapped in an
exception catch block so there were no symptoms of the failed class load
attempt.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1754680 13f79535-47bb-0310-9956-ffa450edef68"
4afca48171ca7bbd7482ccec0fef2b0ab17bf44a,"DERBY-853: ResultSetMetaData.getScale returns inconsistent values

This patch was contributed by Danoja Dias (danojadias at gmail dot com)

When a SQL statement contains arithmetic expressions, the result of the
expression may be of a different type than the operands to the expression,
due to type precedence rules which may require promoting the operand
values during evaluation of the expression.

For example, subtracting a DOUBLE from a DECIMAL results in a DOUBLE.

In some of these cases, Derby was reporting that the result column
had a non-zero scale, although the result column was not of DECIMAL type.

This change modifies the NumericTypeCompiler so that it only computes
a non-zero scale for the result column when it is of DECIMAL type.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1755133 13f79535-47bb-0310-9956-ffa450edef68"
d055adb22621f7ffaa21795e10875096cb34d515,"DERBY-6852: Allow identity columns to cycle

This patch was contributed by Danoja Dias (danojadias at gmail dot com)

This change introduces the new CYCLE keyword to the syntax of a
generated identity column. The CYCLE keyword, if specified, causes Derby
to select the CYCLE option in the sequence object that is created
internally to implement the identity column.

In turn, this means that values can be generated for the identity column
beyond the maximum value for the column's datatype; when that maximum
is reached, the sequence ""cycles"" and begins over again, (re-)generating
the values all over again.

Note that, as part of this change, when a Derby sequence cycles, it now
cycles to its minimum/maximum value (depending on whether it has a 
positive increment or a negative increment) rather than to its start
value; we believe this is improved behavior and is still standards-compliant.

With this change, the basic behavior is operational and there are tests
to demonstrate this. Various syntax checks are made, and the underlying
sequence is created correctly.

There is follow-up work to be done, which will be addressed possibly as
separate projects; we believe the basic feature is certainly usable
as of this change (and once we add documentation for it).


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1756287 13f79535-47bb-0310-9956-ffa450edef68"
fff8362d63e62e353a0a463cb8fe4ee6f11cc44a,"Add public key for Bryan Pendleton

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1762392 13f79535-47bb-0310-9956-ffa450edef68"
bc891d7e1b2087badbbe4463a160cca0d0636add,"Bump version number on trunk to 10.14.0.0

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1762397 13f79535-47bb-0310-9956-ffa450edef68"
b1047191cf38ccd210002346bfdc54e0458a9381,"DERBY-6911: Update the release id in trunk to 10.14


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1762398 13f79535-47bb-0310-9956-ffa450edef68"
617d55aba2641523093e9c7496659b07224bdc0c,"DERBY-6726: NPE from trigger

When there are multiple triggers on the same table, it is crucial that the
TriggerDescriptor class always uses the getTableDescriptor() getter method
to access its 'td' member field, so that the field can be lazy-initialized
if it has not yet been set.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1763024 13f79535-47bb-0310-9956-ffa450edef68"
f1acf2e6a96b7b1b216c503263e5c48111629bd5,"DERBY-6911: Add 10.13.1.1 jars to upgrade test quites

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1766755 13f79535-47bb-0310-9956-ffa450edef68"
f3630da6baa65054916cc805043c8e9ad80cff7a,"DERBY-6911: Update STATUS page

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1767115 13f79535-47bb-0310-9956-ffa450edef68"
9fbbcb81392e1032a3c79213e4b48a29fca8aed7,"DERBY-6902: Value out of range error

This change adds several new test cases to ParameterMappingTest, derived
from the original scenario described in the issue.

These test cases are designed to demonstrate the particular exception
discussed in the issue, as well as to demonstrate several ways to use
a CAST operator so that the query executes as desired.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1769904 13f79535-47bb-0310-9956-ffa450edef68"
3ef48bb1a0a0793a7f33233433ccd55b881d1b0d,"DERBY-6902: Value out of range error

This change adds still more new test cases to ParameterMappingTest, derived
from the original scenario described in the issue.

The new test cases explore some datatype conversions from string-to-integer.

They also look at some other variations on the original query from the
issue, demonstrating that the details of the phrasing of the query affect
the query compiler's decisions about intermediate data types.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1770458 13f79535-47bb-0310-9956-ffa450edef68"
43d83c685ec81455c5f5eb12a0eb0476fa331bd6,"DERBY-6918: Problem with schema name containing a period

When processing DELETE statements in a database schema including
referential integrity constraints that specify ON DELETE CASCADE,
it is easiest to keep the schema name and table name separate,
rather than pasting them together into a compound name joined with
a period, because pasting them together results in ambiguity about
which period separates the schema name from the table name, and
which period was simply part of the schema name proper.

Adjusted the logic in DeleteNode and DMLModStatementNode accordingly.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1772428 13f79535-47bb-0310-9956-ffa450edef68"
ddebc878800c7a3d5f36cb4b1f6ccd2ecbc2db55,"DERBY-6856: Disable SystemPrivilegesPermissionTest.testSerialization(), an unnecessary test case which fails on JDK 9. Tests passed cleanly on derby-6856-10-aa-disable-permissions-subverting-test.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1778945 13f79535-47bb-0310-9956-ffa450edef68"
0199c2ecf5abe872f229831db89b425932421cd9,"DERBY-6856: Fix the old-style test harness to run with recent jigsaw-related changes introduced in JDK 9; tests passed cleanly on derby-6856-11-aa-jigsawResourceLocation.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1779411 13f79535-47bb-0310-9956-ffa450edef68"
33427bdb982a7dd5b9e629ccec9c40f2b96412b4,"DERBY-6932: Tests passed cleanly against derby-6932-01-aa-suppressDeprecationWarnings.diff, committing...

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1794230 13f79535-47bb-0310-9956-ffa450edef68"
f15ef8883b3acb503ab2ef3f554ef697fb58cfac,"DERBY-6903: ALTER TABLE ALTER COLUMN resets CYCLE option
DERBY-6904: Enhance ALTER TABLE to allow CYCLE option to be changed
DERBY-6905: Enhance SYS.SYSCOLUMNS to report the CYCLE value
DERBY-6906: Allow a GENERATED column to explicitly specify NO CYCLE

This patch was contributed by Harshvardhan Gupta (harshvardhan145 at gmail dot com)

The patch adds the CYCLE property as a fundamental property associated
with a column similar to current increment value, current increment step etc.

 *  SYS.SYSCOLUMNS extended to hold the cycle value of identity column.
 *  Extended the grammar to accept ""cycle"",""no cycle"" in alter clause
    and changed the underlying column descriptor and sequencing objects.
 *  ALTER clause not involving cycle option (i.e increment and restart)
    won't affect the cycle option.

The code flow for the upgrade handling was modelled after Derby-534
for introducing a new in column SYSTRIGGERS. There are new behaviors
for SYSCOLUMNS in both soft- and hard-upgrade scenarios.




git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1797283 13f79535-47bb-0310-9956-ffa450edef68"
f7cc71cccfe9f682ce3b91bff51781238983e02d,"DERBY-6935: Test coverage for added features

This patch was contributed by Harshvardhan Gupta (harshvardhan145 at gmail dot com)

The patch adds additional test cases for the new CYCLE-related features
of the identity column support.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1798290 13f79535-47bb-0310-9956-ffa450edef68"
2a81be543ad2af74cf52ab8dae38b1a7f3707945,"DERBY-6935: Test coverage for added features

This patch was contributed by Harshvardhan Gupta (harshvardhan145 at gmail dot com)

The patch adds additional test cases for the new CYCLE-related features
of the identity column support.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1798340 13f79535-47bb-0310-9956-ffa450edef68"
a29763da634c2ae0aa32f1acaf9dce86a611f3b4,"DERBY-6905: Enhance SYS.SYSCOLUMNS to report the CYCLE value for IDENTITY column

This patch updates the dblook test output to reflect the expected value for
the CYCLE column in the output.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1799586 13f79535-47bb-0310-9956-ffa450edef68"
1c21009920a63793c567fa23cc3070aed57f833a,"DERBY-6956: Commit patch derby-6956-01-aa-removeSpuriousCheck.diff, removing a needless restriction on the kind of DECIMAL types which can be column types in a CREATE TABLE AS SELECT statement.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1805249 13f79535-47bb-0310-9956-ffa450edef68"
2a5acb4be69990f3e639fb93c6195e2d48eb212d,"DERBY-6956: CREATE TABLE AS SELECT cannot copy DECIMAL(31,6)

This change adds several test tests to serve as regression tests.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1805356 13f79535-47bb-0310-9956-ffa450edef68"
21e03ad480b9957552c5472d14b5883a17a5e644,"DERBY-6941: Check in improvements based on a dry-run of the release notes generator: derby-6941-aa-dryRunOfReleaseNotes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1805575 13f79535-47bb-0310-9956-ffa450edef68"
2636edd9b498fbf5c19cdbf7d60e8fc965137f1d,"DERBY-6959: Require Standard SET keyword when changing the cycling behavior of an identity column; commit derby-6959-01-ab-requireSETkeyword.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1808071 13f79535-47bb-0310-9956-ffa450edef68"
76deb0268abb010c484d01066f5ecd995dd9fd31,"DERBY-6962: Forbid attempts to change the cycling behavior of identity columns in pre-10.11 databases; commit derby-6962-01-ab-forbidSetCycleOn10_10.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1808600 13f79535-47bb-0310-9956-ffa450edef68"
71bdb5f4d4ed060e21012c750190131baab0f215,"DERBY-6961: Correctly handle ALTER TABLE...SET [NO] CYCLE on exhausted identity columns; commit derby-6961-01-aa-recyclingExhaustedIdentityColumns.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1808668 13f79535-47bb-0310-9956-ffa450edef68"
796b792d8d07ebb922fc20090f12e1341c49a18e,"DERBY-6941: Update STATUS file prior to generating first release candidate; commit derby-6941-03-aa-updateSTATUSfile.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1808795 13f79535-47bb-0310-9956-ffa450edef68"
7159f2462d9309549083a59de0956ad312ed072e,"DERBY-6941: Remove revision spec from svn command in branchRepository target because svn complains that it is no longer wanted; commit derby-6941-04-aa-createBranchWithoutRevisionSpec.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1808800 13f79535-47bb-0310-9956-ffa450edef68"
5210e122304423bf35c5cb5aa90ff1885a7fa741,"DERBY-6941: Bump version number on trunk to 10.15: commit derby-6941-05-aa-bumpTrunkDDto10_15.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1808812 13f79535-47bb-0310-9956-ffa450edef68"
a0d934573363057a32c9e00bb93c88bcd247f79d,"DERBY-6968: Attempt to fix instability in DatabaseMetaDataTest.getBestRowIdentifier(); commit derby-6968-01-aa-assertUnorderedResultSet.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1811510 13f79535-47bb-0310-9956-ffa450edef68"
e834979e0997b377d8057206e3102277c19a8671,"DERBY-6941: Update STATUS file to declare victory on 10.14.1.0.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1812952 13f79535-47bb-0310-9956-ffa450edef68"
e1dddd62f13390c47d37a7af1aa47cb905264e7e,"DERBY-6974: Convert Derby build to JDK 9 and compile at Java 9 byte code level.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1813709 13f79535-47bb-0310-9956-ffa450edef68"
d2099519d901f110447cc87dd488a3b5d140fa4f,"DERBY-6941: Fix javadoc problem which bombs the javadoc jenkins build for 10.14.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1814381 13f79535-47bb-0310-9956-ffa450edef68"
5bb8f051711c2ecbf50d82e514f2f56135a10a5c,"DERBY-5543: Add line numbers to stack traces produced by production artifacts; commit derby-5543-01-ab-insaneWithLineNumbers.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1814447 13f79535-47bb-0310-9956-ffa450edef68"
5cc99059172067c30973d4d664f6cd269718243d,"DERBY-6977: Eliminate collisions on generated names for constraints; commit derby-6977-01-ad-useUUID.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1815172 13f79535-47bb-0310-9956-ffa450edef68"
7f3984246d625b811bf2557d75d26835229f747a,"DERBY-6974: Change byte code level generated by Derby build from Java 8 to Java 9; commit derby-6974-02-ab-minVersion9.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1815316 13f79535-47bb-0310-9956-ffa450edef68"
2c0b91644cd10e0890c6f49c928fc71adc6a6192,"DERBY-6945: Remove dependency of proposed modules on derbyPreBuild; commit derby-6945-01-aa-remove_derbyPreBuild_dep.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1817002 13f79535-47bb-0310-9956-ffa450edef68"
0a4eab5024553bdc178a2abf6d21e668beca90f6,"DERBY-6945: Create new derbyshared.jar file to hold code which was previously coned across several jar files; commit derby-6945-02-ac-newDerbySharedJar.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1818865 13f79535-47bb-0310-9956-ffa450edef68"
ca1da9276769b8e46e4bfd61fdb5c6daad87af4c,"DERBY-6945: Check in new regression test to verify that packages do not straddle jar files; commit derby-6945-03-aa-partitionTest.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1819103 13f79535-47bb-0310-9956-ffa450edef68"
338fa3785d8c859ea3c2752983c4032ad0021a41,"DERBY-6945: Put java.run in its own package so that derbyrun.jar and derbytools.jar do not overlap; commit derby-6945-04-aa-moveRunClass.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1819254 13f79535-47bb-0310-9956-ffa450edef68"
0378299c172a918a3d9de5d41f9f3df17e254acf,"DERBY-6945: Remove redundant copies of Attribute.java and SQLState.java; commit derby-6945-05-aa-removeRedundant_Attribute_SQLState.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1819309 13f79535-47bb-0310-9956-ffa450edef68"
02fcca12d0143b891c88d2f8e9a671789b5335c8,"DERBY-6945: Eliminate more duplicated classes in derbyshared.jar; commit derby-6945-06-aa-removeOtherSharedDuplicates.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1819343 13f79535-47bb-0310-9956-ffa450edef68"
b444f66db4ba41f7bebbe250487b6a1c6bf31a02,"DERBY-6945: Move shared class NaiveTrustManager into derbyshared.jar and out of derbynet.jar and derbyclient.jar; commit derby-6945-07-aa-net_client_overlap.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1819368 13f79535-47bb-0310-9956-ffa450edef68"
676b961fb7f23fca9eb9ee2ddf56dab7d9402824,"DERBY-6945: Move all shared code under trunk/java/shared; commit derby-6945-08-ad-move_shared_iapi_under_shared.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1819522 13f79535-47bb-0310-9956-ffa450edef68"
8b2f38c83eaf079d075b8e7d49e464381db59792,"DERBY-6945: Move InternalDriver out of public api package and into an engine-only api package; commit derby-6945-09-ab-moveInternalDriver.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1820615 13f79535-47bb-0310-9956-ffa450edef68"
96e5ec2d6da49816015dbf96bcbe61bceec962a5,"DERBY-6945: Move Driver42 out of the public api package and into the engine-internal api package; commit derby-6945-10-aa-moveDriver42.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1820717 13f79535-47bb-0310-9956-ffa450edef68"
8672b0f73633dc1d7474e5e7bed6e4c99037173d,"DERBY-6945: Move AutoloadedDriver out of the public api and into the engine-internal api; commit derby-6945-11-ab-moveAutoloadedDriver.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1821111 13f79535-47bb-0310-9956-ffa450edef68"
790f899e347d8c52b3407a97f038abe582b504bd,"DERBY-6945: Move ClientDataSourceInterface and the guts of BasicClientDataSource40 out of the public api package and into the client-internal api package; commit derby-6945-12-ab-moveClientDataSourceInterface.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1821435 13f79535-47bb-0310-9956-ffa450edef68"
b97fbd63e1fe75bc63517c4a1711ed44d142163d,"DERBY-6945: Move the autoloaded client driver out of the public api package and into a package internal to derbyclient.jar; commit derby-6945-13-aa-create-ClientAutoloadedDriver.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1821953 13f79535-47bb-0310-9956-ffa450edef68"
fbf9e797d95a7017b10dbb34b3c8126738091ff8,"DERBY-6945: Move more engine classes out of the public api package and into engine-internal packages; commit derby-6945-14-aa-moveMoreEmbeddedClassesOutOfPublicAPI.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1822464 13f79535-47bb-0310-9956-ffa450edef68"
2bc26b84f798814b76c3d0a0061518d2ca276451,"DERBY-6945: Move unnecessary client classes out of the public api package and into packages internal to the client jar; commit derby-6945-15-aa-moveMoreClientClassesOutOfPublicAPI.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1822475 13f79535-47bb-0310-9956-ffa450edef68"
a2a9aedcd3281ae1c089f5d724fd00bd0c8f39ec,"DERBY-6945: Combine engine and client classes from org.apache.derby.jdbc in a single directory under the tools branch of the source tree; commit derby-6945-16-aa-consolidatePublicAPI.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1822601 13f79535-47bb-0310-9956-ffa450edef68"
6d3942652ecf6025501fc08acb10d3e192a9662c,"DERBY-6945: Re-seal most of the packages which migrated into derbyshared.jar; commit derby-6945-17-aa-resealPackagesIn-derbyshared.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1822843 13f79535-47bb-0310-9956-ffa450edef68"
32439582d1039a00d7d1c578e6304d45688ca100,"DERBY-6981: NullPointerException when re-executing PreparedStatement query.

TableScanResultSet's past2FutureTbl is a hash table containing updated
rows that are thrown into the future direction of the index scan, so
that the scan knows it's seen these rows already and should skip them
subsequently.

When the TableScanResultSet.close() method was called, it was closing the
past2FutureTbl, but not clearing the pointer, which caused the lazy
initialization of the past2FutureTbl to be incorrectly performed the
next time the same TableScanResultSet was opened and scanned, resulting
in the NullPointerException in the underlying BackingStoreHashtable code
in that second scan.

The fix is to clear the old instance and freshly initialize a new instance,
each time the TableScanResultSet is closed and reopened.



git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1823037 13f79535-47bb-0310-9956-ffa450edef68"
8f3b7b2fa2f3e775dc90fb3cfa9f46257ae8df0e,"DERBY-6945: Re-seal the localization package; commit derby-6945-18-aa-resealLocalizationPackage.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1823042 13f79535-47bb-0310-9956-ffa450edef68"
5a6efccce73b05ac7a27512563868192303f564d,"DERBY-6945: Move org.apache.derby.jdbc package into derbytools.jar; tests passed cleanly on derby-6945-19-ad-movePublicAPIintoToolsJar.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1824087 13f79535-47bb-0310-9956-ffa450edef68"
e3f263c96ff67393b413b2de71b6c1c2a8d3ba58,"DERBY-6945: Remove obsolete classlister program; commit derby-6945-20-aa-removeClasslister.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1824192 13f79535-47bb-0310-9956-ffa450edef68"
2781e2038bd802959efecbf796de01deee2e4c04,"DERBY-6945: Simplify the compilation of artifacts so that each jar file is compiled by a single javac command; commit derby-6945-21-ab-simplifyBuildScripts.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1824712 13f79535-47bb-0310-9956-ffa450edef68"
74fdc0b4801ca97c9fa679870d3448250c4758f9,"DERBY-6945: Split generated class directory into separate subdirectories for generated shared, engine, and tools classes; commit derby-6945-22-af-isolateClassesByArtifact.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1826417 13f79535-47bb-0310-9956-ffa450edef68"
4da5b2db5f3a60c1fa8ef616d88a7efe28b0c9de,"Merge revision 1826467 from 10.14 to trunk. Original commit message:

Remove support for COMMAND_TESTCONNECTION connectToDatabase feature.
It was never documented, and was never part of the regression tests.

A new regression test demonstrates that attempting to use this feature
now results in a ""usage"" response from the Network Server.

Also, change the Network Server's default security policy file, as well
as the template security policy file that we distribute with the
release and in the documentation. The new policy files do not use
the <<ALL FILES>> permission; instead they restrict the permission
to certain directories only.

Also, change the implementation of the Network Server's ""sysinfo""
sub-command. Prior to this change, that feature would open each
jar file on the Network Server's class path, and would report on
whatever information it could find about that jar file. Now, the
only jar files that are opened and reported on are the known Derby
jar files; a table of those jar file names is compiled into the
sysinfo command. This causes sysinfo to return less information,
but it also means that it only needs the permission to access the
known Derby jar files on the classpath.


git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1826481 13f79535-47bb-0310-9956-ffa450edef68"
79f860dbce4dd748df58d02518ecb657e42ce59f,"DERBY-6945: Upgrade build script to require ant 1.10.2 or higher; commit derby-6945-23-aa-upgradeToAnt_1.10.2.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1826764 13f79535-47bb-0310-9956-ffa450edef68"
c7aa48bb74d16a6c72d49ffeb91e3658ea1854ff,"DERBY-6990: Deprecate the broken SOAP-based logic for listing fixed bugs on behalf of the release notes generator; commit derby-6990-01-aa-removeSOAPlogic.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1827681 13f79535-47bb-0310-9956-ffa450edef68"
0aa0953f20c84ba89c823efc1f7fdf3046ccac2c,"DERBY-6945: Fix NativeAuthenticationServiceTest; commit derby-6945-24-aa-fixNativeAuthenticationServiceTest.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1828120 13f79535-47bb-0310-9956-ffa450edef68"
5e1e3373298b3bdb98a319d8d9a2b314f0c0020e,"DERBY-6934: Add module descriptors to product jars; commit derby-6945-25-ab-moduleDescriptors.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1828145 13f79535-47bb-0310-9956-ffa450edef68"
1aae304985354f36a414665d3ab2ccf4ed00d680,"DERBY-6945: Move the package-private tests into their own branch of the source directory; commit derby-6945-26-aa-packagePrivateTests.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1828620 13f79535-47bb-0310-9956-ffa450edef68"
e3af361b478ae00c28ba468a8739f078df48dace,"DERBY-6945: Correct module descriptors which the coming test module will depend on; commit derby-6945-27-aa-adjustModulesForTests.diff after clean test results.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1829025 13f79535-47bb-0310-9956-ffa450edef68"
37998fbb58f5f360f2b9f310c7e1509038d97d5b,"DERBY-6945: Add module for derby tests; commit derby-6945-28-aa-testingModuleDescriptor.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1829212 13f79535-47bb-0310-9956-ffa450edef68"
17ed7d4901edac7c48ac9a59cb293f26bebe5625,"DERBY-6945: Disable SimpleApp test until the demo moves out of the root package; commit derby-6945-29-aa-disable-SimpleApp-test.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1829712 13f79535-47bb-0310-9956-ffa450edef68"
a8e109a98394159f3decd0a7b305ea6c7e5c8eea,"DERBY-6945: Move the client and tool messages into separate package spaces so that Derby can be booted using a module path; commit derby-6945-30-ab-move-clientmessages-toolsmessages.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1830459 13f79535-47bb-0310-9956-ffa450edef68"
c9698aa08b020ed34bcc34b15abc6dee2b9c2965,"DERBY-6945: Add a ResourceBundleProvider for the client messages so that they can be found when Derby is run using a modulepath; commit derby-6945-31-aa-clientmessages-ResourceBundleProvider.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1830975 13f79535-47bb-0310-9956-ffa450edef68"
3eb6116e2c6fc4c4c88ae98527181ce24f130e11,"DERBY-6988: Add 10.14.2.0 to versions table

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1830980 13f79535-47bb-0310-9956-ffa450edef68"
3cefcec01e267cb2da7857855cd353b4d7258b08,"DERBY-6988: Update STATUS page for 10.14.2.0

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1830984 13f79535-47bb-0310-9956-ffa450edef68"
d73279acd15134d3d6e4e29fe11e0286abc68ffa,"DERBY-6945: Misc cleanup related to message localization; commit derby-6945-32-aa-messageLookupCleanup.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1831026 13f79535-47bb-0310-9956-ffa450edef68"
bea99bd89946de4e801b22a6f4bb54bb78542ff8,"DERBY-6945: Move localizations into packages which are specific to the jar files containing them; commit derby-6945-33-ab-moveLocalizations.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1831216 13f79535-47bb-0310-9956-ffa450edef68"
48812e3570d40a91455b5eeb9a571c99071dcb40,"DERBY-6945: Add Apache license headers to module descriptors; commit derby-6945-34-aa-licenseHeaders.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1831293 13f79535-47bb-0310-9956-ffa450edef68"
b8e712782b98e40418e5375165dcaeb92e5c75c1,"DERBY-6945: Remove a spurious character from a method signature; commit derby-6945-35-aa-removeSpuriousCharacter.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1831487 13f79535-47bb-0310-9956-ffa450edef68"
22cee18b29481c870643e7ac2abefe364e04e3e7,"DERBY-6945: adjust javadoc api urls for java 9

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1831532 13f79535-47bb-0310-9956-ffa450edef68"
cb69c52325e1d056a36da97e4bb7b7fcac79da7e,"DERBY-6945: Include echoproperties to diagnose Jenkins test failures

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1831637 13f79535-47bb-0310-9956-ffa450edef68"
87e155e6e79805457cb7a2522a4c5129d50b732f,"DERBY-6945: Add module descriptors to locale jars; commit derby-6945-36-aa-moduleDescriptorsForLocaleJars.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1831666 13f79535-47bb-0310-9956-ffa450edef68"
1e4e631a8f11ec6d1dac9869dd947e5cdd951045,"DERBY-6998: Fix compilation warning when building with JDK 10; commit derby-6998-01-ab-tightenReturnType.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1832736 13f79535-47bb-0310-9956-ffa450edef68"
975ff5a9e8ad76aeeb6fe98ca4c06c60570d1d08,"DERBY-6998: Add testing support for JDK 11; commit derby-6998-02-aa-supportForJDK11.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1832750 13f79535-47bb-0310-9956-ffa450edef68"
f16c46cbdd5be8dd9bdcee935ec1f68970146478,"-d

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1833236 13f79535-47bb-0310-9956-ffa450edef68"
bc277cb9f9c04c54fea21812c8330473a9169bb9,"DERBY-6945: Cleanup javadoc warnings; commit derby-6945-38-aa-javadocCleanup.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1833280 13f79535-47bb-0310-9956-ffa450edef68"
6e42472cde249d8fe81a2ecfc75238b3d911424e,"DERBY-6945: Cleanup more javadoc warnings; commit derby-6945-39-aa-javadocCleanup.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1833569 13f79535-47bb-0310-9956-ffa450edef68"
cc457a99b575db678e490cfb1c916100bae31dd7,"DERBY-6945: Change names of root directories in the generated tree so that they match their target modules; commit derby-6945-40-aa-generatedSource-dirNames.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1834384 13f79535-47bb-0310-9956-ffa450edef68"
0e1cdc79b13d6be78cec7a4697b182809b0a76fc,"DERBY-6945: Cleanup some header comments so that module-aware javadoc can be generated from the product codeline; commit derby-6945-41-ac-cleanupProductJavadoc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1834756 13f79535-47bb-0310-9956-ffa450edef68"
7b2d24cf55d83aafe057604de987d9593eb27ca0,"DERBY-6945: Add generated source directory to facilitate the building of module-aware javadoc; tests passed cleanly on derby-6945-42-aa-cleanupTestJavadoc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1834766 13f79535-47bb-0310-9956-ffa450edef68"
c0a56e1824eda0e894a787e17731e8aa0674f7da,"DERBY-6945: Publish a couple more packages in the public API; tests passed cleanly on derby-6945-43-aa-cleanupPublicAPIforJavadoc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1834793 13f79535-47bb-0310-9956-ffa450edef68"
69d9bb2e363fb2244a344dbc69613dcbce847e6a,"DERBY-6945: Generate module-aware javadoc; tests passed cleanly on derby-6945-44-aa-moduleAwareJavadoc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1834841 13f79535-47bb-0310-9956-ffa450edef68"
24ae80f6225d9073bd8cf03a70b81f286f185269,"DERBY-6945: Fix some javadoc warnings and a grammar LOOKAHEAD block; commit derby-6945-45-aa-fixWarnings.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1835064 13f79535-47bb-0310-9956-ffa450edef68"
8aa3bc0f5c9681db0b854482380378f66ec4be9f,"DERBY-6945: Correct the source and generated source root directories used by the jacoco target; commit derby-6945-46-aa-jacocoSourceRoots.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1835199 13f79535-47bb-0310-9956-ffa450edef68"
0b09cc33dfe8c60a63af8d9ddbe496b9ff014a55,"DERBY-7003: Add extra FilePermission to the jacoco test runs; tests passed cleanly on derby-7003-01-ab-extraJacocoPermission.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1835636 13f79535-47bb-0310-9956-ffa450edef68"
9ae3e17b15061da904f3e3d0315afd5edc9446fe,"DERBY-6945: Make engine, client, and tools localization logic work when Derby runs with a module path; commit derby-6945-47-aa-runModulesWithLocalizations.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1837739 13f79535-47bb-0310-9956-ffa450edef68"
04d32e4a344909d849f766aed390be48092493bb,"DERBY-6945: Make it possible to run the server with a module path, using the default security policy; commit derby-6945-48-ac-serverWithSecurityPolicy.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1839223 13f79535-47bb-0310-9956-ffa450edef68"
24083643c35e9c5c78b6b71a50a169564f7c0bae,"DERBY-6945: Make it possible to run some Derby tests using the module path; commit derby-6945-49-aa-runSomeTestsWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1839878 13f79535-47bb-0310-9956-ffa450edef68"
20d98876ef03d5f86e68e91a08124fc6884e8385,"DERBY-6945: Make it possible to run the derbyall suite under the old test harness with a module path; commit derby-6945-50-aa-runOldTestHarnessWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1839969 13f79535-47bb-0310-9956-ffa450edef68"
c60829a816bab0b4ac6c55a6fa90a558f5a58830,"DERBY-6945: Run upgrade tests with a module path; commit derby-6945-51-ab-runUpgradeTestsWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1840470 13f79535-47bb-0310-9956-ffa450edef68"
254dc7f2b66b3df013c43f5d21f2ba48da2a35ce,"DERBY-6945: Run JUnit lang suite cleanly with a module path; commit derby-6945-52-aa-runLangSuiteWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1840562 13f79535-47bb-0310-9956-ffa450edef68"
3eb16a3d76ac7ec03b0fa52edb6659998e86795d,"DERBY-6945: Fix javadoc warning; commit derby-6945-53-aa-fixJavadocWarning.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1840617 13f79535-47bb-0310-9956-ffa450edef68"
db54937b552620344f667eadc6348e362cacf4f9,"DERBY-6945: Fix JDBC driver autoloading when running with a module path; commit derby-6945-54-aa-driverAutoloading.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1840736 13f79535-47bb-0310-9956-ffa450edef68"
c0a46723a32156db194f99f77fcc3b604011be26,"DERBY-6945: Run tool suite with module path; commit derby-6945-55-aa-runToolSuiteWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1840805 13f79535-47bb-0310-9956-ffa450edef68"
1cf233ab3d437fb002b6d4f58e6e6ce0688c0e15,"DERBY-6945: Expose engine mbeans package to reflective access from the unnamed module; commit derby-6945-56-aa-mbeansWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1840844 13f79535-47bb-0310-9956-ffa450edef68"
5f5eba3e785d436ce03e0edfbd3ffa314fa79b5a,"DERBY-6945: Run the junit suite cleanly with a module path; commit derby-6945-57-aa-runJunitSuiteWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1840913 13f79535-47bb-0310-9956-ffa450edef68"
887faf03f013db87d07b9296d5ed2dee177b2727,"DERBY-6945: Disable the compatibility tests when running with the module path; commit derby-6945-58-aa-disableCompatibilityTestsWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1840949 13f79535-47bb-0310-9956-ffa450edef68"
8a7830f3ac7d5feb62674b33363ea49c2a4c1ad2,"DERBY-6945: Run JUnit All suite with a module path; commit derby-6945-59-ab-runAllSuiteWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1841845 13f79535-47bb-0310-9956-ffa450edef68"
dffeb277932fd20c792b34e93aa9b3649b144152,"DERBY-6945: Add a build target for running the old harness tests with a module path; commit derby-6945-60-aa-antTargetToRunOldHarnessTestsWithModules.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1841933 13f79535-47bb-0310-9956-ffa450edef68"
be56126e1c1bff6c8003a4a818d3bfac68657aaf,"DERBY-6945: Add top level ant target for running the JUnit tests with a module path; commit derby-6945-61-aa-antTargetToRunJUnitTestsWithModules.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1842021 13f79535-47bb-0310-9956-ffa450edef68"
aed08f8a7ffb34875a1e86ec89fd4ed19835d1c2,"DERBY-6998: Re-enable encryption tests when running on Java 11; tests passed cleanly on derby-6998-03-aa-reenableEncryptionTestsOnJDK11.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1842064 13f79535-47bb-0310-9956-ffa450edef68"
56e7418b9921c5439457462d1c19a531f002e48d,"DERBY-6998: Increase the lifetime of the certificate used by SSLTTest; commit derby-6998-04-aa-increaseCertificateLifetime.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1842727 13f79535-47bb-0310-9956-ffa450edef68"
a89b3b8f6288c0f301a530ae92d7c5459b74af32,"DERBY-6980: Add module diagrams to the Derby javadoc; commit derby-6980-01-aa-moduleDiagramsInJavadoc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1844197 13f79535-47bb-0310-9956-ffa450edef68"
f68ebf2cbd7d48227b9260dbe167c2dfeb830248,"DERBY-6980: Give the internal javadoc an overview page with a legend which explains the color-coding scheme used by the module diagrams; commit derby-6980-02-aa-addOverviewPageToInternalJavadoc.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1844245 13f79535-47bb-0310-9956-ffa450edef68"
2e76233a14308e568208a562e88c8c9964860bcd,"DERBY-3547: Generate server.policy, derby_tests.policy, and DITA policy templates from descriptors which express policies as deltas from one another; commit derby-3547-01-ab-policyGenerator.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1845742 13f79535-47bb-0310-9956-ffa450edef68"
56e10318bd336e0b74b50eacf4cda8d8410c08e3,"DERBY-3547: Convert the remaining test policy files into descriptors which are expressed as deltas from derby_tests.policy; commit derby-3547-02-aa-remainingTestPolicies.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1845919 13f79535-47bb-0310-9956-ffa450edef68"
d479b80ac19b07249049ad75257eeee1ea26d457,"DERBY-3547: Replace source template.policy with four, more specific template policies; commit derby-3547-03-aa-removeTemplatePolicy.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1846022 13f79535-47bb-0310-9956-ffa450edef68"
1ff489db57aeac4374b99935c56e1cdc08ea0d70,"DERBY-6980: Make the release machinery build the docs with the correct minimum JVM version; commit derby-6980-06-aa-updateMinimumJDK-inDocs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1846856 13f79535-47bb-0310-9956-ffa450edef68"
037739dbf698de03acda311c5dd7d6532df34c0e,"DERBY-7016: Add derbyshared.jar to the CLASSPATH set by the Derby *CP scripts and set the MODULEPATH variable correspondingly; commit derby-7016-01-ab-addSharedModule-setModulepath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1846875 13f79535-47bb-0310-9956-ffa450edef68"
323c80efda5293f7a7aafc3936feeea6c6307db9,"DERBY-7020: Update release machinery to account for the re-location of files by the modularization work done on DERBY-6945; commit derby-7020-01-ab-updateReleaseMachinery.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1847648 13f79535-47bb-0310-9956-ffa450edef68"
850a113226e21d376a6c227f9ff5c972f071fdac,"DERBY-7020: Make the release machinery pick up the current min.version value so that the generated user docs will report the correct minimum JDK version; commit derby-7020-02-aa-fixMinJDKVersionInDocs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1847661 13f79535-47bb-0310-9956-ffa450edef68"
f1464f6fa548f095a970815ec76adfdb848045c4,"DERBY-6973: Replace MD5 checksums with SHA-512 checksums; commit derby-6973-01-aa-useSHA512.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1847768 13f79535-47bb-0310-9956-ffa450edef68"
ae1112b2c104cb80369f81e5c1e11b76473ace83,"DERBY-6980: Add module diagrams for the client and runner modules to the public api; commit derby-6980-15-aa-addClientAndRunnerDiagramsToPublicAPI.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1847769 13f79535-47bb-0310-9956-ffa450edef68"
befd49f3968d6b213779d9c54d919dc6d1c7e36a,"DERBY-7011: Short-circuit the Jenkins tests when running with the modulepath--in order to get more diagnostic information; tests ran cleanly on derby-7011-01-aa-shortCircuitAfterDerbyNetSuite.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1847862 13f79535-47bb-0310-9956-ffa450edef68"
94157c55cf4c3435f51ab9f9b3c374d5e572f856,"DERBY-7011: Add lang suite to short-circuited tests; commit derby-7011-02-aa-shortCircuitAfterLangSuite.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1847903 13f79535-47bb-0310-9956-ffa450edef68"
2190d6e76a4e7f70a20a583a7289a048566b7291,"DERBY-6998: Make it possible to run old harness tests on JDK 10 again; commit derby-6998-05-ab-use-java.specification.version.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1848004 13f79535-47bb-0310-9956-ffa450edef68"
ae6ae9749c9aafd22753fd42d48600b08b2ae1ac,"DERBY-6945: Add a top level target for running a single JUnit test class with the modulepath; commit derby-6945-62-aa-runOneJUnitTestWithModulePath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1848228 13f79535-47bb-0310-9956-ffa450edef68"
3cdcbae8aa70ad04d0f022717db69e4f5b41dc86,"DERBY-6945: Correct the classpath used on Windows by tests which spawn JVMs; commit derby-6945-63-aa-correctWindowsTestClasspath.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1848312 13f79535-47bb-0310-9956-ffa450edef68"
dd14b455fb02eef2ec82aa34581ccc495c25e305,"DERBY-3547: Add extra permission to that the engine can canonicalize file names on windows, as part of the test for system permissions; commit derby-3547-04-aa-canonicalizeFileNamesOnWindows.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1848540 13f79535-47bb-0310-9956-ffa450edef68"
d5ac4929dfbb134ae285f927e8d6c883dcc40df1,"DERBY-3547: Correct previous canonicalization-supporting privilege; commit derby-3547-05-aa-fixCanonicalization.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1848543 13f79535-47bb-0310-9956-ffa450edef68"
0da1510c94d226ba4800f82102feb8a85f510be3,"DERBY-7010: Check in initial version of release notes for 10.15.1; commit derby-7010-01-aa-initialReleaseNotes.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1850006 13f79535-47bb-0310-9956-ffa450edef68"
3e358310cf18df2bb3d80851e221a1cb8550cf03,"DERBY-7010: Improve 10.15.1 release notes; commit derby-7010-02-aa-releaseNotesForExistingUsers.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1850504 13f79535-47bb-0310-9956-ffa450edef68"
6688719b2b32f93d797910703db5c7038f3fbd74,"DERBY-7010: Bump release number on trunk to 10.16.0.0; commit derby-7010-03-aa-bumpTrunkTo10.16.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1850581 13f79535-47bb-0310-9956-ffa450edef68"
43c8930331a4ca711482d5c1ec3dbb01ddce35df,"DERBY-7028: Put module diagrams in different directories, depending on whether the javadoc is being built by JDK 11 or pre JDK 11; commit derby-7028-01-aa-jdkSpecificImageLocations.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1851719 13f79535-47bb-0310-9956-ffa450edef68"
4dd6ea9b3d10ad7a62fc898c8c03cc025fe5d451,"DERBY-7028: Add borders to module diagrams in an html5-compliant way; commit derby-7028-02-aa-html5borders.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1851720 13f79535-47bb-0310-9956-ffa450edef68"
9fe9eeef6ae52dc696033174d999c2811ecab772,"DERBY-7031: Adjust the upgrade test to handle 10.15 (and later) as starting points for the upgrade tests; commit derby-7031-01-aa-adjustFor10.15.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1852567 13f79535-47bb-0310-9956-ffa450edef68"
e561f0a07af731fe1b75be5837fc2dc0439f545d,"DERBY-6973: Change the name of the SHA-512 extension from .sha-512 to .sha512; commit derby-6973-02-aa-renameChecksumFiles.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1854928 13f79535-47bb-0310-9956-ffa450edef68"
5c7cca4a5859b10b0f51eccf7882b313dee092c9,"DERBY-7010: Update the pom used to deploy derby.war to the staging repos; commit derby-7010-12-aa-updateWarPom.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1854986 13f79535-47bb-0310-9956-ffa450edef68"
0ab1a41d75f18a55d1b623cb458385ac151519d1,"DERBY-7010: Add commons module to the list of modules deployed by release publication; commit derby-7010-15-aa-addCommonsModuleToDeploymentPOM.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1855177 13f79535-47bb-0310-9956-ffa450edef68"
fd324184c9478a0c690b7a4063d33d327f298c85,"DERBY-7010: Add 10.15.1.3 as the starting point of an upgrade test trajectory; commit derby-7010-16-aa-add10.15.1.3ToUpgradeTest.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1855233 13f79535-47bb-0310-9956-ffa450edef68"
de6d306a22d80401445641c49d379a65f1f85995,"DERBY-7010: Change links on future download pages from http: to https:; commit derby-7010-18-aa-changeHttpToHttpsOnReleasePage.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1855325 13f79535-47bb-0310-9956-ffa450edef68"
38707bf505fb42ce7d5be9a443d480aeee158e64,"DERBY-7010: Change http: to https: in releaseSummary.xml for security reasons; commit derby-7010-19-aa-changeHttpToHttpsInReleaseSummary.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1855326 13f79535-47bb-0310-9956-ffa450edef68"
fd7fe847e0d020a2c8ce8ee2c545a93030e5a0e8,"DERBY-7010: Update STATUS page; commit derby-7010-21-aa-updateSTATUSpage.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1855360 13f79535-47bb-0310-9956-ffa450edef68"
c14946ce10c7c4d47424f22bcd3832677b251c86,"DERBY-7010: Update the release page link to the KEYS file per new advice from infrastructure; commit derby-7010-22-aa-updateLinkToKEYS.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1855362 13f79535-47bb-0310-9956-ffa450edef68"
bd246fc89d4fce3f82f8344074ecb8a4713418df,"DERBY-7010: Fix the verification link generated when we transform the release notes; commit derby-7010-24-aa-fixVerifyLink.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1855520 13f79535-47bb-0310-9956-ffa450edef68"
5a9ae97502571ed86f1770fdfeb1a4673045e87d,"DERBY-7040: Add hard module dependencies to the maven poms which we publish at the end of a release; commit derby-7040-01-aa-addDependenciesToPOMs.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1856701 13f79535-47bb-0310-9956-ffa450edef68"
c4413121038113efde36e8717f827a5b825bd572,"DERBY-7041: Do not create persistent dependencies between views and the system-supplied statistical aggregates; commit derby-7041-01-aa-omitDependencyOnSystemSuppliedAggregate.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1856730 13f79535-47bb-0310-9956-ffa450edef68"
8406131eedafdd3461e1337eecb791cea44cd4b9,"DERBY-7038: Require ant version 1.10.6 or higher in order to build Derby; commit derby-7038-01-aa-require-Ant-1.10.6.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1859158 13f79535-47bb-0310-9956-ffa450edef68"
577c3bbe9ea213ff96629fb818d25b689c00340e,"DERBY-7038: Revert the javadoc build to use the <javadoc> task rather than the <exec> task; commit derby-7038-02-aa-use-ant-javadoc-task.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1859203 13f79535-47bb-0310-9956-ffa450edef68"
6fdd3618ce674ca410511035935297556705f50e,"DERBY-7046: Add derbytools.jar to the classpath scribbled into the manifest of derbynet.jar; commit derby-7046-01-aa-addToolsJarToServerManifest.diff.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1862062 13f79535-47bb-0310-9956-ffa450edef68"
fa53c9725bf1df69cc46070f1b29e2fd32f23641,"DERBY-7050: Remove dead engine_169_opt target, a legacy of an old solution for small device support; commit patch submitted by Davide Grandi.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1863766 13f79535-47bb-0310-9956-ffa450edef68"
4253dcf4aa37dc64cf7235d494cd2f00f72e678a,"DERBY-7052: Streamline dependencies in the top build script; commit patch submitted by Davide Grandi.

git-svn-id: https://svn.apache.org/repos/asf/db/derby/code/trunk@1865408 13f79535-47bb-0310-9956-ffa450edef68"
