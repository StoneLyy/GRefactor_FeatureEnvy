commit_id,msg
57d1f32de5bf3a7dd54613384cc7e979fba2660b,moved gson as a project under trunk
165fd78726a28d401d6062d94540aca926f681b7,moved lib at the top-level to share eclipse styles.
1e5f1740cd4bc602bfa68558c830e976ff7b5979,fixed some paths.
849612c50f60488095999c8a8240121ebea0c14d,initial creation of the wsf project.
e6629947d0051baaa3d83fdc50e2e66317c9548a,"updated the svn properties to ignore target and eclipse project directories and files.
added javadoc settings."
685710b12451e1830171edd9505179a81f6e2879,added an assembly and javadoc descriptor for maven.
7726e0bbbb3d096a214c5e75f09f2168c5a979b1,removed unused import.
5520d20c416188d175a94b326a01cb1564fca7c0,made guice providers public.
39167e3af92fa5d4c53de85db9fa7566f8ad130a,added settings to deploy source jar.
64fd7baf25ec5ce83e91729987cc705f1c43c5b3,Added toString() methods.
0358db8873f098dfb31f8295c60404f84e54462d,added todos to correctly generate source and javadoc jars.
2753213c2e7ba5a0f5beb574b09b559309ccf86b,Using name to generate Javadoc window titles in Gson. Added a source section in wsf.
82851d68be3381911239f8bf0738c6e33bfc320f,"Moved the setDoInput() on HttpURLConnection before sending any data on the connection.
disabled configuration settings on install in pom.xml that were interfering with the normal behavior of install."
973696cbf5d261d313b17930a5e2e19378c085c5,Tests exposing bug 43 and 44.
7da18b96e819a347eedc7c84b29645b128de3cf6,"fixed issue 46 by adding toString() methods to Gson, serializers, deserializers, and instanceCreators, and default type adapters."
9ad4b2bc7ee14cb2004d25a65cc31e22ce293504,Made request/response classes immutable and using builder patterns to build them.
1cad54f7b15974fb415a7ac5b63621a7460e3862,Fix pretty printing of interlacing arrays and objects.
0b9c739a7b2a2dcbeb264a30a271dcb67b72f773,added additional tests for the default deserialization of dates.
3b8404dac56c365cbf77034ec7d96588d89e9798,refactored String related functional tests out in a separate test class.
427c17a73208cf53c381e4e8099d4ef60c08cc9b,"added a test for checking if GSON can parse JSON that uses single quotes
instead of double quotes for various field values."
1abf693b709f6315baacbbbf23d9f352c5a1083f,"Fix for Issue 55 where GSON was unable to deserialize JSON with single quotes
(') used for field name/values. Gson now supports different fields with-in the
JSON to use either single quote or double quote. However, a single field name
or value must use ' or """" to delimit itself."
d74ecbfe827c1496ced80b3613622a803e824fc2,"Updated JsonParser to use Token to match strings instead of productions. This
enables Gson to handle much larger strings (~10s of MB) than previously
possible (<100kb). This also reduces memory and stack requirements, and
increases Gson performance as well."
d61e754fb66b2c9adeb681bad156efc14667b052,"Added tests for explicit serialization of null array, collection and string
fields with serializeNulls set to true."
cdd516345818eab763da02e1b9d7ec42404e98c4,"fix for bug 56 where Gson wasn't serialization null fields of type string,
collection and arrays properly even when serializeNulls was set."
4d73459b7e2fa806610ff1110baf1da3c650c21d,"moved performance tests under the metrics package and replaced the invalid JSON
string with \n with a valid one."
2b9fd47b720f0743d69dfcc48bc04b471e37d240,"Fixed issue 53 where default date instances were not getting
serialized/deserialized properly. Added support for time style as well by using he default formatter that uses time style."
add960644ac204fffbb112d7d01097dbaba38e8f,disabled tests for issue 43 and 44 since those are deferred for a subsequent release.
f6a278018e663b56d1f6528dfc710adde76569cc,test for Issue 51 for inner classes serialization and deserialization.
5631132892de1bfbbe61e4fbe527367949c8d050,"Fixed Issue 54 to enable serialization of fields that are declared of type
Object."
9726b4e172370349947fc88dbdb8d6efd17bf8c1,"updated Gson version number to 1.2.1

Removed unused productions from Gson grammar. Also removed unused imports."
90a8d6cf76296bc50992ac0db135118b007b39d5,updated javadocs for 1.2.1
646d94d420e04f1eaf3465c5df91900e558d6c5f,test for issue 58
745c8e2a83360f5f71904d1be828fd7041f42222,"Fixed issue 58 by disabling the use of field value actual type for all cases
except when it is marked as Object."
9f5a2086deafa340ac12e78d44c8c23b19483f9d,"updated Gson version to 1.2.2
Added a test to ensure that CustomTypeAdapters are not applied automatically
for SubClasses."
0acb1519416832abbd7f83187c9260e99f6d57be,A test to reproduce Gson concurrency bug. See issue 63.
95861175a8b175215b753e021ff361609a2d5281,deleted unused variable.
9dfa454f6da6e88b51dba7840881feb874dbbdef,Fixed issue 63 where Gson could not operate in a thread-safe manner. Resolved the issue by recreating ObjectNavigatorFactory for each call instead of reusing the same object everywhere. This is needed since ObjectNavigatorFactory had MemoryRefStack that was incorrectly being shared across calls.
3cd665b199ff77bbeb4aa45d1e1816ec37d942c7,"Added support for serialization of raw maps.
Also, refactored tests for maps in MapTest class."
7aa1d0f6aa144d04389eab2faab603c853b23909,"Reusing the JsonNull instance everywhere instead of recreating it.
This is a minor optimization, which is possible because JsonNull is a stateless object."
c98d7bc340423a15ee816141066ec9244d3ea2f2,"Fixed issue 66 to allow escaped slash ( \/) as a valid Json escaped character.
Changed Gson version to 1.2.3."
3f53e8b223c95d673524ff38ea5c5ac7e054092f,Added tests for Issue 68
70c7728218bafe63c6ef6242a84f474a576ae4c0,Wrote a test that invokes a custom deserializer for a wrapper primitive type.
cc90a68241aa3ab849c0886b479da3a6449ba210,"Fixed issue 68 by providing support to override default type adapters for
primitive types. Added a visitFieldUsingCustomHandler method to handle this in
the visitors."
eaa43b76e44d2491dfbabb69e9d20beceffd9822,"Added a custom type adapter for Collection class. We will migrate the code to use it instead of special cases for collections all over. This type adapter is called at a few places already. 

Also added tests for verifying that Gson can handle serialization and deserialization of sub types of Maps. The deserialization test fails currently."
9245bebdba9a3227674f3c0b08d86165891f02cc,"For the Collection and Map types, using ObjectConstructor to create instance instead of hard-coding a specific type. 
This helps is handling cases where the user is using their own subclass of Collection or Map.

Updated ParameterizedTypeHandlerMap to return the handler corresponding to Map and Collection for subclasses if user has not specified a specific handler.

Fixed the logic in JsonTreeNavigator to not output a comma if the first field of an object was null."
bc2c25f235808c7e90d9bde6b2795997405af0cf,"Removed ExceptionWrapper from serializers. 
This is done since it is improper to throw a parse exception from serializers. Moreover, the serializers dont deal with external input, they deal with classes, so they need not guard against spurious input."
0b6bbaf5f182acfddb696096fbf56366f1e8c72a,deleted unused visitCollection method in the visitor. All of this functionality has now been replaced with the default CollectionTypeAdapter
bcd1baefd5ce2ac649cf1cb51deba706c75bfb5a,deleted unused visitCollectionField method in the visitor. All of this functionality has now been replaced with the default CollectionTypeAdapter
40b77dfa6b514b4036dbe746cfed710489359b82,removed unused endVisitingObject method.
6fa09b5ef6177cf899c96c839af936af69650efe,Removed specialized handling of Enum types with the EnumTypeAdapter
e4ea6b1fd052705a8c2088ce36ee84db1961b4af,removed unused code.
9a69560d9f1f8ab89277259c221193acf7cfcffd,"During serialization, we now dont call custom serializers the field is null.
During deserialization, we do not call custom deserializer if the field is to be set to null. Moreover, changed the logic to set fields to null only if explicitly indicated in the incoming Json. This is different from past behavior where all fields not mentioned in incoming Json were set to null. Now they are set to whatever the default constructor will do."
dfad0a3612a1753cb595dd41e6b1de8263536fef,Added tests in response to Issue 70.
ad1c1a731d4a2f4fb11fa057521179a3b24bb757,Added more tests in response to Issue 70.
3ff6bda2addee269ebfaefdba8591bc38390cd0b,Added equals and hashcode to JsonNull to ensure all instances of this class are the same.
7e360b95e7aca387bca775f1fa80d52c707ccefe,Added tests to verify that custom serializer and deserializers for byte[] types works.
0d8150fe52eba34a0472c47be71587885ba4a94c,"Major restructuring of Primitve type serialization and deserializtion.  From the end-user's point of view there should be no difference other than the user can now override the default serialization/deserialization their own custom type adapter (not sure if there is a real use-case out there for this).

This restructuring greatly cleans up the code and reduces some complexity; however, there is more that can be done to clean this up (i.e. get rid of ""InstanceCreators"" for primitive Type Adapters)."
cf2a457af7b0422e7728e0d55a4e794048af5a6b,Removed the TypeAdapter object from GSON now that the primitive objects and fields are created by a custom Type Adapter.
b6f767bf054dbc006ce1f098ca785112effa8519,Fix warning in code
e101ed162307934de7c5ae7e5086147494f7bbee,Adding the JavaDoc for Google Gson version 1.2.3
788d2bfbbbc9cc2e85d27c480a56b68089d30898,Fix parsing of double and big decimals that have an exponent but no fraction part.
628a2c5b866429286e6c82232d4f7edab7f0caee,"Added default serializer/deserializer for ""Number"""
d5319d9e840b2c7237ca435f50c50ffbe7dce507,Parse all JSON numbers as either BigDecimal or BigInteger.  From there we can properly convert into the proper primitive type if need be.  This reduces the chance of losing precision with floating point numbers.
3df2d44e406e4577fde8f08924508b9523ac8fd0,"Adding a ""remove"" method to the JsonObject class.  Created a unit test to ensure it is functioning properly."
2250afe82558df09b4d20f006bcb1840b64f619e,Allow serialization of Object in collections.  This used to be supported before restructuring the Collection type handling.
a209be02eb2b4ac7cfc5bce67f44f2849ab22cf5,Revert previous pom.xml change.  Submitted by mistake.
0c98c2f8d153c818e12e693afce576b19edbf2b8,"More lenient parsing of Numbers and Booleans.  Basically, can deserialize properly formatted stringr representations of numbers and booleans."
1e7f3ebe7a6ec1002fe7a23d42f37827dfa3a9e3,tests to verify correct serialization and deserialization of = char.
2effd579765ad470e2cd9670ad96324d86895ed1,Deserialization will no longer call the default constructor or InstanceCreator if the object being deserialized has a custom deserializer.
7334a33d141db8cbfe26f54f34cb326537fe538a,Test to verify support for object member names without quotes (see Issue 41).
59be02d4de5f854b13b3cce194d2cab8ea1ad8ab,Added support for accepting Object field names without quotes. Issue 41.
9bcbb4cfdc7f178afff5a06fd7dfb268b311796a,Fixed issue 52 by switching Gson.toJson methods to use Appendable instead of java.io.Writer
d6d1daeedd50b05ff3319cd0f154cbef2e235cc8,Submitting @Expose tests with interfaces.
b506183d9459f2474550a150fb0b5eae1a36c2bd,Move isPrimitiveOrString() method from ObjectNavigator to JsonPrimitive.
c9e48097ece2f2e3b16c6bb726218c7967af4e8c,Do not overwrite a duplicate field value during seriailzation if one those fields is null.
a82c400dc82f663d3dcf87a72966302404e2f822,Fix warnings.
b90228dcc096c88b176e53f93b6069f29abccc5a,Enable serialization of nulls within Maps.
5ae7e1f8032ac2118e6b69dce9dd089286413846,Adding new convenience method to JsonObject for adding Booleans and Characters.
6f59bc3bfea8ccdff1bfd0640351241ccf4100ff,"Added ""Until"" type version.  This new annotation allows you to remove members from the JSON output beginning at a certain version number.

This new annotation work in conjunction with the ""@Since"" annotation."
50dd475eb8cdfceb9f12baab178a0ba66cfb40dc,Added more tests involving Since and Until versioning.
b9e81f93c1e32eb5568f306db317ea907813596e,Fixed warnings and updated some JavaDoc.
11a29b63b0af33c340072091db9d036c6311f6a1,Implemented suggested changes from r324 code review.
d16553701b74c2b00c54d556818e7191b046a0ca,"Performing automatic refactoring using the IDE tools which does not take resources into consideration.  This fixes the JavaCC Parser definition.

Goes with r325."
0b5f3dc8255a4811df48817dc9b899d67e8725fa,Added UUID as a default type supported by Gson.
ea79cd6812bc2a81fdbbf9143d7aa0beec65ffd9,"Allow booleans and number to be deserialized into a ""String"" field/object."
8e1c6a2b37fb1f7b1563b2df81fdd0f5d77e3c48,Ensure that BigDecimals fields are properly converted into its string representation.
fc65667d2f518354f13a1f17d1b34e45ba5c012d,"Add support for wildcard type on Maps, Collections and other parameterized types."
de713614afe10a16a98858c01e89659356bc4f5e,incorporated feedback from code review of r295
0993d729e463779fb06281932058c94bb4b41e3b,"Added @since to the JavaDoc for the new methods added to JsonElement.
Suggested in the r296 code review."
cbc6b4d939202b6970f19fbe19e7f4d6624d59e4,Added checks to ensure that we do not serialize NaN or postiive or negative infinity for doubles.
17256b8ce5a4dac6d4b3c87e8a1ba5d27bc64b77,"Added tests for JsonPrimitive object creation with a char type.

Suggestion from r321 code review."
a18a751240fc1058f82eda2581298335e6e77c5f,Share the same JsonNull instance with the Gson code.
09720f28cfc165fd1227d8b7be6ec3468d98b636,Incorporated changes from r307 code review
6dbdb272c0950d1bd17c3e3b5e38b385d1373eb2,Added checks to ensure that we do not serialize NaN or postiive or negative infinity for floats.
40cf34a4cdf8be2cb7393cd83a5ef4e9d50a07ec,reverting the two files that should not have been committed in r337
fce34ea057ca47f8346725533c1af8cdf675d875,updating the version number to 1.3 since we have a lot of API changes in the upcoming release.
f7e4d5e4bbdb10ef3215c66c0df4ca3828f99768,Added checks to ensure that we do not serialize NaN or postiive or negative infinity for BigDecimal.
53f7d26b6d442467d54f0e61fdf030cd395011f7,"removed tests for serialization of BigDecimal NaN, positive and negative infinity since BigDecimal can not be created with these values."
e4fdea0fc12821bce3b885fb09a1e104ad589d6f,Updated Gson escaper to not escape unicode characters. This is in response to Issue 80.
f33a84c223544f888bb1dc9c273862cbd9ac72fa,Added tests for ensuring that control characters are escaped by Gson.
362a94ec74f81a8c9f2a3f42d1a53d9400be2e69,"Added deserialization support for Double NaN, Infinity, and -Infinity"
51881c7f4a60d62e0b71ff0dfef78c18bdb1005f,"Added a GsonBuilder setting to enable serialization of special double types, NaN, Infinity, and -Infinity."
e0195fcc5449238fb5dafedfb6f60217234a5432,"code review changes from r342
Enabled escaping of /"
bc6ec50db979108d83da3927684844f819a5e6e7,incorporated fixes from code review of r341
911a92bff98c8091b008e98e0d5e8938d4f2587a,"Removal of all unnecessary ""Default"" InstanceCreators.  While refactoring the code, I found a bug that these InstanceCreators were being called when inside an ""Array"".  This bug is fixed in this change."
73117fe65256dadd2eb9e882b7212e9e878493b7,Wrapping UUID deserializer in exception wrapper to make it consistent with other deserializers
54a480774df435be94d5bda4115845da361d4986,"Add the ability to configure Gson to exclude serializing and deserializing of all ""Inner Classes""."
859af0025cb63fba5da3a4a6b85f432cc2a41c47,Implement suggestions from self review of r350.
458f2baa2f79bbfe78d3db3dfa1dd7866d7cf7a9,"Added special serialization of ""Long"".  Now the client has the ability to output a long field as a JSON ""String"".  This is useful for JavaScript clients that need to handle long values.

As well, this change does a major clean up of the custom type adapter handling and ParameterizedTypeMap creation."
f923f7f537d019728fc4eda0fa7e9a7af2c920ee,"Add ""@since"" JavaDoc to the new methods in GsonBuilder."
1c87bd599378901db637b02d51d5b6356789645b,Some minor update to our JavaDoc
73d93e332251ccf3619b3b6d2e7b1529e902e78d,"Provide a setting to allow a client to skip the escaping of special HTML characters.

As well, remove the ""/"" from the list of special HTML characters since it is causing some incompatibilities."
9612bb3601f77611c35ed7b504f0064b98259d3f,Removing test file that I didn't mean to add in r355.
05f54f35520bb0718dcaa12333520f4c2aaf3cc7,Incorporated code review comments from r350
e839336eea7aa7e414108a6d33703349adc7a705,Incorporated comments from the code review r355
3690d362b9e3007e390d38092ce339e8a1145781,incorporated feedback from r358
6fe2fdf7a09dd03a188218b83c20916d797ba3a3,test to reproduce issue 87
cc334475b0ab3fdcff3061f58474775bd09cbe4f,Fixed issue 87 by adding support for deserialization of java.util.Properties
970446e997904d036060bba31c39061fe5e1ea65,replaced system.out.println with a real assertion in the test.
02decace2685790a1a826756bfe7951e56b3ef81,"Added the ability to deserialize a Map ""key"" object from a String into a complex Java type."
90a461903438c1810588c94863cc5b50e3c75877,Minor fixes for pretty printing.
e2cfc0cc19fb917ad5d9923706fe33846628ca36,Update GsonBuilder API to accept an enum for the serialize Long as string.  This will be useful if/when we implement support to serialize a long type as an array of integers.
66207866426bed5185760d4a5ae5bfda2f8495ba,Added Copyright statement.
0b1ee357841633fb0658064537b873f60a0f0bce,Code review suggestions for r361
9c05adf0fdd447717943b844364c3fc56e6908f0,Committing JavaDoc changes for the 1.3 Beta release.
e8619405be5c2015f9a5c355ad9da544db9a8f9e,Updating LICENSE file dates.
f4f92a699df149a22376b68e756838e76aa9a0a5,Added test for pretty printing of Maps.
47b67390fa5816e1a8d158c379c0e9470efd8442,Set the DEBUG bit back to false.
d34fb916cb9336814bc31b820b56d52710aa737e,Added tests for enum serialization and derserialization.
2cec661ff0ae9cc88a1908e71247de86d22f4145,Removing some unnecessary code.
6a80791f13e5003c09a342d7a3c443c031d7d408,Code cleanup and some minor performance fixes.
764e4d9aca8139540f3b37ec3977c07e3e705127,Performance fixes after doing some profiling.
f4c21abda6ab01b0cacbebedc6d83ca4b5f07bda,updated javadoc in response to issue 97
2c7cc620d4975521dc5d1c54ea1c0b2247b4fdad,Exposed API for JsonParser and added methods to Gson to deserialize from a parse tree.
228fbb9b8b4491a9573f15f78d1260d900b9e6ae,reverting this file since we do not want to generate parser everytime maven is run.
81b5ea2da40cc0ec95d43b47ddf7aa986bcdcce0,updated javadocs to 1.3beta2
9173a4dc632a115d2123b9ac25085cc7a76cfaf8,missed these files
d4a53ee2fc0f580410ff614d1d57959b1a4cbfc5,Added tests to verify JsonParser and related methods in Gson.
da8a1feee8b2446abfeb2286f0467ef262f938eb,Added tests for the bugreport http://code.google.com/p/google-gson/issues/detail?id=99
2c25fdd85022c52d5828a8e7f8a38e7e1d4a2de5,"Added a test to measure performance of Gson on large collections. Gson's parser handled a collection of 1.4 million objects for serialization. For deserialization, the numbers were lower and Gson parser gave a stack overflow beyond a collection of 87,000 objects."
18005bbae1922f725aabe1ce15624104bfc2d146,using consistent method name prefixes.
16be7167ec8470cc6ba24e188b6fd6d70afe109d,"Updated Gson grammar to support floating point numbers without a +/- after the E. So, 1.234567899E8 is now accepted by Gson as a valid floating point number. This fixed the bug http://code.google.com/p/google-gson/issues/detail?id=94

Also, updated Gson to use Javacc 4.2."
809e3b5e2103a6eb1dacefa32d7917c2dcc3592a,Fixed bug 106 by adding custom serialization support for Gregorian Calendar.
8f456831d4d3bfa00f0fc72191480cdc2fb828dd,Fixed Issue 104 by making FieldNamingStrategy to be public and allowing FieldNamingStrategy to be set in GsonBuilder
3d1f7251c1285148481a2cde6d2a8e9bbcaae158,"Added tests to reproduce issue 103. The tests pass at the moment, so we need more information in the bugreport."
a595032a902c0758610a1cb38379b5e91a01adbd,Fixed issue 100 by adding support for deserialization of collections of elements that do not implement Comparable.
4fc6400f5c31c0731f950fd617c4a55f57303c56,Fixed the test that broke while fixing issue 100 in r394 by using a TreeSet for SortedSets and HashSet for other kind of sets.
1c5785be57240dcf7d885095ec2ba93bc80edc6e,Tests to reproduce issue 95. The tests currently pass so the bug will be marked as invalid.
b2b2e5dc0a595a597ed64968f48c877f4f526277,"Implemented enhancement request from issue 42 by supporting a new GsonBuilder setting generateNonExecutableJson() that prefixes the generated JSON with some special text that makes the output non-executable javascript. Gson now recognizes this special text in the input while parsing the JSON in fromJson and filters it out, if present."
7e90d3a7b231d8d76f8175c09375cb3ccea5f8f1,Updated version to 1.3b3 and revised javadocs. Released this version publicly.
68f3899c1aedc5ee1c97f0c54e0d951df5d4a9a0,Updated the security token to make generated Json non-executable. Removed the unneeded <data> element at the end.
727dbcdd88c158b27c16ea1ae265456987d7a8a8,Fixed javadoc for toString() since we do not output valid Json for strings at the moment.
c9cb05fc720a8b041a7fbcf1068beb85a134674a,Do not leak out a ClassCastException to our clients.
4f727df749b9ad97dfd0dd108a67539b7f163ee2,Throwing JsonParseException when the user expected class doesn't match the JSON input during deserialization.
e340801d258e18f733620b0fd03d65fffb8df6c3,Moved enum-related tests under EnumTest class.
8965d31ce9f6eca0f195fd0d74721afba293cce9,made DEBUG final per the naming conventions.
2034090b15cfef51d81e860b1d49340147378618,"Changed version to 1.3 
Made JsonParser.parse a non-static method."
85f7c939f69fa131d06872c94fbe2ff82fd62df5,Renamed JsonParserImpl to JsonParserJavacc for clarity.
c8cb35e025d656ec8ee3946274c5094fc3ecdc83,Adding copyright statement to JsonParserTest.
149604f0be6c05a822e8b02c1c1f00d87ba515da,Made author tags consistent across the public api.
e9600e10cbf677dfc8547288bf96bbe7d1de3d7c,Made GregorianCalendarTypeAdapter consistent with the other default type adapters.
cee6c74960a5176d921eb16458cd053f39833639,"incorporated code review comments from r379 by removing the catching of OutOfMemoryError and StackOverflowError in Gson.fromJson. This is obviated since JsonParser.parse catches these errors, and that was the primary source of these problems."
5c6d5a0d119481e7ca61b0884c881c6811d7af86,Remove unneeded exception handling in Gson class.
84f0ddd6bb629f99f6a0683aabad3856a78ea7e6,Throwing a helpful error in cases where the user forgot to use the TypeToken idiom.
f9b1225581b4e2730321cc01a17f28f4f4976451,Commiting JavaDoc for the 1.3 Release.
f418ab69a271ff60429e32f75389b2c62fe2674a,Implementing hashcode and equals for JsonPrimitives as value type equality.
b44bbbf5e70d2589e3293be1c91c63dba6b5bbfb,Added an API method to create a tree of JsonElement from an object.
6b39f52f53fcf39763b7586fff08c38c0f40fcfb,"Added OSGi Bundle manifest headers to enable use of Gson in OSGi environments.
Fixes issue 120"
01278910810adfd32ecb18e27f1273aa1aab1b5e,Added a new API method in JsonParser to allow reading of multiple JSON objects on a stream asynchronously.
f2fd0b7d52a01041db0329fc80fd0aa7630c98e8,Fixed the typo in OSGi Bundle manifest and updated the version number to 1.4 to match the revised Gson version.
6e59e502c2461c11d0e6099f10f65c666acabc45,Refactored the Async parser interface out of JsonParser into a new class JsonParserAsync. Updated the JsonParser to detect Eof and return a null instead of throwing a ParseException.
abf4ab2d78b2a7f3108fd7560145f45886f6b301,Fix project so it still compiles with JDK 1.5.
cd9bd710927b7c2a2f01b75430a42e58b18fb456,Allow JS Keywords as field name.  These names are quoted anyways (and are valid according to the JSON spec) so it should not cause any issues.
376385ac0ecf0c17fe52d70627d9af93549e9bd7,Add a single quote to the HTML set of characters that should be escaped.
6d50bcea8711642c90caa6db6b1f13ccd38290c1,Added serialize and deserialize parameters to the Expose annotation that control whether a field gets exposed during serialization or deserialization.
4f0728f6a09063ab9f2121dd6077634a316c9401,Fixed issue 126 by ensuring that parameterized type deduction is not done for transient fields.
eac1beacc97818cbbda3ec4e6d0bf6c392e59509,Added performance tests for byte array serialization and deserialization.
d8095c72fd5149444be413ba1f1c6529a148bc89,minor improvements to the test
64172d1dac3563a4019f3f8d9558aa2448d3cf0d,Added support to serialize and deserialize array of java.lang.Object when the content is a primitive type.
03a3cc83c3d358bf7f1a8e6dca2da512389620b6,Attempt to reproduce issue 140
b7cbfc5c347869a271270ab98b8238428813517f,Fixed Issue 141 by adding new APIs for writing out JSON string representation for JsonElements.
41a1f8b89e9ffb2494d53cbe955a6d49b1859111,Added tests in response to http://groups.google.com/group/google-gson/browse_thread/thread/41478d30b9f100b5
f4f596ec3daee1cb1890d4655c7f7ca15b557df3,Made JsonParser implement Iterator
c13fc568c7cd11dbd53fb78e88479ef818c95cb3,Fixed indentation and simplified equals method as per code review comments on r419
cbcf7defa344ad1dee63baa0767613a5f9848e86,"Updated Grammar for matching JsonArray to be left-associative rather than right-associative. Gson can now parse arrays of size over 11MB instead of 80KB which was the prior limit. Thanks for the tip, kenotron."
c4c8a1c1a683cbf79591bcc05a78bb2ab2fb7900,Updated version information in header
66649a1a628bf84c6b2dcaa9312cbdb911c0b042,Moved ancestor tracking into the serialization visitor. Deserialization process doesn't need ancestor tracking since JSON does not allow self-referential structures.
82771f006cad2047df9b30cdc35338599c31da45,removed Java 1.5 warnings
18b301dfeb91ca4468e0955d4cafcb32186efe1e,"- Serializing of Object arrays.
- Fixed incorrect warning"
c5812bb485ff2ca86d67090b01b157f52c90e1fe,Fixed Incorrect JavaDoc
29ab864b2fda09ddee46554751f22f875c0ab736,Fixed bug 158
3b0f8f4340c68d8fde0840befbc1b89afa14933f,Removed all the JDK warnings about unused fields in test classes or unused constructors for use by Gson or instanceof calls on parameterized types.
50eb582657b5a07aa4aec22f11c9f3071eb631a8,Ensure that the JsonElement.toString() will always generate valid JSON (even when  control characters/whitespace characters are used).
fdcd3945c53c4a1c921ea8097cbecbbf154fa9e8,"Fixed issue 147.
Integral values (byte, short, integer, long, BigInteger) are now comparable to each other.
Floating point values (float, double, BigDecimal) are now comparable to each other."
b0f50bb4bed8ab52a4dc674d042e7c1518eb885f,"Return a ""JsonNull"" object for empty whitespace input into the JsonParser."
c6f762f36be0496874d05c733593ac030409eb4e,Fix Warnings
0e17041c8b0977d34d859e8007addd759d2cf73d,Added another test to JsonParserTest.
82974376103243addbedd1eb034ca46e2db47046,Reverting r499.
19ae6c0763cffe5d4a9a020902ae7d9ecbb2d6ea,Fixed issue 162 by making default date adapter thread-safe by synchronizing serialize() and deserialize() methods.
3e7ebf85568e7c9ef5b1373907c89a215e27e2b9,"Fixed issue 156. 
Added support for serializing an object field (or array elements) as per its actual type.
Refactored inheritance related tests into its own test class. Added regression tests for issue 156."
e9a2a1d0f7e4f326207413cdc37eb5b9d4f15246,Fixed Issue 153 by using a stack to keep track of first elements at any level.
553a619ebd080b37dc237fcb128a2f74869d16ba,Allow dashes as part of the field name.
ad4ff6996b09e0e1aeda18c3d9edef61c7ec4829,Adding new default field naming policy
563cd1e8e3c3ca2c33ccf1d1481f25991b53dcdc,"Adding the ""since"" tag."
e73ad007a419d5a3061ea9a06d456597d5a7bd40,Added test that serialize interfaces.
e5ed1cc59a462f6072d5e049d5e8fe488bff0d89,Added some more tests.
933a3e515021e9d3dea4a18326479a42df353494,"Allow serialization of nulls in a ""List<Object>"" type."
907082102dad9f93d20ccf4a53ea626d5dc559eb,"Added code to ensure that circular reference situations with custom handlers are detected.
Split CircularReferenceTest out of ObjectTest."
fbefa59b66152ed9db730a528ed2bb5834de5c86,changed synchronization on Date type adapter to be for the format object per code review comments on r452
77c2c29316dd1d8fc7ea608dd6f67585bb6b006c,Implementing code review feedback from r454: using isFirst instead of the Stack to keep track of whether to add commas or not.
8567fe6c101f2472662b9362b880a55fc3dcca15,Implementing code review comment from r428: Using Polymorphism for exclusion strategies for expose annotations.
3b1056c097cd615c531c1ffd5ccb772d65d2e814,"Renamed JsonParserAsync to JsonStreamParser as that is a more appropriate name.
Added a TODO in JsonSerializationVisitor per code review of r453."
c64b79c0f9e81ebeeec18fa27e2be7468916f078,Implemented suggestions from the code review of r436: throwing NoSuchElementException in case the stream hits EOF.
1dcdd3fb3f139d9fad3df072104af3110cb31733,Implemented suggestions from code review r432 by adding a JsonNull for primitives if the value is null.
40ca8b05377785f2b451d8302f381f483229d43b,Added copyright header per code review suggestion from r424
0c2106f2ffbfa8d7147cd21c27246744344deb3f,Adding test for new field naming policies from r456 code review.
912db55ba670e8ed0187aac131e102387ec0556d,Added test for hasNext on JsonStreamParser.
25ea878f660faccaf66f2816d290adfec63c522d,"Add some synchronization to the JsonStreamParser to ensure that the ""next"" method behaves according to the API."
b28864eaa0a4ff4e8dde34de7238eddc9419c972,Remove unused import.
fbf834c3f67a93f9dc41631f7e3c6a0d68056445,Implemented suggests from r469 code review.
2716d96516303964f8beeb3d3a05477235fb36bc,Revised ancestor stack to use both object and type
ff742248158fe6a13f6d13aa027c2d5b79fbe807,Revised equals and hashcode of ObjectTypePair to ensure reference equality of object instead of value equality. Improved JavaDocs for various 1.4 API methods.
1da3ef98916a360f6af703da0ac0a26b3a459ddb,"Ensured that a custom handler is not visited during deserialization. 
Ensured that JsonTreeNavigator can handle null values as children of JsonObject. This is now possible since Gson exposes toJson(JsonElement) method to which the user can pass a JsonElement with null values."
ae85e6cce69c568ec5af39d1e95ee0f7e823212c,A test to ensure that null values override default values when nulls are present in input Json during deserialization.
d416361ac58046af0bbba29ed1a6158f640ebc9e,Added a test to ensure Gson can use JSON fields to store type information.
536a968b32eede34554121f75c72b2a658fc442e,"Disabled escaping of single quote since it is valid for JSON (though invalid for JavaScript).
Added null checks in contexts since the custom type adapter can pass nulls."
c892738fbb6f6e433921ca82234ea2c77b189f68,Re-enabling the ' (apostrophe) escaping with valid JSON escaping.
839b0c2f94746b89c08212b9d199a174ae2c407b,Refactored exclusion strategies so that they can easily be exposed as part of the public API.
b634804533ab68697b6f5414e8c93c3613850bf2,"Ensured that a base class custom serializer is run when the type is specified explicitly during serialization. For all other situations, ensured that the actual type of the object is taken into consideration while serializing. First a custom handler corresponding to the actual type is looked up, then a custom handler for the specified type. 
Created some serialization specific tests regarding custom serializers. Revised some tests to use toJsonTree for better asserts instead of string matching."
e9c156b01661b53e3a33f63fb45c0beda5bfa731,Added inheritance tests using toJson() method as well.
dc5922e703bf6aa0774150bc5e1286148e2a03d0,"Addresses comments in r481 (except for the interface change....leaving FieldAttributes as a class).

Change the exclusion order in ObjectNavigator to exclude a top-level class (if exclusion strategy suggests class should be skipped) even if it is marked with a custom (de)serializer."
10c39317a108dd1721924f871f7c62721dcadc82,Makes ExclusionStrategy public.
93b0008486b3186f5a0113062dd566076a1df60a,"Adding restrictions on the JsonElements to disallow Java ""null""s."
2bddd575b3d0c018f5243354c7b399bd51be203c,Code review changes from r476
6d60a7db1d546ed0eb625212d4a80dab149470e6,Fixed comments from r486.
e37add7836afe3768f1e517eed3ffbf440bff6bb,Implemented some code review comments from r482
282ef30280edd24547d586fc0c104e2b3506f63a,Updating JavaDoc tag to @code instead of @link.
81e6ae25f1f2eca8776184f4439cca27783b23c1,Make FieldAttributes public so it can be used by public clients.
6387c9028e3bcd8a2e44a697af592998d232cca2,Updated JavaDoc formatting
60ef777efcf683f28b33497995d6746bfe13bf45,Fixed custom serilization invocation to correctly handle nulls returned by custom serializer.
de6af4411ba1179bcbaec48fdbbbcfadf7f8d04d,Minor fixes.
fffb204cee7be22764813c99ebbebe465d1bc8eb,Removed import for java.util.Map.Entry.
338758a0d3b30d47a31571e2315c3f2b34e9e894,implemented support for deserialization to deserialize to more specific type if an instance creator returns a sub-class.
bc1e5c5c991fe6d06a5a0f6b775684ac91d289d3,"Ensured that custom deserializer is invoked with actual type returned for field values.
Fixed a bug where a top-level object was constructed with default values even when the custom deserializer tried to set it to null."
d87d3f807fba95106ef0baf6432c83640dcd1f3d,"Added functional tests for user defined exclusion strategy.
Added test to ensure empty/null properties are added for the JsonObject."
102f8b3a71fa33cdac09d0e6ecdf8881702c10a7,Adding a few more assert to the InstanceCreatorTest to ensure that the default values are set for sub class fields.
be2631e8350587d3a9a7a468818450bb561404f2,Updating JavaDocs
015d2016c5978991f1dfca79716e4b74550b15b5,Last JavaDoc Update missed adding the new files.
fff91479886fd8e6a7518218ae065c1509d440d1,"Added some tests to measure serialization and deserialization performance of Gson based on the discussion in http://groups.google.com/group/google-gson/browse_thread/thread/7a50b17a390dfaeb
Surprising just marking a field as exposed halves the performance."
610580b8d959a6fead380e681b9337534c7403db,exposed final fields of Pair for fast access. Pair is used quite a bit during serialization because of its use in ref stack.
641390b1a138d6523da92aa8bc01f37f314b513d,Lazily initialize fields in FieldAttributes to prevent multiple Java reflection invocations.
33e816dcf01c5d149cfa633f1fa13ad5b9e7f71b,More lazy initialization done for FieldAttributes.
c329d020b95035c78bed8f1be39d31b188daf359,Make some fields final and initialize immediately.
ebf24fbda51cd8391791fb89499a6d732a36d835,Fixed issue 134 by adding support for java.sql Date and Timestamp classses.
15fa10943c6e9db6d5db147efdec9640e86838a9,"Fixed serializers and deserializers for java.sql Date and Time to ensure that Date does't serialize time, and time does't serialize the date portion."
45bf2db854b01e17efda9fabf048a409917340a1,"Created new projects:
1. wsdef: contains classes that are used to define a Gson based JSON web service
2. wsclient: contains classes that are used to write a Gson based web-service client

wsf is now only a server-side framework. Moved classes relevant for wsdef and wsclient from it to the individual projects."
c5e3c32215ec66d894571bb3199145d5e4a2efe3,Added missing class
058f7344db3187014e20de5d560c30e795839df6,Revised the setup for date/time tests to use PST time-zone. This fixes bug 184 by ensuring that tests are run in PST time-zone.
70797998909a6561a32e16e29c54321fd05d176b,Fixed issue 167 by adding support for TreeSet deserialization. Added tests for serialization/deserialization of treesets.
e3af076ff271968a1a639c5bbdc1ba967b11ea94,"Deprecate the FieldNamingStrategy interface and replace it with FieldNamingStrategy2.  This is the first step to help make it easy to cache field annotations across all instances of a class, etc."
e6496fddd6b0cee8bb8ac254e486467811a55be5,Update JavaDoc to link to the correct interface (FieldNamingStrategy2).
9816426bbaec23d404e2ac3094a8f8f079c6e250,"Add new Cache interface and LRU Cache implementation to cache field annotations per ""Class"" (rather than per instance).  This results in a significant speed-up (approx. 3X) when serializing/deserializing the same classes over and over again."
bf2a0e4e0be34a6b308ef422c6381faed03769cd,Adding tests to ensure the adapter from the old to new naming strategy is working properly.
2bcc832adeff81c48991274f4c7fe4f9b4cc1599,removed dependence on Google Guice and Google Collections libraries
51efca8457f7d049f162addeeda97dc30df98d87,"Removed dependence on Guice and Collections from wsclient.
Renamed Builder.create() methods to Builder.build()"
e5c89f1ebc40ac715693a5cc5aadb6df4383597d,"Added a precondition check to ensure that a parameter being added to a ParamMap is compatible with its spec.
Added comments in RequestBody and ResponseBody to indicate that their Gson type adapters must be used."
0a134db2f0ea5e7577a5a455e299e85fef1b05fe,"Added a new interface ResponseBuilder that is implemented by handlers to build a response of a specific type.
ResponseSender now sets the content-type of the stream to application/json"
e4e925403413601f092f1c8830d722e17f41d178,"Added an asynchronous client for invoking Web-services. This client uses a queue to hold web-service requests and returns the control back to the caller. A separate thread executes these web-service requests and invokes a caller-suplied callback with the results.
Made WebServiceClient reusable across different type of Web-service calls.
Added configurable logging support in RequestSender, ResponseReceiver and WebServiceClients. Added some logging.
Throwing WebServiceSystemException instead of RuntimException."
dbca5571e0e97293664a89346b38758e85bdfd27,"Added Content-Length to each request that goes out.
If a web-service request fails, we try to log as much response as possible."
a7e3971fddc7512fb1bd00aa2ea4388664656b2b,"Added setting of content-length in requests even if the body is non existent.
Fixed logs for requests.
Ensured that streams are not inadvertently closed while copying output."
ef304988339e8005c966f1bb2c6f4a2044c202f0,removed Google collections and guice as dependencies
f300cf35a2d3e92255d6bc6a209f8278ba19c9b8,removed Google collections and guice as dependencies
9c8e8bd77e391dbf7d1cc81ab2d4c6b8d09da0ac,added ability to specify a Gson instance for use in getting a response.
1925fb966cb54913709ff4c88dfdb0a849d2d9bd,Introduced the notion of TypedKey for a parameter map or spec
ad0e0d6f54058335714256f5b8b9433c6c10a8cc,"Added  means to define and implement REST web-service and its clients. 
Added missing copyright headers.
Added TypedKey based methods in request/response classes."
d8638badf3dc707c7d623103feb64660dc5142bb,updated Google collections to the latest version
7a115785b73a17b8b07c4fcbb91d6b26a5083ba5,Added a getHeader method with a TypedKey in RestRequest.
d46fea80dbf2d654bc810334e6ac26a5a917cba4,added type cast to fix JDK version mismatch issue
00b5d77fa6299907223912bffe265f1740933094,Revised methods using TypedKey to use the class contained in the TypedKey instead of explicitly asking for it as a method parameter.
e7e2e59f73430436ea929ea8ba7025db055b46ae,added missing put methods with TypedKey
2610a2920dcff87cb58b67902fd21bfaaf659e64,Update Parser to add members to an JsonObject within a loop rather than a recursive call.
9c7bfc677a96cfc60713f40e339fd991d7697014,Allow cache size to be configured.
389f918bb83c34f6590351cf7b4a748ae358c890,Add new performance test for large objects (many fields).
ba0154867d8469991fdba21467743b7cfdfee70f,Add support to allow spaces in the JSON field name.
855a79a0f01adf53ca36614df2e3e78c535efb5f,Stop generating the Parser class on mvn:compile or mvn:package.
9cd72ca7fb9fb76fde0269963bee348e75da9812,Add new tests with SerializedName annotation that contains a space in the name.
6728c742d2e41d63cffbefbb8fede77b89d25960,Updated log statements to be localizable.
8aedbc84dbf580531ec43a33729526b3ed038306,"Added a new GsonBuilder option to register a type adapter for a type hierarchy instead of a single type.
Upgraded Gson version to 1.5 since a new API call is being added."
b2af57d288514dba466241d75f33e7c55dd44cdc,"Added checks to ensure that typeHierarchyAdapter being registered doesn't hide a previously existing one.
Fixed a bug where registerIfAbsent was adding type adapters in the reverse order of priority.
Added toString() to Pair."
de74482fe8dffcf6eed62438244cb08ddbc3f442,"Implemented hashCode and equals for TypedKey to make it a value object.
Asserted preconditions on constructor input."
16c2832588481eb935dba5163ce277a1480c5f2b,Made web-service client non-final to enable its mocks.
58704f9aad53025ff8aa6b865bba851cc1bc4cc1,removed the builder method that took String parameter name for better enforcement of type safety.
8bcbab629a20524369a55e7574a96dedeff16285,Added an illustrative comment in the ParamMap precondition check. Added methods to take a formatted message in Preconditions.
ceb2f8fdb0551e2789381bdfdefb0fea020f9785,A Web-service example
8d24fe61f21edee737836ffee05f669e890d9c16,fixed the maven configuration file for relative paths
341c4ce5d1cf4803fabed4499ae27f546a594562,"Added an example client to invoke example web-service
Update license files"
c3f61ee5ade19eb7f2b1370b356df5ae2405406e,"Added a test to reproduce bug described in http://groups.google.com/group/google-gson/browse_thread/thread/9591c539e3c19d59
Seems like an invalid bug report as Gson can deserialize primitive values in Integer fields."
425a59043d2bbae074335436e830e3b59dfe9278,Added an example of a servlet class that uses Gson for web-service implementation.
8122deb3648e54030992f09f6b6fd9ba7e3fc585,"fixed copyright notice, minor cosmetic changes."
08d3827daee728f6082785d3177bdf868ca9cf1c,Added methods with TypedKeys
01ce73441ef771e9431f00f1ab27f1800fca6915,Updated Gson version to 1.5 in maven configuration to match the current version.
89c18452aee5242646ae7d5562fb73b4795f6c58,"Ensure date with pattern is not override with the ""default"" date type adapter when a custom JsonSerializer/JsonDeserializer is registered."
dc60cb193123b2564bac0c2de9a998e4649fea30,"Made FieldNamingStrategy2 is package protected class.
Made type hierarchy adapter registration package protected.
Marked some of the classes final.
Minor changes in the performance tests."
24fd66f64574f581cadfb946622af3923fc632b7,removed @since for non-public classes
cb6de44b565a6a274e30fae71a5730d7be148973,Javadocs for Gson 1.5
8b5cc3256d53b827ee594ccd63325f474a33927c,"Test demonstrating a bug reported in issue 178, wherein malformed JSON is emitted when a map key contains a double-quote."
bc5b83610322e771c6d5652aa8c85dc4a5789dac,"Test demonstrating a bug reported in issue 182, wherein malformed JSON is emitted when an property name contains a double-quote."
ed838ec104463fd496077df2186acc7ee762ba35,replaced unchecked suppressed warnings token with more specific rawtypes
de0f8da151abae70dada849f4d941ba3333fd063,"replaced unchecked suppressed warnings token with more specific rawtypes.
removed unused imports."
3fc4bcc06132e53758608a8a59e1ddd7b5002206,Minor test fixes.  Explicitly fail test if the expected exception was not thrown.
5bffa1f6790b2a5e8bc0996240c1b12317793324,Fix for Issue 178.
765a9f1ecdfaf96f3587f488385111c9d6a4927e,"Brand new classes for streaming JSON efficiently.

Notable features:
 - Efficiency. The parser is faster than the current javacc parser. It's also faster than popular libraries for JSON streaming.
 - Toggle lenient/strict
 - Toggle pretty/compact
 - Friendly error messages on bad JSON
 - GSON-quality Javadoc
 - Non-execute prefix handling

This doesn't wire JsonReader up into Gson just yet. That's coming soon..."
7a7bbf754cfabbcb56d090b982bf4b128e15938d,"Use JsonReader internally rather than JsonParserJavacc.

For raw parsing (ie. new JsonParser().parse()) the parse time has improved substantially. For example, JsonParserJavacc parsed my 48KiB buzz feed in 4.8ms. JsonReader parses the same feed in 0.9ms.

http://microbenchmarks.appspot.com/run/limpbizkit@gmail.com/com.google.gson.GsonBenchmark/430001"
eb7b1e4ac7bc27d1a9587bc406b7d424ddc4e9c6,Test attempting (and failing) to reproduce issue 215.
d5741b321f6a1c543fb330a8bc11a9fc882748d7,"Don't exclude enum constants, even if they are anonymous.
See issue 226."
69ecb9465affeedf737fbe7bb5d4146a3e9813ab,Test case demonstrating that issue 212 is fixed. We got comment parsing support for free when we switched to JsonReader.
7e1e4eab07b685cc77db643388b9d73eb0b0e1bb,"Remove the constraint that map keys mustn't be the empty string.

See bug 227."
ff7aa3f3314e9e9ac50f3b8b259126ad379aead6,"Escape only the required characters when emitting JSON. This means that instead of emitting 

  [""foo\nbar"", ""baz""]

we'll emit this:

  [""foo
bar"", baz""]

This simple change measured about ~35% faster for in-memory writes!"
486820f51521d0348160a18b9ba0326f78dcf518,"Fix some test problems.

JsonWriter was using suboptimal escape characters for newlines etc: unicode escapes rather than \x escapes.

JsonObjectTest was banning empty and whitespace-only keys. These values are permitted as of r585."
78d1011ec5e799a0eb59d69263737fdce9ba53b2,Test escaping HTML characters!
fa40b4c63a57e92e87b3fb6079b01fd5304a01c1,Rename GsonReader to Streams; check that class in.
ffdf0e70125420e4263f9d1f32a38a09b087f93c,"Fix some test problems.

JsonWriter was using suboptimal escape characters for newlines etc: unicode escapes rather than \x escapes.

JsonObjectTest was banning empty and whitespace-only keys. These values are permitted as of r585."
747e3c3051153779954e49b7dbc475daa678e1f4,Support mixed streaming and databinding with new APIs.
202bbfeef0a7829ddac75f28b8077e2f1534c461,Fixing the Java 1.5 build.
4e28bf3a39bc451294d68a7afb95e3ae7feacaa2,Check in a passing test for issue 204.
4c53c0640e493a3f30879790b69706b615d055bb,Exhaustive test coverage for mixed streaming & binding.
9b0e7f8b84298b284fe79aaa317ed36394921a24,initial check-in for implementing support for protocol buffers in Gson
e656954c162c9411904cc0090f0c124f6fd80c2b,removed spurious warnings and allowed extension of RestClient for creating testing fixtures.
2b1f3eec15969d5771a957ba810e3c3a80519a3e,Removed a bunch of unused code and unnecessary else statements.
1a4bea73346135ce36422788c28fce11c3c5bbbb,"removed redundant null checks.
Fixed bug in Streams.copy where it was not honoring the closeInput and closeOutput parameters. 
Suppressed spurious unused warnings"
ed415f692f22800e2db5be7a46226450cce94725,Ensuring that the HTTP connection is closed when the rest call is finished.
6825477d75b45e724c6f91bb9f11d2cc5df1ff20,Added a method to retrieve a Rest Response with a provided HTTP URL Connection.
5adfa4bc04bbec81e1b56580d96b95bcc0808b3d,"Defined an interface RestResource that all resources need to extend from. Defined an Id class for a resource.
Changed a rest body spec to take a type instead of a class. This allows parameterized resource types.
Defined a repository interface with an in-memory implementation for server-side storage of rest resource instances."
8cbdd8a030f47338b01ac413757e2336313753c5,simplified the equals method for CallPath
281ed6f86671d4c74e41a2f632757c8096db938d,"Created a generalized key-value store,MetaDataMap, for a map of MetaData.
Moved MetaData to wsdef from wsf.
Added a Gson type adapter for Id type."
18a9205a04a4371ae33565694f151a25a82a3db4,Added an exception class to indicate IO Errors.
91bee2a688bd513fc1e1be7a4b9dc20ad2c83877,Throwing JsonIOException on write failures
c01fd85adb8887410f9429dc708828656b34b3b0,Added toString() methods.
d3eda04f33ed9386140bb8c3066716916e2de831,"Added support for deserializing from null input to a null value.
Added toString() method to ObjectTypePair."
1d2648231f436979b06ccce033946568bdd89f15,"Revised the hashCode of Id to be based just on the value. Also, revised the equals method to return true when the only difference in the type is that one class is Foo and other is Foo<?, ?>. Added a compact toString() in the Id class that prints the type as MyType<Foo,Bar> instead of fully qualified names for each of the types.
Added tests regarding object equality for the Id class."
6d9893ddf3653f58eaae0f556f30a7830207a8fa,Added a transient map in Metadata since metadata is often of two kinds: transient and persistent. persistent part is serialized/deserialized to JSON. Fixed imports in RepositoryInMemory.
af6307a77f945886dc4e47aab8f18f900f9d188b,Implemented feedback from r607
9b10e70a799dd33b2156cca48a8fce06b432c1ec,Removed the version numbers from the plugin configuration of pom.xmls. This ensures that the latest version of the plugins gets downloaded and used while building a project.
6feb325044240ba6ff15aceee2b3b091fa278d4f,Added a type adapter for serializing and deserializing protobufs
2d7367364b866ad468f5b71316d92fd1490d9381,"Added additional functional tests involving complex protocol buffers, and protos with repeated fields.
Moved all the functional tests under a functional package."
2b993d83b6dc502f47022ee3390d11d8c74e3f62,"Made the GsonBuilder registerTypeHierarchyAdapter a public method.
Updated the Gson version number to 1.6 and added @since tag for the new classes"
b2005299e4311e5517ed131fe6a2dc10d2222bbb,"Make JsonSyntaxException public, so clients can differentiate between IO problems and malformed JSON."
d9feb905939424d7162a178c90779fe220d0b8e8,Small cleanup of exception conversion.
b64f69cb00a5f39cc7fe93b082ddbd2e2ca4087e,Added efficient equals and isValid static methods.
ebd40477074f88fb6045d997c1d02939bb458b68,switched to using Google Guava library instead of older collections library.
7ea5cc2b36a4347290f49e7317971a6c72f19f25,Added a new JsonSyntaxException to indicate syntax errors in Gson.
7127be79656b5ef39e03e6e02d914bcaaaaa04ab,Updated the OSGi descriptor to 1.6
d0977c2e3af152901b7b921a31ab6597b0884a4a,Exposing the declaring class for the field wrapped by FieldAttributes.
20d895ff95414d4da23d07115c57920f5813a95d,"Fix primitive wrapping and casting.

Issue: 235"
c8c3a6965c5a1a01951452a25291e5a5944fa59a,Fix a regression that expects different type adapters for long.class and Long.class. This is a temporary fix; later we may want to always use the canonical wrapped class.
abe244c099b8c0f0e4c33921a55b27755564713a,"renamed com.google.gson.stream.JsonSyntaxException to MalformedJsonException.
Throwing JsonSyntaxException instead of JsonParseException where we can detect a syntax error."
43f2a0012b5fb9c94a5e1bb926034e136a3a8dfb,Removed JavaCC parser definition and its generated classes.
dea7ab89fe3e4c5b71c41a9733b102ccdc30b902,"Restore pretty printing. The pretty printing format isn't as compact as the previous format - for example arrays of integers are printed one-per-line, whereas the previous format compacted these to all sit on the same line."
ad7bd1f46501d178e2f776cc761b723a4cb918ab,removed unused JsonFormatter classes.
a224bb1e2b23cf45a0d75638c14da1a406eaec3d,added serial version id
cf026212758bc4f18ee3946c0931e68d1ac99529,removed unused import
4413c299ea09c57b94af8647eec901554c2f5c50,Fixing compiler warnings
c6a4f55d1a9b191dbbd958c366091e567191ccab,Fix for Issue #40.
681281e772614282c8d6e07ee1e3b5ec9ca3faf3,"Moved the classes to create procedural web-services into a procedural package.
Moved IdTypeAdapter as an inner class of Id (Id.GsonTypeAdapter).
Created a internal.util package to keep commonly used classes such as Preconditions.
made common base classes such as ParamMap, ContentBody public."
4a852043b37a6c8849026d0d39189a466dc49b9f,Moved the classes to create procedural web-services into a procedural package.
b8d8244016a5e8a03c456ec4aed4c02bb1bc4a24,changed serial version id to default for WebServiceSystemException. Removed a system.out.println from a test.
b50277c9af513619a60a670f29b800546fa2cd5b,revised prefix for rest packages to com.google.gson.rest from com.google.gson.webservice.rest
200bccef21cee7b4abc84eb31c13eeef0bdde491,Added tests for issue 249
82a1a9511e41764ce397a83364e4a911889b17ff,removed a System.out.println from a test.
40b6ddb591ff7b8d15d1cf8fb766e13ad46ff360,Added support for parsing out version numbers from the URLs while constructing a callpath.
83539c534c3cade5a05e633944420615b0b478ed,"removed compiler warnings.
Added default serial version id for MalformedJsonException."
44edfcfb33205a71c4c37722e7311c184df6c6f2,"Added version support in RestClient. Revised CallPath to extract version number specified in the path.
Moved version tests in CallPathProviderTest to CallPathTest."
10db917e9380ca4d741e06152fd1ee506666c1c3,"Updated fromJson and toJson signatures to indicate the kind of exceptions (JsonIOException, JsonSyntaxException) that can be thrown."
7b99419aead602bb7c6c9fc08a5556deaaf77d77,Removed compiler warnings.
7e05cde8131a04e418d42c41db37ca4a5e5c6b5e,Added ability to specify a different ID than the Id class for a RestResource.
399d49c0e83987252f22a18c5ee8629095c9ae57,"Revised RestClient to provide easy access to RestMethods.
Updated Order and Cart to be rest resources.
Added a Queryable interface that can be used to indicate that a Rest Resource supports querying.
Added getValueAsString() method to Id.
Removed spurious warnings."
0b4bf7706a8f997a9279ad70c656fe5bfa221df2,"Changed JsonParser API to throw specific JsonIOException,JsonSyntaxException instead of the general JsonParseException"
bdf5bef8873e5a698e16711da8754a9aff05a495,Fix JavaDoc on JsonSyntaxException
832257234d0f2d0f9f4cd18146ac13e13f659a59,New overloads for constructing MalformedJsonException
c3bae2d35e63f9080b746f95a037b6861913584d,incorporating code review comments from r648
f4098b5cf7a9ad6b4c82cbe3ac6d07251de73b52,implemented feedback from r585
f6a332971f1f27be44fc40d2e8d9b8a34017f776,Warning fixes.
6a951b427e2f0b37597da343401029312ff8288c,"Adding new tests (two of which are disabled, but prepping for 1.7)."
4d0cd67cde030fae070b075ea75d93bba90f6e21,Addressing code review feedback from r585 and r648.
103edb9c36988c42170a75046eee37407c0c6475,Don't return null on an unexpected EOF unless the document is empty. This brings us back to compatibility with GSON 1.5.
be05420c6b6fe150faaba4152a2846fbab95408e,"Renamed Id to ValueBasedId
renamed RestClient to ResourceDepotClient.
Added ability to simulate an HTTP PUT or GET with a POST.
Added support for extracting resource Id in callpath.
Added Id to RestRequest."
32afd1a4e45e4ae42bb6bceb8a5823dfe8b44fa2,Fixing parsing of unquoted strings to be (somewhat) consistent with previous versions of Gson. The difference with this version is that Gson will throw a more specific exception rather than JsonParseException.
f2e091127f989001a9e2cbf8c0e2d4cdb4d86ad3,An initial sketch to support queries for REST resources
a12286698b273e2f66fed386da333cc031b7ccd8,Incorporated changes for renaming Id to ValueBasedId and RestClient to ResourceDepotClient
4d873d5dd7fc33487eaa6cf5edf24e31cd1204f7,"replaced the use of RestServerConfig with ServerConfig.
Added an example query QueryOrdersByName and its use in a client."
eac1505670eb03586389a14b860c6b90dc2fe898,Removed eclipse warnings about unneeded else statements and rawtypes/unchecked access.
f1e278c4c018c72efeabbde122bdd4c645d12070,"Revised CallPath to handle null or empty paths correctly.
Updated ResourceQuery callspec to accept a list in the response body."
54ba11210f0657d1b77e75122557d22b5ac58009,"Added server-side dispatchers for REST and procedural calls
Implemented the REST dispatcher."
7d055fcb517a25e3cf141a867ec2b53264c40a19,Fixing fromJson type casting.
822d1bc75e70538f01638955bf766316e416499c,moved contents of wsdef to greaze-definition.
9bf785c9fbd2621fbe3813ed6e196b06e94cf0bb,deleted wsdef since its contents are now moved into greaze-definition
520259fefae64a39f41d58c31c19e669718fe394,removed eclipse warnings.
0fa317045b8eb090fe4f23e847b97cd9a9b70398,moved contents of wsclient into greaze-client
4966bf0a5393bee63bc1070eb30790a8c129a8ed,deleted empty wsclient
d69290f3e94d6589bd049693d226a10e9b926c9e,moved contents of wsf into greaze-server
debd3309b35c74b7fce2adc99a0057d3d3dd79c4,delete wsf since its contents are now moved greaze-server
5082dd466282df99ab32b9669a99e28993651816,moved contents of wexample/definition to greaze-example-definition
c713ce1ab15f920a19afb816f859147f185a47a9,removed wsexample/client since its contents are now moved into greaze-example-client
371befafa3afd3a28c9a62721dc6e6a6325488e2,deleted wsexample and wsexample/server since its contents are now moved to greaze.
279649986eb524666e8c75f0d0b4ad737a9be906,"Added a test to ensure that Gson handles repeated invocation of itself correctly.
Revised proto maven configuration to use Gson 1.6"
0a3f5fa801954b07d0041d8a7dc6f87dc210a470,"Required strings to be quoted even in lenient mode.

As far as Inderjeet and I can tell, this is consistent with Gson 1.5."
56344cf06786bf8cd031933a5fc39eeacde7d942,Remove duplicate test.
98ff89486324357876ea8296161b9d48ef0706d1,removed unnecessary else clause.
db3f19e881ba7a86faa97e291be874c5405eedda,dropping GsonBuilder.registerTypeHierarchyAdapter() from 1.6 release.
d87eed510b9f3e6729d4f50523bde6452a180de7,Fixed compilation problem since we dropped registerTypeHierarchyAdapter method
1c5f5132d8cc9b3578070b8c570ccf8d8d2e8f8c,"Revert most of r677: Required strings to be quoted even in lenient mode.  As far as Inderjeet and I can tell, this is consistent with Gson 1.5."
1672d2cfe0170ab4f0e8d85f381c573cf5b1762d,Removing GSON 1.5 javadocs
90e7de92df922be3efa15d4a7cc851c6df62981e,New Javadocs for 1.6
e061d0e56387c7db2fa7a5b46f8b521311fe4e5d,Added findbugs reporting in maven pom.xml
6818edecf95ab35b05c3459a25b4df3eedc07e84,enabled GsonBuilder.registerTypeHierarchyAdapter since head is now for Gson 1.7
9f5aa1772b64f68efb26bfcc081f20d14cfb5347,added reports on TODO tags
5be830835d1bc9dfb560e4d6c79bd301b879aa76,Added report for subversion changelogs
faa5464e848ab9c6afc46e38eb416e7a156a23e1,updated current version to 1.7. Added stream package to OSGI. Added maven-changes-plugin.
d1ddab2e6ffcd938ac0d133fd46caf5fb2417009,"Swap out GSON's type mechanics with the Type resolution code from Guice.

The most significant impact of this change is that fields whose types are type parameters should now GSONify just fine. For example, consider the class below.

abstract class Foo<A, B> {
   A a;
   B b;
   List<A> list;
   Map<A, List<B>> map;
}
class RealFoo extends Foo<String, Integer> {...}

This is a reasonable checkpoint but some work still needs to be done for this. In particular, the level of visibility of methods in TypeToken and Type should be reconsidered; we're exposing more than we need to!"
883ce465d5514ee9fd28a73c0891869d0b744d4a,"Second half of adopting Guice's types code.

This removes a bunch of unnecessary public APIs and looks more like the GSON code that existed before this whole exercise. We no longer use TypeToken.isAssignable. I wrote a test that demonstrates at least one problem with that method, so I've deprecated it. We should be able to remove it release-after-next; nobody should be using this method anyway.

There are still some things that are public that shouldn't be. In particular there's some APIs in Types that are needed by TypeToken, which is unfortunately in a different package. Traditionally the fix is to create an 'internal' package and make the shared code public in the internal package. I'm not sure what we want to do for GSON; we could also use reflection (yuck) or duplicate the code (yuck)."
8380d28e6fd1c320ad3f13aef257a907b8f04a47,removed compiler warnings
25f0014305b8418da278629ee9726f9b3aa79b48,"Added SNAPSHOT tag. 
Added Google as organization and Jesse Wilson as developer."
0e5f6704cd5f438c55efe1fcf70c857f95f8190b,Added sonatype oss as parent for the pom. Diabled repository management with-in POM per instructions at: https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide
3926afbd3022d8939e279cbd2a9c83aa4984f160,Removing unused files with the new Types class.
1e2fbd81f500671670885b7fc110d3c6a160aa78,Adding default type adapter for InetAddress.
439d931c5a9589d9860d9cb3c311aa7ece600392,Removing unused methods on Cache and synchronizing it since FieldAttributes contains a static instance of this type.
fa7f8cc2eb9c4e5aa3f57b95b760df3423b0fb0b,Rolling back test deletion.
bd3e680f94cc40c61da94ef05c8047d775af9935,Fixing rollback.
37dc0f8d3ed854349fc066e580ce16e43b1a0248,Type adapter for maps. Supports both complex and non-complex keys.
ce3520f5b5d7c126ef06af3ec9ccf91cb4e7913e,"disabling an assert that was causing failed test. 
Per Jesse, this assertion is too difficult to support reliably."
9a792a995295d0c67d53d11f38588795097f2f5e,added tagbase to maven release plugin in POM
b3685cff1e84631339414e7774e9b0e34ddd4153,"added version numbers to various plugins.
replaced now deprecated ${version} with ${project.version}"
edc71130c44e82fec4a3b4712f44b1912d374036,removed unneeded suppression of warnings.
a526da7cdd2529eb3d13cfbd35664ee82a02d565,"Tests that demonstrate that type variables work.

Fixes issue 168."
fd0f526fb06b6b8ac929e383894d2ce9508dbd36,Basic functional test for type hierarchy adapter.
2b9f81e8b5623dd07f3fe5f34a8ada56b13aea8d,"Registering default type hierarchy adapters first and allow users to override them.
This allows the default EnumTypeAdapter to be overridden for a specific hierachy adapter for Enum with anonymized sub-classes."
b883f8f4aaa7ae906b4298cc43223060495fc6ff,"Add new ""Mode"" enum and carry mode through Gson so exclusion strategies know whether it is currently serializing or deserializing.

Deprecate old ExclusionStrategy code since this new approach is more powerful."
fb7bd7b1b7bbc0ba75b74c2861807852cf43b30d,Deprecate the old FieldNamingStrategy interface and open up the FieldNamingStrategy2 instead to take its place.
56aa8283505e1813bcd800c3c05dbdacccf22ee7,Minor clean-up in Gson class.
a09c3ab1c54575265857f8038db3e90da2156631,Added tests to validate issue 272. The tests currently pass so it is not a valid bug.
1ad0489b845f3486b19a81b2182bc34ab97eccec,Initial version of Gson benchmark using Caliper
7b3cb27ee5d167a44ed3788fdc60cd1294b710ca,Added maven dependency to caliper in pom.xml
50a1191f904ed9ba5ee523177c032e50da7ce807,Updated JDK version to match caliper's
ea48a1debfaa863d29dac8ddee9a4dd5a55ed785,Fixed issue 175 by adding default type adapters for StringBuilder and StringBuffer.
114633fbf933c3085a189d20c62fadae0398fb39,Provide a means to add serialization or deserialization specific exclusion strategies.
4fc0577933774cd8d81d0b59e6e2e50895cbd949,Split up benchmarks into specific types for serialization and deserialization.
6e81cfdbb4c156e53013af07023991987073eced,"Locale-awareness for date parsing and formatting:

 - always format in en_US for best interchange
 - always parse in en_US, system locale and ISO-8601"
b649f2768c2e3f313b3f08ec54a39746bd43cfe6,"Support unquoted single word strings in lenient mode!

Fixes issue 282."
451a9dbe6672f773c7cb4ecee7a8f2eea79b5b6b,Add ability to allocate memory for an object without the use of the default constructor.
69661216a3687fdf360af30fe7a24bba7310c100,Minor clean-up of warnings (in 1.5) and added new test for non-Empty maps.
4c41b11fce30bdabf8d276b934d4161d0e186db4,Comments from r723.
3d006c90a2d2e53f786acdba64f48d9b12ab0ed3,"equals & hashCode for subclasses of JsonElement.

Resolves issue 64."
d0b311747c3adee403632148a61b2db86b7ebabe,marked project files as UTF-8
54a2444fa9f844776afd9588cce0c8b9edde373a,Updated maven configuration to ensure that 'mvn install' creates javadoc and sources jars as well.
4be9767a283af799188056a89c0af839140b4689,removed unused imports
52288d712730a50f13fc6c2bf07d339642d06846,"rawtypes -> unchecked
Fixed spurious eclipse warnings on deprecation, missing classes or parameters, etc."
4e4f9b3a69ec8560c126c0abba99032f9b89e245,"Preconditions.checkState() now throws IllegalStateException instead of IllegalArgumentException. This will potentiallly break backwards compatibility.
Removed unhelpful message while constructing exceptions."
baf9591d3b0eea51434f1e2ef726c29bd35c85d5,Made constructors package private for package private classes.
28567508ea50e15f63807277d1a72ec9060eb5ad,Corrected Javadocs to indicate that NumberFormatException gets thrown instead of ClassCastException while attempting to convert a JsonPrimitive to a number.
43137b6b4f005e70561a147b868284d94527069f,Fix unsafe allocations on Android
e26a6d5c187228d5f8152db6a8cbbd157a28b0a5,"removed the wrapping (regarding exception handling) of some primitive deserializers (numbers and boolean).
Added a number of additional tests that cover the cases of attempts to deserialize JsonObjects or arrays as primitives that must fail."
b489f4fb01ad2558319bde03fcf3103ede56d193,marked default type adapters as final classes
ef7bd4c999c6d4d3d418138a03bd98e2efe4ca63,Don't document an API that we don't offer!
912add077989dc06977fe31209d4d8d125bce8d4,(Failing) test cases for registering competing types.
0c35edab6584a01d89ec5533ee6acac8f7002a8b,"Fixed the bug where copyOf() for a ParameterizedTypeHandlerMap was failing when hierarchical type adapters for a sub class and its base class were present.

Fixed previously broken tests to verify the behavior that a hierarchical type adapter for a sub-class can be registered after registering a hierarchical type adapter for the base-class. The vice-versa is not allowed as it would result in hiding the sub-class hierarchical type adapter."
e57ef0908b6aa422819511dd640584ed71ac846d,Add method to GsonBuilder to enable complex key serialization of maps.
ba0cd254a931c01ee753d1f4c744c3dfa151d097,Clean up warnings.
a9507250f96766525c5fbde5648b228d032bf064,Add test for multiple calls to register complex map key serialization.
7b223a89835aea968be91f1b5a0dd57ba19bfe34,Adding JavaDoc to the enableComplexMapKeySerialization method on GsonBuilder.
279c0e87edffe9ec675c37c8405f3add06879b36,Update Precondition checks and have it throw a NPE instead.
e96b241556feb92977f7ca274ef59204258227a6,Test that we can serialize classes whose fields are concrete collections.
657688ca797a08975aea47d364b309ac8b7c12bb,"Test that the date format is honored, even in a collection.
http://code.google.com/p/google-gson/issues/detail?id=230"
861e047a6222d581ecf1f617599629bbf8654d34,"Create an ""internals"" package for classes that we do not want to share, but is needed across multiple pacakges.

As well, move non-Gson specific classes, such as Preconditions, to this new ""internals"" package."
6d3e0e92a5695f47628d2f7d3fcff207c22c1825,Added a cache for no-args constructors to avoid expensive reflection everytime an object needs to be instantiated.
005c93e3832e8f83aa5602d83ffb6d181ec0f1a1,removed unused no-args constructors
b819307de8b6bf24241c8ee75acbf90f88489c56,refactored the field navigation using reflection out of ObjectNavigator.
13dc7b6f0255745479607fdea82a502db9aff5a8,Made ObjectNavigator a reusable object. We now use just one instance of ObjectNavigator instead of creating one for each field/object.
b51ffc1060103ab27cfc6a6f107f04111ba098f6,Removed eclipse warnings about missing overrides and declared exceptions that are never thrown.
337d89cf3feec17918ea7739fc00edb52ed5527e,Removed ObjectNavigatorFactory
0adf7f5e1797baf3ac44a369fa13ad4126096d4a,Caching fields for a class for reducing the need for reflection.
4a58dc3e2a160d5c90a2c39553d764314b53d41d,Moving AccessibleObject.setAccessible to where the fields are obtained by reflection.
4d9bec220682ff8e0a854eb422e8b498692f6394,Caching inheritance hierarchy for a type to reduce performance impact of reflection.
ad921a0ee85303f639e5ce27e9a255125351d031,removed unused variable. eliminated unnecessary ObjTypePair creation.
454f58a7b144d2f16e3ea55b34074b8a66a9a2fe,"Adding in instance creator to instantiate the concrete Collection or Map class if known, otherwise fallback to a default instance.

Also, added some caching as part of the default constructor lookups."
9bcb0c0b6b65852e337c6dd1715f838fddddda15,Use the internal copy of preconditions
5e74dabad9acaed40c2c0db88680f09bbbdbf28d,Re-use Preconditions instead of re-writing them here.
4efb133b4a6cc93708dda782d948b9c88c3b5ff0,"bling bling

Prefix internal classes with $ to prevent them from interfering with IDE's auto import functionality."
f718784f33c6f52416325039381833645651d2a2,"Use the date format for java.sql.Date and java.sql.Timestamp.

Fixes issue 230."
523f489863812d6831bc33443fe699c2903a450f,Got rid of an unneeded method.
46a8e9b4119992d73e61dc1ce37f2b94d53c819e,"Test to demonstrate that we've fixed issue 302.

http://code.google.com/p/google-gson/issues/detail?id=302"
5bc80cd6937faae894c5b578b78ed071c7c8d61d,"Moved Cache, LruCache, Pair, Primitives and UnsafeAllocator to com.google.gson and made them package private."
9c894c748550690ee4b5b4f982a350da6a08e5f9,"switched from accessing field to an accessor method for access in tests.
Strangely, this fixes the broken tests in the continuous build."
bf4ab04413ce091971175ff594c794116925b44a,"replaced multiple caches in ReflectingFieldNavigator with a single one. 
Two additional optimizations:
- storing the field list for the entire type hierarchy in the cache instead of navigating it every time.
- storing the resolved type for the field in FieldAttributes instead of using reflection every time."
5af0b16641ffd0422ea495b8e542ad1e29cc1735,Updating Map tests.
21ddfc9b122312ee0e599730cd7672ecdbd6d084,Show default serialization and deserialization works with subclasses of an enum type.
1a9a54dcc25ccf517f38d427c01f696673512348,incorporated review comments from r768
a1471648520e70b3b33e6421ca30796ff3b258a3,incorporated feedback on r721
feb9617bf087738ddb5becffdcaf16efeb187478,Incorporated comments from r726
56b7ab1b715f972c07b42c61e929601e343faa17,Incorporated feedback from r718
542a17c3bc30ae0506800f1600278e11bce551e5,Incorporated comments from r710
50b4e3f4b9fda3494c07221547eac505deb6f7eb,Using getElement() instead of get() to get proper synchronization.
2fb8c92812fc385a79bc54f6214c7ac801d2c06a,Use more specific type for map serialization if possible.
7c42ef3e5d736ae1a74c88f0dc5fc1207c55c8af,Update incomplete comment.
f36c1bc222d5450f9c3f9a1203b2a6bed4f57026,Very minor cleanup.
944081327bcf700ebe258699807e74ae19d41989,More very minor cleanup.
dc283e112159a3fbace97853c95da1cbbfc125f2,Fixed comments from r774.
52bf144859d7584fe96c79b5672683f0bb795bdc,Comments for r767
b4eb810347ac073c29b62bb0fc2c70c40376aafb,Comments for r766.
8d3bfc0f4715cbe00ce0865d2de5018a7207f687,"Marked the getTypeInfoForField() method package private as it was inadvertently marked public.
Removed commented out code in pom.xml that is now obsoleted with sonatype syncing."
c8bd121db2b382cc0e15d317b19178e6db373d9b,"Renamed $Preconditions to $Gson$Preconditions and $Types to $Gson$Types.
Marked the two private classes in $Types as final."
7afda06253f5bbb90cb59ff81830542eec28e860,Added warning in GsonBuilder regarding setting date format correctly.
ddb0c8c825db2c7194241ba9abb2bfd5fea05838,Minor formatting fixes.
05ae10a144dffde88ddfb4b0a7563892ffce9b58,removed the constructor in FieldAttributes that was only used in tests.
c15f570c7223c5f380a68b896493b0933a7abd7e,Added a warning in the documentation of the internal package.
4bd261ae060edac514882b4f9026a7aba4c7ecaa,Made FieldNamingStrategy2 and its corresponding builder method package-private.
854b92a78f3747f1e8874cc0b7eb485693f3cb54,Comments from r789
6b55f071baba057b7817bde645e7145cf2ce24f0,enabled PGP signing when using maven to perform a release.
457b37f08e3cf81299be9dc1f409eaf9c217a1dc,Replace var-args with single parameter.
c2660973108b61e07907a4f327a2a13a300545b0,Fix minor JavaDoc issue.
49e7ee05fcd6113d569d3ca20d7a806603c4a91f,Fix method name by making it singular.
c5c7c5bb649cb875769d1e25ea44435311ca93b4,More fixes to JavaDoc.
ecf137fec344e27cb645e896de58870d95a4263a,More fixes to JavaDoc.
7f9762db633dde22b801e365d4ae02d50acaa6bf,Updated Maven dependencies and license notice in ProtoTypeAdapter.
4917fc7f7628518ade0dfa11464192a17af1c7d1,"Lift restriction on naming when using the ""@SerializedNamed"" annotation.

Fix for Issue 290."
6f6893b20a4fbde34e3862b7d458e593afe7b0b7,added and updated version numbers for plugins
6911d932a6f918931b5d13a560cf97954906f58f,Updating License to contain the full text.
def5862ad45aded5e8e20283e09e8253172d8428,[maven-release-plugin] prepare release gson-1.7
b01401791611595ccce69127933c11ab48aa768d,[maven-release-plugin] prepare for next development iteration
5770be4ed21473a77196c3457e9fded852796cf6,More fixes to JavaDoc.
f5d6b01ca6b7d653797833e5537fe29457d9943d,Update the JavaDocs for 1.7.
1c3d08794d78dde4eae661ccdd4c195793deaca0,Fixed typo.
9bfe4439505db695ff8e1a24e0d0ca1a494b8aa3,marked package private classes final
97d00f49309dec6cc92b248a7f08408bd6aeb3e1,Add test to verify issue 309.
7be088286368ceeca635df13de251070baef3cb3,removed the Maven configuration files from Gson jar file
5552d17d05165f61d30e33ac0da6209061619a32,removed assembly-descriptor.xml from Gson jar
3d6073a427eb8c3e5af1300e55fdad96ca04582b,[maven-release-plugin] prepare release gson-1.7.1
7c9f87d7001877e9e68a001f68bade751ac8b38b,[maven-release-plugin] prepare for next development iteration
aa5ed432dac89cc925e4d5c4e266a8cba0984c7e,Javadocs for release 1.7.1
2ccf45226e70b96d35d1f6731101a010caea0149,revert pom.xml to the currently open version.
3b2206982359e07eced00726ff4fde851c59f83a,"Updated the dependency to the newly-released version of Gson, 1.7.1."
4e99d66817b70d7c58695a7e44aa7cfb79a276cc,Updated the dependency to the current Gson trunk: 1.7.2-SNAPSHOT
c894fb6c2321231c3793a2092650596d53f37e41,"Default support for BitSet. As well, provide more flexibility on getAsBoolean for a JsonPrimitive."
e345feb438e899736162463263addd3c8628a9f0,Comments from r821
d2cf574e8633bee099fd388242dcab9478ff5db7,Adding unit-tests to verify bugs.
93910a9d5246ad4761f419a9306e9689a956dfc8,Updated javadoc links to point to oracle servers to avoid a redirect
40045dc2e4c840f75f67e177f6df7247fb908c74,"Added tests to ensure that subclass objects are serialized per their real type in lists or maps.
Currently, this doesnt happen for List and hence the test is marked as disabled."
e60274ed353ebdb1100a41b6d9bc9938ca4e71ec,Added tests to ensure that subclass objects that are of a parameterized type are serialized per their declared type in lists or maps.
cf3615e38c3078611706e5770d0c21fd01c4c2e1,Adding tests to verify 294.
f291c4d33ea5fcc52afcfa5713e519e663378bda,"Fix a bunch of preserve-type issues:
- Issue 205
- Issue 294
- Issue 318"
4efeef18935af8f6cd944b573e8f18f7e13db391,Make test a little more complex to show it actually fixed the bug.
a21ddcbe2fcd09783ede619fc9db59c02958f2b2,updated version of protobuf dependency
824635158ca6f48f5d8e99cc928990892d5efbbd,"Parsing numbers lazily as a performance enhancement.
This avoids needing to parse number if the equivalent object field doesn't exist.
It also avoids the performance penalty of trying to parse it eagerly as a big decimal, float etc."
ce79e16f7a1811e55b140980ebf6f8f68c0370fd,StringPooling. This makes things up to 20% faster on dalvikvm for some data sets.
0bcd1b341f2f4f7d93738272f5a6a2c3d2dfb0f7,"Revised Gson to refuse to deserialize floating point numbers into integer types.
This is probably a break from the past: previous versions of Gson allowed truncating a floating point into a long or int. However, it wasn't consistent in this behavior. It disallowed converting a BigDecimal value into BigInteger, int or long. Refusing to deserialize such values is aligned with fail-fast approach of uncovering bugs."
b85daafb08dc4dd841cf92d50ea8055248577d1d,suppressed unchecked warning
78327b95eea6499d71a396e5ceb96605fe602a58,initial checkin for the extras project
d93825ba72e0ccbc6a3ec2fa0bcb2d72678333a4,First draft of RuntimeTypeAdapters
572421b7712bf2f369ec9f529416ddef5235d975,Open object construction in JsonDeserializationContext to leverage the same object construction as default gson deserialization.
5e2bc1b8f0ba98b40165a1a842a6f3b5c51a3460,New Public API: Exposed the singleton instance for JsonNull.
540d36e4bd1fa94a7aa8f72eef0d9272f013fbb0,API Change: Implemented various getAs methods to return null.
5d31558428466ebe531a1255271dfc6b800f36a0,eliminated maven compilation problems with JDK 5
f2eb76eac92ac79323fa6add427fd9123552a312,removed deprecation warnings by using JsonNull.INSTANCE
e79bcde8bf95a6f19f85f74d9f448c70fae19141,Using JsonNull.INSTANCE instead of JsonNull.createJsonNull() method
2d186fbdcd73f8dd1c59790f0db4f2c09d0d5e60,Updated the working version of Gson to 1.8-SNAPSHOT as we have a bunch of API changes.
44faec1eb1ebd54b4229ba527ab95e78a9291090,removed the methods that return null for various getAs methods per discussions with Jesse and Joel.
3e324cc8a409cfa278274dc116e8d24f44395ede,Added an example of using raw collection for serialization and deserialization with Gson.
3d50a6b72aabd4f3eb4a309a0df51c6d0db619d9,New failing test for RuntimeTypeAdapters!
9531c662dab5b6108554b6a3822ca793ea5e511f,suppressed deprecation warning.
61b9a2cb17731f337b9acda7a77a9361baa25a72,Moved field creation to the field declaration to avoid inadvertent change from LinkedHashMap to something else.
60e7c481fd1fcbd8b0ecec1b4238fdc51b008009,Added complex map serialization tests in case the Map is defined with TypeVariables.
8fd4072f9bf7deff39dbe7e5e3913d13915d5969,fixed javadocs
c9ee7adcc59f2cb686594b537e336ecc01896a0d,Start using JsonNull.INSTANCE everywhere and remove creation method.
533ea1755d807f75a53c6bb3a2b0d4b8ee9794bc,Fix typo
9ad3358728073500a5fc30f9685eefa48696fe23,Document RuntimeTypeAdapter
aa897730085d17e131768caf40f9b30f2aa7a0bc,Quick fix for threading issue. Should maybe look into synchronizing this method instead.
f74dffc6fd90fb5efdaa982bd7ba0e8a42c31c6f,"Add deepCopy to JsonArray and JsonObject.

Resolves issue 301."
9196b2325126988f72248a7d35ffcb44744e0134,Refactoring: Separated type handler maps into two types: one for system-specified handlers and one for user-specified. system-specified handlers are the ones that Gson comes with (DefaultTypeAdapters).
ef2f73180b4befad061a64464bf8b9382f4e671f,added tests to illustrate and validate that Gson can serialize parameterized types without the need of explicit type token.
d347128e6fbfbe307cfbfde384235f43c80045f1,Implemented support for serializing objects of type Bar<Foo> without the need to specify their type explicitly in toJson method.
5f4e88f62a6f38c468a6dcb99c56999e616c8910,More tests to ensure that serialization works for parameterized types like A<B<C<D>>> without the need to specify type in toJson()
62675b7f46e805fe15a04a7b8b252da6dac00c15,"Added serializeDefault and deserializeDefault methods in contexts that only invoke system type adapters on the top-level object.
With this, the RuntimeTypeAdapterTest passes."
937019651a9f81a12b457a1400c5fdf5bc65b6a4,Trailing comma tests
edf9be298c7ccdd9c26be78dbc609f319c1d8711,fixed issue 339
807aa97ee7a2d380f77c947a47e9871d7ce98122,"Don't use ambiguous timezone names.

Fixes bug 331."
c5f1df10175c254b823fc019832bf1bf7b71e929,MiniGSON prototype!
95a345234fb1d51ada03f37d50769cd5198b5af3,MiniGSON Map adapters and support for nulls.
c6bef300579d96fe90e5be8240ee595ae8da66f1,Array support.
7dca7242926bf2e8692e54e2b33e303c6fb67707,Fixing import order.
d3a4b48ad92ce5e5a45a7046e737984608c22cc6,"Unconditionally escape unicode newline characters.

Fixes issue 341."
041d499a7c4af1b70617001ded11dbc01732d97f,Fix serialization where one type depends (possibly indireclty) on itself!
9cf579ef01e66dad2ffe907350d2d088497138a8,"Use Streams instead of Escaper.

Fixes issue 345."
3c4d121dc8736c7359731f9cb99098e2999f8575,Fix integration tests that fell out from some benchmarking.
4b042671af018f308c2a261145dc6712e39b96e7,Cleanup after experimenting with specializing BoundField by type (ie. Field.setInt() to avoid autoboxing)
415437810a6341576c60693237fd514500abf209,Include line and column position in error messages.
befcfd908b55f1ee80eb046fe6c1196e49491ab2,"Skip a byte order mark (BOM) if it exists.
http://code.google.com/p/android/issues/detail?id=18508"
161b4babe861a9fcd386d2d7ba5636aa3cedf9cc,Fix a pair of relatively benign off-by-one bugs. These only manifest if the source Reader returns characters one-at-a-time.
ea4cfcd4b9918c3b20292cb897b689b9f77d0790,initial cut at an example Android application that uses Proguard with Gson
a85807818fa5535517ba25353e2875da0878f439,"Invoking Gson toJson and fromJson with-in the Android application.
Gson.fromJson does not currently work in this application with proguard enabled: The reason seems to be that Cart's field List<LineItem> gets rewritten as raw List type."
f127398ad1fa043e0281935d2d8dc8a75d51a91e,Made the proguard example work by using -keepattributes Signature (as advised in https://sourceforge.net/tracker/?func=detail&aid=3375947&group_id=54750&atid=474704)
759eb8ede50f61fd525f5d703dd9fd45ddae1dcd,Factory always wanted to be public.
60e6ed912d52716f46a1ba71923ef203c4248857,Promote MiniGson to gson.internal.bind
37abcf36379f9f24efb2dea8b4d1dd1577a10db1,Break 203 tests and adopt the new stream binding internally. Test fixes coming soon...
3331dcdab08792f6281ab6343532031a52f54003,Using serializationExclusionStrategy while navigating through fields to decide which ones to skip.
f276d1382775e962d1a0a4b9e7e3e08496252861,Added support for deserialization exclusion strategy.
b922500c239406c755149e9a9ca1164a2e2e2c90,"For efficiency, calling setAccessible on all fields of a class in one method call instead of doing it individually."
98aa12458904cd8cb74ca40a905ddc790e14501b,Unsafe allocation for reflective type adapters.
566c27cf211fcf307bcb94b47dbbe992fbe0d2d9,Adapted legacy Gson adapters into mini Gson.
d70fb90ef77be3d34686a98335fb1747f66b448b,"Added methods to convert to JsonElement in TypeAdapter.
Using lenient mode while working with Gson.
Handling nulls while invoking legacy Gson type adapters."
f1f8b666ec665b41446ddb3d68de115d8ce91d2f,Implemented support for FieldNamingPolicy with MiniGson.
5c620c7e0a1f3e89dd0b42463aa4611950f282f1,Changed Gson behavior to reject duplicate fields in a class.
2813385c33c34c3758f4bba863526551add0c58e,Parity with Gson behavior where we use runtime type of an object while serializing instead of the declared type of the field.
5fc2db9e7266701959129e88aa7ed8baeb493adc,Parity with Gson behavior where we use runtime type of an object while serializing instead of the declared type of the field.
aa067056c3f0846f84ab94c771f3f756a9b3e40c,Restore support for long serialization policy.
6e3bf0730037fb3cb7aab7fe607fbe61ba5fe5e6,"Added support for runtime type determination while serializing array elements.
Created a utility class Reflection to hold methods to find Runtime type and creating new Instances."
1885ba7dec27dd99fd8c9dc48bb6623708286584,Restore support for serializeSpecialFloatingPointValues.
e04d3fa882e7829fc2b1d174a28e4e3640306696,Don't look for instance fields on interfaces.
64dc53ffc40ac80925be50523e3c2cea6ad97da9,"Added support for runtime type determination while serializing collections and its subclasses.
This currently doesn't work since Gson register a hierarchy type adapter for Collections that takes precedence over this."
e9a971f6806e5bebd2f6e677c3b126efad68a01c,"Revised getRuntimeTypeIfMoreSpecific to ignore the parent and just focus on the value.
All uses of this method have already made a determination about the parent."
fc99556f22b476057f95c04a1648b3bbddc130b5,Support type exclusion strategies.
ad5ff0f2d9c08fb25d821bdc038934642c3c7367,Created a wrapper for runtime type determination.
f7121ad87d2916c72a854f746b37d62aead1ff0b,"Restored this behavior:
If a type adapter is registered for a base class, then a field of that type is serialized with the type adapter instead of using the run-time type.
This fixes: CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFieldsHoldingSubClassInstances"
57ea7ff9f36409039ede0012680a8b0d3a2c02a2,"Restored this behavior for serialization: (as verified in CustomSerializerTest)
First preference: a type adapter registered for the runtime type
Second preference: a type adapter registered for the declared type
Third preference: reflective type adapter for the runtime type (if it is a sub class of the declared type)
Fourth preference: reflective type adapter for the declared type"
70965eae0397636368dbfcc606a1319722c4a3dd,Adding new type adapters for BigInteger and BigDecimal types.
ff88ac32f22e3edf7652f1c491277f996cb56024,Use MiniGSON for deserialization.
a85f9b81b0c207042b05e1162c270488821a856b,Wrap IOException into a JsonIoException instead of RuntimeException.
84c71409da812c1ccc62196ac2ff71f761bbf31b,"Removed Gson type adapters for boolean, integer, float, double, String, BigDecimal and BigInteger.
Switched Gson.fromJson() methods to use miniGson directly instead of using a DOM."
bafc43afae04d33bf50f112c05661bf4a402aa69,removed unneeded exception catch clause.
9b6954decda71d2e43748bc75642c37cd3ba3632,Additional tests to verify handling of bytes.
f9976f4b0125ffb6482728448e56c917dd6b35a7,"Switched Short, URI, URL, UUID, StringBuilder and StringBuffer type adapters to new-style."
9fb39c89ea06ce5472d6979e264de5d9cc031c91,Switched Locale type adapter to new-style.
3aeb70e0305a598a9ceddc0390d693874dcc892d,Adapter for Object.class
6029afb72d6dfaf42b4b655b5a32dadaa81db3a1,Use MiniGson's list adapters
4f6a36d68fbc38f9fb4a84a43875e64676a73139,Support reading nulls into strings
0aab1d065929e00809ecb03351505b1e818c1698,Support calling private constructors
ea9c0236c79134cd2ecdd1b6d244a584e7fc6c22,Converted InetAddress type adapter to new style.
f67940cb638fcf4d3443b057176bb1b84d054ac0,"Retire two old bad features
 - overriding primitive type adapters
 - auto unwrapping of single element arrays"
a8133efeb812badc14f00c1e641ee9891bc803b8,removed old-style Collections type adapter since the new one covers all cases.
9db0c5321710f1cebb6ae297b2d7c35ef15b56ce,Adapt bytes
ba283925ae8503ca72f326486a3518fb517df5b7,Deleted unneeded Long deserializer.
e19672d0a394d552469147e12a70bf81413f0076,Throw the right exceptions when primitives fail to parse.
a7e9ac36123ad66ec4ac9a7dff3197276b55d5d1,Don't support oversized values like 30-character integers
da67003eeff2c506a2c84ac0ee4191a9e11c25df,"GSON 1.x uses arbitrary precision for primitive type conversion (so -122.08e-2132 != 0)
GSON 2.x uses double precision (so -122.08e-2132 == 0)"
99801915aa324c4d07b852e23debfbcefb1a3007,More code through the same fromJson path
9424949245bb46bd63f3fed83e67daa9fdbdbff9,Don't unwrap single-element String arrays
f3c0a96f444bd553b137144141ad20434e545322,Support incoming nulls in all default type adapters
6f6d3b221e563a1706727fce8bc26e83fee3144a,Added support for constructing Queues and SortedSet while handling collections.
fede584b9811f35432a936af0c9441f4e05df80a,"Gson 2.0 converts JSON with type Object.class into something meaningful such as a Collection of primitives or Maps. Updated tests for the new behavior.
Changed $Gson$Types.getCollectionElementType to handle wild-card sub-classes of collections and raw collections."
e7566085683827ae9278880c38e21a80ccd573d9,Forbid custom serializers for primitive types (so we can avoid boxing in the reflective and array adapters)
2ee89879e19c182315ff8d2023f9c2f47659b4b7,New failing test to show that JsonPrimitive.equals() is broken for values that are out of 'long' range
2f0c617d8df2ad38439c43c06b7c066ba646a627,Use floating point comparison for all non-integral Number types (such as LazilyParsedNumber)
d22e11b1846d43efef5179851a131f6ebb9cf1a9,Let the user override the byte[] type adapter
1bb48694f4fe9daff299d5c4a057dcb739b79575,"Permit the null key, which is written as ""null"""
ee9ffa808a24d690dbffedb6bda4a18876c29fbd,"If the reflective type isn't as expected, fail with a JsonSyntaxException"
f50cce6d142e4e0b4bc6c9b52bf6ed82a9c7afaa,Don't call deserializers with null
cdd5d80b85155c21c61f888fb3e70c65e72edef7,Support writing maps with non-string keys
25c6ae177b1ca56db7f3c29eb574bdd032a06165,"Down to 22 failing tests.

Consolidated all of the different code paths that we use to construct instances. We now have an ObjectConstructor class that knows what type it constructs; this means that we don't need to ever do reflection to lookup a constructor at construction time.

Cleaned up some buggy type adapters, particularly around handling of null.

Removed dead code for object graph navigation.

Moved some classes into 'internal' so they are visible to the 'bind' subpackage.

Turned some TypeAdapterFactory/TypeAdapter pairs inside out so that the TypeAdapter is now the inner class. This is necessary so that the factories can take parameters.

Added an API to request the 'next' type adapter for a type. This allows type adapters to compose other type adapters. We're using this in two places:
 - where the user has excluded a type from serialization but not deserialization, we need to use the ""default"" deserialization but interpose null on serialization. We create a type adapter that delegates for one and returns null for the other.
 - similarly when a DOM type serializer is registered but no deserializer, or vice versa.
This is the biggest change to the MiniGson core.

For backwards compatibility, return null for the empty string.

Simplify JsonSerializationContext/JsonDeserializationContext to simply call through to GSON. SerializeDefault is currently unsupported.

More useful error messages when calling getAsBoolean on a JsonNull.

Remove currently unused MemoryRefStack. We might need this back again, though wiring it back in will be much more difficult because we don't interject ourselves between the users' various type adapters."
d43cf5ea358568446f275c572d8ab9b65c827da7,obsolete class!
a98d6eae472df67317d58d34f13438bb958668b1,Fix the map type adapter to support array serialization natively.
51a9596d066a4b38f7da2975ba659e8400728208,Make Dates test slightly more robust to time of day issues. The test still fails outside of PST when run as a part of a larger suite because GSON captures a static snapshot of the system time zone at GSON-creation time.
4a6c084ef73e5e8a3fca12f9bb829a218fad7a84,removed JDK 1.5 incompatible use of @Overrides annotation on overridden interface methods.
6b2c275b5caa122bc25797cc71d154a598431a16,"Deleted Long, Float and Double serializers from legacy DefaultTypeAdapters. This stuff is not invoked anymore as the MiniGson takes care of it."
b90b43ea474cd32f1aa6d68aeb4fbe19e1e7ca9d,A few minor fixes and one incompatible Java 1.6 API call.
915c5d4d6f46ca65f60430b7a9b403be87453243,Converted BitSetTypeAdapter to the new style.
c71e61cf4830ee950b8fbc601ccadfe4d7ab6d1a,"Converted EnumTypeAdapter to new style.
Got rid of default Hierarchy Serializer/Deserializers from DefaultTypeAdapters.
Got rid of methods for gettting default serializers/deserializers/instance creators. Instead we reuse the static final instances.
Fixed warnings in TypeAdapters where a parameterized type T was hiding the parameterized T in methods.
Removed support to unwrap single element array of enums into enum values. Also removed the test that verifies this behavior."
fd502f4e79d10516205b4a50966d90479be18e6e,removed unused method.
882c14a36782889b54fc284c43e386252ae2de23,"Added support in Gson for serializing/deserializing from primitive char.
Created a new class for character/char tests, PrimitiveCharacterTest. This is the start of breaking down PrimitiveTest into smaller chunks.
When MiniGson can not find a type adapter for a type, revised the message to say can't handle instead of can't serialize."
b5f8ef6e16d615f48c35ed3c6826db0616e1fb53,Converted CharacterTypeAdapter to the new style.
2780a2a9bf5b0bf7eb6b14fc6ec27916c1c867fc,Fixed eclipse warnings.
4402240294300515e8f4141adba42732395b5c21,Converted Number type adapter to the new style.
d20df34b8b65067b54138639678cc11391d3c47a,Converted Calendar/GregorianCalendar type adapters to the new style.
8217aca9250c59fef8dbe3b7fe7fd4da86ab1ae0,Converted java.sql.Date  type adapters to the new style.
467011c7ab2de2341ee4b11d00f515d1f1ddb36f,Allowed users to override default type adapters for various classes.
f9b6c2095f3409b2324579e9edea25cd64a2ceb1,Converted java.sql.Time type adapter to the new style.
81854db4ac8c50aa65ffb5ad7b66747cdea4ab4c,Converted java.sql.Timestamp type adapter to the new style.
c1bac6debf8ce1f5f76346b6cef6bbe06996bc7c,Converted Date type adapter to the new style. This was the last remaining old style default type adapter.
2f0fbf6bcc32f5931d1ae93b7201aaec0c07da6d,deleted code that didnt really do anything as there are no default old-style type adapters.
3b3a60d301a66dfd1599c796c7f5b92e93972816,Use new instances of DateTypeAdapter and TimeTypeAdapter for each GSON; this guarantees that the TimeZone and Locale are what they should be
b2d5940a9baf82c6aa796adf710b86fe64fe14e7,"Implemented runtime type serialization for keys and values of a map.
This fixes MoreSpecificTypeSerializationTest.testMapOfSubclassFields"
cebda2b11921bf4f8adf5f36adfaa462b4cd1e1a,"Fixed MapTest.testInterfaceTypeMapWithSerializer. This test for relying on JsonElement.toString() to have same behavior as gson.toJson(JsonElement). However, gson.toJson() skips nulls by default whereas JsonElement.toString() does not."
3f261441651fe6a5f57cf4e6aa655f9661dc606a,Fix date adapters to work when run in any time zone.
2236c95c37e4ac882c20ac080e4ebc68b85b296c,Death to serializeDefault and deserializeDefault
46e65a77c5856d21f2d5e7c90306dbbd894da57e,Convert RuntimeTypeAdapter to a TypeAdapterFactory; this avoids the need for serializeDefault()
4d0775ce8e7eba9b831d6c853aea34bacc66a6d1,Let the runtime throw on circular references
8b21c7770b85dae64fa6da181546a73378158a13,"Use the same behavior in all situations when an InstanceCreator returns a subclass.

Previously we would set the field if the created instance is being assigned to a field of another object. We wouldn't set it when the created instance is a collection element or the top-level object."
2541e658f70bc9928b573c33168075786c7fef2f,"Fixed com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization by changing Gson behavior incompatibly (but more consistent).
GSON 1.x applies different rules for versioning for classes vs fields. So, if you deserialize a
   JSON into a field that is supposed to be skipped, the field is set to null (or default value). 
   However, if you deserialize it to a top-level class, a default instance is returned.
GSON 2.x returns null for the top-level class."
423d18feb562949841f90b2b3cdc75d8f49c7fc1,Revised test to take into account known problems with JsonElement that holds BigInteger values.
bd2a0ac466bd1bb8e5d289b2885df8d5adf2534f,"Support JsonReader API on DOM objects.

This still needs test coverage & documentation but it appears to work!"
9ce9c62b4452f6cc9fbb89058a28abd8cddbafe9,Tests for JsonElementReader
1bb01055f001833017e52d479b608c2a96b665e1,Tests for JsonElementReader.close
6c0566bd220e342364facc29078c6c3f325d5276,"Start using JsonElementReader in TypeAdapter.

Also fix strict handling of NaN and Infinity"
d26c8189182fa96691cc8e0d0f312469ee0627bb,New streaming writer writes to DOMs
364de8061173b4b91f4477a55059f68e765fc3d1,Stream to a DOM
bb7f0b6bb01b0e98e32229cb528772a66a9d6075,"Adopt JsonElementWriter in GSON.
Add setSerializeNulls() to JsonWriter, so nulls can be skipped from serialization. This does not yet impact JsonElementWriter.

One change in behavior: if the only value is skipped, we now emit ""null"" rather than """"."
cf15565243dc20e2b9fb27dcfcd65566fed261c7,Don't round trip through strings
47a36fd0952d8b9a884ad7b2948a93011b4d667e,Fixed Eclipse warnings
1470f20fc040539a6e22232f17eb84330e9ba6c0,Removed unused field
1621011bf21e38d4be4fe78ac89c40bdaf3bc15c,Deleted unused CircularReferenceException
d3f927eb42c9e22d86ba8f729b2b8e5ef05d3fcd,"Pure refactorings:
Replaced DEFAULT_SERIALIZERS, DEFAULT_DESERIALIZERS and DEFAULT_INSTANCE_CREATORS with a single EMPTY_MAP.
Removed obsoleted TODO from Gson.
made ParameterizedTypeHandlerMap.makeUnmodifiable a builder method that returns this instance."
9623e3beadb653872dba46c85de6ad7583b879e4,Updated Gson version to 2.0-SNAPSHOT
9b7b49bf0fa0e33e993ef75ca75c5fe5920976cc,Implement JsonElementWriter.close()
ed2b25ddefa15b571d2c5d4c82506632f694fed5,Don't serialize nulls in JsonElementWriter if setSerializeNulls(false)
349c01e861e645d747fdb954f22d0555b2753e4d,"JsonElementWriter NaN, -Infinity, Infinity"
70abd0ba874054189b3cb0800013ab989712d621,Finishing touches on JsonElementWriter
de835d4dcd27da9bf319e46a9f28c3de998e0e9d,Roll back JsonSerializationContext and JsonDeserializationContext to their 1.7.2 API.
38ce53766ee5c98e5b9aeac58d8db14eca6de8a4,More consistency on serializeNulls: we never emit the empty string for top-level objects.
de727d8c4811209b2fdc6dbfa367f8bb7f78ba4e,Delete dead code found by coverage
01661426f91322bce8bc34842a0283a5add5e0be,"Fix broken example.

Fixes bug 360."
3a3870591eebe007995e87f0ff5fe26253659d82,Tests to demonstrate that GSON 2 fixes some user-reported bugs.
65df3b97ba7352fd1d6afc925b9c30f5067a3f53,"Add a type adapter for JsonElement, so it serializes just like everything else.
 
 Fixes issue 362."
c4a2291866e192d1ed5b97df5c2b6b7b5fa4d747,Deleted unused fields.
5db4caeec5bc538bcfaecefc8ade8b4dafd184a3,"A whole bunch of tests for support for null elements.

Fixes bug 369"
0e02cbb33ec43b301b6835a99db020a2df3c6f51,Nulls are here to stay. Sigh.
b892c859090522526b624ba53b8bd4bb884c2021,Sync RuntimeTypeAdapterFactory to recent internal API changes
194c18d20c6a05c9454ca9e0bc5503f2581ee3ea,Be backwards-compatible for serialization of maps whose keys aren't primitives.
cc5cbe5a1fd8ae6149ecacda472062b4067dd71b,Integration test for long serialization policy.
31964507c1caabc9a70e3270fa56aaee29eff6b2,"Updated SuppressWarnings annotations to Eclipse 3.6/3.7 which is unfortunately incompatible with Eclipse 3.5 (rawtypes vs unchecked)
This CL eliminates all eclipse warnings."
905b7ebccc9b37824ac456bb0bd564ea0045d748,Using single quote in JSON that would be deserialized. This makes the JSON easier to read.
339d3dd4d01a726ca2686c6def4f0a4f9385954b,"The real reason for this CL is to claim commit #1000 :)

Tiny performance enhancement: Reordered type orders to move up String and Integer which are likely to be most common fields."
90c9eadda162e0e9056d8d5137b4c9e0db598f3e,custom-collections
94d59b550ead8ad81259505def3759cf5926c3df,Give a nice toString on type adapter factories to make debugging easier.
290fb69a5093ce13acad3552e95ce536b6318f28,Provide more diagnostics when a constructor fails.
052c9ce0ce7dc0e9c8c98e1902d0fdac97f6af52,Honor our 'ignore nulls' policy when converting objects to JSON trees.
0340e01f98274f2ec573fcd1475fdc3d3fbca4ef,"Support booleans as strings in stream binding. Remove support for interpreting ""1"" as true.

Interpreting '1' as true was not backwards compatible."
c226bd4f3f2d580e75b1a1239f2fa43421a64b8a,Tests to illustrate differences between GSON 1.7 and 2.0
016261d9cfdcab859a674f90c1b53858dee44f36,Throw JsonParseException in event of binding failures like type mismatches.
00946277e84a409f52e99d3af5bf5dd99d581339,Track change in thrown exception.
0ac36805c22209cf736a895466f36d56536b3a8d,Remove an unnecessary cast from example code.
172143df7c37482f8c1d43ac4bff769d40ee5ac9,Removing JsonObject.deepCopy() and JsonArray.deepCopy()
3a3c5b2b1a38e75230af83c7cae33d500cb8b4ef,I'm move Gson 2.0 notes to the sites page.
3e303ef6f70765c3b5dce881780b1e82cd7dcf5a,Excluded javadocs for internal packages. removed company name for Inder.
2cbddbbbc596f29331c37409ec07ecb9c09442b5,- Remove unnecessary catch block
2c19c439057e2025e10109e9c7ebe20b6e4e2105,Adding Jesse's name to the JsonElementReader file.
a92cf394e827089f8a10853ca5d5f0da6c23654c,Fix compile issues found during release.
b900dc4af88c30da98fb6fbc0b9f7d2920230fac,Update maven release plugin.
878314c5b85abc2ed07c121325ab3578da7168b9,[maven-release-plugin] prepare release gson-2.0
65e9215a078c408a25024033f0fe28782180d296,[maven-release-plugin] prepare for next development iteration
2a72d949d050e4013a6eed5da2ce783c1f647869,Update Javadoc to 2.0 part 1
fca0ff129fc39a95e6c6555ae4eafb58ef74afac,Update Javadoc to 2.0 part 2
dbf54866155ffd4d78b3c2efd352a1f1fe4118ce,Update Javadoc to 2.0 part 3 (got the SVN types wrong)
df31d2db16fe9ef85b7152d002880d5546070fb2,Update Javadoc to 2.0 part 4 (got the SVN types right?)
7e760143fdc8b689daeebdee33ad6ea7d0a62a56,"Smash together MiniGson and Gson. This changes Gson to be the MiniGson rather than delegating to the MiniGson. It means that the MiniGson objects passed into streaming type adapters are now fully-capable 'Gson' objects. 

The most notable impact of this change is that it adds several new public APIs:
 - The TypeAdapter abstract class
 - The TypeAdapter.Factory interface
 - Four new methods on GsonBuilder to register streaming TypeAdapters (via Factory, via Class, via TypeToken, and as a type hierarchy)
 - Three new methods on Gson to lookup streaming TypeAdapters (by type, by class, and to get the next type adapter) 

Still outstanding:
 - Write beautiful prose to document the new APIs above
 - Change GsonBuilder's precedence so that both old and new-style type adapters are registered in one lot"
3f5caea95e4dd608f8f16cb687d181d07e066e0f,New (failing) test to demonstrate that we're broken with precedence of streaming vs. nonstreaming type adapters.
777e17c723fa2c87d703326f6bcf1195645893bd,No more system type adapters.
d391584d48ce87a36c88e804711a5f187e0b9086,"Register Gson 1.x tree-style adapters in the TypeAdapter.Factory list rather than in the ParameterizedTypeHandlerMap.

The motivation for this change is to give tree-style adapters precedence order in registration. This fixes the test I committed earlier today, where registration order was not honored.

This renamed ParameterizedTypeHandlerMap to the shorter 'TypeMap'. For type adapters, this is now only used for type hierarchy. We still need non-hierarchy support in TypeMap for instance creators; I'll be looking for workarounds to see if further simplification is possible here."
15402017131ecda3860e8226cf4432667f241472,Remove unused interface
a00c5ff9f135e00baffbc2901f0ef9dac0c8dda2,Simplify inner strategy in LongSerializationPolicy.
e9521471aa0f2fd631a883e3c6b6f90896b6457c,Fix typo: Paramterized was spelled wong.
f777a192ee13fd59048aa7ba640cc8023051c89d,Remove dead code and fold contents of single-member helper classes into their clients.
f89e92aa9fd4c705655dbc0b0584defc996d796f,"Tighten up some of the fields naming policy code. The main thrust of this change is replacing classes like UpperCaseNamingPolicy with the corresponding method calls. Classes like CompositeFieldNamingPolicy are replaced by sequences of method calls. This also replaces unit tests with functional tests.

One nice benefit of this is a 3%/5.7KiB reduction in the size of gson.jar to 184KiB."
f39ac8d946aab1451995cf46875395705c8a03a8,Update extras to build after today's Gson/MiniGson refactoring.
e23973afec37fd1691f87a8c25dc8307c11b97e9,Smash together ReflectiveTypeAdapterFactory and its subclass. The separation was useful earlier when we were contemplating keeping Gson and MiniGson separate.
7def596775df746f3440f40ffdb937ad5f535265,Begin to tighten the ExclusionStrategy code. This replaces named classes with anonymous classes wherever we have a single instance of a type.
4da08b0ec6c35d4d36bf8e91cc402f9fb3117567,"Remove two implementation classes that weren't generally useful:
 - The cache interface has only one implementation. Drop the interface; we can add it back later if necessary.
 - The DefaultTypeAdapters class contains one member class. Just make that a top-level class."
0ff7d980c5430be317aca0405477dec74ab0390c,Adjust LruCacheTest to use the Map API
fed332906debe74d0879c77a03825b66f7970c41,"Create a single, monolithic class to manage all exclusion strategies. This gets our file size within target of 177KiB.

I intend to follow this up with a builder for our new class to avoid multiple-argument constructor calls."
aa2f61b7d8defddc2a78de43b8042178241daedb,"Rename GsonExclusionStrategy to Excluder. The new class is its own factory, which simplifies its caller in GsonBuilder. It no longer implements ExclusionStrategy, which allows the callers to pass in a boolean for serialize/deserialize. This allows us to use one excluder for both code paths. The delegate ExclusionStrategy instances might end up not being shared so it has two lists internally."
d1cee8443f82504893bbf0d79f0b07db2c62dcf7,Whoops! The TreeTypeAdapter shouldn't be public API.
d1de4cf676f669fe6771d12dd220e1a9f8d1a42a,"renamed GsonBuilder.factory() to GsonBuilder.registerTypeAdapterFactory()
revised GsonBuilder.registerTypeAdapter/registerTypeHierarchyAdapter to take streaming type adapters as well. Removed the typeAdapter() and typeHierarchyAdapter() methods from the public API."
3cbe355cb6b1ab5d84ddb75837430c3d9584119b,Test precedence of type hierarchy adapters.
1794182a560588973c6ec131e9c24bd39508433d,"Commit to factories as the mechanism to lookup type adapters. This uses factories for type hierarchy adapters. We keep a separate list of factories for tree-style adapters registered with registerTypeHierarchyAdapter to guarantee that these come after the non-hierarchy adapters.

This drops support for type hierarchy instance creators. I don't expect this to be a problem. We'll also detect fewer errors where multiple type adapters can serialize the same type. With APIs like getNextTypeAdapter, I think this might actually be an improvement!"
1c09e24220471828234fe4e772c00a5668887d87,inlined typeAdapter and typeHierarchyAdapter methods. Added some documentation for registerTypeHierarchyAdapterFactory.
a069f4d88385095e13fb72e9fb4bb6977fa96883,"Added a failing test that demonstrates regression on tree-style type adapters.
In this test, we are registering a tree type adapter for Id but it never gets invoked. Instead, the reflective type adapter gets invoked causing an exception."
9a80d095d9afb3aedcde4c275fb4a8619a5e3a35,"Fix a regression I introduced with the changes to type hierarchy registration. If the registered type was a raw type, we need to also match the parameterizations of that type."
bc68d7293c437fd2e5bbcd4bffff4414b03b74a6,Comment clean up.
7e47f46ac1b6c9c42f12b74ddbf8aa64855d3655,Remove an unused method.
ddde79c861cd2a3f62c33650698942cac1bb961c,"Added a deepCopy() method in GsonBuilder. This allows a web-service to create a pre-configured GsonBuilder and then for each request, create a Gson instance by adding type adapters to a copy.
In TypeAdapter.Factory.create() method, using the term gson to refer to the Gson instance instead of a little ambiguous context."
4c06b013697d06b327f3c537e23181887aeab774,Cache all computed type adapters. On one particularly violent test (issue 375) this improves performance by 77%.
852cd720590c120f23f033f53540a73ac64c4234,"Don't allocate a whole bunch of objects each time we deserialize a map key. This saves 20% on bug 375's benchmark.

The fix here is quite distasteful; I'm adding an ugly backdoor API for MapTypeAdapterFactory to fiddle with the internal bits of JsonReader. I'd like to revisit this sooner or later, but for now I'll take the speedup."
ec42d600af5080d98283db7eac890de16cd43798,"Decode JSON literal types eagerly and with our own decoder.  Previously we relied on Double.parseDouble() to decode tokens. Since that method is expensive, we deferred calling it unless absolutely necessary. Now we decode the literal type immediately. For efficiency we decode the token right out of the char buffer. This makes things more complicated but it saves many calls to charAt().  It also opens up the possibility to deferring string creation."
2da01fb183d56531b21a9b976aed017312b94422,Deleted deepCopy as GsonBuilder should not be designed as a reusable object.
26ab404599643fac25442646b829a65a7f86bca1,Cleanup names for TypeAdapters.
8f8e69a36444022da48d40966549fa9eb78f5751,Add @since tags.
f3c14b4614a6c68291d5d9a38860f9d77bd281a3,Added support for promoteNameToValue for JsonElementReader.
8ee2c24f616b1a3c133611091ef352caceb065aa,renamed JsonElementReader to JsonTreeReader
f602bce9f536df971b8bfa01b7ffb111e2896c97,Nice documentation for TypeAdapter.
756131d869465ac70abb9595653ea967e6812231,removed Eclipse 3.7 warnings.
538b7ca172e31c33f6b7662864b7a516fb887570,Updated various Maven plugins to their latest released versions.
91be944022883646433237e4c1001747fa0ba955,Added a new API method nullSafe() in TypeAdapter that can be used to avoid boilerplate handling of nulls in a type adapter.
296d843afd575a75d7959474aad76ac05afa0706,Implement Inder's improvements on the TypeAdapter docs
d5ed0716db573e5785e55d140ade5ab9a3062410,"Fix type adapter precedence so that last-registered wins (except for tree type hierarchy adapters, which were always last)."
0b734e46e180a452e4bff45878ac60441be6ff74,"Incorporated code review comments from r1061. 
Made nullSafe() an instance method instead of a static method.
Updated code javadoc to match Guava style."
b19e187bdda7765f008e0fcdcb4fd184bdd87e00,Minor improvements to TypeAdapter javadocs to promote the use of nullSafe.
e2e672740a6e58f81924406decba024a239fb8a5,"Fix broken test in registering competing type hierarchy adapters.

I actually tried to replicate this test but got an error ""type adapters conflict"" when I was doing it. I suspect the problem was that I was trying to use 'Object' as the base of my type hierarchy and that class is somehow special."
eb2230caf0c8d1e2d9ea67e7c4afce72f1eccc3f,Fix nullSafe() to not infinitely recurse on non-null input.
61a549b74d0103f6531886e465d4dcedb9ff6d52,Don't allocate exceptions in the common case. On one benchmark this improved performance by 20%.
8e8bf934f905783aa40889ae1bf6f3ff759624d3,Inline the nesting stack to save ~20% on JsonReader parsing.
40cd6601156e3561d3894bee3af1e2170b639fac,Always provide line and column information when a parse fails.
aa5243595135991edefd07201b5967b48808c728,Apply an ugly optimization to save 5% on pretty printed JSON documents. This uses locals instead of fields in an inner loop to save field reads and writes.
d01d39aa26f71fc0e40fecb3ce4b7388cc1f985b,Use locals instead of fields when figuring out the buffer's offset line and column. This saves about 2% when parsing twitter data.
b7c3e0067cd2e69d0f12da7c3318a713c6bdcc27,Avoid local field accesses in nextString(char). This saves a modest 2%.
5acaee4ebcc645c7b5a76a7b37410082e4173aae,"Check in our best Jackson vs. Gson comparison benchmarks.
http://microbenchmarks.appspot.com/run/limpbizkit@gmail.com/com.google.gson.metrics.ParseBenchmark"
dce4e463d95f4fff7cd1808f1d7eafc79ac8eda8,"Apply variable name improvement from issue 385.

Fixes issue 385."
d891661c4ae0eb6856c3a5ebe52687479c5f584f,"Apply locale fix for date type adapter test.

Fixes issue 381."
bb924473172168261d20f3f06ccf0e4bfe88b77f,"Retain annotations when using proguard + gson. From patch on issue 358.

Fixes issue 358."
214234e2029919dd7d25c4a90e2fac825795c022,"Support @SerializedName on annotations.

Fixes issue 347."
2ef7716209043289880d5f1d5bbb9a658b93f2da,Fix a broken Javadoc link to this.
8fcbd57e5922ce05b6116d13420c12413903336e,Updated Export-Manifest for OSGi to 2.1
c01fc5c9352b34024fd19d296c814051d334a564,Fix tests broken by r1078.
4b8fd66c9dd50dd4c848b7ba40a549fbbcc69c7f,Added a test for issue 389
f24da51ca2e47229a403819219986ebf3cd07597,Fix dangling sentence.
a3ca4e13126bcf03449794889df606eb96d026b8,Admit to a mistake in InetAddress' type adapter
b5ae3c945af88a0aa366c55d2717cd350b412553,Incorporated code review from r949
dd9ae67af51f24ac1dbfb259fc11ab500239c799,Test that skipValue is strict on unquoted strings.
b28e518c7e19f5ad1f881144c3651e7c3f9c759a,Hide toJson/fromJson APIs for the 2.1 release.
13c19466215c1d95a65f09cb27a16d1daae9164f,More tests that skipValue() is no less strict.
1c850dc3eab282583c9cab3b5084e5970423c7c6,updated to Gson 2.1-SNAPSHOT
bd937fe7b54392d7c9c7bac591bd813f510f5bfa,A type adapter for Class that throws an UnsupportedOperationException.
82f18a257faafa4501d91003e72a33fdafe85bd0,Implemented code review comments from r1090
2cd3f9707f4494e15ac8f1652a4fbd19ba26c2d4,Incorporated feedback from r1082
d7fbac03844aa86dbb1c65a8ba50ac364c4b2050,Rename TypeAdapter.Factory to TypeAdapterFactory.
8d5de3136ccbdea33b289e373a5bbc06cb0a2d58,Inline character unescaping. This saves ~10% on the READER_LONG benchmark.
740d03ef0eb329dc7d046b903c985704587be081,"Don't call setAccessible(true) on fields we won't be setting or getting.

Fixes bug 191."
6d2cf4a853b7d3f45b90bfb12e7594c60c31d4f3,"Test for excludeFieldsWithModifiers().

Fixes issue 324."
4cb1b88115d1290cacf38436dc3e7ec983e99e5a,"Test for registerTypeHierarchyAdapter() using Date.class

Fixes issue 352."
bcaf56079c25d1bef89394ed1b2e1bdd5aaa392f,Register runtime type adapters using the proper factory-specific APIs.
6ec6caa49da4fb28dcf51428dcb45838d98b7966,"New extension: handle circular references.

Serialize graphs of objects by assigning each instance a generated ID and writing the complete graph out as a list. The output for a cycle of Rock/Scissors/Paper looks like this:

{
  '0x1':{'name':'ROCK','beats':'0x2'},
  '0x2':{'name':'SCISSORS','beats':'0x3'},
  '0x3':{'name':'PAPER','beats':'0x1'}
}

This is work towards issue 137. The hard part is going to be deserializing that back into a graph."
4057b98babf5ecb7ad1583d23a90abe7b7fede12,"Implement all but the most difficult part of graph type adapter's deserialization. The catch is we want to return an instance that we don't have yet. It's on the stack, but we don't have a handle to it because it's inside the 'nextTypeAdapter' who is busy populating its fields."
ecdf9150f6cc820dafddea5b545f456fed47472f,Hide Gson.getNextAdapter() for the current release.
46d2d79ba7bb2bfe17e992689fca369d1490870b,Added javadocs for type adapter registration through registerTypeAdapter method.
498049b3048901ea96715dd2ef8fd5f71027d3d7,updated documentation for registerTypeHierarchyAdapter to cover TypeAdapter.
2177850ba1c65053ac38dd82d34cd75cf4a50785,[maven-release-plugin] prepare release gson-2.1
73d973f1d79fe2a8a2ff492fa821a54c330da963,[maven-release-plugin] prepare for next development iteration
49525c8d6443f1c623f29c40a7df56ac33308589,Javadocs for Gson 2.1
6c78bf5247828219d4383c1b5dd13d494fa65cec,"made toJson/fromJson/toJsonTree methods public in TypeAdapter.
made Gson.getNextAdapter method public."
caf64dbf55f6de7ec7e32a3a57d663b99ca08db1,Remove Javadocs without proper mime types set
c4ea9a3d87f4d3098f9c614afe5fe42a3e6c2138,New Javadocs for Gson 2.1.
641590b5b66d379597d120eb0488a041e6ef9c8c,"Fill in some gaps in ExclusionStrategy's test.

Changes to GsonInternalAccess should have broken exclusion strategies, but didn't. Adding these tests cause the expected breaks."
323dfa0af5401130de9f4278593fcacb9e5cda1c,Be strict in TypeAdapter's toJson/fromJson methods
796a3812791d3d2ac3d70c63f0d02a04131fe5b4,Kill GsonInternalAccess. Clients to this were all broken because nobody was ever assigning INSTANCE.
d4a1e49e463091ed3793930815fde75bb766d030,Delete some obsolete TODOs
6cca23c172612aded9ee2996a5177cb7b9a84390,Get GraphAdapterBuilder working for serialization and deserialization using InstanceCreators to get a sneak peek at a value under construction.
bb8dca71c4dd7a69d3df17418d337bdab81c7877,Restore ability of instance creators to create collection and map types. We inadvertently lost this in Gson 2.0 and 2.1. Nobody noticed!
efde6674e19612241740f8775ad5011f84b84c24,Test that GraphAdapterBuilder works with collections.
2e6b22fa2ef077b630edb36292e002823a54cfab,Test that GraphAdapterBuilder works with multiple entity types.
a0afec71fff2e36827e83351bded4b4aae281b87,Test case to demonstrate no such crash as reported in issue 408.
dd86d63436c5ea9d90df52af049e82d25461d19f,Use inner classes for BigDecimal and BigInteger type adapters
7b75efd09ecc1aeb0b5c7a020d9cf17b5dad8bad,Write some tests prescribed by missing code coverage. I found a bug where our nonexecute prefix code causes a problem.
f40ac23e882ac4cce830b38a027c4cb255c3a8a0,Write a test recommended by missing code coverage on TypeAdapter
5c978948a0ffc7f62fa61aaf0d5037b55b0b89fd,Remove some dead code.
2c8bec27d48d0d9ba9d99ff5fb7a9bae36906c48,"Permit multiple top-level values in JsonWriter in lenient mode. Also fix some cases where we don't throw the right thing on a closed JsonWriter.

I'd prefer to not support multiple top-level values, but we support it in JsonReader and it's easier to be consistent. Kevin Hayen's patch pointed me in the right direction here, but I needed to do more work to cover some of the edge cases.

Fixes issue 397."
15e7819e9ae424a33aa747030320a268f62b1d28,Fix testStringEndingInSlash by fixing nextNonWhitespace to always return the character at buffer[pos-1].
ad3489f557d951ebd4574d04adf4b0bb4108d05f,"First steps to StringMap, an alternative to LinkedHashmap."
751c69c655c9317a7169e24e452d3931ec956761,Support null values in StringMap
4c629347da72dd07610ebce89a1ec32bcf79ced6,Only support string keys in string map. This rev passed all 655 applicable map tests in the Guava collections test suite.
15c2ae7548317a9b21926b63fc4c192a65258e22,"Updated map subclass deserialization test to illustrate a failing condition.
Gson currently uses LinkedHashMap for an instance if a Map subclass does not define a default constructor."
14ebcc4ead0b0714fa3dd5c1af697cee8013b94f,fixed eclipse warnings
5e3f5a6bbecb6a83bd1995621bd4e8131943e8a7,"Ensuring that the hash is unpredictable and well distributed.

We achieve this by using the same algorithm as the Perl version, but this implementation
is being written from scratch for license compliance."
9be0fd9ecc91ba0eacf885faeec5f3d1d82fa99f,Make the BigDecimal and BigInteger type adapters user-overrideable.
72640e773bd4446f4045fcb13ebf31e9e6576508,Updated version numbers for various maven artifacts
c890e31bbabba840c41fb2cce6c7451ecea37d1b,Simplified pom.xml by deleting plugins that we dont use.
a991e54157f694d603c013f05e8870ba5e49c78f,"Make fewer calls to out.write() when serializing strings. On one Android test, this improved serialization time of some documents by 83%.

                                 TWEETS                              
   run          vm htmlSafe   ms linear runtime                    % 
Before app_process     true 68.7 ============================== 100% 
 After app_process     true 35.9 ===============                 52% 


                                  READER_LONG                         
   run          vm htmlSafe    ms linear runtime                    % 
Before app_process     true 439.0 ============================== 100%
 After app_process     true  74.5 =====                           17%"
6d351fea073bf0795dfba4ff8fc88f9557ca8979,"Fix a documentation typo.

Fixes bug 423."
7b61e784c0c55870225637de639f43fe71cc2492,Remove testParameterizedMapSubclassDeserialization that never passed. We'll eventually add an equivalent to the extras/ package.
3df2db1f1696c49dc01d1e8a60073e5a7f39a999,Don't permit a type adapter for String to be registered.
392f29e859c198ad489f790f494352e13c1473de,"Include protected members in Javadoc.

Fixes issue 430."
83e5a4937cf13ab9b94a7bb12ce2fefa168752ed,"Renamed Gson.getNextAdapter to getDelegateAdapter.
Deleted testParameterizedMapSubclassDeserialization which we decided to not fix.
Added simple tests for getDelegateAdapter"
7a5cef93050be46ca738c6589c067b78ee79fd78,Revised to the new name getDelegateAdapter.
1492dd7d36d8151673e2d266dc28425db5ecd727,Preparing for release: updated export manifest to 2.2
7129115986842237ac93db1a1bfa8d61dc13e439,[maven-release-plugin] prepare release gson-2.2
61257f9b1ca804026d552fdafe3e955a5f6fb29f,[maven-release-plugin] prepare for next development iteration
96a0fec6a11cf0a92deb7ceca7093193cb404e8a,Gson 2.2 Javadocs
e9b576c456fca4982cf4fc91d6cf9b7c41c1f7b8,removed unused import
90c6b29f4dd2b46e37ed73f64f8f3bc4422ef457,revised to 2.2.1
ddbd0dff222d7ee31bfe8c2a18ba5cc8d6925317,[maven-release-plugin] prepare release gson-2.2.1
34a93c4049092e53dfebfa2a8a3592f0ca6e4468,[maven-release-plugin] prepare for next development iteration
7b329df3517da702c6f02f51acc2f7cdf1dc6cee,2.2.1 javadocs
c3ada66749870df16fc549a16efe1905f2ee7989,
dc4e43bb237c3878d12902e562ac352cbf463333,"Permit users to define type adapters for primitive types and strings.
 
 Also expose an API to get the field naming strategy."
1c7aee40f3d0d6f50b3d149e94a2b3b4627ca8a9,Implement Flushable.
582b0a0c9c1894f04b476ea11bc181405e61303c,Fixed issue 443 by relying on Streams.parse() to return a JsonNull on empty documents and throw a JsonParseException otherwise.
6575cdebca64244f400c86989a5b4957eb49d773,"When EOF is encountered prematurely, Streams.parse() (and JsonParser) now throw JsonSyntaxException."
ccaf531b36cbd615afc1bdcac01e21cd9c2de415,Updated version to 2.3 in Export-Package
ae9e63fc542dce5e1aedd461f36b1028392156fe,using ${project.version} in MANIFEST.MF instead of hardcoding version numbers.
4816941f0d76f2dc5d5b0b7b5fb3206d6fef641d,Address code review comments on r1154
b946a229b615d7a8d5cec9ce11e4abf249c548bd,deleted unused field.
f412d7ede28d57a0a031e2772acba8ad3d434de1,changed version to 2.2.2-SNAPSHOT
66cb689aae8c1c5112921ad7769a904cec3f47a9,[maven-release-plugin] prepare release gson-2.2.2
33de25f9fe5da644d4351876c8fb5d0ee250fe44,[maven-release-plugin] prepare for next development iteration
b36bedb4232cd4a43ec6983df806043d617356d6,Javadocs for 2.2.2
4aaa4bf20c43807ee78ab7e58e2e430e195647f8,StringMap was suffering because the string's hashCode was not cached. Address this by preferring the regular String.hashCode until hash collision problems start to occur.
f406d3cf89e23f87a100e9a6cf46bd9aae6823fa,Don't fall back when we're already in the slow case.
982c893d65894908fe020ac7f989b0b8b805aa34,"updated extras pom to latest plugin versions.
updated organization names for Jesse and Inder."
42e35e9f90bcc1745191c419b120eb3c724e49bc,"updated oss-parent version to 7 in gson-extras pom.
fixed some eclipse warnings."
6aad250f472171e94093193e1d05c85938d6f043,Initial creation of the codegen project
8cc703ed210b3729e106457d7b6de1ea80e3f97f,Added Gson dependency
3be354eb76e075ca5e81e911f9f3bd51c046da0c,APT hello world. This generates an empty class for each class annotated @GeneratedTypeAdapter.
7d901d34fb18ca44cdb311a75442d71e4140797b,Beginning of a simple test related to codegen.
35c13173b0c509fd7088566fcc8f75473d5a3b7c,"Switch on ints rather than enums in JsonReader.

Using enums was triggering this Android bug:
http://code.google.com/p/android/issues/detail?id=36349"
1a4f690335ae1129620079c4b5587a7261206c12,"Regretfully enable serialization for StringMap and LazilyParsedNumber.

One of our favorite users (my employer!) is stuck in a sad situation where they need to serialize objects returned from Gson; this is a workable escape hatch."
9c4b23b39ad8bb0e42b0b3324a929bbb8b52158f,JsonObject.deepCopy() for Gson.
c5c65ba62601524ab09d7aa317689117676f2d4d,"Add an experimental rewrite of JsonReader.

The motivating difference is that JsonReaderV2 tries to read each character at most once. This means that when it reads literals, it also attempts to decode them to a keyword (true/false/null) or a number.

This change also _doesn't_ read strings until demanded to do so. This should permit streaming access to strings down the road.

This code is not yet complete, nor is has it been properly optimized. And the implementation is also quite a mess! It is a work in progress."
46b4346505d85885f2dee28b24d4d2d15190564e,"Get JsonReader2 to the point that it's passing most tests.

Still missing: 
 - non-execute prefixes
 - rolling back 'pos' when a double fails to parse
 - octal prefix failures"
97cb326ad24a62cde7db357b176d2f8ad2637962,Delete an old version of the rewritten JsonReader
b96d2d983793ee6c70f059936cf95f325519ca7a,Support non-execute prefixes.
553fa6b742ef6c00f04465c401c7cc464a6f9ea0,Prepare to replace JsonReader with JsonReader2
e7bfd0c97d2196047bad996b6625d3bb197aae13,Promote JsonReader2 to be the main JsonReader implementation.
085856c12843a6b58d6de59672d37da47afdaa72,"Don't leave the JsonReader in an invalid state if nextInt(), nextDouble() or nextLong() fails. We now save a reference to the string before we parse it, and keep that referenced value if parsing fails."
c7cb503cdb093cf7bb78afdfe125dd2255f029ad,"Restore fast skips.

    document            api      ns linear runtime
      TWEETS    GSON_STREAM  397568 =========
      TWEETS      GSON_SKIP  300058 =======
READER_SHORT    GSON_STREAM   76632 =
READER_SHORT      GSON_SKIP   57796 =
 READER_LONG    GSON_STREAM  894690 =====================
 READER_LONG      GSON_SKIP  565114 ============="
4c2980e6ff798f3209f00292ead5060c402d9774,Fix a bug in integer parsing.
448063dde142a07e07f13b017bc9844f3555cf74,Fix a goof in number parsing.
b0a172944afe21e6986bfddadc43daaa1127bd41,More number parsing improvements.
bdf2cac6d4a5c18cf3462330eefd8e7c57990e81,Replace switch with if/else when processing whitespace. If/else is faster!
980796005ff96f88a009822eebaba3eb8339051e,Use a conventional for loop in nextQuotedValue() to make hotspot's job easier.
46b73632b0f7591ef1328ee7ddd1e883916fec1e,Fix a bug where we weren't reading enough characters when a BOM was encountered.
8daf3aaeb4fd072d45df334dd8a6009be734c180,Inline position computation. This is uglier but faster.
3920d95fac0520c288e6b5f626ae0724a32f49ca,rename peekedInteger to peekedLong
b3b919770bd6e1aa14abc9ee1a1406af251e1d1c,Change number parsing to use one big loop. This changes it to return JsonToken.STRING for very long (>8k digits) numbers.
8df7209074ace5268f9bc0195a0245b4ef7c7ea9,"Fix cut & paste issue in JsonToken Javadocs.

Fixes issue 463."
a973837dd4027cff97b863797618ecdc56cde2c3,"made deepCopy protected to eliminate it from the public API for now.
It will be in the subsequent release."
411c5c0b502401c7af381a64e94253972b7db5f2,Follow up on r1197 and make deepCopy package-private. We don't want to use protected because some of the classes are non-final and protected shows up in the Javadocs.
d1ff7bb397d10ab60136ebaedb5db9c7009cbeca,Deleted spurious directory gson-codegen. The real codegen code is in trunk/codegen
680bd75a858a46d81e334846f8d000369cd85306,moved code from gson/gson-codegen to top-level
084047d80b582317f382536604373cafa14583a4,"Reintroduce string pooling in JsonReader.

This makes Hotspot slower. From my before/after measurements using ParseBenchmark, times in microseconds:
  TWEETS: 350 -> 370 (+6%)
  READER_SHORT: 77 -> 76 (-1%)
  READER_LONG: 870 -> 940 (+8%)
  
But it makes Dalvik faster by a greater margin. These before/after measurements use times in milliseconds:
  TWEETS: 25 -> 20 (-20%)
  READER_SHORT: 5.6 -> 4.7 (-16%)
  READER_LONG: 52 -> 47 (-10%)
 
 It's a net win because we're saving a greater fraction of time, and because we're helping the platform that needs the most help. We're paying microseconds on Hotspot to gain milliseconds on Dalvik."
93e38901df0cf08496955b74ba6b26e19a104202,"Draft of LinkedTreeMap. Its ordered like a LinkedHashMap but it doesn't do any hashing for DoS resistance.

Not yet adopted in our code.

Known critical bugs:
 - throws ClassCastException when get() is called with a non-comparable key
 - throws NullPointerException on get(null)"
a6ab854302bf2398ed221afe7aefd0c717b5d1fa,"Fix a bug where we were unlinking nodes that shouldn't have been unlinked.

Found by Guava's awesome collections test suite!"
01bd0d92e2838d3a42cfa322dc406f6f0a5f8483,Tests for LinkedTreeMap with incompatible keys.
a0493b9732636879b4d06538787f74e2757cd92a,"New code that can split an AVL tree into two AVL trees.

This is in preparation for a new feature where LinkedTreeMap will have multiple roots, each in its own hash bucket."
aceadaecf18cf7ad011ae3040aa3fe570559902d,"Add a hashing layer to LinkedTreeMap. Instead of having 1 root node, the class now has several root nodes, one for each hash bucket in a hash table.
  
Compared to LinkedTreeMap, this is slower for small (size=5) maps: 124% slower to get() and 33% slower to create and populate. It's a win for large (size=500) maps: 46% faster to get() but 8% slower to create and populate. And it's a big win for very large (size=50,000) maps: 81% faster to get() and 46% faster to create and populate.

http://microbenchmarks.appspot.com/run/limpbizkit@gmail.com/com.google.common.collect.MapBenchmark

I'm going to follow this up with some simple optimizations: caching local fields and simplifying access. That should narrow the performance gap."
2fef83799de82f67f2124908e982c773c49a6153,"Optimizations and bug fixes for LinkedHashTreeMap.

The most interesting optimization is to replace ArrayDeque with a manual linked list that reuses the nodes 'parent' field. These optimizations save about 20%."
c950d2846034e853936fb087e724a721fdd983ae,Followup to r1175. Use the same copyright holder for all files.
14f16e2d0c3c60338d69a3e0f653b8b876fdc1be,Adding Red-Black Tree implementation and tying it into the Gson bindings.
c25278b4d6036a0e0ae758b13194813936d9e911,"Created an alpha package that holds experimental feature.
Added support for JsonPostDeserializer that allows you to invoke postDeserialize methods on an Gson deserialized object."
714ac8e64399eb156abc4ce3e517185c098fb7e6,added tests for using intercept in fields and lists. These tests are currently failing.
fd4fbe41322c39329245b6a1311ae42bd10827ad,"Added support for collections, maps, and arbitrary depth of type adapters for Intercept annotation.
Added more tests for the features."
22c835f2bcd5ee39fd58556e01324f334c5f0cb7,Fix compile warnings
1e18dce002158992bbda1d3a19952fdf07f308f4,"Don't subclass ThreadLocal.

This attempts to address issue 402, wherein subclassing ThreadLocal is pinning a reference to a class, which transitively pins the entire application in containers like Tomcat."
af4879dbb782bb13fd95e3b406a55d80272ddff3,"Move interceptors from 'alpha' to 'extras'.

This makes the feature less risky to use! It now uses our
TypeAdapterFactory infrastructure rather than relying on
parallel infrastructure."
040bae34d701172375e5aaef7492a5782933d46d,Allowing instance creators to be registered with the raw type only (without specifying type parameters).
b4d51db776325cd0da58d96d973175dc1b86b256,"Add a test case for a problem reported on the group.

https://groups.google.com/d/topic/google-gson/EBmOCa8kJPE/discussion"
6d90f0d894c468bc2f5b1e138ef21174ae644a0b,Make JsonElement TypeAdapterFactory a type hierarchy factory.
b0531e1649843ee68475c13a49f91585d2881d67,"Ensure ""excluder"" is added prior to user defined type adapters/factories.
- Added test expose bad behaviour."
3f2efac95ef6575e33a7b4c9052d00afe1b83bad,"Stop blowing up on a null key, but rather return that the element is not found."
84201c015fae7aaa34744074f6b7526ff0c5112a,"Do not peek during a ""skipValue"" if a value has already been peeked."
e5b9b8eb81365c8986b2d0d0c8a64878cf4a1d07,Minor addition to the JsonNullTest.
6dc6b4be9208221caad81b52aec665f133b5e9af,Fix object leak from ThreadLocal.
5af92f173688f5f0bacd67761fd1139501b958e0,"Additional changes to a map test with ""null"" string key."
edf326e7565b4f61caadb7cbb18b24f070a55e13,Tag member fields as transient since a LinkedHashMap is used for serialization.
6a69c603c0686e20cc71d73689080dc9e1239ab8,"Permit serialization of ""Class"" fields, but only if they're null."
63142f621c42817c9a0a948106151bebc11ea8ce,"Use the right method name in error messages.

Fixes issue 498."
7d53113ebc9ef6921c6238f013aabd10890611a0,fixed https://code.google.com/p/google-gson/issues/detail?id=509 by adding construction for EnumSet
af6aa5f782dcfc38a060d2de9476337e14ffedcb,Use the LinkedHashTreeMap instead of LinkedTreeMap and delete the LinkedTreeMap version.
edd6c19670b7d56700b2093071122a0015c06e95,deleted unused enum and reordered imports
c22ab9767d06be976f593927d920dfe371ab7db6,fixed https://code.google.com/p/google-gson/issues/detail?id=491 by adding OSGi entries for maven-source-plugin
83e1f4565362bee14544dfd6c25fb930f0b25073,Re-add non-comparable key tests to LinkedHashTreeMap.
70f9280cb64aeec323a8675871579687ab66f9c6,Remove usage of StringPool as it appears to slow things down and avoid Java String intern for the common cases.
26016ca66e8cb76ada0a01fa9420a88a8d346f68,"removed eclipse warnings, unused fields. Made inner classes static where possible."
a3f11150cc1110289d65ce121701374ccf6948a1,removed more eclipse warnings
ae034b5ca2498026f1b8cf31bc54ec884e55d7b9,eliminated eclipse warnings by adding a default label to switch.
6f0a6a4662c2cc692faddacd3f59fc3addc01a68,made inner classes static and final
6347e9b9c60b01eb397823d546b29f13c817e0b1,ensuring that LinkedHashTreeMap.contains() returns false when non-Comparable() keys are passed to it
16a21719ffdfca2a3ffd6dad1ceddf95a0b7ae89,updated maven plugin versions
f002374e22c74e7fefce634d32c13d0c6394c74a,[maven-release-plugin] prepare release gson-2.2.3
d831f42168e269e250ead6358792969f12d5cd79,[maven-release-plugin] prepare for next development iteration
93041211d1d54f62f3d12a2b35194d68b1062075,2.2.3 javadocs
8e8bb9c688c0ca3ba0d9ca5ddb594093eb8c8f0f,Added test for comments inside a string value.
b88e0e9395fd153deea35272bef5c968fcb863a7,Test to expose edge doubling and rehashing bug in LinkedHashTreeMap.
7c9fd53c78a604e21c89e426091e3a0c219d9c58,Fix test that expects an exception to fail if no exception is thrown
f29d5bc37b52c4b8d2ad15a10bb0c7f684c1d45d,"Create a LinkedTreeMap based on the LinkedHashTreeMap; however, removed all the hashing from it as resorted to a single tree. The insertion order is still preserved."
e4508227c53749b48318366c1272119031851887,Added test to use BigDecimal to parse number when requesting it as a long.
3f4bc4cd10a0fe746793f5974a4592fa32a9b8ac,Remove unused import
2d5cab1b7b1f2845954f851106c138137e91bfea,"Fix hashing in LinkedHashTreeMap, but it still does not work :("
88343438615a4ed983f3b74f53e8411d7742097d,"Moving broken class to ""test"" package for now and disabling broken test."
b378548c5ce10530d17925d45ccafa9a6c03c3fb,[maven-release-plugin] prepare release gson-2.2.4
6f19060e1410ce3093caa979ee5481e659c04e8e,[maven-release-plugin] prepare for next development iteration
d2b660570e1a68653e02de210b0c1221616127e9,2.2.4 JavaDoc.
1840466704210c3c6c2d1d0bf06d1ff88c19c08d,"Fix a nasty bug where elements in LinkedHashTreeMap could be dropped.

The underlying problem is that the doubleCapacity function would drop the parent links when all nodes ended up on the same side in a doubling. This was caused by the fact that the AvlIterator was destructive on parent nodes, and we weren't putting them back together with the AvlBuilder. This removes an incorrect optimization and fixes the problem.

Also move LinkedHashTreeMap back into main from test."
2b95a4822bbdb404fd6241186225976fa281eb58,added distribution management section to pom
c235aa0c1b0b05ec9affcaa6828e0dd095e35e3d,updated the id of the sonatype nexus staging repository.
eb817e307fc1e2eebe7b9d5d6ad9b7cf860ef6d5,added snapshot repository in pom.xml
b52f692ffa6bdd3a6c9305a8af8c385908346be1,update various maven plugin versions
c3d0f200b352f411b9ebe45c3bf49d4328b2c51f,Fixed a bug where an inner static class was incorrectly marked as non-static while creating parameterized types.
b2a9d872dba1fb3bde57421b7b953f666cb59df4,deleted redundant and invalid precondition.
7c97ac2944748ed2d609821f41e3f3e33e0c73b5,"Updated Gson version to 2.3-SNAPSHOT since this is a new feature.
Added support for a magic field GSON_TYPE_ADAPTER in a class. This adapter is automatically invoked if present.
The field must be present in the class (not in any super-type), and must be strongly typed as TypeAdapter<T>."
67d512ee7db6eca139622591cd7ea5e46fa39c01,Created a JsonAdapter annotation that can be applied to classes to indicate their TypeAdapter.
bf549f0589105a42f159c78a621fc28087561d16,Added support for JsonAdapter annotation on fields
b9998e511f3a3c19d52c104d66d78037eaff88ec,deleted support for the magic GSON_TYPE_ADAPTER field
eaaa2a1b4f7daa7cc5c0485fba77bfe58e1ebf75,added functional tests for applying JsonAdapter annotation on Fields.
f88eee094c2fb5d3b43509ef42f72b345ff00883,removed some eclipse warnings
67af0dd8f860b3997ed039e00062e3eb8ddd5a3c,"Added javadoc comment in JsonAdapter explaining the usage for fields.
Added a (broken) test the ensure a field annotation for JsonAdapter supersedes a class annotation."
0922af5be609ff6d5559c0b534bc10cc78bd925c,removed invalid imports
e280ffd7e2fe14140c9478a546c6f074cf089a13,"Fixed broken test to ensure that a field JsonAdapter annotation supersedes the class JsonAdapter annotation.
Added a map in Gson to keep track of TypeAdapters which are generated by Gson."
6e8d3cd65e2777da196513d91b796d3e03e203d1,Created threadsafe implementation of JsonAdapter invocation. Also fixed a bug where runtime generated typeadapters were being carried over from a toJson/fromJson call to the next.
7f6a0960300792f47ee6c153595e0681ea07cd91,renamed JsonAdapter annotation to Adapt annotation.
edf66083e6245abfab4a85dce03c0bf79a66f474,renamed @Adapt to @JsonAdapter
c53e2551058b445b6adf5bc588456c2b33548e28,Fixed typo as mentioned in issue 565
b373c20136eae1a821b173d106ed6c222f87fb13,Fixed issue 552 by documenting when fromJson returns null.
14ba59fa8858126dbe0c3e645a84c7de3bf2361a,code review fixes. Moved getFirstArgument() method from $Gson$Types to GsonTypesTest.
a411a766f7b3ea2c82cbd22e64efa6cee0ce9f2b,Leitch --> Wilson !
c6752fc47ad0268480a5ef49fc6cbd485447ce23,Fix inverted docs in ExclusionStrategy.
9bbdcac5a82600f30b1f1d1d0de27db936d3bd55,Fixed issue code.google.com/p/google-gson/issues/detail?id=353 by adding remove and contains methods in JsonArray
06282a4d136b2603b923b10b69f7a5e5216ac6f6,Fixed issue code.google.com/p/google-gson/issues/detail?id=353 by adding set method in JsonArray
94e21eca211c9af260a6a37c24a6052afc139001,renamed JsonArray.contains() to has() to be consistent with JsonObject.has()
b9578a4d7e91a50a10dc49ddda326bd9cfc3a1c8,renamed JsonArray.has() to JsonArray.contains()
80bbf4a85a9ea8123e40bcad48482156e1f73b3a,revised JsonArray.set() method to return the JsonElement. (thanks Buchholz Bastian for catching that!)
fbc7e69c81b5635e6488e6b366f6bdd31cec8d15,Implement JsonPath in JsonReader.
f9a302e22a24c5a6a58f582bdaf80e7df7bc904d,incorporated code review feedback. Added a test to ensure JsonAdapter validation doesn't carry side-effects to other fields
125e6d9d3d42516de6b6797be8ef0c59e6360512,Change field annotations to take precedence over registered type adapters.
117d8ea68ff953a271c492736ba3eed3bb209da2,Add TypeAdapterFactory support to @JsonAdapter.
6a3e83a741f543b9bd39d35d46b5d4e60f09ff11,Javadoc for TypeAdapterFactory in @JsonAdapter.
f1f838cf2030bdc057ef08ebafce08221bd306cb,"Favor post-Gingerbread instantiation mechanism.

pre-Gingerbread is now a small subset of the Android OS distribution and is constantly shrinking toward zero."
f4185289f64a703b5c696d8f44a17f26bda7f00d,Correct TypeAdapterFactory reference in its Javadoc.
c5dc3b791b2beb3950fd121b20981b87009a263e,Correct JsonElement javadoc exception references.
192e32d430f30b726321b9c0ed816f5420aaa3ff,updated maven pom for Java8
cf894f3d58bce2d0aa6d0a09ae0491bb82de1cb3,[maven-release-plugin] prepare release gson-2.3
85e2d1901c5456b0d93f8eb2ff42166f685de58d,[maven-release-plugin] prepare for next development iteration
c6eced6d879bcdaaf936b11a2d2a8fe81be15632,javadocs for 2.3
ea17ccc651bdf122e8946240610b9372696ed820,Restore missing fails.
6580921f9d6f399a6bc20355d83aea60168d8d5c,"Use a version range that works with Maven 3.0.4.

Fixes issue 588."
7f8f490fdc95fb087e735dc582a2af07cee46078,Re-order factories to allow @JsonAdapter on enums which are user-defined types.
f2591b666419e06017b2327f7729440c122bf675,adjusted factory finding code to take into account non-present factories
d6c8c1e3cf6749258e3f98d2bc03c973385e31a7,Fix bugs in getPath() with arrays of objects and arrays of arrays
e652ec0dd9b37a9c68173b650bad3ccd62619326,revised a test to validate that we can query a delegate adapter from typeadapterfactorie registered in JsonAdapter
60b2370c74e65fa5a0a89e18a95428ee19dfc363,added a test for RuntimeTypeAdapterFactory using JsonAdapter annotation
84e3442eb08fabd09ea69722951471b49d765a64,Fixed issue 582
1de2ace065963ca1d9d3715b92743f706bc35659,removed eclipse warnings. updated maven plugins to the latest versions
b6a625fb6cb7e46a01938fef79ac6ea26c93a8dc,fixed issue 469 by adding a TypeAdapterFactory for throwables that ignores cause if it is self-referencing
8d5a41329ec2f4db3aed02c20d379baf92840b37,added tests for Throwable. Revised ReflectiveTypeAdapterFactory to ignore self-referencing fields.
eba6825a38c843d73179b6ce69fee3e0175f5cb3,[maven-release-plugin] prepare release gson-2.3.1
c3d17e39f1cb6ec41496e639ab42f7e7cca3b465,[maven-release-plugin] prepare for next development iteration
33e74101e59d41740a41eca487a3a2a819af5370,javadocs for 2.3.1
1d9e86e27c97cd85d898104b4ac42bb487d0d7d0,fixed extras build
255f2e2847d133a751a2dd5a4bd16d048333cf75,added a sample Date type adapter for UTC
0e3708be82830ab1862cc8c752e9efa841e0fae7,updated UTC type adapter to support JDK 1.6 using Jackson ISO8601 parsing util
f0f9ce42f499a3f4eccf53ad0bc2470cfef08a6d,using only Jackson iso8601 implementation for UTC date adapter
0c3b9670f0907e36a4fcb435410dfad62873693b,Ensuring that UTC date adapter serializes nulls correctly
7d96ce8d6d53db959664453e91d5b457f78dca86,fixed tests to take care of stackTrace element appearing sometimes
fdaa6b05c4b418b567d33041c07f9d14b8e45dfe,ensuring that the type field is written by runtime type adapter
62b9428fbddc9f3dcb247e89201b7fc522c01a4d,Create README.md
1fb33e427ad3d50ea5d9c3f44d86bc49b26b3d5f,fixed links
fad12f85d4b71f29c26151c63f4fb5ecc0c0eba6,fixed group link
93f81c53c9ad077b3fe3d9dd91a293d3698353ba,Correct 'user guide' and 'design document' Markdown links.
25d07cc54a42cdea03614f14055f4253a940b36e,"Merge pull request #634 from google-gson/fix-readme

Correct 'user guide' and 'design document' Markdown links."
2cac11b44984640ffa2ec5cccae0c8643b5bce92,added license
299ee89852f8e3ac510a939a2583515a6f1c3e87,"Add tests to demonstrate the issue

Run the FieldNamingTest with the JVM options: `-Duser.language=tr
-Duser.region=TR`"
6e57df7e9648f4a48b500ac9a181a058829bcee1,FieldNamingPolicy: Use Locale.ENGLISH to be locale insensitive
032847976c0cba7c131e95aa6608882987f1eca8,There is no I/O writing to a StringWriter.
e8e8b557d2d81cd01e3d7a91e67752a859b232e6,"Merge pull request #657 from google/jw/no-io

There is no I/O writing to a StringWriter."
cd38056e1f18c0e06a5a58ee01eed39bb7c125e1,Add Travis CI build.
23288eb36398648c7016705c5985c7a9fabf53c6,"Merge pull request #658 from google/jw/travis

Add Travis CI build."
e914de082ba3305879d71864e1b69fe9c2f9c61d,"Add gitignore for Maven, Eclipse, IDEA, and OSX files."
fcfd397d6fcbd4dd056625a0200ac6b2190520e6,"Merge pull request #659 from google/jw/gitignore

Add gitignore for Maven, Eclipse, IDEA, and OSX files."
82edd57205fe48015f81b2986f27856cb9f7fb29,"Add a JSR-305 @ThreadSafe annotation to the Gson class

- Add an optional dependency to com.google.code.findbugs:jsr305.
  The optional scope is used in order to avoid introducing a new
  transitive dependency to the jsr305 library. This is fine because the 
  @ThreadSafe annotation has only a documentary purpose and it is not
  retained at runtime.
- Annotate the Gson class as @ThreadSafe

Fixes Issue #613"
bb34247cc4283b91ed657238a37744eaa1b0f3e9,"Merge pull request #664 from ferstl/issue-613

Add a JSR-305 @ThreadSafe annotation to the Gson class"
f7abd59a3b349d5c926507705f439afff54ed301,"JsonWriter#jsonValue writes raw JSON values.

Add a jsonValue(String value) method that takes a raw JSON string that
can be used to write the string directly to the underlying writer
without modification.

The intended use case for this is when building JSON that contains a
pre-serialized JSON string as a value in an object or array."
8e570ee3a2b5dc637c0fd270e09f67e72de35f83,"Merge pull request #667 from adamtanner/json-writer-opaque-value

JsonWriter#value supports opaque JSON values."
457541611c0f95979ab6b9227fc688730439f2d6,"Replace localhost lookup with static IP to fix test.

Calling InetAddress.getLocalHost() will cause a lookup to occur that may
fail with a java.net.UnknownHostException if the system the test is
running on is not configured correctly.

This is often fixed by echoing ""127.0.0.1 $HOSTNAME"" to /etc/hosts, but
in this case it seems easier to pick a static IP string to avoid the
lookup entirely and prevent false negatives in the test."
2b67815808defd74e84195cb70e9ac2afac45664,Change references to Google Code to Github.
31ea72a29f5aaf2fc3d59eefbf72d5eb68c8b176,"Merge pull request #670 from adamtanner/release

Change references to Google Code to Github in pom.xml."
6960ebc77684dd07125e39caefc140262b1fb76e,"Updated JsonArray to support adding primitives directly via an overloaded ""add(...)"" method rather than having to always do ""add(new JsonPrimitive(...))"""
d8c12a727f465fcdc55fb5e25890b8b868db49e7,Fixed accidental duplication of null elements
374e5b0aa5a22b2d737f653e13099f36531ae028,Added test ovr new DOM functionality
a67ca052a3e71f1d1f5db52f374cff5758ec550a,Added test for mixed primitives
5cf82a573f78e587f44c58ccd9b84679d531bfd6,Added test for nulls
d805f221668989d63c3c0e70bab678f0fb80ef5b,"Merge pull request #669 from adamtanner/inet-address-test-failure

Replace localhost lookup with static IP to fix test."
24eec9428bbd2a6f24b36b8a216ca425b8b5252e,"Merge pull request #671 from ownaginatious/master

Support for adding primitives directly to JsonArray instances"
37d00c268d97b08c2e28cb0c4670733177729751,Readme points to the new homepage at Github
77e31ed999bfe49aac9981dc661a64b5bba41986,"Merge pull request #674 from vogellacompany/master

Readme points to the new homepage at Github"
1867457030d3c149566e95a019033cce4ff3cf90,fix #680 - make RuntimeTypeAdapterFactory null-safe
f0bf15eb7a687077222aaa8012b0345b6efe125b,"Merge pull request #681 from lcoote/nullSafeRuntimeType

fix #680 - make RuntimeTypeAdapterFactory null-safe"
f73f8e063bd37427fd6c1b6986f41f274c17b22e,ignoring target directories everywhere.
0a93efada5edd251516eb6927b295a1bd1864509,"Merge pull request #652 from schlan/fix_turkish_locale_issues

Fix issues if runing in an environment with a Turkish locale"
2ee680a64529ac6f31306e06d43eae8cf53f7c55,"Revert ""Add a JSR-305 @ThreadSafe annotation to the Gson class"""
09839be00420a6294628915defa93fdd042ff406,"Merge pull request #684 from google/revert-664-issue-613

Revert ""Add a JSR-305 @ThreadSafe annotation to the Gson class"""
0c4ae018361d4756123c82c2f67ad04385caec5b,Updated Gson Javadoc to indicate thread-safety.
b4978a8062220ae431750d93f76d737e83a5bd89,"Merge pull request #685 from google/threadsafe-javadoc

Updated Gson Javadoc to indicate thread-safety."
64d74db8ae69f3dc37feb09df54e53ba0458edb7,Add METHOD target for use with AutoValue's abstract property methods
6cd5ee63ea849d2133bce770a3caa3e40aca8deb,"Merge pull request #688 from MichaelEvans/target_acquired

Add METHOD target for use with AutoValue's abstract property methods"
eb79ec73f01d31853e411843f64172ee1c5703d0,Add unit tests for constructors from util classes
87717662f72436f547333a270d289743f79622aa,"Merge pull request #689 from vbauer/util-classes

Add unit tests for constructors from util classes"
fbb8696e83065cba8c2eb223371db5f650b9fbca,Added tests for deserialization of double array
b9738875c049ed22a029b15180ed4ad117676f0a,"Merge pull request #693 from google/double_array_tests

Added tests for deserialization of double array"
618343fd1bae998ac9ebfde37a56eb4f498a59d7,Clarify the fact that the behaviour of getDelegateAdapter depends on registration order.
aa107894dd900531e17a05991f70c50c2b0249d0,"Merge pull request #694 from Dorvaryn/delegate_type_adapter_is_order_dependent

getDelegateAdapter is order dependant and skips more than one typeAdapterFactory."
1bf62f02148216714e25ba72f8c1f431b43ac539,updated maven plugin versions to latest
39b5d487d2203f0a954b0e7cbb33fd5466f99904,"Merge pull request #698 from google/maven-update

updated maven plugin versions to latest"
ff2c8f8e8b118278947755898cb6c75dfc7e90ff,"Expose serializeNulls with an accessor.

Useful for frameworks that build on Gson."
31f80d86590e523af1360a1a3d0f330989434286,"Merge pull request #700 from google/jwilson_0907_serializenulls_accessor

Expose serializeNulls with an accessor."
e81f3eba2731bac5b7b5a50e7218f9847a170d83,"Expose newJsonWriter wrapper instead of just options.

This is more future proof to ensure that consumers holding on to TypeAdapters for efficiency can always encode JSON in the same way as if the Gson instance was used directly."
b82e1b09319550bd7b377e5c766f104721e777f2,"Merge pull request #704 from google/jw/new-json-writer

Expose newJsonWriter wrapper instead of just options."
40ba05529dc8b40153622399c3da4272df838ce3,Add a draft of a changelog.
93605e7145c989d4f38ae347c9f31d605efcf434,Changelog fixes.
3daf5859318d6c1f2d9b6a537115d4235533c0ef,"Implemented equals and hashcode for LazilyParsedNumber to fix
https://github.com/google/gson/issues/627"
3aec17324366eba5fc935d9b7d1073208f0bff30,small reformatting
1e9004403c619729ad1c49f070ab61427bd462c5,"Fixed javadoc for JsonWriter as reported in
https://github.com/google/gson/issues/623"
8e1da9cf1ae18939eace17a147c386723d8fc267,"Merge pull request #706 from google/623

Fixed javadoc for JsonWriter as reported in"
2ecce944948e63f703e10cd34f4e2f410a7f3921,typo
9b6a381202465cf56ba76b82d710eacfa941c613,"Merge pull request #707 from dushmis/master

typo"
96b2ada79aeaa44e4c572b345563d0ee90dde5b1,incorporated code review feedback: optimized LazilyParsedNumber.equals/hashcode() by utilizing the fact that value is never passed as null.
3361030766593c0b05e17dace401cce6fcdf9e24,"Merge pull request #705 from google/627

Implemented equals and hashcode for LazilyParsedNumber to fix"
109915d93a2b36c26b49c0fabb1947a5a892cb25,Implemented support for multiple values for SerializedName annotation.
cb6de2beec502e74208049d013dff3d880327883,"Merge pull request #699 from google/639

Implemented support for multiple values for SerializedName annotation."
157b2323a7e5d9fd925f4dbbac43f67e451985b6,Created top-level pom to allow maven release to work
4a5735504c427276541cebb3abfdea913b9dd82a,fixed pom and .gitignore
d1883b5e5b8502a581bf3ea0ae5e93650551e8c2,added relativePath to avoid warning about incorrect parent path
80c13447ed09f774c879b06e40f288e881b75e4e,[maven-release-plugin] prepare release gson-parent-2.4
d0ee733c96e42d6e6eae06b846180fadd8d37b8f,[maven-release-plugin] prepare for next development iteration
25dff9b6ad68cf556349985aa098a2f6d931c14c,"updated to 2.4 release

using apidocs from github pages"
1d8f3e56d8333744cdca2a49bf5f5c5d9163c1ad,Update CHANGELOG.md
095ebbd5a116599a044c85221bc24d01b685ad86,Update CHANGELOG.md
3b1671dde97a6d564b3f4c3210fbe777dc3aa3d4,"Fix javadoc of SerializedName

In #699 the approach was changed but docs were left for the first implementation."
51082b4759c2e24f7e836a07fbfca35e163823c2,"Merge pull request #709 from roman-mazur/patch-1

Fix javadoc of SerializedName"
339c783b4af158558e1e054594f1180f07950485,"Updated the ProtoTypeAdapter to a version that works smoothly and supports field name/value customization.
- Lets you customize the proto field name serialization per field
    - Lets you use different cases for serialization (e.g. you could use UpperCamelCase for your proto field names and willing to serialize them using LowerHyphen)
    - Lets you choose to serialize enum values with their value (0, 1, 2, ...) instead of their name."
324ea17d46cb57f30a50162518b92c4843f2e86b,Updated version
21d7f0681e0ec15ec918ca1df156c606328c1f3f,Removed useless <execution>
b395da26b7761d46b25db6e6b15ffbd0a45ac17c,Better javadoc
51458c6c80d3bf468b37da8c4b5345179ee64ac7,Added .gitignore; generated folder does not need to be pushed
1ffa2fb92a7912804c068ee54dcd005e37f08ab1,Added rebuilt tests for serialization with numbers
503a9e536aabdfbfddc0833244274a1f814e5edb,Updating Gson version to 2.4
2b15334a4981d4e0bd4f2c2d34b8978a4167f36a,"Merge pull request #710 from Bhasmithal/master

Updating the ProtoTypeAdapter to support custom field names/values annotations"
8cf538169cc12becd2236ba3be8078c5c42f8e45,"Updated proguard.cfg example to Gson only settings

Fixed https://github.com/google/gson/issues/713"
e3fe3c94304f38dc17e9e95f7d2a6f37873bd7a8,Moved the .gitignore file to a more appropriate place
83aa8ca55548381c79f886d57fd8f4db863a84d3,Merge https://github.com/google/gson
10714ef0427536b679e9677f8417807e4cce017d,"Merge pull request #715 from Bhasmithal/master

Moved the .gitignore file to a more appropriate place"
7d1973e6c5e270c0c94eaf6a3e81f4f2c5b2a699,"Fix type hierarchy adapters to do a runtime check.

Otherwise if we have a type hierarchy adapter for Vehicle, and we
attempt to decode a JSON string as a Car, we get the right exception
if the JSON string is actually decoded as a Truck."
fe101c10bc3597d8e715a31d94d2cc0cc54b660f,"Merge pull request #719 from google/jwilson_1021_runtime_type_mismatch

Fix type hierarchy adapters to do a runtime check."
7abeb1608064abd19129ef7bcaf781dbd3ed26e9,Thread safe method cache
55b4a3f9b0adc2d494ae0b3bf747afb398f3b9dd,"Merge pull request #724 from cconroy/threadsafe-cache

Thread safe method cache"
e5b3f6368db33c846b094b0d695d3a1b826e3892,"updated minimum JDK version to 1.6.
Added Overrides for methods implementing an interface."
79e1c669ed8e02dcd645a701fc6afa7de12225db,Linking to JDK 6 javadocs
9e5f86d10b3b3ff4ba0dfe7ba0722c9e640fcc20,"Merge pull request #729 from google/jdk6

updated minimum JDK version to 1.6."
fef43b2aaa4fd7cb8f0dff395980c69f614635af,Added support to serialize/deserialize ConcurrentMap and ConcurrentNavigableMap.
64107353a37e623ed1f8fecb4422c24212cf6fe1,"Merge pull request #730 from google/624

Added support to serialize/deserialize ConcurrentMap and ConcurrentNa…"
7821b73202a878bea091d4bc97195fdd87d76382,"Added support for AtomicInteger, AtomicBoolean, AtomicLong and AtomicIntegerArray."
cc54e4dbdd16c6d269eb6686f472999445cba22b,made methods static
caef762530f61de5c41b497200d1b98019b073a1,added factory fields for consistency
11b26b52563ef9bfecfcd0839b0f439e7661416f,"Added support for AtomicLongArray.
Also added tests to ensure LongSerializationPolicy is honored."
da4334b8dfcfa3efe6fba6b95afd0e5e6b272348,fixed typos
00cf46cde434d8a9909bc13ead6664acf1b6240f,"Merge pull request #731 from google/java_util_concurrent_locks_support

Added support for AtomicInteger, AtomicBoolean, AtomicLong and Atomic…"
457f53f08f38e3c6d154699ea00fa521f208882d,renamed JavaUtilConcurrentLocksTest to JavaUtilConcurrentAtomicTest
f8105f0006fb81a15be1ff8eefe7a17488a29fe8,"Merge pull request #732 from google/fix_typo

renamed JavaUtilConcurrentLocksTest to JavaUtilConcurrentAtomicTest"
47cc34548d2ede1f294ff72ae02c05e2b0eae404,added currency class
01944b246b08439c96653a3f152b6ed8d23e8b88,"additional tests for PriorityQueue, Vector and Stack."
10cefa49d2ade8f1ba99693509916128c8786a6d,added tests for Properties
05b17f92714ac8ad716bb379eea13a2b4ed4ce4e,Adding details in the throw exception on a missing field.
c935f89b23c69e7c9d6d98df87f81635b3eb3700,Added the cause to Assertions
5e3d4320cf735b4940a63f79eeb586ea549cb1c1,"Merge pull request #738 from google/missing_field_details

Added details and causes while throwing AssertionError"
e48c780389e62a8ace3a59f52935c8e79cef134c,"Merge pull request #733 from google/java_util_additional_classes

Supported Currency and added additional tests for Vector, Stack and Properties."
bcd52a1fdc4883731ee25b79e2c3f6a7d578bf92,Added ISO8601 complete support for date deserialization
d86dfdec7c18ceb002889d73f808a4be4ee7105f,Removed unused code in ISO8601Utils
b45cd98ea1a3c5d884c3353aa71392d465752db2,"Merge pull request #740 from IgorMiller/master

ISO8601 Date deserialization"
3c74ca6cb41f45f4bc38837f5cabba8254cc5674,Create ReleaseProcess.md
59b7de7348358aee691a2bd282003a86ca3c7936,copied over release process from https://sites.google.com/site/gson/release-process
61c27e7ff2a79f0b454d0f40cb96af33cad6622f,Update ReleaseProcess.md
d7d064feb8d53b426c77035f3cb659d797402b98,[maven-release-plugin] prepare release gson-parent-2.5
2b4ac2334e055a1aa9ca25f2ba8f6112d0008413,[maven-release-plugin] prepare for next development iteration
3a560116855e45e459d70f3ec86f2219f90d792d,Update ReleaseProcess.md
53d59574f24a595eee761fc203700399592d3789,updated Javadocs instructions
a16afd035aa2db64e3e3e2694f4058e47c2228d1,Updated to Gson 2.5 release
cd164202c58c5c824f8cfe865e8ffc278aadcc43,Gson 2.5 changelog
4e1c352261042da7c7ea7c695e23b40b437215c1,Imported User Guide from Google Sites
594cb33b5f962e3791a6899ac6b5a5290f9f322c,Fixed ToC
bc6712e323788780bf83896be6e52203cf71a22e,Updated to include previous versions change log
6831050a6ff1389c3986d8b62e4a8bdde973e5d3,Update ReleaseProcess.md
5e52242ba0dd6774a421c954219cf873e78793ec,"Imported Gson design document from 

https://sites.google.com/site/gson/gson-design-document"
f6423959498935be6b556f539f18b1aa14bae554,added maven instructions
05515adc8bf8794e8b89cee38b3184e43f447771,README: Update old Google Sites links to GitHub
8e4ad57874be28662576eab6aa76f1b7fc00b556,"Merge pull request #743 from pjdelport/patch-1

README: Update old Google Sites links to GitHub"
f55beadd550b90aecbef0bdc2989b9a45052c88c,Update README.md
90fad0181eb6c8bfb13bd7063818fcfcd2308e21,Update CHANGELOG.md
14e53cf7d4918e1a3f40084d6150831349d6efda,"Added code formatting; removed HTML tags.

Also fixed minor grammar issues."
a270c6b19dc9f3ed43fbe75623085c4a3b6b4b80,"Merge pull request #745 from mbrukman/docs-code-formatting

Added code formatting; removed HTML tags."
95c5a7d57020c63e87e465832db9e74a5cd15ab5,"Add full license text for Apache License 2.0

Moved the short-form license to README."
5fdba9f647b72f55d186223129c75d9d7650b0fe,"Merge pull request #746 from mbrukman/full-license-txt

Add full license text for Apache License 2.0"
b4ca41aafe884f40beae3b1f5912aca24d080f5f,"Docs fixes: markdown, links, formatting.

* Removed extra spacing after bullets in list
* Removed extra blank lines; fixed indentation
* Fixed all links (including examples) to code.google.com to use github.com
  instead; deep links to code.google.com redirect to top-level GitHub project
  page, thus rendering them useless
* Removed extra strings in Markdown link targets
* Fixed capitalization and grammar
* Added more code formatting"
dcbcf067fc660ed6dd4f8a95d19d7c86b0b26a0a,"Merge pull request #747 from mbrukman/docs-formatting

Docs fixes: markdown, links, formatting."
137100e2e2080639f59f90e5cc2c90e127863241,"Cleanups and formatting fixes

* Formatted multi-line and complex commands via multi-line blocks and
  line-wrapping for readability and ease of copy-pasting
* Hid URLs behind text links for readability and brevity
* Added missing code formatting, both inline and blocks"
883fbd0a160d2a7cc57bd0d02242cc8833c0fb67,"Added language annotations to code blocks.

This enables GitHub to do proper syntax highlighting, thus improving the
readability of multi-line code blocks. As a result, some changes were required
to make the code blocks syntactically correct, since they're actually parsed by
language-aware parsers; primarily, this meant inserting comments."
b1cb92c4a5982449c1218fac99cf5b1f26399b8c,"Merge pull request #749 from mbrukman/docs-user-guide

Added language annotations to code blocks."
01cad42b82fb9a87332a128fd5c2c04e5fd74f21,"Merge pull request #748 from mbrukman/docs-release-process

Release process: cleanups and formatting fixes"
994d589bcfe5bb6fbc7b2117d27c560ed2785b9a,"Remove explicit step numbers; use autonumbering.

Markdown supports automatic list numbering; using this approach makes it easier
to add or remove new items without having to update all the following entries."
016aac18af1c0dbf5c86518857b9c33ed5f20baa,"Merge pull request #751 from mbrukman/docs-release-process-list-numbering

Remove explicit step numbers; use autonumbering."
be29e052ec31a2811bb28150c525a4252861fc47,added build status
ddfb2c5c8e081b28769a5ff9c638626d60f741a9,Update README.md
59a8fb5c5e5f660dcc885ab1617707b3bb5a6d76,Update pom.xml
7a1c94f9863bfc6915eaa56236dcef46876d4674,Remove synthetic accessors from being generated.
1f803bd37de5890f6da53f0b1a1b631eea4d1b8f,"Merge pull request #761 from google/jw/nuke-synthetics

Remove synthetic accessors from being generated."
ed6298c98a35ccef795caa6cb39bcef01b64e274,timezones without minutes should are valid according RFC3339
61f58baaf926d3e6b16a52305537b3495f155ca8,fix typo in JsonArray docs
34f400582973ab41e39d942618398e83ff0efbec,"Merge pull request #770 from Psidium/master

Fix typo in JsonArray docs"
23e2916947940864f828505531aa130fba6d8743,Make TypeAdapters created by @JsonAdapter null-safe
57b08bbc31421653481762507cc88ee3eb373563,"Merge pull request #772 from chalup/nullsafe-jsonadapter

Add nullsafe option to JsonAdapter annotation"
3360c93a76a74d1182b912052973e08ffa868b43,"Add setting for leniency on Gson instance.

Add a JsonReader factory (for parity with the JsonWriter one) which provides a configured instance using the Gson settings."
2ab776b5f5075bd98e7eb730cb03772f2b734b45,"Merge pull request #771 from google/jw/global-leniency

Add setting for leniency on Gson instance."
c8627c8ab831dec86eeb52fc02600b22c81ba858,Update reader and writer for RFC 7159.
af68d70cd55826fa7149effd7397d64667ca264c,"Merge pull request #773 from google/jw/rfc7159

Update reader and writer for RFC 7159."
8383f5c7fa34ae68323fe2816ef8c1307b5d0f84,"Merge pull request #769 from paniko0/master

timezones without minutes should be valid according RFC3339"
7c65a225f5cc5e2054d55854dea1c191ed6bf977,Update changelog for Gson 2.6.
2016e9553eb946a09a9e70d83d31f4e8da675805,"Simplify Gson poms.

A lot of the configuration in these poms has been taken over by improvements
to the Maven release plugin."
09c3a95b142640e132f24311266a504d7f505c21,"Merge pull request #787 from google/jwilson_0211_simplify_gson_poms

Simplify Gson poms."
b8220eb19513fa908908b467b97ff8f823b34e1c,[maven-release-plugin] prepare release gson-parent-2.6
85722329db31954eff59f816ab7cf4d6b9eff567,[maven-release-plugin] prepare for next development iteration
11d89f39c963f8efb6440add80328dbcf53b74ed,"Build Gson for Java 1.6.

The upgrade to Java 1.7 was a clumsy bug."
233f6dd59690bfd066a15ded4839614f9d395d8b,"Merge pull request #790 from google/jwilson_0211_java_16

Build Gson for Java 1.6."
3c9b9af0a1f2f5b40bec947bf216fa627697445f,[maven-release-plugin] prepare release gson-parent-2.6.1
796b4ca26de4f8d8cd8c1da02bd00c9ef6f135a1,[maven-release-plugin] prepare for next development iteration
0ae177fefbbe56987392482e7b310139e20147e8,Update docs for Gson 2.6.1.
bddc1a9ed385595ab8ec75aa0ac9be586f55a68f,"Fixed code style to remove explicit casting op.

· Separated binary operators"
6f15cd0060dfed248eae0219d35f20d89022972c,"Merge pull request #791 from haskellcamargo/master

Fixed code style to remove explicit casting op."
aa209fa2555271215a89fe382a4b9078102e6abd,Fix some typos in gson comments.
02838e1e304b3742d90e89e574041a9eff3e1146,"Merge pull request #792 from dongjoon-hyun/fix_typos

Fix some typos in gson comments."
edaf59e178301fc2cdc5523cd703121cfcd4c009,Fix RuntimeTypeAdapterFactory javadoc
a52828cde7578933a8cbb2d3ff3794ee107d450c,"Merge pull request #793 from egor-n/patch-1

Fix RuntimeTypeAdapterFactory javadoc"
bad5cc804733d7f439e3e32822aa4436be28360c,"Collapse bullets into a paragraph

The section entitled ""Collections Limitations"" contains 3 bullets, but one semantic point.

Make this point in a paragraph instead of a bullet list."
8f8d903913d04c4dd31f80d95a64e66b0861e901,"Merge pull request #794 from jpaugh/patch-1

Collapse bullets into a paragraph"
4eff1a855f342f1b36117535218762f3257ae78c,"Restore OSGi manifest headers

Commit 2016e95 removed the necessary MANIFEST.MF headers for Gson to
resolve in an OSGi environment. This patch restores them."
0ef365969292fb63a5911ab36f7000b1e3c0ef82,Minor readability edit
29362de13499d5867d09e593cc51ff3c6d4d646a,"Merge pull request #798 from ghandhikus/patch-1

Minor readability edit"
67bd3a2cf6f9c9c6e7f615969b1918f68e03932d,"Merge pull request #797 from seanbright/osgi-manifest-headers

Restore OSGi manifest headers"
c731abb293e79b26e53db3264306768fb86ef4c4,Fixed a regression in Gson 2.6 where Gson caused NPE if the TypeAdapterFactory.create() returned null.
79a00cd90695c9ab72f301ca30fe2cbbc1fe8e36,"incorporated code review feedback. Simplified the code, merged Device and Control and removed unnecessary fields."
1fa43821e829c455db89f9b75737d109c01dfd2c,removed unneeded null check.
1ab73ffd21d8c08bbe734154921a936e4a8cb091,incorporated code review feedback by eliminating the stringified type adapter.
dea305503ad8827121e8212248c271f1f2f90048,"Merge pull request #800 from google/nullsafe_regression_bugfix

Fixed a regression in Gson 2.6 where Gson caused NPE if the TypeAdapt…"
42276de76323114f79b08c671611d6db10e537b9,Added JDK 8 doclint exclusion section
f570002a2519a8ac09d260bfe4632fc1716cd1bb,"Merge pull request #801 from google/jdk8_doclint_disable

Added JDK 8 doclint exclusion section"
607bcaaf9d85560e53306bc2a7cf6333e9b314f1,[maven-release-plugin] prepare for next development iteration
0dfa28ac3ec9dc0d9a2f4c9d5e14a6a0a470f69c,previous mvn release:prepare failed but updated GitHub anyway. Fixing that.
4f9d3e48d9509f76178db551e56104db57d502f8,"Merge pull request #802 from google/reverted-gson-2.6.2

previous mvn release:prepare failed but updated GitHub anyway. Fixing…"
fe62b04148a0fe09cb38dcb667a5053b89e6c76d,[maven-release-plugin] prepare release gson-parent-2.6.2
416ddb101d9fa4d99d6f3180c4b4aa8dbee8de74,[maven-release-plugin] prepare for next development iteration
acc61867aab5822c05f9747a770cd0f3b19018a5,switch Using with Maven page to use GitHub link
956f59fd597502b6d4ae82ac7cd7349659c57775,2.6.2
ebf43521cf6052b49d4c2ba9b6c2664f9fbc2aaa,2.6.2 changelog
54a1daa8352ac508e7b4fc7bcc66840d3d8ee41a,Update CHANGELOG.md
1f15d76b235b0dbd0880d5589414a6b3e17ca3df,2.6.2 release
c5611847a3a5a3cbbf3593532318c3027098f518,Gson synchronized map replaced with concurrent hash map
31dcfa3ad6fff0ee64f0fc5b8a1712c3ef3dcf95,More appropriate usage of null key surrogate in Gson#getAdapter for backward compatibility
a02f575797d9295bff8fb92d266b0f9724e42098,"Merge pull request #806 from qwwdfsad/master

Gson synchronized map replaced with concurrent hash map"
0669ff7fd16c26521b924a58c7dd64ab2dc1a46d,allow unquoted long and integer keys
2b08c88c09d14e0b1a68a982bab0bb18206df76b,"Merge pull request #809 from sgbrown/unquoted_integer_issue604_issue524

allow unquoted long and integer keys"
4fdef155ce2824b3761116ebccb1aeaa9514d4cb,Add some useful badges with automatic version detection: Maven and Javadoc
26f3b2d637b72a3a47ffbeaaf88dcf6e106977a5,"Merge pull request #816 from valery1707/badges

Add some useful badges with automatic version detection: Maven and Javadoc"
a23a7dba2d6b6a4b1e22ad69805d9b34fedb1403,Update README.md
d9726b9a739edc622fb2b232c50cbc50f8493c2d,revised Gson download link to maven central
ee8d6be59ff6f2466d65be746b96ccf07ddb9ddf,deleted Javadoc updating process since we are now using javadoc.io
34d7521d9581b025c23bd5e4880a1b3a687b3da0,"moved the JsonSerializationContext/JsonDeserializationContext fields to where they are used.
Also moved TreeTypeAdapter to internal.bind package for potential use in JsonAdapterAnnotationFactory."
0c7e39981975fa88fbab012d42047ba5bc9522fd,"Merge pull request #818 from google/gsoncontext_refactoring

moved the JsonSerializationContext/JsonDeserializationContext fields …"
93414608afba1cf92f660199f1bbdf6c9aaaf1ea,Fixed unbound range bug issue# 819
87cddacec59e05e4df194e81510a541459fa640b,"Merge pull request #820 from google/819

Fixed unbound range bug issue# 819"
4f031a4e78643db1b82bef5ab89d6c5912e1f128,UserGuide Grammar Corrections
48c430b811b8c8b6b3651527483f4bba2f13f659,"Merge pull request #823 from rs017991/patch-1

UserGuide Grammar Corrections"
9c4f3523206468746ef5ee135f2bced4e45b33b5,minor javadoc fix ... @code block not treated as html
a477f4f0ca9405ec85e65e1d9b8f2454e9ff1a0d,"Merge pull request #826 from sgbrown/htmlEncodeInJavadocCodeBlock

minor javadoc @code block cleanup"
966de9e60dd6a828cb52548dd8de77adc86bd319,fixed throwing RuntimeException instead of JsonIOException
6f6af8050799bec5321d2c06cd3230daadbb6535,"Merge pull request #830 from gavlyukovskiy/patch-1

fixed throwing RuntimeException instead of JsonIOException"
ab40462cc76f6708e3ce2e981f5c6b485347702b,Check if class can be instantiated based on class modifiers. If not throw an unsupported operation exception.
0f66f4fac441f7d7d7bc4afc907454f3fe4c0faa,"Merge pull request #829 from ionspin/master

Check if class can be instantiated based on class modifiers. Fix for #817"
59edfc1caf2bb30e30f523f8502f23e8f8edc38e,"Add boxed boolean value() overload.

When calling value() with a Boolean overload resolution would choose value(boolean) which would throw an NPE on null. The other boxed types are all numbers which would resolve to value(Number) and behave correctly."
874e74a3072f7ff0d2533296698ad126321516d1,"Merge pull request #836 from google/jw/boxed-boolean

Add boxed boolean value() overload."
71ee0e3759c7aafa849871443a47bdd001faaf1b,"Documentation Error

String anotherStr = gson.fromJson(""[\""abc\""]"", String.class); => String[] anotherStr = gson.fromJson(""[\""abc\""]"", String[].class);"
18f1795d18a11594e2adc34201ba2195985b4c96,"Merge pull request #837 from zzz40500/patch-1

 Documentation Error"
a851569ab916b5f9466949ed106d2abff1d1650c,"Adds getters for config fields.

This adds simple getters for certain config fields that would be helpful in custom
TypeAdapters to deal with situations like this:
https://github.com/rharter/auto-value-gson/issues/18"
d5c090835f18a6a4aa70010fa83249db359e5222,"Merge branch 'rharter-rh/config-props'

* rharter-rh/config-props:
  Adds getters for config fields."
8537c8932f0d9bd3338a5048fb65a8506c7a8247,"Optimize list allocation for every reflective field.

The common cases (no @SerializedName and a single-value @SerializedName) now use a specialized one-element collection. Cases with alternate names use a much more space efficient ArrayList which is exactly sized.

This is also a performance win for adapter initialization since an index-based loop was used on the returned type for which LinkedList is not suited for."
d590ca90875676fd4e6d393174e8e8fbf0279094,"Merge pull request #839 from google/jw/optimize

Optimize list allocation for every reflective field."
371aff7ce4fb73ed997cbf6aa08706f272cef0c6,"Switch default Queue implementation to ArrayDeque.

Now that we require Java 1.6 or newer this much more efficient implementation can be used as the default."
03337640c2d98086ec0ab8e8ffba881d846f3f24,"Merge pull request #840 from google/jw/on-deque

Switch default Queue implementation to ArrayDeque."
1bffde09edd228db162fc1f13502fb9654e21d06,"Typo

Changed ""Serialiers"" to ""Serializers"""
c101e31c6984c763ffdd786248fda871fdf6aaac,"Merge pull request #848 from nthcircle/patch-1

Typo in the user guide."
c414b368e120a6240ceb238f4e0abce821a9f7cd,"Corrected documentation, copy&paste error"
0f80936ecdf4c4d32eaa044305efdb3fcdb81ffe,"Merge pull request #853 from Baschdl/patch-1

Corrected documentation, copy&paste error"
61f83d630935eec742f66346389fa3d2a13c0874,Replaced a JDK 1.7 specific method with its JDK 1.6 equivalent.
ecda3582a6527d5be2c200fe72b04fe2ae30624f,"Merge pull request #857 from google/jdk16_regression

Replaced a JDK 1.7 specific method with its JDK 1.6 equivalent."
3ff16c30dbcd2a66209935a3e71a5f21f696d896,"Don't use a runtime wrapper if a JsonAdapter annotation is present on a field.

This ensures that JsonAdapter annotation works correctly on a primitive field.
This is a potentially backward incompatible change."
bb451eac43313ae08b30ac0916718ca00c39656d,"Merge pull request #832 from google/831

Ensuring that JsonAdapter annotation works correctly for primitive fi…"
2928b3ef978a619a5433a6f3c9209e2968497904,handle explicit null values in JSON
2360cfa05c3e739e9b6ba4fb44ebe7431e377bf4,"Merge pull request #863 from nykolaslima/explicit-null-in-json

handle explicit null values in JSON"
d4a9eb4e7bcbf0fa9e9e76c81fc86ff669f7c8ea,"Docs fix for the RuntimeTypeAdapterFactory class.
Instances of classes that implement RuntimeTypeAdapterFactory should be registered using the registerTypeAdapterFactory method instead of registerTypeAdapter."
854760e6c7131b5ec5b1ec07756a3b2d0807aff3,"Merge pull request #864 from juandiana/runtimetypeadapterfactory-docs-fix

Minor documentation fix on RuntimeTypeAdapterFactory"
86d88c32cf6a6b7a6e0bbc855d76e4ccf6f120bb,The method registerTypeAdapterFactory accepts a TypeAdapterFactory instance only.
daa92e3fdc2ecc4e8692cd28e26c2017b1dc3bc9,"Merge pull request #865 from juandiana/runtimetypeadapterfactory-docs-fix

Fix registerTypeAdapterFactory method usage"
45511fdd1534aa4fcc3c560ac4c0b439d94fc2ad,"Added support for JsonSerializer/JsonDeserializer for JsonAdapter annotation.
JsonAdapter is cached per the type of the JsonAdapter class.
Added a test to ensure JsonAdapter works on fields of parameterized types
Keep track of registered JsonAdapters and JsonAdapterFactorys in ThreadLocal."
943c67427630f3da3f6ad7d8edfdf8b0f5451d9a,Removed ThreadLocal for activeJsonAdapterClasses
2df65502edc90a04ad0cf12319aee0788972d5cb,Don't use ThreadLocals for @JsonAdapter factories and getDelegateAdapter().
3f8726ecafe9c40498255eed1d1893fd665e237b,"Enhancing the json reader, adding corresponding test case for it"
86ccf826fcb021b8950e75cbb2e246fa75abf42a,"Merge branch 'deyboy90-master'

* deyboy90-master:
  Enhancing the json reader, adding corresponding test case for it"
ecaa57114f3cc51e091d6699c0d82cd2c84a3a7f,Consolidate location and path rendering for exceptions.
ebad966efd8dfaf950b8e93fd39041e7fc5c4a27,"Merge pull request #870 from google/jw/reader-location

Consolidate location and path rendering for exceptions."
c2fae85a9f71d478d1153112e09dbc45ef31259a,Implement JSON Path for JsonTreeReader.
c16be41e77bb53a4b639cb864c9a6e4d0f8df7c2,Expose JsonObject size.
5f63fcec98881e16ff950e9d981ce86a2563fb51,"Merge pull request #872 from google/jw/object-size

Expose JsonObject size."
c24af304077e4a6d1925db7cd35d0cd1ed488d6a,"Merge pull request #871 from google/jw/tree-json-path

Implement JSON Path for JsonTreeReader."
1f859ec769ed3a220bf8adf2423ba29b44db94e2,addressed code review comments.
b2c00a3b02eec48ed621fa7cfec54ac6da4aa48d,"Merge pull request #873 from google/jwilson.0601.get_delegate_adapter

Add support for JsonSerializer/JsonDeserializer in the JsonAdapter annotation"
687ddb319e452d93cac1f83a2e850140b5dc49e7,Preparing 2.7-SNAPSHOT to cut the 2.7 release.
86765d23317fa22bec1bfb723213b4b7f3b938da,"Merge pull request #875 from google/gson_2.7

Preparing 2.7-SNAPSHOT to cut the 2.7 release."
9722b00372672214794edea844a236d83e72b273,[maven-release-plugin] prepare release gson-parent-2.7
0a29fcf859ede35924a81f845e67fb0c6fe510e8,[maven-release-plugin] prepare for next development iteration
28c8e1c29b27756f6208f4ac342d99e48a461666,Updated to 2.7
f482f4a1cb47e53d0aca86e9d5035af6d2240a2d,ChangeLog for 2.7
193349f4aa7eecf43cc6ebf104e218e704db21d9,made nullSafe wrapper of JsonAdapter optional
8b464231f735b3157f38c6e589171dc17f709ba1,"Merge pull request #881 from testcenter/master

made nullSafe wrapper of JsonAdapter optional"
9414b9b3b61d59474a274aab21193391e5b97e52,"Add static factories for array and parameterized type tokens.

These are useful when creating TypeAdapterFactories that delegate to others with more complex types. They also are useful when writing dynamic code that deals with types that cannot be fully reified using the normal subclass technique."
2271525dd5d50311bd6b9bf8930ef8bb789928cd,"Merge pull request #900 from google/jw/array-and-parameterized-factories

Add static factories for array and parameterized type tokens."
74f4f74b8b752d13c14aef448a883a297fe3f764,"Prevent Proguard from stripping interface info from @JsonAdapter classes

Previously after Proguard, the classes would no longer implement the interfaces, leading to `JsonAdapterAnnotationTypeAdapterFactory` throwing.

Fixes #925"
d08e077cfb402adbb233aac0383e1d1acfbd985c,"Merge pull request #926 from ChaitanyaPramod/patch-1

Prevent Proguard from stripping interface info from @JsonAdapter classes"
688f918a353e57f11405fab17d82d506a4e7dc4c,"Added @Documented to Gson annotations.

This is useful since it shows the JSON format for a class which the user of that class should typically know."
504d8240cc74fd4cb77d50221ebefe25218b57a2,"Merge pull request #922 from google/921

Added @Documented to Gson annotations."
4512f31c698d41cdd97144187fb3ed3b94102768,Added PostConstruct Factory sample in Extras.
e10442714e4ffbc7caaab08bbe4fa83e9ecdcde3,Remove deprecated useDefaultManifestFile for jar plugin
0636635cbffa08157bdbd558b1212e4d806474eb,"Merge pull request #931 from enhdless/master

Remove deprecated useDefaultManifestFile for jar plugin"
21ed8b4cd6f054ea22e4404cf591603aa701f721,"Merge pull request #930 from google/269_post_construct_adapter

Added PostConstruct Factory sample in Extras."
61d46cb971717951da2b80983a129a249d70969d,README.md Add a 2nd third party tutorial resource
63a69ad1321f1b22abdf4d611b52bc9902f06aa6,"Merge pull request #943 from fs-opensource/master

README.md Add a 2nd third party tutorial resource"
512d7b83cd810aa08aa58d4671f1d600262931e5,Changelog for Gson 2.8.
e9ead40302b3466f557a82f924907de59462deb9,[maven-release-plugin] prepare release gson-parent-2.8.0
14c8c1a82bf9360856f7c125ea573b643d1fbae7,[maven-release-plugin] prepare for next development iteration
fca867d35618cd0b0589d2e0c136a927964533b7,Fix GitHub Diff link.
9a2d8a20a460d5d5fd3936e6789fb82525459312,Update gson version used in the Maven example
b1eeae53bc8383b3cef43b34739ec6fd2f2214fa,"Merge pull request #955 from melquiadess/update-ver-in-maven-example

Update gson version to 2.8 in Maven example"
a786628318c51965ff6bd72204e78c2d6c04f8ed,Version is actually 2.8.0
791236ac79e535146b07a7dd5c85ab168554f5ff,Fixed https://github.com/google/gson/issues/958
44cad04a639b3a53f4205f93acda37b3f7d10871,Allow deserialization of a Number represented as a String (#964)
5f73666404aeefd01b1c0d13302c3f0a238cdeac,"Update JsonAdapter documentation (#976)

Include mention of JsonDeserializer and JsonSerializer."
4976e420fceaf0615f93dd3c59d5243b84160ffb,Add keySet method and test (#942)
9e5e4ac630d6785b3a764a1c523a91605935d61d,Add missing comma in toString()
d125fc78cc0600fd0236766b6fda7d8c4ae6b3f6,"Merge pull request #982 from ytRino/fix-comma

Add missing comma in toString()"
08c7bffba0e93611162cadfaf2ee03e3d143e7d1,Fix for #957 (#994)
614e735992ae4d3d7366a036e2ced17a78d0ba69,"Fixed typo

Fixed typo"
4a57ba6afddb75c2941100727d60e7e236d1e95a,"Merge pull request #999 from twlkyao/patch-1

Fixed typo"
9d8d7a43e1335005dbaea0f96c1f1c5d33a61531,All JsonElement::getAsJsonXXX methods now include the JSON string on thrown exception's message
7719e73a108c450666613c279bedaed724cd9cc9,"Merge pull request #1012 from BloodShura/master

All JsonElement::getAsJsonXXX methods now include the JSON string on thrown exception's message"
410b4a8c62de693d38a0ee9a566a4a4c0863f934,Optimizing for memory
ba4643134ac897c2d297f3d5b2b5c6472028e4ae,Removing unused variable
9e6f2bab20257b6823a5b753739f047d79e9dcbd,Fix ArrayIndexOutOfBoundsException when skipping a value with JsonTreeReader #1013 (#1014)
9c30b0e20389dfce7baf897685677a7ed42e42f3,Incorporating code review suggestions
2d072bae3add0fbdb74766bf9fad9fc54267a844,"Merge pull request #1015 from yasirmhd/master

Memory optimisation in JsonReader"
4644837207fba089f73ca0dd0b05a7750b960b38,Incorporating the review comments. While more than 1 charachter might be read from the buffer the output will have only one escaped charachter.
e0f0854ac23c07658cce5877b1fc9bc5995b1688,"Merge pull request #1016 from yasirmhd/master

Incorporating the review comments in #1015"
9e44d60b83d667d96150eeff4e3f04cd4f157e9a,"Eliminating code overhead

* calculating size of the list once in case of loops, avoided creation of string builder object if the length type argument is 0
* replaced null check boilerplate code with nullSafe()"
fd37cf1d0d3a37ade0e74f07e91c97a925ba42db,"JsonArray with capacity in constructor (#1033)

JsonArray with capacity in constructor"
d0e70bcdbf15aab8b03a05c88da4a4b4f60222dc,elimiating code overhead
8101ab74e99f52c5a8feb788914e3a4efe0f17d7,"list addition optimization (#1038)

* list addition optimization

* Optimized imports

Optimized imports"
423ff04a75c3c83ab8be24c303aaa6aa10da7dd3,"Merge pull request #1037 from guptasourabh/master

elimiating code overhead"
3063136a2c3332ebfe07b7f5e9a00f1af43b61c2,Fix headers format in the README.md (#1041)
441fa98735c1360a6db3c13037b898d3e980e9de,"Simplified access of getSimpleName (#1042)

* Simplified access of getSimpleName

instead of calling getClass.getSimpleName() that will check too many conditions inside , we can make it as final String and use it directly.

* Simplified access of getSimpleName

making string as static

* Simplified access of getSimpleName

Code Review changes"
3fdedd405b84905416bfaa646259e93769abc046,"UserGuide formatting fix (#1045)

* UserGuide formatting fix

* UserGuide formatting fixes"
4274e359567814ddb2859c1dbdb78af0a1ad476a,Update GsonDesignDocument.md
537639c9e8ac40093429ad221b5dadce1cab2cca,"Merge pull request #1052 from tvillaluz/patch-1

Update GsonDesignDocument.md"
92b52d25d844b81620a04917e5fa164d44b9c8a5,Performance fix to avoid reflection-based initialization of null key surrogate
41e48f7aa3a686778e95328693b830856538e9e3,Update CHANGELOG.md
9a2421997e83ec803c88ea370a2d102052699d3b,negative zero test and fix (#1069)
5412f21431ebace2295e933fa0446adc0abf4b01,"Printing more debugging information to help track an invalid JsonAdapter. (#1068)

Now the thrown exception carries this information:
java.lang.IllegalArgumentException: Invalid attempt to bind an instance of java.lang.Integer as a @JsonAdapter for com.google.gson.functional.JsonAdapterAnnotationOnClassesTest$D. @JsonAdapter value must be a TypeAdapter, TypeAdapterFactory, JsonSerializer or JsonDeserializer."
3270e8d97259665cad9b66011993044de97c26db,Remove need for synthetic accessor methods.
09cbc8073bb2bc60aeed6b831be4473daaf915ae,"Merge pull request #1072 from NightlyNexus/eric/2017.04.22-synthetic

Remove need for synthetic accessor methods."
eb27d55f497a5bb292c020e255415677e0b646fc,Remove helper methods mentioned in the TODO list
b58de2f4aeb380729bed58bde3c74eafe804d877,"Merge pull request #1073 from lyubomyr-shaydariv/public-tojson

Remove helper methods mentioned in the TODO list"
f7012e586514524ccffe475e1a07757dbed6563f,Adding maven-bundle-plugin. (#1071)
5848096f3e1f36c038f522a3d7d6b9e3b553cf8e,"Size allocation of StringBuilder (#1047)

Size allocation of StringBuilder"
a300148003e3a067875b1444e8268b6e0f0e0e02,"Fix StackOverflowError on resolving recursive types by collapsing chains of type bounds (#1075)

* Fixes StackOverflowError on resolving recursive types.

See Issue #440, Issue #603, tests.

* fix 'codacy' coding style warnings

* added copyright header"
b8f616c939c652b8540c95fa2b377b8c628ef3ff,Migrate DefaultDateTypeAdapter to streaming adapter (#1070)
3e74bb47d1a72f72873109e8f0407a34d25fe7e6,[maven-release-plugin] prepare release gson-parent-2.8.1
0aaef0fd1bb1b9729543dc40168adfb829eb75a4,[maven-release-plugin] prepare for next development iteration
ada597e69a78b8b99f79f79493cbf51e16045202,"value(double) can write NaN and infinite values when lenient, as value(Number) does (#1093)

* Added test which shows that lenient JsonWriter fails writing infinite primitive doubles, but does not fail writing boxed doubles, as stated in #1090.

* Fixed JsonWriter#value(double) to write infinite and NaN values when lenient, as JsonWriter#value(Number) does. (fixes #1090)"
535bb5d1b9412ecd61abb1b8b4969a63d07d104e,2.8.1
2a08e3906cbb7704871b5aa57b2fcd9e6bee8a52,Update CHANGELOG.md
3090a7ed2af4d6d2e6bd3647d12839bb4ad404e8,"Made deepCopy public (#1091)

* Made deepCopy public

* since 2.8.2"
74e37110e5edf38d1c9ec1b46f42670340a0c6c7,"Avoid NPE in PostConstructAdapterFactory (#1103)

* Avoid NPE in PostConstructAdapterFactory

The RawType's Superclass might be null. This happens, for example, when the type is a collection.

* Add test case for NPE in PostConstructAdapterFactory

* Improve the code quality of PostConstructAdapterFactoryTest

* Improve the code quality of PostConstructAdapterFactoryTest

* Improve the code quality of PostConstructAdapterFactoryTest"
1c09b3f92899b2a88a216932a72a0708e4a40550,"Fix well formed exception (#1105)

The previous exception was styled in the following way:
... [""DATE']...
This commit will fix the different quote marks and replace the "" with '"
ee691fba43663d1715752a7642f4b4ece1738567,fix javaDoc (#1122)
03a72e752ef68269990f984c9fd613cfd59224bc,"Fix StackOverflowError on resolving types with TypeVariable recursion (#1128)

* Fix StackOverflowError on resolving types with TypeVariable recursion

Sample failing code:
  private static class TestType<X> {
    TestType<? super X> superType;
  }
  ...
  new Gson().getAdapter(TestType.class);

* fix build errors"
68cf8fdc9576815e313ffbae2d9e2604dc2f16fa,fix typo in ConstructorConstructor exception
afcb3815d9f3256a9d34f275f4d3701d82f7bc4c,"Merge pull request #1134 from tommagnusson/patch-1

fix typo in ConstructorConstructor exception"
d9cc7bc60b492664fe9f328d1bab9f9ae873f4d4,Make GsonBuilder.create() factory order idempotent. (#1141)
9f8ace9ac4c56b82eba1bbd8b44f80e042bda7e0,Dont warn on sun.misc package.
558c13918ea98a13e285ab7b12885ad7ff7938cd,"Merge pull request #1158 from naturalwarren/ws_update_proguard

Update proguard rules to not warn on sun.misc package."
f0aa1118e9ef66ed324f9a63cdfb551cb4e9eca5,"Java protobuf uses lower camel for all field names. When using reflection to find the generic type of repeated fields, can't use the user specified formats for field name conversion. (#1119)"
7a9fd5962dce7f277efa15fcc996606be0733bac,"Fixed DefaultDateTypeAdapter nullability issue and JSON primitives contract (#1100)

* Fixed DefaultDateTypeAdapter nullability issue and JSON primitives contract

Regression in:

* b8f616c939c652b8540c95fa2b377b8c628ef3ff - Migrate DefaultDateTypeAdapter to streaming adapter (#1070)

Bug reports:

* https://github.com/google/gson/issues/1096 - 2.8.1 can't serialize and deserialize date null (2.8.0 works fine)
* https://github.com/google/gson/issues/1098 - Gson 2.8.1 DefaultDateTypeAdapter is not null safe.

* Fixed DefaultDateTypeAdapter nullability on write"
ddcd6aea7d2069b13afd142646f6c92b8af63acb,"Update fromJson Javadoc. (#1151)

For the string-based fromJson() method, mention that the result will be null if the given string is empty."
500672c80d5aec78cfa2f866ce8febc22266cad7,Change log for 2.8.2
4c3e4715895abb3d830b323db104c40eddb6f026,Upgraded plugin versions (#1161)
fbaa708b41ad382bb1da55821986a7a78012643d,revised steps
d90f63dc88ac08971cf088a3537e1b1108603574,[maven-release-plugin] prepare release gson-parent-2.8.2
c0b50ba3a394680d34d9952eb76bbe59397bec62,[maven-release-plugin] prepare for next development iteration
a8f7acd618e7535af67bb9f525c6f15ba52937a5,Update UserGuide.md
08bbb226f11a1f7f76835f953e700d905e1fab4d,"Add newBuilder() API (#1142)

* Add Gson.newBuilder API.

* Remove redundant test.

* Address Codacy comments.

* Reduce visibility of GsonBuilder constructor."
b1fb9ca9a1bea5440bc6a5b506ccf67236b08243,"fix issue #1107: resolve element type in wildcard collection types (#1146)

* fix issue #1107: resolve element type in wildcard collection types

* fix Codacy warnings

* fix Codacy warnings"
c5c843510d883afaa853225d1de2416cba9a02cd,gradle snippet
35b3b7596db24340068be23de2a5b088bd15c0ef,Added gradle section
b46b04d7a3a831869fd2d2d6e1d8aff4c044c6c3,ToC edit for gradle
e38a6ce60dc5f381482153842fe2c74319d1f44b,minor typo
d9249e9c36fbb4890f6d00f90928d3ee63fc1a0f,Fix README.md grammatical error (#1175)
28344d861d6e539d482ac9743788951191b965fe,"Clarify handling of non-object omitted fields (#1169)

While deserializing, a missing entry in JSON results in setting the corresponding field in the object to its default value: null for object types, zero for numeric types, and false for booleans."
6c05cedecb6c200e7f15e81b95a616ba503d78d3,Replaced oracle JDK 7 with openJDK 7 to fix broken build. (#1184)
855f0493d0edba5d6f6ec4c72a46bfef225ef22c,Fix a small typo (#1183)
6e2fcdcaf252c54a151ce6a4441280e4c54153ae,Use Message instead of GeneratedMessage which is specific to protobuf v2. Message is a common superclass of both GeneratedMessage and GeneratedMessageV3. Also throw an exception to notify caller that DynamicMessage is not supprorted. (#1191)
6b20e3aaec0b3280f01c7785b5dd391ab6de9cc7,"Including Maven snippet on README.md (#1205)

* Update README.md

Adding maven dependency to readme file. 
Fixes issue #1204

* incorporated feedback"
7ddac52748c59228cb86d08d60b417ce737a0563,"Java 9 module (#1179)

* Add module-info.java

* Exclude module-info.java by default"
3bf1967c0a315d8a74a1975a9bbc6edbf1009549,"Optimised the create() call for Excluder TypeAdapterFactory (#1199)

* optimized the create() method, excludeClass used to get called two times, changed it to one

* fixed the create() method, and added support to disableAnonymousAndLocalClassSerialization

* peek only once

* enable anonymous and local class serialization

* bugfix

* removed the method, will raise it as a separate PR"
c744ccd51cdea2e92b3e06abc44336943281cddd,avoid repeated calls to build() during deserialization by obtaining field types from the Message's defaultInstance (#1215)
0aaf5ff408a54eb7dc238d3569b5d1cef9273047,"fix Java9 DateFormat changes (#1211)

* fix Java9 DateFormat changes

* fix Codacy warnings"
fb7ab06f074783251b5e4b087269a5b4288e4148,Update README.md
8445689e4d1159298179580b4e260ed23bb2b9bc,"Java 9 support: use Unsafe-based reflection in Java 9+ (#1218)

* Java 9 support: use Unsafe-based reflection in Java 9+

fixes ""illegal reflective access"" warnings and exceptions

* fix Codacy warnings

* improve code quality based on PR review

* improve code quality based on PR review

* fix Codacy warning

* improve code quality based on PR review

* inlined createReflectionAccessor method"
4081dbaa6da4b5e14df5ac5eae23196b14827b8b,"Added a test for serialization/deserialization of enum classes with
fields"
bff1027df2aa0374ee92d212b087f6c8672fb19e,updated README to use implementation instead of compile
bdea5b9e99012eacf1a7f35f5f23733c9caf8a89,Removed the executable flag from clearly text files
0cf6c4dd1fe434cc50b70b8ee007bf09688a522f,"Merge pull request #1300 from lyubomyr-shaydariv/no-exec

Removed the executable flag from clearly text files"
7fb3960afff331deac857d801970fe50a385ff39,Fixed excludes section in maven-compiler-plugin (#1301)
4ed639e88291228b384201ea60b9a0b433e8bfa8,[maven-release-plugin] prepare release gson-parent-2.8.3
7dd379ffe17582d9114adf394944e1af8cdc0698,[maven-release-plugin] prepare for next development iteration
3bc566b22650198499d204f9b792279dc8141441,version 2.8.3
91cb49e7ce81baee4e51dcce45e1e043c7e38e0c,Version 2.8.3 changelog
bf4789bb1f3e8e3e404ea62cdddf88b83f02340d,2.8.3 in readme
be23a3aeeb9b5766b92e803d4f001bfaaffa45b7,"Format ReleaseProcess.md using GFM (#1284)

Changes
- Space in `h1` header
- Indent code block & nested bullets properly with 3 spaces
- Unify numbered list indicator to `1.`"
ab35f11077e6a4eb41066ccb4acd8dd1aff28a63,add FieldNamingPolicy.LOWER_CASE_WITH_DOTS (#1278)
1b28ff3cda251af75b57110d59ae98882c54a1db,Added a test for deserialization of fields using lowercase-dot naming policy (#1303)
941363f14c8e394ab75a62b4ced4d9dacdffbb6d,Added gradle/Idea support (#1302)
049bf84e6803444282d0ad1c4c43f5359cc1dfe5,"Using sun.misc.Unsafe only through reflection to avoid binary dependency (#1306)

If sun.misc.Unsafe not found on Java 9, try field.setAccessible
Also removed exception traces when sun.misc.Unsafe or override are not found"
9fbebdf990ef40d3f59b02b5b5fccb2f447f8759,[maven-release-plugin] prepare release gson-parent-2.8.4
446a3bff8da9bd365f0ee2434e7e7703510e53ae,[maven-release-plugin] prepare for next development iteration
d8857cd615f5b040c479df72384b24af513741b7,updated release process to the current steps
f77615ecff5d5f4f5d3164ea64923840f982876f,2.8.4
f2dd56d98ce7d6ea0c0f7fe9f16be51b2ea26105,2.8.4 changelog
57085d621242cdca665e94dbd880738c37b9490b,2.8.4 README
a6890bbaba29fb1074388c06bf0c231f8e06b4f2,"Fixed https://github.com/google/gson/issues/1310 (#1311)

* Fixed https://github.com/google/gson/issues/1310

Also renamed VersionUtils to more readable abstraction JavaVersion
Added support for debian naming convention
Using min supported version (6) as the default if JDK version can't be figured out

* Moved JavaVersion to an internal package"
354742088597d78a14672c56325ddb66589f37ad,Merge branch 'master' into master
1215841e46f1e90d964d335acbc0d8c9aad43590,"Merge pull request #1281 from greatjack1/master

updated README to use implementation instead of compile"
d84e26d80c39e3b8e34c7e8bbef0ffb35e2947b5,"Issue 1242: Printing Gson version when throwing AssertionError and IllegalArgumentException (#1321)

On some versions of Android (probably on some variants of the popular Samsung S4 phone), an older version of Gson is suspected to be bundled in, and gets picked up from the system classpath.
For those versions, the applications that include the latest Gson fail unexpectedly. This debug print will help confirm this issue."
4c685b21a83b754abdf129f2efe9b9129aab8768,"Private constructor (#1324)

* Adding private constructors on Util classes

* Remove obsolete step"
f649e051411e092f0123878e16c5132500a2d01e,[maven-release-plugin] prepare release gson-parent-2.8.5
986d3fb2fa27a117ca0566896f99e7b5a0fd5b2a,[maven-release-plugin] prepare for next development iteration
5184e717cef322c239b59ea846b89cd5ead423f2,Updated User Guide for 2.8.5
35c0ea746874472b5a85acc5f07c859765efb6cb,Changelog for Gson 2.8.5
9d44cbc19a73b45971c4ecb33c8d34d673afa210,Updated dependency examples to version 2.8.5 (#1330)
67ff7d519826279d2e1f24ae6bf98c0a5b394f2d,"add .gitattributes (#1350)

Use the linguist-documentation attribute to mark paths as documentation."
c1e7e2d2808b042cbe47ca31869ee6ccc62c5417,"Add possibility to maintain type variable in created pojo (#1342)

Instead of completely remove type variable, give the possibility to decide if maintain type value (if pojo has type variable declaration) or not."
d8d8ccb98a80108d4f08f7f5e92a4af5f757a27e,"Simplify maintainType logic

When we maintain the label value, we do not need to make a new JsonObject and copy over the keys and values when writing. The ordering will change, though. Before this change, it always put the label first."
92b617379191bec5bc498830c87b0c143975848c,Deprecate JsonElement.getAsCharacter
86ade21078b656506c47d51933af6df921ab5161,Change 'compile' to 'implementation'
ca9ae4c288b5f4519f2166f42a2efac64fdd7834,"Merge pull request #1373 from knjk04/ImplementationDependency

Change 'compile' to 'implementation'"
3f4ac29f9112799a7374a99b18acabd0232ff075,"Clean up the README a bit (#1376)

* Remove a lot of ""Gson"" as it's implied nearly everywhere.
* Remove broken Javadoc badge. Move other badges to be near the content to which they apply
* Not an official Google product
* Make download section more general. People other than Android developers use Gradle, for example."
e2296f42d553e3f299c7dd2f4d1a4efd60007ade,"Fix issue with recursive type variable protections to fix #1390

When a type variable is referenced multiple times it needs to resolve
to the same value.  Previously, the second attempt would abort
resolution early in order to protect against infinite recursion."
69f7c4e243c385b318ed63205817347e4bbe379e,Replace instance equality checks in $Gson$Types#resolve
b046ea28eeb819ecc30c3a39cb6912dc84fae015,Typo in JavaDoc example
27c933527572bf861b8cb45774b0ceaa48b8805c,"Merge pull request #1400 from hmble/patch-1

Typo in JavaDoc example"
5bbc768fa6cd3e8a3a7bebf52b0ac1e4c6e0bd12,"Fix JPMS module setup (fixes #1315) (#1402)

* Fix JPMS module setup (fixes #1315)

* Re-added cause to AssertionErrors"
aa1a34eb5e1f0070b2b5697434a358059a4d7267,"Display null-handling details as sublist

Indent the details of null handling.

Comparing against the [old, Google Sites user guide][gsites] shows that the two items following the ""handles nulls correctly"" item are intended as a sublist under that item.

[gsites]: https://sites.google.com/site/gson/gson-user-guide#TOC-Finer-Points-with-Objects"
da5cae371e8b739fe63a6c6d16debf7b297dea0e,"Merge pull request #1413 from jeremy-w/patch-1

Display null-handling details as sublist"
4d942db168c593ba86e46e2b26b026ff2b0d1018,Update Gson.java documentation to explicitly state behavior for empty strings (#1464)
b75e1bbc7915f409ba0254fcc92c71ed6798e69b,"Code cleanup (Removed spaces) (#1474)

* Removed double spaces in comments

* Unified comments

* Removed space

* Removed spaces in code"
3c6eea6b7df00cac5a080b28533cd34c120c3860,Adapt gson/gson/README to match with gson/README.md (#1472)
bac26b8e429150d4cbf807e8692f207b7ce7d40d,Optimize array copies
ab0821c83edd07f4e69eef15b93dd109ad3f750e,Fix wrong reference in Versioning Support example (#1482)
a817604a417349af15df0daf1589319282565f22,Add test coverage for passing null to JsonPrimitive constuctors
8bf2949c2934cf9a168df24d0d2a29c702556a91,"Remove object based constructors, remove some internal stuff"
5370b076e329444860b0ea0c7f33b10504281f27,Removing 'final' accessor from constructor (#1501)
fc63a6af4c0b34e808b4b373d9f24ef72df42a04,Make sql module dependency transitive (#1500)
3ee3c150edcfd39b8e72b49e33b2028938e27d0e,Remove boolean wrappers in JsonElement
46d0f58d1266c17a9fe6354344e9b1b7145fcb3d,Remove unnecessary explicit else statement
62f89ac929c8660908f98ddb458e386dd95d4bb5,"Merge pull request #1512 from Degubi/jsonelement_removebooleanwrapper

Remove package private helpers in JsonElement & JsonPrimitive"
477b3f77e159d15531fd30f41688d4b732a8b042,Refactor primitives class
c5a3f21fbad3828deba1deb88168e1f76829f807,Refactor JsonParser to statics & fix tests
63ee47cb642c8018e5cddd639aa2be143220ad4b,"Refactor uppercaseFirstLetter, add additional field to test (#1515)"
f426700bc458f53588510fbb64e615dd95c1cf81,"update proguard to fix R8 compatibility issue (#1527)

https://r8.googlesource.com/r8/+/refs/heads/master/compatibility-faq.md#member-in-a-data-object-is-always"
f07fa51200df2923174ae0e1f2bd25013522d28e,"Change URLs from http to https (#1521)

* Change URLs from http to https

* Changed github.io to javadoc"
49d8630978f2e93c49d2955fb8cad9b3d19a1503,"Update sample ProGuard config to mark fields instead of all members. (#1531)

GSON only needs to reflect based on fields:
https://github.com/google/gson/blob/4d942db168c593ba86e46e2b26b026ff2b0d1018/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java#L152

There's no reason to disallow optimizing methods."
aa236ec38d39f434c1641aeaef9241aec18affde,"Simplify BagOfPrimitives if statement (#1539)

* Simplify BagOfPrimitives if statement

* formatting"
ce0fc4f34fe783ab685762341d61439fd5dc4670,Removed release tag in maven-compiler-plugin to enable release build with Java 8
f885e602f17fe053576b138fa56c19d1dd46ba6f,Reverted the commit ce0fc4f34fe783ab685762341d61439fd5dc4670
3958b1f78dc2b12da3ffd7426d3fc90550d46758,"Prefer writing chars instead of strings of length one (#1576)

This results in a noticeable performance improvement with most writer
implementations (including BufferedWriter)."
0409a2ecab8026848ec34dbd0f09378484d9d840,Fix typo in UserGuide (#1572)
0e90771e455cd5db201b7beaa2456ffdf50c78f2,Made the build work again with JDK 8 (#1585)
7845c380778889eab5c57c24da416bf4f3da9b50,Minor cleanups in deprecations and other warnings (#1522)
d6e6a01f02417052cb1b65e9056bb678c4f91d98,Keep `TypeAdapter`s from being stripped (#1546)
20dca860dd023bbe917ca5a3fa5c3b7b3615be60,Add docs to module-info.java (#1535)
c18813884285493e69d94f004c294f539cc49828,restored Java 9 build (#1586)
21fc362a7ec9d312c34ad82df6188c6480280021,Fixed tests for java 11 (#1454)
29c93895bbcaed02178abc9e3d47b73878aaca73,[maven-release-plugin] prepare release gson-parent-2.8.6
d1828736eb425a575667e0c86117ced787d1cf5b,[maven-release-plugin] prepare for next development iteration
729e7d646eb5a69d5893475446060534f4e12c7e,2.8.6 changelog
188c6dbce6c74a7e5eed51ea2779bf54fcd2b5b0,Updated to use Gson 2.8.6
6818a2058f2da102e6d084b759f19a2216313e87,Gson 2.8.6 usage
236533ebd6230d5c16000f9b72c1e9b821c2999c,Add IDEA generated classes folder to gitignore (#1538)
9bf25c2eb6b6211550f7ba354641dba4bb887b35,"Refactor prefix array & loop logic, use if-s instead (#1505)"
87b1d26d06d47ae709b7e953392257b7cbef1b62,Update CHANGELOG.md (#1591)
47b28d99a17d492b37fcdd0fc41290419a010a0f,The JavaDoc is now more accurate about the type adapter serialization and deserialization (#1441)
521fab2dd5e829b51cff6813d0b5405d4ab2d1ee,"Fix OSGi metadata generation to work on JavaSE < 9 (#1603)

* Explicitly specify `Require-Capability: osgi.ee` to require 1.5+

Specifying disables bnd's auto-generated value which is determined from
the minimum versions of the .class files, including `module-info.class`

* Drop JavaSE-1.5 since that boat sailed a long time ago

* Drop unused org.apache.felix:maven-bundle-plugin plugin"
4109aaa6a92f3f9725c5e2f98308816761f0123e,"Use OpenJDK 11 for Travis CI (#1607)

Fixes #1606 (?)"
58f5ed9690a8d2fb0089b9b0cf4032d369483fa3,"Official Gradle Wrapper Validation Action (#1648)

See: https://github.com/gradle/wrapper-validation-action"
adc4c1949dd816eacb26175ee4bcab9f2c50b87d,Change links from HTTP to HTTPS (#1655)
530cb7447089ccc12dc2009c17f468ddf2cd61ca,Fix javadoc doclint HTML warnings (#1653)
4d735f190336ddf241eee48fa8495eabf637a330,"Add new testcases (#1638)

* Json Primitive Tests

* Json Tree Writer tests

* Add Tests for ISO8601Utils

* Add Tests for ISO8601Utils"
360cd3e2daaa867a064a80018c81e9c837bc7fa8,"Remove unused files (#1654)

* Remove outdated javadocs folder

* Remove old release notes

* Remove unused Maven assembly plugin file

Plugin usage has been removed in 2016e95"
fa947212e010e5757864fbebe9cdafde8faadabb,"Add isEmpty method to JsonArray class (#1640)

The method will return true if the array is empty and false if it's not"
55acc23d8656a9fe5b19b92029a2dc7277e3765c,"Fixing https://github.com/google/gson/issues/1592 (#1623)

adding null parameter check to name(), fixing the issue and being consistent with superclass behavior"
1a9469a8c5aa31deacd36b3d15347f873ce7e889,doc(UserGuide): mention TypeAdapters class (#1685)
9171715a880bf65bb698c6c76480d0a3fe65ae20,"Fix ISO8601UtilsTest failing on systems with UTC+X

Previously ISO8601UtilsTest.testDateFormatString() would fail on systems
where the time zone is UTC+X because getTime() returned ""2018-06-24"" for them.

Additionally the tests which previously changed the system locale and time
zone have been rewritten to create a UTC calendar instead. Setting locale
seems to not be necessary because ISO8601Utils.parse(...) does not do that
either."
541252a9fb9837eb8867c094adcd37af2a655731,Implement DefaultDateTypeAdapter in a type safer way
361292f1c192cdf06195cfd5346763ba38e3ce0d,Fix warnings
ceae88bd6667f4263bbe02e6b3710b8a683906a2,"Update proguard.cfg (#1693)

TypeAdapter is an abstract class, and R8 warns about this during the build."
380c4ec12c7a8b2b85cc3a8ac78b3f123162c70c,Make dependency on java.sql optional
4fb215c9df408ef48bad1288ef23c68b7910a7a3,Move SQL types specific tests to separate test class
a4a235e14a63b9a4f902805641f1160c6bf5aa93,Remove redundant validation method
b39494dbe68f91045850778cac4b661b38beb615,Fix fallback behavior of UnsafeReflectionAllocator when AccessibleObject isn't so accessible
b1edb7048687c2822b4fa006ddeb5e2cc2a038f9,Improve incorrect JsonStreamParser doc
074a556d38f0ff2c7a4924bb00a8ae1631601b67,"Bump junit from 3.8.2 to 4.13.1 in /extras

Bumps [junit](https://github.com/junit-team/junit4) from 3.8.2 to 4.13.1.
- [Release notes](https://github.com/junit-team/junit4/releases)
- [Changelog](https://github.com/junit-team/junit4/blob/main/doc/ReleaseNotes4.13.1.md)
- [Commits](https://github.com/junit-team/junit4/compare/r3.8.2...r4.13.1)

Signed-off-by: dependabot[bot] <support@github.com>"
345dea2c8adc0af2722c4261e7e3fa93a1f9bd0c,"Bump junit from 4.12 to 4.13.1 in /proto

Bumps [junit](https://github.com/junit-team/junit4) from 4.12 to 4.13.1.
- [Release notes](https://github.com/junit-team/junit4/releases)
- [Changelog](https://github.com/junit-team/junit4/blob/main/doc/ReleaseNotes4.12.md)
- [Commits](https://github.com/junit-team/junit4/compare/r4.12...r4.13.1)

Signed-off-by: dependabot[bot] <support@github.com>"
daba2fd7ff4bc9fd51c209952964b6fd5366b923,"Bump junit from 3.8.2 to 4.13.1 in /codegen

Bumps [junit](https://github.com/junit-team/junit4) from 3.8.2 to 4.13.1.
- [Release notes](https://github.com/junit-team/junit4/releases)
- [Changelog](https://github.com/junit-team/junit4/blob/main/doc/ReleaseNotes4.13.1.md)
- [Commits](https://github.com/junit-team/junit4/compare/r3.8.2...r4.13.1)

Signed-off-by: dependabot[bot] <support@github.com>"
ada6985285ee2d1d864c77d17d9b162d78371a26,"Bump junit from 3.8.2 to 4.13.1 in /metrics

Bumps [junit](https://github.com/junit-team/junit4) from 3.8.2 to 4.13.1.
- [Release notes](https://github.com/junit-team/junit4/releases)
- [Changelog](https://github.com/junit-team/junit4/blob/main/doc/ReleaseNotes4.13.1.md)
- [Commits](https://github.com/junit-team/junit4/compare/r3.8.2...r4.13.1)

Signed-off-by: dependabot[bot] <support@github.com>"
bcb6b1fa812cb029bee27619c0a9fe01b89f88f1,Create dependabot.yml
49d128b4231217786274a53df29af1aeeb469cdb,"Bump maven-javadoc-plugin from 2.10.4 to 3.2.0

Bumps [maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 2.10.4 to 3.2.0.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-2.10.4...maven-javadoc-plugin-3.2.0)

Signed-off-by: dependabot[bot] <support@github.com>"
0d4e59da8bad80b48b13d1be1728244e9faa99ac,"Bump maven-bundle-plugin from 3.3.0 to 5.1.2

Bumps maven-bundle-plugin from 3.3.0 to 5.1.2.

Signed-off-by: dependabot[bot] <support@github.com>"
83c63d225604b2c1c4c863a18940a52cc7c70f2a,"Bump bnd-maven-plugin from 4.0.0 to 5.3.0

Bumps [bnd-maven-plugin](https://github.com/bndtools/bnd) from 4.0.0 to 5.3.0.
- [Release notes](https://github.com/bndtools/bnd/releases)
- [Changelog](https://github.com/bndtools/bnd/blob/master/docs/ADDING_RELEASE_DOCS.md)
- [Commits](https://github.com/bndtools/bnd/commits)

Signed-off-by: dependabot[bot] <support@github.com>"
e6750e7b947b5508128689915c66e89792e0cdb2,"Bump maven-scm-provider-gitexe from 1.9.5 to 1.11.2

Bumps maven-scm-provider-gitexe from 1.9.5 to 1.11.2.

Signed-off-by: dependabot[bot] <support@github.com>"
05a25a1ef242520bef0e4f9a64e319f3af687e69,"Bump junit from 4.12 to 4.13.2

Bumps [junit](https://github.com/junit-team/junit4) from 4.12 to 4.13.2.
- [Release notes](https://github.com/junit-team/junit4/releases)
- [Changelog](https://github.com/junit-team/junit4/blob/main/doc/ReleaseNotes4.12.md)
- [Commits](https://github.com/junit-team/junit4/compare/r4.12...r4.13.2)

Signed-off-by: dependabot[bot] <support@github.com>"
b8ac65ba2d686bd0606d6a9d7c45151dc5d24bf5,"Merge pull request #1892 from google/dependabot/maven/junit-junit-4.13.2

Bump junit from 4.12 to 4.13.2"
4e2610d52c09bb211c20e198d814369fa117898d,"Merge pull request #1891 from google/dependabot/maven/org.apache.maven.scm-maven-scm-provider-gitexe-1.11.2

Bump maven-scm-provider-gitexe from 1.9.5 to 1.11.2"
05d6c16a02b258f9a43bedde0e71e6e1f5a613e7,"Merge pull request #1890 from google/dependabot/maven/biz.aQute.bnd-bnd-maven-plugin-5.3.0

Bump bnd-maven-plugin from 4.0.0 to 5.3.0"
daafbe949f2699907e4817eb9b37aa182e8b31bf,"Merge pull request #1889 from google/dependabot/maven/org.apache.maven.plugins-maven-javadoc-plugin-3.2.0

Bump maven-javadoc-plugin from 2.10.4 to 3.2.0"
0bf0998f645d16fad515226b4145484a0d699492,"Merge pull request #1888 from google/dependabot/maven/org.apache.felix-maven-bundle-plugin-5.1.2

Bump maven-bundle-plugin from 3.3.0 to 5.1.2"
90ffe4c3d562ed3adf3b080d67bdb34f375818bf,"Merge pull request #1804 from google/dependabot/maven/metrics/junit-junit-4.13.1

Bump junit from 3.8.2 to 4.13.1 in /metrics"
b7c590ff8e397e0a2e82324edec45b34901a8843,"Merge pull request #1802 from google/dependabot/maven/codegen/junit-junit-4.13.1

Bump junit from 3.8.2 to 4.13.1 in /codegen"
4d43f30cf44ac640578a124902869920a788a4ba,"Merge pull request #1801 from google/dependabot/maven/proto/junit-junit-4.13.1

Bump junit from 4.12 to 4.13.1 in /proto"
8a6af9d9849ff9c072c2960814f32ca9c9ea9a82,"Merge pull request #1800 from google/dependabot/maven/extras/junit-junit-4.13.1

Bump junit from 3.8.2 to 4.13.1 in /extras"
829a514aed3401bed0fbac5fd6499926aa961039,"Merge pull request #1786 from Marcono1234/marcono1234/JsonStreamParser-doc-fix

Improve incorrect JsonStreamParser doc"
1e4b84c34f9654fc94cbdf39580d452f923bb901,"Merge pull request #1687 from Marcono1234/iso-utils-test-fix

Fix ISO8601UtilsTest failing on systems with UTC+X"
d4fb033a472c338814f4159d6602aef561f393f1,"Bump maven-javadoc-plugin from 3.2.0 to 3.3.0

Bumps [maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.2.0 to 3.3.0.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-3.2.0...maven-javadoc-plugin-3.3.0)

Signed-off-by: dependabot[bot] <support@github.com>"
3a694696383026cdaf4b90168bc0dea41e34260a,"Merge pull request #1894 from google/dependabot/maven/org.apache.maven.plugins-maven-javadoc-plugin-3.3.0

Bump maven-javadoc-plugin from 3.2.0 to 3.3.0"
fa4a17756d0e54aaad6e8c33054ff64f8e74cd09,Add missing dependency for the release plugin.
4520489c29e770c64b11ca35e0a0fdf17a1874ab,[maven-release-plugin] prepare release gson-parent-2.8.7
dadbdbb837dcff4bd0519c8977d6c3a3c959b438,[maven-release-plugin] prepare for next development iteration
45c0bd96f08ce60baaacc339138a2a2c97b953a6,Update user guide and change log to reflect 2.8.7 release.
f5fcb0f4cbe554a237459db96f2aebd41ca3f394,"Merge pull request #1895 from google/finish-2.8.7

Update user guide and change log to reflect 2.8.7 release."
812b9c08e373240d69e0dd99a8d08fd47c53b48e,"Update README.md version 2.8.6 -> 2.8.7

version 2.8.6 -> 2.8.7 for gradle and maven dependencies block"
f319c1b8e5ac1135ab253513f91d5ece6719cdf7,"Merge pull request #1897 from Conclure/patch-1

Update README.md version 2.8.6 -> 2.8.7"
55115a5ca259787ce8d4deb7952d198f50591f92,"Test cases for testing the exceptional behavior of get, getAsBoolean, getAsDouble, getAsInt, getAsJsonArray, getAsJsonObject, getAsLong, and getAsString methods of JsonArray class. These test cases, which we wrote according to the specified behavior of each method, that helped us in identifying the documentation bugs in JsonArray and JsonElement classes, which we submitted issues for (Issue #1908). Note that we have adapted these test cases based on similar tests from the JSON-java project (https://github.com/stleary/JSON-java)."
2d1981d39bfcadfeac553582494abaec2fc5d737,"modify test cases for testing the exceptional behavior of get... methods [use fail(...), use JsonArray methods, remove unused values, formatting, #1909, #1908]"
d65960b001530f62a01f947fd4a639e93b3e0347,"Merge pull request #1391 from mcumings/issue1390

Fix issue with recursive type variable protections to fix #1390"
425cb25549ae83082b5e1ba4dfbc3bb635a15faf,"Adjust some minor details of #1391.

Use two-space indentation for the new test.
Use standard Google import style.
Supply missing type argument for `TypeVariable`."
a14f1618b57a8e6eb836981c4d7d1cda75f7376c,"Merge pull request #1924 from eamonnmcmanus/master

Adjust some minor details of #1391."
63e747f7f4b5d80404e0a0142c92e6bf79769312,"Merge pull request #1712 from rhernandez35/master

Fix fallback behavior of UnsafeReflectionAllocator when AccessibleObject isn't so accessible"
68f99f2440e93b1f80b241ea575929ffa79b9513,"Make EnumTypeAdapter friendly with obfuscation

When enum value was obfuscated by proguard, EnumTypeAdapter raise NoSuchFieldException even if apply SerializedName annotation.
Because EnumTypeAdapter cannot find obfuscated enum constant field with its name."
94f894cf44bb908c1dc9b5d7f0a10185a80dc7f8,Add testcase for obfuscated enum class
7988fbfa9047f4373bd382efb1b5add660e28cfd,Update proguard plugin to support Java 11 compiler
1406477d0cd37e8d5d04e619ac349f0a6da614e3,Fix post-obfuscate-class task to include obfuscated test classes
e99a4b1cb721d8153c4cf9659571fe7ea352799b,Move testcases-proguard.conf into gson/src/test/resources
92a98dab02891af20913c07b4172614ca81b64b6,Removed unused import
6ac9f7d8400851fa3d0a136817e880126de9840b,Suppress unchecked type cast warning
20720d6a400eaea63c44f088479daea426e2de99,Remove unnecessary catch block
59a8aedb37ae35d4d2a4306c92efd463fffaaf69,Use SecurityManager to read enum fields
d8c5fcf00bdd3170365e92e43880021031c7d005,Fix indentation of EnumWithObfuscatedTest
25f47f87a5a33524b4b62f4d49c494a4b19ef970,"Merge pull request #1495 from ganadist/master

Make EnumTypeAdapter friendly with obfuscation"
178b221fa0dfc26bf27331e7ef6da9657bde1fdf,"Bump maven-resources-plugin from 2.7 to 3.2.0

Bumps [maven-resources-plugin](https://github.com/apache/maven-resources-plugin) from 2.7 to 3.2.0.
- [Release notes](https://github.com/apache/maven-resources-plugin/releases)
- [Commits](https://github.com/apache/maven-resources-plugin/compare/maven-resources-plugin-2.7...maven-resources-plugin-3.2.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-resources-plugin
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>"
b7fce3850d6508ad18500abf3aac1354d277798d,"Bump proguard-maven-plugin from 2.3.1 to 2.4.0

Bumps [proguard-maven-plugin](https://github.com/wvengen/proguard-maven-plugin) from 2.3.1 to 2.4.0.
- [Release notes](https://github.com/wvengen/proguard-maven-plugin/releases)
- [Changelog](https://github.com/wvengen/proguard-maven-plugin/blob/master/CHANGELOG.md)
- [Commits](https://github.com/wvengen/proguard-maven-plugin/commits)

---
updated-dependencies:
- dependency-name: com.github.wvengen:proguard-maven-plugin
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>"
da2bfd7d1c0462547cb470d992a861987f3cca16,"Bump copy-rename-maven-plugin from 1.0 to 1.0.1

Bumps [copy-rename-maven-plugin](https://github.com/coderplus/copy-rename-maven-plugin) from 1.0 to 1.0.1.
- [Release notes](https://github.com/coderplus/copy-rename-maven-plugin/releases)
- [Commits](https://github.com/coderplus/copy-rename-maven-plugin/commits)

---
updated-dependencies:
- dependency-name: com.coderplus.maven.plugins:copy-rename-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>"
d3a75cb56937d687a66c8710e40c2da6223db0c3,Retain generic signature of TypeToken with R8 version 3.0 and higher
89f0baeead5ff39bf62f74ee8264a1c940ed96bb,"Merge pull request #1927 from google/dependabot/maven/com.coderplus.maven.plugins-copy-rename-maven-plugin-1.0.1

Bump copy-rename-maven-plugin from 1.0 to 1.0.1"
80feb232b5be12db9dd0f75d9dc63629fb5456e2,"Merge pull request #1926 from google/dependabot/maven/com.github.wvengen-proguard-maven-plugin-2.4.0

Bump proguard-maven-plugin from 2.3.1 to 2.4.0"
df94ccdb483c788eaa65509c12f0f6cbc952dac8,"Merge pull request #1925 from google/dependabot/maven/org.apache.maven.plugins-maven-resources-plugin-3.2.0

Bump maven-resources-plugin from 2.7 to 3.2.0"
789818d1802ec10feeeceddc7571e069ae762b19,"Merge pull request #1930 from christofferqa/keep_typetoken

Retain generic signature of TypeToken with R8 version 3.0 and higher"
01ab13f701e6db84bdf37f602ef7af3c8d5c2f35,"Remove unused imports [#1909, #1908]"
9edaeb3b2e8824ba79afac1cdc9aa2c42c0bec2a,"Merge pull request #1909 from HiFromAjay/aj

Test cases for testing the exceptional behavior of JsonArray get... methods"
f98dabd1e966c97aa88ee74d587eb1ea810e39b3,"Bump maven-scm-api from 1.11.2 to 1.11.3

Bumps [maven-scm-api](https://github.com/apache/maven-scm) from 1.11.2 to 1.11.3.
- [Release notes](https://github.com/apache/maven-scm/releases)
- [Commits](https://github.com/apache/maven-scm/compare/maven-scm-1.11.2...maven-scm-1.11.3)

---
updated-dependencies:
- dependency-name: org.apache.maven.scm:maven-scm-api
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>"
205df01c047ecc03cf217f17e2030852a4ac96be,"Bump maven-scm-provider-gitexe from 1.11.2 to 1.11.3

Bumps maven-scm-provider-gitexe from 1.11.2 to 1.11.3.

---
updated-dependencies:
- dependency-name: org.apache.maven.scm:maven-scm-provider-gitexe
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>"
a7404e8ede4ca910dac2dd5f5643d30fbea75ca3,"Merge pull request #1935 from google/dependabot/maven/org.apache.maven.scm-maven-scm-api-1.11.3

Bump maven-scm-api from 1.11.2 to 1.11.3"
81f25c8b45266383ab1d0956c22cf58b5af44a3f,"Merge pull request #1936 from google/dependabot/maven/org.apache.maven.scm-maven-scm-provider-gitexe-1.11.3

Bump maven-scm-provider-gitexe from 1.11.2 to 1.11.3"
b41030d3dc965eca1b0a0f1c35ce185dd8e80e99,[maven-release-plugin] prepare release gson-parent-2.8.8
b2f661166f788185d5c3e5b588d0951c52ec2119,[maven-release-plugin] prepare for next development iteration
03be83591467afc368608e80a03f9d6a0e9720fd,"Update change log, and version numbers in documentation."
69173b02eaa82de0382d94478a1b4cdeafeca829,Merge branch 'master' into optional-sql
1023f0fe34ff1019109cd5f548c52eaee49750a5,"Merge pull request #1707 from Marcono1234/optional-sql

Make dependency on java.sql optional"
62a97023852f879eb5819c3ef0fb7e7fdda51bc7,Improve the speed of the JSON_ELEMENT TypeAdapter when the object graph has already been turned into a JsonElement
ac14b4c197382810601574f1defd995842d7bfd7,"Make the nextJsonElement more robust
Add test cases"
66fd2acdcf7d2c4f38afba3595e509df8651f2c5,Fix formatting
1a2e58a42f7eeb011293f5ab4dd40da9f5e39ee1,Remove an unused import. (#1947)
c8f26dc907515b40dd2ddb471ee1d6cc097d0e8b,Add missing  calls when testing for exceptions. (#1948)
4bb67483f926a5a49d173e2fef1be5cfe58f1ea3,"Update dependencies in proto/pom.xml. (#1949)

Also use GeneratedMessageV3 rather than GeneratedMessage, consistent with recent versions of protoc."
4f2aeaa2881aaa92bd4a026f9aa140f5196158cd,"Add license note to GSON POM file. (#1951)

* Add license note to GSON POM file."
9484297fbbc357816af78ac60b776e9da05787b3,"update UserGuide.md (#1954)

Id Class does not have get method, we should new a instance."
ebe4b581ddc5adc0e3cab0d3a7f214691ecebf24,"update RawCollectionsExample.java (#1953)

use static method instead deprecated method"
b82c76717b91b4f5ba79dd54383f8e59829a4597,"Bump maven-javadoc-plugin from 3.3.0 to 3.3.1 (#1956)

Bumps [maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.3.0 to 3.3.1.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-3.3.0...maven-javadoc-plugin-3.3.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-javadoc-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
f1f90313fc22c122a28716e7ecac1543e6fa253e,"Improve Maven build (#1964)

- Specify missing plugin versions
- Fix or suppress ProGuard notes and warnings"
26a1928277f7eba70609f02697509ba9258dd8ef,"Fix `RuntimeTypeAdapterFactory` depending on internal `Streams` class (#1959)

* Fix RuntimeTypeAdapterFactory depending on internal Streams class

* Clean up gson-extras project, make it Maven module of gson-parent

* Remove broken test from GraphAdapterBuilderTest"
6a5e7753624dc2f1619137a7fbf0f89a160debdd,"Bump maven-scm-provider-gitexe from 1.11.3 to 1.12.0 (#1967)

Bumps maven-scm-provider-gitexe from 1.11.3 to 1.12.0.

---
updated-dependencies:
- dependency-name: org.apache.maven.scm:maven-scm-provider-gitexe
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
aa5554e69a2d5ee7e557b3cc1f5d68275fd4c1ab,Don't exclude static local classes (#1969)
3b7835a18b7ce999fe79ad12cd85014642f30968,Switch to GitHub Actions (#1974)
b0f3237bb88141635c2cbc449f2cd632cbad20bf,"Bump proguard-maven-plugin from 2.4.0 to 2.5.1 (#1980)

Bumps [proguard-maven-plugin](https://github.com/wvengen/proguard-maven-plugin) from 2.4.0 to 2.5.1.
- [Release notes](https://github.com/wvengen/proguard-maven-plugin/releases)
- [Changelog](https://github.com/wvengen/proguard-maven-plugin/blob/master/CHANGELOG.md)
- [Commits](https://github.com/wvengen/proguard-maven-plugin/commits)

---
updated-dependencies:
- dependency-name: com.github.wvengen:proguard-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
7cfdf44893b74fb762757c37d14e441e98ab9663,"Add GitHub issue templates (#1977)

* Add GitHub issue templates

* Adjust bug report issue template"
7b9a283a7a5d66878c9be01227b15e631afe2a5a,"Bump bnd-maven-plugin from 5.3.0 to 6.0.0 (#1985)

Bumps [bnd-maven-plugin](https://github.com/bndtools/bnd) from 5.3.0 to 6.0.0.
- [Release notes](https://github.com/bndtools/bnd/releases)
- [Changelog](https://github.com/bndtools/bnd/blob/master/docs/ADDING_RELEASE_DOCS.md)
- [Commits](https://github.com/bndtools/bnd/commits/6.0.0)

---
updated-dependencies:
- dependency-name: biz.aQute.bnd:bnd-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
1cc16274235f89650349884dd04760bf15a95d96,Fix incorrect feature request template label (#1982)
fe30b85224316cabf19f5dd3223843437c297802,"Support arbitrary Number implementation for Object and Number deserialization (#1290)

* Object and Number type adapters number deserialization can be configured

* Change wording of ToNumberStrategy documentation

* Use inline links in doc sparingly

If the element has already been linked before, don't create a link for
every subsequent occurrence.

See also (slightly dated)
https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html#inlinelinks

* Link to default to-number policies in ToNumberStrategy doc

* Reduce code duplication for deserializing Number

* Hide default factory constants of NumberTypeAdapter and ObjectTypeAdapter

This encapsulates the logic a little bit better.
Additionally refactored factory created by NumberTypeAdapter to only create
TypeAdapter once and then have factory reuse that adapter for better
performance.

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>"
cd748df7122ea4260d35dfe90cfab0c079a1504d,"Fix LongSerializationPolicy null handling being inconsistent with Gson (#1990)

Gson does not actually use the specified LongSerializationPolicy but instead
uses type adapters which emulate the behavior. However, previously Gson's
implementation did not match LongSerializationPolicy regarding null handling.

Because it is rather unlikely that LongSerializationPolicy has been used on
its own, this commit adjusts its implementation to match Gson's behavior
(instead of the other way around)."
bda2e3d16af776e0f607d56bbab6eac22f8f2d58,"Improve number strategy implementation (#1987)

* Fix GsonBuilder not copying number strategies from Gson

* Improve ToNumberPolicy exception messages"
e6fae590cf2a758c47cd5a17f9bf3780ce62c986,"Prevent Java deserialization of internal classes (#1991)

Adversaries might be able to forge data which can be abused for DoS attacks.
These classes are already writing a replacement JDK object during serialization
for a long time, so this change should not cause any issues."
c54caf308c3f7d4a6088cf3085c2caa9617e0458,Deprecate `Gson.excluder()` exposing internal `Excluder` class (#1986)
ca1df7f7e09f6b1a763882029dd7057f475b31de,"#1981: Optional OSGi bundle's dependency on sun.misc package (#1993)

* #1981: Avoid OSGi bundle's dependency on sun.misc package

* Specify optional dependency on sun.misc.Unsafe

* Adjusting the test to sun.misc import being optional

* Using Collections.list and for loop

* Let the fail message include name of package

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Closing the input stream

* Dedicated assertSubstring method

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>"
ba96d53bad35f7466073f14cb3d89d09383e1a2d,"Fix missing bounds checks for JsonTreeReader.getPath() (#2001)

There are situations where the stack of JsonTreeReader contains a JsonArray
or JsonObject without a subsequent Iterator, for example after calling peek()
or nextName().
When JsonTreeReader.getPath() is called afterwards it therefore must not
assume that a JsonArray or JsonObject is always followed by an Iterator.

The only reason why this never caused an ArrayIndexOutOfBoundsException in
the past is because the stack has an even default size (32) so it would just
have read the next `null`.
However, if the stack had for example the default size 31, a user created a
JsonTreeReader for 16 JSON arrays nested inside each other, then called 15
times beginArray(), followed by peek() and getPath() the exception would
occur."
6a368d89da37917be7714c3072b8378f4120110a,[maven-release-plugin] prepare release gson-parent-2.8.9
128586847bc5669a4a10fd29ac3ead92b709352a,[maven-release-plugin] prepare for next development iteration
031db9d4737df018e93c76b75611fd3c8589034f,"Update CHANGELOG.md for 2.8.9. (#2005)

* Update CHANGELOG.md for 2.8.9.

* Adjust snapshot version. Gson versions have three numbers."
121bcede9663d890867179e3c700afcee25f93c0,Update project version in README (#2006)
466ca729167662b72beb0b952a7819b71547eaec,Update version number in UserGuide.md and proto/pom.xml.
b3188c113205bb41a980b09917b7f6b242cd32fc,Fix `FieldNamingPolicy.upperCaseFirstLetter` uppercasing non-letter (#2004)
b4dab86b105c85e6b7d7106c9ff11e3e923e3485,"Make default adapters stricter; improve exception messages (#2000)

* Make default adapters stricter; improve exception messages

* Reduce scope of synchronized blocks

* Improve JsonReader.getPath / getPreviousPath Javadoc"
e0de45ff69ba3daacc3b7623cc74fc69a4eaf6d0,"Delete unused LinkedHashTreeMap (#1992)

Class seems to be unused since commit f29d5bc37b52c4b8d2ad15a10bb0c7f684c1d45d.
Gson currently only uses LinkedTreeMap."
deaa3a6cd9f4676e0c826eadadd2f3d6dc857096,"Fix `Gson.newJsonWriter` ignoring lenient and HTML-safe setting (#1989)

* Improve Gson newJsonWriter and newJsonReader documentation

* Consider lenient and HTML-safe setting for Gson.newJsonWriter

* Remove empty line between imports"
a92bbf849c99b1fc708eb3dd209af9c72110ed4d,"Improve TreeTypeAdapter thread-safety (#1976)

* Improve TreeTypeAdapter thread-safety

Gson claims to be thread-safe so TreeTypeAdapter.delegate() might be
called by multiple threads. To guarantee that each thread sees a fully
constructed `delegate`, the field has to be `volatile`.

* Improve TreeTypeAdapter thread race comment"
cc505e1b9fa6e6e29466914a348315f73d326d27,"Convert codegen, metrics and proto to Maven submodules (#2008)

* Convert codegen, metrics and proto to Maven submodules

* Fix import order"
ca2ed748ba6e31c4a319ea6f2d2dc7048021f0a0,"Fix warnings (#2014)

* Fix warnings

* Address review feedback"
0d9f6b677ae67cbd749ebca817139041d1977831,"Bump guava from 30.1.1-jre to 31.0.1-jre (#2016)

Bumps [guava](https://github.com/google/guava) from 30.1.1-jre to 31.0.1-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
b0595c595bd2c052cd05e0283bb37b67c02bd06f,"Fix failing to serialize Collection or Map with inaccessible constructor (#1902)

* Remove UnsafeReflectionAccessor

Revert #1218

Usage of sun.misc.Unsafe to change internal AccessibleObject.override field
to suppress JPMS warnings goes against the intentions of the JPMS and does not
work anymore in newer versions, see #1540.
Therefore remove it and instead create a descriptive exception when making a
member accessible fails. If necessary users can also still use `java` command
line flags to open external modules.

* Fix failing to serialize Collection or Map with inaccessible constructor

Also remove tests which rely on Java implementation details.

* Don't keep reference to access exception of ConstructorConstructor

This also avoids a confusing stack trace, since the previously caught
exception might have had a complete unrelated stack trace.

* Remove Maven toolchain requirement

* Address review feedback

* Add back test for Security Manager"
6e06bf0d89ad71f317c920cdaf9981a0508446d3,"Fix for an ArrayIndexOutOfBoundsException.

The `fillBuffer` method changes `pos`, so it is incorrect to cache
its previous value."
0313de8206ca6f68b31c9c01978ec9899677649e,"Some code suggestion from CodeGuru (#1988)

* change %s to %d

* secusity issue, add try-finally block

Co-authored-by: liuxinyu <xinyu6@illinois.edu>"
16b42ff5805074126c2e5484450c182773e408a2,Update Caliper dependency; disable automatic result upload (#2019)
eaf9a0342d69b4cbbfb3644ce42e196453ce164a,feat: added UPPER_CASE_WITH_UNDERSCORES in FieldNamingPolicy (#2024)
4a99674994359a93c515d7748bd5995e8a4fd539,cifuzz: add integration (#2027)
cdf8ab5213bf1c139029ecdd49cbe1e8ec103c02,"Bump bnd-maven-plugin from 6.0.0 to 6.1.0 (#2025)

Bumps [bnd-maven-plugin](https://github.com/bndtools/bnd) from 6.0.0 to 6.1.0.
- [Release notes](https://github.com/bndtools/bnd/releases)
- [Changelog](https://github.com/bndtools/bnd/blob/master/docs/ADDING_RELEASE_DOCS.md)
- [Commits](https://github.com/bndtools/bnd/compare/6.0.0...6.1.0)

---
updated-dependencies:
- dependency-name: biz.aQute.bnd:bnd-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
4b3127f66907d066dd530876e7315a7a8d0821a3,"Bump proguard-maven-plugin from 2.5.1 to 2.5.2 (#2034)

Bumps [proguard-maven-plugin](https://github.com/wvengen/proguard-maven-plugin) from 2.5.1 to 2.5.2.
- [Release notes](https://github.com/wvengen/proguard-maven-plugin/releases)
- [Changelog](https://github.com/wvengen/proguard-maven-plugin/blob/master/CHANGELOG.md)
- [Commits](https://github.com/wvengen/proguard-maven-plugin/commits)

---
updated-dependencies:
- dependency-name: com.github.wvengen:proguard-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
631046af28d2f28a6e5b490139d8fb39252e890e,"Bump maven-bundle-plugin from 5.1.2 to 5.1.3 (#2033)

Bumps maven-bundle-plugin from 5.1.2 to 5.1.3.

---
updated-dependencies:
- dependency-name: org.apache.felix:maven-bundle-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
1dd150e86f8681c42f0dc4e7de01379d5fc9e58a,"Bump proguard-maven-plugin from 2.5.2 to 2.5.3 (#2037)

Bumps [proguard-maven-plugin](https://github.com/wvengen/proguard-maven-plugin) from 2.5.2 to 2.5.3.
- [Release notes](https://github.com/wvengen/proguard-maven-plugin/releases)
- [Changelog](https://github.com/wvengen/proguard-maven-plugin/blob/master/CHANGELOG.md)
- [Commits](https://github.com/wvengen/proguard-maven-plugin/commits)

---
updated-dependencies:
- dependency-name: com.github.wvengen:proguard-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
6dfbdc861ff7b5f027b8139671145ca67add541d,"Bump jackson-databind from 2.13.0 to 2.13.1 (#2036)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.13.0 to 2.13.1.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
6ffcdf302939ad405abdfb468218b8caafc46e9c,Fix Javadoc warnings and errors (#2040)
abd2191b0e3863aa227b19fd3ebc6820cbcec058,"Add READMEs to Maven modules (#2039)

* Add READMEs to Maven modules

* Address feedback"
97938283a77707cdf231a7ebdcbee937f289ad31,"Remove explicit ProGuard plugin dependencies (#2041)

Explicitly specifying dependencies only seems to be necessary when using
`<proguardVersion>` config element to override version (and even that might
not be necessary; only adding explicit dependencies might suffice). However,
when omitting it, plugin uses a recent ProGuard version on its own."
615c8835d309e1be512dd98809b48332ce70250d,"Add `GsonBuilder.disableJdkUnsafe()` (#1904)

* Add GsonBuilder.disableJdkUnsafe()

* Address review feedback"
bc8858a3d9a79a7d091474b436767b73e8338ac1,"Bump maven-deploy-plugin from 3.0.0-M1 to 3.0.0-M2 (#2044)

Bumps [maven-deploy-plugin](https://github.com/apache/maven-deploy-plugin) from 3.0.0-M1 to 3.0.0-M2.
- [Release notes](https://github.com/apache/maven-deploy-plugin/releases)
- [Commits](https://github.com/apache/maven-deploy-plugin/compare/maven-deploy-plugin-3.0.0-M1...maven-deploy-plugin-3.0.0-M2)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-deploy-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
dc28951fa7e7112f0e229e0a4665ad27a1891d79,"Change target Java version to 7 (#2043)

* Change target Java version to 7

* Document Gson requirements

* Add package-info.java for `stream` package"
6b96a389cc40d56fd3d00547c00a42ab2bef6098,"Put `module-info.class` into Multi-Release JAR folder (#2013)

* Put module-info.class into Multi-Release JAR folder

Uses ModiTect to place module-info.class under Multi-Release JAR folder
`META-INF/versions/9`.

* Adjust pom.xml to drop support for Java 6

* Change doclint setting

All Javadoc errors have been solved previously; doclint can now be enabled
without causing build failures.

* Improve README Java requirements"
f26525221d48e344f3237e21ecae0afda7d1d582,"Bump maven-scm-api from 1.11.3 to 1.12.2 (#2046)

Bumps [maven-scm-api](https://github.com/apache/maven-scm) from 1.11.3 to 1.12.2.
- [Release notes](https://github.com/apache/maven-scm/releases)
- [Commits](https://github.com/apache/maven-scm/compare/maven-scm-1.11.3...maven-scm-1.12.2)

---
updated-dependencies:
- dependency-name: org.apache.maven.scm:maven-scm-api
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
4ec67c00a08348bff6abe1a4a285f8a78483ee37,"Bump maven-scm-provider-gitexe from 1.12.0 to 1.12.2 (#2047)

Bumps maven-scm-provider-gitexe from 1.12.0 to 1.12.2.

---
updated-dependencies:
- dependency-name: org.apache.maven.scm:maven-scm-provider-gitexe
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
d38e3974211e89d8e6d74c94178a2db102c0748d,Fix ObjectTest not restoring default Locale (#2050)
ffcfb15f6c63548f2d10a945116df8d5dbb8a025,"Bump maven-jar-plugin from 3.2.0 to 3.2.1 (#2049)

Bumps [maven-jar-plugin](https://github.com/apache/maven-jar-plugin) from 3.2.0 to 3.2.1.
- [Release notes](https://github.com/apache/maven-jar-plugin/releases)
- [Commits](https://github.com/apache/maven-jar-plugin/compare/maven-jar-plugin-3.2.0...maven-jar-plugin-3.2.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-jar-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
73216b2ad7b16f669000b8d7bb443921ea1a5b55,Add more `Gson` default constants to be used by `GsonBuilder` (#2051)
26e08fe742a9a023cc8eca454de8f84a0223d187,Fix a mistaken use of StringBuilder('#'). (#2052)
4d8cab89c4711f70416446107adec2d99f6b8e52,"Bump maven-jar-plugin from 3.2.1 to 3.2.2 (#2056)

Bumps [maven-jar-plugin](https://github.com/apache/maven-jar-plugin) from 3.2.1 to 3.2.2.
- [Release notes](https://github.com/apache/maven-jar-plugin/releases)
- [Commits](https://github.com/apache/maven-jar-plugin/compare/maven-jar-plugin-3.2.1...maven-jar-plugin-3.2.2)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-jar-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
8e01b54682612471a9ab40c73911dfbf6b5be036,"Bump maven-compiler-plugin from 3.8.1 to 3.9.0 (#2055)

Bumps [maven-compiler-plugin](https://github.com/apache/maven-compiler-plugin) from 3.8.1 to 3.9.0.
- [Release notes](https://github.com/apache/maven-compiler-plugin/releases)
- [Commits](https://github.com/apache/maven-compiler-plugin/compare/maven-compiler-plugin-3.8.1...maven-compiler-plugin-3.9.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-compiler-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
be0a1f4ff74bcd01580887cc9f3ec592d773f24c,"Remove Gradle build support (#2063)

Build script was outdated and not actively maintained anymore."
710a76c8b8835e36935c62024001ba6b91ceee01,Fix JsonReader.hasNext() returning true at end of document (#2061)
e2e851c9bc692cec68ba7b0cbb002f82b4a229e4,"Add LazilyParsedNumber default adapter (#2060)

* Add LazilyParsedNumber default adapter

* Validate JsonWriter.value(Number) argument

* Fix incorrect JSON number pattern, extend tests"
565b7a198e026596c3fd18304f86537ae20f9a3f,Support EnumMap deserialization (#2071)
47dea2eefc6d2816cddb3f30689070285491733c,Improve error message when abstract class cannot be constructed (#1814)
82fed02fbae4bbe3fe2d76d46b2d577a469bdba0,Mention R8 FAQ in Android example (#2075)
b6acf1178a1e9279a77235abe55d6895dd5c09f3,[maven-release-plugin] prepare release gson-parent-2.9.0
e58db43f574aa2c350455ad4ab03b9404403013c,[maven-release-plugin] prepare for next development iteration
241044d70912a34ec7326b7bf41a83b643d49f14,"Update CHANGELOG.md with 2.9.0 changes.

Update version numbers in documentation (2.8.9 -> 2.9.0)."
a0b102c7ff1c47c34d7629ebb6f4ff27837de7f7,"Bump maven-javadoc-plugin from 3.3.1 to 3.3.2 (#2077)

Bumps [maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.3.1 to 3.3.2.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-3.3.1...maven-javadoc-plugin-3.3.2)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-javadoc-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
d19e9fe0af6d335948547416e9685498405a8a9d,"Improve Maven build and GitHub Maven workflow (#2079)

* Fix consecutive Maven builds failing without performing `clean`

By default moditect-maven-plugin refuses to overwrite the JAR file it
generated in a previous run.

* Make GitHub Maven build workflow detect Javadoc issues"
49ddab9eeb6cbac686711deca6001d40e8d8500d,"Add CodeQL GitHub code scanning workflow (#2076)

* Add CodeQL GitHub code scanning workflow

* Only compile main sources for code scanning

* Move test .proto  files to test sources

`annotations.proto` also seems to be only relevant for tests because the test
explicitly registers them as extensions. By default the Proto adapter does not
consider them.

* Address some code scanning findings

* Fix some more findings"
7ee3e2787f45f5453b61a9af6c659993b4eba6d5,"Parsing Map<Enum,Obj> - 501 (#1950)

* Added parsing support for enum that has overridden toString() method.

* Fix a tiny formatting problem

* Fixed formatting issue

Co-authored-by: Éamonn McManus <emcmanus@google.com>"
b5343ba96ce0e24c77e7be0efdb111f6fdf999ec,Add tests for enum constant toString() reading (#2080)
81bb6d1dec28ca135382e29e3eccffcc957726be,"Remove `gson/build.gradle` (#2081)

Follow-up for be0a1f4ff74bcd01580887cc9f3ec592d773f24c"
91256532788aeee39d67087936be9bb458022c7a,"Bump bnd-maven-plugin from 6.1.0 to 6.2.0 (#2084)

Bumps [bnd-maven-plugin](https://github.com/bndtools/bnd) from 6.1.0 to 6.2.0.
- [Release notes](https://github.com/bndtools/bnd/releases)
- [Changelog](https://github.com/bndtools/bnd/blob/master/docs/ADDING_RELEASE_DOCS.md)
- [Commits](https://github.com/bndtools/bnd/compare/6.1.0...6.2.0)

---
updated-dependencies:
- dependency-name: biz.aQute.bnd:bnd-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
ba5f8f9e539c57874af260efda4eacf296e9ffa4,"Bump guava from 31.0.1-jre to 31.1-jre (#2086)

Bumps [guava](https://github.com/google/guava) from 31.0.1-jre to 31.1-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava
  dependency-type: direct:production
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
d7f824119cd68f986fd5ed8a501007e6862f5081,Mention in README that Gson is in maintenance mode (#2085)
bab0f5a1f7040389eb8fe0cb417ba1854e33dbd0,"Bump maven-compiler-plugin from 3.9.0 to 3.10.0 (#2078)

Bumps [maven-compiler-plugin](https://github.com/apache/maven-compiler-plugin) from 3.9.0 to 3.10.0.
- [Release notes](https://github.com/apache/maven-compiler-plugin/releases)
- [Commits](https://github.com/apache/maven-compiler-plugin/compare/maven-compiler-plugin-3.9.0...maven-compiler-plugin-3.10.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-compiler-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
49c75804c5a8964afa1aa3c6e6463bb792de4457,"Bump maven-compiler-plugin from 3.10.0 to 3.10.1 (#2089)

Bumps [maven-compiler-plugin](https://github.com/apache/maven-compiler-plugin) from 3.10.0 to 3.10.1.
- [Release notes](https://github.com/apache/maven-compiler-plugin/releases)
- [Commits](https://github.com/apache/maven-compiler-plugin/compare/maven-compiler-plugin-3.10.0...maven-compiler-plugin-3.10.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-compiler-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
774c751a9ee026c6d7e4b0ca44dac6ad526de557,"Bump jackson-databind from 2.13.1 to 2.13.2 (#2087)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.13.1 to 2.13.2.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
b2b1424582f973457e15f4eeba35cd3c0c0ed2b6,"codegen removal (#2099)

* Delete CodeGenFunctionalTest.java

* codegen removal

* pom.xml update

* email config

* Remove unnecessary space change.

Co-authored-by: Éamonn McManus <emcmanus@google.com>"
463bb7d096d7ce0568302a75b67808b6be78daae,"Bump jackson-databind from 2.13.2 to 2.13.2.2 (#2096)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.13.2 to 2.13.2.2.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
f79ea208b1a42d0ee9e921dcfb3694221a2037ed,"Bump maven-surefire-plugin from 3.0.0-M5 to 3.0.0-M6 (#2101)

Bumps [maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.0.0-M5 to 3.0.0-M6.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.0.0-M5...surefire-3.0.0-M6)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
e82637c4856b026f1ff2575c5e3d60c516391b79,"Add support for reflection access filter (#1905)

* Add support for reflection access filter

* Improve documentation

* Fix compilation errors

* Relax handling for BLOCK_ALL when invoking default constructor

* Improve handling for inherited fields

* Fix accessible test failing for static fields

* Simplify ReflectiveTypeAdapterFactory field writing

* Fix GsonBuilder changes affecting created Gson instances

* Improve documentation

* Improve handling for IllegalAccessException

For Java < 9, AccessibleObject.canAccess is not available and therefore checks
might pass even if object is not accessible, causing IllegalAccessException
later.

* Fix incorrect GsonBuilder.addReflectionAccessFilter documentation"
4dda4ec5ba81a02406f40f3d73192ab9bc568f48,Use diamond operator when creating generic instances (#2104)
feaf8ddc051cc9a8fccb4f8cc8e78a5705bf38cb,Reduce Maven console output for CodeQL analysis; cache Maven repo (#2105)
b1c399fd6296f2e61de37109847c957bab42d736,"Improve `TypeToken` creation validation (#2072)

* Add comments regarding multiple bounds of wildcard

* Remove WildcardType check in getCollectionElementType

The returned Type is never a wildcard due to the changes made to getSupertype
by commit b1fb9ca9a1bea5440bc6a5b506ccf67236b08243.

* Remove redundant getRawType call from MapTypeAdapterFactory

getRawType(TypeToken.getType()) is the same as calling TypeToken.getRawType().

* Make TypeToken members private

* Remove incorrect statement about TypeToken wildcards

It is possible to use wildcards as part of the type argument, e.g.:
`new TypeToken<List<? extends CharSequence>>() {}`

* Only allow direct subclasses of TypeToken

Previously subclasses of subclasses (...) of TypeToken were allowed which
can behave incorrectly when retrieving the type argument, e.g.:

  class SubTypeToken<T> extends TypeToken<Integer> {}
  new SubTypeToken<String>() {}.getType()

This returned `String` despite the class extending TypeToken<Integer>.

* Throw exception when TypeToken captures type variable

Due to type erasure the runtime type argument for a type variable is not
available. Therefore there is no point in capturing a type variable and it
might even give a false sense of type-safety.

* Make $Gson$Types members private

* Rename $Gson$Types.getGenericSupertype parameter

Rename the method parameter to match the documentation of the method and
to be similar to getSupertype(...).

* Improve tests and handle raw TypeToken supertype better

* Make some $Gson$Types members package-private again to prevent synthetic accessors

* Remove TypeToken check for type variable

As mentioned in review comments, there are cases during serialization where
usage of the type variable is not so problematic (but still not ideal)."
5a9febe905f42eb477e09f3921ab2949c9489316,"Bump jackson-databind from 2.13.2.2 to 2.13.3 (#2115)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.13.2.2 to 2.13.3.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
f4b5462c3b20af0f4701be53ad24241f54c6d7c0,"Bump maven-javadoc-plugin from 3.3.2 to 3.4.0 (#2108)

Bumps [maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.3.2 to 3.4.0.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-3.3.2...maven-javadoc-plugin-3.4.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-javadoc-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
66c3f48d8158565dfea0a8fbbe88cf96e64e2802,Update CodeQL action in GitHub workflow (#2116)
513b53a084712e70a91309f6d521f208f8ab10bf,"Bump maven-scm-provider-gitexe from 1.12.2 to 1.13.0 (#2126)

Bumps maven-scm-provider-gitexe from 1.12.2 to 1.13.0.

---
updated-dependencies:
- dependency-name: org.apache.maven.scm:maven-scm-provider-gitexe
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
827e117f6dafa776a6103ed2cce81975c4dfad67,"Bump maven-scm-api from 1.12.2 to 1.13.0 (#2125)

Bumps [maven-scm-api](https://github.com/apache/maven-scm) from 1.12.2 to 1.13.0.
- [Release notes](https://github.com/apache/maven-scm/releases)
- [Commits](https://github.com/apache/maven-scm/compare/maven-scm-1.12.2...maven-scm-1.13.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.scm:maven-scm-api
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
d1fce29b27247c8936f1588c061359230667b153,"Bump bnd-maven-plugin from 6.2.0 to 6.3.1 (#2129)

Bumps [bnd-maven-plugin](https://github.com/bndtools/bnd) from 6.2.0 to 6.3.1.
- [Release notes](https://github.com/bndtools/bnd/releases)
- [Changelog](https://github.com/bndtools/bnd/blob/master/docs/ADDING_RELEASE_DOCS.md)
- [Commits](https://github.com/bndtools/bnd/compare/6.2.0...6.3.1)

---
updated-dependencies:
- dependency-name: biz.aQute.bnd:bnd-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
15b9fa9c31d4137ad6d46f746524a5aa43eefd28,"Bump maven-surefire-plugin from 3.0.0-M6 to 3.0.0-M7 (#2128)

Bumps [maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.0.0-M6 to 3.0.0-M7.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.0.0-M6...surefire-3.0.0-M7)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
96ab171eb48dcea94fd9b8f425f65c531e6c3aad,"Add explicit support for floats in JsonWriter. (#2130)

This avoids floats being treated as doubles and having an unwarranted level of precision.

Fixes #1127."
57225c6741ff14db049ebe793ff3d423f2950ac7,"Fail when parsing invalid local date (#2134)

* Fail when parsing invalid local date

* Improve invalid date tests"
08d4572fc4e0f9f563b0604f1bedb61ccb7ed806,"Bump proguard-maven-plugin from 2.5.3 to 2.6.0 (#2136)

Bumps [proguard-maven-plugin](https://github.com/wvengen/proguard-maven-plugin) from 2.5.3 to 2.6.0.
- [Release notes](https://github.com/wvengen/proguard-maven-plugin/releases)
- [Changelog](https://github.com/wvengen/proguard-maven-plugin/blob/master/CHANGELOG.md)
- [Commits](https://github.com/wvengen/proguard-maven-plugin/commits)

---
updated-dependencies:
- dependency-name: com.github.wvengen:proguard-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
d2aee6502ba1e47faa050397566d6dde3240e194,"Add explicit support for floats in JsonTreeWriter. (#2132)

Follow-up to comments on #2130, which introduced a new override which was not overridden by `JsonTreeWriter`. Also tweaks the doccomments for `float`, `double` and `Number` variants of `JsonWriter.value`.

Supplement to the fix for #1127."
2d01d6a20f39881c692977564c1ea591d9f39027,"Make `Object` and `JsonElement` deserialization iterative (#1912)

* Make Object and JsonElement deserialization iterative

Often when Object and JsonElement are deserialized the format of the JSON
data is unknown and it might come from an untrusted source. To avoid a
StackOverflowError from maliciously crafted JSON, deserialize Object and
JsonElement iteratively instead of recursively.

Concept based on https://github.com/FasterXML/jackson-databind/commit/51fd2faab70c9c8eb7ae43c200f8480f24ba74d8
But implementation is not based on it.

* Improve imports grouping

* Address review feedback"
3f1d4fb65f7f6f2aabb6997e46c6a0100c25d0af,"Document Map serialization in user guide (#2138)

* Document Map serialization in user guide

* Improve user guide formatting and update links

* Address review feedback"
cbc0af867b898d9e8244f268f4ffe37dfcaf8ea7,Improve lenient mode documentation (#2122)
2eb37589b53d0d2c292a2187bc87a0967686ac29,"Fix RuntimeTypeAdapterFactory (#2139)

* Change the RuntimeTypeAdapterFactoryTest, so it fails because of #712

* Fix RuntimeTypeAdapterFactory

Trying to use this class as is results in the type-property not being serialized into the JSON, thus it is not present on deserialization.
The fix from https://github.com/google/gson/issues/712#issuecomment-148955110 works. No idea why this is not merged yet."
eeba71c59e73d74fea1be4f5362f166a28aa3d01,"Upgrade to oss-parent 9 (#2149)

org.sonatype.oss:oss-parent:7 is unsigned (missing .asc files), which forces users of gson library
that enforce signature verification to explicitly allowlist oss-parent. Luckily oss-parent 9 is signed,
thus fixing this issue.

See:
https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/7/
vs
https://repo1.maven.org/maven2/org/sonatype/oss/oss-parent/9/"
010624730b5b66a3bc6d20417013ce5d317169fa,"Bump maven-deploy-plugin from 3.0.0-M2 to 3.0.0 (#2148)

Bumps [maven-deploy-plugin](https://github.com/apache/maven-deploy-plugin) from 3.0.0-M2 to 3.0.0.
- [Release notes](https://github.com/apache/maven-deploy-plugin/releases)
- [Commits](https://github.com/apache/maven-deploy-plugin/compare/maven-deploy-plugin-3.0.0-M2...maven-deploy-plugin-3.0.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-deploy-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
503c20bb392e10fd6ffa9a12afdc33d2ba2d2c38,Rename ReflectiveTypeAdapterFactory field inclusion check method (#2121)
924c496b95deceadab0a01ea28b7023a096dc2ec,"Bump maven-resources-plugin from 3.2.0 to 3.3.0 (#2157)

Bumps [maven-resources-plugin](https://github.com/apache/maven-resources-plugin) from 3.2.0 to 3.3.0.
- [Release notes](https://github.com/apache/maven-resources-plugin/releases)
- [Commits](https://github.com/apache/maven-resources-plugin/compare/maven-resources-plugin-3.2.0...maven-resources-plugin-3.3.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-resources-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
2deb2099d3007b8bb0e324bc364b6f9dddada0cd,"Make `RuntimeTypeAdapterFactory` recognize subclasses only conditionally. (#2160)

PR #2139 changed this factory so that if given a certain baseType, it will also
recognize any subtype of that type. That is often the right thing to do, but it
is a change in behaviour, and does in fact break at least one current client of
this code. So instead we introduce a new `recognizeSubclasses()` method that
triggers this behaviour. When the method is not called, we revert to the old
behaviour of only recognizing instances of the exact class `baseType`."
6d2557d5d1a8ac498f2bcee20e5053c93b33ecce,Remove unused package-private FieldAttributes methods (#2162)
893a7e1c5c3369ecfb41fb7f8177d18896f0a23b,Fix malformed JsonElement.getAsBigDecimal() javadoc (#1772)
bb9a1f255aa7e7a07bf42f5bffe04f9204a59eb1,[maven-release-plugin] prepare release gson-parent-2.9.1
ca22b68008a7c7a72a606f28699ad5bd76313447,[maven-release-plugin] prepare for next development iteration
a4290c52e09a3f60d7c41158fb71164bf5c83974,"Update CHANGELOG.md with 2.9.1 changes.

Update version numbers in documentation (2.9.0 -> 2.9.1)."
5f2513a407793b4f9d5293f77414144e76041087,"Improve AppendableWriter performance (#1706)

* Improve AppendableWriter performance

Override methods which by default create char arrays or convert
CharSequences to Strings.
This is not necessary for AppendableWriter because it can directly
append these values to the Appendable delegate.

* Add test for Streams.writerForAppendable"
a45c55739f4e5eb25e9b67a8b7e2bfad25851fb6,"Improve ArrayTypeAdapter for Object[] (#1716)

* Improve ArrayTypeAdapter for Object[]

* Fix typo in test method names"
4552db2630b6d506ac7e212b337f818169f3c03b,"Prefer existing adapter for concurrent `Gson.getAdapter` calls (#2153)

Additionally fail fast for null as type (previous null support was broken
and would have thrown NullPointerException further below anyways)."
a1d2ebc8b51a3a0df8b15c98f47d5ac95cf7f7b0,"Fix #1702: Gson.toJson creates CharSequence which does not implement toString (#1703)

* Gson.toJson creates CharSequence which does not implement toString

* Improve Streams.AppendableWriter.CurrentWrite test

* Make setChars package-private"
0b6a7bf7d9259f62003cbd458931ae0e61e7334c,"Deprecate JsonElement constructor (#1761)

* Deprecate JsonElement constructor

Creating custom JsonElement subclasses is discouraged.

* Improve test and documentation

* Improve JsonTreeReaderTest, adjust deprecation comments"
98f2bbf4c12d24421d2b65e4926263afe26f1265,Validate `TypeToken.getParameterized` arguments (#2166)
46b97bf15633929e7db6c43007a6b03e852e2aee,"Fixed nullSafe usage. (#1555)

The JsonSerializer/Deserializer adapters used to ignore this attribute
which result in inconsistent behaviour for annotated adapters.

Fixes #1553

Signed-off-by: Dmitry Bufistov <dmitry@midokura.com>

Co-authored-by: Dmitry Bufistov <dmitry@midokura.com>"
246270e02cfd24bdb58daa729b0a5ad69b070723,"Convert null to JsonNull for `JsonArray.set` (#2170)

* Convert null to JsonNull for `JsonArray.set`

All other methods perform the same implicit conversion.

* Mention null handling in JsonObject documentation"
390385e382473927c4ba2eaf381c709003fd366a,"Clarify that `GsonBuilder.setExclusionStrategies` does not replace existing ones (#2168)

* Clarify that `GsonBuilder.setExclusionStrategies` does not replace existing ones

* Fix punctuation"
9868957862d35bf6e4747928a04b34a86916fdc2,Fix typo (#1246)
76c78f5925ec80434cbbd28332f841f74fee3275,"Remove not needed .gitattributes file (#1862)

The .gitattributes file was added to prevent GitHub detecting Gson as HTML
repository due to the included generated javadoc files. However, since
#1654 has removed the javadoc files, the .gitattributes file is no longer
needed."
9eb04414c0a7f201d039cdbf9a9ebc4144990d3f,"Improve InternationalizationTest (#1705)

* Improve InternationalizationTest

- Remove ""raw"" tests since after compiling they are the same as the one with
  escape sequences
- Add tests for supplementary code points (> \uFFFF)

* Improve variable names, fix incorrect escape sequences"
f7cefcb426fed89365ab42daa387c255b599eb66,"Fix JsonWriter documentation regarding top-level value (#1766)

* Fix JsonReader / JsonWriter documentation regarding top-level value

RFC 7159 allows any top-level value (not only arrays or objects) [0],
however when #773 added this functionality it appears the author forgot
to update the documentation of these classes.

[0] https://tools.ietf.org/html/rfc7159#appendix-A
> Changed the definition of ""JSON text"" so that it can be any JSON
> value, removing the constraint that it be an object or array.

* Fix missing space"
a4bc6c17d71fffe62cd8e478a2e68305df825d40,"Fix JsonTreeReader throwing wrong exception type for non-finite doubles (#1782)

Follow-up for #1767"
d53b3ea84a10e4a3a2be266176be5248be96c7c1,Clarify doc about non-finite numbers for non-lenient JsonReader (#1723)
6fc1c8f7f17a949b4dd743603df88f1935db7907,"Fix `TypeAdapter.toJson` throwing AssertionError for custom IOException (#2172)

* Fix TypeAdapter.toJson throwing AssertionError for custom IOException

* Add throws javadoc tag for TypeAdapter methods"
53234aa3518223dc13ec356cb0bd7a92211642d8,Add test for JsonArray.isEmpty() (#2173)
5e1005ea27cdaeb2c328983521f99e6c1e177524,"Disallow `JsonObject` `Entry.setValue(null)` (#2167)

* Disallow JsonObject Entry.setValue(null)

* Adjust comments in JsonObjectTest"
18b9ba407d3f33e84d613a695ccd6d0e7360a21e,"Improve GsonTest.testGetAdapter_Concurrency (#2177)

Makes the test implementation more reliable to prevent flaws in the test
setup causing spurious test success."
b84b2218f22acdbd141c4ae3fa9e68767d07028d,Add null checks for GsonBuilder methods (#2179)
26be9415754dcfe4b37b4a2e9fa74b9e29f562fc,Throw UnsupportedOperationException when JsonWriter.jsonValue is not supported (#1651)
51a72b463bc447d32fe8e594afa1980fd34e52d6,"Make JsonElement conversion methods more consistent and fix javadoc (#2178)

* Make JsonElement conversion methods more consistent and fix javadoc

* Address some review comments"
517d3b176bac50b588aea7c8b96410e58a549160,"Bump maven-javadoc-plugin from 3.4.0 to 3.4.1 (#2175)

Bumps [maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.4.0 to 3.4.1.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-3.4.0...maven-javadoc-plugin-3.4.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-javadoc-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
5bebf970d14148069697444566fbb7dc9fceaf7a,"Fix changes to GsonBuilder affecting existing Gson instances (#1815)

Previously when a GsonBuilder had created a Gson instance and was afterwards
reused and different type adapters were added, new GsonBuilder instances
obtained from the previous Gson instance through Gson.newBuilder() would have
been affected by the GsonBuilder changes.

This commit fixes this and additionally adds some more unit tests."
b0b6834157e17f0ff916b2c39dcfd38fba65b376,Mention that GsonBuilder.registerTypeAdapter makes (de-)serializers null-safe (#1704)
7f77ad4ff6b4c3c47a7ee8b5e34867e43866f72f,"Replace `$Gson$Preconditions.checkNotNull` with `Objects.requireNonNull` (#2180)

* Replace $Gson$Preconditions.checkNotNull with Objects.requireNonNull

* Add back checkNotNull"
325f37cd6b743c07eab8a595542fa3ae9bb820c8,"Verify that JsonTreeReader and JsonTreeWriter override all methods (#2181)

* Verify that JsonTreeReader and JsonTreeWriter override all methods

If those classes do not override one of the JsonReader or JsonWriter methods
the user might encounter an AssertionError.

* Address review feedback"
f7a164d98b77d7f7e3f918115781e74fdede5bdb,"Fail Maven build on compiler warnings; remove some warning suppressions (#2183)

* Fail Maven build on compiler warnings; remove some warning suppressions

* Fix compiler warnings causing failure for newer JDK

* Improve placement of ""raw"" and ""unchecked"" warning suppressions

* Adjust javac documentation link

* Fix compilation error on newer JDKs"
c2d0cede654de8d928ec5c17bbffea00e25b7e31,Add GitHub workflow for checking API compatibility (#2182)
ceb24cc033d9afbd0b1704c9274651f6b69a23e1,"Bump japicmp-maven-plugin from 0.15.7 to 0.16.0 (#2187)

Bumps [japicmp-maven-plugin](https://github.com/siom79/japicmp) from 0.15.7 to 0.16.0.
- [Release notes](https://github.com/siom79/japicmp/releases)
- [Changelog](https://github.com/siom79/japicmp/blob/master/release.py)
- [Commits](https://github.com/siom79/japicmp/compare/japicmp-base-0.15.7...japicmp-base-0.16.0)

---
updated-dependencies:
- dependency-name: com.github.siom79.japicmp:japicmp-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
e1b3a0355f2e2b0b85e99422a6295d87d4e393c1,"Bump jackson-databind from 2.13.3 to 2.13.4 (#2191)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.13.3 to 2.13.4.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
2266ccdd670b1e914c18aa5928ddd24c93deeed4,"Remove usage of oss-parent Maven parent and update ReleaseProcess.md (#2159)

The oss-parent configuration has been applied manually to the root pom.xml,
except that now newer plugin versions are used for source and javadoc JAR
creation, and for GPG signing.

This required some reordering of the plugins for the gson module to make
sure they are executed in the correct order. Otherwise this would cause
failures for javadoc:jar."
847d7f66380e6bd54eedcdead2a95d4037ed87ee,"Improve documentation (#2193)

* Improve JsonElement subclasses javadoc and add tests

* Slightly improve JsonSerializer and JsonDeserializer javadoc

* Improve ReflectionAccessTest failure message

* Improve documentation regarding field and class exclusion"
a733150cfa26cabfecc1169d34f2f98d8191194c,"updated JsonDeserializer example (#2192)

* fixed json deserializer example

* correcting the json

* updated per review

* updated per review

* updated per review"
6b9db2e44948d410b2dbede6a4a8667782d6c04b,"Add Gson.fromJson(..., TypeToken) overloads (#1700)

* Add Gson.fromJson(..., TypeToken) overloads

Previously only Gson.fromJson(..., Type) existed which is however not
type-safe since the generic type parameter T used for the return type is
not bound.
Since these methods are often used in the form
  gson.fromJson(..., new TypeToken<...>(){}.getType())
this commit now adds overloads which accept a TypeToken and are therefore
more type-safe.

Additional changes:
- Fixed some grammar mistakes
- Added javadoc @see tags
- Consistently write ""JSON"" in uppercase
- More precise placement of @SuppressWarnings(""unchecked"")

* Add to Gson.fromJson javadoc that JSON is fully consumed

The newly added documentation deliberately does not state which exception
is thrown because Gson.assertFullConsumption could throw either a
JsonIOException or a JsonSyntaxException.

* Remove unnecessary wrapping and unwrapping as TypeToken in Gson.fromJson

Since the actual implementation of Gson.fromJson is TypeToken based, the
TypeToken variant overloads are now the ""main"" implementation and the other
overloads delegate to them.
Previously the Type variant overloads were the ""main"" implementation which
caused `TypeToken.getType()` followed by `TypeToken.get(...)` when the
TypeToken variant overloads were used.

* Trim source code whitespaces

* Fix Gson.fromJson(JsonReader, Class) not casting read Object

To be consistent with the other Gson.fromJson(..., Class) overloads the
method should cast the result.

* Replace User Guide link in Gson documentation

* Remove more references to fromJson(..., Type)

* Extend documentation for fromJson(JsonReader, ...)

* Replace some TypeToken.getType() usages

* Address feedback; improve documentation

* Remove fromJson(JsonReader, Class) again

As noticed during review adding this method is source incompatible."
2154e468b490c8a6576db13eca31c9d1afe6bf78,"Bump maven-jar-plugin from 3.2.2 to 3.3.0 (#2195)

Bumps [maven-jar-plugin](https://github.com/apache/maven-jar-plugin) from 3.2.2 to 3.3.0.
- [Release notes](https://github.com/apache/maven-jar-plugin/releases)
- [Commits](https://github.com/apache/maven-jar-plugin/compare/maven-jar-plugin-3.2.2...maven-jar-plugin-3.3.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-jar-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
0864a02e867633cba2daa8ace94eb3a72cc880de,"Build on JDK 17 as well as 11. (#2198)

* Build on JDK 8 and 17 as well as 11.

* Remove JDK 8 for now.

`DefaultDateTypeAdapterTest` fails.

* Tweak javadoc to avoid warnings.

Mostly these are about using `<h3>` when the previous tag was `<h1>`,
and the like. This previous tag might be implicit (part of what javadoc
itself outputs rather than the HTML in doc comments).

Apparently JDK 11 puts method javadoc inside `<h2>` while JDK 11 puts it
inside `<h3>`. Or something like that. Anyway it doesn't appear to be
possible to use `<h3>` _or_ `<h4>` and please both."
2591ede59bf7e4cef496a01e82282c88e256cec8,Fix incorrect HTML headings in Javadoc (#2200)
441406cc780fc5384832b48e382a7c899bac21af,"Add a currently-failing test for Java records and `@Ignore` it. (#2203)

* Add a currently-failing test for Java records and `@Ignore` it.

Also do the Maven gymastics required to ensure that this test only runs on Java
versions ≥17. (It would also work on Java 16, but 17 is all we have in the CI.)

Fix some compilation problems I saw when running locally, which for some reason
don't show up in the CI.

* Suppress some new lint options that trigger `-Werror`.
We may fix these later. (Every test will need an explicit constructor!)

* Select Java version with maven.compiler.release and maven.compiler.testRelease.

Use `assumeNotNull` rather than an if-statement.

* Specify <release>11</release> for javadoc.

* Restore the @see for AccessibleObject."
5253ddbde0a366bb7667d94b56b0c940e465437d,Follow-up for record test build changes (#2207)
b777ae5216c6fde9ab7bca8d6cfca630ffe12b4f,"Disable Maven transfer progress for GitHub workflows (#2206)

Disables the download transfer progress which is shown when Maven downloads
(or uploads) artifacts which are not available in the local repository.
This download progress can be quite verbose and is normally not that relevant."
9c9cafcf9d732206171da0e5da549c97476a2aa2,"Only create one UnsafeAllocator instance (#2196)

* Only create one UnsafeAllocator instance

* Move checkInstantiable to ConstructorConstructor"
ea7ab7cd520199fdb4a8d47fe462a4a0357a58bb,"Mention in User Guide alternative for Gson versions without fromJson(..., TypeToken) (#2209)"
47668fad57e23dacc5482e40a276a93850cec2cf,Fix typo in GsonBuilder Javadoc (#2213)
28609089faa747f2ad5730281c14093ab40d6fda,Add Javadoc since tags for previously added elements (#2211)
796193d0326a2f44bc314bf24262732ea3e64014,Improve versioning support documentation and validate version (#2214)
3e3266cf48f132928225e1561a6ae4cb5503d08f,"Perform numeric conversion for primitive numeric type adapters (#2158)

* Perform numeric conversion for primitive numeric type adapters

This should probably not be visible to the user unless they use the
non-typesafe `Gson.toJson(Object, Type)` where unrelated number types can
be used, or when malformed generic containers are used. For example a
`List<Byte>` containing a Float.

This change also has the advantage of avoiding `JsonWriter.value(Number)`
for primitive type adapters. That method has some overhead because it needs
to make sure that the value is a valid JSON number. However, for primitive
numbers this check is redundant.

* Don't call `JsonWriter.value(float)` for backward compatibility

* Fix typo in comments"
e614e71ee43ca7bc1cb466bd1eaf4d85499900d9,"Clarify in documentation that Gson might cache strategy results (#2215)

* Clarify in documentation that Gson might cache strategy results

* Improve wording; mention that adapter factory results are cached as well"
5269701679295d8143ec578e25f68fe25594f46a,"Improve `JsonReader.skipValue()` (#2062)

* Fix JsonReader.skipValue() not behaving properly at end of document

JsonReader implementation erroneously reset `peeked` to PEEKED_NONE;
JsonTreeReader threw ArrayIndexOutOfBoundsException.

* Fix JsonReader.skipValue() not behaving properly at end of array and object

For JsonReader this caused an IllegalStateException (in the past it caused
JsonReader to get stuck in an infinite loop); for JsonTreeReader it only
popped the empty iterator but not the JsonArray or JsonObject, which caused
peek() to again report END_ARRAY or END_OBJECT.

* Only have JsonReader.skipValue() overwrite path name when name was skipped

This improves the JSON path when the value for a property was skipped and
before the subsequent property (or the end of the object) getPath() is called.

* Address feedback; improve test coverage

Co-authored-by: Éamonn McManus <emcmanus@google.com>"
8451c1fa63f5198daf38498869836e85c85bdd08,"Fix TypeAdapterRuntimeTypeWrapper not detecting reflective TreeTypeAdapter and FutureTypeAdapter (#1787)

* Fix TypeAdapterRuntimeTypeWrapper not detecting reflective TreeTypeAdapter

Previously on serialization TypeAdapterRuntimeTypeWrapper preferred a
TreeTypeAdapter without `serializer` which falls back to the reflective
adapter. This behavior was incorrect because it caused the reflective
adapter for a Base class to be used for serialization (indirectly as
TreeTypeAdapter delegate) instead of using the reflective adapter for
a Subclass extending Base.

* Address review feedback

* Convert TypeAdapterRuntimeTypeWrapperTest to JUnit 4 test

* Prefer wrapped reflective adapter for serialization of subclass

* Detect reflective adapter used as delegate for Gson.FutureTypeAdapter

* Tiny style tweak.

Co-authored-by: Éamonn McManus <emcmanus@google.com>"
a0dc7bfdddfe488510edde8d8abb0727743394c4,"Support Java Records when present in JVM. (#2201)

* Support Java Records when present in JVM.

Fixes google/gson#1794

Added support in the ReflectionHelper to detect if a class is a record
on the JVM (via reflection), and if so, we will create a special
RecordAdapter to deserialize records, using the canoncial constructor.

The ReflectionTypeAdapterFactory had to be refactored a bit to support
this. The Adapter class inside the factory is now abstract, with
concrete implementations for normal field reflection and for Records.
The common code is in the Adapter, with each implementation
deserializing values into an intermediary object.

For the FieldReflectionAdapter, the intermediary is actually the final
result, and field access is used to write to fields as before. For the
RecordAdapter the intermediary is the Object[] to pass to the Record
constructor.

* Fixed comments from @Marcono1234

Also updated so that we now use the record accessor method to read out
values from a record, so that direct field access is not necessary.

Also added some tests, that should only execute on Java versions with
record support, and be ignored for other JVMs

* Fixed additional comments from @Marcono1234

* Made Adapter in ReflectiveTypeAdapterFactory public

Fix comment from @eamonnmcmanus"
86c35bba3091afe70f38598b04ba89b7e8f539f7,"Small adjustments to the new record code. (#2219)

* Small adjustments to the new record code.

* Replace wildcard imports with single imports.
* Enable `Java17RecordTest` and fix its many previously-hidden problems.
* Use a `Map` to get primitive zero values rather than a potentially-expensive reflective trick.
* Apply some automated code fixes.

* Address review comments."
243f5e11262d580fa21f045d35d75af1b2b6221d,"Bump jackson-databind from 2.13.4 to 2.13.4.1 (#2222)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.13.4 to 2.13.4.1.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
c2458bf876ef52a4489af937f7dd7c2709b74fb9,"Bump jackson-databind from 2.13.4.1 to 2.13.4.2 (#2223)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.13.4.1 to 2.13.4.2.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
954d526af4ad9e58872e7a64f92e749421d1cdf5,"Add `JsonArray.asList` and `JsonObject.asMap` view methods (#2225)

* Add `JsonArray.asList` and `JsonObject.asMap` view methods

* Address review comments"
66d9621ce87c04a5167ee04097694093b13b514c,"Adjust Record adapter and extend test coverage (#2224)

* Adjust Record adapter and extend test coverage

* Address review feedback

* Make constructor string more concise

* Add tests for Gson default behavior for static fields

* Improve exception for deserializing static final field

Previously it would report ""Unexpected IllegalAccessException occurred...""
due to the uncaught IllegalAccessException.

* Improve handling of exception thrown by accessor

Such an exception is not 'unexpected' (which was claimed by the previous
exception handling) because user code could throw it.

* Improve constructor invocation exception handling and add tests"
9578583effe9c6acc1296e856eeb81bfd75581d0,"Small tweaks to fix Error Prone warnings. (#2227)

* Small tweaks to fix Error Prone warnings.

* Add another suppression."
4f948dd482eaec60273696274401f2c275079cda,"Automatically replace version references on `release:prepare` (#2212)

* Automatically replace version references on `release:prepare`

* Specify encoding and improve placeholder replacements

* Add `since $next-version$` for `JsonArray.asList` and `JsonObject.asMap`"
9efdfad33c6d717764f2b3a5214cf71bdea83c31,[maven-release-plugin] prepare release gson-parent-2.10
c7544a0e864e4ad4a458a3313da3cef2f84e7b91,[maven-release-plugin] prepare for next development iteration
7bca5c4061726164e8b68f2496118b7b5243eefe,[maven-release-plugin] rollback the release of gson-parent-2.10
4705518e12fe205b9c880b14fd15efa6aae4a5bd,"Revise the version regex in `GsonVersionDiagnosticsTest`. (#2228)

Before we can release 2.10 we must support two-digit components.
Additionally, there's no reason to require a patch number (2.10.0 rather than 2.10)."
87e9ee5511021a918bf957cf56a9142b4efa82b6,[maven-release-plugin] prepare release gson-parent-2.10
79c27dd885eeacbb41e13e86d83fa7ca85afd3e1,[maven-release-plugin] prepare for next development iteration
7ca36c5e67350808e82acf8ddf56b5ef1b21b96b,Add a `<developers>` section to the main `pom.xml`.
dd92e49b279f335006433148e673fdfb2c387074,[maven-release-plugin] prepare release gson-parent-2.10
763e69a33117fcfc2b527aee7cda5866cc747b22,[maven-release-plugin] prepare for next development iteration
dd6635dc61626dde42423b61e6427abd946f35cb,"Making consistent prefixs in PerformanceTest (#1760)

* Making consistent prefixs in PerformanceTest

change some ""disable_"" to ""disabled_""

* Update PerformanceTest.java"
ff96296eeab00269962476c322b7d109851e0253,"Add 2.10 changes to CHANGELOG; minor release follow-ups (#2229)

* Add 2.10 changes to CHANGELOG; minor release follow-ups

* Use GitHub URLs in CHANGELOG

GitHub automatically displays them only as short reference with link and
additionally shows a preview when hovering over them.

* Add `id` to pom.xml developer entry

Otherwise BND plugin shows a warning.

* Run unit tests during release preparation

* Move git option before pathspec"
b504d0e9ff309ce35c7171dbafb93bb2a1b205f3,"Bump os-maven-plugin from 1.7.0 to 1.7.1 (#2235)

Bumps [os-maven-plugin](https://github.com/trustin/os-maven-plugin) from 1.7.0 to 1.7.1.
- [Release notes](https://github.com/trustin/os-maven-plugin/releases)
- [Commits](https://github.com/trustin/os-maven-plugin/compare/os-maven-plugin-1.7.0...os-maven-plugin-1.7.1)

---
updated-dependencies:
- dependency-name: kr.motd.maven:os-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
c995c12b5acb90396020e1a477a5f277a240e134,"Bump jackson-databind from 2.13.4.2 to 2.14.0 (#2234)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.13.4.2 to 2.14.0.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
94b5310da4f1c484a17dd0a7ee13d10c12ad8075,"Bump maven-release-plugin from 3.0.0-M6 to 3.0.0-M7 (#2232)

Bumps [maven-release-plugin](https://github.com/apache/maven-release) from 3.0.0-M6 to 3.0.0-M7.
- [Release notes](https://github.com/apache/maven-release/releases)
- [Commits](https://github.com/apache/maven-release/compare/maven-release-3.0.0-M6...maven-release-3.0.0-M7)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-release-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
92b7ae0ca066acbfebdd5c02516ddb95ef564c98,Mention in CHANGELOG that GitHub Releases are used in the future (#2230)
ceb3b8747ece88cc9f8422420fefccb95b83860f,"Added JsonObject method isEmpty() (#2233)

* Added isEmpty()

* Fixed Javadoc typo

* Changed test to use assertTrue() and assertFalse()"
818faeeaa2eb5b434710d76ab9c685d4285e4788,"Adjust version numbers and a test to conform to the SemVer spec. (#2237)

* Adjust version numbers and a test to conform to the SemVer spec.

Gson releases since 2.8.0 have been following this spec. We mistakenly released 2.10
without the .0 patch version, and adjusted `GsonVersionDiagnosticsTest` so it would
accept that, as well as the two-digit `10`. Here we make the test no longer accept
versions without a patch number, while still accepting two-digit minor versions of course.
We also change the snapshot version to 2.11.0-SNAPSHOT instead of 2.11-SNAPSHOT."
3f1e62d1e1b43f1d76af5106f9484e940bf74606,"Bump japicmp-maven-plugin from 0.16.0 to 0.17.1 (#2238)

Bumps [japicmp-maven-plugin](https://github.com/siom79/japicmp) from 0.16.0 to 0.17.1.
- [Release notes](https://github.com/siom79/japicmp/releases)
- [Changelog](https://github.com/siom79/japicmp/blob/master/release.py)
- [Commits](https://github.com/siom79/japicmp/compare/japicmp-base-0.16.0...japicmp-base-0.17.1)

---
updated-dependencies:
- dependency-name: com.github.siom79.japicmp:japicmp-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
bc04dd20b969cb8a6999282b6749266b9f477bcf,"Bump jackson-databind from 2.14.0 to 2.14.1 (#2241)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.14.0 to 2.14.1.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
6c27553c8375515e9522facf5ea82b8161d5ffb2,Improve exception message for duplicate field names (#2251)
e4c3b653a6bdac992d64822796af95ff8e74a625,"Fix non-threadsafe creation of adapter for type with cyclic dependency (#1832)

* Fix non-threadsafe creation of adapter for type with cyclic dependency

* Improve handling of broken adapters during Gson.getAdapter(...) call

* Improve test

* Slightly improve implementation and extend tests

* Simplify getAdapter implementation

* Convert GsonTest to JUnit 4 test

* Clarify getAdapter concurrency behavior"
c9c8e8f1bc34eafda7c331862642db79821e393a,Fix the javadoc of JsonDeserializer.deserialize() (#2243)
66d934ba4478035c5abf6b559066ec4a60d82325,Remove already covered condition in JsonNull.equals() (#2271)
c33e03b133722e84d25c4f80244d74f7fe3f66cb,"build: harden build.yml permissions (#2274)

Signed-off-by: Alex <aleksandrosansan@gmail.com>

Signed-off-by: Alex <aleksandrosansan@gmail.com>"
dcbc164cb0d843dc2c7b67ea5245a93dfca60a43,"Bump bnd-maven-plugin from 6.3.1 to 6.4.0 (#2245)

Bumps [bnd-maven-plugin](https://github.com/bndtools/bnd) from 6.3.1 to 6.4.0.
- [Release notes](https://github.com/bndtools/bnd/releases)
- [Changelog](https://github.com/bndtools/bnd/blob/master/docs/ADDING_RELEASE_DOCS.md)
- [Commits](https://github.com/bndtools/bnd/compare/6.3.1...6.4.0)

---
updated-dependencies:
- dependency-name: biz.aQute.bnd:bnd-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
28affcbdb9cc77efd6d4cb6cf6cab4acd48f4975,Remove the `final` keyword from `private` method (#2276)
0a42c31efe265368b71b629a071e7be6c9593d10,"Code cleanup (#2282)

* Simplify `if` condition in JsonReader.peekNumber()

* Remove `if` to simplify a `return` in Excluder.excludeClassChecks()

* Remove redundant variable in Gson.fromJson()

* equal condition replace by `Objects.equals()` in $Gson$Types.equal()

* equal condition replace by `Objects.equals()` in LinkedTreeMap.equal()

* Replace `switch` with `if` in UtcDateTypeAdapter.read()

* Remove redundant `throws` clause in GraphAdapterBuilder.read()

* Remove redundant `throws` clause in JsonTreeReader.UNREADABLE_READER

* Remove redundant `throws` clause in JsonTreeWriter.UNREADABLE_READER

* Remove unnecessary `.initCause()` call

* Remove redundant cast in TreeTypeAdapter.GsonContextImpl.deserialize

* Replace `StringBuilder` with `String`

* Fix the import and restore the `switch`

* Fix the import

* Add the `util.Objects` import

* Fix indentation

* Add a comment to clarify the condition

* Fix indentation

* Fix imports

* Fix indentation

* Fix indentation

* Fix indentation"
6c3cf2243581c6ade4d6341b7d46884528261108,Unnecessary unboxing at JsonPrimitive.getAsBoolean() (#2277)
f63a1b85aec695f4d464e07a5c13fc038d581527,"Remove EOFException special casing of JsonStreamParser.next() (#2281)

* Remove EOFException special casing of JsonStreamParser.next()

The previous behavior violated the Iterator contract where for
`JsonStreamParser(""["")` a call to `hasNext()` would return true,
but `next()` would throw a NoSuchElementException.

* Fix incorrect documented thrown exception type for JsonStreamParser"
f2f53fbe8e54020656de67e2511e9b36932963e3,Add troubleshooting guide (#2285)
6c12ded70ddfe47b0412fbb6d8a3ff970518ce2b,"Rewrite the `testParsingDatesFormattedWithSystemLocale()`, Fix #2199 (#2287)

* Rewrite the `testParsingDatesFormattedWithSystemLocale()`, Fix #2199

* Format the test

* Format the code following Google Java Style Guide

* Revert ""Format the code following Google Java Style Guide""

This reverts commit f5e2e16b290a4bed09ed7fcc162d4a2529fe4c38."
a19d53f5358e7a4e12817d766b3289def78a989d,"Replace custom user guide header anchors (#2289)

Looks like GitHub does not support them anymore."
4aaf1385db5ffbc99de7411e5e80201fd8da7f3c,Improve variable names in user guide (#2290)
1a2170b99c9d293e825bf8f511b191196326ea03,"Port tests from JUnit 3 to JUnit 4 (#2294)

* Port tests from JUnit 3 to JUnit 4

* Port tests from JUnit 3 to JUnit 4

* Add `@Test` above `@Ignore`"
2ce6a6106c22bf0cce2e39f68b0da2f117d6e66b,[maven-release-plugin] prepare release gson-parent-2.10.1
3adf2ad7488cbc1e297540410d218edf97c6bc76,[maven-release-plugin] prepare for next development iteration
21989d7ff8e67bfc952c379da233de8609afc776,"Bump maven-surefire-plugin from 3.0.0-M7 to 3.0.0-M8 (#2298)

Bumps [maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.0.0-M7 to 3.0.0-M8.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.0.0-M7...surefire-3.0.0-M8)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
d7fb0e4a3162c72463821753d96d4a75a3b705a9,"Add `NoSuchMethodError` section to troubleshooting guide (#2300)

* Mention exclusion of fields in troubleshooting guide

* Add `NoSuchMethodError` section to troubleshooting guide

* Add missing word"
be87c3fd0e8034b0422890b7f604a39890be780b,"Port Junit test to Truth in the package `com.google.gson` of the module `gson` (#2299)

* Add the Truth dependency

* Port Junit test to Truth in the package `com.google.gson` of the module `gson`

* Replace the `assertThat(e.getMessage()).isEqualTo(...)""` with `assertThat(e).hasMessageThat().isEqualTo(...)`

* Minor fixes"
41de7ce75b37fd97a8534d2c24740daa69f7cbaa,"Bump jackson-databind from 2.14.1 to 2.14.2 (#2306)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.14.1 to 2.14.2.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
49b00d1a8630d1dabcc5c364b413c23f7433e4a7,"Port all Junit assert to Truth asserts (#2304)

* Port Junit assert to Truth in `com.google.gson.stream`

* Port Junit assert to Truth in `com.google.gson.regression`

* Port Junit assert to Truth in `om.google.gson.reflect`

* Port Junit assert to Truth in `com.google.gson.metrics`

* Port Junit assert to Truth in `com.google.gson.internal`

* Port Junit assert to Truth in `com.google.gson.internal.sql`

* Port Junit assert to Truth in `com.google.gson.internal.reflect`

* Port Junit assert to Truth in `com.google.gson.internal.bind`

* Port Junit assert to Truth in `com.google.gson.internal.bind.util`

* Port Junit assert to Truth in `com.google.gson.functional`

* Replaces `List.of` with `Arrays.asList` to grant legacy

* Simplify `==` asserts

* Simplify `.contain()` asserts + Minor fixes

* Simplify asserts"
0d22e5d2051112dd59dbae516c7a71f2e5c372fa,"Add copyright notices to files that were missing them. (#2307)

In each case the copyright year is the year in which the file was first added."
9f26679e7a96f0bb9952c326b2d9f79ef03ea9f5,"Adds Error Prone to the `maven-compiler-plugin` (#2308)

* Adds Error Prone to the `pom.xml`

* Adds Error Prone annotations to avoid compiling errors

* Adds profile to run Error Prone in JDK8

* Revert ""Adds profile to run Error Prone in JDK8""

This reverts commit 61771d0da55003ea5bc8c6f086d925aec583c9a2.

* Fix Error Prone warn

* Add comment to `pom.xml`

* Fix the `@SuppressWarnings(""GetClassOnClass"")`

* Replace the Error Prone link in the `pom.xml`

* Disable Error Prone with jdk-15`

* Remove a new-line in `pom.xml`"
af2179843601c73aa96062208d8f324a45243e47,"Fix the `equals` method of `JsonPrimitive` to work with `BigInteger` (#2311)

* Fix the `equals` method of `JsonPrimitive` to work with BigInteger

* Improve the `equals` & `getAsBigInteger` methods in `JsonPrimitive`"
19f54ee6ed33b7517c729c801bc57c8c0478be7d,"Fixes #776: Add settings for the kind of newline to use (#2231)

* Add settings for kind of newline to use

* Fix amp in javadoc

* Fixing link in javadoc

* Doc: use JSON instead of Json

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* PR Feedback: Objects.requireNonNull

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* PR Feedback: $next-version$, don't hardcode

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* s/testNewlineLF/testNewlineLf/

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Implement PR feedback

* Round two of review

* Restore copyright year, no reason to update

* Rename OS named enum values to CR and LF

* Add javadoc to NewlineStyle.getValue()

* Implement PR feedback, round 2

* Fix typo

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* No need for line break

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Shorter, cleaner doc

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Using a FormattingStyle for pretty print

* Fix Junit4 and Truth after merge from master

* Implement review feedback

* Double backslash in message

---------

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>"
2658aca66a1d0f097794a5ad5eb33c095a8f8d5d,"Fix error prone warnings (#2316)

* Fix `OperatorPrecedence` warn in `JsonWriter#close`

* Fix `ReferenceEquality` warn in `LinkedTreeMap#replaceInParent`

* Fix `UnnecessaryParentheses` warn in `LinkedTreeMap#replaceInParent`

* Fix `ReferenceEquality` warn in `LinkedTreeMap#hasNext`

* Fix `ReferenceEquality` warn in `LinkedTreeMap#nextNode`

* Adds `error_prone_annotations` to the `pom.xml` of `gson`

* Fix `InlineMeSuggester` warns in `JsonParser`

* Fix `UnnecessaryParentheses` warns in `ConstructorConstructor#newDefaultImplementationConstructor`

* Fix `ThreadLocalUsage` warn in `Gson`

* Fix `JdkObsolete` warn in `GsonBuilder`

* Fix `ReferenceEquality` warn in `LazilyParsedNumber#equals`

* Fix `OperatorPrecedence` warn in `TreeTypeAdapter#create`

* Fix `OperatorPrecedence` warn in `ArrayTypeAdapter`

* Fix `UnnecessaryParentheses` warn in `TypeAdapters`

* Adds `-XepExcludedPaths` flag to ErrorProne plugin to exclude tests and proto path

* Fix `ClassNewInstance` warn in `InterceptorAdapter`

* Fix `ThreadLocalUsage` warn in `GraphAdapterBuilder`

* Fix `JdkObsolete` warn in `GraphAdapterBuilder`

* Revert ""Adds `error_prone_annotations` to the `pom.xml` of `gson`""

This reverts commit 14af14dfa23b46a54f4855a70ccf2b0a2cdc3e3f.

* Revert ""Fix `InlineMeSuggester` warns in `JsonParser`""

This reverts commit 095bfd517e06510e4cc9cc6b1aac58ad9bf3038a.

* Adds `@SuppressWarnings(""ThreadLocalUsage"")`

* Fix `OperatorPrecedence` in `JsonWriter`

* Revert ""Fix `ReferenceEquality` warn in `LinkedTreeMap#nextNode`""

This reverts commit 387746c7f7e3d0943c8f80501f5d9c3710f4862e.

* Adds `@SuppressWarnings(""ReferenceEquality"")`

* Adds `guava-testlib` to the gson `pom.xml`

* `@SuppressWarnings(""TruthSelfEquals"")` removed to use `EqualsTester()`"
e8b6fa9287eabfb983b75943059b068786d98066,"Bump maven-surefire-plugin from 3.0.0-M8 to 3.0.0-M9 (#2313)

Bumps [maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.0.0-M8 to 3.0.0-M9.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.0.0-M8...surefire-3.0.0-M9)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
18bdb6db2ab2312ef7c53c2b9a2fbbac588c9977,"Fix a couple of types in tests. (#2317)

These show up with recent Error Prone analyses for Truth. Because the
tests use the overload of `Gson.fromJson` that takes a `Type` argument,
rather than the one with a `TypeToken`, the type mismatches were not
detected by the compiler."
779754e0f93f96c506a1fd65b9ebe776257dc637,"Bump maven-javadoc-plugin from 3.4.1 to 3.5.0 (#2318)

Bumps [maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.4.1 to 3.5.0.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-3.4.1...maven-javadoc-plugin-3.5.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-javadoc-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
742fd50ff74350462d8dcf80941efce219e187dd,"Fix error prone warns (#2319)

* Adds a javadoc summary to the methods in the `SerializedName` annotation

Fixes the `MissingSummary` warn given by ErrorProne

* Adds a javadoc summary to the methods of the `ExclusionStrategy` annotation

 Fixes the `MissingSummary` warn given by ErrorProne

* Adds a javadoc summary to `getDeclaringClass()` and `getName()` methods of the `FieldAttributes` class

 Fixes the `MissingSummary` warn given by ErrorProne

* Adds a javadoc summary to `getMajorJavaVersion()` and `isJava9OrLater()` methods of the `JavaVersion` class

 Fixes the `MissingSummary` warn given by ErrorProne

* Adds a comment in the empty catch block of the `AccessChecker:101` class

 Fixes the `EmptyCatch` warn given by ErrorProne

* Adds a comment in the empty catch block of the `DefaultDateTypeAdapter:158` class

 Fixes the `EmptyCatch` warn given by ErrorProne

* Adds a comment in the empty catch blocks of the `UnsafeAllocator:(67|92|113)` class

 Fixes the `EmptyCatch` warn given by ErrorProne

* Adds a comment in the empty catch block of the `DateTypeAdapter:85` class

 Fixes the `EmptyCatch` warn given by ErrorProne

* Fixes javadoc param of the `deserialize(...)` method of the `JsonDeserializer` interface

 Fixes the `InvalidParam` warn given by ErrorProne

* Adds a charset `StandardCharsets.UTF_8` in the `resourceToString()` method of the `ParseBenchmark` class

Fixes the `DefaultCharset` warn given by ErrorProne

* Fixes a typo

* Implements review feedback

* Adds blank line before @ tag."
850e97777363bdc9e296dae76ad25a6304c3984d,Add pull request template (#2326)
9f46977d57bd219414dcab32f542482dffa33094,"Adds the `<maven.compiler.testRelease>11</maven.compiler.testRelease>` (#2324)

* Adds `JDK11` to run test with `--release 11`

This commit add a new profile `JDK11` that with a JDK <= 11 apply the property `<maven.compiler.testRelease>11</maven.compiler.testRelease>`

* Removes the `JDK11` profile & Adds `testRelease` property"
105f28ffe6011f4adf464dcf4a72d3f63b13c8a5,"BoundField.write memory optimization (#2325)

* BoundField.write memory optimization

Declare and initialize the type adapter used for writing BoundFields outside of the anonymous class to ensure that a new TypeAdapterRuntimeTypeWrapper is not constructed each time a BoundField is written. This type adapter is only initialized if the BoundField will be used for serialization.

* Avoid confusing nullness-analysis tools"
bfbbd0dde88bd4a2586e4e0a2101f790246e17b4,"Bump maven-compiler-plugin from 3.10.1 to 3.11.0 (#2330)

Bumps [maven-compiler-plugin](https://github.com/apache/maven-compiler-plugin) from 3.10.1 to 3.11.0.
- [Release notes](https://github.com/apache/maven-compiler-plugin/releases)
- [Commits](https://github.com/apache/maven-compiler-plugin/compare/maven-compiler-plugin-3.10.1...maven-compiler-plugin-3.11.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-compiler-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
dc20b7561af3a793e4945842040e956803b641c9,"Fix error prone warns (#2320)

* Adds `@SuppressWarnings(""NarrowingCompoundAssignment"")`

* Adds `@SuppressWarnings(""TypeParameterUnusedInFormals"")`

* Adds `@SuppressWarnings(""JavaUtilDate"")`

* Adds a limit to `String.split()`

* Add `error_prone_annotations` to the `pom.xml`

* Adds `@InlineMe(...)` to deprecated methods

* Adds `@SuppressWarnings(""ImmutableEnumChecker"")`

* Adds `@SuppressWarnings(""ModifiedButNotUsed"")`

* Adds `@SuppressWarnings(""MixedMutabilityReturnType"")`

* Removes an unused import

* Adds `requires` to `module-info.java`

* Adds ErrorProne `link` into `pom.xml`

* Remove unused imports

Removed from:
- ParseBenchmark

* Adds `@SuppressWarnings(""EqualsGetClass"")`

* Excludes from `proto` just the generated code.

Replaces `.*proto.*` with `.*/generated-test-sources/protobuf/.*` in such way will be excluded just the generated code and not the whole `proto` directory

* Removes an unused variable

Removes the `descriptor` variable because is unused.

* Fixes the `BadImport` warn into `ProtosWithAnnotationsTest`

* Fixes the `BadImport` warns into `ProtosWithAnnotationsTest`

* Enables ErrorProne in `gson/src/test.*`

Removes the `gson/src/test.*` path from the `-XepExcludedPaths` parameter of the ErrorProne plugin

* Fixes `UnusedVariable` warns

This commit fix all `UnusedVariable` warns given by ErrorProne in the `gson/src/test.*` path.

Some field is annotated with `@Keep` that means is used by reflection.
In some other case the record is annotated with `@SuppressWarnings(""unused"")`

* Fixes `JavaUtilDate` warns

This commit fix all `JavaUtilDate` warns given by ErrorProne in the `gson/src/test.*` path.

Classes/Methods are annotated with `@SuppressWarnings(""JavaUtilDate"")` because it's not possible use differente Date API.

* Fixes `EqualsGetClass` warns

This commit fix all `EqualsGetClass` warns given by ErrorProne in the `gson/src/test.*` path.

I have rewrite the `equals()` methods to use `instanceof`

* Replaces pattern matching for instanceof with casts

* Fixes `JdkObsolete` warns

This commit fix all `JdkObsolete` warns given by ErrorProne in the `gson/src/test.*` path.

In some cases I have replaced the obsolete JDK classes with the newest alternatives.  In other cases, I have added the `@SuppressWarnings(""JdkObsolete"")`

* Fixes `ClassCanBeStatic` warns

This commit fix all `ClassCanBeStatic` warns given by ErrorProne in the `gson/src/test.*` path.

I have added the `static` keyword, or I have added `@SuppressWarnings(""ClassCanBeStatic"")`

* Fixes `UndefinedEquals` warns

This commit fix all `UndefinedEquals` warns given by ErrorProne in the `gson/src/test.*` path.

I have added `@SuppressWarnings(""UndefinedEquals"")` or fixed the asserts

Note: In this commit I have also renamed a test from `testRawCollectionDeserializationNotAlllowed` to `testRawCollectionDeserializationNotAllowed`

* Fixes `GetClassOnEnum` warns

This commit fix all `GetClassOnEnum` warns given by ErrorProne in the `gson/src/test.*` path.

I have replaced the `.getClass()` with `.getDeclaringClass()`

* Fixes `ImmutableEnumChecker` warns

This commit fix all `ImmutableEnumChecker` warns given by ErrorProne in the `gson/src/test.*` path.

I have added the `final` keyword, or I have added the `@SuppressWarnings(""ImmutableEnumChecker"")` annotation

* Fixes `StaticAssignmentOfThrowable` warns

This commit fix all `StaticAssignmentOfThrowable` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `AssertionFailureIgnored` warns

This commit fix all `AssertionFailureIgnored` warns given by ErrorProne in the `gson/src/test.*` path.

I have added the `@SuppressWarnings(""AssertionFailureIgnored"")` annotation

* Fixes `ModifiedButNotUsed` warns

This commit fix all `ModifiedButNotUsed` warns given by ErrorProne in the `gson/src/test.*` path.

I have added the `@SuppressWarnings(""ModifiedButNotUsed"")` annotation

* Fixes `MissingSummary` warns

This commit fix all `MissingSummary` warns given by ErrorProne in the `gson/src/test.*` path.

I have remove the Javadoc `@author`

* Fixes `FloatingPointLiteralPrecision` warns

This commit fix all `FloatingPointLiteralPrecision` warns given by ErrorProne in the `gson/src/test.*` path.

I have added the `@SuppressWarnings(""FloatingPointLiteralPrecision"")` annotation

* Fixes `StringSplitter` warns

This commit fix all `StringSplitter` warns given by ErrorProne in the `gson/src/test.*` path.

I have replaced the `String.split(...)` with `Splitter`

* Fixes `EmptyCatch` warns

This commit fix all `EmptyCatch` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `UnicodeEscape` warns

This commit fix all `UnicodeEscape` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `EmptyBlockTag` warns

This commit fix all `EmptyBlockTag` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `LongFloatConversion` warns

This commit fix all `LongFloatConversion` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `LongDoubleConversion` warns

This commit fix all `LongDoubleConversion` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `TruthAssertExpected` warns

This commit fix all `TruthAssertExpected` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `UnusedMethod` warns

This commit fix all `UnusedMethod` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `UnusedTypeParameter` warns

This commit fix all `UnusedTypeParameter` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `CatchFail` warns

This commit fix all `CatchFail` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `MathAbsoluteNegative` warns

This commit fix all `MathAbsoluteNegative` warns given by ErrorProne in the `gson/src/test.*` path.

* Fixes `LoopOverCharArray` warns

This commit fix all `LoopOverCharArray` warns given by ErrorProne in the `gson/src/test.*` path.

`toCharArray` allocates a new array, using `charAt` is more efficient

* Fixes `HidingField` warns

This commit fix all `HidingField` warns given by ErrorProne in the `gson/src/test.*` path.

* Implements code review feedback

* Implements code review feedback

This commit implements some other code review feedback

* Enable ErrorProne in `extra`

Thi commit removes the `.*extras/src/test.*` path from the `-XepExcludedPaths` parameter of ErrorProne.

* Fix the `JavaUtilDate` warns

This commit fix all `JavaUtilDate` warns given by ErrorProne in the `extras/src/test.*` path.

* Implements code review feedback

* Removes redundant new-line

* Implements code review feedback

* Adds `JDK11` to run test with `--release 11`

* Revert ""Adds `JDK11` to run test with `--release 11`""

This reverts commit a7cca386098ae847a10a31c09c3ab9b11eee5920."
19983737ae5e45f90cbc50cbd7b70a0db9ed7a83,"Bump japicmp-maven-plugin from 0.17.1 to 0.17.2 (#2331)

Bumps [japicmp-maven-plugin](https://github.com/siom79/japicmp) from 0.17.1 to 0.17.2.
- [Release notes](https://github.com/siom79/japicmp/releases)
- [Changelog](https://github.com/siom79/japicmp/blob/master/release.py)
- [Commits](https://github.com/siom79/japicmp/compare/japicmp-base-0.17.1...japicmp-base-0.17.2)

---
updated-dependencies:
- dependency-name: com.github.siom79.japicmp:japicmp-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
ef35a34a6033914644410845c4b90f52247c763f,"Enforce build using JDK >= 11 (#2333)

Building already requires JDK >= 11, but previously using a lower JDK
version such as JDK 8 would lead to cryptic build errors because some
compiler flags are unsupported.
Using the Maven Enforcer Plugin makes sure that the build fails early
with a somewhat better to understand error message."
0adcdc80d5ef3a40086a8abd6e2f55164a7c2597,"Fail Maven build on warnings (#2335)

* Fail Maven build on warnings

* Fix configuration parameter name

For the Javadoc plugin it is ""warnings"" (plural) instead of ""warning"""
85ebaf7c3553a5d5c058fd6067824a7c5258d07f,"Fix #2334 (#2337)

* Fix #2334

This commit replaces the `NumberFormatException` with `MalformedJsonException` in the `JsonReader#readEscapeCharacter()` and also fixes the tests.

* Removes white-space"
f467ec20c31099e39263d4451972130befd0953c,"Fix incorrect comment in `pom.xml` (#2338)

Accidentally referred to wrong JDK bug report"
2f7be29a30802b09e49b78287a1574aaa79b875a,"Specify Error Prone JVM args with `.mvn/jvm.config` (#2339)

* Specify Error Prone JVM args with `.mvn/jvm.config`

This allows avoiding fork mode for compilation, which:
- might slightly reduce compilation time
- guarantees that all compiler diagnostics are properly reported

* Combine enforcer executions"
1da826dc6c8eb85ad9ed97e120823428fe1236f4,"Bump moditect-maven-plugin from 1.0.0.RC2 to 1.0.0.RC3 (#2340)

Bumps [moditect-maven-plugin](https://github.com/moditect/moditect) from 1.0.0.RC2 to 1.0.0.RC3.
- [Release notes](https://github.com/moditect/moditect/releases)
- [Commits](https://github.com/moditect/moditect/compare/1.0.0.CR2...1.0.0.RC3)

---
updated-dependencies:
- dependency-name: org.moditect:moditect-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
6eddbf30310913d599631eb156fad32f7ee8ddf8,Make dependency on Error Prone Annotations non-optional (#2346)
26229d33d81f0d60f508411eb3c541f3e87322ac,"FormattingStyle follow-up (#2327)

* FormattingStyle follow-up

* Add links to FormattingStyle

* Use Truth for FormattingStyleTest

* Reduce pull request scope to Javadoc and minor code changes"
75bf3b41574421f081e93052ce1aca5e8dbe3d9a,"Bump maven-release-plugin from 3.0.0-M7 to 3.0.0 (#2347)

Bumps [maven-release-plugin](https://github.com/apache/maven-release) from 3.0.0-M7 to 3.0.0.
- [Release notes](https://github.com/apache/maven-release/releases)
- [Commits](https://github.com/apache/maven-release/compare/maven-release-3.0.0-M7...maven-release-3.0.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-release-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
7f303b5db4b08955175a6d35be2a557632ec32e5,"Mention creation of GitHub release in `ReleaseProcess.md` (#2349)

* Mention creation of GitHub release in `ReleaseProcess.md`

* Link to GitHub releases from README"
c34b9ff79a534803c4fb5eb10e0b35972282ccf1,"Fix incorrect inherited URLs in `pom.xml` (#2351)

Previously Maven appended the artifact ID of the modules which lead for
example for the `gson` module to the incorrect URL https://github.com/google/gson/gson

This can be checked with `mvn help:effective-pom`"
1d9d9774be408d1f24cb7c7cb4f2050cdb265e2f,"Bump maven-resources-plugin from 3.3.0 to 3.3.1 (#2360)

Bumps [maven-resources-plugin](https://github.com/apache/maven-resources-plugin) from 3.3.0 to 3.3.1.
- [Release notes](https://github.com/apache/maven-resources-plugin/releases)
- [Commits](https://github.com/apache/maven-resources-plugin/compare/maven-resources-plugin-3.3.0...maven-resources-plugin-3.3.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-resources-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
3adead6ab4f240ed53322eff34210ed4a69dd490,Fix incorrect sample code in User Guide (#2362)
051cb43fd9040a432626ef53523f1e7db7ab52c1,"Fixes outdated URL (`ISO8601Utils.java`) (#2363)

* Fixes comments

Fixes the javadoc and the link to Jackson databind ISO8601Utils.java

* Updates outdated URL in UtcDateTypeAdapter"
f1b4a71de56ce9a8008cba897924e70d52509077,"Bump maven-enforcer-plugin from 3.2.1 to 3.3.0 (#2366)

Bumps [maven-enforcer-plugin](https://github.com/apache/maven-enforcer) from 3.2.1 to 3.3.0.
- [Release notes](https://github.com/apache/maven-enforcer/releases)
- [Commits](https://github.com/apache/maven-enforcer/compare/enforcer-3.2.1...enforcer-3.3.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-enforcer-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
b43ccee88927fa65d5e39a8ad4d0bebca7bf9994,"Bump maven-surefire-plugin from 3.0.0-M9 to 3.0.0 (#2342)

Bumps [maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.0.0-M9 to 3.0.0.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.0.0-M9...surefire-3.0.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
c1da2d7070773af51ff7a98cf2979af61623e596,"Add `@CanIgnoreReturnValue` as appropriate to Gson methods. (#2369)

This annotation indicates that return value of the annotated method does
not need to be used. If it is _not_ present on a non-void method, and if
Error Prone's `CheckReturnValue` is active, then calling the method
without using the result is an error. However, we are not enabling
`CheckReturnValue` by default here.

Also update some code that does ignore return values, so that the
returned value is used, if only by assigning it to an unused variable."
37ed0fcbd7930df0aad9f5068c608e4465413877,Address review comments from @Marcono1234. (#2372)
1717fd62cf2730994605b84d9cb326395e4616b9,"Remove the comment strings "" json is "" from the UserGuide.md (#2374)

* removed ' json is ' from the UserGuide.md

* few more changes in UserGuide.md"
cbad1aa79f9a41f0e0887c2c0159fa9aee1cdf3b,"Link to troubleshooting guide from exception messages (#2357)

* Link to troubleshooting guide from exception messages

* Add examples to troubleshooting guide

* Use proper anchor names for troubleshooting guide"
55cf9fa941e93030244ecc9092f65183c16fc745,"Bump jackson-databind from 2.14.2 to 2.15.0 (#2377)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.14.2 to 2.15.0.
- [Release notes](https://github.com/FasterXML/jackson/releases)
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
8333ccac62eb586f437305d66f4b6438a3529c52,"Bump moditect-maven-plugin from 1.0.0.RC3 to 1.0.0.Final (#2381)

Bumps [moditect-maven-plugin](https://github.com/moditect/moditect) from 1.0.0.RC3 to 1.0.0.Final.
- [Release notes](https://github.com/moditect/moditect/releases)
- [Commits](https://github.com/moditect/moditect/compare/1.0.0.RC3...1.0.0.Final)

---
updated-dependencies:
- dependency-name: org.moditect:moditect-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
5fffd5aca1094d045e978bd143032500934395f4,"Bump maven-gpg-plugin from 3.0.1 to 3.1.0 (#2384)

Bumps [maven-gpg-plugin](https://github.com/apache/maven-gpg-plugin) from 3.0.1 to 3.1.0.
- [Commits](https://github.com/apache/maven-gpg-plugin/compare/maven-gpg-plugin-3.0.1...maven-gpg-plugin-3.1.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-gpg-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
1339b506298cb854877f5d39bea1affc8162146c,"Bump maven-surefire-plugin from 3.0.0 to 3.1.0 (#2383)

Bumps [maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.0.0 to 3.1.0.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.0.0...surefire-3.1.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Éamonn McManus <emcmanus@google.com>"
b330ad97901bd93098652b9d55e6f04246496e11,"Bump error_prone_annotations from 2.18.0 to 2.19.0 (#2386)

Bumps [error_prone_annotations](https://github.com/google/error-prone) from 2.18.0 to 2.19.0.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.18.0...v2.19.0)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_annotations
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
49dbc6f072317c3a90985d778449a39ff5044a66,"Update Error Prone, bypass a bug in it, fix some problems it flags (#2387)"
eae63f92fb42e603bddd22f238a2a82a61140ce2,"Bump error_prone_annotations from 2.19.0 to 2.19.1 (#2389)

Bumps [error_prone_annotations](https://github.com/google/error-prone) from 2.19.0 to 2.19.1.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.19.0...v2.19.1)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_annotations
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
3c4b0721005dbc5e0d7515b95a321715d48b3291,"Bump error_prone_core from 2.19.0 to 2.19.1 (#2388)

Bumps [error_prone_core](https://github.com/google/error-prone) from 2.19.0 to 2.19.1.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.19.0...v2.19.1)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_core
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
a9bd30b57796b4490d9f3eb4b59edea49fb327a3,"Enable Error Prone HidingField bug pattern again (#2390)

Bug which required disabling this bug pattern was fixed in 2.19.1 and
Error Prone dependency was updated to that version in commit
3c4b0721005dbc5e0d7515b95a321715d48b3291"
6e39d1f1d332a66ff5d90dd1c1780a4a3d4f6036,"Bump jackson-databind from 2.15.0 to 2.15.1 (#2391)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.15.0 to 2.15.1.
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
ed8ca46aa8e1250c7b13f536f50d03b78ba8c368,"Bump maven-source-plugin from 3.2.1 to 3.3.0 (#2392)

Bumps [maven-source-plugin](https://github.com/apache/maven-source-plugin) from 3.2.1 to 3.3.0.
- [Commits](https://github.com/apache/maven-source-plugin/compare/maven-source-plugin-3.2.1...maven-source-plugin-3.3.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-source-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
4c65a82871ec92e0550d8d313e10bbfb621d0f39,"Remove accidental invisible characters from Troubleshooting Guide (#2395)

Accidentally contained U+200C (Zero Width Non-Joiner) followed by U+200B (Zero Width Space)"
43396e45fd1f03e408e0e83b168a72a0f3e0b84e,"Add ProGuard / R8 integration tests & add default ProGuard rules (#2397)

* Add code shrinking tools integration test

* Keep no-args constructor of classes usable with JsonAdapter

* Add library ProGuard rules for Gson

They are automatically applied for all users of Gson, see
https://developer.android.com/build/shrink-code#configuration-files

* Skip japicmp-maven-plugin for shrinker-test

* Add more tests for JsonAdapter, add tests for generic classes

* Extend default constructor test

* Add Troubleshooting Guide entry for TypeToken"
a8a928ee51452c3f8925fe07d64603abca8bf3d8,"Bump guava-testlib from 31.1-jre to 32.0.0-jre (#2400)

Bumps [guava-testlib](https://github.com/google/guava) from 31.1-jre to 32.0.0-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava-testlib
  dependency-type: direct:development
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
d3e17587fe8dbf1c6afd1acbad4878f19ff64c02,"Bump guava from 31.1-jre to 32.0.0-jre (#2399)

Bumps [guava](https://github.com/google/guava) from 31.1-jre to 32.0.0-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava
  dependency-type: direct:production
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
481ac9b82cd5713f43018fafc16218d4045dc4c4,"Use non-`null` `FormattingStyle`; configure space after separator (#2345)

* Use non-`null` `FormattingStyle`; configure space after separator

* Improve Javadoc and tests

* Rename to plural separator*s*

* Add explicit tests for default formatting styles

---------

Co-authored-by: Éamonn McManus <emcmanus@google.com>"
6292eafcdfb2e3985e90a004a64195bc74edb92d,"Bump truth from 1.1.3 to 1.1.4 (#2404)

Bumps [truth](https://github.com/google/truth) from 1.1.3 to 1.1.4.
- [Release notes](https://github.com/google/truth/releases)
- [Commits](https://github.com/google/truth/commits/v1.1.4)

---
updated-dependencies:
- dependency-name: com.google.truth:truth
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
2d7cc2e9f4e12163d4405a601fa8e814a66c9725,"Bump jackson-databind from 2.15.1 to 2.15.2 (#2403)

Bumps [jackson-databind](https://github.com/FasterXML/jackson) from 2.15.1 to 2.15.2.
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
cf50a5aaf152a34b3fb8bfd34ed12a07f1b8ed2d,"Bump maven-release-plugin from 3.0.0 to 3.0.1 (#2409)

Bumps [maven-release-plugin](https://github.com/apache/maven-release) from 3.0.0 to 3.0.1.
- [Release notes](https://github.com/apache/maven-release/releases)
- [Commits](https://github.com/apache/maven-release/compare/maven-release-3.0.0...maven-release-3.0.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-release-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
144626ddd9e17fa18fcd2b3904ac8227cbbed8f6,"Bump maven-failsafe-plugin from 3.1.0 to 3.1.2 (#2412)

Bumps [maven-failsafe-plugin](https://github.com/apache/maven-surefire) from 3.1.0 to 3.1.2.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.1.0...surefire-3.1.2)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-failsafe-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
e7f85dff8a17928fd3f0451e59f76ee72764430c,"Bump maven-surefire-plugin from 3.1.0 to 3.1.2 (#2411)

Bumps [maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.1.0 to 3.1.2.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.1.0...surefire-3.1.2)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
a80bc24e04d0747314bffcc5779a1412c86f6468,Rename `master` to `main` everywhere. (#2410)
44217b9100461ebf61f643279b486764899c77d9,"Rename branch references in GitHub workflow to 'main' (#2418)

* Rename branch references in GitHub workflow to 'main'

* Revert accidental branch reference renaming"
621a6a2d9a45a71887346d3001cccdf70340b9ad,"Bump guava-testlib from 32.0.0-jre to 32.0.1-jre (#2416)

Bumps [guava-testlib](https://github.com/google/guava) from 32.0.0-jre to 32.0.1-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava-testlib
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
8c523b8d2c2efe22a670fc63e5369692342f0632,"Bump guava from 32.0.0-jre to 32.0.1-jre (#2415)

Bumps [guava](https://github.com/google/guava) from 32.0.0-jre to 32.0.1-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
fd8c8ac0821f13b3b7a76bab13b602812c9c614a,"Bump truth from 1.1.4 to 1.1.5 (#2424)

Bumps [truth](https://github.com/google/truth) from 1.1.4 to 1.1.5.
- [Release notes](https://github.com/google/truth/releases)
- [Commits](https://github.com/google/truth/compare/v1.1.4...v1.1.5)

---
updated-dependencies:
- dependency-name: com.google.truth:truth
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
5fa61b25b40571872d9e331c1bd1a9ef8c816e7b,"Bump maven-shade-plugin from 3.4.1 to 3.5.0 (#2423)

Bumps [maven-shade-plugin](https://github.com/apache/maven-shade-plugin) from 3.4.1 to 3.5.0.
- [Release notes](https://github.com/apache/maven-shade-plugin/releases)
- [Commits](https://github.com/apache/maven-shade-plugin/compare/maven-shade-plugin-3.4.1...maven-shade-plugin-3.5.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-shade-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Éamonn McManus <emcmanus@google.com>"
500ec501a753b33dc0ed78b1cf4cbc95473f4e41,"Bump error_prone_annotations from 2.19.1 to 2.20.0 (#2421)

Bumps [error_prone_annotations](https://github.com/google/error-prone) from 2.19.1 to 2.20.0.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.19.1...v2.20.0)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_annotations
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Éamonn McManus <emcmanus@google.com>"
9cf0f8d3022fdfcd480dcd7648b2e5209e775b52,Update to latest Error Prone and fix some newly-flagged problems. (#2426)
a589ef20087b4b0f1ec3048d3ceaef1eedccd09d,"Improve creation of `ParameterizedType` (#2375)

- Reject non-generic raw types for TypeToken.getParameterized
- Fix ParameterizedTypeImpl erroneously requiring owner type for types
  without owner"
6d9c3566b71900c54644a9f71ce028696ee5d4bd,Document minimum Android API level and add workflow to check compatibility (#2431)
ecb9f8c8adab5446225461b7f8aea16c79e2e104,"Adjust ProGuard default rules and shrinking tests (#2420)

* Adjust ProGuard default rules and shrinking tests

* Adjust comment

* Add shrinking test for class without no-args constructor; improve docs

* Improve Unsafe mention in Troubleshooting Guide

* Improve comment for `-if class *`"
3d33a8621f70c03269dbf8a15c18a2a1ba68f9f5,"Bump com.google.guava:guava from 32.0.1-jre to 32.1.1-jre (#2444)

Bumps [com.google.guava:guava](https://github.com/google/guava) from 32.0.1-jre to 32.1.1-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
79ae239a499d72c599f9b4d27166aad61086c3eb,"Bump com.google.guava:guava-testlib from 32.0.1-jre to 32.1.1-jre (#2443)

Bumps [com.google.guava:guava-testlib](https://github.com/google/guava) from 32.0.1-jre to 32.1.1-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava-testlib
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
a38b757bc4fddfd57ab762fbf192dd2b3fc6be22,"Support non-generic type for `TypeToken.getParameterized` for legacy reasons (#2447)

This partially restores the behavior before a589ef20087b4b0f1ec3048d3ceaef1eedccd09d,
except that back then for a non-generic type a bogus `TypeToken(ParameterizedType)`
was created, whereas now a `TypeToken(Class)` is created instead."
5a87d806550f8389fb26327bcf97751c6851d7c7,Fixed Typo in GsonBuilder.java (#2449)
5055b6246314e04f54f7d7e2c46b7d22786a9089,"Make date-formatting tests less fragile with regular expressions. (#2450)

* Make date-formatting tests less fragile with regular expressions.

This is not great. We should really ensure that formatted dates are the same
regardless of JDK version. There is code that attempts to do that but it is not
really effective. So for now we fudge around the differences by using regular
expressions to paper over the differences.

* Temporarily add test-debugging code.

* Another attempt at debugging a test failure.

* Fix pattern in assertion."
3d241ca0a6435cbf1fa1cdaed2af8480b99fecde,"Modification in test cases (#2454)

* Fixed Typo in GsonBuilder.java

* Suggestions on Test cases

* Modified test cases using assertThrows method (JUnit)

* Update gson/src/test/java/com/google/gson/JsonArrayAsListTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/GsonTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/JsonArrayAsListTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/JsonStreamParserTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/JsonStreamParserTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/JsonStreamParserTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/ToNumberPolicyTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/TypeAdapterTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/TypeAdapterTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/ToNumberPolicyTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/ToNumberPolicyTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

---------

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>"
b3dce2dc17086c72bd1f8ccf508874849f9631bb,"Strict mode for JSON parsing, contributed by @marten-voorberg. (#2437)

* Strict mode for JSON parsing (#2323)

* Feat #6: Add strict flag to Gson and GsonBuilder

* Test #2: Add failing tests for capitalized keywords

* Feat #2: JsonReader does not read (partially) capitalized keywords if strict mode is used

* Feat #3: Added implementation and tests for JSONReader not accepting specific escape sequence representing in strict mode

* Test #3: Simplify test cases by removing unnecessary array

* Feat #3: Improve error by including the illegal character

* Feat #5: JsonReader does not allow unespaced control flow characters in strict mode

* Test #5: Test unespaced control flow characters in strict mode

* Feat #4: Disallow espaced newline character in strict mode

* Test #4: Add tests for (dis)allowing newline character depensding on strictness

* Test #5: Test case for unescaped control char in non-strict mode

* Test #2: Simplify test cases

* Feat #13: Change leniency API to Strictness enum in JsonReader, Gson, and GsonBuilder

* Feat #15: Change JsonWriter API to also use Strictness

* Test #15: Test Strictness in JsonWriter API

* Doc #15: Add and update documentation for Strictness in JsonWriter API

* refactor #12: Fixed typos and empty catch brackets in tests

* refactor #12: Resolved importing wildcards, made some lines adhere to Google java style

* #5 Add test case for unescaped control characters

* Feat #5: add new lines to make JsonReader able to detect unescaped control characters (U+0000 through U+001F) and throw exceptions.

* Feat #5: add new lines to make JsonReader able to detect unescaped control characters (U+0000 through U+001F) and throw exceptions.

* Test #11: Added two tests for testing implementation of control character handling in strict mode and moved the implementation to nextQuotedValue

* Test #11: Added two tests for testing implementation of control character handling in strict mode and moved the implementation to nextQuotedValue

---------

Co-authored-by: LMC117 <2295699210@qq.com>
Co-authored-by: Marten Voorberg <martenvoorberg@gmail.com>

* Doc #17: Add and change javadoc of public methods

* Doc #17: Update JavaDoc in JsonReader and Strictness

* Doc #17: Update JavaDoc in Gson and GsonBuilder

* Test #34: Add tests for setting strictness through GsonBuilder

* Fix: Add Fix broken test

* Fix: Invalid JavaDoc in Gson.java

* Doc #17: update outdated javadoc

* #37: Resolve more PR feedback 

* Fix #37: Resolve various PR comments

* Fix #37: Resolve various PR comments

* Refactor #35: Refactor JsonReader#peekKeyword to reduce the amount of strictness checks (#39)

* Doc #40: Update JavaDoc based on PR feedback

* Doc #40: Update old RFC in GsonBuilder documentation

* Doc #40: Fix formatting error in JavaDoc

* Doc #40: Add tests for setting strictness and lenient to JsonReaderTest

* Test #43: Changed tests to make use of assertThrows

* test #43: Changed tests to make use of assertThrows as per feedback

* Test #43: Update JsonWriterTest#testStrictnessNull to use assertThrows

* Test #43: Update JsonWriterTest#testStrictnessNull to use assertThrows

* test #43: Resolve PR recommendations

* Test #43: Mini change to TC

* Test #43: Mini change to TC

---------

Co-authored-by: Marten Voorberg <martenvoorberg@gmail.com>

* doc #46: Resolved comments in main PR

* Feat #45: Change Gson.fromJson and Gson.toJson to be strict when the provided writer/reader is strict

* Fix #45: Small type

* Update gson/src/test/java/com/google/gson/stream/JsonReaderTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Fix #45: Resolve various comments by Marcono1234

* Update gson/src/main/java/com/google/gson/GsonBuilder.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Fix #45: Resolve various comments by Marcono1234

* Fix #45: Resolve various comments by eamonmcmanus

* Strictness mode follow-up

* Update Troubleshooting.md and Gson default lenient mode documentation

* Always use GSON strictness when set.

* Rename Strictness.DEFAULT to Strictness.LEGACY_STRICT

* Update JavaDoc with new strictness functionality

* Replace default with legacy strict for JsonReader javadoc

* Add JSONReader test cases for U2028 and U2029

* Refactor JSONReader#peekKeyWord() based on @eamonmcmanus's suggestion

* Deprecate setLenient in favor of setStrictness

---------

Co-authored-by: Carl Peterson <unknown>
Co-authored-by: Gustaf Johansson <gustajoh@kth.se>
Co-authored-by: gustajoh <58432871+gustajoh@users.noreply.github.com>
Co-authored-by: LMC117 <2295699210@qq.com>
Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Strictness follow-up (#2408)

* Strictness mode follow-up

- Remove mentions of `null` Gson strictness; this is an implementation detail
- Fix incorrect / outdated documentation
- Reduce links to RFC; if there is already a link to it in a previous sentence
  don't link to it again
- Extend and update tests
- Minor punctuation changes in documentation for consistency

* Deprecate `setLenient` methods

* `strictness2` fixes & improvements (#2456)

* Adjust ProGuard default rules and shrinking tests (#2420)

* Adjust ProGuard default rules and shrinking tests

* Adjust comment

* Add shrinking test for class without no-args constructor; improve docs

* Improve Unsafe mention in Troubleshooting Guide

* Improve comment for `-if class *`

* Bump com.google.guava:guava from 32.0.1-jre to 32.1.1-jre (#2444)

Bumps [com.google.guava:guava](https://github.com/google/guava) from 32.0.1-jre to 32.1.1-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

* Bump com.google.guava:guava-testlib from 32.0.1-jre to 32.1.1-jre (#2443)

Bumps [com.google.guava:guava-testlib](https://github.com/google/guava) from 32.0.1-jre to 32.1.1-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava-testlib
  dependency-type: direct:development
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>

* Support non-generic type for `TypeToken.getParameterized` for legacy reasons (#2447)

This partially restores the behavior before a589ef20087b4b0f1ec3048d3ceaef1eedccd09d,
except that back then for a non-generic type a bogus `TypeToken(ParameterizedType)`
was created, whereas now a `TypeToken(Class)` is created instead.

* Fixed Typo in GsonBuilder.java (#2449)

* Make date-formatting tests less fragile with regular expressions. (#2450)

* Make date-formatting tests less fragile with regular expressions.

This is not great. We should really ensure that formatted dates are the same
regardless of JDK version. There is code that attempts to do that but it is not
really effective. So for now we fudge around the differences by using regular
expressions to paper over the differences.

* Temporarily add test-debugging code.

* Another attempt at debugging a test failure.

* Fix pattern in assertion.

* Modification in test cases (#2454)

* Fixed Typo in GsonBuilder.java

* Suggestions on Test cases

* Modified test cases using assertThrows method (JUnit)

* Update gson/src/test/java/com/google/gson/JsonArrayAsListTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/GsonTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/JsonArrayAsListTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/JsonStreamParserTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/JsonStreamParserTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/JsonStreamParserTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/ToNumberPolicyTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/TypeAdapterTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/TypeAdapterTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/ToNumberPolicyTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/ToNumberPolicyTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

---------

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Minor follow-up changes

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: elevne <97422844+elevne@users.noreply.github.com>
Co-authored-by: Éamonn McManus <emcmanus@google.com>
Co-authored-by: Wonil <cwi5525@naver.com>

---------

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: Marten <martenvoorberg@gmail.com>
Co-authored-by: Gustaf Johansson <gustajoh@kth.se>
Co-authored-by: gustajoh <58432871+gustajoh@users.noreply.github.com>
Co-authored-by: LMC117 <2295699210@qq.com>
Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: elevne <97422844+elevne@users.noreply.github.com>
Co-authored-by: Wonil <cwi5525@naver.com>"
f72824e2e4d0b719331a040a945876145b7c5acc,"Improve documentation about default `JsonReader` and `JsonWriter` behavior (#2341)

* Improve documentation about default `JsonWriter` behavior

* Revert accidental formatting change

* Document default JsonReader configuration & improve doc"
83d44c0fa2d7a4b7e0ec4f840e6b0fc4b0f13289,"Bump com.android.tools:r8 from 8.0.40 to 8.1.56 (#2462)

Bumps com.android.tools:r8 from 8.0.40 to 8.1.56.

---
updated-dependencies:
- dependency-name: com.android.tools:r8
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
55de17b90a8b6b6d1d3a35cc5b9a74abf5ee9a98,"Bump com.google.guava:guava from 32.1.1-jre to 32.1.2-jre (#2461)

Bumps [com.google.guava:guava](https://github.com/google/guava) from 32.1.1-jre to 32.1.2-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
f07fa7f487ec80152f5e143b15ddbbabac889fa3,"Bump com.google.errorprone:error_prone_annotations from 2.20.0 to 2.21.1 (#2460)

Bumps [com.google.errorprone:error_prone_annotations](https://github.com/google/error-prone) from 2.20.0 to 2.21.1.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.20.0...v2.21.1)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_annotations
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
e0cbbcc52b1838b6c94c0414654815141a5b68e8,"Bump com.google.guava:guava-testlib from 32.1.1-jre to 32.1.2-jre (#2458)

Bumps [com.google.guava:guava-testlib](https://github.com/google/guava) from 32.1.1-jre to 32.1.2-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava-testlib
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
cdbbee4e723c39c1df302a805f3bde8d4fe12bd1,"Bump com.google.errorprone:error_prone_core from 2.20.0 to 2.21.1 (#2463)

Suppress a couple of new Error Prone warnings."
c5c1fbf9a12def0b3b5e6c6e84c36b185dfb4628,"Access `RecordComponent` via `Class.forName`. (#2465)

This should mean that GraalVM will understand the reflective lookup of its methods.
See [documentation](https://www.graalvm.org/latest/reference-manual/native-image/dynamic-features/Reflection/#automatic-detection)."
26b5a668b3cb0f7477f7a3e12d21945ebff8d6f0,"Add integration test for GraalVM Native Image (#2466)

* Add integration test for GraalVM Native Image

* Enable 'quickBuild' mode

Seems to improve build speed, and at least for the previous issue with
`RecordComponent` still causes test failures (as expected) if the fix
is reverted."
77b566ced0127baf8d9ebf071b50c0f36e296538,"Fix graal-native-image-test module causing failure for 'Check API compatibility' (#2467)

The 'Check API compatibility' workflow runs `mvn install` to install the
previous version to the local Maven repository to compare it afterwards.
However this fails for the graal-native-image-test module because it does
not produce a JAR.

Therefore skip execution of the maven-install-plugin for that module."
97d33f4a499400df98fcfde69dfdf3bb8a8cecf3,"Bump org.codehaus.plexus:plexus-utils from 3.5.1 to 4.0.0 (#2468)

Bumps [org.codehaus.plexus:plexus-utils](https://github.com/codehaus-plexus/plexus-utils) from 3.5.1 to 4.0.0.
- [Release notes](https://github.com/codehaus-plexus/plexus-utils/releases)
- [Commits](https://github.com/codehaus-plexus/plexus-utils/compare/plexus-utils-3.5.1...plexus-utils-4.0.0)

---
updated-dependencies:
- dependency-name: org.codehaus.plexus:plexus-utils
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
db4a58a417976419de9ebe0cb2bb44ce528f9860,"Revert ""Bump org.codehaus.plexus:plexus-utils from 3.5.1 to 4.0.0 (#2468)"" (#2469)

This reverts commit 97d33f4a499400df98fcfde69dfdf3bb8a8cecf3."
7b8ce2b9f7faaa22893bb77140563e3c41afb4ab,"Prevent `TypeToken` from capturing type variables (#2376)

* Prevent `TypeToken` from capturing type variables

* Use hyphen for term ""type-safe""

Not completely sure if that is grammatically correct, but it might make the
text a bit easier to understand.

* Update Troubleshooting Guide URLs in tests from 'master' to 'main'

* Rename system property

* Simplify system property check"
1e7625b963d2e4447a4aa46a2fadc6d0e3a3aba7,fix: ParseBenchmark json property typo (#2473)
7b5629bcfca156051253db7d6f6510db5862a967,"Update ProGuard default shrinking rules (#2448)

* Update ProGuard default shrinking rules to correctly deal with classes without a no-args constructor

* Update test after changing default shrinking rules

* Adjust shrinker tests

* Update rules

* Addressed review comments

* Addressed more review comments

* Addressed more review comments

---------

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>"
392cc65ff3004689e03b219d9b00979072f9c9d0,"Changes to ensure if no object is opened user won't be able to write property name (#2475)

* Changes to ensure if no object is opened user won't be able to add prop in the object

* review points

* spelling correction"
393db094dd089ea463bc1a215bd7971fd5feab42,Add test for unused class to shrinker-test (#2455)
7ee5ad6cd1640d957f3a73d89a271ee2ef9c7956,"Fix `Gson.getDelegateAdapter` not working properly for `JsonAdapter` (#2435)

* Fix `Gson.getDelegateAdapter` not working properly for `JsonAdapter`

* Address review feedback and add comments regarding thread-safety

* Revert InstanceCreator instance validation

* Disallow `null` as `skipPast`

* Avoid `equals` usage in `getDelegateAdapter` & minor other changes

Previously `getDelegateAdapter` called `factories.contains(skipPast)`,
but unlike the other comparisons which check for reference equality,
that would have used the `equals` method.
This could lead to spurious ""GSON cannot serialize ..."" exceptions
if two factory instances compared equal, but the one provided as
`skipPast` had not been registered yet."
88fd6d13905b520531f79cd3caf9fff30f3617e9,"Improve `JsonAdapter` documentation and tests (#2442)

* Document how `JsonAdapter` creates adapter instances & add tests

* Extend `JsonAdapter.nullSafe()` documentation

* Improve test for JsonAdapter factory returning null

Existing test `JsonAdapterNullSafeTest` had misleading comments; while it
did in the end detect if null had not been handled correctly, that only
worked because the field `JsonAdapterFactory.recursiveCall` is static and
one test method therefore affected the state of the other test method.
If the test methods were run separately in different test runs, they would
not have detected if null was handled correctly, because the factory would
not have returned null.

* Extend JsonAdapter nullSafe test

* Extend test"
2432cf7afa8a9b4bcea67ed8d32110a7845f482b,"Bump org.apache.maven.plugins:maven-enforcer-plugin from 3.3.0 to 3.4.0 (#2477)

Bumps [org.apache.maven.plugins:maven-enforcer-plugin](https://github.com/apache/maven-enforcer) from 3.3.0 to 3.4.0.
- [Release notes](https://github.com/apache/maven-enforcer/releases)
- [Commits](https://github.com/apache/maven-enforcer/compare/enforcer-3.3.0...enforcer-3.4.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-enforcer-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
ddc76ea4cc7dc8ccb0930ddfee668e2f53a4426c,"Bump org.graalvm.buildtools:native-maven-plugin from 0.9.24 to 0.9.25 (#2482)

Bumps [org.graalvm.buildtools:native-maven-plugin](https://github.com/graalvm/native-build-tools) from 0.9.24 to 0.9.25.
- [Release notes](https://github.com/graalvm/native-build-tools/releases)
- [Commits](https://github.com/graalvm/native-build-tools/commits)

---
updated-dependencies:
- dependency-name: org.graalvm.buildtools:native-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
70bda4b9c9eb8d0b567f8715a67dbada00b02216,"Throw exception when calling `JsonWriter.name` outside JSON object (#2476)

Previous fix in 392cc65ff3004689e03b219d9b00979072f9c9d0 only covered writing
name as top level value, but not when trying to write name inside JSON array.

Removed `stackSize == 0` check from `JsonWriter.name` because that is done
already by `peek()` call."
4654f5906c140bc6777f205f3d67e76d01909d37,"Bump com.github.siom79.japicmp:japicmp-maven-plugin (#2484)

Bumps [com.github.siom79.japicmp:japicmp-maven-plugin](https://github.com/siom79/japicmp) from 0.17.2 to 0.17.3.
- [Release notes](https://github.com/siom79/japicmp/releases)
- [Changelog](https://github.com/siom79/japicmp/blob/master/release.py)
- [Commits](https://github.com/siom79/japicmp/compare/japicmp-base-0.17.2...japicmp-base-0.17.3)

---
updated-dependencies:
- dependency-name: com.github.siom79.japicmp:japicmp-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
ad5cd31498a7d6835957b7fe3a9ece4b12753867,"Add shrinker-test examples with never-referenced constructors (#2478)

* Add shrinker-test examples with never-referenced constructors

R8 can do some optimizations that assume values of types whose
constructors are never referenced are `null`. (A bit confused why
the rules here are sufficient to avoid that optimization in the
case of a class whose sole constructor has arguments and is
unreferenced, since the keep rule only refers to `<init>()` instead
of `<init>(...)`. Does R8 have special behavior for `<init>()` where
attempting to keep that makes it assume a class is constructable even
if it doesn't have a no-args constructor?)

Also rename some test classes/names to refer to `NoArgs` instead of
`Default` constructors. The examples here care about whether a
no-argument constructor is present. While a no-argument
constructor (explicitly defined or not) is used by default in some
circumstances, the Java documentation consistently uses ""default
constructor"" to refer only to constructors whose implementation is
implicitly provided by the complier (all default constructors are
no-argument constructors, but not vice versa).

* Update shrinker-test/src/main/java/com/example/ClassWithNoArgsConstructor.java

Accept review suggestion

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update shrinker-test/src/main/java/com/example/NoSerializedNameMain.java

Accept review suggestion

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Further adjust test class/method names for consistency

* Update shrinker-test/src/main/java/com/example/NoSerializedNameMain.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

---------

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>"
27d1a66acfdf8f3afa75f84c29422823e9aed647,"Bump org.graalvm.buildtools:native-maven-plugin from 0.9.25 to 0.9.26 (#2486)

Bumps [org.graalvm.buildtools:native-maven-plugin](https://github.com/graalvm/native-build-tools) from 0.9.25 to 0.9.26.
- [Release notes](https://github.com/graalvm/native-build-tools/releases)
- [Commits](https://github.com/graalvm/native-build-tools/compare/0.9.25...0.9.26)

---
updated-dependencies:
- dependency-name: org.graalvm.buildtools:native-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
dda176cf806484f4dd7db856ab7f84ae44315e7b,"Bump org.apache.maven.plugins:maven-enforcer-plugin from 3.4.0 to 3.4.1 (#2487)

Bumps [org.apache.maven.plugins:maven-enforcer-plugin](https://github.com/apache/maven-enforcer) from 3.4.0 to 3.4.1.
- [Release notes](https://github.com/apache/maven-enforcer/releases)
- [Commits](https://github.com/apache/maven-enforcer/compare/enforcer-3.4.0...enforcer-3.4.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-enforcer-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
40bc86ef1766d72e0ddb22a194c677459d511ed8,"Bump org.apache.maven.plugins:maven-javadoc-plugin from 3.5.0 to 3.6.0 (#2490)

Bumps [org.apache.maven.plugins:maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.5.0 to 3.6.0.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-3.5.0...maven-javadoc-plugin-3.6.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-javadoc-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
78e4bdaeded46f0c48fa0d7827198a77eebaa7a0,"Bump org.graalvm.buildtools:native-maven-plugin from 0.9.26 to 0.9.27 (#2489)

Bumps [org.graalvm.buildtools:native-maven-plugin](https://github.com/graalvm/native-build-tools) from 0.9.26 to 0.9.27.
- [Release notes](https://github.com/graalvm/native-build-tools/releases)
- [Commits](https://github.com/graalvm/native-build-tools/commits)

---
updated-dependencies:
- dependency-name: org.graalvm.buildtools:native-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
e93fda9f17852e8bf029ac052175b40f6555481f,"Fix typos and improve Gson Design Document formatting (#2491)

* Fix typos and grammar issues

Most of them were found by IntelliJ

* Improve formatting and fix typos in Gson Design Document"
edfaf0c387cd0dc42403f8994c3ef4722d2898a9,"Add clarifying parentheses to a ternary expression. (#2496)

The latest Error Prone version issues a warning without the parentheses.
Since we build with `-Werror`, that breaks the build."
6262b1fe1b4605db8e17dea18dc90bc2f0d8f7b7,"Bump com.google.errorprone:error_prone_core from 2.21.1 to 2.22.0 (#2492)

Bumps [com.google.errorprone:error_prone_core](https://github.com/google/error-prone) from 2.21.1 to 2.22.0.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.21.1...v2.22.0)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_core
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
8756189a14e8bfb3ca47a75227a9f2f5e215cd5d,"Bump com.google.errorprone:error_prone_annotations from 2.21.1 to 2.22.0 (#2493)

Bumps [com.google.errorprone:error_prone_annotations](https://github.com/google/error-prone) from 2.21.1 to 2.22.0.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.21.1...v2.22.0)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_annotations
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
ff401f1545e71672e7090cbeab60e776cda0ac4d,"Remove obsolete Error Prone warning suppressions (#2497)

The latest Error Prone version fixed a bug which makes these
suppressions obsolete."
08c514c0f6ffa052437da888da6434e56faad93c,"Bump org.apache.maven.plugins:maven-shade-plugin from 3.5.0 to 3.5.1 (#2500)

Bumps [org.apache.maven.plugins:maven-shade-plugin](https://github.com/apache/maven-shade-plugin) from 3.5.0 to 3.5.1.
- [Release notes](https://github.com/apache/maven-shade-plugin/releases)
- [Commits](https://github.com/apache/maven-shade-plugin/compare/maven-shade-plugin-3.5.0...maven-shade-plugin-3.5.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-shade-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
98077053f6a9b29d9bfcd023064e1146f0172aa2,"Bump com.github.siom79.japicmp:japicmp-maven-plugin (#2499)

Bumps [com.github.siom79.japicmp:japicmp-maven-plugin](https://github.com/siom79/japicmp) from 0.17.3 to 0.18.0.
- [Release notes](https://github.com/siom79/japicmp/releases)
- [Changelog](https://github.com/siom79/japicmp/blob/master/release.py)
- [Commits](https://github.com/siom79/japicmp/compare/japicmp-base-0.17.3...japicmp-base-0.18.0)

---
updated-dependencies:
- dependency-name: com.github.siom79.japicmp:japicmp-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
45acc4db428217a890a27ef00165a78232fc55d3,"Suppress serialization warnings. (#2502)

Recent versions of javac emit a warning if a serializable class has
a non-transient instance field with a declared type that does not
inherit `Serializable`. In this context, we know that the actual
values will always be serializable."
e7cf5c458374e5fc69dbdce6de5cb2c881521135,"Only create one `BoundField` instance per field in `ReflectiveTypeAdapterFactory` (#2440)

* Only create one BoundField instance per field in ReflectiveTypeAdapterFactory

Instead of creating a BoundField for every possible name of a field (for
SerializedName usage) and then storing for that BoundField whether it is
serialized or deserialized, instead only create one BoundField and then have
a separate Map<String, BoundField> for deserialized fields, and a separate
List<BoundField> for serialized fields.

* Fix indentation"
4dfae77af3d543bea2782f85a154cc070290f086,"Bump com.github.siom79.japicmp:japicmp-maven-plugin (#2504)

Bumps [com.github.siom79.japicmp:japicmp-maven-plugin](https://github.com/siom79/japicmp) from 0.18.0 to 0.18.1.
- [Release notes](https://github.com/siom79/japicmp/releases)
- [Changelog](https://github.com/siom79/japicmp/blob/master/release.py)
- [Commits](https://github.com/siom79/japicmp/compare/japicmp-base-0.18.0...japicmp-base-0.18.1)

---
updated-dependencies:
- dependency-name: com.github.siom79.japicmp:japicmp-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
0109f451299e7780a334d1844548d3a3346a9b39,"issue#2436: Throw exception when registering adapter for Object or JsonElement (#2479)

* Code changes and tests for #2436 to throw exception when trying to register adapter for Object or JsonElement

* #2436 - Updates to User guide & comments to indicate exception cases and fix for 7 test cases of Parameterized Type

* #2436 - Fixes as per the review comments.

* #2436 - Refactored as per latest review comments + throwing error message.

* #2436 - added a clarifying comment in a positive test case.

* #2436 - formatting and minor changes as per review.

* Update gson/src/main/java/com/google/gson/GsonBuilder.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/GsonBuilderTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

* Update gson/src/test/java/com/google/gson/GsonBuilderTest.java

Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>

---------

Co-authored-by: Sachin Patil <sachin.patil2@capitalone.com>
Co-authored-by: Marcono1234 <Marcono1234@users.noreply.github.com>"
df01e943e524c1b569930b8b4cf50c873513698c,"Improve formatting (#2505)

* Improve formatting

* Move `&&` to start of line"
1bba75c86a1e546078ba010cd819c72639ceae7f,"Bump com.google.guava:guava from 32.1.2-jre to 32.1.3-jre (#2508)

Bumps [com.google.guava:guava](https://github.com/google/guava) from 32.1.2-jre to 32.1.3-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
6f79800d2684b12d4dd636c758ee27228bfea616,"Bump com.google.guava:guava-testlib from 32.1.2-jre to 32.1.3-jre (#2509)

Bumps [com.google.guava:guava-testlib](https://github.com/google/guava) from 32.1.2-jre to 32.1.3-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava-testlib
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
ce7a6101b1767e2c07de89c052a68034503dac53,"Bump com.fasterxml.jackson.core:jackson-databind from 2.15.2 to 2.15.3 (#2511)

Bumps [com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson) from 2.15.2 to 2.15.3.
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
bd361f6d9b863726a17241eed32e0a4db246904f,"Remove obsolete Native Maven Plugin plugin dependency (#2512)

Plugin had been updated to a newer version without this bug in the meantime."
7b5b8cfb33f163aac1fd652e503784003e16d888,"Bump com.github.siom79.japicmp:japicmp-maven-plugin (#2515)

Bumps [com.github.siom79.japicmp:japicmp-maven-plugin](https://github.com/siom79/japicmp) from 0.18.1 to 0.18.2.
- [Release notes](https://github.com/siom79/japicmp/releases)
- [Changelog](https://github.com/siom79/japicmp/blob/master/release.py)
- [Commits](https://github.com/siom79/japicmp/compare/japicmp-base-0.18.1...japicmp-base-0.18.2)

---
updated-dependencies:
- dependency-name: com.github.siom79.japicmp:japicmp-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
e915b2e44c571945b209455f9e03158b11122ec1,"Bump com.google.errorprone:error_prone_annotations from 2.22.0 to 2.23.0 (#2514)

Bumps [com.google.errorprone:error_prone_annotations](https://github.com/google/error-prone) from 2.22.0 to 2.23.0.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.22.0...v2.23.0)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_annotations
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
2de2d5648429457f4a1451264698d828fcf37f19,"Bump com.google.errorprone:error_prone_core from 2.22.0 to 2.23.0 (#2513)

Bumps [com.google.errorprone:error_prone_core](https://github.com/google/error-prone) from 2.22.0 to 2.23.0.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.22.0...v2.23.0)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_core
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
802476adc1f6c55472654786a243a5c9e97cf3e1,"Bump org.graalvm.buildtools:native-maven-plugin from 0.9.27 to 0.9.28 (#2517)

Bumps [org.graalvm.buildtools:native-maven-plugin](https://github.com/graalvm/native-build-tools) from 0.9.27 to 0.9.28.
- [Release notes](https://github.com/graalvm/native-build-tools/releases)
- [Commits](https://github.com/graalvm/native-build-tools/compare/0.9.27...0.9.28)

---
updated-dependencies:
- dependency-name: org.graalvm.buildtools:native-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
6a9d240f786bfe6602ae5dafd6da23b4fb3043fc,"Add limits when deserializing `BigDecimal` and `BigInteger` (#2510)

* Add limits when deserializing `BigDecimal` and `BigInteger`

* Use assertThrows

* Don't check number limits in JsonReader"
9f1c0f3d4f7314662e5aaa0b1adc8344aa347f89,"Bump org.apache.maven.plugins:maven-failsafe-plugin from 3.1.2 to 3.2.1 (#2519)

Bumps [org.apache.maven.plugins:maven-failsafe-plugin](https://github.com/apache/maven-surefire) from 3.1.2 to 3.2.1.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.1.2...surefire-3.2.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-failsafe-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
e685705b2bf3ae174958612a185bd231c0e0c5d9,"Bump org.apache.maven.plugins:maven-surefire-plugin from 3.1.2 to 3.2.1 (#2518)

Bumps [org.apache.maven.plugins:maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.1.2 to 3.2.1.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.1.2...surefire-3.2.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
41e97e3f6a570eb0f9926ab75df84c5a4f47ec27,"Bump org.junit.jupiter:junit-jupiter from 5.10.0 to 5.10.1 (#2528)

Bumps [org.junit.jupiter:junit-jupiter](https://github.com/junit-team/junit5) from 5.10.0 to 5.10.1.
- [Release notes](https://github.com/junit-team/junit5/releases)
- [Commits](https://github.com/junit-team/junit5/compare/r5.10.0...r5.10.1)

---
updated-dependencies:
- dependency-name: org.junit.jupiter:junit-jupiter
  dependency-type: direct:development
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
d9efc1596d374c3b228fd42705d98a9d6b6eb8cd,"Bump org.moditect:moditect-maven-plugin from 1.0.0.Final to 1.1.0 (#2526)

Bumps [org.moditect:moditect-maven-plugin](https://github.com/moditect/moditect) from 1.0.0.Final to 1.1.0.
- [Release notes](https://github.com/moditect/moditect/releases)
- [Commits](https://github.com/moditect/moditect/compare/1.0.0.Final...1.1.0)

---
updated-dependencies:
- dependency-name: org.moditect:moditect-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
61b9806278571136fc3e3757662255c0e5d4c061,"Bump com.github.siom79.japicmp:japicmp-maven-plugin (#2525)

Bumps [com.github.siom79.japicmp:japicmp-maven-plugin](https://github.com/siom79/japicmp) from 0.18.2 to 0.18.3.
- [Release notes](https://github.com/siom79/japicmp/releases)
- [Changelog](https://github.com/siom79/japicmp/blob/master/release.py)
- [Commits](https://github.com/siom79/japicmp/compare/japicmp-base-0.18.2...japicmp-base-0.18.3)

---
updated-dependencies:
- dependency-name: com.github.siom79.japicmp:japicmp-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Éamonn McManus <emcmanus@google.com>"
cb6643f148d553404754a785fda22d36531f178f,"Bump org.codehaus.mojo:templating-maven-plugin from 1.0.0 to 3.0.0 (#2527)

Bumps [org.codehaus.mojo:templating-maven-plugin](https://github.com/mojohaus/templating-maven-plugin) from 1.0.0 to 3.0.0.
- [Release notes](https://github.com/mojohaus/templating-maven-plugin/releases)
- [Commits](https://github.com/mojohaus/templating-maven-plugin/compare/templating-maven-plugin-1.0.0...3.0.0)

---
updated-dependencies:
- dependency-name: org.codehaus.mojo:templating-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Éamonn McManus <emcmanus@google.com>"
2c94c757a6a9426cc2fe47bc1c63f69e7c73b7b4,"Formats codebase (#2531)

* Formats `.java` files

* Formats `.md` files"
5bfa7fc5acdde666571006e27bebfeb75444308b,"Restore hard line breaks in `README.md`. (#2532)

They were previously using the terrible convention of two spaces at the
end of a line signaling a hard break. The change here uses the
alternative syntax of a final backslash, which can actually be seen."
2c8bdd27c4245c895b1bac1a9146bb1e2edf8f44,"Bump org.apache.maven.plugins:maven-javadoc-plugin from 3.6.0 to 3.6.2 (#2535)

Bumps [org.apache.maven.plugins:maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.6.0 to 3.6.2.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-3.6.0...maven-javadoc-plugin-3.6.2)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-javadoc-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
d5952fe56590904e8015dba53c0d7032810fe5c2,"Bump org.apache.maven.plugins:maven-failsafe-plugin from 3.2.1 to 3.2.2 (#2534)

Bumps [org.apache.maven.plugins:maven-failsafe-plugin](https://github.com/apache/maven-surefire) from 3.2.1 to 3.2.2.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.2.1...surefire-3.2.2)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-failsafe-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Éamonn McManus <emcmanus@google.com>"
ad7b6a85d6f74115f988f3f1e922f273c6260bc9,"Bump org.apache.maven.plugins:maven-surefire-plugin from 3.2.1 to 3.2.2 (#2533)

Bumps [org.apache.maven.plugins:maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.2.1 to 3.2.2.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.2.1...surefire-3.2.2)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Co-authored-by: Éamonn McManus <emcmanus@google.com>"
c2a0e4634a2100494159add78db2ee06f5eb9be6,Updates the line separator from `CRLF` to `LF` (#2536)
d58e2c93825a3a589d74ead0ce19d976b1065b5e,"Add `spotless` plugin (#2537)

* Adds the `spotless` plugin

* Excludes `Java17` files

Excludes:
- Java17RecordTest.java
- Java17RecordReflectionTest.java

* Fixes formatting in `pom.xml`"
c7c645db2f73e5e392d117c391437ff15815f057,"Formatting follow-up (#2540)

* Formatting follow-up

- Adds formatting commits to .git-blame-ignore-revs so that they don't
  distract during Git blame
- Restores hard line breaks in Troubleshooting.md using `\` instead of
  trailing spaces
- Changes formatting of some string literals and comments
- Fixes accidental Javadoc and comment issues introduced by manual changes
  of formatting commit
- Fixes license header in $Gson$Types.java erroneously being a Javadoc
  comment and being reformatted
- Slightly changes `JsonReader` `getPath` and `getPreviousPath` documentation
  to help Javadoc detect first sentence as summary

* Remove `spotless:off` markers

* Add empty line before comment

* Check format for .github YAML files"
ed9f53f285ece9afbb1c20cb75c3257b3468080b,"Bump com.fasterxml.jackson.core:jackson-databind from 2.15.3 to 2.16.0 (#2541)

Bumps [com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson) from 2.15.3 to 2.16.0.
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
bf572581b9156002ee98866620279d92ba8dc509,"Bump org.codehaus.mojo:exec-maven-plugin from 3.1.0 to 3.1.1 (#2542)

Bumps [org.codehaus.mojo:exec-maven-plugin](https://github.com/mojohaus/exec-maven-plugin) from 3.1.0 to 3.1.1.
- [Release notes](https://github.com/mojohaus/exec-maven-plugin/releases)
- [Commits](https://github.com/mojohaus/exec-maven-plugin/compare/exec-maven-plugin-3.1.0...3.1.1)

---
updated-dependencies:
- dependency-name: org.codehaus.mojo:exec-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
335ff0f9ae2ed71714a937513d4e6aba1d4318a4,"validating the date format, add test case, since NumberFormatExceptio… (#2538)

* validating the date format, add test case, since NumberFormatException extends IllegalArgumentException, it is only necessary to write IllegalArgumentException.

* Apply code formatting with Spotless

---------

Co-authored-by: Carpe-Wang <wangcarpe@126.com>"
b7c3e1d0b8bc9b9e0270cdaf3209cc3eeefe392f,"Make Maven build reproducible (#2543)

However, it might still be necessary to use the same OS and JDK version
to actually be able to create identical artifacts.

This commit also formats the `pom.xml` files in the way the Maven Release
Plugin would."
66847264765180c849f945ca13704aa0eae79c58,"Validate `GsonBuilder.setDateFormat` style arguments & extend tests (#2545)

`DateFormat` validates these arguments as well, but it is currently not
documented, see https://bugs.openjdk.org/browse/JDK-8319628.

Also moves the other tests for `setDateFormat(String)` from
DefaultTypeAdaptersTest to GsonBuilderTest."
08174e201980698a89f5f5996e10617d89ff09e1,"Perform minor code clean-up (#2544)

* Perform minor code clean-up

Notable changes:
- Replace most usages of `<code>` with `{@code ...}` in Javadoc
- Add proper summary sentence to `GsonBuilder.enableComplexMapKeySerialization`
- Extend documentation for `GsonBuilder.setDateFormat` methods
- Fix `TypeToken.isAssignableFrom(Type)` throwing AssertionError in some cases
  Maybe the method should not throw an exception in the first place, but it
  might not matter much since it is deprecated already anyway.
- Remove outdated `throws NumberFormatException` from internal
  `JsonReader.nextQuotedValue`; the behavior had been changed by
  85ebaf7c3553a5d5c058fd6067824a7c5258d07f
- Fix incorrect documentation on JsonScope fields
- Fix unit tests having 'expected' and 'actual' switched
- Use dedicated Truth methods instead of `isTrue()` / `isFalse()`
- Use common helper methods in JsonWriterTest to avoid duplication

* Implement `toString()` for ReflectionAccessFilter constants

* Address most of the review comments

* Add comment about `source.scm.tag=HEAD` warning

Actually it looks like the warning is not actually caused by usage of
`HEAD` as value, but rather because the project has a snapshot version
during development (which is expected though), see
https://github.com/apache/maven-artifact-plugin/blob/maven-artifact-plugin-3.5.0/src/main/java/org/apache/maven/plugins/artifact/buildinfo/BuildInfoWriter.java#L140

But this is not a problem either since during release a non-snapshot
version is used."
ea4ffde76ce780bcfa15f22d9296ee869bdc33bf,"Remove `DateTypeAdapter` to avoid code duplication (#2546)

The same functionality exists in `DefaultDateTypeAdapter` (with some slight
overhead), and there is currently code duplication between these classes."
3b1b361be1202a73b4fe4808c4553e735857e825,"Bump com.android.tools:r8 from 8.1.56 to 8.1.72 (#2553)

Bumps com.android.tools:r8 from 8.1.56 to 8.1.72.

---
updated-dependencies:
- dependency-name: com.android.tools:r8
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
6f1a18af529b7d2394a76ee4ee974a146314fcf3,"Enforce that JDK <= 17 is used for building (#2551)

Using JDK 21 currently causes multiple issues, some of which are not easy
to fix at the moment (such as target version 7 not being supported anymore)."
4197bb6545954f411fb61250ea784b3cad2fa088,"Add CI build using JDK 21 (#2552)

* Add CI build using JDK 21

This is mainly to make sure that besides the known JDK 21 build
incompatibilities Gson can be built and run using JDK 21.

* Update ProGuard

* Update Protobuf

3.25.1 is actually newer than 4.0.0-rc-2"
fc748cd0db43e705d020d3396c7f63536e1225c3,"Reformat the `GsonBuildConfig.java` template. (#2558)

Otherwise the spotless-maven-plugin checker doesn't like the code
generated from it."
9743d429ac8e6656369d03665f9fc748773e3d38,"Disable Spotless format checking for some generated files. (#2559)

Files generated by the protobuf compiler are not going to conform to the
expected format. It's not useful to check them."
b17b1a0e98dcaf4b61823e1f0c29dda44c0ea3d5,"Bump com.diffplug.spotless:spotless-maven-plugin from 2.40.0 to 2.41.0 (#2557)

Bumps [com.diffplug.spotless:spotless-maven-plugin](https://github.com/diffplug/spotless) from 2.40.0 to 2.41.0.
- [Changelog](https://github.com/diffplug/spotless/blob/main/CHANGES.md)
- [Commits](https://github.com/diffplug/spotless/compare/lib/2.40.0...lib/2.41.0)

---
updated-dependencies:
- dependency-name: com.diffplug.spotless:spotless-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
48a534496b7b948da2bc1e112c38b733f788e7e5,"Bump com.guardsquare:proguard-core from 9.1.0 to 9.1.1 (#2560)

Bumps [com.guardsquare:proguard-core](https://github.com/Guardsquare/proguard-core) from 9.1.0 to 9.1.1.
- [Release notes](https://github.com/Guardsquare/proguard-core/releases)
- [Commits](https://github.com/Guardsquare/proguard-core/compare/v9.1.0...v9.1.1)

---
updated-dependencies:
- dependency-name: com.guardsquare:proguard-core
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
e549b882c1ce5002b5533070690fa0c72eb12894,"Bump org.apache.maven.plugins:maven-javadoc-plugin from 3.6.2 to 3.6.3 (#2562)

Bumps [org.apache.maven.plugins:maven-javadoc-plugin](https://github.com/apache/maven-javadoc-plugin) from 3.6.2 to 3.6.3.
- [Release notes](https://github.com/apache/maven-javadoc-plugin/releases)
- [Commits](https://github.com/apache/maven-javadoc-plugin/compare/maven-javadoc-plugin-3.6.2...maven-javadoc-plugin-3.6.3)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-javadoc-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
5471932375be4bb0c27a8a1d38f9f4566d6da7db,"Bump com.diffplug.spotless:spotless-maven-plugin from 2.41.0 to 2.41.1 (#2566)

Bumps [com.diffplug.spotless:spotless-maven-plugin](https://github.com/diffplug/spotless) from 2.41.0 to 2.41.1.
- [Changelog](https://github.com/diffplug/spotless/blob/main/CHANGES.md)
- [Commits](https://github.com/diffplug/spotless/compare/lib/2.41.0...maven/2.41.1)

---
updated-dependencies:
- dependency-name: com.diffplug.spotless:spotless-maven-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
58d1a9f0eb396ff64a622532e2ba5c5c726165e6,"Fix DateFormat time zone is not restored and add Test. (#2549)

* Fix DateFormat time zone is not restored and add Test.

* delete the test and make sure mvn clean test -X can be SUCCESS

* delete the test and make sure mvn clean test -X can be SUCCESS

* add test

* restore the DateFormat time zone in SqlDateTypeAdapter and SqlTimeTypeAdapter

* Adjust the code according to the code review feedback.

* Adjust the code according to the code review feedback.

* Adjust the code according to the code review feedback.

* Adjust the Test

* fix Werror error

* Adjust the DefaultDateTypeAdapterTest according to the code review feedback.

---------

Co-authored-by: Carpe-Wang <wangcarpe@126.com>"
3a464eea925f8c0979205afb0e0c7444bacf8706,"Remove a Spotless exclusion for `target` files. (#2567)

This was needed because of a Spotless bug which has now been fixed."
e69bb5f22b4b52471e0dcfe8b747ed3ece590304,"Bump com.android.tools:r8 from 8.1.72 to 8.2.33 (#2569)

Bumps com.android.tools:r8 from 8.1.72 to 8.2.33.

---
updated-dependencies:
- dependency-name: com.android.tools:r8
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
b5bc7b903ad1d576a7593507c75504fbe38b3470,"Run shrinker-test for JDK 21 CI build (#2570)

The latest R8 version seems to support JDK 21 now."
ddab658a825a47affee6d7581b36333caaca58c3,"Bump org.apache.maven.plugins:maven-failsafe-plugin from 3.2.2 to 3.2.3

Bumps [org.apache.maven.plugins:maven-failsafe-plugin](https://github.com/apache/maven-surefire) from 3.2.2 to 3.2.3.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.2.2...surefire-3.2.3)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-failsafe-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>"
09f9d0a78a990d4ae97585f6c23db641236ae651,"Bump org.apache.maven.plugins:maven-surefire-plugin from 3.2.2 to 3.2.3

Bumps [org.apache.maven.plugins:maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.2.2 to 3.2.3.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.2.2...surefire-3.2.3)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>"
885d46736ec502fa9e04c5b39fa78a53c8ef5176,"Bump org.apache.maven.plugins:maven-compiler-plugin

Bumps [org.apache.maven.plugins:maven-compiler-plugin](https://github.com/apache/maven-compiler-plugin) from 3.11.0 to 3.12.0.
- [Release notes](https://github.com/apache/maven-compiler-plugin/releases)
- [Commits](https://github.com/apache/maven-compiler-plugin/compare/maven-compiler-plugin-3.11.0...maven-compiler-plugin-3.12.0)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-compiler-plugin
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>"
f952ae042ce9052b6d831d6c5026c67bde5a79ae,"Bump com.google.guava:guava-testlib from 32.1.3-jre to 33.0.0-jre

Bumps [com.google.guava:guava-testlib](https://github.com/google/guava) from 32.1.3-jre to 33.0.0-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava-testlib
  dependency-type: direct:development
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>"
c645db5540ad05573013b97882370c451560f7a7,"Bump com.google.guava:guava from 32.1.3-jre to 33.0.0-jre

Bumps [com.google.guava:guava](https://github.com/google/guava) from 32.1.3-jre to 33.0.0-jre.
- [Release notes](https://github.com/google/guava/releases)
- [Commits](https://github.com/google/guava/commits)

---
updated-dependencies:
- dependency-name: com.google.guava:guava
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>"
02aa1f6f0dd0d7919a3776190ae8f1e16e3dfa08,"Bump com.google.truth:truth from 1.1.5 to 1.2.0

Bumps [com.google.truth:truth](https://github.com/google/truth) from 1.1.5 to 1.2.0.
- [Release notes](https://github.com/google/truth/releases)
- [Commits](https://github.com/google/truth/compare/v1.1.5...v1.2.0)

---
updated-dependencies:
- dependency-name: com.google.truth:truth
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>"
283900806b46bff84409e6b6f7fce711f91ef9a6,"Bump com.google.errorprone:error_prone_annotations from 2.23.0 to 2.24.0

Bumps [com.google.errorprone:error_prone_annotations](https://github.com/google/error-prone) from 2.23.0 to 2.24.0.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.23.0...v2.24.0)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_annotations
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>"
6cde6573f3cd13fb69d618bb4a3f650791372fb5,"Bump com.google.errorprone:error_prone_core from 2.23.0 to 2.24.0

Bumps [com.google.errorprone:error_prone_core](https://github.com/google/error-prone) from 2.23.0 to 2.24.0.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.23.0...v2.24.0)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_core
  dependency-type: direct:production
  update-type: version-update:semver-minor
...

Signed-off-by: dependabot[bot] <support@github.com>"
a960eacfe11bd22fe0763a92bc97fdfb0b1a8321,"Bump com.fasterxml.jackson.core:jackson-databind from 2.16.0 to 2.16.1

Bumps [com.fasterxml.jackson.core:jackson-databind](https://github.com/FasterXML/jackson) from 2.16.0 to 2.16.1.
- [Commits](https://github.com/FasterXML/jackson/commits)

---
updated-dependencies:
- dependency-name: com.fasterxml.jackson.core:jackson-databind
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>"
d7d8cbd44df382e33ea65df8f98ef338bc58304c,"Bump org.apache.maven.plugins:maven-compiler-plugin

Bumps [org.apache.maven.plugins:maven-compiler-plugin](https://github.com/apache/maven-compiler-plugin) from 3.12.0 to 3.12.1.
- [Release notes](https://github.com/apache/maven-compiler-plugin/releases)
- [Commits](https://github.com/apache/maven-compiler-plugin/compare/maven-compiler-plugin-3.12.0...maven-compiler-plugin-3.12.1)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-compiler-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>"
4781af4fc0aba3f0af7704f496114db051df491b,"Bump com.google.errorprone:error_prone_annotations from 2.24.0 to 2.24.1 (#2591)

Bumps [com.google.errorprone:error_prone_annotations](https://github.com/google/error-prone) from 2.24.0 to 2.24.1.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.24.0...v2.24.1)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_annotations
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
ce8cab63e56dcb30a7e81dd5ef2ca5660750de24,"Bump com.google.errorprone:error_prone_core from 2.24.0 to 2.24.1 (#2590)

Bumps [com.google.errorprone:error_prone_core](https://github.com/google/error-prone) from 2.24.0 to 2.24.1.
- [Release notes](https://github.com/google/error-prone/releases)
- [Commits](https://github.com/google/error-prone/compare/v2.24.0...v2.24.1)

---
updated-dependencies:
- dependency-name: com.google.errorprone:error_prone_core
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
3e020e7236348a4bfbca25281b304643df3ad679,"Bump com.android.tools:r8 from 8.2.33 to 8.2.42 (#2593)

Bumps com.android.tools:r8 from 8.2.33 to 8.2.42.

---
updated-dependencies:
- dependency-name: com.android.tools:r8
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
2bcaaed875f98b367cc55e2b9c343e65553545a1,Improve `Calendar` unit tests (#2592)
5187808233eff87bd2c8cc582d5ef545f755a5e5,"Enable additional Error Prone checks & fix violations (#2561)

* Enable additional Error Prone checks & fix violations

Some of them also enforce additional Google Java Format requirements which
are not handled by google-java-format, such as disallowing wildcard imports.

Not all experimental checks have been listed because some are not applicable,
such as Dependency Injection framework checks, or checks related to Guava's
immutable collections (since Gson's main code does not have a dependency on
Guava).

Other checks have been omitted because they are probably not relevant
(this was a subjective choice), or would require larger refactoring or
would flag issues with the public API, which cannot be changed easily.

* Address review feedback

---------

Co-authored-by: Éamonn McManus <emcmanus@google.com>"
97b663b027dd39e5fbde380078cdcce6fb983fd5,"Bump org.apache.maven.plugins:maven-surefire-plugin from 3.2.3 to 3.2.5 (#2595)

Bumps [org.apache.maven.plugins:maven-surefire-plugin](https://github.com/apache/maven-surefire) from 3.2.3 to 3.2.5.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.2.3...surefire-3.2.5)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-surefire-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
456649178109d3ce3824d28fe6ac078d6aa5b0f9,"Bump org.apache.maven.plugins:maven-failsafe-plugin from 3.2.3 to 3.2.5 (#2594)

Bumps [org.apache.maven.plugins:maven-failsafe-plugin](https://github.com/apache/maven-surefire) from 3.2.3 to 3.2.5.
- [Release notes](https://github.com/apache/maven-surefire/releases)
- [Commits](https://github.com/apache/maven-surefire/compare/surefire-3.2.3...surefire-3.2.5)

---
updated-dependencies:
- dependency-name: org.apache.maven.plugins:maven-failsafe-plugin
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
51cce39e0064a755d32f820670770f82519039de,"Bump com.google.protobuf:protobuf-java from 3.25.1 to 3.25.2 (#2596)

Bumps [com.google.protobuf:protobuf-java](https://github.com/protocolbuffers/protobuf) from 3.25.1 to 3.25.2.
- [Release notes](https://github.com/protocolbuffers/protobuf/releases)
- [Changelog](https://github.com/protocolbuffers/protobuf/blob/main/protobuf_release.bzl)
- [Commits](https://github.com/protocolbuffers/protobuf/compare/v3.25.1...v3.25.2)

---
updated-dependencies:
- dependency-name: com.google.protobuf:protobuf-java
  dependency-type: direct:production
  update-type: version-update:semver-patch
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
