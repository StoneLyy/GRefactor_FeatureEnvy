commit_id,msg
3cde920c3f7eb8241bf569007e25225d80b43c0f,initial version
c3300283ecc397d26ad9dfe31d1710ec45db2af0,initial version
3ce247199704eae6b2c92c6e38c69584e3250c52,initial version
d842c4f1139629c1f062b74ba818d233b2c31043,initial version
1025cde05abe95be6ca65aab3ba126258efc647f,initial version
917c6a81789d436f4d14db8d1f1385bca2f4a580,initial version
fafae443719b26159ab2d7dac1c9b46b5e00b671,initial version
144143c2970a1e874d74cdbd0f8c622d4282a3c3,initial version
e2ee9a0f76a939dbaee0f80088503b15a9cf7bef,initial version
784382899d35d9fa14a920d6ffa79cfe7c8a90eb,initial version
2dc14613c8f42cd0b49a6d0f47f5b8e776bab0b4,"Changing string constant for classDir, since the package changed names (correctly) to ""weaver"""
c3472c7ced31834873429a8688607e0460432686,"Changing string constant for classDir, since the package changed names (correctly) to ""weaver"""
c67cb6056cbd89b1fa95ec6a1813793fa18edf16,initial version
31b7d84b2b4dc4ba29088947d8872027830e8fe4,initial version
2e8ba6687e9fe50e87bf091af223aa28a386853c,bcweaver -> weaver
2438efbd210c29b554830476541ab0f70b72c92c,pseudo-java nature to see in same view with build module
f50d1eeb894cbd2e5ed8ee619bcdf704e0187ba2,"refactoring AbortException to make it clearer when we
want to abort w/o message, and to always stuff in a stack trace"
17f9f1c8abb7d0af5cc41fb5361b726c5a4279e0,removing aberrant regenerate = true
c81fef04bb9e37b029454381451d816acdf80bfb,"adding .cvsignore file to shield ""out"" from cvs.
You may never see this file if you have
(as recommended) .cvsignore in your global cvs ingorance file."
123003b8e568104a6cbe6fb439c02fdf5bd4181b,"adding .cvsignore file to shield ""out"" from cvs."
538f656d070067171ca7763e73dc48d451707177,"excluding preinitialization join points from around advice since
that's not implemented (and the test case isn't expecting these
newly added join points)"
ab18cfd453a41c8b728e8485809ef87c218ecf72,"more updates, esp. for sourceforge.  Still need mail list, home page, etc."
6338556123543cf33fc42ee6f3af4e5768805adc,moved examples under doc per Erik
3d7ca3cb9639b81c3dbb5b6afdffe54e97f864fc,updated for better source locations from eclipse compiler
d595eefab03954ad3df2d282bb7ca2295f928a2b,fixed type name error confusing real issue
8e3d17fe23db927d5835092f2a6b7e05c79c69e9,moving quick reference around
2b35fa8a26f3f1572aa36d08a39d957de422b51e,removed ajdb and ajdoc
800a62a91f2543575a703a92fb818d4de3051534,preserving binary dist files during creation
fc201381651a80764fdbcee7fcf5ea6a7a8aa201,updated error lines
83a5cf335b7179ae5dbc9963614eb8f935702a9a,bug fixes
f68a0546db571904177e905ba81735bf7f81c9c9,propoogating Erik's changes to AbortException
3f35d3b52091aaf3392c64a7e5f58f8625edad75,fixed old syntax
4a0295c0c33776dc16f582c33ba13a937ae7b75b,more bug fixes
5436dfd16d1070ee44b3c7dba033cd57770395b2,"beta 2, usage for -emacssym"
12a9d7fee224d79e2b8fe01d5e2f5a0e34710891,emacssym
f1b734ae88881c8f8d38db2942a3f35207401c1f,doc/script cleanup
476c70c1ad97b6af6659398ca829bda7b837ae4a,again aligning task with xlint reality
c22cbfbec15d69a217a80496b98084070258357e,initial version - neglected .lst files in testsrc
6e6c33ed11fbde7db490b161da5d6d19765ead3f,initial version - neglected .lst files in testdata
ce9454c0a61666a1964a5219b88566edcf37e866,initial version - neglected .lst files in testdata
dc91b4a21b412d2b30277d37922459132426f602,extended coverage
eddbb2567fdc715d0371e3b0c2563dadf5c6b034,more bug fixes
5016e1aed02883fb35e930ba6f98a29bd350503f,added comments and removed old warning
40465fccadecf900571dd7541088a33c6548b2a0,removed inaccurate old comment
8854303e607919697b8b746ce811e2d7f3df6c6c,reflects the 1.1 change that field-set join points have a void return type
7b7572bc37dca8798e29ffaa7c9f2d88c810af21,can't use wildcards in target in 1.1
2c79569b4b20adbb10cf9081536ecd7a9c37dfea,"better error handling for cases where type name is required
instead of type pattern"
df058f9fa8b1510569bdd6ee39c1b2d6f183fafb,Remvoing stylesheet refs and link to oldversions.
4f58fd779099e3a59c6c1e177f94b86b6c7b5f47,Remvoing stylesheet refs
a6d1918ba0e713546a214901de6eda9376604877,"adding accessor methods for calls to protected methods from inter-type 
declarations just like we have from calls to super methods"
b8d94d2b4aa34ed8dc3775c7770eb99b2b8fa67e,"signature of static method for if pcd shouldn't include extra parameters
for advice"
9da1832d911c85b32c67391871db3b4943b4e599,"updated for correct privileged rules that import is not inside the scope of
privileged aspect so it can't see package-visible types"
2a5c5a8d91b8362bbbdfd1c3a6d2459ca69feeaf,"handling privileged access to types correctly
fixed bugs in other privileged access handling"
1a7e33c22f12bef237855a89cc4a223b97582a66,debugging off
e9c55d991fc9ac325b3ca73ef1fa675c53fe0558,can't use type patterns in inter-type declarations
1c483f9189bac49b2eb3a77ca862378838433b1f,can't use type patterns in target
96db4fbc4c83aac5411e25199ea237584b836036,more privileged fixes
bf459dfaf201caeaf3e099408a11e08cd542c752,"wildcarded type patterns now remember there scope information
so they can do matching of local names"
d0c3d7161fcfe44ddf7a0edf3eb701f72235a9a7,can't use type patterns in target
c80dbe68bd1bb853237ab6ed377bbd6a76cb08c2,skeleton for 1.1beta2
50a5e5b5b820891b81d97f850a2dd0d1bfa8c86a,trying to avoid incompatible class change error
ec427477ed4001f39fe29dbf6a7045746644369a,changed for void return type of field sets
2f454c20060a95d78e82b079d66641ffbd13aa7d,dominates -> declare dominates
07f68f155d55b52902118bfa8f2747142de79b09,field sets are void
8d0fab3add4dea0648b7574df1dfd6f4c856b7a1,more fixes for privileged
80f6a5625488080cd0eeb32d54d71d4b6c9ef9a8,fixed accessiblity bug
d38aec6e4f0ffea34a3f46d0148c69a69408e699,more bug fixes for if and privileged
29f7bfab4410cc182e760475ba6e71c2a62c3c47,fixed accidental capture of StringBuffer.append(int)
aec4f4dccb57479ec85abb21879ce8b02f4ccbc9,removed use of getSourceLocation.getColumn()
9eed4bc0da037bce1156cd9bb9709104354fd4c6,privileged from inners
3d81a32305edcc0b62a8f847d383fd642d7f6bdd,ignoring Xlint errors from some cases with deliberately missing type names
e77c9cc472fd0506c1c11b518a648cd59a1d3bba,better errors for bad arguments
e1c9313a55965194e2f987d5fa5777747e068695,"Various fixes and completions.  Should be 1.1beta2-ready
apart from some verbiage about the ant tasks."
fdda168314476e94315ee2b844c2ff55ea944ddc,added coverage for this(InaccessibleTypeToOthers)
0d1be0aeaabe27f76f3ce3b923e198dedef28a43,handle matching with this/target/args(InaccessibleTypeToOthers)
bea2ce7f2f4d43ebe36052040b86ffcf4b390d6e,initial version .lst files
754dcbb620032af4660f1cb44b2c0e2cab778534,"adding http://eclipse.org/aspectj as home page.
Docs assumed to be at http://eclipse.org/aspectj/doc/dist"
d5b8bb776ce6ef51420467fab5573803681e6685,removed license checks for extruded modules
49c53178fe1d89b736d9c23331f0164b794e1f60,"public constructor, better message reporting on failure"
932eeae599ae1c55534099c4865e8b9952e3f314,initial version
dcd9f7160413716cedeac639dba0ae9f55282fd1,installer window title
32927b5ae4598cd2793deef988b828b3ac16b064,"renamed readmes, corrected links -- tools being used for entire product"
788b525882b504b578b4f5918af5e9b913743050,setting JAVA_HOME for new ant
e4d2bef9abe3a65f7fd99b7002a50d659c31689b,adding instructions for running Ant from Eclipse.
d7f742ba9c62ce136b6e9526e47c57101dc86cdd,actual URLs
bbf182d619dacc859ea6eae0f8b15312a01bfb03,cleaned up imports
f9d702f8186eda2112ce03b818752d4dc32c9dce,"changing ant verbiage
adding links to sourceforge projects"
a1e9e2639d8547a8570f3dd25d8833573ef80b62,rolling out installer class changes
8ff468dda46894084e0878fd9cf68c5798bbdfcf,fixed order of thisJoinPoint and thisJoinPointStaticPart
360ec841b0bb5c98c831a169bf5bdc2c4216b0ab,Added condition for model building.
01efac720424b0c2272afee80a7fb4833ad0111d,changing exception message
7f352480c0d2edae195bcec37d1ecaa984031161,Now devguide doesn't include AJDE stuff apart from the browser
85da9d243140453d129f355b4ebfa7db15b5ac6b,small cleanups
1043c35c0421c7b161440b5c36e7c9797cce9451,avoid NPE when in strange state
a70485b9dcb5d8be91a4bb2437e41502841835f6,list antecedants in verbose mode
5a7bc25b4b40774f99915448efdcc2adab626a4e,"do build.xml builds only for modules, not products, and continue normally if they fail."
be59c67a76a1772974982402348458e7522cfe55,XXX always exclude Ant and runtime classes from assemblages - hack.
a1dd62169b5a2b07d5e0f7191e08e4986c2e6228,rollout new fixes
c9fbe08ba5f5675aa23e164cb83e62ec3cfa8f9b,doc props
e38399bbe1fdeb0aafd1dea4fbbbb442be5e53d5,doc iajc/ajc alternatives
0d53a7250c40bd404dbc0ecb35b66e5450fafbcd,debug comment
1071f9d850894651099261fc26538b9c444b4fd3,removing non-local links into tree
3d7434255e7af84b6a6298d598200f793976f1b8,hoisted user exception rendering for taskdef clients
7cd6a97ee6a8884c4114a64265a21d3847aece7a,"handling messages like the new taskdef, printing as we go and rendering user-visible exceptions using Main"
91f0430dcae0c34e662a6ba65a0ead7d30625f3a,"suppressing info messages unless verbose
and rendering user-visible exceptions using Main"
e28f00ed6262a74e9af1d77c4b685ad3db7f2bc1,1.1b2
203859ccdd8da5830ea6c454de50e78787cfff80,using DEVELOPMENT as active cvs version
eb30dcd9e8092d32b51b21bd7fb3ddb92b71a522,fixed NPE when no manifest in aspectjrt.jar
c86b373e28c6b0c77c90eebddf693db9df8f9ccb,fixed error handling for illegal overriding with inter-type members
70419f7987b92a106b60e8c0884b9b68ac4c9432,"updated for changed to inter-type constructors
  can't conflict with default constructors
  instance variables aren't initialized unless you call this"
c46adac65118dff18af875b3d760aced6b42f615,fixed illegal foward assignment not caught by 1.0.6
102a6af2f228e7bbcf03864f1c95339c533fb54e,removed old 1.0 warnings
12955353e3df181ab99a2f8c86212730cb1bcaf9,better type and visibility checking for pointcut references
c3002200cae795108f88fd5f7949dfa6f31a1616,using external deprecated method to get warning
b684b97b9c0aa504fb6b143852e359de02d11002,explicitly excluding new preinitialization join points
26d43e79b519c45283579cf6073df68d11e3ee84,making more jars for tests
2b29afa84429d64d5d1d61930df4ffd5b4b11053,updated jars for changes to bytecode forms
b8cb92402afcb6569a54e187c6f128318247edad,removed old transition warnings
e97fb458df9c7306cdc2104732db28e5e3e79fc7,updated jars
bc0c559654cb471c8392ded0f25d12b527e1f115,excluding new preinitialization join points
8312dfbc60b4589559f6943973cec819d28c68d6,"added test cases for old jitterbugs
moved passing tests from ajcTestsFailing to ajcTests"
c86ae3fc8bc798521dfa3449bebf749c446509ff,updated error messages
9081949c3aca2636eab2598b57ddbda16563dcee,expanded coverage
2c8295af23b94a7eaff57abf206f52abdc1dd02e,fixed rules for overriding/inheriting pointcuts
7dd2994ade6aa152e3e579119158d9a338c06b44,making lack of after returning advice consitent with expected events
52ccc9be332715a2d8decfe4ee4ef3ffbad12426,matching new semantics of persingleton aspect advising its own initialization
ad22592b03d21deb506d38c86fe9253602b89cd6,fixed uptodate checking for local-dist
edbf43c6841313ebe0e7747407cfed9b11082065,"better errors for issingleton aspects advising own initializers
also correct typing for dynamic checks on parameters to if pcds"
517b6c0ec2c76af89a6e78b75f292d67e71e8339,"updated for new sematics of issingleton aspects advising their own
initializers"
c2d4da291fffe27212c533068c6fbf79308fa10a,commented out code to replace licenses
e4e1027f57344200c4e89f3d3daeb4c72ba2221d,a couple more known limitations and increased coverage with new test case
9441d053abb841472dc2833417f6c495ccfa1190,"fixing version-handling.
build-properties.xml has actual version,
Version.java is generated,
and ""DEVELOPMENT"" is default."
57f7f2df4d2051157f94db7fb684dc5decbed62b,"fixed bug with unnamed tasks producing messages like
  [null] Building Zip: foo.zip"
08cc7a3ac3efa224f90447ed32972e3dd7db3d12,rolling out build changes to bootstrap jar.
9840c9baafb028813a95d1af8ca33902f92b980f,updated with DEVELOPMENT manifest
9ca3c5431f71b1cd08d94edb38a5a5a1b617ab9b,"updated to remove ignored manifest, make more recent than sources checked in later."
7c43b113149667d26dab2ab2fe71ffc8f916cc5a,"- added aspectjrt target (alias to runtime)
- implemented target to fail if bootstrap libraries are out of date
- moved update-tree under setup comment"
8ab3779b82f0d4c3b0f288dab98460373557dc51,new default quotes DEVELOPMENT for scanner.
c8e2a8090ffbee2f1a7ac1b59b12618581ba12a5,a couple more known limitations and better error lines
025e908673ceaa62c49c1570fa0264f483755029,"better errors for bad named pointcut declarations and references
handling concrete aspect correctly for cflow fields"
cd120597a7fef187088a4d53cdd78450f0f233f7,changed callee-side call join point test to use execution
e386c4664517e61f36917dbe86a590bba3c60d3c,"better error lines
forcing a few tests to use -1.4 for correct declaring type at call sites"
4e52d3a759b8b5b5566c186eacbffbdff21058fd,"better error handling
better handling of synthetic inter-type members"
c453b5555c372b0052abd037adf8d6bd9b1e95b2,"fixed to use A.aspectOf() instead of A.ajc$perSingletonField for getting
singleton aspects
this lets us produce much better errors when the field is null"
7e28c28f4b09bacd1e0c0f7e7326fe68f5e6c7f6,fixed names of introduced members
d3156f737f3bb24e3ad695205da5977bef519275,"added coverage for exceptions thrown from intro methods
  these tests were inspired by failures compiling observer example"
045686fb7995a6eb490cc3d81b30a4b1834b6568,correctly handling exceptions thrown from intro methods
e77b357e1194eabff59ef7f4bb862edfbec00c76,initial version
0b35a034d72342ae120859a130ed245dfd63048e,minor Tester API tests brought down from attic
20dca6904f180734998151ce714e4c25e9517771,initial versions (neglected .lst files)
922a42c30dc7a8dcbf17bce1973c87fd0b46e3f3,fixed expected error line
4b069263be1a381592bb521eb0211e84f37dbcfe,fixed to use declare dominates
23e449e656bb9701a586b6b71a2607365edef50e,needed a !within(A)
c05863091ec392d2b266d70cebd3681eea35680d,fixed error
8bc24339ac5a28c60f53f9f178635e66d8729800,checking that parameter to after throwing isa Throwable
2a76e2727ab817e2e7af3676511a87c08809de97,not allowed on aspects
580d0ccb31b25769510283e93174915f76b06d09,better errors for circularities
a000466044a97c1071827a652c901a948d9ace28,fixed to match fact that this syntax is forbidden
759bac556635743571bf9041168e1db868afc187,better coverage
4edc1f290250cb93168c0aadc9f25ba5949b6bc4,using declare dominates
991411ec528ac2ef965ccc669217cc5099800ae2,moving now working tests
e1b31331d1fe37a872af95aa5a2ba9655a1f60b0,"local variable information is different than before (not better or worse, just different...)"
2df90bb2b709ad637e98ae57c55f307632fae3e2,refactor hasThis kind of things
742ae9055d4c9caa2194c64a129ba2d94b0fb6ec,can't do around x initialization
fcb23bffb3725128f528a222adb92cd6e2719fd1,"can't do around x initialization, 
refactored hasThis kinda thing"
6781a7d16e6c1ab8a29dcf177761880a96efbcd4,refactored hasThis kinda thing
647f96893dd613e7c079a79ef25fa1610d64d8ab,around inlining works more often
897e1f63b9790c079f20dd66bd0d15f4b840bcb8,"- combined the two call/execution entries
- added Erik's entry wrt advising constructor calls"
63d88f163be18c14fccd02cc88b691679eb17e93,initial version of unused/attic code for later reference
38e7ac92dc5fb4e6c7a77b8b4f3b3a5391e44aeb,new advice binary format
ad84a3bad254c8f8eaebb41c236ecf8fc3e71aae,boolean array read/write
13050957b1ceba3ddcfe7a87bf5e9e03777aa3ac,added information about proceed to around advice attribute
680908c84f69eee20c41abd4d389ffaca913cc97,fixes to make ajctests mostly running - still getting some silent failures?
bd58f4bd448acc1231f558da469019a7ba9c395e,minor comment changes
9987be3397f667a639bc18165ef037853ccd330f,fixed apparantly-unused errordir attribute
28f09b17d4991c6754d0a2b701a6f6eb4abdbed0,finished implementation of around inlining
08b0b1f657f4ee3fb5f810db6f0df63bd1fecdc4,expanded coverage
ad1978de1e654c0e500aeb4abf23cff0c64d15d3,one more knownLimitation in error handling
6ca8bded754a82f24db9e7f7c362425fcb7e7acf,"fixed ordering of inter-dependent cflow entries
fixed matching to privileged and inter-type field gets/sets which are method
calls in bytecode"
4a5b6f6bbfb7b22f627d87a0fda34f600989f7ea,moved fixed tests
768fe44deed3fe6ed56d90bbee8393e06761d265,better errors for dominates circularities
ad755cd11615475c7afe93cd1bf51e80512405e7,better error for unsupported 'if' lexically inside cflow
bab373005836319f4efa955680dca84b42fde651,removed 1000 files at once limit
bf3b347a6997efcaa0a599f5b3903da002197957,better incremental support
623f3bda3626e006774d3f11b16f45709c51458e,more info messages
d43883b4f79b1e04783bc3c8726b3940ca964191,looking at binary form issues
3fb52353cc63299ef545acd6540b90da084e35fa,horrible hack making this a subtype of SourceTypeBinding
779e5e30c4e0adc33b7f7f757d91b54ee5c21c12,work-around for hack that makes BinaryTypeBinding extend SourceTypeBinding
ef5c2cbf024c8f221ec4f76b12fa16c478e8e5f2,"making inter-type decls work with incremental mode
 (partially there)"
f685f979a4d3eb3844f74850deece1da265bc975,minor improvements to incremental mode
8ec8f0c0c6c68d9b13c3bc3416c3234eddd48379,making jython-2.1 available for scripting
d23254eaca847caaddc4c95eb7d038fd03637db2,incremental and working with binaries improved
23a1b71057a3153ada5aeae61f59c35421b51c23,getting dependency info for inter-type methods
0025a76674bd4e3384a4b5278f5a2049d08f83bc,incremental and application to binaries improved
e26afd3b27c4487da1724a9bae3cd871acf94caf,ignoring new Xlint warning
3b5423460e944fdbbd80ded936c7055a64ec7b4d,jython test scripts
4b530427b5924d93e6162b8c513052994d6373eb,enabling debug symbols
89997f3c4660c10e902cf74256ee922e79b0c7e4,"- generalized copyFiles to handle file-file, file-dir, and dir-dir"
ab0c82f47549b2631fb7e2572948deeb385959ad,- added info line on failure with TestClassLoader classpath
d49b53e2e0fa1c5f8133491886e9df6080395e42,bad javadoc comment
47b257cb438cc74cf708d7edbb4beb11405402f6,"- test class loader fix for test classes loaded from jars
- implemented aspectpath, classpath,
  - removed CompilerRun state duplicated in sandbox
  - sandbox owns path assembly/formatting for javarun"
fa63eb539504e91b3d070d5cf723346b9a86d0aa,"two harness test cases, for classpath (jar and dir)
and aspectpath.  
Binaries are checked in, as are binary sources
and a build script.  
Test specifications are in tests/ajcHarnessTests.xml.
(also checked in) with the build script"
3d5e79f273c89abc930b6d2240b2e38abc18857c,"added two harness test cases, for classpath (jar and dir)
and aspectpath.  

Currently all cases using ErrorWarning.java give
unexpected results because the declare warning does 
not work."
463e3f62576e2495e2247ec396ca5c7f31ca256d,added keyword comment
3c417328205d53acdd616b5fe8f870bda5a7c5f9,added classpath element to compile
b8bf1d40955cc07bc430f1f70a20e62436e2dabd,"To run in eclipse without a launch configuration window
(which crashes my NT - 
   http://bugs.eclipse.org/bugs/show_bug.cgi?id=29011
), create a file ""HarnessArgs.txt"" in the run directory
for any arguments."
f70716bf3bb8816393303a1acad4fe048077203e,comments only.  no build.jar update needed.
749fc8caf6d298020b3ac80ab6a7a7d579e79101,accidentally commented out short-circuit property
d873ab74b536aedee1bdc9ad415818b005176182,removed MPL header accidentally left in.
b1979531b07dc70d1eb27eab92e970812701f119,"explaining more properties, basics of testing."
fc1b857d288b5d4055479c19111ee9f5924b0c88,allowing large bug ids to make room for eclipse.org bugs
bbb0aa4c4577b50399fbbe09a18bd7181af5d3ae,allowing large bug ids to make room for eclipse.org bugs
2b680c46c54d8d5c3069b29686282d7fff720b1c,ignoring bin
1e721079e0cec90516b4629272c178ff377ec75b,tests from bugzilla
7660b9dfa546c2677c5d3cd1895ee3c5c446933d,removed tracing print
67a0ea0eaef0a0f7ce15522af2372f6cc0f09cbf,fixed bug with ajcclinit in non-persingleton aspects
52aa66ebc0ee454cf45b6ae6c77efb563e43e1d6,avoiding aspect advising its own constructor
88926733b6686d6b1e77254b35907d1dd0c5682e,exposing unique array creation code
360b569d3a63fcd40828a5ef41fe90b91a16aa72,fixed source location
1e068fe485d7539ad938712b6bed5812fadf7df7,more tests from bugzilla
ee5a8c8347a8d1638d7ca65783d96d17950bc016,the type declared soft must be a subtype of Throwable
2d10f482f22cf36649707f70e4cc5d8634d5325c,proper handling of inter-type fields with array types
4678f4e40b2eb3090b4fa0e5e18b988c3817df6c,initial draft of doc on writing compiler tests
08af7fa8afdfdfca61650e2df478ca4f9a55d8f5,fixed order of join points during initialization to match 1.1
4cfe43bc0c768e0e2e95ea03f154ffb999fe43aa,fixed order of join points during initialization to match 1.1
f9ade7a9e1d81d48620ba68e126fbf0c90b6813e,fixed order of join points during initialization to match 1.1
831703ca87b7d420dc6ead90a7e93e4d9bc8608f,fixed handling of reflective signatures for static intialization join points
0b062880f1d6dcd5841124b381fa3dddd2bd7e64,"fixing and cleanup
all tests in ajcTests are either passing or flagged with purejava or knownLimitation"
14783484fbcb2151328592cee51531449fc03cb0,fixed strange dependence on a file named foo
91d9045736aa5705ad0289c0209474bac205aab7,proper error checks for around advice return type compatibility with join points
8995a3a369a70a5d6122faee1f1783777c83b2ac,"propogating information needed for decent Xlint warnings when privileged
access is made to a type not exposed to the weaver"
919922324bf209b78d0ded51befb41599abe673c,correct line number
29dccb0d7ec7786bb219cbdf02e3bb81fcd843bb,added version not in 'aspect' package
7a5546ad465228523f5aac5b45142eb3726dd1db,fixing bugs
d6ecbd156a6c44b9e3ebfe8d129d8bcd30653d67,"updates for eclipse move, cvs builds, and test cases"
6b55f540b76deceb0a969ef19727bec02793b5c2,updated printable quick reference for 1.1 language
82035f65bbf32c14d8168781608157f98c2c0712,Updated for 1.1 language
7f3516ec479ea79960cb1bd2c892668cc9adcff6,"updated semantics appendix to 1.1 language (still incomplete)
removed useless biblio and glossary
made a few docbook rationalizations"
5641e01efbe55537c00e1f97759d7054eeb7185c,"fixed initial implementor for code written in 2002 to be just PARC, not Xerox/PARC"
08c86843265088699f88a4fedc4c78c5d7081d6a,"fixed initial implementor for code written in 2002 to be just PARC, not Xerox/PARC"
a5fb21459045ea1ed295c21836672eecf2ca0242,"renamed ""declare dominates"" to ""declare precedence"""
f1de2b647b2db6da2dce83d4b0679082e98df784,"renamed ""declare dominates"" to ""declare precedence"""
9a532972a6044080b4fed1d1d4a76f803f46fcc6,added test for introduced final fields and rearranged some
99a873c3070bea836e8cd4bd33c610fb41efa2c6,"fixed bug #28974, allowing initialization of introduced final fields"
27817202657a92778479de5063097086b511385b,Fix for bug 28919: relaxing guard to allow native methods w/ no code
939883f1c9a936d00f31336d0be03ba547a71315,preparation for 1.1beta3
f60b7314484724099896fd9ace6f26e5363b6476,skeleton update of README-11 for 1.1beta3.
c1260e6b26b78f0f431b778cd8f22d3493e97f3f,"fixed bug #29186, much better handling of structure generation
added an Xlint flag for warnings when join points don't have structure nodes"
2549404ca35f27cdef2bfedd91092e186c7029e5,doing batch builds when previous incremental build failed badly
dd6a7bde18f00f528caa1bcb0abf8de9e9c4ab5c,more careful null handling
429c257522cb6e33e07aab634f608cb26fea3d6b,refraining from removing NOPs at thistime
803930162f39bf1a7621c31d6f8834df3460318c,fixed silly spelling error in toString
1b259a4efcc738add5ecc78f4c6a7e6376c0733b,fixed visibility bug in test case
2a0dc9b552e4eb58e2802d74b5ad56d4cdad57ba,more coverage
325ea44eee9ade6fbe2d00439e029b6e41c5eec3,better handling of binary only types in the eclipse pass
97915cc7bf880cc537e338c7d764bce646183f8a,closer to actual 1.1beta3 contents
20f08a19e14af95896b426420da6c7130b0a3d38,one more declare dominates to declare precedence
f49e3fcacfa5d52f28410bc5010312be025498fd,"invokestatic should be used on private static methods, not invokespecial"
c65916fdf0155a2bc0d70dc3603ac0087666ab31,don't forget the checked exceptions
2a628ee26626c01816abfbd4770ef6fa6b279472,"adding another abstract/code guard
using NULL rather than empty list for abstract/native bodies"
e3051a20928096cad2e780530d914a8c2ab0c124,"missing manifest in aspectjrt.jar will now only produce a warning, and not
an exit.  This makes build issues less fatal."
1bf099a386c5fadcd7dc35cbfa7e25760dfe412c,need this or there won't be a manifest in aspectjrt.jar
9da5563e3b111563fd9d1bccc6204ffa8aebeb63,updated to beta4
d9336fa0756e806d017225de3a04f731ee875767,removing inaccurate and hard to update version numbers
8e15506868d87883a1868410a5bee3ca1ce16766,ignoring some generated files when jython is used
7ce70891d27682f2c4db2389d77876cbbdb424b8,ignoring some generated directories
4dfb3f2ad89c38a46521698484667f4b6fe3085a,"fix Bug 29691  
   Static inner aspects cannot reference user defined pointcuts"
727c1ccdcf5b76962dd29d6d2aee0d73aff927b8,"test for Bug 29691  
   Static inner aspects cannot reference user defined pointcuts"
b5bb16f1f0011e41454f60b2707420769dcd1ebc,"fix for Bug 29693  
   Use of within with declare soft yeilds VerifyError 1.1b4"
7e0c6a74f0f2f35be6724650fd3a09995efea978,"test for Bug 29693  
   Use of within with declare soft yeilds VerifyError 1.1b4"
377c02631b475eb33c82f4f3ad7f97efd7a1bdb7,"changed class name to match change from declare dominates to
declare precedence"
d2b603683edc8747eebdb4d106c205dd9433da9f,"fix for Bugzilla Bug 29689  
   Declare precedence should not allow multiple * patterns"
e34f6ca4b8f32a46ed29c6dc2305812e365bedf2,"test for Bugzilla Bug 29689  
   Declare precedence should not allow multiple * patterns"
d06855e27624ffd2d1b8b14e47e43a3889871b43,added entry for detecting version
e9abb7f372ae1874384ddb1f9443af023db6f232,updated THROWN_PREFIX with better URLs for bug db.
094b548830a6e69c01215eb3775ced1632d6fa56,raising visibility of field for extension
5e510183142837a16fbea87129a3d6203072d59c,"redesign of making members used in around bodies accessible
this design is confiined to the aspect containing the around entirely which
makes for cleaner implementation issues and lets things like super calls
be implemented correctly."
2d297d7a3626266c3ec47a695a0d15b13feccd30,"added test for Bugzilla Bug 29662  
   VerifyError on accessing objects not accessible to the weaver: Incompatible object argument for invokespecial"
5731eaec26015751b6f4195878e7d62ae8118094,"fix for Bugzilla Bug 29684  
   Incremental: Commenting out conflict yeilds NullPointerException"
1b7db2522cd2851bc2ba31bf89437d370df06c44,"test for Bugzilla Bug 29684  
   Incremental: Commenting out conflict yeilds NullPointerException"
c5b90daa74db7a3278260de33625a75bdf0151e0,additional template method
dcb2473da044211101743c8dd1fa8f21d55e29cd,"fix for failing test case that aspects must be constructed after their 
clinit has run"
e5660e9d2e962392ad1b3bcd1fc5cbe4725cf8ae,"fix for failing test case that aspects must be constructed after their 
clinit has run, noting that 1/3 remaining failures is in bugzilla"
85a827a7f269a18a0c80802811bbc2aa3766c2e4,"Committed patches specified in:
http://bugs.eclipse.org/bugs/show_bug.cgi?id=29769"
9a102f6787eac8293b293653da43baee0f8687a6,removing resources from former GUI client not included in CPL sources.
bf44cd3074caded9f792a6ccd614b8ded02b1dcc,"more (incomplete) work on directory comparison, misc test fixes."
0220b859da857671a6a29975f413b22934ac71da,added fast-fail (untested)
04b9bd5dc7c479d4782c8d36172e4cc579f2c001,"cleaned up, added release comments."
e56933b01c2033d01645705e9b437a1db24e1a56,added link for writing test cases
6f93ffd43cd39ff24e1a2621b57126799d44297a,clearer discussion for reading incremental test specifications
8ea0d65396361879bb95777df61197752bc3f783,"- added -argfile
- removed ""-d none"" as unimplemented
- added -Xlint variants
- Note difference from 1.1 changes doc
  from: ""-XLintfile:foo""
    to: ""-XLinefile foo""
  per implementation
- re-aligned and cleaned up wording

To keep alignment, prefix each line with \t but
do alignment with spaces only (and don't edit with
editor that replaces spaces with tabs)."
99cc3354f35e544e95b908ed3a0fb975af54747b,forgot aspectpath - adding
d1a343325bde563d56e2b0b909bf81a9702f3976,"- removed 1.0 v. 1.1 caveat
- added external local link to programming guide"
9cf4428f18ff3430c077778c3590a2c369d6a1b3,"- updated to 1.1 compiler options
  (include -Xlinkfile file variant)
- added bytecode weaving example

warning: using hokey programlisting formatting and
not emphasizing special terms because I didn't
feel like looking up the docbook variants."
973b9424c89822ff254c5c3884dccc134b26a692,no longer leaving temp files/directories
5a21d704c265087e530c2f8f573d83a6b8c4c133,"aspectjrt.jar warning now in messages (rather than stdout), so permitting it in this test case."
e7e3398a966db548fe0dc0403ceba6d0d96e11c5,"Mainly updated AjcConfigParser
- XLint handled in two if legs?
- corrected error messages
- pushed handling of -incremental down
- using handler rather than printing to System.out (per !!! comment)
- permitting both .zip and .jar suffixes in
  outjar, injar, and aspectpath
- requires sourceroots to be readable
- added incremental and incrementalFile
  (even though caller should handle?)
- did not remove options no longer supported in 1.1?
  (bootclasspath and extdirs)"
1b52bb2c266e2022fe42bad3686ae094376c0b0d,"fixed NPE (was & for &&) with bad options file.
Also now setting some options only if not empty (was resetting options if not null)."
e1fead754e112b419a5f76dcdafc5443dd814104,"text constant change only.
fixed aspectj.org and MPL references in about box."
5229f8a4a17b425f6ad51c6a97d35f8c66ed977b,"- removed references to graphically editing .lst files
- discussed the .ajbrowser file
  and setting classpath using options
- discussed config files separately
- added caveat about only displaying static crosscutting"
9841437bbeba685979737be81905a94f8dbdf892,"- added bytecode-weaving example (tracing)
- fixed tracing examples using wrong main class
- added descriptions to targets so Ant 1.5 lists then using -projecthelp
- removed references to vestigial aspectj-ant.jar"
049f5d29418e7920dde19d7cd521d236da1f8ff3,"fixed links and text for 1.1 (added ant tasks).
Still has links to porting guide and progguide.pdf."
ab8f8e5f7c93538ffc113009ad9f811366f1acc5,"testcase for bug 31724
  http://dev.eclipse.org/bugs/show_bug.cgi?id=31724
declare warning context.
Note context itself untested -- need to check/upgrade message checking."
ebae84596d5d4f5ae91e040f5af6d6169670007a,resolving unused-imports warnings
656fa507704573c7dadb46036ddfaa18f6ff6b80,resolving misc compiler warnings
5ed9faaf0e5c7ab2f2178adb6743ce33e2ddd187,"resolving misc compiler warnings
added provisional message reader for specifying expected messages in a separate file."
ee8c84d2dcedcb0e7b432fc4a6ca3aba66bfdac5,resolving unused-imports warnings
1b3d8dec76418f78141e33b7f444a39a9273111e,resolving unused-imports warnings
89f47521058ac87673b5c7efac38ef9c409d9812,resolving misc compiler warnings
a3082d86e2762ac2266026a6f7814712eda2a13f,resolving unused-imports warnings
ffea59d6b65e39e3da1063b4cd3f476a3ad47d3e,resolving unused-imports warnings
761e0895a450335b30789fc95e2bce3c64b05bcb,completion bug flagged by compiler
9255a481ea24fb7ef820b5f6b9129486c12f694e,misleading unused import
d49c9fdf6d4c334c2a0e6faa454a115616ea0712,"undoing what was almost certainly a correct bug fix.
This bug fix is not needed by ajc, and making the change to the jdt.core
code will make future synchronization more difficult."
3e2801ad504e8f6b3fa7b50a42bf2706994e1727,fixed Bug 29959: super call in intertype method declaration body causes VerifyError
d15eb325fc77d9f1eb0ac9ec1f6886562d531105,fixed Bug 30168: bad optimization of thisJoinPoint to thisJoinPointStaticPart
19c3e16d2212bdd41144da2150c8ef46b4a759a5,fixed Bug 31423: adviceexecution not working
8e6cef02952075a7ad3c43229bb48bea159a6cb8,"added test for 30026 , even though its working in the current version"
fd1aaf0ccd8631a022affbf51bfff9e9dfa0d71a,"applying Martin Lippert's patch in support of a weaving class loader
made some modifications to avoid duplication of code from weave method"
ab6b18d68794cfee99eaf1f2a914c501eb596f9d,"Fixed failing unit tests.  Involved making paths work right in structure model,
and updating for differences in the 1.1 model."
32a7e80fac54b553e98e5049e9f9f5b8bb765a60,"Fixed source line mapping errors.  

Fixed formatting of pointcuts.

Added a few more tests for above."
f7c21e356018647f96483da3177fcbf57b45c5b0,"This test was failing, seemed to rely on ""currentView""
which was set up by another testMethod"
c1a978da9f01913600c73fd0f60e51f901ea7655,"Bug 33011. Refactored access to file map for easier 
testing and debugging."
d3594da1235d686a6692074702cc1632235dae13,Bug 33011. getEndLine() was returning the start line.
07fa0f32dd50f6f88437fe469138ba1f8d38ee42,"Bug 33011. Added correct calculations for start and end
line for CompilationUnitDeclarations and for sub-nodes
(makeLocation)."
10f3c820a7ab8fa5387a42ab2cbf5a81f56c7c2a,Bug 33011. Refactored access to fileMap in SructureModel
8fd3697dbbd2f8b5aab3fd64ec013dba7c04a9f5,Ignore bin directory
aef2beff9edc8618440de426e03f435d6e00bb3c,Ignore bin directory
5e5a2dd20e2c8038dbaf14583710c76e21988659,Added new coverage test source.
9a67e6290d6e330418f9b0ccaa94ec32d9f0aa49,"The mappings for advice are now correct, and associations have corresponding kinds (e.g. ""affects exception handlers"")."
20bf213e44aad97b8a1b1efcda24a07b7c92f0d4,"Ran ""Organize imports"" to remove redundant imports etc -
clears up a huge set of warnings in Eclipse so that you
can see the wood for the trees!"
2e89f544a7dacfea37cfb4b076f5fa33302ebc64,"Ran ""Organize imports"" to remove redundant imports etc -
clears up a huge set of warnings in Eclipse so that you
can see the wood for the trees!"
1da530069c8b755a7310e83dd05e5ba753d2085c,"Added new Granularity, DECLARED_ELEMENTS, and
new rule to acceptGranularity"
aa7e7a63ee3ac1ab1c3cab155539231aa0e42260,Improved formatting of toString for LinkNodes
190b7fa9b106b246e5d41f9a41eba38e6399b257,"Improved formatting of toString for SourceLocation to show
end line."
2a7c636fc2ab2aae553f9e40ef08dc66f6a0ee57,"Added logic to update declarationSourceStart/End as
well as sourceStart/End (used by AsmBuilder)"
153b981aa2a3a3b9519d132fc7af65b671c96e68,"Switched default for Ajde (batch compile) to have
debug info turned on."
2eb753a83ebccdf88026e6003ecff1f73e022700,"Edited (and then restored) iilegalNewFigElt pointcut
to trap declare error task generation"
c9d750f2f4e8302e58c9319619be4879a9e05d18,"Flipped debug options tests around to reflect fact that
batch build now generates debug info by default"
ae10fe22c2897b3cc7942158b8bfb7bf79eb28da,"Flipped debug options around so that
batch build now generates debug info by default"
0ea01f7424ac387125b291fde36bae6569d8ca9d,"Use ***sourceStart*** (to avoid navigating to top of comments),
but ""declarationSourceEnd"""
9b1c6f8915bd8e2c9ae866caed54daf458812572,"Restored original mechanism of getting source location
now that debug info is being generated."
53e98bac085b1b4e6fb0ec7d1e0227bfd14879c5,"Broke out and increased build/test docs; some new info in the build module notes.
Included release instructions in the build/test docs"
0f75fcd2271c2917106f4a15c14fea513d69ff0c,"finishResolveTypes now tests for CONCRETE as well
as RESOLVED pointcuts"
ac384e79157c35d12fed7b68b67567cae13dafc0,"Final message is actually on line 74, not 73"
62ac77ecb955f9eba81bb50997bd94715cdbc8d4,"Fudge for getSourceLocation to give as much of a 
clue as possible about the real identity of the file."
e4cc72e301f462f968d195489e6a5972c50a34ae,Update to matches to test on Kind
6d4e93c838576bf8f51918f74ccfc2a5b10cb4f8,"installer was misreporting README file name for AspectJ distribution.
(The installer could be refactored for simpilcity if/since we're not supporting multiple distributions any more.)"
83273bdb73d3ed4f7fdf78588a369e93502febf4,added 2003 Contributors to copyright.
5e755852221db8be64222b23714ed6c959a11700,separate developer's section
2484d6b39f2534171863ecbf731ce99e4b1dde4a,"Fixed setting runnable bit on structure nodes.

Fixed failing incremental test."
ed9de600ba6cca69f60d93d6f800d11f6b49d96f,incomplete upgrade to read expected-messages from xml
9fe03ff9e85d6cb4d69d931ac6b5ed03321d4bb9,avoiding compiler warning wrt static ref via instance
636789223c6d965a3679cadc267e59325f2b1375,adding aspectjrt.jar to classpath to avoid disregarded warning
5c1259ca2de2e42f2c8cb9998281f55bd34ba92c,fixed lists and extra empty items
189eaae38fab1ec4e810c74bd5c7d31e6d90a7ec,"*minor* editorial changes for beta5 just to get names right.
Still reads as a delta since beta2 and needs updates for any functionality changes since beta4."
cec1a53e53f853e15742ac1eceea8fc96c7da08c,*minor* editorial changes for beta5
d85df0429632540c9e439b0e68c0393a9a84eaaa,added comment per Mik wrt ant/javac
95bac1813803c0b268fe8a93960bfe34df7c15de,removed aspectj.org references
6e6e48e258a7c35cc82ba1a96fe3bafb994d70c4,"@testcase no such constructor for proceed argument (error)
(compiler throwing NPE)"
1cc799ef3bebb0240f9de4e85d5c1802c9d997b3,"new ""Technology"" sections with answers about runtime reflection, load-time weaving, etc., some take from recent emails."
441d1b80516f4bdd101cb67ff76ccff72b7cc10d,incomplete list of release gaffes to watch out for
3406fe84071084f3b7c7ee84acd680a461cc7c5d,1.1 release language and polish
9133e0cb0ff8d21a54579be67fa69d63c35ca2bb,bad binary pattern resulted in not filtering dist files
fa1b7922b317e1e95d22ad68c74253df28995692,"info messages wrt inc-compile staging
(will not be emitted even in verbose mode until iterator (the client) is updated)"
55f3ff47ea2fd979cd2d61790f85cbba5ba7dc40,ignoring case in detecting jar/zip suffixes
bb9ee8de60674b1bb5bbdaa9e61a7adc92aa8287,"partial fix for bug 31724 emits file:line numbers for declare warning/error.

This adds an optional ""context"" String to IMessage.
The IMessage creator should create a context String (or use an implementation that lazily creates one).
The IMessage client can render their messages without context embedded in the message field.

Emitting source context from the weaver will be harder.
Using file and start/end line will probably work, since tool clients can map to any available source file paths.
(BcelSourceContext and BcelShadow can be updated with end from range.)"
6e88a58b2cb671f2a1ea1dcc4534586362e324dc,"XXX making the build work again, Wes needs to implement the correct fix"
fc75595cee1292e5e86d741e9301648b74aa3c79,"added a range check to avoid ArrayIndexOutOfBounds
-- this bug was found by the unit tests and should have been fixed when
   this method was added"
769afc68966b6ea101dfebca14c6d67bd426bfa0,"handling kinds more carefully for shadow sigs so that we can check for
matching kinds with SignaturePattern"
cb775240056309c20aac308be5ab2abd9696be84,"Bugzilla Bug 33635  
   Negation of if pointcut does not work"
d493883dc0a1b6d766c7b849ee9f58274064cbbe,new -release option alias for harness
d8f3379560c450b80ca7851d798d6e6245832d82,neglected commit for sourcelocation context
3556a2a33100520c708c71b786e87f086234ddfa,updates for eclipse and sense
d1e5c0a57c5da220b8f7357550db84f1009dbe2e,"FIXED: Bugzilla Bug 32463  
   ajc reports error when encountering static declaration of nested classes"
3ba59b8e79ce38064ddda42785f408897bef8731,better instructions for running ajcTests.xml and comparing results
0930a8d39159023dd70f6703fad5b52f4ab06bb9,JUnit 3.8.1 upgrade
9715203947675c89bff540ac9cfc9bac1574e0e2,warnings on stale but good product tests
6a8fa08bcb628ad06c1acdb7f6d8a4e7ea73bc79,"@testcase PR#33948 default constructor inter-type declaration
conflicts with compiler-generated constructor"
6b03a056fbd1c19f292a24bed347e0b9745b440f,"better docs for running the harness, xref for junit"
34e6e0134b8d7251adf2cc4a6e8647a8b1ad0d5e,correcting Junit version in readme
5d61a55e62fda794c101f2001bbad34f8c915e01,duplicate src.jar file
0a175d2d0330eb9843ad17c917bb2434faab59e7,"FIXED: Bugzilla Bug 32421  
   can't resolve nested public interfaces 

FIXED: Bugzilla Bug 32399  
   Incorrect binding of protected (marker) interfaces"
5d0f96e248b4cdaa588a9fb7e941e14a1ad9e673,"installer updates:
- removed JDK tools.jar from script classpaths
- added windowlistener to exit installer when close box clicked
- added -to {dir} option for easy GUI-free install (hack)
  due to Swing initialization, this still won't work for true
  command-line (remote, non-XWindows terminal to unix box)"
f0cc465d8b7beced001f6c80ca69a9c3fb25576e,"caveats and fixes, mainly for releases"
816fdfe472b78115dd60a9c1f0f56ec39433db6e,"Half-way through refactoring of ResolvedTypeX's and Worlds.  This
should make incremental compilation and using binary aspect libraries
work MUCH better.
The current state doesn't fix any of those issues, but it also does
continue to pass all of the existing tests."
5ae6445eff68b511f28bbfdc2dbb6411c62dfdf0,"Instructions for building with an IBM 1.4.x JDK.
Clarification on test harness vs JUnit tests."
93dbd9fcd8b5388f726e8f39fee98a3d04c870b7,@testcase inter-type declaration of void field
c98040bacba671309caf100af38785727a237059,"- tagfile mod-time fix for first iteration
- new API to run Runnable on command completion
required to support resource-copying by ant task
during incremental compilation"
12bf4ac8aab5d465f50be0cf60a46937559a00cc,experimental ant task option to copy non-.class file contents of input jars to the output jar after each compile or recompile.
1c3c02518fc13f022230acac07db10649776955b,"manual test for experimental ant task option to copy non-.class file contents of input jars to the output jar after each compile or recompile.
Currently showing VerifyError on recompile -- need to investigate further."
c70fde750ae5cf0dc0b27ae30f68bb1f30a70e00,supporting sourceroots
7139ac48be452e260c39f5c75ed845b661725cc9,"harness tests upgraded to avoid tests that rely on multiple error messages
and to add coverage for sourceroot tests"
cd8bd2c7cef6d403d6a60c7f3deb104b2898364b,"further work on binary aspects (aspect path)  tested correct behavior
for obvious forms of concrete aspects, next need to address abstract"
c1361318351aeaa70c029bf68b698b26f5046cb4,"sources and build script  for two sample input jars, to be used by other incremental tests.
The non-.java files are resource dummies for taskdef copying tests."
844a0518daf0c0c83a61b58cc1f1107941f1b4c2,stringliteral tests - unreproduced verify error from incremental compilation of change only to a sttring literal.
a93380e98cbe5e9cb7ef2eae70e1bdfd80fd621a,"input jars for stringliteral tests created using ../injarSrc/build.xml.
Edit sources there and regen using the build script."
752918d876acc1aa78446de15b16b1c3ab7e82f8,incremental test with -injars
661473e03c230144e3fda076d1b5775a27a670d7,corrected knownLimitation keyword
ae0ef30e2a9c8a4ef7ff59219b15b5109c956d22,"Fix for 
Bugzilla Bug 32239
Dumps assembly code if Object[] used in args (BcelRenderer.java:152)
Not surprisingly, this bug was fixed by lubbing an occurrence of ObjectType
to ReferenceType, and then dispatching back for array types and/or class
types going to BCEL."
bb66774ab4a5afb36d36bc8274ff265f10d666db,"further work on binary aspects (aspect path)  tested and implemented correct behavior
for obvious forms of abstract aspects now"
d6b8b38cd0a707741788f8d4fae3850b213f50a4,"added tests and fixes
fixed two bugs in ajcTestsFailing"
fd1560a8a1c91d1b65c738d4e9163d93700d1f00,"fixing Bug 31724  
   declare warning/error emitted without context 
and generally providing better error context information"
0fb5f693794e571ab693813cbc80578b2bc7b470,"fixed Bug 29934  
   runtime NullPointerException when applying around advice to other around advice"
ad5377fcb2342ae792702a6641421620fceee244,"implemented fastMatch method along with some basic tests of
weave performance with and without it"
9b0c1228ffe9dd601a9c3b996b0af888cd21d10f,"recompiled as part of new tests for fastMatch, don't expect any
substantive changes"
f4a9d27439f6f8a16b1faff7ec26cf7fbac84eba,"Now adds value of ""aspectjrt.path"" system property to
classpath - needed for release testing"
37c3bdb05f5795d8a772d12da8a0af9e8e359bc6,Use consistent time zones in generating time strings
29b42503a51a93ea22d07acaf8df6b100876815e,"Fixed typo in run target for spacewar-demo, was sapceware.Game,
now spacewar.Game"
82411d231d95eaa780b41dba7934e418dd99de7e,"Added ability to specify property aspectjrt.path 
- needed for release testing."
07ffcd2776cd2b6100ec76f0487bc034484ac8a5,"added vm=""1.4"" to test using assert"
f76921c5e0053c472abf8ccd3979116f180aae0a,?? regenerated file missing from my system but used in test case
a57ec8d9cff0ca35ce9efb59c79a5f1ec90c13cb,"fix and tests for checked exception on advice being checked at
woven join points"
db37189cebba13a30b7ccdabe70565caa7506c00,"fix and test for Bugzilla Bug 34820  
   ajc -aspectpath fails with NPE for cflow pointcuts"
c6d8c34761c20477a3cf6fb62d8523fd476d85df,@testcase type not imported in around advice
4b066194988a634c4da4193599ac4e0132cd3bd2,"@testcase type not imported in aspect
(similar scenario to prior, but different stack trace)"
519aa42cff336a34041df665c4c7e8f738274973,better rendering of exceptions thrown (including those from previously-unrendered FAIL messages)
7746fcb7e977c7a91bd70081a2197a999ec18ad3,"fix and test for Bugzilla Bug 34858  
   Weaver crash"
d5731957188b6280e850cf2bbc238469244b6d86,"fixed for graceful error handling (i.e. the compiler doesn't dump stack ;-)
in response to tests now moved out of failing"
03448a7d4363abe6cd99da99a050fecef9cf8f72,fix for class not allowed to extend aspect and moving corresponding test out of failing
f271e2e63677db5e8e48229d59a0502c0ab5db9b,remove unused API
6368a238627924514c219599d4417cdfd524120c,adding resources to src directory to test resource copying to output
57129e35ce37754f06d118f129e60dcda6ef240e,upgraded for new resource-copying API's and also testing nested paths and refid's.
e83c62ef74dd0f59b44487077e829d2f23a0bf1f,"- generalized support resource copying, now from injars or sourceroots and out to directory or outjar
- normalized path support for all path-like elements
- reorganized for readability"
3971734b088041462a70a920bcff9150e48141a9,revamped for normalized path handling and generalized resource-copying
0f2195bab1a3d40a9b00360463eef44f4f626c97,Doc updates for new resource copying.  Also 1.1 cleanup
06ef75bb59af6c3d245e7d63e23406f8329d3328,refer to README-11 for 1.1-related changes.
99db071bbb4a411152bab47701d8797a5582b108,"*minimal* 1.1 porting notes gleaned mostly from 1.1 changes.
likely to be replaced with whatever Erik does."
35f8ec4713ce264932c7b2a2a9c24e49d7d167ef,"JSR-45 and resource copying.
Still needs work for 1.1rc1."
ed52082f7c77f4b2e932b10e4bbe205a905226c9,Updated refs to 1.1beta5 to read 1.1 release candidate 1
93f9bad9dcfefa360e727ad37439cc06e1a37ad2,adding junit automatically for taskdef resolution
91b3008953a8899f916838477f5cb249280833cd,"now quiet, and fixed classpath wrt junit, tools.jar"
8d24b9102691a3cd0a14a28f0689b7d6332c8663,"changing tests to knownLimitation per jim.
Marking them makes it easier to summarize them for docs."
21f9d5a71fa19792e0268a97955efdb8bf5d7916,"Updated for 1.1rc1:

- removed ""No exception checking during weaving"" as fixed
- removed promise of support for
  - XtargetNearSource
  - incremental mode in Ajbrowser
    (did NOT add uses-pointcut limitation for ajbrowser)
- removed text polling for complaints wrt language changes
  - added as limitation: only one .. permitted in args
- added limitation wrt error/warning source context
- inlining of around advice now on by default"
56cc4f27afaf591f8cebb2450513cc6eb7d51299,"test and fix for Bugzilla Bug 34925  
   compiler crash on yesterday's rc1 build"
989aaf7855fdb2e4f176d6e7b32a3bd0131ee515,"Extended test case support to allow verification of compiler messages produced
during compilation. Added test case for bug 33474 (full source
location for declare warning messages)."
517d030a531bd6397c5f76ae3e190fe52175360d,Test cases for declare parent scenarios
8e31e9be0fe8c04fd6c1802a9262b9e1c00187dc,Test cases for declare parent scenarios - suspected compiler bugs.
e3ad8bbd021d8949bc2c45a2e1749cb1d720a195,"Major changes in order to move to Eclipse-JDT 2.1 as a base.
In the process of this many changes were made to try to make
keeping up with the Eclipse-JDT code base as easy as possible in
the future."
b8ccafa3158101aee6baa74a376c1cccaab28b90,removed unused dependency on jdt
c86f3046da25a70c3bf3d068db8a155d13dc74cb,"Corrected license.  To check licenses, run build unit tests (CheckLics in particular)"
21543acd0d5c22a31fda60c11114b84830b11698,"Updated license checking tests to accept ""Contributors"" as sole copyright holder."
17bf8c0fe746e751eee0f43feda6c1629c430d26,no longer expecting sources in jdt module
fc985209fc8002a141300da7f1c24d3177d03a19,"- a module now may be valid if it contains only references to library jars.
- a module now surfaces its ""exported"" libraries."
c17bf50311c2c9eaeace21bd7477acfb7e0e6c9b,"- if a module has no source files, rather than aborting, create a minimal file for the module jar.
- if a required module has exported libraries, add those to the compile classpath of the requiring module."
a31dd725917e9427e8540c6f8b3efe3f60c02eb6,updated build to handle empty jdt module
f11709f8bc26a053ff573039cc0b5ee887c005ff,removed unneeded dependency on jdt
e2af842ae7dbf3b0315a5f73d3d5ec9b7f041556,"folded in material from README-11.html
finally totally and completely stomped out ""introduction""
minor formatting changes
generating better filenames for the progguide
added A4 version of quick reference"
903ad7dfe7222aee7a78f216347167be1f49608a,fixed typo
8037b024f27b40024d5a8f7bd48b979e452af30c,added API tickler pending test
5caba3dbd869fe7941174f3b83392fc041cad6d4,"support for
-  forking
- compiler adapter delegation
- bootclasspath, extdirs, by putting on classpath (weak)"
e3113cbb19742d993b0f0e6fdad2611e31d4225f,"completely new adapter implementation delegates to AjcTask
and tries to work around javac source-pruning operations, with only limited success."
22dd8fcfbcb6f7ad1d7401f2df9ef205253437fb,added (largely unverified) forked compile tests
501fb83d58cf6921c4af42cc8bbae556561409ae,minimal (unverified) compiler adapter tests
9045d470089aa58a4c7dab743468d0206ad6dd68,added minimal (unverified) compiler adapter tests
6b4289dbbce933d8395f7519d41164ecee267936,.class file filter
41100015d21b2c236a30544464f86e1c97cecbc4,added compiler adapter example
2adae14d86ce7d85a0453067437474fe5ff1f2e9,"experimental options Xbootclasspath, Xextdirs, and Xlistfileargs, mainly to try to track javac."
9da3b4c2b56c1061beea60a562d5a572fcdfbdf2,"updated forking, adapter option"
0fd1e4e3bc99a6abc664801844a11f5c21adb7e4,minor new entries and 1.1final massaging
ede8776073e02cd3f891c20f7d93ddfb9637589e,TraceMyClasses added to compiler adapter
613a95a2dd3d468e6302c6068eefcff7dce2b28d,"don't keep track of bytes written to disk
this saves memory and makes testing incremental compilation more sensitive"
158aa9965f54666f662fd3da05d7bf0db85a6201,commented out debugging println
ed658901f46c3ef24035791a1e33b23ef19f854a,quick tests for incremenal improved
72b3c0a4539f77d1f287f790c1318d682613bdb5,extending coverage for [Bug 35593] Problem with priviliged aspects
560c7d907b590b207821a9a55f50b8de6aae22f0,fix for [Bug 35593] Problem with priviliged aspects
db88303198c38a91290443ba4347989b34be947f,commenting out accidental debugging println
901680409eced50d66a7910abc2f2bd85b6d77c5,addressing line ending issues and matching with eclipse 2.1 minor changes
ac764de72cd4ef15563bdc4f727da4ee63236d9e,"re-implementing support for incremental compilation after move to 2.1
this time we're doing it all ourselves rather than using the Builders which
have steadily come to depend more on having an actual eclipse 
workbench running"
3ede93fc5a7430db6d0601ec7cde1514228b6e7b,"Moving the latest version from shadows to modules.  The hope is that
this will now be stable until the next release from the jdt.core team"
af3c9f96769fd9a517f688e64706903dca63ade9,"fix for Bugzilla Bug 35688  
   ajc1.1rc1 fail to find types that are actually in JACK jar file and abort 
still need test case"
808bae83b3d5f37de4b39a2380db2782919a5f8a,"test and fix for
Bugzilla Bug 36046  
   inter-type declaration bug with abstract classes"
11b3b0740b66f1d962b5179ece2f2d23e88f040b,"test for
Bugzilla Bug 35725  
   Inter type declaration to base class not seen by derived class"
039d04d39da57d5ef47193509a364d9ceed9b98e,fixing declare parents problems
7cafac53213d0f7a7dbeb14cf30f0a2eb2090d40,adding -bootclasspath and -extdirs to documentation
a3fa54faf3fd88bc089994e2acd0b2c4ef642bb3,"fix and test for Bugzilla Bug 36110  
   IllegalAccessError while accessing introduced variable / 1.1rc1"
83a1b595e8199edc7e5f65f38d4b88aaf4238412,"fix and test for Bugzilla Bug 36110  
   IllegalAccessError while accessing introduced variable / 1.1rc1"
ad9f772a10e9a66d6b0239354904ac6e9d07186e,"- extdirs and bootclasspath not experimental
- noWeave has correct case
- better handling of list arguments
- better comments
- still largely untested"
71f9df23257aa7395a641ee0bf03e449707fd5fb,"instructions on changing default resource-copying behavior, and misc rewordings"
e89f28372e58e7bbc21a885e6a8663e8fb439493,added fork and maxmem
36068d403775fc290573c18c53865775158c1a1b,one /
5e4671ab839f3eea6a2747c0295a1b76472412ac,Release checklist
7fbdd52e8f5a4a24aa56468612a718b2ada7bf6f,"prevent div/0, NPE (by inspection)"
5d8dd96b88f02386f3c2bb587e4846a691b01d36,More readable API than comparator for common floor operation (semantics-preserving)
a1f90ec4260a3d328ac7209044ee34f72ed06d9f,@testcase PR#36673 privileged aspect main verify error
58a28cc314b170d0f9e3bfaffb8ee813829562f7,@testcase PR#36736 implemented abstract pointcut
7facf6b0be071b1267c36114cd0d9af218bdd197,"fix for Bugzilla Bug 36736  
   compiler error expected for implemented abstract pointcuts"
7dcc9481d1b2715459903e8c36b1c8b22cbbf94d,"fix for Bugzilla Bug 36736  
   compiler error expected for implemented abstract pointcuts 
(using declaredModifiers instead of modifiers so interfaces don't cause trouble)"
73ae16b4cef983ab0ba6995504cd4f00ecf98a22,"fix for Bugzilla Bug 36673  
   VerifyError in privileged aspect"
fefd4559fb4a9eefcf4528526ad2448b9a6e3489,"fix for Bugzilla Bug 36736  
   compiler error expected for implemented abstract pointcuts 

and for

fix for Bugzilla Bug 36673  
   VerifyError in privileged aspect 
minimally extended coverage for this bug"
0a8dbdeed13fe79ddfd7a291e2b45b50b9a90579,"test and fix for Bugzilla Bug 36564  
   Internal compiler error"
6c9118bfa40d75467085d23a3b0d103199e137b2,"tests and fixes for
Bugzilla Bug 29665  
   Inconsistant stack height"
f1d911e51803c8700edab71635036e95a968e68c,"a sketch of a test for a naming issue that doesn't appear to be an
actual bug"
a1a51eef8d3b8d38457a7be7c06208d62c88664e,@testcase PR#36778 advise join points in subclass of empty interface
90b260074423dc1fbafc3a33764606a58cb78f90,"@testcase try/finally in around advice (same as ...messy arounds?) 
Works in current tree, but not in 1.1rc1"
d850ca48e8696e82b319c5b17377d6f19df2b719,extracted classpath setup method for testing
887932498cd5bd1c88f5849a1244caa36f280838,"ugh. updating XML .classpath parser to handle any number of attributes
still does not handle quoted spaces or nested entities.  
Also updated for new attribute names in 2.1?"
79a151bdfd59b9c7c9a2272e13306b1a5215a3a3,1.2 call replaced with equivalent 1.1 call.
ac36f9cdf206a513585b17336a80e9e5cf6065fc,"gutted.  Should be removed once we've confirmed that it can safely be removed.
(not sure if CVS keeps history across file removal/add).
(tests run fine, no apparant clients)"
2b231e9fb3e1c1edbca2c28865e7e0901c98c0de,updated to reflect runtime changes for 1.1 compatibility
598c72655e13bc4f65d2e357ab645b05b69821ca,"expanded tests and fix for
Bugzilla Bug 36778  
   ClassFormatError due to empty interface supertype"
1e502f504f2ad333ad5627d8e9d106315c38ecc0,"fix and tests for
Bugzilla Bug 36803  
   BCException thrown by AspectJ 1.1rc1"
0557b906e87ef2179694dc919ad67b9fbf0fa077,"moving release testing list to tests/, added some old stuff.
TODO: write test-release.xml ant script"
92f36043baa4059b8707a81429a5e2f79ee7a2ee,fixed bug caught by unit tests
f236927770b4c1029e4d108c3991870609555dfb,"fix and test for
Bugzilla Bug 34951  
   NPE compiling without aspectjrt.jar"
8d793a3f9960f101a4cae59b959ce612f3fef4c9,"tests for
Bugzilla Bug 36936  
   Error when introducing members of type Class"
7d144321837cac05cdbe2a30323d670dfcc9809a,"fix and tests for
Bugzilla Bug 30663  
   lame error message: ""negation doesn't allow binding"" 
and
Bugzilla Bug 36329  
   The compiler crashes when using aspect libraries created without using -noweave"
9b30f9f9d9e55ff51dc6c05ee88e00c1d84c8abf,"test cases for binary warnings (bugs 37020, 37021, 37023)"
c5175f34dc5c7828d67dec3b790632cccefbe8a6,"Checking in Mik's changes sent by email today for model and incremental support in AJDE.
ajde has the same test failing as it did before this checkin,
perhaps caused by a regression per bug 37020"
25030e58eb29e7f0ac1cf029f2332581e1a2f21b,"test failing - node is java file, should be method execution main, so no parent"
f71ec00ccbdaa7672860d9bfb54454676f9ccdbb,not accepting directories any more
ecfb76ec939875ac0a30fa36fe395e21fc9069be,"- detecting unflagged directories
- !! changed warnings to errors, so now
  not compiling after command-line mistakes"
bddbc72c4d68028ace7d643ef4f6d6881f1f190f,"error-handling cleaned up
- usage printed once by caller
- any arg mistake is an error
    (i.e., not ignoring/continuing)
    (does not include list entries like classpath)
- refactored commands to share common error-handling code"
b20deaa24367bed3d3a245455be5cb039e425594,boolean hasSources() to validate after parsing
074b87b958d20b5704f53a6a618781e797f80eea,semantics-preserving - still only warn if aspectjrt.jar not found
52882bef3e9112f4a42016ba537cc1f6fbef5104,using Kind.isSameOrLessThan(..) rather than direct compare for inferring streams
ab1fa13080066b2d729bde837cc73bf501661cf5,track internal API changes
e59ad2dcee6e3ddc54dbf162079e311f9465d737,"With the restructure of the org.eclipse.jdt.core project, it no 
longer has a bin dir. Updated the classpath to include
jdtcore-for-aspectj.jar instead."
15443c9de3198fd610487f9711b986732c1b25ee,fix test title
c682beb5b39a795db3590f7a781ea960c1c48cec,error messages for undefined ${module.name}
f6d57acb9814d2365ec6ddd9ff290f201c656247,"Usage is now emitted as an abort message,  so AjcTask now ignores usage when determining whether to throw a BuildException after getting an abort message.  This fixes 3 tests."
a6f5de94db169038b4b74dbb9ac153748fb21cb4,"fixed two tests to expect addition abort message for usage,
and commented out one test because it does not add the file correctly (to a matching task)"
15c10cfc9c5a07535e6e3d445c660c0fbb5ce145,test case can't expect usage message any more
a5a8c8a47804cfeafbd545fc68888bd5a7a7e2bd,refactored batch and incremental into one method to make it easier to see the differences and do a fix.
29a878c9db483fd638805526a980f4e0a28b849c,added support for adopting global configuration values (without overwriting local values)
12862a3e8ee9ade2466d09c4f724337847977c5b,Making genBuildConfig static so it can be re-used from AJDE.
8f8628c4484d350a19ee797baea154f6fa722768,binary-incompatible API change to add methods for building fresh when in incremental mode
79dfdccadb09391f2697c26cc7dc4016e83fdc13,added flag for incremental mode
1330968bd7711d1090f440b4c25d762c96aba5f1,"- added incremental checkbox
- broadened size and meaning of ""non-standard compiler options"" to ""other compiler options"""
93cbd17f0ff4406ddd471c37519481bd1fbbd267,"- supporting incremental
- handling new fast-fail config errors
- better error display, no messages lost

Implemented new options merging:
- can specify any local config file options

- project properties and build options
  now can contain any options and 
  override local values only if not set

- have method to fixup the options for IDE's
  to enforce their invariants, but this needs
  to delegate to a new adapted API."
4172b282a73f694e7cfad4d27c8407995423ec1f,"- incremental support
- buildStructure test API now builds everything
- removed unused code from pre-IMessage days"
9e9421b22b34bc08c5086e975825ff2406db7535,using new IMessage-based API for sourceline tasks
ccf8e672a370fca1f058a01be36c7a3767bdfaf6,binary-incompatible change to IMessage-based API (using ISourceLocation anyway)
17905e81012551791f09719e797734c795f12666,static utility for detecting shift key down - should move
bc69606c36cc12f4fcf35e4b8bcb0302ce97d833,incremental flag support
b6d1b910e99b706e4e954e897b92ea014dec5e8d,"- making default filename static (access by tests)
- closing streams to permit better test cleanup"
be81a579eef4485384942fc8d34a39fd45dc632d,"slight rewording of error dialog, and correct URL."
632ce1e11ac421e2cdfbe51582ccf3f4968eddc3,support shift-key to rebuild-all in incremental mode
3bc503e4539c492dd8f1d06f03a729d3171320ba,"- using IMessage-based API's for displaying messages
- if a source line message contains a throwable
and the user double-clicks, this displays the error dialog
that permits them to copy the trace.  That should mean that
multiple exceptions can be in the task list."
30d1db184fd47c74014b1b87fc95e2d950d00c54,- IMessage-based compiler messages
fa2ef1c63f5ace1c92e2590b78d3e22bc3826007,"- IMessage-based compiler messages 
include the stack trace as tooltip text if there
is an associated exception"
f6663c8be91d3adc6a42caef76171b937f5b841e,"- IMessage-based compiler messages
- better toString for logging message lists"
e13844f01833186f4c0967d282664e744c4a2a33,identify source of log message for convenience
b0b9b68419808ef90dc6b31d051e6d859f3651c1,"mainly changed setup to avoid reading any existing user properties, which was  causing build configuration tests to fail now that all options are significant"
77c6ad9f84b6601cd05c7ed01fb2402497cddfbc,"no change, just nicer feedback"
5c379332682fe4dbc811c927e9c7a7ba89c99bb6,not using unimplemented buildStructure() api
2f1601c77612520094dd4428837a42394ea07bd1,removed printlns
a9823f122ff3c9322c136292c45c1f9ea7cddc0a,"cleaner, but no semantic changes"
50a7291088bb04a856e5cf6ff31606b86213b052,"Added easy to understand test for issue of Class.forName differences
between IBM and SUN's JDKs

Moved a nit-picking part of SourceLocationWithExpr to its own test that
is listed as a known limitation."
6f13b740e05074d74326294a5baa77db1dde215d,"Expected fix for issue of Class.forName differences
between IBM and SUN's JDKs -- not yet tested on IBMs JDK to confirm"
abe705ad6b4926e7c02cf49b3ba033c320cf2b60,"fix for 
Bugzilla Bug 37020  
   wrong line for method execution join point
(but points to first executable line rather than method declaration)

and

Bugzilla Bug 37021  
   source path wrong in declare warning on binary files"
ea84f573e50bd198f3412acffb7157e9d9b8b544,"expanded coverage and fix for bug involving around advice with either 
assert or <name>.class in the body

the fix for now is just to not inline such advice, but in the future these
should be transformed to inlinable constructs"
6d42cb250bdd315ca5f3ac7f8f3eab29c0d185c9,removing 1.4 API
2a0ce5da6e2839e21345f9cff3327038e40408db,"updated tests for [method|execution] binary join point detection.
added narrower knownLimitation test"
c562ca65e19051e7d12d8db63d49f13445b12e87,"- permit empty input to split
- split classpath
- check for array arguments"
85fd1bf2b7858c46ce39ad2c08fbcf2e7cb81212,minimal run-in-same-vm feature for ajbrowser
aaca8abb5e65355985f4cbef492d7e5e8272a1c7,"Updated expected bytecode to match change for  fix for issue of 
Class.forName differences between IBM and SUN's JDKs"
7e47f0f2fa4e805f11a67f953aeeeb3e959fcc3d,"added test that deprecation warnings are not shown unless asked for
modifying option setting to make that test pass"
aebd6651d39ba218431cd860d469ceb3d8063f9b,more progress messages for ajde
c5c5f44996f72d79a9c5731fb89e86f6b0ac7be8,"fix for
Bugzilla Bug 37152  
   java.lang.VerifyError: 

This fix needs a little clean-up and testing before closing out"
7fd85a690bf8d63cc96725a0185916b1672d043f,"converted to sourceroots, removed one test case"
d65c2ae14065d41e0d6e5d0c29cede9514299183,passing incremental tests from testing-drivers/testdata/harness/incremental
fafdaa404c28c821c3349e7d950afb6a4c8dd790,updated with requirement to use -incremental and sourceroots for inc-compile tests
bcdbd68f76629692a5e780702086bff96cdc4c7c,"fix and better tests for
Bugzilla Bug 37152  
   java.lang.VerifyError:"
c2564514669984e5b47ffe8d888dd48de219e05e,"accept ""."" as base dir in resolving files"
433ded040c0c8e9202d00729c5c69fd8748bb185,added FileUtil.Pipe
a92c5fb2c0a68517dff4fa22c1281c1fda00bc5c,"- disabled logging by default
- added tests for FileUtil.Pipe"
81493c4accba30a77ef90256387688283ab2a016,added LangUtil.ProcessController for external processes
f8c0574fd9b7da96a285481947a172de6cb0ce95,support both same- and other-vm runs using new using new LangUtil API's for running processes
3b2b6116ac9843de3c2ad194f9aaf7b148e9b7fc,"- added run-in-other-vm button/menu,
  unscattered run and build invocations
- nb: key binding broken, might need run-other icon"
daeab2fdfa7d44f73e841d149c60b9936458abae,out of the run loop - now direct from TopFrame to Ajde
cb022298aad081d5f87604d374042dc13d671189,"minimal update to test script to test running, remove debugger tests. 
Seems out of date; may try to enhance ajbrowser doc as basic ajde test script"
26de53341d46ed210b50e7837d4c10d0f83ebc54,comment re: using shadow file rather than enclosing node.
34d0434b16321faf8a08240704db3cdadbdb0b45,"redoing root to be kind [java file || config file] -- 
 was java file kind for config files."
11d2388cf977424369ede0047098222dd458bafc,"addressing (Andy's) NPE - null source location is permitted for packages, so I checked all uses for NPE.
Also cleaned up the code a bit.  Should be semantics-preserving."
779e49fb268f8e90442e5260289d882cfc945e08,"NPE guard - client of getSourceLocation only uses files - enforcing that.  
(ajcTests.xml -emacssym passes)"
721f2c00b04706d82c8abd0cb292b1dddfea89f1,"fix test - NPE Guard, canonicalize file input"
2d292e59136188f916dc45f61039c84487e7829c,comment regarding canonicalizing path for input
7d043c7a6303051f25f397b42c10fc42bfaccd9c,comment re: List children supporting ListIterator().remove()
d2cba1ffb6bfa8beedbd530fa0ec0e879da374ee,NPE guard
0e0671667edd7ca047ddd7431acd4d42a38145e8,comment re: canonicalized path
3a8bfd421510bdc0ab0c37fdb85936a38d8cfaf1,"binary-incompatible API for detecting whether any warnings exist, to enable/disable message display.
(should move to MessageHandler-based model)"
f500cc5cb546b863616dca8b98603bf19b14f71c,"use binary-incompatible API for detecting whether any warnings exist, to enable/disable message display."
4c00febe0b767ff8b466456c5d89e45673451961,"implement binary-incompatible API for detecting whether any warnings exist, to enable/disable message display."
a84d7d1a83f42c0e0724c7169a2369025b3a131b,added top-level xref target
5f076ff648f94cd9087cdc107c23615bcee7ff7a,corrected unterminated bold mark
370e5f6ad4e24f58edad4da82d64450457bdc248,"added ant tasks to the devguide as a chapter (rather than refentry),
converted ajbrowser refentry to chapter (to get subsection TOC and better pagination)
updated ajbrowser slightly, and
updated index page to link accordingly.

NOTE: links to ajc changed 
from devguide/rn01re01.html
   to devguide/ajc-ref.html

Leaving ajc as refentry is awkward but seems right since
it's a command-line tool."
b7cdfa1c98fa399d1892cd3b0a2c58008e0b6c33,"stateful config file chooser now starts with launch dir and 
returns to directory of last-opened file, per convention."
a85b7700e60c1072facc1118ceb52bb35563fe32,updating library per binary-compatible change in feb to make build check pass
f6bf3732056b6e8a384f1bd9a6e3b5af51a4b615,"ensuring release-checklist.txt supercedes 

  tests/readme-release-testing.txt

and adding some optional tests"
156e202b192837ed3241cb3837e3861ff224b1a4,keyboard mnemonics and accelerators
b50545ddf32db3927edb3283b75e941c73e9b9ad,"adding ant script to build AspectJ sources using AspectJ as a test
listed test in release-testing.txt
using spaces to avoid tab differences in release-testing.txt"
f19d5143d4427db03dc662c26811bb91267d465b,"- special-casing -help to avoid printing usage twice
- guarding usage against loading eclipse message,
  which it did if called before some instance loaded the
  bundle (which should probably be loaded in a
  static initializer)"
55508643c4cf0f239e7afe23055e37fcbaf93e42,"""organized imports"" to eliminate compiler warnings"
a4f95e725f2d2f7d5c231b3992a000d7fc9bc247,"creating a fresh AjState object whenever doing a batch build to make
sure we're doing a completely new build without confusion from previous
state"
acb1ee07cbfa338f10051351f539534ca67fa6d2,added harness tests (to JUnit test that is not included by default since it runs all the ajc tests)
8b0dbb37d3ccb9833f1cc8bbd1cb473f47a8964d,"comment, organizes imports (using 2, right?)"
ada92177c4823b55b7bc9f762e2a43472ab5034a,I believe this file can/should be deleted as unused
efd8b1a4c13bff978c43d1f30af455011ae5af0f,staging was not being written to XML.
b6948c529f5de1deb4319c3c3efe91a8bb8d81d0,"- new reuseCompiler option (but see inc-compile fresh)
- support for -ajdeCompiler, like -eclipse and -ajc
- resequenced xml output - hmm"
cc55e31fd1a9322318ebd95f9f8c5899ca9175c4,API for Compiler to reuse command
966bb389b8bc349cfdf675ec332e26cccbbaaedb,"- support for ""same"" tag, which makes no changes before incrementally compiling
- support  attribute for a fresh rebuild, currently implemented only by ...ajde.CompileCommand"
7367c59373eb402653448b551a72e9469af751b0,"AJDE compiler, supports fresh incremental builds"
4ac23da52722a24357c500c77cf8b25a824259d2,"remove !eclipse from aliases because it is the default
and it overrides specification of the AJDE compiler
(using -ajdeCompiler)"
16942820e9cc048725bb78abda772ee281a71a3f,new dependency on AJDE for ajde.CompileCommand implementation
eb770d8b1cc2f8a3c2ac3447f79971e0b84bca60,"new attributes:
- compile reuseCompiler
- inc-compile fresh"
d5ff44e9844b43087d6dbb0a5b5a0fb82f2f6403,"new harness tests 
- inc-compile ""fresh"" attribute and ""same"" tag
- compile ""reuseCompiler"" attribute"
e7a312263a14d8fe60b25c775174331b66431311,updated test-writing docs for AJDE fresh incremental builds.
8bac6711e5a9649b4f4810459c44a057b26dca6e,-killTemp to delete temp directories when each test case completes
6519e48d6e5aa4799c26a075638af3a5e1d779cd,"-keepTemp implementation: Suite run iterator calls clearCommand, which also calls validator.deleteTempFiles"
cf457e5880c719638b556cb5c1975b8edaea2d87,"supporting a forked java run provisionally with system properties specifying fork, java home, java, and bootclasspath.
This should enable running the harness when targeting a VM that the harness or compiler can't run on,
but this does not detect failures correctly in some cases,
nor does it validate any of the system properties."
d1eab260304ac2487799a75a3c77e29967e6e1b7,envp and snooping error stream in process controller
b72fc66cd2b55cd16398b65e9a64bb2666664b95,"moving to all-inclusive testing client for forking
(This might be wrong.. still verifying)"
fb1273571aa5fa5e89201997ae3eab916e9f0e3b,Minor updates for 1.1 rc2
96db9d89822e6f648fc14d708323da9902b161de,wrong handler reference
c522492213e630ddfe205a25a0907f31479ff292,"fixed bug for inferring the kind of messages from the eclipse batch
compiler where == -1 was used instead of != -1"
b564c8980d179a0ccbed40f9f4cf24c50b582bdc,"initial draft of release build/test script.
CVS portion is untested."
812c943083102add6057f7a057effd28dd8e3363,"fix for reported bug with invalid classpath entries (from the environment)
being reported as errors.  These are now just info messages."
1fd101b96d7c8a194be2227d517ae63f9c519f5a,"changing after to after returning, with Jim's blessing."
7f4f76fbb0730f6cab95c2f3b726dedb95ea9fdb,"permitting module builds without trimming, to have the option of using those jars rather than eclipse bin directories when running junit tests"
02ead59b1d554f83abeba979c036f6d5aafb896e,"incomplete update to support module jars rather than eclipse bin directories when running junit tests
the old way with bin directories still works fine."
840493548e2a110a56e2d01aa0d8e8b559acd748,"updated with tests, etc.  Not working yet:
- junitModules.xml needs better setup with testable jars
- cvs unvalidated
- ajcTests unvalidated - see also ../build.xml script"
4e13c68fcf0de360c2d83fe75c7e434169ae1732,"- removed invalid test requiring -sourceroots in the argument list.  They might be in a config file.
- handling request  for fresh rebuild during incremental"
81c05ad2acb34f3c3b59fbd5650f9780f464d45f,"adding output dir/jar by default to classpath to permit resolving types in incremental compile
Might need to be more discriminating and/or to document."
dd62db936c6a9c22f04d4e1bc754b1f6bc15b64a,"fixed testFileNodeFind that would always pass to be more strict
  and then fixed the file it was operating on to be correct"
35e6b8dd1ad6b8a683c6df2da2404d88d804e0f6,"Fixing Harness bug of adding the output directory to the classpath, which conceals a bug in the incremental compilation.
This change should have no effect on other tests, but I noticed two other failures during normal compiles caused by inability to resolve type names."
fe4bbdbe5de01c99364edb7e2354e8925198d099,"comment documenting keyword ""incremental-test"""
f871509ff1ef33d9fc660a2ebd9b81ae4313b07f,"two new incremental tests, each of which fails if run first but not otherwise (assuming the output directory is not added to the classpath)."
f51347e6c045584422b3adf0fc37645576c7b2c5,"Backing out the change I made to add the output directory to the classpath.
This is wrong because we should resolve types wrt the cached classes in the weaver.
But if this change were left in, the test cases just added to ajcTestsFailing.xml pass."
d74d7bfa222e384f4fad1f01d5ea27f209677fea,Added persist member.
76f6b9a3004bfbfce6c5452a2447d67948e7c0e4,"fix to use cache for isPackage method (as indicated by previous !!! comment)
this fixes the two failing incremental test cases just added by Wes and now
moved to ajcTests as passing"
845cb02fae070fede825d0359d0395adab4aa052,"handling Shadow.PreInitialization as a INITIALIZER_RELATION
rather than printing a warning message to System.err

this fixes the dirty output that was very visible when running the
harness with -emacssym enabled"
ce5009fc996ab8894afe3530754d8e22e6a8114d,"changed suite spec from ajc-test+ to ajc-test* to allow empty suites
so that ajcTestsFailing can be empty without looking scary when run"
8bf75328bb36a996f6dc14354afceca2611a677f,"moved incremental tests from failing (since they now pass)
cleaned out contents of failing that are now in ajcTests"
280bf74b25e05263c951db4a19e5a025b639cdfc,"new attribute for compile, includeClassesDir"
87976a4e61c4cc4e9801e292566e96e2e5930757,"Another strange incremental test, taken from ajcHarnessTests
and comparable with a known limitation case for injars,
this sometimes doesn't fail for me.  hmm.
(requires pending changes to sources)"
da04b7f9644af27fc8d1e1920936b2916c7471d6,test source upgrades for new and old tests
dcc9345172eae7f52a59b6c99cabcbb39da5f03a,"- test compile includeClassesDir attribute
- add pass|fail title prefix to run in one go"
84908b0fb71ad81f0a63f0b19f53af6bb9138558,including new attributes for round-trip testing
0b4a9bbfe1153c5ae326b4d05292e21a89cb3f40,"Deleting temporary dir and config file, like harness -killTemp option (ignores -keepTemp)"
96d6206ea3cc4d27a1766a1a61de3e580bcc004a,"- platform-independent relative path
- compile-time checks for new attributes read"
e1ceb70b99f1d6eb91ebdb177e24b4ba57ce8570,includeClassesDir
e9a12030e72b0cec46d5d8d1833c68fe27161180,includeClassesDir
1330fc6ce3e13ec7f816e651fd51a89bd31579ea,"test for Bugzilla Bug 37325  
   Weaver fails with NPE for very large source files"
d6123b025e87aa5033e420515cb61799b6d8ab27,"fix for Bugzilla Bug 37325  
   Weaver fails with NPE for very large source files"
4610878f726bc119a9e0af2713bbd18bddbdb9d7,link updates for progguide id filenames
faa4b6de8e2efce52829e7807c9bc0271193e06a,"old dominates form produces an error, not a warning"
86f83fc9a36cb92e97bce4b4f9a2db8eb37be0a5,Fixed link to Eclipse bugs database (was dev.eclipse.org/bugs now bugs.eclipse.org/bugs)
4a60f6be167e8c7d5788aa5f62eef434579796a9,"Fixed relative links to docs (was docs/index.html now doc/index.html)
and examples (was eaxamples now doc/examples)."
353104a29f13a64f292192078c31fbc9a7d0816a,Fixed link to Eclipse bugs database (was dev.eclipse.org/bugs now bugs.eclipse.org/bugs)
d7b0104b5e149cb9a5f907acdbd0a5d08af275d4,Fixed links to Eclipse bugs database and to mailing lists.
70051ae5b78edb068964da3e4a7709055f9fbd53,Fixed broken links to bug db and IBM sites.
22d24313bc96f80cc656fc05d73896f8091e5eaf,Fixed relative links to examples. This time did it properly.
13112ba2cd7401eac88b78e0fb886384e4718170,"Disabling test reads from user preferences store.
This was discussed on the list before rc2."
fed9393f832e8bd8da2cea2a4e55c6c49a3c2b39,"No functionality change.
This just makes explicit that the browser reads user preferences
rather than relying on the default value supplied by the default constructor."
99f5c14fb0df142b1e25361a7ff3951a5a6d4d5d,"Fix for taskdef bug 37576
http://bugs.eclipse.org/bugs/show_bug.cgi?id=37576"
d3a0191c44ae6711d880d34eaffd6797ae857b2b,misspelled local invalid option in negative test
58570a499ae31b5774352910d5927e1ea5245fdb,patch mentioned on the list for detecting errs in incremental command line
0544260aeabbb24c8757d341894df4f5148c4ebb,- using easier list view of messages
5599770fed0b787e48efe3c840d12959eaebff3d,"- new filter to remove arbitrary elements from diffs
  (used to not report unexpected info messages in diffs)"
3527ce95d12822f9b6374a808e668476f22e713f,"- revamped message comparators,
  mostly adding medium-level and consolidating
  common code"
446bc2deb6df4a2e058b31a4a4f65aa796d90633,"- absolutizing tempdir path if necessary
  (bug in path calculations otherwise when
   using relative path to work around failure
   of File.getTempFile())"
1a31bc480c60a757e7a8d5b3370bca2829af9be5,- supporting parent badInput in XML
5ab90271776b49219905ab2c3a4b8a7be487b3a7,"- supporting parent badInput in XML
- supporting new AjcMessageHandler interfaces"
4f319bcf174195f75bb8b188497041c2beff5973,"- enforcing -incremental => staging
- permitting bad input using badInput=""true""
  (though still checking during staging)
- permitting -XserializableAspects
- supporting new AjcMessageHandler interfaces
- supporting parent badInput in XML"
9a670620f2480b1027bb07d4885dcce538f2d36d,"- supporting badInput for all IAjcRun
- using IMessageHolder rather than lists"
ce932df2bfd2e95ed7ab5083e32866f06db7fd6b,"- new data (IMessageHolder rather than lists), same algorithms
- using medium-strenght message comparison that includes soft
  comparison of file and text
- unexpected info messages not marked as error
- expected FAIL+ messages suppressed to avoid false negative"
5702c144cee3b5140dd47ff15e772a04493bb12d,stricter test run comparisons
5566313138d1e76383032898098e1a4305810e35,"- adding badInput attribute to compiler
- adding message kinds (abort, fail, info)
- message line no longer required"
e0399985b4ee7d28ff1bf525ee114b25bd2db46f,two bad-input tests for the harness
5bc48d3686ce24cc30ea836bf7b6977985440805,test data upgrades for adding new command-line error tests
dbaadd74fe2d5c8a7945fb66fd810a1cd4d5c189,"- correcting message specification of existing tests
  using file and text comparison
- adding new command-line error tests (and keyword)"
e9d4caebf640446c7da52166a8004497fb1df8ec,raising issue of reporting source location for constructor execution as starting with the first initializer.  Possibly a known limitation.
39ae7eb50e43acfe91d5fefde79b1300e90a54df,"- now supports both eclipse bin dirs (default)
  and ant-built test jars
- added incomplete test-all-at-once
  (currently runs each from its module directory)"
9e7320338b4af3f448ba4be0e9f3b428bcd89117,"variable renaming, verbosity - not much significant"
c4abfaeb95f8ee157dc5efa69c510cafd1e3dfd5,"Testing now seems to be working (tested incrementally)
CVS and entire-run still not verified - takes long on my machine."
186e403f568546b160a93e216996dad148f5f9a8,clean-jars target
bef3169a67e33bf3925f8741be1aefe9448f4bab,build-testing-jars target for release testing setup
93fdea6a045967c3ff08c6408a6dc7fca87c46d1,"absolutizing temp dir path.
When File.getTempFile() fails, workaround temp dir
is relative, which messes up the zip resource copying."
1972b16473625b96a2bf419ac113f5923f0c7093,updating for installer temp dir fix when File.getTempFile() fails.
1945ac7ed08422066ef424810ba012739ce0f934,"defensively supplying ISourceLocation.NO_FILE when there is no file in the result.
This is needed for file-based message matching to not fail when no file is specified,
and might provide a more sensible error message if the file is used.
This only replaces a NPE or invalid (empty) filename strings."
fdb0bc4450fa4dd76b3f2451f5677a7d04fcccfd,"More message-visiting methods, used only by harness now."
63f611b137a41583879e2dcd50480c6212066890,"- tense, xref usage corrections
- structure model caveat"
8463bc6ed6ac00e71a09b9a3738c3aa5619f529f,"- typo in top-level task
- incorrect pattern to copy all junit reports"
2072ac11448e493e26ab7ff818ce26c6ef33c19c,"fix and test Bugzilla Bug 37739  
   Unexpected Xlint:unresolvableMember warning with withincode"
2ed2ba65b2e99e5e11f675d875c23fac67a51021,"added test for Bugzilla Bug 37304  
   public static fields being ignored 
this test is passing in 1.1rc2"
80c43df23f0870fed4eb57a079841b5bdf21df06,fix for NPE revealed by BcWeaverJarMaker test code
c552c812c2d82e4d5668f6194532179a487adc95,expanded test coverage
f8647878b30aa303580326a67e98c75b0dc553b1,better error message for trying declare parents on Object
08a39ee25d3edf386a3dc371bbe9dd42cb97eb7f,changed jars produced by BcWeaverJarMaker to increase coverage of tests
fad36b98aaef028c7678206f89a0e8178b360030,added paragraph for call site implementation
db2886b91cdf010e729f5be3210b5abcfe73e4f0,@testcase PR#37898 advice on handler join points should not throw unpermitted checked exceptions
c61c9ee7d9b8e1bc54e5090715820e2e6d56027c,forcing target to be 1.1 in case someone builds using 1.4.
74d28dec79177fe05c0280f1caeed78738e5053b,flagging with comments that 1.1 options are unimplemented
2f3821f60a834081dc35ec5f69691a7aff716a80,forcing target to be 1.1 in case someone builds using 1.4.
2b2c99e671577d96af2ccfb9ade2483dddf582cf,"test for Bugzilla Bug 37758  
   Weaving rt.jar results in stack overflow"
556537033f794d632baccf560a06414755b58381,"fix for Bugzilla Bug 37758  
   Weaving rt.jar results in stack overflow"
ecd16dfcee71621ffdf08369aaedb11a6e5f573f,setting classpath for out-of-eclipse testing
4df5ab03ae3d0aa7e0c1ea32f3f800cfcdca52fe,more/better junit tests for AjcTask.java fork when possible
796b0ac27f089df3c9d11b43b444769f59fbe4e1,"updates mainly to support maven  but also to support new ICommand wrapper for AjcTask:
- findToolsJar now accepts versioned jars
- supporting a forkclasspath to permit user  to explicitly set
- upgrades for testing
  - so multiple iterations work,
    - not altering cmd in execute() 
    - only fixing up outjar once
    - reset() complete 
  - so incremental compile tests work,
    - passing quit through to main

- when forking on windows, use javaw rather than java 
  if possible to avoid popping up a console window"
39e055caf22f4e277606b3a54f4308cab22da41f,"updated implementation for -ajdeCompiler.  

replaced reference to null ide properties adapter (defined only in testsrc)
and created logging proxy to verify API's used.
Unfortunately also formatted code, so it looks like there are more changes than there are."
7e3b3f9016cb0ceb3a15bb3fab1669e34b1a0ef1,awful downcast for AjcTaskCompileCommand - should be remedied after 1.1 with ICommand interface extension
fa54cdad52ea4870b467f91c20631769901b2921,supporting -ajctaskCompiler option with AjcTaskCompileCommand
7b03d87e94b49bcd252b758de144f8ce3ffc0c14,ICommand adapter for Ant taskdef is simple for the non-incremental case and ugly otherwise.
e5436c850f729bf90d3533fe6fb2144ef406bd6f,Tests for AjcTaskCompileCommmand adapter
8bee39694d3b5a098024f887bd178b14a443e19b,added taskdefs to classpath to support AjcTaskCompileCommand
dd07fb818bd05c9c169a7ca1b757a9601cd0bf90,documenting -ajdeCompiler and -ajctaskCompiler selectors
5afb6a743ae0f722a672140ff6c4296fc904e2b9,"To support the new testing ICommand wrapper for AjcTask, permit ant.jar in a testing module (ant is omitted from non-testing modules because it is normally deployed separately in ant/lib/ant.jar).
This does not affect regular module or product builds."
58e2610e99f2986937656480e8343ba4c2698e8e,"Better BuildModule tests following ant.jar updates.
These now build with assemble-all off and on, and
tests were updated to check by running classes."
e782ccc04214649b21882474a8c71f6393d377cb,moved a command-line-driven test of classpath variants here
fcc0a6b0673cabb565a007e73ef111377cf45971,-noExit to avoid stopping a wrapping ant script
dbb235342768ccb4e638ac7525caadacb22db7da,"no real changes, just better docs and an (untested) ""all"" target."
05000eb955fa7a74fae95cf5d4c35ea5f4d9650b,updating build.jar to bootstrap changes to permit ant.jar in a testing module
1313eacea5fa3f240eac2f38d892a8b887ebc9ea,"adding harness feature to select tests based on their title (description), reading from a comma-delimited list or a file containing PASS|FAIL lines (from -traceTestsMin), optionally restricted to FAIL."
5dd34ad8e4567687c774a03587bdd2a2338639c7,suite files now constrained to be readable to avoid confusion with -ajctestTitle.. referents.
265e9d63e96947f0701d5a8ea81218b940a5ea21,tests for new feature to select tests by title
9bf93f948ce3413eddcb4fffad6daed5a416f628,updating harness documentation for new features
c42224c41b7e8a8a7212fd55f5d5caea8cb1c76d,"fixing 2 bugs disclosed by running ajcTests.xml with -ajctaskCompiler: (1) compliance set incorrectly (-1.3 instead of 1.4) and (2) warn:... form was ignored.
These would break only when running from a Javac compiler adapter and using <compilerarg>"
5692ee0c837cfe5f9e4cf8cd0e53047cb95c2ddf,better logging
995364f04e270121b0b1c229e6047c7b2823f3b3,"fixing 2 bugs disclosed by running ajcTests.xml with -ajctaskCompiler: (1) compliance set incorrectly (-1.3 instead of 1.4) and (2) warn:... form was ignored.
These would break only when running from a Javac compiler adapter and using <compilerarg>"
9c8be5897d3d19564cf7401b42414e49dcc816ae,"delete, close, and isEmpty"
85cd0a0f9b211f7e7239194bacd68f12aaff42bf,"Fix for failure building with useEclipseCompiles testing-drivers initially (or any module that only indirectly depended on jdt.core, which has no sources)
- better logging
- checking zip results - returns false positive for empty zips
- compile(..) API change for adopting classes"
815f083c7b2b394fdd862428499dd75444e700f8,"Fix for failure building with useEclipseCompiles testing-drivers initially (or any module that only indirectly depended on jdt.core, which has no sources)
- better logging
- checking zip results - returns false positive for empty zips
- compile(..) API change for adopting classes

Also, copyright clearly wrong - file created last fall."
7d9d56d23ec00e6721265dbe283e3a6f9db17045,"- better logging, temp dir, deletion...
- using build.config system property"
997b35f0d70f3f9eace44f6245c144cbecd2ee07,added keyword knownLimitations-ajctaskCompiler to the one command-line test that won't work with that wrapper.
d5fb5792dde297d8b21c3538cc871d3d26f1876b,harness copyright wrong - was created in 2002
5ca7486fb05c879a1741928f8fd5466545232bd4,documenting options
fffed25e1966af8b5ea57fcc7aab7ff012f4af76,PR-based queries were dominating - now do union correctly
b5e058ad1b653af39b2416ea6c9e02f3dee1e07f,"better harness availability, control -- untested"
1552a7963dc59a99aa3a888a3925ed8e6e01b031,incorrect log file name for harness tests
11cf57eafef7855d931f58793aa7fe6a3ae76179,addressing different results under 1.4
c9f7a604ab3fcb9c8443d723184cac70567a1075,"fixing fork bugs:
- permitting fork in incremental mode only when using tag file
- pulling aspectjtools also from the task classpath
also failonerror default was not true as stated in the docs"
11c67124a2f9a01214a91165d36c9a7bc512052b,test checks that setting warn:constructorName works
3975200a2d206410728867ba77d5bc2e8ed7921c,-Xlint:{level} tests
ea3cfbe1a68dd43168d7ac8b24e41379c9917b67,tests for setting message holder by class name
064e8661e65cf9518e9d6afedce3ad696c247d49,muddy caveat to JSR-45 comment
44424b14e61b24ea0b89934d2b0107d1406d8232,more parts of tests for devguide script example
e289da390eb3c1dbc3789d53d0ee19fd5771d4a2,tests for devguide script example
34e71349683a530fecee85d36bb3107f9e3eb20c,"Ant doc updates
- forkclasspath
- fork option classpath and conflicts
- added maven section"
c6aba460751865ecfe1ccc2bcbd983f96fd745fa,moved knownLimitations from ajcTestsFailing to ajcTests and labeled with keyword
d43889dac2de39e87071dc9ff32eaf630ca6b439,neglected source
c509c6f751a553cc85d0210a408681f4f3ae05cb,"fix and test for Bugzilla Bug 38131  
   ajc needs -d . option while correctly compiling classes from subpackage"
b8f6c48800b7dfb6b2da0fb61a9f6b721b20fe64,moved tests to ajcTests.xml as passing or knownLimitation
6f69422b5b935c1fbaf73dc8768e41c85991d1ae,"slightly better error messages for Bugzilla Bug 38168  
   insertion of lots of advice code can make branch offset for if too large"
594d612882406850b607e871f31b7cab606e6710,"test for Bugzilla Bug 38168  
   insertion of lots of advice code can make branch offset for if too large 
test entered as a knownLimitation for 1.1.0"
93240873fabbdcf44a7c8f4669130f5e9c058868,"- caveat for -nowarn per bug 38134
- documented -warn:none, since valid and used in -nowarn"
213a8a33e0758d72e01433216f067a105e3e44de,"permitting ""none"" as a ""warn:"" entry"
affe9d1fba08d76b42402f3f0925fb2a2f839b01,keywords knownLimitation-ajdeCompiler for correct but different results when running with -ajdeCompiler
b61400e110b17075175d3f468f3bc36d20bc1442,no-op files to avoid CVS pruning empty directories
5b02912cdc2f785de337ceedcac1c4ee4e921eda,"needed two ""expect-fail"" keywords"
a0d2d2d0de4ab0e67a714d3fec46d96b268ca1e4,"Script is usable!
- lots of rearranging and cleanup, docs
- now doing 1.3 and 1.4 testing
- more harness tests (some unverified)
- workaround OOM in examples
- cleanup after building-aspectj-with-aspectj

need more integration with manual process"
333ed13ecac59cd07c2356153b6e0e4204792cd8,"Bugzilla Bug 38212  
   can not resolve this member warning 
This test currently passes, and therefore must be missing the bug; however,
this is the closest I could come to the bug as reported."
5a602c6007df9e46fefc1386fb88dd13f5c56ac3,"delay until after final last-modified-time stamp on newly-staged  files
since last-modified-time stamp can be delayed by filesystem buffering."
fd8f53ceecda3faf75175cf8584287bc4ca4f37c,better info/debug strings when JavaRun fails
edf8758cbac5ff622370778ca3821b257aa70acc,"better info/debug strings when JavaRun fails
(also when status fails, not just when command fails)"
1dfd90af588d2a4661b22494b2edee4512d3475f,"delay until after final last-modified-time stamp on newly-staged  files
since last-modified-time stamp can be delayed by filesystem buffering
and rounding-up to next second."
c0e83963238f63717f6150e99eafa6b856718359,"- fixed keyword for ajctaskCompiler tests
- disabled ajdeCompiler tests as hanging (swing thread?)
- added pass-through variable for aspectj build properties
- now testing for Testing module tests, 
  to force fix for testing modules not getting test classes"
c9570cbaa85e519368cc080079b4327f12f539d4,"build of testing jars changed slightly.
Have to build non-all testing-drivers to get testing classes target.
Relies on updated Module.java which trims testsrc but not testing dependencies for testing modules."
d7834ebd34f044a273b5234ff98e76e9c4556121,Trim testsrc but not testing dependencies for testing modules.
2e7f94f0280edf0ebad6ba9b6d0a1f3ee5e1a90b,bootstrap jar for trim fixes
fc011ca05ef63f2c7a42d64d738936977380ea28,test suite for example code in ../docs/dist/doc/examples
02a2fdd335bd206c30a11e1653795a704718486c,tests harness' handling of code calling System.exit
dd76d2fc194461656360c5cdd6ad0769ace0184a,normal validation now fail if an Integer result not of value 0
101a5f0a47d9ef664d54bd92d90fd0accb519339,"Added SecurityManager which halts any System.exit() call from JavaRun thread and puts the exit code in the status object.
This enables us to run the examples."
24bc172c62d1ac2211c460567e166e6ada77c43c,"adding examples, without testing from this script.  bad."
b5256c97086bbeb8dc7a61734c76c954bde2fb92,harness system.exit tests
f34c03eff62dcc70981cb8bf74a428e1ee6164d4,better unwrapping of exceptions
b6cdbc92699f3226cb8488ada7f347f6972d80b5,Expanded error message to make it clear that it is coming from parsing.
18b5821c73104c05477e47f75e566f1854edaa92,added output snooper to ProcessController for testing client
ad708998c210421ad40c8392856980c16047b70e,corrected property name for forking run classpath
46323d9c1d74bdc6053cd1db8084974004e512f7,"javarun attributes for interpreting error/output streams as errors,  used only when forking"
739f2aa1bbd2b98a21249458929c62fb1b91aa94,"former version was built with -target 1.2, so it has a bad major version when running under 1.1"
e76e67fddf6081780c06faf9b602de5296f82769,"updated for testing 1.1 classes,
(exclusive of changes to 
 docs/dist/doc/examples/telecom/Call.java)"
e82e02a571325c67027706571995ca8df97ba035,"added test for Bugzilla Bug 38345  
   VerifyError, Inconsistent stack height with try/switch/if combination"
51a1d1d56a724dd1f9f16f184d72fa399d65878c,handler after/around advice limitation
281aa146422b25e52315a2e908b37a3f9a8f3144,1.1 updates
2a520d85bd24661523ac4d34d8daf588cd3f9286,"1.1 doc changes
- moving readme's to docs
- finishing readme-11 as change/porting
- misc..."
02aa6df64d9b50e91e7e5d32e450056b7bc4bf55,moved to docs
1aa6ce7834c0082d34e1ef84c0cef8ec68d84926,link fixes
d4c94d0d5484fc8fad9e99a1f5ecd02cc251bf1b,quick and dirty link checker
5a4f6035170bc8bfd5dcecdf2b7e588bc2b380f8,quick and dirty link checker manual test
6e1f029f26b08f3b197c3c4bf4b4b3a64e63478b,adding keyword knownLimitation-run11
eac6e3d221f2d1252f5352c8964e5f2ce2c3a1f8,"- linkcheck
- 1.1 examples (disabled pending hang fix)
- separate examples, since nonGui goes OOM under 1.3"
e9bc52dced2b0482796924bb0e30a8685cbc004a,"change only in comment echoed to output, listing expected failures for the link checker."
331f1508f81f8678bae296d6c67af9e75a17adbe,Updated for 1.1.0 release
9938d34703ff325101c170f3d8dbbcd43877b187,Updated post 1.1.0 release build.
2e3c9191a9cb753ff54cf20592dcd0ef14bfc83a,replacing 1.2 Vector API's with equivalent 1.1 API's to make telecom testable under 1.1
ba41fae6547688e8714d01be27bc81dbbe850f55,"tests and fixes for two awful error message bugs:
[Bug 39458] New: Compiler crash in ajc 1.1
[Bug 39460] New: Missing import crashes compiler"
0e3c87c56d6120afa0bb0db602a73b473d23b04a,"added test for Bugzilla Bug 39462  
   Compiler crashes in jar and cflow"
8d5101c858324f957b8deed851742b2dc322a45a,"test for Bugzilla Bug 39479  
   NPE in bcel.LazyMethodGen when delegating from one ctor to a second that includes a switch."
49d7ef4d392a412e5dfe5375d18935c38e7a63d9,"Fixed bugs introduced in 1.1rc2, where cast of message was incorrect."
461bf788adbc4e7740202ea4c1866268f312d4b1,Added safeguard for missing 1.3 setLocationRelativeTo method.
cc57abb7456100c16eb009707293d41d1f760db3,Finally adding some design docs (after 4 years).
7d44a8a3a5014d65eee923b210e378049e3407b2,Updated module docs.
1f6ba6912c9f36f96866541c02d4cf3270b90e29,Removed project dependancy on taskdefs project.
e447d254c1c7f9ae3fa35530a10206a58aa60881,Updated dependency list.
ca5a31135689b903e347492b836257fc5735fdf4,"Updated modules documentation.

Added ASM documentation."
d45323de72f326db0a09660f8e5c792ba840853f,added caveat for around advice on initialization
e591cf555d3d40cbb52c0e84448bbc535f1b745e,"surface "".."" form for some number of arguments.
I'm using a different version of acrobat, so this might
cause problems."
87b6b294625c5f5949e9c2ae206364b90a651f11,"minor updates listed in the ""recent changes"" section."
cd9946a959b393d386ea893f007b9cd2adbac74c,"looks good.  fixed ""org.eclipse.ajdt.core"",  
added how to build, jdt.core patch/sources"
13b319a40f353f3c07eb0a7c4a40f3e3f6381573,"Fix for Bugzilla #39479, #40109 
based on patch contributed by Andy Clement

Generalizes the patch with a method org.aspectj.weaver.bcel.Utility.copyInstruction
that works-around the bug in Select.copy().  Changed all calls to
Instruction.copy() to use this new method, would be nice to add the
rule:
   	 * declare error:
   	 *     call(* Instruction.copy()) && within(org.aspectj.weaver)
   	 *       && !withincode(* Utility.copyInstruction(Instruction)):
   	 *     ""use Utility.copyInstruction to work-around bug in Select.copy()"";"
3b901c094e39c38cf9c3dfc8b3ac55434125ce97,"added pre-compiled .jar needed for Bugzilla Bug 39462  
   Compiler crashes in jar and cflow"
6eb482dface852484db89a30103c64cafbc181b4,"added ""| .."" to args for method and constructor pattern in the Word source file.
Previously added to the generated .pdf files
(I can edit pdf files, but not generate pdf from word)."
501390c0fb1b93ce1f50f3df4fbdd55e76ccb39c,Re-added taskdefs dependancy for build system.
1b7a01f060c87d1c5e3897e5090b3939c3730cee,"Updated ASM docs, added dependency to ajbrowser in modules doc."
6b1b7020c5fd4ce453906eb577f9a66ace5f3bd9,Started compiler design doc.
ac131250d1c86e10053603c3a07445ca147a6978,Improved name of compilerAdatper private.
2ff97f0cb94ee091962c46a6c911acfcad24f004,Addes support for JDT's Java options map.
3bca65cc0bd3c3d5763b315b3df0baa4327b78b3,changed default compiler behavior to ignore unreachable code (matching Javac)
b36560b79b17199ce35c09e548396b34694a97a9,Added coverge to LST file tests.
b5e148fd6046e283b1c7c9f67e18fa0d6bc33f6e,Added coverge to LST file tests.  Improved name of file opening method.
27ad07f5c1a4ad27fab06e1ebb91874355d90546,Minor fixes.
026b2728aef846823419ebffceb57fe8161e3d15,"tests and fix for Bugzilla Bug 39993  
   ajc stack trace on declaring hashcode() method in aspect 

added extra error-test for using super inside an inter-type declaration on 
an interface with multiple parents -- the correct parent is either
hard or impossible to determine in that case"
9894a3d4826ef3480a53aa7cd8d86804af3f1fdd,"fix and expanded tests for Bugzilla Bug 39462  
   Compiler crashes in jar and cflow"
54a8e9ae3854be8bc202eb55fd1c4e0f735bd424,"added test for expanded version of Bugzilla Bug 39711  
   Class Literals as non final fields"
a1bb5dae64e5e5bc3541d426d9a160ffb5fbec35,"added test to try to investigate size issues, but can't reproduce for any
number of loops in BasicCommandTestCase.testSizeChanges()"
a1209dab6e3eebf46812e07fd698b4920d54d1f6,"added test for Bugzilla Bug 40589  
   Default method impl for interface causes internal exception. 

test submitted by George Harley"
6406a55ea065ad3a099b84282addbf986945f20c,removing file intended for personal use
d5ea336dac0b484629f6453afcc7b271446732d4,Fix for AJDT bug 40380.
2449d4b0a040928d688efb366d32297415dd25f3,*** empty log message ***
fc3423e80f0640cd1e72e0f8f0efddc98f86793a,annotated traces of ajc compilations
01b77ac07d292a8bdafc9c10112f4f89bae204ec,"moved to 2.1.1 jdtcore.  Updated our code to change one call to a
convenience method that was removed.  Updated tests to enable the
test for the horrible switch bug that this fixes."
8060fec634b2f790599cbb71e660d8a0c2231e43,"fix and moved test for Bugzilla Bug 39711  
   Class Literals as non final fields"
5ee9aa2f1ef450663f287986acc870994c3b26db,Adding ignores for AJDT builds
bf88b2e2010e79a1998d26798236b00e978bb88d,Initial upload. Only a placeholder for now.
bcf8d044c05fb716e1161abddd18da04d2fc2364,Added BCEL API rule for enforcing use of Utility.copyInstruction method in order to work around a BCEL Instruction.copy bug.
bbd832b4800bc0d7c54d65b2d9d690316e97c6a6,"Fix for bug#40771 

De-coupled AJDE APIs from javax.swing, and moved browser-specific funtionality into the the ajbrowser module."
ff93d3438218b803b0b6af80e27aec884f54f3bf,Ignoring AJDT-generated files.
819bf9673845f57d744df90c6944ad86a6acba46,Refactored singleton reference to be accessed via getDefault() in order to be consistent with the rest of AJDE.
ee142f05543340b072f2975d174c3ed340b50589,Added license.
cd1ad650b8397ac72ed3e712bf2314fca8e0c17c,"De-coupled AJDE APIs from javax.swing, and moved browser-specific funtionality into the the ajbrowser module.)"
e49c9eb667399bea490f88462b5e880fb2028539,@testcase PR#40805 interface call signatures when declaring method in aspect
2502ee5106921a6947e3470d08e30a0734a4d805,Fixes and tests for bugs 39842 and 40807
56094d51e65add9b2524dbb440a223e6904ae993,passing tests compiler errors when  abstract pointcuts are outside abstract aspects
d664b142eccf8edbedc0e454e838bae269ec1417,@testcase PR#40814 compile error expected for pointcuts in interfaces
971bbd63ef485a8c72527f8f8271d828427e7198,Using to force a build.
28678b503ad4fa36162180a01eb59e4c1cf0faf0,Using to force a build.
3aecb2745ebaa24c3f463c473161f2c1eed83f03,Using to force a build.
10fb3c602d53d02377e80b45687cbbf0096d71dc,@testcase PR#40858 weaver trace on mis-qualified pointcut reference
d5a63db3a0bfca32ef54e82685179894db10c327,"@testcase PR#40876 subtype-qualified pointcut reference
(ClassFormatError)"
d203b7fbc03f2a4d6845baeaa653dba6c6e4d55f,Deprecated singleton API.
579a6d779f41e89318e5549657058d9008857863,Added sample for extending Main to collect joinpoints from ASM.
b2d927ffc0ab5e8066c5b97309d0a347a8aa5f1f,"This problem occurred when a command line compile did not specify a ""-classpath"" option.  In that case BuildArgParser loaded System.getProperty(""java.class.path"").  However, in the launch script aspectjtools.jar is already added to the VM's classpath.  We remove all occurrences of ""aspectjtools.jar"" from the detected classpath.  This should enable bootstrapping ajc."
58e3cb226a2afa23134b75acecce617e5b16f781,Fix for bug 40824.
bdf332c2ed9e2fe6ca4592b0f05c4305c0a751b8,"Exposed message handler as ""protected"" to clients who may want to override."
ee03a3e557204184380193807326d1131c1f2777,"Added test case for bug#39959.

Fails because classpath is incorrectly set to include aspectjtools.jar (by the harness)."
aab8f36a22d0ac267dee63f4137dccdbe83d3559,"fix for Bugzilla Bug 40876  
   ClassFormatError on external subtype-qualified ref to supertype pointcut 

This was an important bug that was caused by the static fields used in the implementation of cflow being placed on the wrong class.  This broke the rules used for name mangling and could occasionally result in name collisions as shown here."
b0ccce0d0eb551d012ccc02a11c08bccc148c79d,Added incremental warning message.
702a2fe267e5e4dd067d3721df3fc48b5632a35f,extended test data
f252c555f0ce6f1d5f367ece351939d138742666,Updated for 1.1.1rc1
4af623820a169e3179f448da0c089a82e156c94d,added mailing list discussion items
78869703a8bf08bfa4e8f19b26dcf877949b0ad2,Fixed 39626: Added AsmBuilderTest class that tests handling for this and related null parameters.
f5d31bac784ae2c0cccb6a990d1fc54e86df2dd1,fixed 39974:  Some strange error when compiling the observer example with JBuilder7 integrated AJDE
89cd34df0631c3da14a80dd899ba23ffae31c327,fixed 40194: error handling during build config parsing
5b758d8aed9c13794d58567d96bc2dd628f9fb40,fixed 40194: error handling during build config parsing
ee89fbe0af1401a6b34d97a8a4313d502f58a4e9,*** empty log message ***
e6cece5621f5aa76775efabc503e63200cae8454,Removed unused method.
ac6f0b6f96d25bd9fcbb575b65ef5d4015a607ac,comment change only
a26cac9b4c36b9512003ac739d856c8082e5e17a,"------
38717: "".lst"" file parsing errors should include sourceline information 
- Fixed with George.  "".lst"" file errors now have proper source locations that the IDEs can seek (fyi no line info, just file info).

------
40194: error handling during build config parsing 
- Fixed with George.  IDEs now report "".lst"" file parsing errors."
29f0e947331f00f7141611682f8ec3670e9f90d7,spelling changes only
a01ac454bb23e0df78b358b489f60bf53c147ebf,"Added documentation for
  Bugzilla Bug 29699: call join points in 1.1b2 und 1.1b4
basically documented that the -1.4 flag can change how method
calls get generated in terms of the declaring type of the method."
abe271f8d46f33116d7a5af5048a88b7358b8b3f,"Fix for
  Bugzilla Bug 35551: ""declare soft"" in abstract aspect have no effect
Specifying that declare soft behaves like advice in that
it must be concretized to have an effect."
2a6aef39c924ca358ee6dc168c3a6593d3dd8e54,*** empty log message ***
ec5f4c0afe9fea2236d3db6457ee9a85173cd336,Fixed missing sourceline file info.
a92e9c5c8c8646ec08759b7a940a6d32f2c541c6,*** empty log message ***
57445dd3ec8a67d06f16fe02e7c0eaefb8ea4051,"Addendum to the original contribution from PARC.  Three presentations:
oneHour talk
three hour tutorial
six hour tutorial including exercises"
29457c3d6d0b4cd7cca1d2867e6bd80a56a24722,"fixes for Bugzilla Bug 40858
	  	super-qualified pointcut reference cause weaver stack trace
and Bugzilla Bug 40814
	  	no error when defining interface pointcuts"
e85783d87e6d499e9ef3591b6801631566ed8edc,"fix for Bugzilla Bug 40805
	  	call pointcut with interface type fails if method declared on interface"
137c47f0bdb7b7276ea3000a8d4d035f02b6eb68,"Fix for Bug 39470:
  Repeating a compilation multiple times produces 
  class files that vary in size
Added a filter to make sure we don't add two local variable entries
with the same start and slot (BCEL workaround)"
6c1ca40c54c11315aa5caadf23c8f439b26c41e4,Expanded test data sources.
5594a6579a215af6f9db9c806f4e331ec6259136,Revised and added tests for ASM containment hierarchy.
f2e05bad938126f18712d35bfae7e74fe04a51b2,Exposed declaredSelector with accessor.
56f0f547f737c8418cad102a60de44c35dd1c409,Exposed subtype inclusion property.
40fb45135a9079752db1fc3a984d278d054c6dbb,@testcase PR#41170 combine classpath on command line and in .lst file
c7584070e1ca1e4f1899f4b62e2c193d4d43c206,"passing tests for interface libraries.  The behavior might be wrong (i.e., some should fail) -- confirming on the list."
b0d37c4b51a344bee94bb7f7cc1ecef1a233e3ab,document  new contents of docs module
a63bc04fb1cb6e8d6d0bc2a509ab9658e3d78c43,"initial checkin of the sandbox.  

The basic structure and examples of each type are there, 
but I have more examples and the ones there are not 
altogether validated.  I'll make a few more changes 
before emailing dev and users about usage, etc."
c09964fbdb4d97c60c3fc72b3061518369db5161,"@testcase PR#41175 aspect-declared methods with exception clauses fail in binary libraries
Corresponding non-binary passing tests added to ajcTests.xml"
3e0524e928db98a4c36ab51dc00daef71fbdfb0b,"modular build questions, unauthoritative answers"
3b602a9080c98a55ba057287977eac71f4e15da8,double-dispatch example
511b6634ddd4554f30b4104d493ea7244a79d97b,tag correction for code gatherer
1508de05e2a9c9c8e1d2c429e8b5d0415ce0a1a5,Improved generation of advice and pointcut names in the ASM.
2bd294be1d305407b96b6aca04136a3207bcf0af,Created accessors for pointcuts contained within And/Or pointcut.
3b729301c726c44f028906ec53e518e2d3081e83,"added test to ensure handler from initial runCommand() is not used in repeatCommand().
The test fails so there is a bug, but in the current system we seem to use the same handler,
so the bug is harmless. (It does affect other things I'm doing.)
The test is disabled by default and can be enabled with a system property."
5edccbfaeb8bb4dc5b34d553267365ae3c7eda41,"Fixed bugs:
40943: Binary weaving should copy non-Java resources from ""-inja...  
36071: 1.1 rc1 should copy resources similar to java compiler 
40826: ajbrowser does not report errors properly  
40774: task list icons don't show in ajbrowser"
9e7ceffb06b794ec4e990e639f33af225e697acf,"Fixed bugs:
40943: Binary weaving should copy non-Java resources from ""-inja...  
36071: 1.1 rc1 should copy resources similar to java compiler 
40826: ajbrowser does not report errors properly  
40774: task list icons don't show in ajbrowser"
94cb789115ddbbd149309759711e0e3b6515a36b,"- initial api-based tests
- initial J2EE samples
  (added support for XML/Ant scripts)"
f8939bf6a6a212dfd145e54d17b94fea75dc1a64,- added support for XML/Ant scripts
7b6fd547894bfbfbebc0c679be931a235a468512,fix for annoying javadoc link error
acdf688ccc4d8b376141b2c8e28bc5d7b7612e90,"Fixed 
- 40257: parsing of ""../"" paths in LST files is broken 

Added interactive test for checking compiler task list messages (via browser)."
c7f55d076aa860fbdb74a276bfd70f3d4d41f307,Changed org.aspectj.bridge.IMessage.getISourceLocation to getSourceLocation in order to match method naming conventions.
02d3af8df7b3131a7dd64e5e19e19367e275b0bc,Cleaned up test-generated files.
be23e3d01d1acde57b8ae25e04d0fc011a71e219,Changed org.aspectj.bridge.IMessage.getISourceLocation to getSourceLocation in order to match method naming conventions.
0f91bfcee95831ff34699b9696594366526a46f9,Cleaned up test-generated files.
9b8ebcd93705e4ed993d49d95b43bd71dd1e6dc9,Cleaned up test-generated files.
8849b342f8bb61c8f9926425313047bd2f835d28,Cleaned up test-generated files.
b0611b5428e1569837e1a5589a6713e47a37f0a9,Cleaned up test-generated files.
13eca576518fd3f027f96fdd013e794adddc4f95,Cleaned up test-generated files.
e2c4e9626f60702b410345079944fba7d34c0df3,Added check for build warnings.
672bf9d46e415a259612aea3dee579b81fa28817,Fixed bad paths.
684c9c1c3dd084b43645f537774bea0b4a9c1222,"40534: Declare warning/error output - more detail required.  
- Added getDetails() to messages.  This String corresponding to thisJoinPointStatic part can be used by tools that need to display additional info."
1cf6391380ae594b165b32acd92222057545e7ad,"BCException - not isolated, so no bug written"
bdfba603c4aee6d32a4873ddca43657e6eee92a8,library of basic pointcut idioms and test case that causes BCException (copied to tests/bugs/pointcutLibrary)
efc1cc47398443b33fe90da11c4cf1d14dc9c108,"fix for Bugzilla Bug 41175
	  	binary aspect-declared methods conflict, lost their exception clauses

larger fix to address more issues with aspect-declared methods in bytecode form
also addressed declared exception issue more generally

this fix should be more stable than a smaller hack that just fixed this specific bug
report would have been.  added a few tests to match increased scope."
3e5974557278e81a9891edd4269eca39a8d42f43,"fix and tests for Bugzilla Bug 41123
	  	Weaving failure when using injars"
f1deb9c11024ecebab2e0aa17a260821375c25bd,"Reimplemented ASM API as described in bug ""41254: revise asm and create interfaces"".  Containment hierarchy is done and tests added.  Relationships are not done yet.  All clients except AJDT ported.  More UI porting in Swing clients required."
e95455569e6d4fddc7109330897df432c31f4cbc,Added support for creation of junit xml reports using -junit or -logJUnit flags
7df925d43588c29a9844014d317046d9c444c2e3,Added task to call ajcTests with and without emacssym and include results in report
080e0b8e9940150f2bf7a09df0aa7910af8b5447,Matthew's fixes for failing weaver unit tests.
faddf2049048b1c5933a07197371738d36cf76fa,Removed unnecessary cast.
2a3bba0a02528777cdc9bc1eab6f7e3256991894,switch to using test.classpath rather than bin.classpath - works outside of eclipse
18f9c1e2dbd6533e1e939871a6129ed1a95800e8,Fixed ProgramElement modifiers bug.
bf887f651e34b7e25a4a82d18267efaf57e0ffb6,"report fails as junit errors, not failures"
07ec8f62517b23d08ae060875db3d86ae94d009d,Fixed bad cast.
555d9cd8fec8a2c0bc3daac63123a9bea941a912,would help if i quoted test.classpath properly....
f7944d2c68e8561e12498c006729c6c341b657f7,First pass at new relationship API support.
22f8fea5cf4db140163574646d68acc487a424ae,Fixed typo in method name.
b3229c893771136cbc766dd28724b1049b1294d0,Fixed unwrapping of exceptions (was infinte looping).
514e76666a7df4b03733ce4bba9c85973b3bf311,put aspectjrt.jar on classpath for module tests run outside of eclipse
3289df4d8c5a8c8e3ada9c301a0b023dda8524a3,Fixed initialization.
4a1a347b2225e48fa4e9d617e7bf083680967a70,Got advice relationships working.
efd18783e610f4669b03cbae649c6a57efb1690d,Added check for warning issued during JAR creation (manifest not copied).
396675d501d3f69db8aaef5f5e907a5572c6daa6,Updated test data.
956e874890c0495713df91c64946c954569b49ff,XMLEntry.toString for better errors
8758792eeb6acbb47d4eb0f6c31a9bdf40633ced,fixed test to fail on license check failure
28616d99ec720104f855d8b23fca4f3c7c019ca6,corrected header (copyright)
da8ac4b212505a0eff695f73de38ebf6d5bd01ab,added license header
9befa0a653ef07238f4072163813012013fed748,Expanded developer documentation.  Moved ASM doc to MSWord format since it will have graphics and revision support will help.
ca4acbfcb0622ad9a83b2f37e8257b4589e0920d,use System property aspectjrt.path to add to testcase classpath if defined
1e0113299d9eea6272c7b83b40d95b808076a028,"Minor improvements to structure model generation, clean up of test suite output, and port of AJDT to new ASM APIs."
11d7649fc3219af5a71d3bf0b9fe004c075c2b4f,"Minor improvements to structure model generation, clean up of test suite output, and port of AJDT to new ASM APIs."
bffcd4c30591bce89ba938325159374e1ea1ea96,Added support for multiple relationships for a single program element.  Renamed model container class.
b5d8b449c79cbedc82e03381cc459ae8c8ae9718,"Updated org.aspectj.asm relationship model to string-handle-based API in order to support adding and removing relationships at any point in the compilation cycle, and to support external tools building relationships (e.g. JDT's incremental containment hierarchy builder).  Also made inter-type declaration relationships show up in the model."
56d4d719ba6e1ff20efe3f1003aa8eec8d5b88a2,Improved declare relationships.  Implemented batch-build relationship clearing policy.
4039165de35d82b41c8ffea395a81394fdfea219,comment about disabled tests
bca09473654d7c665716a35dde500158d0a726e9,disabled tests
c6eb8d360b20d409683eb3f5392249d43828e773,static methods for unwrapping to keep internal structure knowledge local
ae6983bd75683253edcb16e5e6875cbc1e8e4d8c,wire in older minimal test cases
1c58e3476d511ec33a6cdb2df64124181c386357,Ported inline annotation support to new ASM API.  Ported aspect visualizer.  Improved link siganture generation.  Improved ASM test coverage.
27c3a150926e32e13feac4a4bd32226edafa04a0,*** empty log message ***
f15aa16ada746b7788808940b07f0b698959b348,copyright header change to satisfy BuildModuleTests
ef5cfbcc4cb60e775a7d8a48583cf440c2657ec6,"Expesed ""isError"" field with getter (used by asm relationship provider)."
466cb82c3ba6cf23e28bb8b8e8da0e54a90486b2,Added declare error/warning relationships to model.
eb12f56518d08c54fc17047749a5d2d66b3c4181,Added spacewar project for testing.
3a495aad88865d64d3e8ee005241e7edbe5a7a82,"Fixed AJDT bug with truncation of labels (there was a weird substring call in AdviceActionDelegate). Fixed ASM/AJDT modifiers bug.  Fixed ASM static initializers bug (we may want to change the way they show up, i.e.   Added imports to ASM containment hierarchy.  Fixed numerous AJBrwoser, JBuilder and NetBeans bugs."
87ded0f477412c967e939cea8fa360839ec81bed,"deleted a rogue import of com.sum.crypto... that mik must have added by accident. 
I suspect this is what was breaking the build!"
4468c138c94a858f26499deae0168562baf0c484,"Added a removeAllListeners method to be called from test suite to
prevent listener leakage which cripples performance of the test cases."
b22dba1a73ce29e900ccbc140b9e6a983b0b5b9e,"Added a call to remove all structure model listeners from previous run to prevent
structure listener leakage."
dd7bee990b077e7778150b23dc50183fe319d1f7,permitting null input in public utility method
4f7f27df445f1bb2b915ad2ffd4e1bb0e6756e3f,"paring globals to those used, then using them consistently"
eb59ac3811ec7df39687216f24f855bf7ff400c5,some xml parsers don't like space here...
05e08aa4b026a672567e7e755bd46a18052159aa,balancing start/end suite calls
577c85fd23891c6d2eb20ddf2d15ac7d5ec9d54b,Reimplemented JUnit harness adapter
dbb6296ed63b59b2576381fd80a919b25ca10120,disabled test spec error test b/c it can't be skipped for JUnit  driver
a8d15aaeb9819732b89e289be29bf199283f5d8a,"initial cut at resolver.  Still getting default JDK 1.4 parser error ""base URL required for relative references."
a082a84bda0002618f48590e0f6a593b3de7ae7c,added ant driver for JUnit ajctest driver
1c2077ea4994f8d268f89a1c85d482d82f97f876,"Still patching for bug 39470 (patch devised by Andy, vetted by me). 
Sorting the local variables so we can deal with the fact that BCEL 
generates extra local variables and doesn't bother to make them
hashable."
d90acdcedd63f04b906b0efc5e249e93245f5618,Using correct patch for bug 39436 instead of vague one from email
9df9062f3ee68735888de6fc92f5aafa5f2b366e,@testcase PR#41888 call PCD fails when given subtype of defining type
31f9de4724c8c794527275aa3dccf07c0e362d77,added a cache by handle to avoid terrible performance on larger projects
359f247dc87c44668970dd550e43dc777cdb4a27,"performance faq item corrections promised on the list.  
I need some actual facts for a real answer."
2dec4e0289b56ed1e2c2ac34a3cae80d00a0d769,Fixed several broken links uncovered in 1.1.1rc1 testing.
00cf2e4ce99f94e488a39923bc3ad6ac12388b9e,starting rework for oopsla
3fa486456c61e332341ccfb634a72920b6467c50,initial build.xml; has lots of dangling references
910f2658b1342cd4a3b22169895c71fa8b48279c,untabified
9ae0cfecd5fa4cc15c30c2231ba5b7de2a86e882,untabified
e81b7e76f0df1119ee8663e9960d53d71a61a243,revised section 4 (untested)
f1a7345a62bd1f227dd64fcd7c2d519c8911ae5c,rough edit of text for section 3
f3929cad6a0e6d6973483dd23c7aea68b6e7fed1,updated section 2
5366e49b97ca677ec26dc0d875689d79a70b73ad,stub answer file
094127ec8a9353d832ba1601acdbf743f7442a8c,updating for new files
bfad02fdb1896db16facfe6a93dd9b4125518de2,removed unnecessary constructors and untabified
bb357e7c74ec5be0052bbc51761ade7c6ad4c5dc,fixes
02528df6c8f7a308b7f1bd7f624b0a2ba7e4fb79,"in AspectJ 1.1, set jp's have void return type"
948c9365b93014df5e015c09f1b7d18132807d78,typo
c19c596d276457bb01d6f9e48311a6e3e290c7b4,moved to List
8266a6c5d3b1d2a3e72a2f7c3b6b1b287cacc520,"made everything inherit from Test again
updated section 3 tests"
e7e0deb5bbc879715f979d5e1fa40230e612b950,UML diagram built with Argo UML (http://argouml.tigris.org)
cf042abb2d0c76e2d382e91b536f3e9be7bc1317,updated section 3
31c52df57dbc34ebea91712d236a096f67153201,"serializing tests.  Some depended on others for builds, but test run order is not guaranteed."
0f8a362edf5e81909bf782b667b213a6da3df0b2,implementing clone() for test specifications
53973533a79645d5f43383aa390064e303670cf0,"compiler run equals check wasn't testing argfiles, aspectpath, or sourceroots"
8f3fef3da5b6477b7417a74f171f5bc875a8d8d7,checking clone when doing xml round trips on our test specifications
ebe50650a374fcc6e95bfdb6bde4a27797babbe7,"ignoring test case expecting a skip when using the old ajc compiler in incremental mode,
since we're not using ajc 1.0 anymore.  
Should revisit if we do."
ec334f56cf5f8abc83e196b7362ae022e0ebcb91,cloning re-used test specifications to avoid test interactions
d8b86743663c19fd545d8dea89290dccda7a5ed1,"updated fix for 40807 - compiler adapter was supplying destDir when not specified
Also adding warning for resource-copying (36071; copyInJars, sourceRootCopyFilter)
I would like to disable entirely, but don't see and haven't gotten confirmation of behavior from last week's telephone call."
5a07dcee3a3f520e4b5cadc67000673e2d0ca0b7,"fix and test for Bugzilla Bug 41359
	  	percflow aspects compiled from jars share one instance for all entry points"
ce801a083791f978fb69fc7cb362109b688a98c1,mostly final edits
2fede2e71795d24ba85d0348d14b2e7d2b7bbc95,changed warning to error
7f63882e35c3a5c7c8f92d5214ea78ca3dda9953,sourceRootCopyFilter test
c1ada785adc3a05f9df4b96469b64e5c77d398de,"aligning task with Javac task: 
- copies resources by default when using the Javac adapter
- does not copy resources unless specified when invoked via AjcTask
- copies injar resources always"
8660cc12bfbcd6f4957abd4dfc84735de6c048cf,"test and fix for Bugzilla Bug 42539
	  	throw derivative pointcuts not advised"
58436592bb9fe64341d9013779fe377bb55a24e2,"test and fix for bug reported today on aspectj-dev
This bug is a reversion from 1.1.0 and so was a high-priority to get fixed
before the 1.1.1rc2 release tommorrow.  The bug was caused by a
conflict between the implementation of perthis and a fix made in 1.1.1rc1
to the code for signature matching to handle inter-type declarations
correctly.  The fix was the addition of two null pointer checks.

I hope that the original reporter will file a bug report in bugzilla tomorrow
for tracking."
244200a94c506b257e1384b970114ad10cab3bd3,Made model generation optional.
e9e87aa0d512e3254dbc69705d148c89de890730,Added spacewar to test data.
47d26980a60101acbfe14f094eb3ff26493a6592,Added model building performance test.
a43ec0b4cfa28267dab8b1a87e100db44642a614,Removed asm path canonicalization.
b42236b95ab40fffdab9acb6261a738b8d416b50,Added path canonicalization to config parser.
365ba016e1a854591ec2e872b050a40174a453eb,Exposed file creation to allow overriding (for the use of canonicalization).
9af6b62b36884bcffc8a1ceeb6e5490a651afcc8,sample api code to list affected files
d6f8ca124ba8bfd58350f1019ca3000aea0287d1,@testcase PR#42668 after returning type incompatible with join point return type
a953927a44eaea7db460a144a7ecaecb9ec15a7e,"using linked list, more comments"
57729634e86cfb608f440b6b4a67c37e13f3b54b,initialization example: more comments and more testable
258bb65ebddc08d5b50e387bd76fad5e7bb07707,"pointcuts fixed, so library updated/fixed"
34bd3850752a3671aaeca7d7e865df690d869f72,"pointcuts fixed, so library updated/fixed and tested"
df36570fd7e71c777f6788c3705005b3d19d2dea,dirty example adapted from May user email
46cdb99dd697902f822082abbe14234638635a90,updated tests - all passing
ded6e7a9ac8c13f10f7566250ec544324936bb83,"JoinPointCollector.java was moved to sandbox api-clients, and in any case has not been updated for the new asm API's."
8ced0584cb2cecd8db9bb9733230027d7c4a5d40,"in case anyone wants them...
- a compile-speed script
- a script that uses Jikes to incrementally compile AspectJ"
2b381b0196e56f8d2605998da82e4bebeccc4805,"@testcase PR#XXX omnibus privileged access from aspectj-users mail ""Problem with interfaces in method's signature"""
1466b85f68c345a7010873a94cb52dc63be49147,updated with list of major fixes / enhancements in 1.1.1
f4214827013be923039c130524727aaf850e1966,"added pr number for Bugzilla Bug 42652
	  	Regression: Cannot compile complex weaving anymore"
1553a17192f29f74f7e7c065916d745d31bda4f8,Ant task revisions
ab504b46ba5585a43018026976a44a5ccefcfe7c,added in building architecture for turoial exercises
d9b32bb20a67995c994a45857d1f16ae84041a1b,"removing a debugging Thread.dumpStack() that made for confusing
error messages"
d78d9ed48963cf302c26daab6af782d9b01ea3ac,"fix and tests for at least 2 bugs:
Bugzilla Bug 42740
	  	declare error fails on pointcuts composed from multiple classes
Bugzilla Bug 42746
	  	within() pcd is confused for certain declare softs

and probably:
Bugzilla Bug 42739
	  	Compiler crash in ajc head (post 1.1.1 rc1)"
be5b37f766faa5086aebcc4c751742ce4fb3458a,remember source location and handle identifier across invocations
a29afa3b913ae6a689ec99dba1f9d2c0db3ca87b,added a cache of canonical file paths
ef280812570d55aa946ff8217066201288ec5bdf,"remember handleIdentifier once calculated, use canonical file path map"
931e121c766245c7d8edfcb6bce032c00e592078,added a cache by type to avoid linear searches
3b79af95c2373158d6b4149476746e880866e385,we fixed a few more bugs! (update total to 48)
b5127388a3b5a2403e8d8944766bbe1895e09530,"fix and test for Bugzilla Bug 42993
	  	Language regression, or possible language improvement?

The problem was caused by moving name binding in pointcut declarations to 
happen before declare parents are evaluated.  Because of this, the 
compiler doesn't know that ContainerDescriptor isa Key when resolving 
the ContainerLoader.containerLoads reference.

The change in ordering was made to fix a bug reported in declare error 
and declare soft whose pcds where being evaluated before name binding 
had happened in the pointcut declarations.  Unfortunately, declare error 
and declare soft are concretized at the same time as declare parents 
(and all other declares ;-), so this move also led to the regression 
noted above."
ad0dd8b3fdc19a961b039f9dad16711d9d20250b,always canonicalize the file argument when searching for nodes by file and/or line.
a76fbd2d4e1247d699ae9910ae5252d67b29b823,test for canonical versions of sourcedirs etc.
86be10e1c46dc6b3c57a5200da03dd7b77ffe12f,make canonical versions of files...
fc0d2af02cc6b6f8a4d9425e3c1cdd166957dde9,"fix and test for Bugzilla Bug 43194
	  	java.lang.VerifyError in generated code

Bug was that a portion of ReferencePointcut.concretize was not behaving
functionally but was mutating state."
53570863fa77364052937376a0ff65ce2fa37842,bug 43033 - NPE in concretize error path for ReferencePointcut
6d6250d554bf83de2e7ae0f7b8252d46a4e6afda,updated bug count!
426d89b639c5f64504ff372b849495d75cdc7540,Fix for bug#43709.
79c8ebbe4756a32b50741805d888e09a746c59da,Comment clean-up only.
e0c2b4345229e9f8ffe937ffd4dc21cf79b067d6,Cleaning up bad bug data.
e3da5bd429398c6db994609123f41fd0ac399eda,Cleanup of bad test data.
0d7ff0b717734252a657eda287e38184889f94f7,flagging that model walker broke in 1.1.1
dcedc6e551303e84f54afd1b142d2e5933a86d3a,removing unneeded comment
2174193632b4f67a0d72816a7c65ce732138c833,added pointcut anyCollectionWriteCalls()
b911f2a074cd13c4072c9361336287a16351556e,"script sample title, correct todo wrt resource cleanup"
c4ac88ee2890d97a8df494462b5e7b514a11bf84,added test for collection calls
4ee90ae4bdb3b10a90f2db842d59f6604ebe7f28,debugger caveats
175ae7d84d1055b5b34944175a2e1d994ed679ef,removing empty sample
8e5311a519d73ae81180906b5ec705146a2a66e4,adding file for links out to sample code elsewhere
0043498e4384daa48bdd0e976003148e5d06ac53,doc handling of code gone stale...
99ebf5fe2d58535da0dcff64f9a701de94a3e3c6,"When performing a release build, run the test-all target in junitModules.xml rather than the default one.
This causes the ajc tests to be run a second time, but has the advantage of creating the junit xml output
files for the ajc tests - which are needed by cruise control. Since cruise control will be the dominant caller of
this script, the extra overhead of running tests multiple times is acceptable."
14306c01e5cb539ead70d98462beb567aa90d33e,"presumed bug found on mailing list by Eric Jain, rendered both in harness and Ant (to show behavior with javac)"
e0c8a4875c23cc2443bd309658d8dab3e1f7d070,updated NoAspectBoundException entry
83b5e4a3a53ef41d14c2e565bdcc742a363ab2f5,"- fix for bugs disclosed by fixes for bug 40807
- added xweavedir attribute for weaving from and to
a directory of classes"
50c4883bf47070933f4431c47c1fc5a8779e2477,tests for fixes for bugs disclosed by fixes for 40807
0b22496668700a4169bbf984e4ef63283b1add65,adding taskdefs/bin to classpath on command
64e450959c22af70bf054173004d61713c212acc,added back-links to newly-submitted bug 43972
92743cef2052073e900a1c97255e6b6d75261f44,Testing to see if Cruise Control will pick up this change and run a build.
e61ed8aa64db1705c7b20104447ba8cb3857f9d0,"Tweaked test-doc-links target for running behind a proxy server. Now
accepts new properties proxy.host and proxy.port."
c17805fd948b0efe904e526822313c1a9e1ba8f8,"Re-tweaked test-doc-links target for running behind a proxy server.
Build breakage hopefully fixed !"
da871bf6f021e8e8a5acd6683e4d43ca319f9044,Previous check-in got somehow corrupted.
235decb1defc1a9049a821a69587f3c37f5935dd,Previous check-in got somehow corrupted once again.
dd1409748b77e7ad732f54e009a774dfdabb26bf,"Bumped up max heap size to enable automated release tests to
successfully complete."
3c7b7de198365554e0bb587fa665e32c44c3e70b,"One more attempt at increasing max heap size to enable
automated release tests to successfully complete."
311725549a379f2bd3c0fcce2aaaae50b7a92ddb,Fix for bug#44117
c2b2a09a163eff7e9af277734a4c4dd9ada1fde7,Minor changes.
3e4b59a6752567468a001c325c47396f5ab6782d,Fixed part III of bug#43783
304604afdbfa1fa27890f693e0d9165b1b525834,Added test case for bug 45441
9eb88f6b23c37afdbc754e9b591f90722ef9c8a4,test case for bug 45441 - joinpoint optimization when targetting 1.4
68f2d9977ee5bdd9eb48098e7d56ec461fd5db8f,"support for -1.3, -1.4, and -1.5"
0929f8ccff1b0e98dbc3168b7acfc4159a969b2b,deleting junk
df309ad58ae97560a94b01f798845d9517cd5c86,"fix for Bugzilla Bug 45441  
   IncompatibleClassChangeError at runtime when compiling with -1.4 option"
1e28c4ed1f76c67d26a51092ec02bf75d97132e3,"head-compatible version of earlier fix. sigh.
Note that the fix is incomplete and being reworked."
e0bc1254a86193d6583ec8877046624d4798625d,"adding rt.jar to classpath for exercises, to make ajbrowser happy."
2c735c83fc93a2aba58f2c3114316828d2598ed0,declare -> declareDecl for ajc
512cb341517cd6af550ca01b966a632b7fc06fc1,make output dir
a586439978838ed511acb0343c9e98ce5f3c9dd5,doc harness handling of 2-element options
bb9581ac283b845a406f257f60350850bb974a21,"-source14 is not back to -source 1.4, and XOCodeSize a knownLimitation"
fb53bc7d6dfec828720a5c4b06c49ffa784a874e,removing unused launch config
a6691df972e5dcf5e955f9a75bbba36b7a591c9e,better mapping from messages to JUnit failure/error
7a01c23476bda528f577b9fe4861f40ad1086381,adjust tests for new message content when skipping
ed96631f11efc4895a90a68f86f0e75eef8e9e2d,"revamped option handling: n-element options, collision/conflict detection/resolution via forcing as an attribute, option families.  More compiler options actually handled, and error messages for unhandled options."
d8d01e83e3f1a618b5e79e3311d6a47bb842aea0,clean up tests not using a destination directory
4c6000abf30422a66853138395baff77f4e5386a,@testcase PR#42574 ZIP and JAR extensions in classpath and extdirs
03a6e118200e61b47c489fd89107b7d6cec1fbfd,"add support for extdirs
unhide support for classpath
fix writes for sourcepath, argfiles
add hook to not enforce compiler for testing"
0871a66c915e4db43e3d736899c60779a63fd4b4,"basic tests for extdirs support
initial compiler stub for harness command-line munging tests"
458b26fe1241d3457ff8161ac8d18daa700a6cb0,returning TestSuite rather than Test to permit all tests to run from Eclipse
dd5ef5ce8c31ef643d2f1a40a0cfcf46e32ca6e4,"using ../{module}/ convention for testdata references so tests can be run from any peer directory/module, i.e., from one module"
6a0c00d244111422c0a1685217ddb4092fe87551,FileFilters for zip files and source files
61943d21418e2ded251c9e51933ec61e3f267bb3,"using ../{module}/ convention for testdata references so tests can be run from any peer directory/module, i.e., from one module
Also using canonical rather than absolute path to predict generated paths"
656c8563d5bc4d452f30ab86cad417eee2f745cc,"reorganize test b/c conflating two issues:
(a) zip not accepted by extdirs
(b) uppercase ZIP and JAR not accepted by eclipse FileSystem"
758454f63bdc4c44e64c9b4339198d9e24f927cc,"fix for 42574. (Not using FileUtil.listFiles as recursive (and looks broken for nested files), because I think jre/ext dir is not - should confirm."
acbe44770151e7bf4db6ce5cdfa8c404ee260e3e,test for 42574 passes.
37005827ca0fc27038ae6c4a5cacb339de95e11b,"refactored test, annotated specification for JDT bug."
ebc09b49bd6349ee6d4cd82f4e6a80927aa1e646,"locate, cleanup temp files"
798bb91837d56ff947005649534babd0aa116fbc,consolidate output dir for post-test clean-up
e72c52476b8b393fecb4f0795e51ae07b3739e9b,"using ../{module}/ convention for testdata references so tests can be run from any peer directory/module, i.e., from one module
Also catching some errors as failures and avoiding others with non-null ErrorHandler"
73ea8b743c9c0e711f181126c0324b09ff8b9e9d,initial version of common JUnit driver usable from Eclipse
60c03aca9e32181a1cc93a7147e0a2b2a18de1e1,Rogue import of EajcModuleTests was breaking Eclipse builds
32020228f067879bb277ee57f5b8d1baa4dabae2,"Fix from Matthew Webster for copying first resource in jars and 
for copying first Manifest.mf file"
1c470ed0e07a1fcf570074e158ae39f33ba377b3,manifest.mf copying means that 1 previous warning is now no longer issued.
44e2127bfe4cdb928c220d3ef107094a38b7f6eb,"initial fixes for oopsla post-mortem.  Many notes left on
starting page for additional work"
a044ad89cd7b28483a97dcae59129ba8b49bf43d,org.aspectj.ajde plugin to be built as part of aspectj build
0729f986cc4d8f4284d44f611e445b974153b466,"org.aspectj.ajde.doc plugin built as part of aspectj build - at
last the doc in AJDT will always be up to date with the latest
in the org.aspectj CVS."
1f16bf73144c62ec6b1252216a23aabc565d9d91,"org.aspectj.ajde.source plugin built as part of the aspectj build.
Contains the source jars for the aspectj build."
2faecae57cef64fbf65a3490e2c199c989747acf,describes role and usage of this module
8c2301b44a4789a869364849cdd2ca423ab206fd,eclipse.plugins project file
1fd18c463e5bf9871b3fed0a9212fb281722df11,"changes to build script to create aspectj eclipse plugins as part
of an aspectj build. Results are placed in:
aj-build/dist/ide/eclipse/xxxxx"
40e70a0f2d52bb2104b8c58615c97831c8f274c7,class is already defined entry
c61ee599a71b437d394663a1acc51fd036f6d8b1,ensure that release builds also build eclipse plugins
f7f68d69915fd251dfef4386bc8d691bb419fc01,"created the CVS module with name eclipse.plugin instead of
eclipse.plugins. Doh! Easier to change reference in this build
script than fix module name now..."
e781ab2e35da7fe166692d2ee2a6a95cc23d70d7,don't worry about .ajsym files in cvs
b09dec056ef29d3a860f8c0e0b1971536247f7da,"drop the extra ""s"" on the project name"
68c7c68403c074c1c9d8ec735ae57e4a529fee62,added detail of expected messages (message text) for pr31724
d54f21bbd778d29fd2cd1bdbe14402aa7a15551e,"expanded definition of makeSoftDiffs to cope with multiple expected
messages on the same line that differ only by message text."
ebfe0a1a9adfe64e41349167d4e3b5b188512d58,"Adding scrubbed demos (figures & spacewar), scripts, slides, and Eclipse project configurations."
0cdb334452b676bca909a6b9074a389be85a67a6,Updated template.
91cda64ec1b39bbcef4c4ed54de7ab48d44904eb,Renamed demo.
435ab20666622d327cdfc62f5d3e4e86ceab416f,Renamed demo.
5ba7e88c10c7b254a2cdb59c09ebc102b4e68dfa,Adding old demo scripts.
c586d959854671fa84c64b71134ce9128802a0b9,Adding OOPSLA 2002 slides
dadee4fdaf31987701f5637b0f64cb45cc08a6e0,Fixed slide version.
8c70c5a515a383e0691eeb3a9bc1caa66a0398b5,can't use packages prefixes option in M4 due to eclipse bug
1c6db5d4f24f6ddaee4c48661503a8b7ea516744,"Andy Clement's patch for enh 46347: ""-inpath"""
dc9c26dfe28b0b050296c97a9019e971aea5b84c,patch from George Harley for pr 42711
3f72b366cd2b453e1e3476d131966b27d8936ad0,"ensure InpathTestCases still behave in the presence of CVS info
in the directories."
1c1368fc1c66c695dc0fdc40a6192b3a61b42656,"added credit for adoption slide, fixed tomcat slides"
17993d4c413e1b291ffeece0128f4b23bce5c86a,patch from George Harley for pr 42711 (test case)
52cf27188372c0b375aaaad367d2cb311e0df05b,"updates listed in q:faqchanges.  
Many more to harvest from the list, and to move from here and the list to the programming guide."
c35cef6f16411ed61a020632e93401858b7d0c0f,removed unused imports (semantics-preserving)
10751b81060a05b906ae9e13da4a61e79096f5b7,a few inner class cleanups (semantics preserving)
fde423ac335eb547834bb6f1b0ec51ddfac51cd6,fixed static calls (semantics preserving and non-crosscutting)
c796217f060ebf53e4561215307927e424e35358,minor pruning (semantics preserving)
a9928aafc2f0333ca7cc1ac0cbd46f916c58829b,Added JSR45 attribute
fa41db8fefbe302a0298f031d817920729ced47b,"built using Eclipse 2.1.1 compiler - when we didn't do this,
some tests failed on IBM JDK only ?!"
49f9e52d6f35545f2a1cf4c10e3da219be8f1e7b,"These class files are *input* to the weaver test cases.
Can't rely on the ones built as part of the AspectJ build as
the weaver test cases are sensitive to the exact compiler
used (needs to be Eclipse 2.1.1 based)."
7c774e11eb5751df9c3e3db695715a27fd0f2909,"switch from using class files in bin directory created during
project build, to using the ones in testdata/bin."
d3cdc184c56b2942ec81832202e4503c73a9f179,removed errant debugging println
07cdee49d842cfc761a24c92e611042812719699,Fix for Bugzilla 43064: case error in noinline option
393f65bdec7a0822eddd55af22a8f7fce9bc58cd,"Work on Bugzilla 42668: effect of an after returning type incompatible with a join point return type
 * fix to semantics document to describe correct semantics
 * checkin of failing coverage test case for correct semantics"
46acd3435c42eedaa8f6a07594b6536fe7752a8a,"Fix for Bugzilla 44584: incorrect ant taskdef in docs
 * added a single / character"
bcf40bc8dde11336c4579851f094e1fecb7aef2d,"Fix for Bugzilla 43891: Example aspect A in pointcut composition section in prog guide causes recursion
  * manually applied excellent doc patch contributed by Nick Brett"
ba8786b1a73f96cc4ad5f5bc98637c1566a2d919,"Fix for Bugzilla 43602: Small tyop in documentation
  * changed ""aspect aspect"" to ""abstract aspect"""
bdc79f1b42c11fe2bcaa45bbaa5a063173777d28,"Fix for bug#47318: ""org.aspectj.asm.IRelationship.Kind.ALL does not contain all kinds"""
2561a46b92c6078ca6e447b0c8e9e97f19728cca,letting tool handle titles
6129ba36143d3a6b7d41982be8c79e35478a5ea6,referring out to sample code
9d33c1e59f81762293e3014012183a59fe479775,added date to output
4880b54e69fcd225590fce7079a84d2b17a6ee62,no semantic change - avoiding warning about static members accessed via non-static references
9f8fdd6e73ae4995d195cc5637307ee7b5d9b057,"Fix for Bugzilla 37899: Document or address limitations on handler pointcut/joinpoints
 * changed ""Implementation Limitations"" to ""Implementation Notes"" inside ProgGuide
 * added section on bytecode limitations, headed by handler issues."
8599351489cb15cb93a960f222845509f311345a,"Fix for Bugzilla 42663: doc implications of Foo.class
  * added note about String+ and Foo.class to implementation notes section"
6d44caada8014fbec0f7e7a5135cab0ec81a9ff1,adding projects cricketcage and atrack
945e38ae163d58bd6e08c06ce02278584ee22f2d,Merge of dependent tests (only shows up under IBM 131 JVM)
62dd8185b52695fe284ce88db2f58c85dc257987,Added link to class cast pointcut user langauge feature request.
38aa20202ee04c6fa31dcf827c310a65dc4b96ed,inpath support
18bc9e7ebbe011bcfa3ab942c766bd2fa13081b4,inpath support
700a1a3b0cbe02993fedf1bc9598dd96fc5aab85,simple script to compile aspectjtools using ajc
6cded1d30cf1e59ee133ac08f44dabb7859b4fed,@testcase PR#49295 extra warning (join point?) for interface-typepattern execution
c517e8507cbc0be482d3eb1be2694e3f6486a4e3,fix for bug 49457 - test for duplicate pointcut definitions in classes
b8a0bc6e58f185b5804c24181795f570e4c0ec12,updated version of aspectjrt.jar which includes getCause on SoftException
eac16aee966695c8f0d22c4961c63a27e61dd2bf,added getCause method (patch from Andy) for 1.4 compatibility. bug 49250
01055e854df883746321b955bd5b9b41a840feda,"fix for pr 48522, not warning on (un)softened exception"
7322131ad6d3c5c14114a6b7945757f45d438112,"fix for pr 47754, itd of static method on interface"
ed48480aba7384dbf996b09e67010cdb86fa08c4,pr 45184: External pointcut refs not resolved if named pointcut used by declare
14a4edf940514c83c60f055c3cf409d1ce8db399,pr 48522
cda2dd4f82306debf0a2c04eb98586fac50cd696,test for pr 45184
97ab1e91dfba52187c14f0f7e5fdf6fafd9966c4,"fix for Bugzilla Bug 41952  
   XLint warning for call PCD's using subtype of defining type 

also added extraSourceLocations to IMessage+ for
message with multiple source lines"
1103c631ddda49ce4f032f6794f649bd8ef19561,pointcuts for whether after/around advice is supported
ffe55e7229887db7c2c404669ae5e95c7864ef64,unduly narrow API
e683ed8b8b217808f653a3231a56164ef03a689b,harness tests for extra source locations and details
4b0e98cb1bad527bf18c5d706ae761bb7003e7f3,"NPE instead of IAX for null input, clear out unused code, and update test."
50567fc1b7174aa7624c7bbbaf8457fc046b7241,"harness support for message details, extra source locations
Completely new (clearer?) message-checking code."
d3ce9b0f5cf1465d87b946e4025b39997a00b442,"harness tests upgraded for support for message details, extra source locations"
62bf312b972716a32ccb05b2e6427a4409807d42,disambiguating expected messages in test case
de570fcef14299ec316be22aaf4885fcbc1f48c2,"harness support for message details, extra source locations"
d131f0ebb3a73897e3d8fde263aad11a4ba88d47,added comments
8cfe92d193ed4b1c5d5945916b71879f2e02805f,"- disambiguated test
- using extra source locations for recent test case (and retitling)"
8d29495e512cf88357f43a044ec515506bca2768,giving in to the out dir...
7b081f2e0bece3414ac4f385cde75d7b54981099,Fix for Bugzilla Bug 49638  exception logging: after() throwing advice can't convert Throwable obj to string and ajc aborts
f029a06e9778e64cb336dbc3220ebb79f1a6c2f1,-logXML... round-tripping fixed
e4831cc3be2542aa37ea532baa51930746cd9493,pr 46671 ensure we don't look for source on the claspath (Andy's fix)
37e42fc43a6030e2b10dbf9e766c67e6434a7396,pr 46671 ensure we don't look for source on the claspath (Andy's fix)
fa41ac6ec439074fa75a84eeae2815dd20d71b78,"respecting Xlint:unmatchedSuperTypeInCall, if only to preserve that compiling the examples don't produce errors or warnings"
0a41a4eceadf9936f67a72e31652e35ddc80bd4b,demonstrating inpath and fork/forkclasspath
ef9b26876a26ced9a621d5b9ec7a6d611b1c04c9,@testcase PR#49784 aspect declares interface method
7a8f6a13c0facb82d59f381042be6b31eb60cc53,forking ant builds in eclipse 2.x
bba6c413e40539eca1b9c927e2212b8547a7c28f,"Fix for Bugzilla Bug 46750  
   ""declare soft"" inside nested aspect does not work"
aa9b8df028b35a921025c4b9922f225dd26090e0,"Bugzilla Bug 46750  
   ""declare soft"" inside nested aspect does not work"
a4a12342a16145ee4ac835c77827d8e16f6078cb,"Fix for: Bugzilla Bug 49814  
   ConfigParser.java:132"
346fd1c4acfa5360e1a71aa171da283251ef99bf,qa div wrong
19ed0a21b822004f6f2c688518c4230965a3b512,"move to Eclipse 3.0 M6 JDT core (v_396). Also makes 1.4 the
default mode (inherited behaviour from JDT)."
009389ac641f01000e27c48da4e1c0087d431b54,"move to Eclipse 3.0 M6 JDT core (v_396). Also makes 1.4 the
default mode (inherited behaviour from JDT).

this fixes a long-standing bug for matching fields and 
static methods revealed by move to 1.4 default"
87db1e79f6b882af30d382233589ebb1fc732be9,"Bugzilla Bug 44586 	
 	After throwing advice on ctors doesn't execute for inter-type decls"
b8d42c06d69f44e8c87a9b7d3ea290de0d18ed37,"Fix for Bugzilla Bug 49784 	
 	declaring interface methods should work as it does in interface
and Bugzilla Bug 45676 	
 	AspectJ enhanced code can not be used with plain old java anymo
and Bugzilla Bug 43972 	
 	Static crosscutting makes interfaces unusable for javac"
5c4db9cb620918dcf064ddbfc50f54130d3b2cab,"Fix for Bugzilla Bug 49784 	
 	declaring interface methods should work as it does in interface
and Bugzilla Bug 45676 	
 	AspectJ enhanced code can not be used with plain old java anymo
and Bugzilla Bug 43972 	
 	Static crosscutting makes interfaces unusable for javac"
7bbd1f419239dc9e8b46e7fd912b2bc007bbd76a,"Fix for Bugzilla Bug 46280  
   compiler issues error on inner aspects when privilieged"
5834de97836ebcc056415736c17c46e8b1dfaf5a,"Fix for Bugzilla Bug 44587  
   Erroneous exception conversion 
and Bugzilla Bug 34206  
   before():execution(new(..)) does not throw NoAspectBoundException 

All exceptions that occur during the static intialization of a persingleton
aspect will be swallowed.  When using that aspect (via aspectOf()) 
a NoAspectBoundException will be thrown with the original exception
from the staitc initializer as the cause."
0071cb4d0f30fc95f335eb6df73ad09e92d662ed,Fix for 38824.
9122ff2963909f54608b43cdb454a1282cbd9e16,"Gregor's mailing list fixes to BoundPoint  (two advice), plus (a) properties miscapitalized; (b) execution rather than call.  
Could also skip proceed and event notification if input value not different, but that's a different example, eh?"
ad2fb7a583f7451f3101f8101b090999d6a43341,"47952 fix: SoftException.printStackTrace(..) prints wrapped throwable (if not >= 1.4)
tested in 1.1, 1.3, 1.4 (but not in 1.1 release tests)"
25ba5aa7a906ab4884276b5f15abb8b82304faca,2004 copyright
b3b1eecf938fdc9d0bd8f954bc05ec38763299fb,"Fix for Bugzilla Bug 36234 	
 	out of memory error when compiling"
6d2abc17be48d8242e0945709bc54dcae52d6fb8,"Test for Bugzilla Bug 42515 	
 	NPE When compiling intertype declaration"
84054bafe51c1c667d427b28cc99a64fbd9a66a6,"bug: was not permitting target 1.3 or 1.4
rfe: permit -1.5 (compliance) and source/target 1.5"
81adb9fef97b229a18e7eb6fa28140df00409b01,supporting -target 1.3 and 1.4
2be86afae3780ca87a41bb7e65f3ce1afe9999df,"@testcase PR#49784 aspect declares interface method (abstract decl, default impl)"
3abb815bd6a7e769e59290900cd2a7e207e6dd44,checked in test updates
c6f438b5177e454c2ec3a75e4e34cc6d8e80e922,"Fixed one test per new messages, but left the pointcut test, which needs lots of new messages to be specified, to another day."
39df203bb3e4e4108f0526d4d1cdd4e1624d8b51,Added links to user feedback on language features.
9801902d32cf515617decb31d83e41aa2ffb52c7,Added javadoc for getExtraSourceLocations()
6f099df282f6d4994e09e457132677de7194c471,"Georges fix for Bugzilla Bug 50200  
   aspectjrt.jar manifest file name needs changing to upper case"
36dc0a5c631183cd674f2482a7ee0fae090d60ea,ignore amcTests.xml in cvs syncs
f24286d65906e4fca5e2872ca1fa8295c1ab6bc7,enh 48072 - ICrossReferenceHandler support to get xref info from the weaver
770ec4fea1257b17f77e34c86e8d619aa45d1709,"tidying up compiler warnings (unused locals, imports)"
305b0d18b1ac1b2d938005bcc2c5ff5ea651dd8c,"spring cleaning in advance of 1.2 enhancements: 
removed unused imports, local variables, and private methods
(still there, just commented out)."
24be3226200231852363a1e37ea21b48fb770ad8,"spring cleaning in advance of 1.2 enhancements: 
removed unused imports, local variables, and private methods
(still there, just commented out)."
0db40aec209afb7afb8d00ece28b3a8ac99bceae,"spring cleaning in advance of 1.2 enhancements: 
removed unused imports, local variables, and private methods
(still there, just commented out)."
c37cc870d18123be42a8cd508722217a46c1da60,"spring cleaning in advance of 1.2 enhancements: 
removed unused imports, local variables, and private methods
(still there, just commented out)."
14908174fcb2a52819e8c022424938ff9f2c9876,"spring cleaning in advance of 1.2 enhancements: 
removed unused imports, local variables, and private methods
(still there, just commented out)."
42787f91e7e3f2fc09246dbcda7031abde9e428d,"spring cleaning in advance of 1.2 enhancements: 
removed unused imports, local variables, and private methods
(still there, just commented out)."
9ab17831f2b23aee6b57cbe2dceba1563fa4d08f,"spring cleaning in advance of 1.2 enhancements: 
removed unused imports, local variables, and private methods
(still there, just commented out)."
dd7daa469f5282eecf6a927c6df4317ce05e5d26,"eliminated a dependency on org.eclipse.core.runtime that had crept
into this source - only the org.eclipse.jdt.core project should
contain links to other portions of eclipse source."
2b4e2512530a5d0a12e92071eb2e3198722dcd6b,Fix to stop leaving 'foo' files around in the top of tests after running the suite.
0c833438dadeeb26659cd901870d18d2c103658b,"Implemented feature for Bugzilla Bug 48091  
   Lazy instantiation of thisJoinPoint 
Speed-ups of 10-100X are measured even when running a small test case with minimal GC issues.

The actual feature implemented is that thisJoinPoint objects are only created just before calling the method for advice that requires them.  To take advantage of this feature you must use an if PCD or some other dynamic test that occurs in the PCD not the advice body to guard the expensive creation of the thisJoinPoint object.

-XlazyTjp flag must be passed to compiler to enable this feature.
If any around advice is present on the joinpoint then lazy instantiation
will be disabled.  An Xlint warning will be displayed in this case.

As a related optimization, several helper methods were added to
Factory.makeJP to reduce the code size when thisJoinPoint is used."
ab3987d19011d091529a5099eba1186fe15b5a66,"When not working with the branch version of
shadows/org.eclipse.jdt.core in your workspace (which will be 
most of the time), this dummy project will satisfy the
build dependency of the HEAD org.eclipse.jdt.core project."
d24bc49248ecdb661cf08e7f8ad29bb44d9ed865,"Bugzilla Bug 50458 	
 	Make a full implementation of org.eclipse.jdt.core for use in AJDT
Updated jdtcore jars, and an external builder configured in build
chain to refresh them from the shadows..."
189c687a9f362a78c4df459ad4ea3bfbf5e154a9,"Bugzilla Bug 50458 	
 	Make a full implementation of org.eclipse.jdt.core for use in AJDT
Pushdown of AjParser and AjScanner into shadows/org.eclipse.jdt.core.
New class DeclarationFactory handles creation of AJDT-specific types
on behalf of Parser."
9e3a03d72645690f365b68404a3e8d0fc2aec76f,"tests for Bugzilla Bug 50641  
   Better binary compatibility for advice method names"
b3074df1ee01ec677cf3e9cf0c9cb35e2d60dc38,"Bugzilla Bug 50641  
   Better binary compatibility for advice method names"
deff49aa316836d413e4bbb11307da8756008f69,Adrian made me put these in.  We seem to need a directory containing one file in order to satisfy the build script when it builds shadows.org.eclipse.jdt.core.
7bcfb2467baab99b39b4e6c4c289a156854f4bbd,include the jdtDepends classes
b7cb32b47315334b87e821504aa8d41551f8a9a1,initial stab at a bcel-building module
47e2459b15269743f137bc15245c7dfc3a4d6907,"generates accurate max stack height information for aspectOf method
this is a long-standing bug that was masked by the weaver which
would always recompute this field.  optimizations to the weaver made
this bug appear again."
ab413c4bfabc94a47ced0bcae39517d02fc06afe,Picked lowest hanging weave-time performance optimization fruit.
098317da0a9bf6b3b12ca3f75c20b74fe42c0374,Picked lowest hanging weave-time performance optimization fruit.
6cceb1b9c3b53e92166d61435f28318e2b9a8872,"fix for Bugzilla Bug 49295  
   duplicate warning or second join point for constructor-execution"
19bac866e44563dad29b6bebefa31c4e354ee96c,"Test and fix for Bugzilla Bug 50570  
   CatchClauseSignature has broken operation"
8b5dda194fa57fbb50a0a000af231d99c2dcdc25,Fix for broken license test.  New file created yesterday has 2004 in the copyright statement.  Added 2004 as a valid copyright year :)
3233d98b34b312ceda4e469e52d41629698ca077,"Fix for Bugzilla Bug 43792: Illegal Opcode Detected
this is now a patched version of bcel-5.1 -- it was
previously an unpatched version of bcel-5.0."
bece4680e604416148871e60cef77f0cd0808aba,Fix for Bugzilla Bug 43792: Illegal Opcode Detected
f5f74fd0bf1770273998aa3010c524a29dccd520,"Fix for Bugzilla Bug 41125:
LocalVariableTable sometimes gets BCEL-supplied parameter names"
a6dec8761f92f433170236156eba5e319d7ef5b7,"Fix for Bugzilla Bug 41125:
LocalVariableTable sometimes gets BCEL-supplied parameter names"
e5958d3ca1b3a8219701791b8c0f99dd86bc9e29,"Fix for Bugzilla Bug 42668
effect of an after returning type incompatible with a join point return type"
7cd8809a34dd3264b9c65b58d508c75cf534dfde,"Fix for Bugzilla Bug 42668
effect of an after returning type incompatible with a join point return type"
520ad8a1aa6073e38f99c90c35b085cba96c76ae,"Fix for Bugzilla Bug 42668
effect of an after returning type incompatible with a join point return type"
dc30f2cbc5221641aedba041010e0253c3d02d0a,"Resolution for Bugzilla Bug 46282
When creating obj thru intro constructor init code fails to execute"
aa147b791eaaec7c926b4baf1e3530a30dec75d8,new icons for declare precendence
01e73b8b835b2c4f32f2321e1b51a81ca2e6c3f3,Created 'notamodule' in bcel-builder module - will the build system now ignore it correctly?
56194927dcbc18904c50599ff17c2f72829de027,"Following yesterdays discussion, I'm temporarily adding a folder containing one file to see if it makes the build happy (we had to do this for adrians new module).  If it fails then I'll delete it and wait for George to return who knows the right cruise control incantations to locate the problem."
e78f02d84c55ab081744723e821e4031e1635246,Removing this rogue directory that didn't seem to work.  i.e. it didnt fix the build process.
481165a816d3209bed1b07b996a3b8f043140fd4,made JDK 1.3 compatible
775d1175b7da80535cc48d22cb424239d76594bf,"Fix for Bugzilla Bug 50641  
   Better binary compatibility for advice method names 
- I've run the tests a thousand times and they all pass, I'm still nervous about this first big commit though *gulp*"
e08937198958f6ec67d317e40b875a4848bc3f08,"Fix for Bug 51326: mispelled word: ""heirarchy"""
91cb850e1fe42cf1f5627571a7a488a4f6f1d330,Performance benchmarks from Noel and Matthew.  Run these tests standalone to generate a .csv file containing results.
8555cabe0c41e204aad4dac0c5c6236dc8144e7d,"Yes yes, I broke the build.  The performance code had a 1.4 API in it (split()) which I am now removing."
95f2f555025370059b4acdb9aca17b9db3b640a0,mailing list verify error
0d5ebc4e81463bf918585ebeaf4a3e01ab3db3ad,@testcase PR#52107 declare [int | String | Object] field on interface
ec3c2d9d30b2335404fa331ed3a0bcf2054f5a7a,Minor cleanup of ajbrowser.
d147bca7238301006a7c10d09ef2940eb771ff82,Removed stale ajworkingdir option from project properties interface.
0d5096c9b943aa294b663890bd90423a8becfef2,Added known limitations to ajbrowser documentation.
83198dbf96b93058941fe3d2f054d7cc42848172,Lightweight ajdoc prototype.
4e4a50e91244deafc41ed5fc3c25c3848e4d1551,Checking in Noel's update to the benchmarks.  We have to scale up the numbers because Jim/Erik keep making the compiler/weaver faster!
669cd7ce8634623c004cca5732c94a20fd7f57f7,"Fixed bug#45489 ""Structure model is wrong when re-opened"""
6ddae42579ceb781831e08f0fcf77a4ff4ffb5c0,"fix for Bugzilla Bug 51929  
   Advice calling protected super method causing java.lang.VerifyError 'Bad access to protected data' 
Also expanded test to cover protected field access as well as methods

Fix required getting the correct receiver type for both field access and method
calls to correspond to Java's complicated rules for accessing protected
members (JLSv2 6.6.2 and mentioned in passing in JVMv2 5.4.4)"
329a415e485db06993b5992960948bc6c61dd8ee,first pass at a guide for developers of compiler and weaver
9f52b4d30a2d31b47ad0c9df4230fc1fc10e12f1,Design of XReweavable feature.
b1f25a3c30be719bbf6ba13d25754380dd2ca939,"Fix for: Bugzilla Bug 51919  
   Polymorphic ITD fails in CVS HEAD (From ajdt 1.1.6)"
36f8e3c561a721243f8e9e6c0cfb71547249e300,"Bugzilla Bug 51919  
   Polymorphic ITD fails in CVS HEAD (From ajdt 1.1.6)"
16a0abd70e5fe2538c32994de05f52b6bf939ef5,Fix for Bug 36430: Xreweavable support
4012254ce1491b3b51f39da2ff240612d72b30ea,support for building the org.aspectj.aspectjrt plugin
5d3620130376b1356934f87483fa3686aeb51429,base structure for the org.aspectj.aspectjrt plugin
fbc0aa305ea367e5fbeb99acf9907ae3a155f16a,"Fix for Bugzilla Bug 51320  
   ClasscastException on concretization of if(false) 
(i.e. you can't use if/target/args/cflow/cflowbelow/this in deow - you get an error if you try)"
712e3f3c4201b7e20b21542b23ff5ca64758e026,Bit more diagnostic info in that test that fails on the build machine - it works for me :(
9a29a973f55a157c54b18bcf554a090bb8ef19e3,Temporarily commenting out unreliable section of the test.
a8c17de491cf0c062c50e7a7488d5074c3f30673,Fix for preventing the use of if/target/this/args/cflow/cflowbelow in DeclareSofts.
b063e77903d9bd8de7bbfc648da9e0b76ac632de,"Fix for preventing the use of if/target/this/args/cflow/cflowbelow in DeclareSofts.
(I hope putting this utility method in the Pointcut class is ok ...)"
c803296169a0a171fed9c889aeea130a30381b0d,Organized an import whilst I was in the weaver anyway.
75ce009e27c754b669d8949342a3c2e15c197db4,"Fix for preventing the use of if/target/this/args/cflow/cflowbelow in DeclareSofts.
(Reordered flow in creating declare soft munger and concretizing the pointcut)"
ff32dfb1ea7056dcafe28c7d2b78141568cc4fc6,Final part of bug #46347 (-inpath):  We do not copy resources from inpath directories to the output.
31bf65adc6905c7b6922a6d2b15e836267f33151,"Fix for Bugzilla Bug 52107  
   NoSuchMethodError accessing field declared on interface"
2d04b60e65247c2ab865549610e2a81d3293b73c,Georges fix to AjcTask for failing testcases.
5e870cf13b87452e0a79a737706e59c8323722cb,Fixing last test failures - per Georges suggestions.
223951856673c27ebec5ffb61b929fadb4b6f567,Georges fix to add build date/time info to DEVELOPMENT builds.
5d73494d7d222b92cdbb19f860f9215a07430681,"Fix for Bugzilla Bug 52394  
   inter-type declarations cause JRockit Crash"
4b9195763cb06c5c3d0ce2a25f8e5b9f98446dc0,Georges fix for test that verifies DEVELOPMENT build date/time stamp.
c79892369fa4225ee5eb71b42c96e289f2eb4fc9,"Fix for Bugzilla Bug 50776  
   fail in compiling aspect with overriding method introduction with different throws clause"
7fadb68e24cec28cbf990252bb926b60d1231602,regression test - provokes VerifyError in 1.1.1 but not in cvs head
70cc1bb27f1e13d8f7bcbb98a691ee37633791e6,"updated beaninfo tests for new properties, reenabled and updated compile-time check (why disabled?)"
92d0049be5785ab552e40ffc6a07fa5568fc18b4,-xlintfile option support
5d0a49d51e5a469ca09c61bef75b824415fe83d5,"-xlintfile option support in the harness, and tests"
281b698886b721aef7b15f356b0a4a50a2da7edf,Minor cleanup of build cancelling.
799a74bf1cb3350cb0ab8ec55d23075524d4f240,Port of ajdoc declaration hierarchy to ASM.
d5165134df129951544fa354b74b256bdb482688,Fixed generation and access of return types on IProgramElements(s).
1f78bbd8e7d3f4213479f805b6ea4796b5437054,"Moved clearning of relationship map to AjBuildManager in order to make
repeated invocations with -emacssym work (refer to Matthew's patch in 41181)."
4ee35142ffc1fb7d5776021c533bd4bfbb9cea1c,"Added methods for retrieving the signature of a program element as it occurrs in the source code.
Needed by ajdoc, possibly useful to other clients."
ec9ac363b0379ce8bb8c0783ab338d8ffaa9da02,"Added support for inheritance documentation, test coverage."
40680b6fe4d28b2d061fc4cf9b3efa6640c12f44,"move weaving to inside of the compiler.compile loop.
ensure messages are associated with source wherever possible"
2ed4c9f470df51b8621edda4451ad1768c36c1d5,"move weaving to inside of the compiler.compile loop.
ensure messages are associated with source wherever possible"
03abae3c03923335a4650d47d590d188062e9765,"move weaving to inside of the compiler.compile loop.
ensure messages are associated with source wherever possible"
087842e53c2f60333d1114f8781fa77f619175e8,"fix for Bugzilla Bug 48080 	
 	Context information in declare warning/error messages"
0c2aca0df707e4ac1d8f83aee8eaaa47b982a40d,"test for Bugzilla Bug 54098 	
 	-deprecation not working"
01095341153b24fcf5ab5f537ecc77077819b1f1,"fix for Bugzilla Bug 44272 	
 	retitle warning to ""circular {advice} dependency at ..."""
1f7d28f480f7f8c5e0316688a4f95abb62e7b747,guess who used a 1.4 only API then.....
5c67166488df998bc208567c2fd27f21b52592c5,"fix for Bugzilla Bug 51322 	
 	Introduce Unknown Type to class causes Null pointer exception"
40de354443cd1d88cf533d10f77608d1b0cbfecf,"Fix for Bugzilla Bug 41181  
   Support SerialVersionUID field if no new fields declared on class"
e6894a62dae5857568da40762c4f6daa6111fdb3,Uses 0 line number when it really doesn't know the relevant line in the file to include in a message.
cb2aaacf5c3fd4a745fd708c89feaab18435b0e0,"Fix for Bugzilla Bug 41181  
   Support SerialVersionUID field if no new fields declared on class
(Regenerated with BcweaverJarMaker)"
9413c6d26f53a94fa78b02cf228628bbdcbf635d,"fix for Bugzilla Bug 43714 	
 	weaving from an input jar into that same jar."
45b84e93b81522852b6034a2e922b9f3990ff48d,"fix for Bugzilla Bug 43714 	
 	weaving from an input jar into that same jar.
(adds outjar attribute to 'compile')"
9fca6d2c418cf886f060fb0eaff1c64fc647a8cf,"fix for Bugzilla Bug 43714 	
 	weaving from an input jar into that same jar."
e7e39213279572e5315f5a24883f8a16c84f9c8b,"fix for Bugzilla Bug 43714 	
 	weaving from an input jar into that same jar.
fully qualify outjar location in sandbox, and don't specify both -d and outjar."
41c6f6d0a10e881ac705a108cdd59f31d160e1c7,"fix for Bugzilla Bug 54965 	
 	Incremental compilation does twice as much work as necessary"
30cc0084947e91b4fe4d3b9f99301f9cbab50e6e,"fix for Bugzilla Bug 43714 	
 better test name for second test"
1a4c02c986332c37aa1d1e86867b2434892eb11f,"fix for Bugzilla Bug 54625 	
 	Incremental support does not work with outjar"
b9c42311b8159718277afea240f3c34376149106,"commenting out unreliable test - can't always delete sandbox afterwards, need to find out why..."
ad1f8449a6c35afac529fa0d966c585c6a3563e9,Deleting unnecessary class files that crept into the build.
b25badd04fe14e6d86b85e59632d357a15233df0,"partial extension of incremental test harness to stage additonal resource types
see Bugzilla Bug 54622 	
 	Incremental support ignores resources"
17f57d3764cf1f12cbbd013d9c659994ed94617a,"fix for Bugzilla Bug 54622 	
 	Incremental support ignores resources"
be76ce460676d1dbc75b95c32358412c4d5ed7f1,"fix for Bugzilla Bug 54622 	
 	Incremental support ignores resources
(part II) don't copy resources from in *dirs*  doh."
90fbe5d804038002cc651421a5bc94a2b20f7e70,"fix for Bugzilla Bug 54618 	
 	Test to see if we can compile incrementally ignores path changes"
34dbb0c41b3e324e3c7fc5a150c314fbecfd5e6e,"fix for Bugzilla Bug 47910 	
 	ajc -outjar jarfile does not contain MANIFEST.MF"
d91b72e7016a1ebbc3363fe8a57ec61c012deb99,"make sure this test behaves appropriately when run outside of 
a cruise control driven build."
183fc23883289ae42854ce9afcf2d3b0d29b7599,"Fix for Bugzilla Bug 40192  
   build cancel during weaving"
7d6b500be325633c3057abaf973b8c56464d6706,"fix for Bugzilla Bug 55134 	
 	Incremental compilation does not delete weaver-generated class files"
bd589bc1fad5a97182de39ec47310aef1a288d8b,"fix for Bugzilla Bug 54621 	
 	Incremental support ignores binary source"
5795b4afc617d5ed3ce9f9338ff59fe275bd56b0,"fix for Bugzilla Bug 52928 	
 	Private members introduced via an interface are visible to the class"
0a017593dcbeab409c1634da87b3f500b848e903,"Fix for Bugzilla Bug 53012  
   declare precedence on a class should be a compile-time error"
68e346c52831d8d98263ee5e2e197ee1f868a76e,"Improvements to incremental compilation of binary source to:
1) Add dependents of changed binary source files
2) Only add changed binary source files in the first compile-loop
iteration."
4907ede37a5688c7d4b35785bcf9b3da54c80c15,"fix for Bugzilla Bug 54721 	
 	add this to AP  (Signature.getDeclaringTypeName())"
c298ef779c6430ca130ca6749b60818b71bd0275,"fix for Bugzilla Bug 54721 	
 	add this to API  (Signature.getDeclaringTypeName())"
0710636df57a438da3306037373fc8760fef7aa0,added porting to 1.2 documentation
5ca765d79fe9fd1445cf12841d3dacd96d508862,added link to README-12.html
cce24d74634779801e999fb09f9031687eaa3d31,placeholder readme for 1.2
0378e63cc5a9ded87f79152ea68c08defeb3e8df,move injars below inpath and mark it as deprecated.
9832002037b9ea7ad1986c22463f454917d333c0,default compliance level is now 1.4
8efc2d09b4312b52978b9a7ba70c953c898fa1d3,updated tutorial for AOSD 2004
c3f286ab51c94779820dcb529609142a846570be,added in significant changes from 1.2 release.
aa335f2a1986353cb757dbbcb6255bab448dc99f,"Working ajdoc to that generates advice links, with tests
for generating spacewar documentation."
7ec4d6147333a9505cbd34f80f76356e46787acb,Feedback from AOSD 2004
3b6a9d338f07bac03b12d81d118f23d40c2a8e7c,Minor non-disruptive ASM API cleanup.
6f035006e996dca8d183fa9028f5e0b057b84ff9,Added more information on source signature (for ajdoc)
e96d92dfd6568b37b22d230a75f407dd1930544a,Expanded test suite.
4c584fc666f309dd1bf023ce033008a1796de89c,Added ignores for test ouptut
f114f42d16a86d034960f9bc2107bdd093c1d29e,Added removal of temporary files
f716a6fbdd5c9977dc6faae8f40d94f4717c269e,Improved link layout and removed generation of duplicates.
fe4fc06aa414d03e0b3124aa67f9546dc67b659a,"enabled dir-changes, changed output messages"
c2bcc9d1c7f47299055bf68c4f1ae32f5aa9553a,dir-changes tests
60b3a70a85f5b0c1dd504fbe4410d52664f63eed,recursive message checks of run status with children
a0c02a3f1fcdbe81157d0fdaa8a0d0c8b1dd2cd1,"running negative harness tests, to verify that expected-fails actually fail"
bff61ab1e3ae811650af9b88e344035607619b33,"Jan Hannemann's design patterns implementations, plus .lst files and test scripts"
6cbf9cca10146bca581d4db989aebee0c82b558c,"Convenience method to run ajc in a child classloader and get List/String results in the parent (e.g., when running as a JUnit test)"
180a2e2b4cff737e9aecdf8692cd6300a0390722,updates for 1.2 release
c06be213a35afeb927fd548ee05bb703763ac2b5,images for README-12
5c918095867e7f39d7a947d664fe30bd20d1d6bf,updates for 1.2 release (work in progress)
5c519477cbd4825b9b5683a0f24c244a5f65f86a,first completed draft of 1.2 readme
e5ab0a5339aa52fe4a3810f18476806b65c0f222,Jan's 4/2 bug 50932 patch
8362834a932f63a0ac5d25d52898b658d2fe2b81,Jan's 4/2 bug 50932 patch
fc1c15110e8a9cfafabad0dcc4c10445725c9fb2,"fixed so that failure is graceful under 1.3, and to avoid
calling main method in javadoc since this ends by calling
System.exit. Solution is to use execute method instead
(1.4 and above only)."
33d8ee9eededcd1219a6cbd1d063af005d40a3f7,"fix for Bugzilla Bug 31460 	
 	Weaving class loader"
0521e79aea0550b1357a7ccc6a5050f8ce27ce9b,"Fix for Bug 55341  
   error Type mismatch: cannot convert from java.lang.String to java.lang.String"
c336c84dab93f27bc473b7a6987259cdca5815ec,"fix for NPE EclipseAdaptorUtils.java:147
as reported by Wes."
4fff1dcf9116dfd68b7c9688597fcdaaddcf4146,"fix for Bugzilla Bug 47321 	
 	build.xml needs iajc fork workaround"
6fc766058bd163744fb0933f2fe5db89664180d4,"fix for Bugzilla Bug 48389 	
 	Cannot assign to final fields in intertype constructors."
fbfd1a5891a7fe51ed9f2e899de41b3535852bfa,"best to specify forkclasspath when forking to avoid snooping Ant's classpath, which fails in some contexts"
b66f05a7abef6e187fb7e8bbe34a3c3e509e2321,requirements for declaring members on interfaces
d47986d2939eb961e756c6136663c5e0dddc136a,untested code to skip any /tools.jar library antecedant when building other that testing jars
b2befd4b1fcc89ae80553f3aabcb55ca89e50902,added bug db links and notes wrt newly-enforced limits for declarations on interfaces
8bf5e26fddd79c3625b929104e398990bc2d4886,@testcase PR#57432 NPE's when writing some declare error
a5b477d102e2ba32d7e431bd2ab15c394b910e73,1.2 rc1 build/pkg : Make ajbrowser depend on ajdoc
806b737230fd064080a38157b0bef0a7544a63f7,Fix broken links in ajdoc.
f75a66ece05d2ebec90bccb3dccd6ce9b2baebc3,Add ajdoc.jar to jar classpath
4c5bf9012b763c91fee684c7cfb9cb0e50549769,"1.2 rc1 build/pkg : Update base version from 1.1 to 1.2. Add tools.jar
to the ajdoc launch script."
88a950aae400051fc0e79ff0ae627453622843d4,"1.2 rc1 build/pkg : Add in ajdoc target. Temp method of clearing stuff
from the aspectjtools jar."
684e935ada588732053630449e533069aa3185b5,1.2 rc1 build/pkg : Add in ajdoc. Update version from 1.1 to 1.2.
26b15ffdeda984a3080705bef438cbf44f98722e,1.2 rc1 build/pkg : Add in JPEGs to the binary.pattern property.
8c94202a12904edf0cb03e2770cf8b022da6b0f9,1.2 rc1 build/pkg : Includes changes to version and to build ajdoc.
dd635a409c0aa6b684001027fb2af6cccbd1e7a1,1.2 rc1 build/pkg : Manifest template for ajdoc.jar
b0774a8599660c15897d85f80201edce8377aada,Fix broken links in ajdoc. Part 2 : fix links to types in other packages.
6849af0a1f646ebd61d295697b8bcfccd690c4b9,Regenerated test data.
3500feadbe6a3e2f2b4b4f4d360c2236b25bf7ee,removing d:/eclipse_aspectj path
3b7bd4b6f198e63d41c7491d796d4ae270d6fe7e,AsmBuilderTest.testNullHandlingOfVisit() now checks for an NPE instead of an EmptyStackException.  I'm not sure how the original could have worked in the absence of the handle cache.
213f48fcbc1f10dd33e608b66acd4d75276bd4f9,"I just committed the final round of updates to ajdoc needed for 1.2.  In a nutshell it's moved forward a ways from the previous ajdoc:
- AJDT integration works
- generates documentation for all the AspectJ modules
- works on 1.3 and 1.4
- comments and Javadoc tags are properly preserved and resolved
 
Note that the hope is still for ""declare"" documentation to come in the form of a contribution.  

Getting it to work for our tree involved a bunch of bug fixes to deal with things like anonymous types.  To run from our tree in bootstrap mode use something like the attached batch script.  

I had to roll back some of Andy's fix to broken links: getRelativeComponent didn't work properly for internal anchor links (..html#<mumble>).  Andy, could you check this against the current thing against whatever was breaking for you, and ideally add that code patter to CoverageTestCase?

I added -XjavadocsInModel to make the addition of Javadoc strings to the ASM only happen when request it (prevent bloat of the model with strings.  The running time of ajdoc is now dominated by the compilation time."
7b3b23d506b17635209bd8b3b3671e42f9ccacb1,Regenerated test data.
b112bc9ab992a16d1270dec069772dbf74bfce1e,Extended test coverage
0838dbbc6b02c59485da9cda1dccc27423aab799,Added support for getting/setting formal comments
865310a81d644d7ec6ead8f662af1dc4e79b8f07,I added -XjavadocsInModel to make the addition of Javadoc strings to the ASM only happen when request it (prevent bloat of the model with strings.
e7ac54fae25b797a0d3609350a27330bea302fb9,"Fix for Bugzilla Bug 57430  
   exception printing"
c2b5871a6d0f6c7620421482a8438bcafc9f9ee8,"Some of the fix for Bugzilla Bug 57432  
   NPE when creating declare messages 
[Allow for null targeters - for example when the class file has no debug info in it]"
f3916048a7d49f4a2e6ff44c154d04a7045a817d,"Some of the fix for Bugzilla Bug 57432  
   NPE when creating declare messages 
[Use the correct value for initializing 'maxProblemsPerUnit']"
546b131e21c10f5683efb153bfb3da42ab8f8238,"Some of the fix for Bugzilla Bug 57432  
   NPE when creating declare messages 
[Modified XML to build debug/nondebug variants of the library]"
4ebb2030a1b87f3b6efdd5af61c4ddb59326cdf0,"Some of the fix for Bugzilla Bug 57432  
   NPE when creating declare messages 
[If we don't know the originating source file, have a better guess than 'Unknown']"
da1a040db61d31617ba14f39d6a3f24774ba694d,"Some of the fix for Bugzilla Bug 57432  
   NPE when creating declare messages 
[Moved the testcase across and added a second one for the variant with debug info]"
c79fff2d91096ce21215f4617675f1a693f682f8,"- Added support for 1.4 sources (use ""-source 1.4"" option)

- Made output class files go to documentation directory (-d) rather than source directory.

- Added ""-XajdocDebug"" option that will keep the source files generated from the ASM around in order to help people send better bug reports.

- Any declare forms that ajdoc doesn't know how to generate docs for get printed to the console and indicated as a limitation.

I also extended test coverage to declare forms and added proper clearing of state for multiple invocations from test cases."
172f6f9edc3f295616e41196bfe36fcb653b61c7,"Fix broken links in ajdoc. Part 3 : fix links to members of types
in other packages (again). Also, fix for nested types."
536a11fabced912445e6f293692af69f9b0d8048,Moved to default package.
c5537bf1f37d27f39ca729803f2d664167b3792d,Moved from the other package.
717e900e8aaa15a7ca2fcca7551a370838dc263f,Create aj and aj.bat launch scripts at install time.
2674dec2bc1524c117003708fe590e920c3f7cc4,Now created at install time.
b4bf0078ed233d0bef56f522daf4ed0929a74aca,Add in unit tests for Ajdoc
b5c1e2ed8a4dbd608e471be5fdaafb1cf60d8600,Added support for additional javadoc 1.4 options.
8fc436f8faf9430f143de6d874f0a677f56748a0,"Removed generated docs since they're not yet being used by the test suite, and add noise to CVS."
a26fd2278072e32497908875ed1f96f444ff4286,"Removed generated docs since they're not yet being used by the test suite, and add noise to CVS."
3d8ddd7949c38db87d7b31eac6722bebd92317ae,standard junit dependency - still need to fix the tools.jar reference
b0d32cafba6241023d1efdc343a2744a5e25a00d,"Fix for Bugzilla Bug 57436  
   Java 1.5 fails to run classes produced by ajc 
[ Not the perfect fix, but passes all the tests I can find - lets see what the build machine thinks of it...]"
66be44ad6c64129239852054a3e75b0c5958035f,"Fix broken links in ajdoc. Part 4 : fix links to members of types
in other packages (again). Also, fix for nested types. Covers more than one
level of nesting. NOTE: the tool is currently not capable of producing
output for more than one level of nesting. Bug will be raised if Ron has
not already opened it."
0c17e65b4d18052e78c6a67bae77a0b3a0427a8c,Fixed: 57780 ajdoc package summary should not show synthetic information
91a29b735cee8c36e903c6c5dd8e3676d6527536,"Fixes for:
57780: ajdoc package summary should not show synthetic information
57773: ajdoc crash"
994eaa21e4bda868fc25250e1a5bc3f57ab8ec53,Extended test coverage to various permutations of crossing package and type boundaries with links.
b8ffb1f44c4e67a8742c411fb1c99744763a7132,"Fixed: 
57780: ajdoc package summary should not show synthetic information;  
57773: ajdoc crash;  
Cleaned up link generation, added support for arbitrary levels of type nesting."
fc8ac16539d6142b0abd9c690e6844fbd6d4c599,Extended test coverage.
d982fcb06bb76b48c1d64970c22a1e788476176c,Extended test coverage.
f00f5060e388cde58ad0088d29fb6cb7c66302aa,Clean-up ensuring no resources modified as a result of test runs.
d3f22340b84c9254f7893e71fedb40ac7467abf9,Georges fix for relative paths in ajdoc.  Means we support multiple browsers and the doc is portable.
e1fb8059ea0aaf45df285d39577ac7c52ed65099,Updates to ajdoc docs and notes on current limitations.
bef1aa119eea26e12f46ed031f2f6922505a72ea,"added lazyTjp to list of accepted X options, added undocumented xdone flag"
d794058377321a5bc1097539341d28fea4a01e48,renamed sample aspect
46f528db591839007a9c39c52d22b3cb1ecaf3ff,"cricketcage skipped, external link to top, updated design pattern entry"
48ff20ef404ac9751d37a6f01b04f3dcd502d97b,"Testcase for Bug 58679  
   Regression from 1.1: NPE in CompilationResult"
19ac4cc8c0d9b2deb29f1df0d15df965563038b1,"Fix for Bug 58679  
   Regression from 1.1: NPE in CompilationResult"
4b025ddd88927b6889067ced6a663cba8bc25e8e,"Fix for Bugzilla Bug 59440  
   NPE when binary weaving a ctor ITD."
be37b087453960e7173422b312b706ab337a97ed,"Test for Bugzilla Bug 59440  
   NPE when binary weaving a ctor ITD."
a97f3b6758f778e9a19843ef984085b34be8e7d0,"Fix for Bugzilla Bug 59596  
   Null pointer exception while weaving java.awt.Label"
d48a48032c832e261bbfa3dd94e2c9f1cfc5a0a1,@testcase 59895 incremental full-rebuild
5a3430cbce20dea4de5e4162b2fd3378919d5541,"Partial fix for Bugzilla Bug 59397  
   NPE in compiler when using (an unusual) declare warning against a ctor ITD"
591e8fd6d22f308af87ed766884e4e5e8ceaba09,"Test for Bugzilla Bug 59397  
   NPE in compiler when using (an unusual) declare warning against a ctor ITD"
a4fef441489604938a313b2beac300df315c1709,"fix for Bugzilla Bug 59895
 	NPE updating an aspect in incremental mode"
1fa4c5fe1b08d6e3bdc6e3b77e7f9d3218e14736,"change test cases to use File.pathSeparator rather than "";"""
0a624fc22e84c2665f17a18b9c66b9b387487e0b,"fixes a tiny window of error in incremental compilation. File.lastModified()
only reports timestamps to the second (rounding down). We compare
against the lastBuildTime. It is therefore possible to miss updates
that have occured <1000ms after the last build."
a0a485769158ab44e251deeecf8c294ca3ac7526,Start of ASM API docs.
a17b51bec37c42f0bf29df5bc454aff948bc6105,Fix for 54238: Restore build cancelling to Swing-based IDEs
d5fb6e32e6a694b23fb5bfbce35031c3e253e3d1,"Removed "".org"" from aspectj.org image for installer logo"
6ce049f5884f0bd6d7503d694911f33c8c1f4e29,updated latest release
39f5d7fc92e1a18e2a4c0fd398a79a07460005c5,interface constructor-execution join point gone
5f6b18be7a143c961ae1de5ffbf1aef3d249a55e,"Fix for Bugzilla Bug 59909  
   CFlowStack removesThreads to late"
bd1603312535dea0f2c6109a8b074631a3218929,bug 59599 - dir-changes delay for filesystem
0905c8023231f73cb81a98cda18761715fd11eaf,"Fix for Bugzilla Bug 59778  
   InterTypeMethodDeclaration.java:104"
3ed93c6d54e8a54c75398d341d5bd081d913aa3b,"Tests for Bugzilla Bug 59778  
   InterTypeMethodDeclaration.java:104"
5d707dcb0ccf45d515b3cb1d350695fc38992819,"Added notes on:
- Incompatible BCEL versions and what we think the solution is ;)
- CflowStack changes to improve performance for multi-threaded cflow apps."
54c2294c5f4d50aed42049ec8db0f128293d30a1,Had wrong entry for version in MANIFEST - due to some packaging I had done to build my own 1.2rc1 - should be fixed now.
4b65e3caf070cb578b8db8fae331e990d9dfee27,"fix for Bug 60936  
   error message for constructor-execution pcd"
b9ec4df1259123c4cccc09f5a8b0549b412ee071,"Fix for Bugzilla Bug 61538  
   nested uses of this() inside constructors not handled properly for initialization and preinitialization pointcuts"
913a5d035597bd7b6dfd12458ff38888e3978cec,"Fix for Bugzilla Bug 61568  
   wrong variable binding in || pointcuts"
b127f5214ae81a3620794d8bfac97df7ad9e23f5,"Tests for 60936,61538,61568"
052de1776081d412871faabef068de543e21f360,"Test for Bugzilla Bug 61538  
   nested uses of this() inside constructors not handled properly for initialization and preinitialization pointcuts"
cc05140b03b27a5265e68573f926453ddb9075ea,"Test for Bugzilla Bug 61568  
   wrong variable binding in || pointcuts"
15c8bf939467b06856b52624dea3dea3a23b3b1b,"Test for Bug 60936  
   error message for constructor-execution pcd"
a4afa08a96f66c4de0edc676f9c4723cf0819f9e,to do list for building the 'ajdt.core' part of AJDT.
66818c77ef60abcd8562e0482fe44541ad185c0a,"Fix for Bugzilla Bug 62073  
   false ambigous binding error (introduced in 1.2rc2)"
7051338a0064c3a43223e26e3ace8b64258200d7,"Tests for Bugzilla Bug 62073  
   false ambigous binding error (introduced in 1.2rc2)"
9ebfc84930fde3f56a0166a5abb671029d457ea4,"Fix and tests for Bugzilla Bug 62227  
   Load Time Weaving aborts on any kind of warning (declare/xlint)"
f0e7118cd2e6a85d9842b160ecb45869bf2ec788,AOPAlliance adapter sample
7638feeab612cf4965cbbaacead58caf481d6239,"removed Maven section that is out of date with current Maven, which supports 1.2 directly"
b8d69e0fb755e3565831662007cef08118b24bd5,"Fix for Bugzilla Bug 62458  
   An if() pointcut inside a perthis() clause causes an ABORT - null pointer exception in ajc"
68bc96dd1086d5832e96395b09f49da2b8e5f995,"Tests for Bugzilla Bug 62458  
   An if() pointcut inside a perthis() clause causes an ABORT - null pointer exception in ajc"
cdfb3edaeecc171e912040fc9c68fe002bfa459d,"Hopefully better bcel-builder build system,
instigated by Andy actually trying to use
this module the way it is supposed to be used"
3cc0b4160db0259790593ce71b12222521e4e56d,"Updated with fix for Bugzilla Bug 62631  
   Generated class gives ""Illegal constant pool index"" on loading"
6de5ccc14f5dbebd697204b6d8109a48457fcd40,Patch now includes the bcel fix for 62631.  Also changed the bcel-builder build.xml to construct a bcel-src.zip that matches the bcel.jar - to ease debugging.
39c3a3bb4a0c939c1dfbc33b0ba560614b43d8a2,Georges fixes for 61411
775136e0101461d2ee3d6332ee805854861e0b7b,also verigy that dir entries are copied when copying a dir.
bace19245b7363da6c2c1ba32ca46c14c68b532b,"add direct support for reweavable, reweavable:compress and noInline in X options"
93230d70a35d51693c51a1fa9e549acb31611a10,don't sync bin dir
1c61f2c34bfb9f3b5383c930366b8d3243d08f9e,replace hard-coded use of ';' with File.pathSeparator
572437d8100e38e4295f8a32a2779c69cb2f2895,"ensure that no test involving the checking of timestamps in
directories can complete in < 1 second (File.lastModifiedTime is
only accurate to the second and truncates)."
c81c3be6b8066c25a0e540d9d49e6a38c3fe09c3,Added AOSD 2004 demo slides.
2f50f7b680b302a89e342f0caa43049fcd778cf1,@testcase PR#65925 Valid but inaccessible type names should not be flagged by XLint:invalidAbsoluteTypeName
e31d2ba53cecb7f38e9803d1cc6da735e36292fe,"exposed additional factory methods for creating signatures
(the create from string ones that already exist seem to be unused
and are a little odd)."
bfa7137de314d9510e94629f5777c129dcab7cab,updated aspectjrt.jar with new Factory methods in
092ff9a403e6362fc2c383deccbe7b75104a53df,"add the runtime classes into aspectjtools.jar. needed because of
static dependency from weaver classes to runtime classes.
Better than alternative of updating all ant scripts that fork and
the ajc compiler scripts to add aspectjrt.jar into path."
2782beb6b69fccc2488a96f0001e97a70adcafdf,incorporating latest updates in shadows (aj_v_396)
9cbf668c8c728780b71506ec42036ca79a6457ce,add a getName() method to Lint.Kind
7244306a60a4bc92d1d01c48de77e369bba402f6,"enable construction of a BcelWorld with an externally provided
ClassPathManager"
685ad4356300bdd6bad7451521f98a413a0ac726,raise visibility of default constructor to allow subclassing.
33ae558f9a81b8a059a4f909b8c630bd6d8390ab,ensure tests don't give false failures on fast machines
cc06e1423e24c178b809cdc62ec3a73dd41bdfb2,"added a method to all Pointcuts that matches against a
JoinPoint (as opposed to a Shadow)."
cf8974d359278832b73d10890eca625f485acb5c,"additional test cases to cover matching Pointcuts against
JoinPoints"
2327a54f2652c02b6114f867c2c9b775cbd9792c,simplify options processing for AJDT
2c407239e624fe3245e735c14bbac6de9291ca22,make this class live up to its name at last
1c2f67adb223e3cd54c5fcea90d35336e44ffdee,new classes used when building inside Eclipse
3120e45482a24a197ae2153238e104af8b2c6862,tests for the new options handling
9c0a95f7c55f55c14ab57c418e4a55ef234c67c9,removed hard-wired dependency on AjBuildConfig
7a28eddf75ab80c8c4f52445e0ce0a0315b8349d,use new AjCompilerOptions to store options
f7b9262987357427c40d48b2d3f3488d4af49ecc,adapt to new options and EclipseFactory constructor sig
a635a5de4c4b729cc33701f1d82c5c018c2259de,update tests for new options processing
b2e2422ea564e71473f5c5a78e8c711167c1a738,set default warning values correctly when passed in 'null'
d57c4726eba99e78e9fdd04ec5008aa655216ac4,new version of build.jar that does not exclude runtime
4c15d23799c086731e33e4506bc5fe5417bc14c5,"skip on the exclude runtime test rather than patch it in the build file.
This allows the correct testing-drivers-all.jar to be built too."
a410567f2d9da6df3cfa51af84a6f7bc5a9c0418,handle primitive types correctly when doing RTTI resolving
0ffb7cb8f5b01873495f1d419e4f59c13816325c,"ensure args() handles boxed primitives correctly when doing
runtime matching (against JoinPoint)"
2489444ba5813cb1f3409eab9d04aa73f1bb3939,harness support for dirchanges delay (milliseconds) attribute
3707411c2b5fdd0294c2ab5305c32766644241f1,Fixed: 68494 ajdoc does not support .aj files
2cc4826419d8c08e3879e600b82354fac2596241,"Fixed bug#69011 ""ajdoc fails when using default package"""
8dc08453232f9b4c1572ad0feb60979fb07336fe,"Fixed bug#70008 ""problem with ajdoc -public"""
77a8d52969465ee104317127c7a4bf5859ff147b,Expanded javadocs describing examples of ASM usage.
ad6d6f62831e62589cfe6dbb5ccac3b3fbb2acf0,Generated aspectOf() method for singleton aspects will now decompile cleanly.  Might help with bug #63347 (JRockit related)
75852d7b1915cddfd4ba3dea272324617abdaa60,"Fix for Bug 70619
	  	compiler aborts with ""conflicting dominates orders"" with circular declare precedences"
1e5567686b5b71a2233820e1b87e7498dfcd2653,"Made AsmHiearchyBuilder extensible in order to support tools that require more
static structure than is currently offered by the ASM, e.g. UML views."
66e2167bdae05b1e977836eeffdd87286677676b,"Made AsmHiearchyBuilder extensible in order to support tools that require more
static structure than is currently offered by the ASM, e.g. UML views.
(changes are covered by existing test cases)"
bc207618dff04f2b83239783ad6074c0827a0f66,organized imports.
ee59f0ec0cd86841b4d1f8d8f6487e24cb026b80,organized imports.
9867cbbcc40e471fb07ea7726fa02664f36ac8e8,Test data for -showWeaveInfo
936459c28229321deb0b09d076193be32cd9754e,"Fix for 53999
	  	""can't bind type"" message has $ for . in type name for declare soft"
6fd3e87d4dc38f1e237cb6ab75321eadd56e0a75,ignore .ajsym files
b18436307ecfed63c8995fd35013ffa07e5116e7,"Fix for bug 69459
	  	Hiding of Instance Methods by static methods"
6ea830044009af2991178f1833b6386143f2cc1b,"fix for Bugzilla Bug 58681
 	-X should output available -X options"
55d0bbdaf4459f2efbeca045b8dce06cb68f9dd1,added -XserializableAspects
5130e9dbb7ad9b806475355d8c2861eb57085656,"ASM Usage and extension examples, implemented as test cases and made
available in the sandbox as an Eclipse project."
00882c7b5a504224c714175e5b70f1591ba0722f,added no-arg constructor for convenience
c143eb5ec12a8ee9cf480e8bf4a4e12acef38d40,"Added declare parents relationship test, party commented out and waiting on Andy's merge."
573741c8081c6b6b45921cafaae39f37eede2302,"Fix for 64331
	  	java.lang.NullPointerException in WeaverMessageHandler class"
10c6de6fbc8a0b9eb07801f4ac19bea8304a9cb3,"fix for Bugzilla Bug 48990
 	Special case if(false) to not require a dynamic test"
b383dfb6458c3871fa09ac71768899e9c1683822,"fix for Bugzilla Bug 64585
 	Stale ITD example code in Programming Guide"
fdff68edb5e7e5ec93b7a71ee11b9fe635c88bc8,"test for Bugzilla Bug 64262
 	ClassCastException at BcelRenderer.java:16"
770a4d6a1474764dd24e292e0404c04c44f33d90,"fix for Bugzilla Bug 64262
 	ClassCastException at BcelRenderer.java:16"
45bce91f642a86ca3db7238d9e4cfb81d85e4f5b,"Fix for Bugzilla Bug 61536
	  	Front-end bug, shouldn't allow patterns of the form foo.., should be foo..*"
189dd76697c3c1550bb14d989cb7b534f0c08402,organized imports.
069803447def29131c94ef1b0710f03bf61fd47e,organized imports.
34e88811b3b95d50a66614feb80dc70631487728,organized imports and deleted unused guff.
7321d9dc015a3af650c54113883b340e4def654f,organized imports.
4feb835a5339c3f63d73fbd6db2fe307e1f08ed1,"Moved all weaver messages into weaver-messages.properties.
Includes fixes for Bugzilla Bug 30439
 	spurious ""circular dependency"" error"
ead60730f87d1eeb644a9a4c9dcdcfe85ac0b240,just an extra few comments...
680d359a56125663245a8ef6a15f907213c37362,Now ITDs are reflected correctly in the structure model.  Made getSignature() more bullet proof in the case of incorrect programs.
ed04a77d91b396b7a0149ec663960488477b1eb2,missed the word 'to' out of new error message
963a4c45c5221ce0cbdbbe3fc49195da1d7a7d3e,organized imports.
354314541812fa2ef5a561d422b022410555d498,organized imports.
2ec27dacd9bb565c01e34c87521c622a20ae435f,"fix for Bugzilla Bug 40206
 	need common isAspectJSourceFile() method"
ec45015f60f6e63500a960fe6a16f002f2879f93,"fix for Bugzilla Bug 40206
 	need common isAspectJSourceFile() method"
a93ccda3c2052b0d39a8cbc9182298222f7c932b,went for [error] in the end based on a quick local straw poll...
2e8c6d5cc03281df6a9c55b5dbf2d34dd32a401b,Upgraded to Eclipse 3.0 final JDT core. v_449a_head_before_30_maintenance
d8d56afde2f495925faf9111489d0add816c9330,"added some commented out debug code that is useful when you want
to get information on a failure in a forking task"
5baba85f6c5a3850b4bd3f1205ac831d9d3761cc,Upgraded to Eclipse 3.0 final JDT core. v_449a_head_before_30_maintenance
9aed31d18e3848c72c6963dc3a6ee4661a79add9,"Fix for Bugzilla Bug 70773  
   AspectJ Error: ConncurrentModificationException thrown: null"
7f19ab47a3df5327c6246420354089d1db1c765f,"Fix for Bugzilla Bug 67774
	  	Nullpointer-exception in pointcuts using withincode() clause"
2b8fa314f21eddf8551715fdd571da2b611411d0,"Fix for Bugzilla Bug 57666
	  	duplicate manifests cause resource-copying to gack
(Contributed by Matthew Webster)"
f1667c2184c15c06ad5ad014a6bff4c543daac52,removed unnecessary TODOs
fe049bdf23ae91b938e64fc2106aebf72be34e3b,Updated testdata for weaveinfo messages.
2982b4cc622a2a95429b16f0aa3c55b7e20d798a,"The BIG commit.
- Enhanced structure model support.
- *Incremental* structure model support written and tested (currently switched off, see incModelTests.xml)
- -showWeaveInfo compiler option
- existence of a 'runtimetest' surfaced through relationships
- UI can determine if errors/warnings came from DEOWs.
- Code to enable type mungers to remember source locations written (currently switched off)"
ef7885fd1269261aec9cb1265f0e15472fdb03bb,"Some more fix for Bugzilla Bug 60015
	  	NPE, Incorrect XLint:unmatchedSuperTypeInCall warning"
9bf0a7543072b66835b2417ce932fc34da4e45ee,"Added support to ease programmatic testing of compiler (AjcTestCase
class and accompanying support)."
ef909dddd6b8728aba25dec9aee04d5e180d8662,The JUnit test suite to end all test suites. This should come in pretty handy....
9a051d348a240095e56ead5485c2dba8cf6ad4a7,"XMLBasedAjcTestCase class and accompanying support. Drives a
junit test suite based on an ajcTests.xml format test specification."
0f211e17cac9b031ab8d9115f9030b3e65d3927a,"Spring cleaning in the test suite. Docs for AjcTestCase and XMLBasedAjcTestCase
added in docs dir."
91cbdbb0b57f70b7fe6965c5dc8b6b00452a508d,Don't panic! The tests haven't all disappeared.....
d7080dcd31e55ffeb5a2885f9db1a7927fc8eb39,A few extra failing tests I unearthed along the way.
ba6b00472c8964dd0a6dd4274698241d790b695e,Will this fix the build?
786a1e3a560bae84aef26783e8431a3f7f8fc4c0,"Spring cleaning in the test suite. Docs for AjcTestCase and XMLBasedAjcTestCase
added in docs dir."
393654bc12ed4c0379980955c4ed53e6aa6e778e,Works on Linux too :)
88a602a39d9e8f6872b65c310b4c6c83028f074b,platform neutral path handling.
166bab2ee66ec2d8cec0ac924e88f8c675beb7f8,Argh! Surely this will fix the build
086757332d7de8fa5f9f1b72302f3daf1aeb3316,"fix for  Bugzilla Bug 37607
 	Spacewar demo has wrong focus on 14 JVM
(I'm allowed to do the easy ones too every now and then ;) )."
290a13b086dc2c7f50330092d56d4290f8b4a7da,"fix for  Bugzilla Bug 61569
 	if-pointcuts with side-effects"
d5b869db9588c48ff452c6202bcb64ad531279ce,"up-to-date tip for clean compiles, old Ajc10 task not supported in 1.2."
1ad92493aaa3c65fad150c567dc3da7f64816073,Enables a test to access the last run result (for output checking)
aafe4244db32cb6b75c80bd712ef6188bb2a1d4e,"Fix for Bugzilla Bug 71273
	  	RuntimeException thrown: Could not find instruction: org.apache.bcel.generic.B2I"
d8fa2e2f2706279779f3818b2af9825396f5e574,"Tests for
Bugzilla Bug 71273 - RuntimeException thrown: Could not find instruction: org.apache.bcel.generic.B2I
Bugzilla Bug 67591 - invalid warning indicating no match when a match really occurs"
81b5b1d6d34d5277d6595b5810300d6b8cd7f833,"Fix for Bugzilla Bug 67591
	  	invalid warning indicating no match when a match really occurs"
2da95deb4e044b41973ac42fa1c39620d3a49ebb,guard for NPE.
c122603db40dcbcfe8ff19ef312943d794b38c20,export 'commons' which allows the test stuff in run-all-junit-tests to build without a digester problem on Eclipse 2.1
4295fcd68c0fc746a7788da28a6ed7ae5274d34a,"No really, this *is* the last fix that will make the build work."
d6f64ad25a7317930d334ae8a5b2ac1bd9b2f18f,"last piece of fix for Bugzilla Bug 54621
 	Incremental support ignores binary source"
df1bd2ae60d197da65ca6fb9afdd7bdb894f5c03,"tests for Bugzilla Bug 54618
 	Test to see if we can compile incrementally ignores path change"
487f62952e93074f4bf43c3890afa49f618ef313,if I will insist on having my own directory....
ca915c6c85c78ee28b61d64ca5ae9140be2b4be3,"additional incremental tests : bugs 54622, 54621"
22dc3e73991462bdd99fb34d4ebc2e4b8831a618,"added a comment indicating how and where to fix 42743 should
we decide to do so."
7bb1da5328199ec30fd3cddb14abc871580990e5,more diagnostics to help with build failure
648c0f4d15d9ab6bac9deef010a1b66824cd8da1,"fix for Bugzilla Bug 42573
 	.lst file entries not resolved relative to list file: {boot}classpath, extdirs,"
356a0a1a357804343239a88e7ca867b00d473271,shadows src classpath entry had crept in by mistake....
3c70391775bc7aafb0fb1e400cb207054c7a3afd,"making paths absolute flushed out a Linux file system dependency in one of the
test case constants (not added by me may I add ;) ). Since I was developing
on Linux, I didn't catch it."
48316ca2c9a327e5003efa311cea143015f04173,fix for bug 53028
75111669c8de9717a3d5c37954cbcc48fd64300b,"works for me! on Linux, on Windows, on JDK 1.4, on JDK 1.3...
adding better message to the assert so we can hopefully find out why
the build machine is getting upset."
0b2c06e92277f4ab5be9d5d73fbc5af4184977fc,Moved around to fit in with new way of executing the incremental model tests as junit tests.
78d3b3abde28d3064ffb6dacffe47a952b912fce,incremental model tests.
8e7cc4198d414f20188edad080a13551a9a08a02,promoted code up the hierarchy.
5613f03356001c5af2d77ea40ee112bec43726f9,run the incremental model tests!
2db5c55abcfcbe0af8e1703946e2f4c2b351e79e,methods pulled up from the subclass.
28da31dea85b8f5b21d09f9473e3e560e4ea755e,See the stack trace in real stderr so you can click on it !
c614a068eaacbc49c117e57d407b4c9b35404097,more deps for inc model tests.
85e825b8b6287a7e4c058c664a2a8d685780527e,Made reference to tools.jar relative to JAVA_HOME variable. (which you must define!!!)
30df47dcff68326f5d90ff66023b375b90f5a5d1,Starting the quest to rid the world of unhelpful 'cant find type' messages... around 15down...
061395c8c7fe681ab40ab53a7d1bfeb8e17c1028,More work on 'cant find type' (bug 44191)
299d24a82619057d3746db391afb238c213d56e5,cant find type/organize imports (and hopefully fix the build)
851da68a07bcbfac4414fadc1b9f3bc02fa810a5,Fix for Bug 71377: Cannot advise private method call in around advice
f6436e3fc84f7e140acb3a250a29fe38f9c20c35,fix for Bugzilla Bug 67592 value in the args[] array of thisJoinPoint can be changed....
6d9b7d2d8b267133eadb24f89e682cd8029cada9,copyright statement!
ce1e477ecd9244c49b86fb3d7ea884e09e2ba6ee,"fix for Bugzilla Bug 70201
 	Branch target offset too large for short"
c3d5f40edf027600d5ed5e7ec0cc391bf9b56859,"fix for Bugzilla Bug 70201
 	Branch target offset too large for short"
44a92e1a04f8f2f1a862f15f9d0b9ed761d05fd4,"fix for Bugzilla Bug 59208
 	Weaver fails in BCEL for large classe"
b3f5f6fe945ef35f8a3b97ec71bb5cc57e89a641,test for 70201
05dabd1821fffd9f353d1e965a56658b962c82d7,"fix for Bugzilla Bug 53981
 	proceed used as method name in around advice"
b75cd93e0de66996397e9f18809973abec91fe46,"Fix for Bugzilla Bug 65319
	  	ajc crashes when compiling the following program (binding this() and target())"
c5d8476b232fa84f766a1a84d1ab45ad8e3867b8,"fix for Bugzilla Bug 61572
 	ITDs on inner classes should be static contexts"
bf261abb3a295505a27f42a9d37d04c15a74ec6f,"fix for Bugzilla Bug 61572
 	ITDs on inner classes should be static contexts"
9d36a87c1f64a2c214cab2be16b2eda8b79cdf87,tests for pr62475 (disabled at present)
065228643beb192e3214a032c2b62f90db4f8592,Tests for bug 65925.  Already fixed !
64183c38266114bce7aa60ff743b4b9eda5cbe2d,"Fix and tests for Bugzilla Bug 68991
	  	intertype initialisers should match field set pointcuts"
0f21863d2428663a84d914b928fba56e8baa8f14,"Fixed minor bug here.  Lack of 'continue' meant the sequence:
: ""message"";
was being tokenized as:
token<:>  token<message> token<""> token<;>
rather than
token<:>  token<message> token<;>"
d43a39103f476d95cade6b87b604ee4578de25b3,"Tests and fix for Bugzilla Bug 54421
	  	Compile time declarations (warning and error) do not accept string concatenation (with +)"
8c5d743c848479b07f3d35479292002aa01b4f70,"fix for   Bugzilla Bug 61768
 	scope for intertype methods"
95995e13ff3038491d5f11ec67d51ca2bda83e29,Added getter for state so that clients can find out what files changed between builds.
228fc8df0081ca7ac06eb6c1a6dc43b06ee3f17d,BCEL rename (enhancement 61374)
04e658c273b4bb0ecab65ab3b847c15f5b483988,organized imports.
98c78c9c39384fa1c4734097308e5b38f1f83072,"Fix and tests for Bugzilla Bug 71372
	  	NoSuchMethodError calling private method from around advice in inner aspect"
2dfc73855a1d7ab7652476729e6575f9116e12b8,"Fix for Bugzilla Bug 71878
	  	Bad injar aspect name on Linux"
fcdafdbddb66f4ce4046016132addd763353881c,"Fix and tests for Bugzilla Bug 71372
	  	NoSuchMethodError calling private method from around advice in inner aspect"
0057fdbbfed77b761fc9d7bc6185d1d8a5587292,Tests slightly reworked by matthew due to enhancement 71339
17cd7b3e1254a56ffd3248bb5bc4ffacdf48bb98,"Fix for Bugzilla Bug 71339
	  	AJC produces partial output jar file, when there are warnings during weaving"
36d7a888c5b0ebaf1947afff7d29fc17115101a3,"Bugzilla Bug 71339
	  	AJC produces partial output jar file, when there are warnings during weaving
(new dependencies)"
3705b9f63650f5428a93ff6aa1bece6a1a48ea94,"Bugzilla Bug 71339
	  	AJC produces partial output jar file, when there are warnings during weaving
(new dependencies)"
fe7b2e30099d6f7a38be0e855cd0524772c2bba9,commenting out one test for one run - must put it back in when its fixed!
593fdf21f209b5df8ce1e1d2561b441bdb170e79,Putting the failing test back in - will it work this time?
36e24edf8dfc3acbd35e7d93df2e52834cc15ac1,Get the classpath correct for running the rogue test :)
6b1ef0ff7cfd1dbb985993fd5486c9ddf31b280d,"Fixes for:
Bugzilla Bug 67578: Privileged Aspect Access Problem Across Packages
Bugzilla Bug 67579: NPE on privileged aspect error"
eb1d697f95742d25109b1d285db38da40464b340,Fix for Bugzilla Bug 72016: No problem type information from AspectJ compiler / AJDE
a2469c733c9f65514c3949cb1cc7254495011894,Fix for Bugzilla Bug 70241: outline view shows anonymous inner classes in different way than jdt outline
cd4aeb90df088cb6b9d817298529ac8d54e2b8eb,remaining fix for 72016 (problem/type information flowing through AJDE)
ff7c1b2728dec16a52aa8fe4b4feffac145ef868,using real slashes rather than those windows things....
2dfa140064f0ac405787bfca0abba87c72895c5b,Guards Guards!  Need to check if something is null before I start using it.
0e52e76e3ea893f5f553419924cba8aebad29be4,Fixed name :)
84e4e53608871ab3ad0381d19abd8fa2e1bc4533,"Test and fix for Bugzilla Bug 62642
	  	proper handling of ExceptionInIntializer inside <clinit> in presence of after throwing advice"
5d2c29e5769f11763514a173690c290f3111e64b,Took out expected error on 'run class'.
7fd50c75ae779195b87922c5ffd839ac7a6910bf,"test for Bugzilla Bug 64069
 	ITD name clashes with private members"
f913f6597088b5aa5a97d8dced01ffcc12df74f3,tests for enh 42743 (commented out) should we decide to do it.
8837d683dc44f6c380b25359d7ce90b9a17e8a66,Removed 1.4 api (doh!)
5b902242b00ffaf3105335f231e45291e7d09320,"Fix for Bugzilla Bug 71076
	  	Missing Javadoc comments that aren't missing"
dfb15c1777ab6995528a0a0d49faf0ef74578db6,"fix for Bugzilla Bug 71723
 	Inconsistency in scoping of protected members in ITDs"
809310eedf02d1371764b6be372645d3f4bc4aef,"edits for submission to OOPSLA 2004
  minor cleanups/formatting for OOPSLA
  added around/proceed caching example"
9d88235861f705615ac697a75a37e8a7e99a0351,javadoc checks moved here from inside shadows.
59b3a97f89b222d2e1e5cf35c1ab9a9d2f070a73,Removes javadoc checking from resolveParamTag and hopefully includes Adrians MethodBinding change.
259463242401a2d1e63def59162cea97878e693d,fix for 72032 - clarification of cflow(handler(...))
b6ccc40937be0f9538633a773a2fd4aa0ab74b33,updating for OOPSLA 2004
f335d93e363941f212bb3126339a3bca505a69f2,OOPSLA 2004 camera-ready submission
9be4b2e3694e69244a003d1b279f91d79eb2abe8,"Added support for clients to extend the ASM relationships in order to add
new relationships (such as the example in the sandbox that adds additional
declared-parents relationships).  There is no structural change to the compiler
or weaver.  The AsmRelationshipProvider is now accessed by getDefault()
instead of statically, and its instance can be reset to be a subtype."
2834a7c26b42b8d98af57ef9733ae94fa4aa4a5b,Removed bogus dependancy
65c67a4e848311efb7402f5d06bd1a833720b94b,"fix for Bugzilla Bug 37020
 	wrong line for method execution join point"
06ef21154f9055c7a80091ae80542c0b7289b4f6,"fix for Bugzilla Bug 37020
 	wrong line for method execution join point"
cef3ce1be62581807b8f34a20b84df4faad0dfdf,"fix for Bugzilla Bug 37020
 	wrong line for method execution join point"
413a9ef53bfe62f5a95b4e509577633a411adb5e,BcWeaverJarMaker updates - now line numbers have changed.
b7db7da4c67aa4e93eba8b36daa3ff3d50b12194,Line numbers moved so update expected results
dbe1024f852c600d2752e5f39eb31ca4f5d72de9,"Fix and testcase for Bugzilla Bug 49657
	  	Weaver results in rt error if affected base class not exposed"
e41a5dd70aa2c92c190f0c42bb72243db6748373,"fix for Bugzilla Bug 37020
 	wrong line for method execution join point"
f332d7526f0b570607a7759777738a5c15a39e07,toString method on new attribute makes test harness diffing happier.
5f80c8cd8de6ab532fbe3e267cca45b749331d98,"Fixed bug#71811 ""AJDoc: should be able to set encoding like javadoc"""
851ff8703bddf6f4e5fdfeb13a5e205497732214,This time a 1.4 dependency in the test program  - removed it.
06f6b999f67331be0ea6a0b55025195b3d252deb,"Fix for Bugzilla Bug 70794
	  	The introduction on interface causes the interface implementation class error
(Feel free to edit my text if you feel more eloquent...)"
bbc409e17b6781826e86c3548790668553a8636b,"Fix for Bugzilla Bug 70794
	  	The introduction on interface causes the interface implementation class error"
8b550ad855b72b6eeb61f3ade30f383bf337a8e6,"Fix for Bugzilla Bug 70794
	  	The introduction on interface causes the interface implementation class error
(testcase now expects the error text)"
a9fbc05e946c402ec3a2527517304acf22d40f15,Falls back on old way of determining name of structure model node for anonymous inner class in the new clever way doesnt work.
b242e1b5730793b1080117e1135fc5a4b87f0b44,"proactive bug fix (bug not entered) making a short example
in semantics guide more meaningful"
26ea8385014b31dea870ca7d1a883976853179b1,"Fix for bugzilla bug 71391
  ""Specify context collecting behavior for this, target and args pointcuts"""
a7d57dab76b3a8dda616ea0e1e0f0afc1504bf60,"Fix for bugzilla bug 71404:
  Define MethodPattern, FieldPattern, ConstructorPattern terms"
acaeeaf485dd45db241b10c594d1a7a99bd7afa1,"fix for bugzilla bug 72379:
  static aspects not well explained"
df55b490f7059bda21e2e116f577ee7482dc3618,"Fix for bugzilla bug 71393:
  Specify how does args pointcut collect context for pointcuts which are used in cflow"
eed1b054c9c27d6d112e9e66de290dd5f6188f47,"Two more ""cant find types"" dealt with."
d0be7b851b7bcedce43ab31cc307f44ebf0a2f2e,More 'cant find types' improved.
f5035234ee878003515413fee5e7e6bfa7a2228d,"Matthews enhancement fix for Bugzilla Bug 72154 ""Support for simple dump file""
+ Andy using it to capture 'cant find type' issues."
197afeadcb72402b3262c795ede32a7c5a6c7def,FindBugs: fixes.
5046821b194886b001c9543940a85a4406da5f27,Deprecated API calls changed.
b45bd023c06494a9efbedb14c215ecadf609aae6,organized imports
5856b320e6c55a82d737df725ea1373dc2a25d94,Changed from using deprecated APIs.
6a1dcf2e9e9f077b6adb733654c4d3b727a1d1de,"tutorial exercises updated for OOPSLA.  The printout
looks much nicer and is a bit more streamlined."
27d7cdb7312bdc380a2a405333942800329966b1,"Fix for bugzilla bug 71087:
  underspecification of primitive conversion"
cfaa79ae72fba6619700f259fd4b05eaed6d3988,"Language specification clarification for two bugs:
  49784  declaring interface methods should work as it does in interfaces
  70794  The introduction on interface causes the interface implementation class error"
82eae551311afbd3a942d54e55b1c569c5f975b8,"fix for Bugzilla Bug 72531
 	declare warning warns at wrong points"
b14a08533ac60705183c93e44c50ea86c3ed6942,Minor fix to avoid crashing whilst dumping :)
bd5021a1dd1f070a4be9192beb4daece84d3c1a8,"Fix for bugzilla bug 72474: Quick reference claims to be for AspectJ 1.1
  De-versioned quick-reference, made minor clarifying changes"
b5e6307a63b0513cb058e8d6e56ff87287bdfa15,"fix for Bugzilla Bug 72150
	  	AJC possible bug with static nested classes"
5e0876580b0e95dd06ca4342e233f9a5dceb33a5,"Fix for Bugzilla Bug 72699
	  	Bogus error message: The abstract method ajc$pointcut$$tracingScope$a2 in type Tracing can only be defined by an abstract class"
a5330382082fbb28a761421037901d6b277e966f,"tests for Bugzilla Bug 70404
	  	passing null to array arguments confuzes static join point signature."
001d0365eaf2a622dd6f7cdc462bb10b5f65e81f,"Fix for Bugzilla Bug 70404
	  	passing null to array arguments confuzes static join point signature."
392ab7015ce097f85169a51b83c490afabb8bf82,Include any weaving messages in with the info messages.
1d384ecdfaeaeabc0d2bf3a08961d5ebb24fa8a4,Improved testcase for this 1.5 problem.
37cbf53470742210e168b24e954fd6e14482a8c0,Limitation stated in bug 50195
8891fe602305f157059415160335682d1249bd53,fix bug 59203 - dynamic AOP
3dcc2dd68179b687ba785ad3352ba7eabde387c5,"Fix bug 72623; also changed ""definition"" to ""declaration"" for Java elements"
438e61c998298b48830d5be76668df45629a1eb0,"Enhancement for Bugzilla Bug 49743
	  	performance improvements for runtime library
(From Matthew)"
4921f0c8f03353385d709bc79a7dd301c2caa5df,"Fix for Bugzilla Bug 46298
	  	Aspectj generate code does not de-compile cleanly."
17b721e1e2b5a5e975b896d35d25ac3e00de9340,project plans for Java 5 taken from Adrian's email
27d204cf9f57a0cc06f4d7c5800c93eb55edc02a,"Fix for Bugzilla Bug 72528
	  	around advice throws java.lang.VerifyError at runtime"
d1551bda9b14c6c2035e0c8df6f09bf4634041de,"Part of fix for AJDT bug 72671
	  	Bootclasspath specification for compiling is not possible"
b133299238024b1751afc0fb5119ca9b80e91be2,"Fix for Bugzilla Bug 73334
	  	Avoid clashes in the org.eclipse namespace by renaming our duplicates."
51aa367e898eff18ff4a56a3875e16e6939ea4ee,Fix the build?
7f6e0878db939c6bf43e23919ff11fdf72b7204b,Reworked package renaming script to ignore compiler options that are used by AJDT.
536d08ac4c44c180e99826469b28b53532be4b51,fix for enh 73360 Extend aspectjrt.jar manifest with OSGi attributes
2e1ba4f2a7d7eba03b631167ad72ffbc324a9576,"static dependence on SimpleDateFormat had broken WeavingURLClassLoader
by a complex chain of events."
a993e6497d6262141351443a8a23628f5b701650,"Fix for Bugzilla Bug 72409
	  	Classpath issues with aspectjtools.jar"
8e4d8980e45ba054e7d8e3e5e7ac3aca940d0758,"Fix for Bugzilla Bug 73433
	  	AspectJ does not correctly support -cp"
eca1429e79b3dc55c1f93ffbadb3e50eb9808d9c,"fix for Bugzilla Bug 72157
 	declare soft can cause programs with invalid exception behaviour to be generated"
6f8f968bef148d76c8040ea977d93af084d64629,Ensure makeClasspathString() uses correct buildConfig when reporting problems.
c39c9912b8e47dfd13554e7aa7f4602e4f8a5713,"Fix for Bugzilla Bug 60863
	  	AJC behaves different when using @ to supply parameters"
0409bd8da12e4365e857475fda0c8baeb7110e3b,"Fix for Bug 73073: Inconsistency between starred and nonstarred type patterns in connection with shadowing.
  Finally documented matching difference between exacttype and patterntype"
9f87758469b44f6e225f6790d4b6b232182470af,Fixing javadoc comments
2ce63f6fd489b4013c66ed75617ea554b5289b4b,"Made lookupMember(..) and findMemberInClass(..) protected
in order to support different (possibly better) ITD lookup up,
motivated a UBC-CS students' extension."
535fb43192d72bc4c4aee777b923f86b81576e1b,Made getNode(..) protected to enable extensibility.
3ea58899058ca5ff3ec3f9ad7396cfde56bda2a5,@testcase PR#75129 NPE on thisJoinPoint mistake
a89962434e080f2cb939dd59726f1acd65b31d6a,"Fix for Bugzilla Bug 75129
	  	NPE on thisJoinPoint mistake"
f8a87f1bb5fb19f5eb2f85e8df32939bb88bb73e,"Fix for Bugzilla Bug 74279
	  	-showWeaveInfo option is not supported by iajc Ant task"
c05237fe708ad3b200a9ea9be9c212e1d07abed3,"Fix for Bugzilla Bug 74279
	  	-showWeaveInfo option is not supported by iajc Ant task"
bec6506982c82441c531dd77bea1c77afa4ae057,unused local
699cad051e1f5c74e869897a3a300cdbc78198b1,updated license text
948bf91ad857793df643b387ea183ef7035e3d61,static ref to static variable
615f09f359cc692f3f476defcf1badd8596086b0,"-showWeaveInfo for ajc, iajc dev guide sections"
90d3f9f305bc825480c4f9504b3eb635ce5e903c,support vm args during forking (simple update: forking still requires system properties)
a0ec8d0fb07352f54dc7dde4a6db1521f45fb8a6,removing unused parameter
5329f5329ec7ea7f6e2b0260626c8610dc4b2784,removing unused reliance on fork
6315ab7fc97b437528555dca413fce833a72e7a7,removing unused Fork and WrapFile
18316bf6a43cec4d413daf0997ad812f99875e88,minimal fork attributes supported
f54f7e805474b561810a46fb3493cbc5fda68d4b,"removing unused file entity, adding fork attribute"
7a18d808a067c45dcf03bfc1d431a64441b62f1d,tests for new java run fork attributes
9faa21e85a0b33e45d8daa12ba75f50aabfb52ee,"read new fork attribute, skip unused file entity"
5e78267e4704582b80ea7da43cb77cc55d35175f,"support for finding files at runtime, for javarun/aspectpath"
3d3d7fe9b9ebadc9dfc90307281076495fc4ac07,"support aspectpath, upgrade expected javarun bean properties"
ce5705cabcab7d5e03c8f31183375ed90dd3480e,"support for aspectpath, which forces forking"
547fc19177cc6841388d3ed1dec4cd9473512ef5,support for aspectpath attribute in run element
31169e73375b12f02dd94c1372464e2724035880,aspectpath weave tests - disabled pending weaveinfo suppression
33ca99bf6bbbbc73f9fb31c355440f4447ba2c9f,docs for aspectpath and forking
7fe9492cbb9b857e45531f6c74fbd15f8c551b25,Made selected methods protected to enable extension.
5c996fc559581581e9dde60a6f555aa3ff7cc042,76030 - cflow optimizations.  Part 1 fix - use counters rather than stacks when we can.
234bea2297cc780d5bf38ebbc4087e938cc3b6e8,76030 - cflow optimizations.  Part 2 fix - share counters and stacks when we can.
6e155a6b9b78ec64f2fd4dc08152698277f1e7b7,Fix for Bugzilla Bug 74238: Applet which uses cflow pointcut gets AccessControlException
da1841b97fa14d3c55f67103c19eaa33a85cfac5,make the test tidy up after itself to reduce CVS conflicts.
9802851fe3e0c4a3e2d7aa708d64129611f412a9,Fix for Bugzilla Bug 76104: can't build distribution from within Eclipse (and fixes the problem where you have to call clean and build separately)
0a77939b3286d5ac033797234741436c57ad202f,"Fix for:
Bugzilla Bug 75568 : ajc changes classfile timestamps even if compilation fails (regression)
and maybe:
Bugzilla Bug 74245: -proceedOnError does not weave aspects on compile error"
4a4d4b2612ab6bbd9c82dc03b08b13f696725bf3,"Added ""uses pointcut"" relation to the ASM."
e19fc5d4b74366078ed660cc9af140ffea07abd5,"Added ""uses pointcut"" relation to the ASM."
24508c8f49112f73c3417a38ad0d6ed3ca62e889,Comment cleanup.
52d8746b89a6bf18e1c7a1475b19a07b3150c8a4,"variables available in if(b), removed mdash entity as unknown"
22a8bfca49914270469791b409d4d63d3bb83be2,set static variable to avoid reading value set by other tests
d6f0fe29a6c961190e174831a4e0f7cb52f82e6d,TEMPORARILY removed some tests - to see if they enable the build to progress.
bf412c67871623bfe755458763238ae0ed36c11b,TEMPORARILY deactivated one test to get a !*(&*�^ build to work.
c5ac111c5b5cc2a17d9d094eb7c0032940a4f2ff,"Change to prevent ""uses-pointcut"" nodes from appearing by default
within the structure views."
6be5440fdfa1f75d3754dc4be9269ecff4ead609,"Modified test to account for additional ""uses pointcut"" relationships."
b0aed7288020a070eba54dedb7810ec68f5055d6,Re-add the LazyTjp testcase.
cd39b13b695be9b8536fee22e6f6cba9e16aa014,Aha!  You foul LazyTjp testcase.  The fix I put in to properly support '-proceedOnError' highlighted a problem in this testcase which (until recently) was producing a compile time error *and* still writing the .class file out to disk.
ae186f2bb93f3a7c3834dfd0e6712d10af5fd6c7,Docs for ANT task showWeaveInfo option.
6beb43faeecff249a33e7d7e2489c6a92a4700fd,Fix for Bugzilla Bug 76096: Anonymous classes unaware of introductions into abstract classes (error can't find type $Local$)
f6f9f6518c99b66400b690e5d20f7f424eb6c934,dup showWeaveInfo in 1.11 - already added in revision 1.10
d3108e86e0eee2d180bcb5ec91e87f9559b88329,"fix for  Bugzilla Bug 73369
	  	Create a jar file that can be used for load-time weaving..."
a303a09bbdbee8ce39e2ba00a3a33e54df92c24f,"Fix for Bugzilla Bug 74952: before,after !(cflow(within(Trace*))) prints nothing"
6d754a3e9173848c97d390f5611b4cdfe8415727,"fix for Bugzilla Bug 75486
	  	issingleton or issingleton()?"
ecbb3e642aeae5fb45280465234fa391e013c05b,fix for bugzilla bug 75486: issingleton or issingleton()
8a64fa2912ac02aadcf5f164dfde17a7c48877a5,"Bugzilla Bug 73895
	  	unnecessary cast causing problems"
85c225d0a8996803e349877a4f4b926926cb7946,preparations for 1.2.1 release
85965312621aeaa1a580a01f23efaf4f5a5d7c91,fixing an html bug
5ee03aeb768c8d52769ee1ba2166df6af45c6c6c,don't upset windows script...
6aa75169a769a19b3f7f26acc03a5ad81f092bb0,Fix for Bugzilla Bug 76798: Add versions to woven class files - enabling better backwards compatibility.
2e2a268ed29ff75c076219cc53928f0c2358cb03,Needs a blank-line before Name: section
aab9c2c57db1c014e03720676d7e3cac14a761aa,"Applied patch for bug#77799 ""NullPointerException in StructureSearchManager"""
edd6539e53d96e60f257952e582783c7d8aac25c,Matthews fix for Bugzilla Bug 77163: Load time weaver default verbose setting
20331431a5fd3b26a9314df68360ae057c713e5b,early draft of AspectJ 1.5 documentation - do not rely on the contents of these docs yet!!!
c9363fd12ac1d276af0bb63b87e893c7cef50ecf,build the 1.5 developer's notebook as part of the distribution.
90da53cec2fb59df3743822ae79a5b34655a106a,"revised with info from OOPSLA 2004:
  renaming support.Log.log to support.Log.write
  renaming test.Test to test.CoreTest
  (r)ing aspectj
  clearing up a few random things"
90ec904ca2952ecaebb927cb5f0d7355b5cfd829,changes influenced by OOPSLA 2004
afd9f470f553076ce5e95f84a822fe26d3ad937b,attendees should not use blackdown jdk under linux
4638d7482153f3f312bae2200db75c93face0ac7,updated to not allow general extension of type patterns
42ef110b105ef90d184f02712fd289cae14046f8,dealing with incomplete Test renaming to CoreTest
5b313c381fdf2800b31a52b0e14819a2f5c74488,updated for new annotations style
5233d336169eea7471624fa7d7a2c4b705a7167c,use AccessibleObject rather than java.lang.reflect.Member
72172aa072aae0896e9cb8e6d8d21231c56625a7,"some small updates in annotations, plus beginnings of varargs section"
066aacd6f55b515277d4f7f696c3ada940c0f91d,"Adding BCEL src to bcel-builder project.  We change/patch BCEL more frequently than we import new versions of BCEL into AspectJ - so it makes sense to make that patching process easier than the importing process.  Also the Java5 support would result in an unwieldy patch.txt file.
The ANT targets in build.xml will still enable transformation of the packaging from org.aspectj.apache to org.apache for diffing with a new BCEL version, should one ever appear."
cee487403cdbc733953f3d7003cf83b7774df673,Doesnt delete the 'src' dir.
3838917cde7137099d8ef8bb5f137ee9abc898d4,Imports organized.
9f1649a4d9717c8b7997a8d0063deaf693e680ec,Some enhancements discovered whilst working on bugzilla bug 78954: Compiler cannot cope with 4000 jars on the classpath.  These enhancements cause things to be done 'lazily' in BCEL.
bfd1d4d0b5a553afdbbf93eb1972ff9d802906b3,Fixed 2 xml errors.
8644e07c0dcee8a4e24b0bcdb320c9bfa47d9612,BCEL Java5 Support
1ad46c857bb676ff7237b9b6519b2db3563efb66,BCEL Java5 Support
4345b4b36f5b29b0b6783cb1985a52157c1ce3f5,BCEL Java5 Support
6d7e965c46e93c74f910d03bc279c25404335418,Fix some stuff that Wes pointed out: addEmptyConstructor() in ClassGen has always been broken and the src.zip for BCEL that was generated included test imports.
837c97b0dd4854b8dbc0075c94b6226fa49f1803,"Some more fixes for Bug 78954: Compiler cannot cope with 4000 jars on the classpath.
- ClassPathManager can now manage its set of open archives, rather than being 'unlimited' it now limits itself to 1000 open archives (which can be increased via a sys prop).
- BcelWorld is changed to add a tidy up method that can tell class path manager to close its archives (useful for the IDE)
- BcelWorld is also changed to ensure 'it' is the repository used to resolve classes, there were previously some situations where BCEL would start loading classes itself (creating duplicates in memory of things like java/lang/String etc).  I'm not sure if this will alter our performance/memory characteristics."
639b61b6a7f5cd090137340c35c2f4ae355ad538,"Final !! fixes for Bug 78954: Compiler cannot cope with 4000 jars on the classpath
- Includes the modified JDT classes."
acbb4e5b1a7c107d0f3897431b15a78d9026c381,more updates to 1.5 design
4f5756d56fff9f5af0ed2cf72cf135ae0c1d7b5f,"aspectj 5 docs update. Signature matching chapter added.
Annotations chapter complete. Varargs, covariance, autoboxing,
and enum chapters complete. Pertypewithin proposal written up.
Generics, new reflection interfaces, and the ""miscellaneous"" section
still outstanding."
e7da38f30f2fd4c037e392b0586a393686385280,ensure every generated html file has a meaningful name
cc251667ab8afaad4809643ea3760fe17e9c5607,JDeveloper url
4d1c2948a2f18012cd49dbe8e3a32b1a863d4d45,Part of 72766: Bridge methods - we now do the right thing if we see one (i.e. we ignore it as a source of join points)
81aaa8d9b76d7df0594862f7834408c309ba4fd3,couple of doc bugs pointed out by andy...
52594375fcd495b3c601642555136b98ee853145,"fixed typo in the ""id"" of the chapter"
d2fb8b7a3122f1e8816cf888b02643d5b31f9c3b,72766:  This is covariance support. only missing bit is for dynamic join point matching (marked XXXAJ5 in the code) - thats not a 1.5.0M1 item I dont think...
e14deaf15a8c29442419027c56e29fab8c1c229f,72766 - messages output when preventing ITDs on enums/annotations
bbfea3bdfa9eddd1121791f46e63794175e63786,72766 - helper methods for identifying enums/annotations that call the BCEL stuff i wrote.
4a3b9fe5d1218adfc82296965be280c592769284,72766 - when *binary weaving* output messages to stop ITDs on enums/annotations
7296f648dfaf386a7cb577004f3e8f5dd5430ef3,72766 - more helpers for identifying enums/annotations
40820887f00b919b084e3ac2f5f7e3b03a9af50d,72766 - when *source compiling* output messages to prevent ITD on enums/annotations
37914aa194fe72be4b8e84a778e19fccf0bc4140,72766 - implement isEnum/isAnnotation
c20b526c0e3334d6c9606ef0764c93918c9673f8,fixed unused imports
a52e04ffdef2103958591521ac4c106be42e4bdc,72766 - tests to confirm ITDs on enums/annotations not allowed.
f2fd31af90e942c999f8d49020d1cf80a2ba7399,72766 - enum/annotations tests added to suite.
a618695205c17beebfd56a24bb3e0a9c24911ff0,72766 - progress text file for 1.5.0M1
6739dd5b3d1c549e9b9b9b08e6a96f0688901df9,72766 - annotation testdata
01ffc36816f112b7bd9ec25cf842c598cb58fb87,72766 - enum testdata
489e9a0aff588c158b3b1c8555307affbd87a1eb,72766 - improved build.xml for building the testcode jar
ab47acfec80ca851410350bef322464bff8f4c47,APIs allowing 3rd parties to integrate with AspectJ's pointcut parsing and matching
4d2da2c1799a3bc2a1dae42273880ada7b8d4152,updated description of tools package to reflect wider scope
09ba8cb317e7273a0f8dbb3323ba85b2414f702c,APIs allowing 3rd parties to integrate with AspectJ's pointcut parsing and matching
c6f7ba2782307c17dcf4cf9aabc3770cae09a3a2,support for 3rd party integration with pointcut parsing /matching
63e5dc2ba8b7bad4ceb4c472f4d289ef9b446761,"APIs allowing 3rd parties to integrate with AspectJ's pointcut parsing and matching
- final fixes and test cases"
6e3ced3d708ef77068d7235def9297725b512560,integrate new tools tests into suite
7864547200c9b7e8b0535ae92be2d558e23b98f8,72766 - varargs policing in signature matching
da4981ea929f0503a3995435456de0a963f206db,72766 - avoid the potential NPE !
a4487864aa8269432dedf200708d1455d0019e48,72766 - avoided another problem to do with asking unresolvable members for their modifiers.
dae0fd4898e22dc648317f77b988d5d308fcaf42,72766 - varargs policing in signature matching
343fd37dfa5fb623c3ed8c5b561d88221dee2ca5,72766 - varargs policing in signature matching
8098a7ed11b2683bd75512f40dbec83f27c30dd9,remove that stupid launcher in org.eclipse.jdt.core
39c8628b2f5aa36c901dce4dc428d14d279729bd,This modified ordering (?!?) means you don't get silly .ajsym files left around that Eclipse wants you to check into CVS.
1370ad77d229efcd27d25a8732a60cc092b3fcf6,"jdeveloperaop link, corrected html, added email archive search link, removed unused html comments"
9052d5d86cfcdeb9a64ed903beea53d077f0de08,Fixes for Bug 80249: Order of types passed to compiler determines weaving behavior
a0d450944630dbc637ed841cf33eecbdebe2a3d2,"work in progress.... annotation pointcuts, parsing, and patterns"
576d19fb9b1b769e28d6dbf13b0b3905487c265e,"work in progress.... annotation pointcuts, parsing, and patterns"
1056677410a3e6178c15664d017b59b5783a7da9,"work in progress.... annotation pointcuts, parsing, and patterns"
c951bf5943413f8cead4888053ca5f77bef0e0ca,annotation pattern and type pattern parsing and test cases
4273a2ddbf02819eb52e4fbbbe84a1e0ee4059ae,Annotation Matching - test code
cf858230583bd35bc49534c894930bd547682965,"Finally ... type mungers now remember where they came from in their attributes.  So during binary weaving we can determine the source of the declarations.  We will still understand the old form of attribute that is missing the source location.
(This means incremental compilation of ITDs will work properly for the IDE.)"
ebd0cf22178359622cd993b99af0f8f027bff3fe,Rebuilt due to type munger attribute change
d1fd430e83e3919860550aeedb2053f6a33012a0,"With type mungers remembering their location, we now get a sensible error line for this test!"
6f6065383cf4909057f16b22e389a38871589c64,more parser test cases and updates
7d719eea090a78f89131681b0b609bae29ce2803,"updated jdtcore that can also handle @, ... as PseudoTokens"
5bb7e432a8e1e94ebf6785a3b449b803df4a4942,update the scanner class too to tokenize correctly
14769b5d6ddcc43da0af272187992abb7ea499a8,Annotation matching.
0d597baa8b91c447398e402a5ae65464cfcd56b5,updates to annotation parsing...
7fc015eda24931c4d1c490fc2d1057170bdf85bc,updates to annotation parsing...
963dcf64db82ee2ecc7cfa82e7c9a33894c65845,Annotation matching.
76448059470c526c9ac8f06a43b08a7b997fa71b,updated test cases to reflect new parsing
5287f71985e75784731ce3c571ec80f0f62b872e,updated binary form
4c20738fbb3560cccf1bc7e5bc0a21618c9559c7,@annotation parsing and matching
6e6d34c79638763ab180578dd169147fda5011cc,Annotation matching.
ae085e2a79e3d8a71b03f422db8292d1007e04c1,Annotation matching.
ea0c31e9db096fea037be320f317084d47a786eb,update to new @pat syntax
d5bc7f7caac0cde68010baa5c2f73de8b7ccc410,lots of pointcut parsing test cases for @xxx pcds
29ff1d8b622942ebae950e856ea4923fb03ba8c1,first @annotation test
0d07deaa99a6454cd2d5fbc6aea1fce0c737df62,unwanted import
4f6a0fd6989d2de4d41b485f7775a600c95c35a2,"@within, @withincode impl (non-binding)"
ed461c8c7755f2b615030e9494d757c9479dbd07,say what we are installing...
a4d5eeba2909a5ba1814b5c21fe6a21747882fcb,updates for 1.5.0 M1
3ef5bec3f1cd6c13e966551fee5d7eeed6110914,fixed some alignment issues in grammar fragments
142c65e49c1a567bb90b2467b7728df28b4e6bc2,a few words about 1.5.0 M1
e316730e3d8a4a47b8dc8c0c2ee31421bb77c98d,update installer page
d293b89939ff681054b47aa48ce6942bb9fcb2b4,fail gracefully when trying to bind in an @pcd
592467e8a30dac18931ffed58a27e2b0835fbd9b,annotation tests for this and target
d474aa398cd671644f48fe8ffe55095109700a1e,"clarify requirement for runtime retention in @this, @target, @args"
60b62539f1f1887f9c66caa995254e9e4ea89f2b,Allows for MarkerAnnotations - doh! (i.e. ones with no values) and unpacks invis annotations on classgens correctly.
88fca98be4be9cfd15a25145ec96548f120dd8ab,mock java.lang.annotation.Annotation
eb673019179c372c6c17dd403e53d96feae434fd,Complete varargs support.
96e92b6024e770a539a3040976e54eef2ee6d8f7,more @this @target fixes and tests
cd22831a0d27d3f807e254db5fca950f6369417a,who put that there???
d43e995f824ef8e02cebc4dcf7c5b9c05923db1e,get test instructions ahead of jump test
06f0ff0e2628d308d61f9e98373b919e6df2bf21,add in @this and @target tests to main suite
4a151e1a818651266762a6721d0affd745b51946,completed @this and @target
611164c967be7d02c56a014a4ef2e79f9b52f16a,Autoboxing testdata - all primitives covered.
d660376351cd359c940bca53d421ea6be2a1bb62,Allows passing of extra argument to the compiler (-1.5 for autoboxing behavior)
ac6d522621ffc706430b430e9291c8fb6d8a4e7e,updated binary form
fbf1152676969bf0d877542777291567c287b1e8,more tests
af27e608a6638052271a7014c02c60b0c837d43b,"more testing, @args support"
9380b983d27b392777788c754cfdc27691d52032,testing for @args
b06338f1b60de75f7b38810be5652a363c63788b,final(?) @args fixes
eabf8a19cab6071dedbdcf86747123126349f401,"@within, @withincode tests"
0485c3b5b128171d8a53c956e6d9561429cbcb7b,"@within, @withincode fixes"
d279a507f5633f03f307eb8e6ace52a7a5df4d17,test correct detection of @args in a declare
7228f3d18d71496a4089a7d5807b3d234124dd7b,Tests for declare parents where annotations are involved.
873e84edecc5609bafd3b3ab82d7c37f4585149d,Tests for declare parents where enums are involved.
98aa6da15b8b4876fa697946c34f1419c79caeb7,All the new enum/annotation messages
3f5c734840571a710f1aa68ce8e72b5751508a18,annotation/enum xlints
7a04b2f94b4994abed36f217b257b047b632f2b7,autoboxing for return values
09bd5866f9f2bf1e4c9a9e8e5bfc3f2a7497ecfc,Autoboxing tests - not checked in as need 1.5 JVM to run.
f196b3c3ffead3f78403329bf8792f3b24cf18bb,check errors/xlints for decp'ing on annos/enums
b1111a9826f2734fd770183138bc0d74fad40579,Autoboxing and decp restrictions
379eb69126a1d904c2f4a6a63a97c138a7712791,Updates for AJDK1.5.0
1575a175b511eadbae03fc760b0cd20edde6ae4e,Support for 'offset' in source locations - enabling AJDT improvements.  Not perfect - really the whole ISourceLocation thing needs sorting out ...
1b6e9edfacf5f3d2732d164b15bc26022835c6ac,"partial fix for bug 61568.
These changes are both (a) a performance optimization, and (b) an
improvement on the binding across || rules that we implemented in
1.2.1.
Instead of saying the the first binding in a left-to-right traversal of the
pointcuts DNF is the one that you get (too much to ask users to do DNF
rewriting in their heads), this version implements the rule that every
|| branch in the DNF must bind all formals, and if two || branches can have
any join points in common (can match join points of the same kind), then
both must bind all formals identically.

So it allows things like execution(* *(..)) && args(x) || call(* *(..)) && this(x)
which previously we used to forbid.

But primarily it turned out to be a performance optimization."
113a3687c8f338fdedfacbe9cea171a44f16ca75,just tidying up a few unused imports
ded1a744fc4a518275dbb4fcfa219939ae48ad11,"payback time for all the ""kinding"" work - only ever generate and match
against shadows that we know might be matched."
ee0b12f950c0c24acf8df868e529385aec523c06,it is now safe to short-circuit in and/or pc matching (all side-effects removed)
2f85beef220b0b67fefb587b9045d80fd1356da1,disambiguating bindings
d2ef5057552185144c54afa37a7f7de81664ea9c,more ambiguous bindings testing
a5eb692fe2be04f482da90dd1f8565c3d5bbe1a3,forgot to check in this updated java 5 jar for test cases
6ede239232cade1dbd454d58f4e853366e422099,incorporate tim peierls suggestion from mailing list
427c0d3dfdcc6a74c7e0bc6fcf1f55206ee04a8e,"Fix for Bug 80916: In some cases the structure model doesn't contain the ""matches declare"" relationship"
5bcf8fadcc2dd607a27e33004a691dc35d983b9d,"Hopefully fixes disappearance of decsofts in AJDT.  The addition of the offset to the source location caused problems because a declare soft was being assigned 2 diff offsets in different parts of the weaver.  First source location was the offset of the 'declare', second location was the offset for the declares pointcut expression.  Now resolved so offset is always position of the 'declare'."
c6e8e5a0d522eb5fc0f402c97d42d456516bfc6a,organized imports.
98976598593e8a1f89e9628e8fc11c7822b8e3d4,"Fix for Bug 82062: WeaveMessage should provide more information
(Bug and fix from Martin Lippert)"
9da980ed5c7be54a6703fe9c44b7f0a1c88229b8,Very very first simple helper bits of binary weaving decp
17e184f3e757e88ffe3821fef5c4eb0db5497a99,organized imports.
204dc9f2534075846dd3fa0586e77ee595478238,temporarily taken out a periodically misbehaving test case
9d60edd04f2ff1eb7005345107ea6d460efb6b2e,switch from string comparison to a more robust RPN format for testing pointcut expression equality
cc7d6536cc176db5e99eec5cc2f6b80ac35b6db4,Binary Weaving Decp: another helper method..
38836534d692da64a69bcd741129d4d103e78973,Binary Weaving Decp: helper methods and bug fix for unnecessary suid warning.
f3fcc800aa5f1cb7274df9c8d5f810a0401b8bc3,extra test resources for within(@Foo *) tests
9536453a52beafee86fa8785df103352f1823b4e,Binary Weaving Decp: test code
8a8930fd9808b03e3c117086d7ba0eaa654a2438,"test cases and fix for Bugzilla Bug 81863
	  	Annotation matching using within() PCD doesn't appear to be working."
c4c23a75c802858b96601d2f43554c3229c9b8c3,Binary Weaving Decp: Two changes: In SourceTypeBinding we can now remember the type hierarchy before we munge it up.  In ClassFile we generate code for the original hierarchy rather than any munged variant. (this gets fixed up later when decp is done at weave time)
21dc11ccadbb301c13aae0b26a0e9b1178cd0dd5,BWD: Use new API on sourcetypebinding to remember original type hierarchy and don't put out weaving messages for decp.
7f81377868c16bb2ea666d83bd06a6651fbad60a,BWD: test cases
adbc8972aa3c68cee65585fb4b3bb9452cdb8678,"BWD: Updated - now type processing order is sensible for applying decp, we don't get an error here."
da8df50db7c0f74548807956680bcadbb985234b,Recent changes seem to have made some messages come out in a different order !
9ded7647e0319ddab91c33fd4f5fce86e9301029,BWD: New error checking catches one more error in this testcase.
39be3b9710c6ca753dc78c4bcfdbea940df0e052,BWD: Improvements in source location handling allow us to now include a line number here.
a504e4ab1f4778a365848bd7975955edc2202ea5,BWD: improved source loc creation
86013afc5a375ae16229a1fd7ada0fec827c07f6,"BWD: Main part of the implementation, checks all the rules before allowing the DECP to proceed."
508cdf93dea3dff570b1a92f1485cee4fd78703c,"Changed order processing for weaving to match the recent changes in source order processing.  Before weaving decp on type A, we look at supertypes and superinterfaces of A."
09464837f2fa6577ffba389e83c1c4a605d038ea,BWD: Improved source loc stuff and helper methods
14a2ae019e75aba654641183fbb20e3c05711975,BWD: One extra check.
b97c89114c3f1fd8212bf8fa02a2e511c0dd95b7,Removing 'run' calls from the testcases for now ... to get a build through !
4ea80281a37d1bde78132acfff76da8a64e483b6,"test was failing because a message was coming out twice - once when applying decp at source time, once when applying it at weave time.  Now removed the reporting at source time."
83a975d6488eb8cb08e4cdcd7385ce2c0915c309,Removed warning that no longer comes out for this test.  We were putting out warnings about changes to serialveruid even if a decp implements was going to fail - we no longer put out this misleading warning.
e08b5a42e6cd8ec569d3f62e05c0c7c9aa9a585b,Testcode for migration testing
0e49f36dbee07ca1a79362b49a3ede5bcb195d0d,All jars rebuilt with rev'd weaver version number 2.0 that we will use for AspectJ5 (AJ1.2.1 had version 1.0)
e63ee67d9514aa9eef6038aa718aab499962252e,rebuilt with 2.0 weaver version attribute (aj1.2.1 had version 1.0)
797b6a6afb75b14dc530bc0831566e110da3ae91,Fix for Bug 82134: AspectJ 5 M2 should implement backwards compatibility for binary aspect form
603b063ecd2943e20f099712d9b754b19a380fee,"Fixes for 78021, 79554 - both to do with us breaking the exception table for a method on weaving *if* finally blocks are involved."
e633c1f58e2a163e016c99f08a08386a6d003d36,Updated to include source location offset.
f70b383d6292995c1e0521e7312e827022fe8fc9,"Updated to support running on JDK 1.5, and fixed related bug#82218"
b460597575b05920885bd2f5f226b0140b687d6e,"Fixed 3 bugs reported in bug#82340, including correct use of visibility modifiers."
b3a30ac11b75cbdd7e9fbb6f7616cce3d2528bba,"Fix for ""staticinitialization(@Blah *)"""
767d730c50fd21915fed0dd64ad9f40500be0a6b,Fix for AjcPre10xTests.test016 if run standalone.  (if run standalone no-one was setting the world correctly for certain types and you'd get an NPE).
35cab775d1ac2fc45f614b4659047b2f291dcd96,java 5 support
3d4fbe807385ef924bcdf501ebc302d08fb2ce12,pass addURL calls onto super
b053671ee2e46f87d44deeedee6760f41cfc544c,java 5 support
a4b0bdac748780d8f284e2d0bdf01ada69e87a0d,New compiler gives additional error message on 1.3 vm that makes this test fail.
d5a96512d9bd11347b0a98b9f545ac6e7eaf1c9a,Hmmm - I don't think these are part of Java5 support.
e5429ff213f24a7abd70d867af3a423d04c880d5,organized imports.
0e14ef28ab34628b3399cccb0118362fc22114a7,PerTypeWithin: Test data
fe310a4e10cf69486f54d5cf4edd4893b0a0835c,PerTypeWithin support.
00b76289a20e67377b15a544ccaad117bc123048,Fix to allow pertypewithin aspectOf() to cope with 1.5 generic form of java.lang.Class
634e6c66aaf6c12b0af7a0b2439ed4d19f61eaba,first example now works!
feb085e611034c8217cbc060552826e6704ae07b,organized imports
0c8315087053985cae6defeaa2e3f9377968de88,updates for ltw and annotations
71966e3348a05cb99b88885b8e6b751cc61a638e,Fix for Bug 82570: Weaved code does not include debug lines
94e8935ef6e366de17cf3ea4808f35f1460fc82f,Update to allow 1.5 to be specified.
a972be27a5ebccca011bb5962766ad73502252cd,Promoted visibility of dump method for use from test cases.
759be74616a981dc6002a9e7e6bc64223d28bda0,Get enum value fields to work in the ASM. Plus test reorg as we are now adding tests that will only run on 1.5
5d281fd8e98c5c2bec4365d3fc340e2d5f04becc,"Fix for Bug 83303: complier error when mixing inheritance, overriding and polymorphism"
e4e35b9399e8b5ab246316fefed6c97584e55cf9,Added OOPSLA 2004 slides.
8679b482477488adb95b4004b45220407b724f5d,fix (*cough* hack) for annotations originating from class files required by the compiler... will it work ...
c6e5f9af54b04a28d87310c8656f48b8e7cdef42,Fix for type 'c' values in annotations - 'c' == 'Class'
61cd77beeb1135bc1a0ab9f456e3ff835651844e,This fix for 'c' values in annotations has been verified by Pepe.  Committing source changes and testcase.
1076c8361630be6441f26d561b20f3116529db96,First bit of implementing annotation checking in EclipseSourceType.
9367b36e48a91755c82acee5693aae2980de3ded,Fix to ensure woven methods don't lose their annotations.
3960b953bd78c2267816da5ead503779f58f23bd,Correctly build jdtcore includes fix for 83423. (BinaryTypeBinding)
159d6bd9422fc8ab300cfb88280d7ef3bf910a95,Matthew fix for 83380: don't use enum as a variable name.
1b01255892ef222c14fea25b5db77208f1f6bb13,Fix for Bug 83563: pertypewithin() handling of inner classes
8e143992f8e5a8153798b35227c028fb515dae7b,@testcase PR83645 pertypewithin on interface
c18316237b3be2253ad7b4040954655b35fdb423,Matthew fix for 83380: don't use enum as a variable name.
7b4c7d7befe53b132713ba8a5b32729344fbd62e,@AJ syntax (pr83626): changes to bcel from Alex
c301fe9d41df9862ee10a55cfa4e89bae53886e0,Added isSynthetic() to keep Java5 compiler happy (isSynthetic() is a new method in the Member class)
102eaace8f3c59750c68554a2867ea7d9cee12f8,Fix for null arrays (from AV)
9b4532c41ab85510f26548fc35c69ff6e9537cf1,Permit outjars to be used as injars in subsequent compile runs
8cc7315ade97ee5e99d05cac7fd5ff22df130d36,hack workaround for 48650
9b90a9bb03f9444d62f9d6dee3898caa4c55e02c,tests for PR48650 partial workaround - ugh
74b121aaaa4ef74e13c336635927a2020ca9dd7e,support -showWeaveInfo in javac adapter
9c82919cca9ed50a606179979cd90c9cef26b013,"Summary of implementation limitations carefully worded to avoid the term ""limitation"" since Erik took it out.  Proposed without objection on the mail list."
1cee4fbd9be0a6579ffecb9cff14e75ddd1a1136,ignore bin
048c86217eadca4f9600392aba2ccaaebd7946ed,old test for done signal
5f290ea3ddb9f8e4df2fbbcc4a3314d48f6b10c8,"refactoring, reformatting; support for generated test classes (latter not checked in)"
36a383386620f897ea2d5a69fe7bb37e1c1183a7,preliminary fork support
50bab658e3a610e89cd29d0e7312e3719a02e30c,"skipping test on X feature said to be failing on the build machine, though not locally."
5765d534a5437b624646ff20ca487346fa76a267,"Tests and fix for: Bug 83565
   BCException ""bad type name"" thrown when compiling"
fa3cbd5115a5ba8f18609b863f0d875a640d412f,"Fix for Bug 83645: pertypewithin({interface}) illegal field modifier
- Adding convenient subclass in testcase infrastructure"
4adf568fdfcc82ea7257cf24f88aefa109deba52,"Fix for Bug 83645: pertypewithin({interface}) illegal field modifier
- moving Wes' test to the regression set."
2aeab8210db82a9610a17fc9aeeb47a3ee70897e,"Fix for Bug 83645: pertypewithin({interface}) illegal field modifier
- Don't try and put a static initializer in an interface."
b2714f437b60f303cf445649cf86a3008000ffdd,"Fix for Bug 83645: pertypewithin({interface}) illegal field modifier
- Don't let the munger that adds the ptw field and methods match on an interface."
942dc7337a4f556568b10971517a18aed3251fbb,Removing string temporarily - might be interfering with XML output for test results.
0e43ed55f5df9cf46de81683230a3c7ee898eab2,"Fix for Bug 3897
   add support for compiling in 1.5 mode to AJDE APIs and AJBrowser"
311cef3ae0d9d1b8b1bb6b12da9b6d035525b3ee,"per... advice ""may then"" to ""will only"" run, per user discussion"
231112c89fbae16bc327e89e23397aed66d8f919,Initial library module
5108369ed7306ce85749b8fbf611e2e5c5e05b1e,.ajproperties to text from binary
24b9d46b15138ebffb164fad1abcf634a3eacf23,Initial library module
cd0399065de57507af0376d23a48577424fc14ec,copyright holder - test failed when enabled.
091849cc302ae96eacd5dcd18e91c29e8a66c859,avoiding bootstrap to make it easier to implement aspectj ant build *sigh*
0c29b719fd084ca521bd2be20b8ce20ecb7b1f5e,initial support for building aspectj projects
c9b113c92558207c61c18421e182196adbc15916,"base version changed to 1.2, this year to 2005"
066222bd25a6421200a0f73588d3ebfb766f2a3f,2005-6 licenses and copyrights
6776e8c378e3c641fa604e0fa272e29f7d30588c,"name, avoid build.xml if dir null"
66c768a4ed29b1d3967a26d87c907bbb77d33b85,aliases for aspectjlib.jar and aspectjweaver.jar
2e624f78c93e8e57c6cba6b2dc10432ab1d57888,"removed unused code/comments, added toString detail"
d579a282b01bbfabc6be58a18e30a668803699e9,core of initial support for building aspectj projects
d98b9d8aea8cb7339f961bbd3fe0659f1a138a85,"build tests (skipped), enabled license tests again..."
b4764d79c703055718fe42dc9d7b7a43a1ad5efd,aspectjweaver.jar and aspectjlib.jar product templates
bca3b368b0b2427cd84ef044e4479fd95b46837d,initial support for building aspectj projects
adec68077941462d927e7d03edac6c048131ff52,weaver manifest for aspectjweaver.jar (if it changes to using this)
4501853bf4c480479a517a714805291d04febb98,Putting println back in.
110b3d31ac12ea19c73963577fdfe18c69e5f4db,AnnotationBinding testcases: call and execution.  Also verifies annotations in packages work correctly.
41caa4137c20d581079192659bf43d731aff669f,Bit of missing support...
82c45963d7c28080668a5b19a8bdb2fc29e15342,@testcase PR#84033 incremental declare error persists after fix
b4c398b106a5e74f42b54135b39179615da10ee9,some of these tests were failing in an environment which did not have an aspectjrt.jar in the system classpath somewhere.
cd6ed0b524ae75f81cacf35589cce7ea8df78a29,Updated javadoc to tell you not to use a particular method if you can help it.
f1c208cb83fbbe4aa9c6a218dce9023903885b19,Fix for hasAnnotation() - add the annotation type through the standard route rather than 'by hand'
b165e9deab89ff1e9d3f0ed20aeee49f15e89c76,Fix for annotation resolution - allow for package names!
4219b414709e2b34709db5cf536af3731963f9de,Remove message about binding restriction for @annotation
291a5374248bb4dcd626be7840ac837f4903f1c4,Annotation binding tests: @target and call/@annotation and execution/@annotation
d304b65efc0ceeb180e92337edbef580b7a583bb,Added new tests for annotation binding
fed2a4ec429d41bcddd30a08a2155f940942e90f,Removed test that verified restriction on binding annotations
fb2f38f003c9a29f5131b05ede54d9a34767a684,No longer a restriction.
a8b235167d8da50fcd715f6d508b7059745009d5,Provided hasAnnotation() implementation
5282bd1bbfa90df28380b7c73f12be3d39c82124,Rebuilt with minor update to PUSH instruction
a6765ad6557805f7e1d34de27e6f5b4f5258e548,Organized imports.
258675f5f4b3aeac9dce29937ed052e91dcdf8c5,"Annotation Binding: works for @target and @annotation (when combined with call/execution, others to follow..)"
6a8d4a6ba222d0a3c29f16f511d2f88fa7747df4,Annotation binding support
acaa6123b95d96221799cd1422c7dcc1e9cef584,Puts out binding restriction message for unsupported kinded pcds - also verifies an assumption.
64929ae0889e25e22bb0a96fb211d6f0f0fb4c46,No longer a restriction
3a977b2c73f9dffbf5a2f2274079053c7193a954,Annotation Binding
51aedc9a20c3c571f01bbfd79ca357759e008479,Updates for annotation binding.  Support for static methods !!
94251be73e24166f25ee2d8ca477879fea53dfa2,Tests for static method call/execution with @annotation
fd3b7dc5342d95ce675aea787e16222b4413e9c1,Annotation Binding - more test data.
4a4ea5ef315e2b5501930199d22932e71fbc04b0,Annotation Binding - more test data.
1ca90c4bc3d8731224dbdbe24a86d78a900ddcdf,organized imports
5622679b2f8e757b3cccd7f92841a0ecd481e50b,Use the correct 'subject' at the join point for matching
756f85938f3e573b55fba70ee8e3e6254a7edf99,Annotation Binding - now complete for @annotation (for *all* kinded PCDs)
38ae6e91f8272851bd0404753a9804e466faaffa,Fix NPE if attempting annotation usage on 1.4 rt.jar !
6f0757c734decca7642514caf1ce5f06dc829abd,Removing last 'use the static type for accessing static field' warnings from the AJ source...
0dde9d61b534fd84462d2b6a52b6d21d624d3077,Annotation Binding: testcases for @this/@args and one for using named pointcuts with annotations.
fd1f2384469e36ff45b43c5a6ac753bec6cd1f87,Delete unnecessary printing
193f3255addeed654df63a8fe4736c134c67895a,"New annotation binding tests for @args, @this.  Also test for 84290."
7314d8a35171c7c6a44fbcde50e793e3fbd6910c,"Support for @this, @args"
204dacffc724d4d762a418d76f7112b22e196519,Fix for PR84290: Runtime retention not recognized; inhibts use of annotation binding
9db1fad831e3d120c84a8a68ab79894dd56eb518,ignore invalid aspectj-home's when seeking aspectj libs
874a0b997ef069c362c255e0c1cfcf0b25136d78,commented out tracing
953fd4340f6eb6c578d591be9a0d601daf35ca6d,Fix for atrocious incremental compilation performance.
ec8a423b7232747f9979dc48a69d05b2c399a6ec,Testcases and fix for using @target() when the annotation is in a package.
fb70e1b6bbff38dd4ddf33ad1719897770674c4c,taking the print out *again*
a89f4272c7378e772d6606eb28bd349eb4fbdee9,missing copyright.
70d7c0de3083547dccbcacdc62e5b91142c3a4d7,Fix copyright.
cc6a37364a6eac962de2f3af693898bfc2cec9c5,Performance optimization - don't use toString() of a pointcut on the main code path.
06a9daf851f6eb793a44c32a7b94e7c9c4768d8c,Performance optimization - use stringbuffer (found using xray)
b9cffdeaaab5b89fc1a240c4349ec38988bca930,cvsignore for .generated.[lst|ajsym]
7fd7d6b2875eff95488720dc951f3cc94d383903,serialVersionUID
c92e64aa1f9d9dafb3de78f974ceaa46c81a9730,support for building Java 5 sources
ed0ceb76f0e86109035a3328427bac4a4d9da983,Constants
b3d5619b56d379bb732839ae04c18102595e243f,Module aliases in a .properties file
0bf0bcc26001960e9d36d4b0153d10f2f7929f17,support for building Java 5 sources
0e00ca5fc891fcc70cd7fea1e666dde988a7764a,testing aspectj5rt module
885b4f017b89fc616e844472f35d2dd1c0411a83,Building releases under 1.5 now.  Scripts should define java15.home and should invoke the target build-13-check before doing the release build.
7dd69aace9cbd37d5813dd820e6a264bb5fcf6b4,"new module for Java5-specific additions to aspectjrt.jar.  aspectjrt.jar is assemble from this and its required module runtime.  It requires Java 5; Eclipse developers not using 3.1 or Java 5 should close this module.  In Ant, the java5-src directory will be ignored unless Ant is run under a 1.5 or later VM.  See the build docs for more details."
6c4cffea45071d8c5facad6cab35e3ec45a13b98,test placeholder
698ad9633f9ba28a8e5ebfbd219a4c4028e4f997,"aspectj5rt.mf.txt is now the manifest in aspectjrt.jar (per build alias in build/src/.../Builder.properties), so  this is disabled (not deleted since undeleting in CVS is, um, awkward)"
a3a53137d5acff4fce60b49c976acb6d7904e888,Tests for 2 new annotation bugs: (1) Using the pattern '@Annotation *' in declare parents wasn't working (2) Using an annotation without importing it was causing the compiler to go bang.
3eee4587c62d8cfd1b202a4d75401c32ec46e99b,New type pattern kind introduced to represent '@Annotation *'
b6395fd17cf333ce6a56f10f02307986e49b44c6,Although there isn't anything to resolve - we should say we have tried...
8cefe0a7e3480dc34df6fe27610cc25ceb1a5179,Changed name and added definition of values.
382b7330f47d14164896671a4bf3c7ec3acf069b,"better support for weaveInfo message, <weave> step, and stderr/out validation from runs."
1381903ac81cdab2b79b6525096671aa5d62eaeb,move all java 5 tests out of code and back into .xml files now that we can compile them properly
fde9f247531b5257ebdff886054e9fd6cfd3e03d,fix bug whereby we were statically matching annotations that we shouldn't
e726da044a5ee1cdc4a5f080514c898593465252,organized imports
200fd222d63578de1dc891fa211b7bcf03c7655d,corrected typo
3534aad5edf1adc9d3167c5f70c141e1fbeafc94,Testcases for @within() and @withincode() binding.
479d5a8d83a5e30047900c2d878c457a67d6ef65,"Support for @within(), @withincode() annotation binding."
b48fcfb6dab2f1dc1029a2ae1b469622b49c89c0,extra entry for bin
db5e1868bb553bad01441e70db166ac4429de2f2,temporary removal of jsr45 attribute as its format crashes some JVMs. (see pr80430) - it will be readded once fixed properly.
b4574b90b2db6cdae830e702825d86957447c3b9,"support for annotations on ITDs, and declare annotation"
2b7c79e4df40993310a9ce1c66770bbb0a866ec2,"parsing updates for declare annotation, annotations on itds, and use of around as a method name"
2e7d6a211402509c429a4ca6c5e0517e711eeadc,Didnt have a default.
14853f9256e2c3ccc6a521b753c42cd366944320,Make the aspectj5rt classes available for writing 1.5 tests.
e282c5d4de57310227b71ac543cdbb7be36e84ca,SuppressAjWarnings test.
5a308d4ff7800bfeee07f5e67841e938d63c17de,vmLevel attributed should be just vm...
2eb9dd812120f6e8fbfbf59c31ee16d2ff68b032,only inspect results if test could run
fd3129964398cbaf66f3ae3c5e3c75ebf7f3a34b,Updated with suppression attribute for non-matching advice.
8c5754b946aa096870e894b4cca08384971267ef,remove syserr
4a3f3643037a0d5d37bea64beb5bae013c5168af,better handling on a 1.4 vm
3f697268336f4c493a167253d091a7cca9365d1b,SuppressAjWarnings test.
b5c05b153856631cb6010aae94d75c1e695c22dd,New lint message added for non-matching advice warning
7eae61c0a9e979adfcd0e1b8db908b2433c9feed,signature for org.aspectj.lang.annotation.SuppressAjWarnings added.
961da2a081517628ac605693c55ef844e91de29d,Utility method adding for quizing whether you can find a SuppressAjWarnings annotation amongst some bunch of annotations and whether it suppresses a particular lint warning.
75207c8bdc8cc4322edb4ae76e804d6a684787ca,Deal with putting out the non-matching advice lint warning
59bee73c83aa70c35f3ec1af1c25332000aa9525,Needed for SuppressAjWarnings support
6f1d4d92f9eb00f9c43d1685f231e5580e968922,Flag indicating if this advice actually matched anything at all.
5d4864c66f5692fd43ecd21ef5a8822c720605c7,tracing-lt added to collection targets
fdc14b8ff96b4a3c16b7cdf933c16fd9320ee3c1,working bash script
900e12978dc17c3f9d7842764a48653712578e9b,@xxx(@Foo) -> @xxx(Foo)
0ee85863735ebef10e3b4853142c8d9f0c7848ed,Includes ability to remove problems from a compilation result.
a2150af444e85b22dd5dc0abdb232bbebb992a41,Use ability to remove problems when building using intermediate compilation results (fix doubling of tasks/deows in inc building)
0ad50d6ba32055ae2a075478ff9d4d65c3b05165,Plugins for tutorial.
0549a5959680a171bdd89c9cd49e4042fab256df,Fixed URLs
13e4bfbf76d0caba1ca4f4d61901017fc800f6cb,More accessors for the different types of value.
2eb14b49f16327adc8db52259155bae141aa20fc,"minimal build script (for doc distribution), instructions."
1ccda254adf5faea53463209bc786fb976436857,minimal integration with org.aspectj.lib module
1a901ad9a733d50770a0d0ea308a1aef65814e31,compare dist results of two build.xml scripts
184a094db7264fb8e1f2be31fedf71d0d76834bc,skipped libraries and resource patterns moved into .properties file
d52953ffcad47ffc3f2825dc6c70a79f5e92fea2,skipped libraries and resource patterns moved into .properties file; better error reporting
1c733785dc939be1fd70d0626daf13381c68f56e,"libraries excluded on assembly, not on find; handling JAVA_HOME variable for ajdoc"
5933735d9a87e59c5c89267d18f33ae09c56206c,"Now testing that all files in source directories have known suffixes.  To add a new kind of file will require changing the resource pattern in Builder.properties, as described in the module readme."
07cea8cd5891580ab0dae9fd006c8d751f6437f9,"some cleanup, removed test - antecedants no longer pre-clipped"
52faf9b65c990a1982f31a65b7d4187e77860f0b,"doc'd skipped libraries and resource patterns moved into .properties file, testing of resource pattern"
3145d5da01ee1ad058e78db888157a940147cdc2,"removed ""temp hack ahoy"" jar filter.  Filter need presumably for non-standard libraries on classpath (update Builder.properties) or for garbage-in (remove ant gif, readme from org.eclipse.jdt.core)"
d9d49b3ae5f05fefc503f95617c48feb78237f0b,"updated for new Builder.properties handling, strict resource patterns."
3bb1ffe98ec0b6dacf9440998f5db1103ca05e85,ignoring ajcore files
ef868243d36ab20062e7aae6828bc17987a018a5,fixes in annotation docs uncovered through testing
89ef2959b73dad42d0640d91964005cbf654b247,enhancements to signature to support getAccessibleMember() (see ajdk:annotations)
cf0ed05d72754b5f620982552ab514acb66677e8,output line numbers in stdout/err comparisons from test harness
69845b3545539b7961e8b4a3ef4a5ac416a305bb,test cases from ajdk:annotations chapter
82fa47384f23d3ed0cf20b531fff947182b08a84,completing the set of AJDK examples coded up as test cases
f90186cb8eac1b4abae4c9b8fd74828b98f534ab,"fix for Bugzilla Bug 86789
	  	annotations and ""circularity in declare precedence"""
4ca8479d63c935c1942a41b31d7f6a0a26781dd3,remove accidental 1.5 dependency in tests module
a5e1a73048c9d8edf8834ec2ec34dc29ac61a31c,fix for varargs example in AJDK - 9 failing tests now left in Ajc150...
cf4d7b321093e16d13ba90b21515a1f29648f64b,"Docbook comments from build.xml, fop/pdf comments"
83cda65860254f7de81dfe69feb85219a08d2bf4,minor changes per AspectJ 5 release
55e9ee4e8f3b61167244af23f686bfa977a3178f,no content changes - corrected xml.  Using informaltable in ant to get pdf tables to work.
e9a38394c24cd1f3ebee4ebbb48503efaa4fe51c,"adding fop docbook to pdf processing, but currently not in distribution since the results are so poor.  Most changes are due to reformatting (patch reformatted and made changes)"
5d35ef38fb294be652fdca40078d47796f78c2f8,"patch 81654 updates docbook  per
http://xml.apache.org/fop/faq.html#no-page-master
(oops - I made .xsl files binary)"
63f9352372d564ea837feaa459cbddc76afbaa0d,"(minimal) Apache fop 0.20.5, for bug 81654"
983eb455bf4617debc32779d5ae6d29e4b40e232,fixes for annotation type pattern bugs uncovered in 150 tests
287f73719056c31d1d5b3c24bfb360b14bf31dc2,temporary workaround for (jar assembly after removing ant jar from testing-drivers-all) will work only when jar is in lib/ant/../../aj-build/jars directory.
86bdc5747166cdf819d48e701ab0a853e94e45e7,"Now testing in 1.3, 1.4, and 1.5 - consider omitting 1.4 for time reasons."
3220c918da6f292b3ba09b180ea9e4444cdfe4cb,"-exitOnFailure for System.exit(..) on failure, so release/build.xml can respond to test failures."
41f7022722208af3bde9cb4b7fe6c5d98915c24d,remove dependency on 1.2 API - runtime libs must work at 1.1 level
e6e82daf32f81bc653025e9551b7820bf78104fa,Declare Annotation: new message
fbd128789f6891089b0ab012ffbb9342211f3d74,Declare annotation: tons of testcode
13e2263ead2583b1be4a7329611c45e233d04db0,Declare annotation: added @Target as a well known type
240e6e1260e17657e5838381bc3ce98956561d76,Declare annotation: New lints
5713fc9ee01340ae69959db1398623e19a32bfa6,For Martin Lippert - removed static state from class.
f51bf240ff8a1744d34ff77b2e8c63071fce2ea1,Declare annotation: infrastructure upgrade.  Mainly to ensure we copy entries between constant pools correctly - required when annotations move from one class to another (as is typical with declare annotation)
fcd5db07a048c9526b90d8b8b52f7c15644ac1c5,Declare annotation: tests changed due to constant pool copying change for annotation support. also tests removal of the static state from Utility/Type
074251e1666235f1eb62e5406821e8d05178ce9a,remove dependency on 1.2 API - runtime libs must work at 1.1 level
922aeaa57dcb071c5a3007827c2268d707e557f2,fixes for annotation type pattern bugs uncovered in 150 tests
ea5908c3891ef93331c89e5738770af2712cb5dd,unused imports only
85aa1520881e7271e658b9377dfd020fde28868c,"fix for Bugzilla Bug 87376
	  	NPE when unresolved type of a bound var in a pointcut expression (EclipseFactory.java:224)"
61d90580a82596c0a6f00ecd5d8b52af411ab18d,Declare annotation: loads of changes (see bcel-builder changes for detailed info)
ca004fd36e4280bfb78b58c37fcb1b6dfcbdb223,Declare annotation: new infrastructure.  AnnotationX is a holder for a real annotation (which is currently always a BCEL annotation) - annotationX's can flow outside of the bcel subpackages in the weaver.
08fdf0bb14548f6ec39f118c84e939dde4092219,Declare annotation: guard added for model building... (perf improvement!)
e7d978ecdbe0f257426a824903a434288b83470f,Declare annotation: new declare nodes.
6c05b25f69b1478b1336744ab69b3f2659d4ea68,Declare annotation:  slightly modified to allow subtypes to specify whether they want the ajsynthetic attribute attached to the method it represents. (used by DeclareAnnotationDeclaration)
7ea7e3091003ec5c500671d1038c761bda752b45,Declare annotation: changed to allow a more meaningful name for the generated method.
463910b2bab2a9e325c2fbf33edc3db741e13452,Altered FIXME to allow us to distinguish between new and old ones!
f5c983b57d4bfd467cb7c45de7eea4a4adf88c61,DeclareAnnotation: formatting code for declare annotation nodes.
84b90d5323f4ed45664defb8edf5a1bbda79e8cb,Guard logic for asm building initialized.
2b62df659920f25d660f73dfef62add21b17e94d,Declare annotation: loads of changes!
ff284d4bcf64076c85fb0eb4654f4a88342b965e,Declare annotation: creates DeclareAnnotations of the right types (using typesafeenum approach)
4676869a3b174ca16e8836a4289a5b8dddbb2a41,Declare annotation: useful to know if a signature pattern specifies a starred annotation pattern.
1fdd7fd3d2b4c83a451f925c5446f25a1c16be5c,Declare annotation: useful to know if a type pattern specifies a starred annotation pattern.
8ef6f44f170c728557892b32d242dcbf5c8dec28,FIXME altered - now names culprit (me)
33dcd66fe02a31b28a01ae6a1a3c7f83082c8f97,Declare annotation: modified to take account of new AnnotationX stuff
f34f74dabb4bffc9836231443d048255340ea7e4,Declare annotation: only declare annotation provides a differing name suffix (at the moment).
2a802a62861fd6bf5dc7a5efb69eceaea7c376e2,"Declare annotation: put guards in for structure model building, added 'annotates' and 'annotated by' relationships, added methods to add these new relationships."
608a6d8f6bed078ff947e4124dae8466d9ba6690,Declare annotation: add the 50 odd tests in.
e61a086610c0f9363e3197bd22348f0721c29fb0,temporarily removed one test... until parser reopened for next compiler integration.
b75f15d4839cf1bce952df3d2c9361315b04032d,Declare annotation: support for new declare collections.
1c7ba5bdaa38cc7f1a84b9696deb6e303af995ea,Declare annotation: added getAnnotation/addAnnotation to the RTX hierarchy
886730bd108f6c9e92a9a91f93e6c2adfb26c1fd,Declare annotation: new kind of type munger created.
96f45c808c74e48e461540942c0096c03cebee5a,Declare annotation: getAnnotations added.
7a81404a82c2c1574ec3faa9350e360db8effd7e,Declare annotation: exposes collections of declare @ thingies.
16666f81ae136fcca72c35b6272425c5caefe618,FIXME altered so we can distinguish old ones from new ones.
263b1005e8356106b9071b5ea43a0a804cc8beed,Declare annotation: now holds set of annotations
de51a678544b34ccfbdab7be682785bfa5755f95,Declare annotation: Doesnt report errors for annotations attached incorrectly (due to use of @target) to ajc$declare_ methods.
826e7ba5f34af654e2c895afcfcecf8d46c17d3c,Fixed signature for constructor nodes to look the same as it does for methods.
5d8ffc2c706139a7e4622a6442f2e0fbf5ffe9e1,Declare annotation: manages a set of annotations now
bdb151a442a2606ad37640c4307ba1429514c8dd,Declare annotation: uses the new annotation type munger
067add65706aef0b125b3fac8f42a76051fb4ee3,Improved FIXME comments ;)
66b847129d16ab0d7ab1b77f81e3397cbcfb623f,"Declare annotation: Does weaving of @field, @method, @ctor - copes with recursive application."
e550a50265f894c4222128abe18f0097327b3d0e,"Declare annotation: does binary weaving of @type, copes with recursive application and interaction with declare parents... i think"
cebb379fd7ffdc32de87b75bada17810ba1f8373,Declare annotation: first bit of weaving messages for declare annotation - not finished yet!
3123880881836efb873481087cf9fcd81b1e4b15,Bug found during declare annotation structure model testing!
6ee78b248060211df114f28d0ad2b4d26ec726ff,Declare annotation: filled in the blanks
7dc7cdd9bdd7ca902785e4037c6893fe1c5f1418,Declare annotation: cope with null symbolic declare
06fba267432633331ff211b7f9e29b594bccf553,Declare annotation: source weaving of declare @type.  Includes (commented out) declare @method/constructor/field implementations for possible future use - not required right now as applying them early (during compiling rather than weaving) makes no sense.
d10cabc3f07ac34ca20cbcbc42923e34a7381648,Declare annotation: Buckets of test cases!
220fa73463523b45f8572f4324ac7808f440a6a7,Declare annotation: all the XML specs for the tests
84083371793771210c662bccede71570ed52cce3,added test for declare @constructor
e743d8b92075dbd8944b723dc6b231825d2e0137,added example for declare @constructor
fa54cd96661ca2b2fa6c0289bd6b90bc38fa5e47,Guard test execution on 1.5 vm level.
4a2b927f416cc09337aed8d470349c6f43e1ffb5,Guard test execution on 1.5 vm level
cbe1fbc633ddd98c84f9f62ed123a8b874723be7,"the ""challenge Andy"" mother of all dec @xxx tests."
3938f0e5d501382517653964f4ed175288ca5cce,Ensures on multiple compiles the method generated for a declare statement always has the same name.
79129daa01f6fc8036a4bf7e58ffc8aa8e363ccb,temporary fix to ensure we see relationships for dec @type when incrementally compiling
a0aeb25088c023f6da9eccfae37fa72acab0f309,Oops!  Now skips advice/etc when looking for matches for dec @method/@ctor
5375d7f3e1d6c7ce49cd3cccc48daf4ddade1ed3,Much more robust way to dig round the structure model ...
e35d9ee62484336a691cfc3990c507c482a2d06a,added some words on context binding across disjunctions and declare soft behaviour wrt. RuntimeExceptions
204274dc0529ecbbaa20d72eec49a14ddf4ba34c,test cases for Bugzilla Bug 42743: declare soft limitation
e29477276db65a7b85c1fac6e31a7dd3229b0302,fix for Bugzilla Bug 42743: declare soft limitation
6d7638833f88e7a26ac3688c7cda0e617a94be31,"dead link, new source modules"
f82e6f25e306cefb9278e46df2abd3765582ff36,"fix for missing syntax error on execution((@XXX *) Foo.new(..))
                                                                          ^^^"
8e275e3b934fd973ca04e358e994e50e9668b415,Declare annotation with ITDs: testcode
b5f4d09e4f4e45943c6c8b3dc8dca0c05b90f27c,Fix for Bugzilla Bug 88652: an array type as the last parameter in a signature does not match on the varargs declared method
1dbed37c0e72fce1f4c4c01ada2c980b6e6a8541,bug 53209 - inpathDirCopyFilter
8766cadf5e70cf564ebc6699e48e3b2b7f20ad0a,bug 53209 - inpathDirCopyFilter tests
8c80fde9d4d3c7c2d913da377f8fb2de6e4bf854,bug 53209 - inpathDirCopyFilter doc updates and tests
13a88313eac9573418a047f59d2b8e8e5bbb8c1c,test and fix for handling a *... varargs pattern
b0f270ee1090daf7b5aec3b534b98d28955f77bd,"enh 76055 -
	  	Some Pointcut PatternNodes are missing getters to traverse syntax tree"
70fb0d14b3829d7ce36d0705734e8dfda5857616,one fixme resolved ...
ef3044a08dd1e5556c03e614ce8d799d61aaf041,allow for changes in the underlying annotation set.
68f63508828d1c1ea7076d051cc77713625f6a03,fix for Bug 84122 - Allow aspectPath to contain directories
b617e0709eea6164de4e66045d5eba59dc8bc0fd,"reworked, temporarily commented out the MethodSignature stuff as it misbehaves for me."
e61670d772b850932e0023c5a36d233a3ad06e45,not useful anymore
776ab61a02fb038c83a7d5638174443f6e727267,Declare annotation hitting ITDs:  reworked the code generation mechanism for retrieving annotations from ITDs.
fb01cad1cc839b23cba31cd4dd5f44f68bad4411,"fix for Bugzilla Bug 84333
	  	BCException: Bad type name: TypeX.nameToSignature(TypeX.java:635)"
0d14ccfa4ce92c9adc2f849a4ee4f22c5b3a5ef7,Enhancement 88862: declare annotation hitting ITDs.
d0b3d1178023c00a3ab95803a0b4938e31923a5e,added test for pr83645 into suite
b967da32c016fa053fcef0e887b24ca3e2fda8c9,guard on structure model dumping.
facce3e93ca7a276a4852b033d68a6bc2d667cf2,"new icons for annotation/enum, 'borrowed' from JDT UI"
381de4c97d686dbbf52b297e8dac6dc5236f4e28,make deca labels 'declare @xxx' rather than 'declare at_xxx'
68eda4e35b8725c478216a13da5d81a562fb9e0f,new tests for ASM testing of declare annotation targetting ITDs
f33c8225d1e74adf3cd5495f142e9659aa27b4c7,Fix for using declare annotation to target things in the default package
7d28c3b34fe214a4795e3c31f45093e374366c8b,Removed 4 FIXMEs and added relationships for declare annotation on ITDs
5ed6f1500ee1ce8110a2000cb738fa6bfae7de3c,Don't report unimportant relationships (e.g. perobject)
8c4479ee1f75c3c336f3519eaa1c2c03719a1cbb,replaced Java 1.4 API
e460b1e3dae5d05b3457ff96746292516b963c32,Fix for problem introduced when checking contents of dirs on the classpath for changes. (see PR85297)
883af3699cbeed252af34f8c8586379e5c192f53,Fix for a test that was relying on previous state lying around on disk from a previous test.
d3a9088bfc312ce744551b1e89831fde0a681bcb,Configure weaver to behave in 1.5 way if Java compiler is configured that way in AJDT.
c55a1db4b1eb66c0d8a59163d5e971703eaf59cb,Guard against NPE
e5339af220a450bbeca7b72c6d9118c1ded56308,Use names like 'tjp.GetInfo' rather than 'tjp_GetInfo' in the lint message !
d09f86f3551c500323606a765b74a0028aeaec60,add some style to our guides ;)
7219c36779e5d03fae9027b0191eb0f086d84fbb,add a bit of padding below h1 for IE
914a6656eb6a47ac66a7bbb8c5b0c15b98100c80,integrating patch from Andrew Huff to update building from source instructions
ead3a2c5810fd37b9753f1344df8ddd308b1289d,From The Branch: Alex's new annotations for annotation style development
42702fcbbe94f287ccd2028291954947c46c0c47,Changed copyright message slightly to keep test happy !
60edf48d3cac5e64a4f8d35345794ef89822ea9f,Test programs for pr90806
88cd54788c51a631ba890e6ee9e76d36093b7ff4,Fix for pr90806 - stash sourcecontext whilst we have it.
fbf8df9a39f53275b80ea04704c81e4005e74226,Test for pr90806
d8665133116ce54e90c0e33ddd83d54fbbbbec40,Null friendly and includes sloc when dumping model (only ever used when debugging structuremodel...)
b81d25a13abfb9a0a5a5eddff79b1a36d982a036,See pr90806 - change to harness so fast machines don't fail incremental tests.
be14796f5643358760951c0650b6c879e29e73e7,Fix for: Bugzilla Bug 91090: declare warning with staticinitialization matching an aspect doesn't appear correctly.  Ensured staticinitialization shadow source locations are always the type declaration line (including offset where we can).
a00a54013b760faace156e7c097a23b9dd55ff3b,"Changes in staticinitialization sloc reported, see pr 91090"
55842467f6b6408a4b6a7b7ab090db82423ec2ed,update the last updated date
d697649e6dbd11209d2ac9d31f6c0031dec338e0,Patch from Andrew Huff - failing test for pr90588
bd786b079b05d0dccd7bbe4ee871b06ddd84fb48,From The Branch: Alex's changes in the weaver module to avoid use of the default package where inappropriate.
bcef03bef88e3e43347ecfc57f0d6cb6694d7b1c,copyright added
df7fff4c8c073a3bbcfe749134d577299402d5fb,bug#82171 Created sepereate handle provider to enable ASM use of IDE-specific handle identifiers.
45f1f040588862f0100f3844574f3a80afab8e15,Andys quest to reduce unnecessary test output.
5113377894abae3490bc3849c49353890cf70f42,"I'm committing this shell of an implementation for runtime reflection on AspectJ's type system. It's needed by the aUnit guys and provides a means for us to share a structure, take patches etc.. NOT to be considered finished (ha ha) or even a final design at this point in time. We have to do some compiler work to generate runtime-visible structures to support this..."
45ae94da9e44a31f970c9f5ee4f678902b26fc17,Just explaining why empty test is here!
f7bcff6dbf16ed80ca4934fd8529deae6ebdde7c,From branch: New build scripts that Alex uses under IntelliJ - can be run individually or via master in build module.
3db6ee486652630ec9298465bb3727802d3be6e6,Andrew Huffs test programs for @AJ
cf9f154462313dc5cd54047c880551fc8439a68d,From branch: @AJ test material
cc7e29f24ecb251265423cce1d1deffd98ace31a,Andrew Huffs coverage tests for @AJ - not currently in RunTheseBeforeYouCommit due to failures.
e1c7b380adc01fe54fd3b30e3c1697b238324be0,organized imports
ca2a084bcb48c05486f2f21aa5cddf8747f20f7d,Uses default locale rather than assuming UK
e2fc81761187c2223a198b7af38015fc57342f10,From branch: Driver for build.xmls that now exist in each module.
9dee725b91c257b3496db4c9e35243a80c606137,Adds JUnit to the classpath (so it is available for test material to use)
a8a18ef6408155b479c260e8ecea4b2fc847931d,visibility change
11ddbca0fd1d44048332e3649967d82d03a78014,"Empty interface for EnclosingStaticPart, to enable differentiation between ESP and SP. migration issue?"
2fcbc5bda7a0e1a6103eba2913e769fe891e4da2,From branch: Changes to runtime for @AJ
1268e4556164239b91f6e5682766d265e400f32f,From branch: method to check if a source type is @AJ style
33e4e098ba135ffe5c7b1bd5b496528f0e150c55,Change to ordering expected due to (harmless!) advice ordering change in BcelWeaver
302e71140e425fff09595fb0fc7fca52c711ebce,includes the basic @AJ test suite
3d725fae817fdff9f3a53125c333a7a88db92d4a,from branch: simple @AJ tests
d2b05c8256cb1437c08a18ea2315d1c157985ce8,from branch: build.xml's for IntelliJ
fdd5b4e283bc0b6e02d6e9505d8f589df4baf1cb,changed cutoff
e8601ecc09d493767162d7d97a2850a08a8de386,from branch: expected test results changed because of new JP subtypes
1ab8062fcd5a15d092ce2e69d1b603edba12f753,from branch: changes for @AJ - any tests for this???
615751b8b35b8cba984883cd46995bba9ee60cdf,changed visibility
aaa79b1e48ca9409446a51ebd649360433d95563,improved error message
e5c3b3a9f777ea7a1f795ae583b3755248863511,from branch: dealing with the binding of formals
df146370298318de22a449472d680c8259fecbc1,from branch: @AJ support
278bdc1baabe0901114b8fb4dfe4261df33dd286,from branch: binding rules different for @AJ
25f27750e1a08d1cb0b1242de4cc5321d830ca3a,from branch: add aspectOf() via a munger
e2e4adc3655a9c69ba9e3f2050c83e38d1a0c17e,from branch: extra perclause support for @AJ
c105853907f4ea53f0cc4370651c3adf11b1c641,from branch: new utility methods for @AJ support
609431e58dcf9200c50d3565cfc40cfde25d70eb,from branch: capable of knowing whether it represents an @AJ aspect
32a4dbb9b3d436da05dc1d06aaf203a32208c83e,from branch: processes @AJ stuff on a method
29bcb502601e39a95e1272caee652c8156aef819,from branch: processes @AJ stuff on a field
d542d36f66e4265e2ccef83188a2c8d4d2587548,from branch: knows about new JP subtypes
32c3ac7de17abb9dff859adea6139c096b29ac31,from branch: perclause support and modified delegate processing for multi-threaded environments.
d8fe1508a6c0a2a13edf32f26b72f11d229facd2,from branch: modified parameter code for @AJ
948b3bf6a77530dec7f6e4b73e183050559cada3,From branch: necessary for @AJ
8d6f7108914750b3e213a1d8f6fe2551ca6bc113,from branch: new tests supported
262c370ae11d10fe89c1fefb0ffb3d358a6bb6f6,from branch: new exprs supported
dedde015a917dfc516178437edfbc5e17ccc3465,from branch: processes @AJ annotations
acc440c53b0c46ecc9e9af4452e8eee6d14a92a1,modified for binding processing from branch and Andy optimized toString()
7d8f36fd550d449d9e5cea4db12c2aab47df6e9a,from branch: perclause support necessary for @AJ
e3cfca7e4d8f1e72b2ebb7e669eb440a3426df66,from branch: mod to check if exceptions must be verified or not...
bbaf5ab3c6af380e43920e6e38de0d3f0323a546,from branch: check exceptions if necessary
97df6c7a2851cd5b0860406699c7358bf15fed16,from branch: rtx's now know whether they are @AJ aspects or not
d4fd9696d97cbe45e18c3f791ce621f3ab313ea1,from branch: dont stick the interface on @AJ thingies.
dbd7a4f08150b8795dcfd3c918c8262ec1ecaccd,from branch: redundant?
827e84d31502cf3aec2e602473bd2d1abb7144b5,from branch: concern from alex that sequenced hash map might be needed?
7826252fcfcbb10339be57759259f0b4dcb026ee,from branch: needs to implement mustcheckexceptions method
385356c6c19ff2e3f2899a6e4e80ceab5130cc03,"from branch: loads of @AJ changes for inlining strategies, using the right JP, wiring up the closure, etc."
b4dd0cb4667eb4db251d1f52063f699bef7baa0f,from branch: changed visibility
a172236de1104ff764befcd881fb5fd866d2ddc7,from branch: change to advice ordering (sorts on source loc rather than name) and various binding processing changes for @AJ aspects.
b97f1df229dbf37fc91fd15a64edbae4cc9d5766,new simple tests - one of which aborts...
ad4e9209b4237fcd3bfe471533a43d16755069d4,"accessed from gen'd code, needs to be visible"
aa8255d9252eaddbc2b1ec9333474a65aa0c7c0a,committing to shut up the flippin cvs sync
d5a35c332443049a0abd4b245ebd7c70c624b6de,removed issingleton - causes crash
576bc8cef95c03137e1cbd9dc87cc9600c135a05,Switch on junit task call.
47dfe9891ccae8cb4031abe56472c861776690b9,Copyright altered to pass the test..
062821e25cbb00f8543c43995b5bfbc08a4fd203,I didn't move the test suite class..
6ce58147baf8e4130b6057e9cddb752cebef4b28,Refresh these builds of aspectjrt.jar - they are used by the harness
9692766429d658b4b5fe3f0ecbf8826cf0c6efc6,"Delete bintest, not quite in with Alex's policy as paths hardcoded - could be improved."
c850c085804bc42cb378638cbe0e65a0a5358d3f,Temporarily removed loadtime modules as they are empty in HEAD
cf35fc6351b60933460fe44e00e262cb72f43cef,fixing Alex build dependancies. Adding top level build. Usefull for patch creation
6906800a16da50158ed9f767d36dbf6ff24d5022,first half of Andrew Huff's patch for 59636 (-log option not producing output - should it?)
c303cd5db5a811bfba8feef4eb9cb6876919a423,refactored to avoid clash and duplicate class with modules/testing. Package for modules/testing-util is now org.aspectj.testingutil
a92b2f0201a3fa6b02a9f3c67e9b34a17c0fb7f3,first half of Andrew Huff's patch for 59636 (-log option not producing output - should it?)
78abc76610cfb5fd2a2282086adfb017537ce49c,"fix for Bugzilla Bug 91858
	  	NullPointerException when declare @type is spelt with capital letter

patch submitted by Andrew Huff"
3f942a4c58210535e91c50a037a8d743a0c70e19,Fix for pr92053: atargs causes a VerifyError: Unable to pop operand off an empty stack
1e6fae862407f7c0b49321a6c452774f91f3cd04,"commented jar target from bcel-builder/build.xml since broken (can someone comment ?)
impl @Aspect(""issingleton"")
fixed error reporting on readPerClause from @AJ"
7a639d019a9b04b3eb7af97a7a2975cbbf72e0cf,"this set of commits teaches the TypeX world about parameterized types. it handles passing of parameterized types into the weaver from Eclipse, and back out again. Fixes the ITD and parameterized types issue that shows up in the examples. Much more work to be done in this area of course before M3."
7a613809e63e1a3320a7598e8d7381e70c717adc,Fixed bug#91912 added softens / softened by relationship to ASM
21f753b76c1bafb580f32888ea9ea6bae0b45d88,"back to 1.3 exception API, report bad method via NoAspectBoundException."
105a6345ddff474ff95658f59eab6c1c67607ec2,"compile runtime under 1.1, see how badly it fails"
b151d1a68ca711696f6f43a5e1ac03ce7b7c5431,"fixing a missing ""throw"" clause"
ced5f6e66dff30a7b4acb6f2d5943757f810c645,"@AJ annotation are runtime visible, fixed all licenses from branch for EPL"
cbc9fa978e3f5b6e1068e44143109d295cbdc139,"Now you see them, now you don't.  Annotations now runtime visible."
5edfef30ff4c24b2c00e98ebd884a29e0c76d163,Changed runtime invis attrs to always be invis as discovered by Alex. Was impacting nothing as far as I could tell - but needed fixing!
5f5ec77a5f5e5785167fec2fa8eab336834c39c4,Changed runtime invis param attrs to always be invis as discovered by Alex. Was impacting nothing as far as I could tell - but needed fixing!
84b6ae3220671222d40a5546ea1c6a7e266e582a,Workaround/fix for Wes' problem with the compiler building his article code.  Ignores raw types which are subtypes of ParameterizedTypeBinding but have no arguments to worry about.
2be42e20b9ed912893f313a32789e6c8c0fba3b1,Force change of these files - might make cruisecontrol happy.
5901afbac3d80334f727457ff2c06325a1f28128,test case for fix bug in bcel RIV annotations  (impacted declare anno I think)
1ff2a95b303cd615d5b689b1bdf79a7f201c62a3,add aspectj5rt to classpath
92fce1440c9017376efaf544802d8cef07546b03,"this patch implements the MAP for aspects, pointcuts, and advice. just enough of an implementation to provide the support needed for some of the ataspectj visitor tests."
75c1c3ea4d4cc5308cf3ba4490d18b8536b08dd2,"support in ajc for parsing and error reporting of @AspectJ style aspect definitions (aspect, pointcut, advice only at this point). Also include the AddAtAspectJAnnotationsVisitor support. Switch off using -Xdev:NoAtAspectJProcessing."
cce34110147c340556de02464bb609f947d9f075,"support in ajc for parsing and error reporting of @AspectJ style aspect definitions (aspect, pointcut, advice only at this point). Also include the AddAtAspectJAnnotationsVisitor support. Switch off using -Xdev:NoAtAspectJProcessing."
90e41018152ca4f04e4442e5fae02ee2b97c2a61,test cases for @AspectJ visitors
7a203138c6461563b42ac0011972d5a577e15946,run the aspectj5rt tests as part of this suite
a7aa33d2bd93ae44b274d5fca6e2820720d153d9,MultiProjectIncremental testcases.
d00224721f28759cee41f2759979248ddb69858d,@AJ declarePrecedence was not runtime visible in those jar - don't know why..
3e1783bc03e372ad8957e5e24e41b5c7d0e7dd26,"fix local build so that test run with 1.5
fix Adrian test that were having some assumption on ordering which happens to fail with my 1.5 compiler"
4cf9913a74c804176c04e9cc5effcbea24289418,fix some build. Move AspectJrt5 test to AllTest15. Add weaver checks for @AJ annotations + tests from Andy H
9da1384f0cd0e5f2da94a05ba1c57e60a83a93d8,Copyright added to keep checklics happy.
ee9fe51b58d94d722a7fcf3b7b9d22b8d0115778,Hmmm - rebuilt with 1.4 Java - any difference to the build?
02f75ba1e5b0eb9806d5642f891940be06691747,Fix for Bug 92630: Null Pointer Exception thrown by ajc compiler
664be8d0314b540ae64682420330cef0be0c99d1,Put the ordering back to allow deserialization of an old set of relationships to work.
09df527b590f10c967751fb008e467205c3a9416,Fix for structure model missing declare @constructor matches that hit the default ctor when it isn't defined in the source file.
362d4530ccca6b2a956d222f8d750a13abf5935c,Another useful callback method added.
09b3cef82c1b7f55ccf3a9128f918e9943257295,Implements new statelistener interface method.
083ada240d0fda5a96d0cbcf0da2a41b4b9dd6a2,Useful guard method - prevents asking for properties twice through ajde.
af36dfaf5556539eb4c496c4d476f1f97348bb5b,Improved toString for debugging !
88e093e000eb083f3de56557d69897c60930038e,organized imports
4b602c7b6c1b269c74bf46be603dc2a9f8210771,MultiIncrementalSupport: manages state for multiple projects.
175d006555a39d12c2a05d8e519fb534f1d87d33,MultiIncrementalSupport: the test harness for managing Ajde interactions and several multi incremental tests.
462e761d99dfe32f1e880c9bde83b3db9dd72c84,useful?
6a9857bdde2616226b6dbe7e5094953c9bd4bf2d,needed to add this dependency?
16963cd868aa65ee5b0c00e3b33372f6ba373571,MultiIncrementalSupport: reports build kind when claiming success.
e7f4844541b00ce04f5c710e9022db9b47e5027c,MultiIncrementalSupport: state that was scattered across the hierarchy has been pulled into AjState - it now captures everything unique about a particular build of a project.
3951dea95d6a0bcca24965457f93712b5fd88d04,MultiIncrementalSupport: moved weaver/world into the state object and changed structure model building to start afresh for batch...
548ff435fed4b2e8ac7c10a96a885bc9b7c94f00,MultiIncrementalSupport: some notes and helper stuff added.
d8bfe7324600e51511051a9db49a2ad7e4e9d7a7,MultiIncrementalSupport: the key change - looks in the IncrementalStateManager to see if it can locate state for a particular config
fd380fe072d2444995109658c38b1ecae390f900,"inlining of around for @AJ works unless non public member accessed from within the advice
splitted ajc150 xml test file"
e3678e3e1e2f059e383be5c99905bf70ad88d1a3,Doh - didn't update aspectjtools.jar when I did aspectjrt.jar.  Does this help damn cruisecontrol build?
73f725313c7e12c8c57ed357dbc3ab8cc9abe18f,Fix for timing problem in multiincrementalproject tests.
28a5bce27afc1b25460d6fe3273ae2e0272dd53e,More bullet proof and with added diagnostics.
a6291f59f0bd11e85b5018bb68d9d6e61ece43ec,updated for DeclareError and DeclareWarning
9cc00566ff2209410037b752b47ca941fe6bf3dd,it's a whole new compiler in there...
0b7744f560fb4ff70b70884a4932c8ebeb603fd2,it's a whole new compiler in there...
cdddd38d261f0ae75bf95f0859e7a440be1bb3d5,PTW perClause for @AJ + perClause test
a01b453be95360fdf2b4d292b7652f44faf654f4,fix for pr93460
42ea190a60760d2553f03a7def8114701cd5828a,the matching aspectjrt.jar. could come in handy? who knows ;)
a89568a77f2d3e74b0d23f3f7b0e112d7ca92d74,Go back to this old form of .classpath file.
9e2ef17dadcfb72eb462e59d996282e0ff0da76b,"@AJ around inline + test, fix a bug in BcelClassWeaver on my way"
14bbd84bb1ad3995c1d0911f9674a16ea21dc9de,temporarily removing the eclipse.plugins target - we never use the output!
45c9ca0e5a8c4ff09f366192aeb960e6a5c680fe,missing perTypeWithinEntry filtering - happens when running @AtAJSyntax suite in LTW
c6f14bb4561803800b493dca46103f7ac2c183a5,rebuilt with sun 142
92a416462cb5a21b595c05861030dc591359945f,remove mistaken useless instances field + getInstances() in PTW @AJ aspect
abc9a58ac59f0ee427039e26cb44952cbef5e24b,Impl of enhancement 92906 from Andrew Huff. -showWeaveInfo for declare annotation
529dacebd3f9fd9eac2ca7caecf3cbadc103e495,hacked out 1.4 apis - needs tidying up but I'm just trying to see if I can get the build to work.
7e56f52c8d248aa7b20d27ec53e5f860ae07eeef,Guard running the declare annotation weaving message test unless on a 1.5 vm
70b9ffd2ceb86d00443d68931e8265ee9a8f8fa7,"enhancement 91719 - Oli B's tests for xlint warnings, integration work done by Andrew Huff."
d5d800b24cd16c1bb8b99e3216b30b6b3fbb56a4,loadtime5 java5 module
cc7137d761b7232996f20b84958d9e714075d113,loadtime java1.3 module
929c87018158604e439a24fbdfdb721d6a07fff7,*** empty log message ***
2679e77604bf50748ec715206258dd8a3586fb87,LTW modules + AntSpec to test LTW in the sandbox + code cleanup in my FIXME + fix in error handling when no debug info can be read from @Aj aspect (many files modified since refactored IMessageHanlder for LTW dontIgnore method)
d319c1a89fce5bc0d01e6ee7f412784a55eed1f7,sorted out the blank lines so the messages will line up with their expected locations!
d7d87c4a07046f9b98f3a800e525b5dee1b0dbcf,ltw modules referenced
d23d2d090b2d1209496619a7ace7c76d693622e4,Rebuilt with compiler level 1.3 - and I know these work as I had recreated the build machine problem and these resolve it.
02fa52ad495ee2228afd6d84d572ae11b80220bd,removed unused imports.
7f26983bfb187f19506b08e495f96f94fd21d13e,removed unused imports. (they clog up eclipse warnings view!)
e86b7b522bacc9d7a6945a1da2a690c85038e535,eclipse stuff for loadtime module to become Java Project.
742856527358d7babc7a70fa758f7568ad3511c0,Prefs to tell Eclipse to use Java5
a9f679edc063a23495f1fb2aba175c78312c2abb,"Is this rebuilt with 1.3 compliance?  I hope so or everything is *!""&�ed"
05eccb2300e5d159fdf7fb5aa9eedb416941ad06,"enable compilation of @AfterReturning(pointcut=""..."")"
3c809f007caa6555c4866b5974b38b88944c7d04,"enable compilation of @AfterReturning(pointcut=""..."")
(compiled with -1.3)"
126357c353aa710b0191daa51d70b41edfc7351e,Defining parent class loader b/c ant classes not visible in Ant 1.6.x default parent.
cdede6da8be04746b9958a47e3ccdfe67bd0cd5a,"nit - consolidating ""/"" and File.separator"
3848a0c7ae8b15e0f8168c73cfed713699539136,Support for java5-testsrc - somewhat scattered. hmm.
f292196ce4b9400d07c8092f9d6dc63f55d17cbc,updating bootstrap to match latest build source changes
b9474d5ca841efebd356d1823927b29f0cb03e2b,Can check vm level now.
71d65c99b1feff3f6bb7dd74ea6ae6776527f4b9,checks vm level
39f2271dce4c5f40df42ad2db67a742d9f5be39d,ignore the bin folder...
9dc3f0fefe1784d02b1f3641ebc7104a2c2ec5a4,Fix for 44155: TODO tasks miscategorized as warnings
8e1a6c6abcd12073c8f29825235040c2a564a251,Fix for 44155: TODO tasks miscategorized as warnings (fixed by Andrew Huff)
e47e0eda1cba918a5639a07a0328e26211bd2afb,remove for 1 run to get a build through!!!
c6448d51b25bd9826e98969290f49088405e1cf3,naming ajdoc to make linking easier
8010230855e54cc20833f8e3a70e7bd4ccf4272f,AJDT rather than ajbrowser as default visualizer/environment
0adb46004a8e099ce9466405e2c6955e427ed866,".css stylesheet parameter for xml-html, used in faq.  Did not retrofit devguide - unsure about relation to dsl file.  Should remove aspectj-docs.css reference in the docbook stylesheets to avoid fork."
87f211f62cd0af7b74d9d00123e736941f015fee,"Aha - the default test config on the build system is still finding it in the XML, removing for now."
7389d9fc0252b90a9b0bf2cb1861a0f3802ad320,Fix for pr91267 (Generics): NPE at EclipseFactory.java:143 when using generic methods in aspects
952dda914064ff58a39fc682d18cdbf3ad171475,Fix for 91053 (Generics): Generics problem with Set
51c018d9bbf0ecfb312cb2b56112c71cfc516c53,"Tests for 87282, 88606"
f6034581d8540124494806a7c6b3ad37ead2b6c3,tests and fixes for 93345 and static imports.  From Andrew Huff.
2c4f9d292a521703642169d8c066792d0e0802f5,Fix and test for PR90827:  StackOverflow while weaving enum/annotation with Enum/Annotation name   (Patch from Andrew Huff)
83655ff47c1af1ca58c8043626799e0483d5acd4,"fix 75442 thru lateTypeMungers, currently @AJaspectOf and perObject are lateTypeMungers. new LTW tests, some fix in the LTW test error reporting"
85c9757ddf9cefe7379ce11be2ce9fa714a2e219,"For some reason eclipse won't let me commit ajc150.xml right now, so I have to comment out the call to the XML ?!?!?"
99c37756e5de87d8f38d5de4809fec040f37ef83,Fix and test for PR90827:  StackOverflow while weaving enum/annotation with Enum/Annotation name   (Patch from Andrew Huff)
de31f858429a8688c98616b8631de6c780586aed,Add loadtime into the classpath so it can find the message handler.
6565120f4e0bab6de9499e1bd6f806471e58ab7e,prospective replacements for {module}/build.xml - will move there once validated by those who use build.xml.
e4367850e5f58dec35f4a6d7d3103a34e051487a,document basic auto-build assumptions and invariants
4423f4c7e276fdfa545dd9c61a9b6a3249c6234b,Ensures we can find tools.jar (javac) when running the tests.  Similar setup to ajdoc - you must define JAVA_HOME variable.
a30b4b76da6491d53c364a8c805bb2d3d805c16c,Ant 1.6.3
e458b498824ab0ecf898503bdc8e682dfc272ce8,Ant 1.6.3 (again? hmm.)
c8557ff13ecbc3326d3e25fd1dd27e383779f162,Ant 1.6.3
f041b8a335924f5bae34ec9d62b7ee9870e4ea35,permitting modules to mix 1.5 and prior source directories
1d51ef41e749894b4c75ae3ddffb8524f80715d0,"updated tiny XML parser.  Unfortunately, also reformatted."
56f2810f2b8e3359b88098c61f9d70c8a243ca03,"added junit.jar to skipped libraries, *.xml to resources copied"
3d0334704efb5429de12834acd75c3f11b5680b3,Checking against all (known) module .classpath files
c5df459db7b9dea418063a297437039f1862b78a,"support system property value ""false"""
7cc6f4e9014c71d9fe5e677a8fb5200bd7482936,tracking Ant 1.6.3 updates in build module
c5e94c52b385015a160f2cfd683f1889019e08c0,Ant 1.6.3 imports rather than entities; updated junit taskdef
1198dea5bd7f7c03263805773bbce3bc21f8c715,not using junitModules.xml
54792fb9eb51b39ca7ddcdbbda96d3fea06fd6cf,Ant 1.6.3 imports rather than entities
8c07fda56deba5722b7453230765c79401946df0,ugly but harmless hack for building prior to 1.5 for test purposes.
a681d594c5c9c3552cfb401d02f2a171fab183c2,testsrc -> java5-testsrc
c479b60b4987b55a9ba84bd472dc0e1119942ae4,fix LTW test
a2545d0e25640e03d2e97a6229ffe9f031617f9f,"testsrc -> java5-testsrc, placeholders for pre-1.5 build"
981a71e1ac249ce667b4d93cf1523d93c1ff7f7a,unneeded imports
7679c0851b89ffba34b5ec9d3b05511dcdc85d9c,replacement for build.xml (move there when validated)
21dda4b6e9e0111c53881bcfedc9833d63fee5a6,"src -> java5-src; note test target runs AsmModuleTests, not Loadtime5ModuleTests - prior bug.  See newbuild.xml."
f811cd397fd634b3605e3665907b7b95fc6eeb27,"src -> java5-src, added junit.jar and testing-utils for test purposes"
85e40d61c9c2ae95a734bf0ed4376ab962e96db7,unused imports
a3d3d71c8d720a41502fe131c0297241790ceeb9,Name picked up by Ant junit task
bc9114325bad423c667d5146b7793eb66e55e335,mainly reflective loading - unfortunately also reformatted
abc20e94de4173a6f548b2886d185e25ea505718,aspectjweaver.jar now built from loadtime5-all.jar
f30900cda23368231337c714dfda2747d021e80e,aspectjweaver.jar now built from loadtime5-all.jar (UNTESTED merged  manifest)
0e803e159d53b87c79213cb0c4872b195099da38,"remove bad _IDE folder instead of bin/ that leads to odd side effects, add tools.jar to tests .classpath module for LTW tests using AntSpec"
357d0cc4b8a77dbb56c8bc6b0b1e778a07c522ab,Reverting - duplicate tools.jar entry
359b2b075018517eb608036e62ba37a644a29a30,"Oh alright, back to junitModule.xml - another shot in the dark at cruise control"
7b7c7b2fb25e09660f066e556a5008545d655f6f,Andrew's patch for: bug#82755 update ajdoc to support Java 5 language features
0cb826c6a5d47a12eb03bf1751208c0b9a7b23a3,"Fix and tests for pr86832, pr92163. NPE in detectHierarchyCycle"
6f27813f57cadc4729e9c501233a1c40520b2f43,Suggested error message improvement by Andrew.
9b730456c99c01c7381317e7c4511ae238cfd027,Reduced duplication of vm checking logic.
8ba1011bac38511fe8546766951c08d812257de2,avoid harness ajcore files - ensure Dump message holder is not null for clients not using Main interface.
dc3b4431dc66eff79ec34a3207972a06f9788ad0,FileToURL via URI
03ff536b6cbc30935dc0765c9555f6664092ed22,snooping out stream on request
e843a7272732db92f7869969d9ca2d0fd96097cc,path utilities
23571ff0520587189db0a64e035baa7eb63c7a35,adding weaver (hoping no one is using < M6)
9be6f2d8567da5ee7628049a452f989b1410402c,harness LTW support - untested
f9eebd48f6070a8254b38630d6d76da8c0aee80e,Fix and tests for pr84312: runtime retention checking. From Andrew Huff.
2514b117e6bf7f469a5eece4a8ebf41a5f378b00,"see #75442,  lateTypeMunger rollback for now. This is not enough"
e8345b8759aebb52e5d56e216cb6634b6591fa54,LTW test commented out due to 75442 just rollbacked...
0852d51f34460040aa3d3c60e47b7e0fe7b7633d,"added test entries instead of autowiredtest for Andy sake, fix 1.4 dependancies in loadtime module and util module"
88d477dab59d9f5f175e89534885e4ac6bc0567c,Fix and tests for PR94086 (multiple if PCDs in a pointcut causes massive slow download in matching)
a2a3654d02ff77485fb35613b25f0b138074c0ba,Nicer toString() :)
be5b8333d32e6efc02a73f4a83fbf10f1c5a9018,parseBoolean utility
33c5c59a9e5ef8378f8695b905ceddf03f685c2b,"aspects are reweavable by default, fixed issue in (AJC + LTW + Inlining + @AJ)"
8804ab51509ace3479735013356edc571de282cf,LTW and around inling test for code style
0ee39450faa1183fc0bfdaaa683e8ca2afea468d,updates for generics (still a work in progress)
4ca68baf9d17391e39d5b379ebee627ce030684f,"Getting tests to run properly on 1.3 - modified vmlevel in AjcTest and put guards on some 1.4 tests (not pretty, but works)"
628b0a06ec4c0efe54bc477e5ba944e4ba0a1614,dump the problem in the case when we are about to abort...
f978a925706d012c75ec0d1a27acffe70090a59a,"skipping xml-apis.jar, xercesImpl.jar"
b375626119f1d3d1985bbed5937aac3a1cf97903,adding xml-apis.jar and xercesImpl.jar for SAX dependencies (for JDK 1.3)
fb4454e817f388825c93daf4f27f48b7f41f8f86,imports only
79d3b2f57fab5ac2d63d402ee8c226082c872064,unused imports
2afa9c9148da8566562ef029b9a5d6b5f141763c,"newbuild.xml replacing build.xml, with Alex ok"
c4d261c9d15939d85fbb2507483bc6999e1a8142,"run-all-junit-tests, new module build.xml, eclipse variables"
92dfe7b7e91b78da65a3ad69f36a285ed47efd4e,aspectjlib sources not copied - need to include in install testing
49c3978146a3e1d303a5d7f520c906acbfebe9bd,deow @AJ + @AfterXX annotation warnings + test + JDWP sample for LTW tests + some AJ5 doc fix
4f46be7c62e76950028e5e8a7214f209d6343bda,"moved bcel things to bcel package in weaver, deow test + fix for @AJ"
ce06e91f51bba7a9d92642d9ceb9f51d7a748015,pure binary weaving example
43a96989f05d82bbb5cb5aec764946a87dcd597e,pure binary weaving example
573f95e5a8d313bca886d0b76b0c7d87f649f276,"test fails unless setup and run manually, so skipped with instructions"
c0ad76a56f0fd7aff87b3263377c017f320db0a5,forget the empty pseudo-test required by ant junit
b92e01c1c575e4fe0e261e0c78d8b4068752c6d2,empty pseudo-test required by ant junit
3592ad39dc0a2803ffd684e59f7c691d7f60688d,empty pseudo-test required by ant junit
0b30f3e8c66e530085ff8c94ce658e2f8b4b2fce,"test failing, emailed mik to investigate.  added empty pseudo-test required by ant junit"
c9333e38add3e516dd41b4ae808be94521d37ffc,expanded test for tools.jar to cases where jar is available but VM can't load the classes
9e01ce8e2f178778ec8a6605ed838d92a01d902b,uncommented preflight to ensure javadoc is invocable - in this case tests don't run but pass (false positives)
46e11ec0f479cb79aea13fcb49bfcac50f89f904,removing echos unused afaik
b21623925556526987a9481a0e2319c0b32ed5c0,conditional definition of junitreport
35adc8d1bf2dcd11ec51b2c71d22544ae8ed1076,"new target ""junit-test"" builds and runs JUnit (leaf) *Test.java and *TestCase.java"
773ad112441790f1b85aa5560994fc9cbdd27b1e,interactive guard to preserve automated runnability of *Test.java
0604f09865cfecf18ff814cefecc033c01955828,making Test a TestCase
ea1e24808fa9e59055a92b7ea34a2b6c519551fc,empty pseudo-test required by ant junit
35180dd6565635dd3834c815209aeb7b89ccdbf5,not requiring 1.5
6ac43cae922d5998351287035f6b4d05040a4213,junit.excludes - yuck!
0a7d11512f7b44fce66224352429ee06854849c6,"duplicate aj.build.jar definition, new junit target - cc still looking for wrong output"
8f2cdb75d756085148644c95b062e16ebddf4942,empty test case for Ant junit
427508b3671cf0d215a0f3da988818f9715c40dc,skipping unrun tests
d60e26a239d60ed0a2f2beab51c8a890c748360e,no -- in comments; use -
f14646f57a93e7ec865416048c4491d9943064e5,#96371 META-INF/aop.xml lookup fix + test
883a12ba6407156d15fc5b53b8590e3a15b262f6,@AJ aspect inheritance and static pc ref
c9f17408cf9968cc6f64d4b33029a41061b2ca14,bug 97408 - extra newline
602bbf26fd5ff6a03701c5f37e6f4c0fb98acf12,test case fix
f800dc9be1d6f90cfb8085e38a380dc2e447d1d4,ignore bintest directories
a2face5f02864185f69466416034c1530af8a275,GenericsWork: Members now recognize that they can have a signature attribute attached that records the signature pre-erasure.  It is accessible through 'getDeclaredSignature()' and is resolved lazily.
d21465f01441f77a6998f3470092316b15c35761,"GenericsWork: Lots of changes in here, tidying stuff up, moving it around.  Have made some of the signature processing generics aware (still work in progress) - also started adding new parsing code for the more complex signatures we are likely to encounter, this is tested but not currently used anywhere.  See GenericSignatureParsingTest"
5027659c5ff147f0a342379f3c059404f6f3a800,GenericsWork: Angly aware signature processing.
43952a14cc039272b51a1bb7a0e587e640077d18,"GenericsWork: Some sick signatures that are possible, not all currently used in testing"
23acd0c5964e4da84cf1f06e326b80c2007ebdd5,GenericsWork: testcode for verifying signature parsing is behaving.  work in progress.
2ab848aab702312d36990747059849b81b84168d,GenericsWork: packaged version of new BCEL features for supporting generics.  work in progress.
e842bdea035f254aefe99f05cd4de2725e7fb37c,GenericsWork: new test programs for bug reports.
26f7815e3018b9afcafb92f6d227f76f5017e300,GenericsWork: signature parsing made generics aware.  Added getDeclaredSignature() - not currently used yet ... may yet prove redundant...
854c88668aa673a47405ee07bb32a51415ee25f9,GenericsWork: marked declaredSignature as potentially redundant - review prior to 1.5.0 completion
607fc10e38492c46f489701fa68ae53cf473aedd,GenericsWork: TypeX's know their rawTypeSignature in addition to their parameterized signature.
4eca989c51ffe53dbbb1d04351da3d7f38dc352b,GenericsWork: simplified now typeX's know about raw type info
efecc457e9a44d9f26454523af0b6c48b917b4b7,GenericsWork: Minor mod to Member.typesToSignature() call - now the caller can request raw type or parameterized type info.
a675b659cdc4da45383551e75c9472556c095f94,Patch for 81846: Submitted by Attila Lendvai.  Seems to just be hiding a problem where we report errors on empty lines though ?!?
5c5fb17a62627681164bc96d4397be3babf099a9,GenericsWork: 5 new generics tests.
6ddf62e7848e3bddad0656eeb51d325ca7bc2b70,New compat level added to help people who want to pull AspectJ builds into AJDT themselves.
2018671d8b1b876ca2b58c667c567e1d84c5cc3b,fix for weaver test suite where munger don't have a concrete aspect attached
19890f1a69e97fd5defa731b596e70f65eaf441e,GenericsWork: testcase
8459fa6a55bb37e629b1c4e7b610f016f499f51a,GenericsWork: ITD testcode
3508c1bb7e5f6eab1ba7d35c8700f83f4f24d777,"GenericsWork: ITD testcases, commented out - needs parser work first."
bedcb3ea08173f4b4ed837822e917e8dba6837d9,Andrew Huff's patch fixing miscellaneous ajdoc NPEs....
27c6150906667e299a6952bc4dda642aad00578d,Andrew Huff's patch for the -log option
f3aa086082b9ec08e414f67dfdc1efa6a85e0d18,fix some glitches in test cases to ensure that these are legal AspectJ declarations...
63ccfa9744cb4af47279f11dd4e7d597425e745f,parser updates for generics in ITDs.
50cfb429e53330867856159d5d664fca75e5b6e1,4 additional tests passing...
345487709e0e29a0588d9008dd9dbaca04277acd,"special-casing 1.5 tests - now runs all non-java-5 tests in 1.3, and includes java 5 modules if running in a 1.5 VM."
21d00e2c993a05c93247182cc5360eab9ad27041,temporary test removal until Alex can get synchronized.
c98dc080bfbd8529c83ffe30b4caa56a9a92cde3,"Fix for LTW tests, can now find the ant locator for running the tests."
06842bd47c5c56f4513fbc162856fea9267de7d2,this update also includes the additional pseudo-tokens needed for parsing type parameter declarations inside the weaver / pattern parser
845da1dc8a6a8154330a63fe6da5710bfa3dfc83,"perClause inheritance in @AJ (in ajdt module), fixed FIXME AV"
c7e5498d3d5713693ae763ffab34571ca029cca2,proposed refactored script - still using targets in release/build.xml for now
295ad4c97e118c35b81f0d8f6faee0f4d244877d,"finally fixed 75442+78383, impl a visitor pattern in patterns package, turned on LTWperClause tests (clean up will follow, just want this visitor in for now)"
f4f22c7c085ab97a0453d973bab7912abaa82f2e,"test case for pattern visitor, issue with varargs so test case for Adrian to fix it"
2ed6f7e8992de0ae0dfe64261501af64261fd0ef,mock test to avoid junit no test in there (temp / waiting for Adrian fix in parser)
efff474886fd3301a765dcd6a54a210a7956dd8e,Remove Java 5 autoboxing dependency that has been introduced.
d1cccdcc15a530d6a476e50e40b48277482773f3,p -> append
28dfbdae5135a0324471c846f0ca1690245cb671,p -> append again!
3824b1c24717b79d48bd5f965bd2d34569dc2195,Fix and tests for PR94167: NPE in reflection API.  Fix submitted by Ron Bodkin.
e9d9a137577dcb010da87b90d752e785784c8d0b,Prevent info messages coming out when on the command line (regression)
743566fb8882ea922e0ff56ac83d1e6fdd9cd637,"Tests and fix for pr98646: ""Parser cannot parse varargs correctly"".  Fix is to make the tokenizer code understand '...' is an entire token rather than treating it as 3 dots."
1eb4ca895e3219f6448d71114953a786b8edd217,"add getters for visitor, turned on poincut test case"
36b591b08a5760d6189c9dd467e96f1574be7951,Improved generic ITD tests.
f747b829d02a4b76fc44da2a0eb1940c3e9cd593,tests for pr84260: static imports
afa05c24d3769324982f401e3fdec8bf31b0a953,Upgraded BCEL annotation support - can now get an immutable form of annotation (type Annotation) from the mutable form (type AnnotationGen).  Required when copying annotations between class files.
2b51cc1b6e8eddd97a16efe794e48de8d0e63c35,Two more generics testcases working.
d69548ecc12da813e31f1128bfcb6fb449ffb202,Upgraded BCEL annotation support - can now get an immutable form of annotation (type Annotation) from the mutable form (type AnnotationGen).  Required when copying annotations between class files.
9e8ff934c46e4169bdcaebb64d5d752540bb95b5,Tests for 98901: annotation copying on public ITDs
57e97a0d145110253538f0239213b314ec815f46,Tests and fixes for 98901: annotation copying on public ITDs
58e58e1e2c53d4b4e3bca0e26ec5e7eddf984d50,minor update...
6ba1097458b56cdf0aa274a46da5dd2af0302d36,Tests for 98901: annotation copying on public ITDs
4f1ce6df3b3f3fb2d6186d08438952df4cadc8a3,"@style if support, parser support for if() / if(true)/ if(false) [might lead to issue with code style to allow ""if()"" )"
747a6e82fe2c5df1db367eac9da612a10d6b4922,updated for new build/build.xml instead of build/build-master.xml
944c8052d19b03bce8e084fe6a7a6a4e06847b37,"revamped javadoc - separated runtime and weaver, handling offline execution"
e4d530936d8f372b4023450a1a82cbdba1667f80,defining aspectj.modules.dir before import
ec99a1f3fed8237f2df73a5063d7039d762afa8d,revamped builder
d851660694dc1ee5d44d0ffb3bf2381559e8ceb4,getBestFile(String[])
0d26e37ceb2a0e7a43664367216c141b5a2fbd2f,"placeholder JUnit tests, aspectjrt.jar finder, Java 5 tester"
0c4e822ebe1aed1e24e271e4496d5ace41570168,Skipping long test of rarely-changed code
f65bc76fdf72ca584b534ab8ae983583c0b241f1,Java 5 guard to permit running in 1.3
1ddbc85b271627993a4d64e1f777a09f31e31aab,"Package Tests file, aspectjrt.jar finder"
07b62e63fa19324107da924c64bcecc2603dd1cf,"path-handling audit - mainly TODO, but some fixes/finders"
9bbeed8c1e807ede273995b5ba3bbbe095e0d7d7,JRE15_SRC variable to build 1.5 modules when defaulting to 1.3 VM's
678c46257143bddf2d8851c67973b3c8adf896d9,use suite() for new package tests
333fa6c9a231455fb6b50bc9435314355adeb7aa,Adding aspectjrt.jar to classpath when n/a  to avoid brittle error-checking tests failing when it is not available.  Correct?
117f9d3a07b1483927e79b338b015dceaea5b507,"package roll-up, mainly for Ant JUnit gather"
28f118f040835aa0fb274e0fd28e3bbfe447c415,More aspectjrt.jar finder fixes
ab64b605f3bb81f3852a81440969d54e20a10308,"testsrc/TestsModulesTests for consistency.  Now to run compiler tests, just `cd tests; ant test`"
a0c7aac5d11b34fa401456aa8b09bc83ed221932,"To run compiler tests, just `cd tests; ant test`"
d6657a6ebe375754cbf3c14507f2903dd26cb518,"These fail and were not included in JUnit suite gather, but are caught up in JUnit pattern gather, so I made them run disabled."
ce2236f048e5c154152631358fa236b9a17d3c1d,disabled test that assumes advice between unrelated aspects is ordered.
cb7cd13f822303a93f1020c1ab3e92b9f0d86f5a,adding ajdoc and loadtime to run those JUnit tests.  Not sure why unable to add AspectJ project org.aspectj.lib.
9db52cb41e1eaf83c6f281cd24b6cac634e5c3e1,Module alias does not include compiler tests since tests/ does
8986e240414efca12af096bddf90470b0faf84e5,Root of all all (non-compiler) JUnit tests works under 1.3 and 1.5 in Eclipse.
cb13375e5c747a0d516afc1f2b29c5161e90d7be,"Now delegating to the two roots: AllTests for unit tests, and tests/../TestsModulesTests for compiler tests."
857d23c5bc0193156af04731262a800912240270,new main for my convenience in testing the testing module
a7233c33dead03280d54d3e4963edb8b37df3db0,(disabled) convenience flag to defer long tests
696e60f8a031d3c687965bf58222f6c8ad7a91ab,Removing unused build scripts
ef8037126b0a8838c8914f63f8b5b3a09fcd3cea,revamped build scripts using Ant 1.6.3 features.  Now using local.properties instead of command-line flags and sharing build-properties.xml.
0f3b086e25318c7652885f12f5aeeaaac62b1ddc,draft of cruise-control script - untested
bdbc4dea8d098067d58b743d68e816640a11cb6e,"Now targeting Module results (release, test, release-all, test-all) rather than modules (with variants), since that conflated test and release classes.  uptodate check needs work."
5f42d142da0dbf69adef3e2f3cb5e0d24e7929c8,updated tests for revamped module-result builder
c82d592b4042e5f4c8489aaf0abc0efc8660e729,removing junitModules - use ant test in each module or run-all-junit-tests module
2cea2f7fb0048d8a1301441a4f0b0815d22eb0b4,ignore local.properties
6fb13004dc80cacf61c2ab7bf5bc6e16939a647c,whoops - removed test target
e67d945b31736c115abd8751d1c2bda2844d3d45,"test broken by last commit, fixed by adding lib/out.jar back into classpath for compile"
b363340ad7f2241e7f077081ba12cb6da5bcc47d,test for if @style - a todo for Adrian
ff27a1d81c3e98d11029bfd9f59cf62afb7fdc74,fixing typo
40dbfa989a6849f2fd446ff17f664bf98bb5d1b4,"Readded test, order fixed via precedence"
f9bd27ed34fccf28f1c21aa31b5b05fc4e58d86c,@style if doc
81c78513ef92422e97e06002545c3e0ad6a9027c,Tests for pr99089 - commented out in Ajc150Tests.java
5c0167fa97f8521556ac55c7f4a42de430f6f793,"@style if test, fixed Ajc that was not having sandbox in cp anymore in some case (ltw test failed)"
a7f947fb2ae596d27919ff8602ea9aa3492d189c,update to binary format as part of generics work
376c9ac4f17462fbe4537ef9ff5b66f315901358,"update to binary format as part of generics work, plus remove needless duplication of tests in RunTheseBeforeYouCommitTests"
a4a4da472ba4482e67eda77e130166226ca00a09,"first batch of updates for generics :- largely parsing plus storage of type variable patterns, plus a few tweaks to visitor pattern"
032b041942a1783e48a265c8e2a63a3e066c27f5,This PointcutParser should *not* support if - it is not to be confused with the PatternParser in weaver.patterns
e0e3389181b6ca1a88ed12e988abd4d4eb533ddd,new logic in AllTests failed unless loadtime5 was on project path
6b4238eb0f0871eae60d71fe596c96c2ae5dce76,unused imports (only)
191c26bb4fc0b90a183e4448ab57d9b62fed429c,"fixed bug with LTW Xreweavable, fix this reflective issue in RunAllBeforeCommit (was misnamed..)"
7b76f4c9300ccf6ce037dfea7b21a70442c26646,test cvsnotif
af742d2dd09c35be16bd47d731f90aa1cfbba88f,alex rollbaclk / cvs commit test
32615f91118506f40ae06e75a04c09ddb177327d,cvs notif test
d9d3032db4d8fa2e1bb1834da68398a94a99854e,rollback cvs notif test
e25db87b054247a2b71f6ab709b91e1f776cd223,Fix for 99228: [generics][itds] ITD of a field into a generic class
d6bfe97b4db7f2109a4a088ebd0898b3ef8740e9,"Tests for 98320, 99228, 99089: [generics][itds]"
f0c367c834953aea60991d54129f57013b64af54,Altered classpath calculating logic to hopefully work on the build machine
588023e3beb9f861405f4f9a580122993d2dbb47,Fix for 99168: [generics][itds] ITD on generic inner class crashes ajc.  Allows for ParameterizedTypeBindings (and RawTypeBindings)
096559a0ce6ff7193609a7a5e27f676d7cc3d17b,Fix for 99089: [generics][itds] ArrayIndexOutOfBoundsException - Generics in privileged aspects.  TypeX's correctly parse parameterized signatures.
8ee1d11d49fdec1a98609c5a516c7797df0eaff5,Fix for 99089: [generics][itds] ArrayIndexOutOfBoundsException - Generics in privileged aspects.  Uses the rawtypesignatures when attempting to resolve types rather than any parameterized variants.
60efccceb5bb8e517570eb442f7b2c0152925c82,Fix for 99089: [generics][itds] ArrayIndexOutOfBoundsException - Generics in privileged aspects.  Correct handling for parameterized signatures.
fea6769e84439cd0a1c26fed11755a17772d85ed,Some new TypeX tests to check parameterization processing is working.
4ec94ca9b3289dd24c77d8d563516822af4f5a12,generics bugs testcases.
bdfe1316585fb6697eba3beeef0095bc9039371a,Fix for Bugzilla Bug 98320: [generics][itds] intertype with nested generic type.  Now allows for nesting of parameterization by making recursive calls to resolve types and make bindings.
d494f7fd436543dc3cf052f289220a9d2156f110,Updated with a simple erasure test case - will need more later!
149efd373e0ce99fcc7f4cfbacfddca0bde83a97,out-of-date check working.  Force-libraries changed to disabled flag since eclipse ant builds are working.
14b501c3673050c17c5df9ab54b85193f0fe4313,out-of-date check working.  Better logging
2406446eed5861ead4eb86a0f8f359083418dfef,out-of-date check working.
234fb1b629fdb991660da89c9be612fbcbd7fe6c,skipping long-running test builds
d51bdb43fe3eb50a70059a46e1f063cc7f3236ef,"out-of-date check working. Applies only to compiles, not assembly or Ant targets."
a53a798d01ced1ad71cd87102e518b62025a6a41,ship dtd's too (see loadtime)
b01b97912b612fa87e887c11dbe1fac583d0c7aa,another helper method...
7d5002ad52c86eefdf58535310fb41f042206d11,Fix and tests for bug 100227: [generics][itds] inner class with generic enclosing class
91829de8a72b1348a17c230bcb3eaf7c077475e8,Test for bug 83311 - dreaded clone() method being ITDd
b54831fd860a852310cf2b7e831df741d1545437,Tests and fixes for bug 100260: methods inherited from a generic parent
fde6720d4d5ca2f30a5ea11d6aa9a9c1b68d76b8,fix LTW5/515 stuff as per Wes spot
41609d748256f2b4f0518f1021e45f29103e1c2b,comment out dump - needs to be impl thru weaver option pretty soon
894bb3c70a41ead4a634c2996312f1b98cecda55,"reflective calls, bcel"
58add6f5011ccba3f9e998f5bbbf0fccab2dc617,reflective calls outside the Java language
9359ddc4f1d934cf6be1b201a9c761d7c460f868,spurious aspectjlib dir
8a21350b84db7feaca75f5ed825b120ddf180f88,"now handling (init, clean, save) multiple results, better failure reporting, properties echo for build info"
87aea8967eaf14623be13e62fbe86b4e4e15f30f,"removed rebuild, aspectjrtpath from lib/test, adopted compile-runtime-11 from release build, added 1.3 switch"
8e32fe35184ab3074caa1fe3fa1f8eb8777b8e20,"flattened release build sequence into target ""all"", lost compile-runtime-11 to ../build.xml, harness tests updated but omitted"
8b6e51b5f23afaa854d36910b291d4b849781a7f,"removed redundant properties, failonerror=false with build-aspectj using reporting, avoid multiple entries and ; in aspectjrt.path"
d766e29a11602e044a58f77e24725fcdd2b34f0a,consolidated build script failure reports in one target
9961155d58379dbcc3a442950d558d0ccd42430e,"updated reflection interfaces to represent a pointcut expression as a PointcutExpression rather than as a String. This abstraction is needed to support runtime creation and matching of pointcut expressions down the line.
Note that the whole MAP support in this module is still a work in progress and is scheduled for completion in M4.
-- AMC."
2547987d0678849041168566c0e0e0c547cbe997,"extensive updates to the generics chapter to describe pointcut matching with generic and parameterized types. Not quite finished yet, but this is a long way forward... - AMC."
f7b040b3b6e82a3cd61a7e991b87ad33208f5420,"install before examples, vm-setup fix"
ca6ec31223df4c73df0103a67cb7ce99be75a1aa,first complete version of the generics chapter.
63423ac4b5ea11fc70bd68dd7f37b84798394f53,update aspectjrt.jar in lib and test cases uses MAP in tests to reflect introduction of PointcutExpression interface
dba4b6dcbb62659085e8599bd0694049ae56af9d,completed set of basic parser tests for pcds with type variables as per generics chapter.
f5739c0e7b76064306b96e4708655ac3db97c011,LTW weaver/dump@within option + fix a sout in weaver
e40620d955448ad3c9e1303952d71d8b50d563ae,yet another version of aspectjrt.jar due to question mark over 1.5 contents in previous
114f40d7a5a7ee8337471d7299f64a3b9eb4d04e,generics decp test.
c60759851b345fa8ff228a1bd626a78092caa590,Some refactoring to try and come up with better type names!
50ca3c97e0f3cd0bc0d73270b2d84d2d63845a19,fix release jars including testing-*
39566671e89735d21ccd07d62e4398c0a6a3cd62,easier to manually debug output jars
6b83e5b5fdcac1c886ca4633e5389221bfbcdcb4,"important updates for call, get, and set wrt. erasure and declaring type semantics"
d43de06ddbca60615a577533e159a3cba24fcfa9,early commit of TypeVariable for Andy...
5e65c6f7defe02f80aa8d30c416eb42e8abb7714,test cases for TypeVariable implementation -- AMC
8d8939ac74bdfb9d9e543e667b49c9dff81f0d38,rename weaver.patterns.TypeVariable to weaver.patterns.TypeVariablePattern
720ef7d33e679b6b2f134b1f096bfbd2027adb52,generics: Holds a generic type reference (used by the raw or parameterized variants)
96fa6b3bfc25f0519d5061a3a1ca19070ac9166a,copyright added.
a951b059a51343535a56e4cac57b7dc7bcc8ceba,generics: some of the new fields/members added
e3f82f61e138abca72a726b9e22fa26e67c9b757,Classpath set for running tests on build machine
059063c4c1d69fc52c6574964ca63fb010f5482a,generics: helper methods
c84327365db294d051dcd32690481b0f0281d756,licensing fix.
3a48c22cbaa797a59139e51e244d208bd69996fa,Fixed classpath for build machine.
24301586af99313d8ffd868e37b41bd6b59c2fd3,"renamed ""getRealSignatureFromAttribute"" to ""getGenericSignature"" (which is what it is)."
25ad67c1f6b2908716c8072112fc4458844a658e,added getGenericSignature method
6b94951b62cb77823ce164a512294b13450a7b82,"-- here be dragons --
this is an early check-in for handover to Andy. I've added code to parse the generic signature attributes, but only completed parsing for class signature so far, method and field to do although these will reuse many of the same building blocks.
Needs test cases and probably some more rework. Would not normally check-in at this stage.
-- end of dragons --"
2811db46557757272481ec7ffae183e4de2b94ba,For build machine - fixed classpath to include built jars.
85ca59ed0b8a0bfe4876d016fcbdf9b0e6d78416,updates to Signature parsing for generics
14f1ca3554408b363ac88c7fd708f32b7ed86f89,signature parsing for methods and fields now complete also
c3b7d70b101defcc0b0284895ceb56bfca6a1548,generics: trivial decp implements.
44dc6e9700b0e9a013d53c8444971e4ba47f9699,fix source location for @AJ + fix the AsmManager behavior for @AJ (still no luck in AJDT though)
03c55ab4b1eab638ba73f62281bd35ff1122324a,make weaveradapter available to tests...
da245a5c85a814437173d4350407489d85f6c8b8,testcase
754466b993b196263c7b378499dc427f37368f2d,generics: decp testcases
fef895a7c89109c948ce356cdb24fc6aba2ebf1e,JRockit agent for LTW with 1.3/1.4 + update in doc
c8a46f4055f80dfe60524aa3b6ad3a0ca17f3f4b,generics: first bit of making the compiler/weaver more aware - includes signature attribute parsing code.
5b720958877af161fb425065f68e940236cf08ae,"generics: simple decp test, woooo !"
7b05949f6325a37a74ee81f25ae79be3fdf0ac9f,generics: comments added to indicate whats gone wrong *should* there be an NPE at a particular line...  TODO left in so we can look to remove it later if it doesnt cause problems when generics is complete.
b04dcdd7ef4ceaa7c783248316766aa3cfca27e5,generics: Going from eclipse type bindings to AspectJ TypeXs (and back again) is now generics aware.  Also modified the code that adds source type bindings into the 'world map' of types to be a little more generics aware.
6edfc2541f9d0a593713d1dbffa4c30856e1502b,generics: delegates should be able to supply their declared generic signature.
74b6ab9de6125fb443b46d004edb9dc6cd4b9369,generics:
d76026cf7973dfc92751a65e7b08a8d29a074e1f,nasty clone method fix for 83311
fcf8ea9570c9af70bddbfd46b621b51adb82aa9d,generics: TypeXs are much more aware of generics.  The only method in this class not finished now is forGenericTypeSignature() - it does not quite capture all the information from the parsed generic signature in the TypeX it creates.  It currently captures enough for the testcases I've written - no doubt will need extending for other testcases.
e3038ebe229457c307dfbe1395cf879a206ef173,generics: loads of changes to make the resolution process generics aware
181c8751fdba860cf269c619937888007a370cd5,generics: implementation of getDeclaredGenericSignature()
47181c22c877e451b362b2a20b9cae0729f498a2,generics: one fix to ensure the class we output says 'class X implement I' rather than 'class X implements I<String>' when the I<String> is added via declare parents.  (I<String> should be captured in the signature attribute on the class X).  Also some placeholder code added (commented out) that we'll need when trying to fix up the signature attribute when binary weaving.
cc0db993ec79c94e4d04a6cf785517eaaa80711f,generics:  First simple change to ensure the pattern I<String> results in an ExactTypePattern that remembers the parameterization.
0a075c1fb1760c34207084f76a57ba887405d23f,generics: promoted getGenericType up to ResolvedTypeX - it will throw an exception if you ask a type that is not parameterized or raw
35a7305b31437cc8982de9b71b26eb54a19d2995,"On the build machine, code to test is in jars, not in 'bin' folders - so the aj.path for the LTW tests needs to have an entry for asm.jar in addition to the asm/bin it currently has.  Otherwise they fail with 'NoClassDefFoundError: org/aspectj/asm/IRelationship$Kind'"
d8fa51baa77d426bf5a14ab5e9c0f9f3784981b4,add offset in MethodDeclarationAttribute for @AJ in AJDT
cec9b12c1c09773b654644a9def380a849d2479e,temp removal of the call to build runtime with 11 javac.  WILL NEED TO FIX RUNTIME before finishing 1.5.0
6aae0999c6a640bd7c86970a8c9d7a7bb6bab676,organized imports
b5ec33632bc6425ff9d45b5ee87d55bb2fef0389,generics: decp tests
ac3387da7cd288dfd9414e0885e3ca871d7c76fd,"generics: decp tests, binary weaving"
b01c15c44872fe270ebeec4cf0702bbb6f5f7f24,generics: new message
103c4a518762b9914377632a8f31a4a60e228368,lazy loading and parsing of generic signature
cc4fdafb83bb2c4268e2cb3caa6bac7065fab333,copyright statement
61c601865449ceab6730d4245e3bb0382675bff4,simple implementation of isGeneric
247781953382727d2e408c096c5f41198323ddec,TypeX hierarchy members for bounded reference types and type variables
67ab7c263e01a1c9b14c71f83c7843be1ee66a86,supports isGeneric
0385109ac1940c15e4bff9797d835d71866dee30,can create a parameterized type from an array of TypeX's
86e95d6343798c405c5255b58483fd25cbadda67,added support for canBeParameterized
9a97549f82e0eab5a52a48cb6badc44cd7c4843a,utility class that converts from Bcel signature world to TypeX world
2d8b2c1a7662a65586852fd34459723f575dc73e,proper implementation of canBeParameterized
104608964f760a3c58b020079c2e31edc84a128e,support for generics and type variables
36fc02e2d6a3f9f7267712eed837205149849fc5,include new test suites for generics updates
1c588042ce875a495131e3fb5f7bcaf12f07c1a8,test cases for generics updates made by amc
b6cbf69a7f261becd58c74ccc4e1f5c392c0043b,small signature change in JavaClass
4592535ff4776f45ee3ff0b86faf20306fa0c020,some /. confusion cleared up
e5edd8337f071e6a047148d48ed6ab97ab2cf902,create a typeX from a set of TypeX parameters
a248b806f991d6444f43b848a7d88935c4dea907,generics: can determine if java class is generic.
908baa7d7e4e0b879dc7893d0e03e56ff0e659b7,generics: more accurate generic type test.
ea6af95245d692048e0cc3aa10d6bdbdd931121c,fix in GenericSigParser when tokenising primitives
0faf5e174adb97768f48e99c0857400d64c053db,added test for broken primitive case
268a9f1fe4281ac34cb7bf826a6ab589917411bb,dummy implementation of getTypeVariables
db791ba47d698d829ccac9fdb22b38d82a77492d,moved some tests with 1.5 dependencies
cb5d3612b262914d3d8e504dcfe530909549a901,raise inner type visibility for subclasses
fd47645b56fe08152a9f8386acd71d756cff6c5b,change signature until we figure out the right thing to do in TypeX
3ee4abe289e3a701080057fd79805f8be1115646,give back parameterized versions of members for parameterized types
73a18dfd0fab43774661c6a58c4dad46abd30826,added getTypeVariables to interface
de1fb78559159e44b4eb5a914823969f40a71cc2,simplify signature processing and remove implicit extends
297a0125c7c3bc23ef288b4dcde86ffd09a22653,improved tolerance for generics signature chars
27b6aee5ec6e4d3ed0e3fdbd13e5e1ad152a4e56,avoid needless resolving
bab95b248994aa877de47e082bba0d2c371f3cb0,support for unpacking generic signature
b0491702278e1e8248825b502235414c54b6ca94,expose generic ClassTypeSignature for member resolving
25fdc665add4de14346ab9f00e185231580d82c3,generics: includes fix for generic signatures
f17c6344c9785d688c91aedfe42f0eae344c2660,"do the right thing with "":"" in an ftp"
28141bcd8d99a2867d7e9c840720340c89e21345,beginnings of proper type variable support in Eclipse type world
c1e14262374890bf4259eda4024d4e9d5948049e,handle recursive type variables such as Enum
fe565243724dd55fe727d567eb41ae1c740d97e2,answer correct superclass and superinterfaces taking into account generic signature
b5ad17eebeb1b8baf6748ba0125219a15a8925e2,test case for Enum conversions
40a4a1570c558b65410089b1620963ed603bd2b5,ability to replace upper bound (used when fixing up circular dependencies)
1c4f43eb3b48379851f66e6bcb2334230a6927ee,fixes dumb array cast
84ed1f5dead0a2380ce14cf147490db3b659fc65,but i only changed a comment...
5de55b02cb75716fb4aba5fdf90e5e4e3f312ef5,generics: ask for the appropriate TypeX depending on the binding
a4492af50cb0eafd85918b2755125f0bab162c63,generics: lots of generic decp tests.
c7f2d49d5b8b3b5c62ae53fd89287bff9ea8cb7f,generics: few bug fixes to ensure typex's know if they represent generics/raws or simples.
e4b3951948e180dc38c35ce7252aaa3175ffce7e,generics: allow for type variables that arrive in static methods and don't come from the declaring type
4ff1018a04b556c91085f77c43e768373ccafa8e,"generics: copes with '+' '-' in the signature, less than ideal..."
8a240a42a10248f9e0922a91e17c57b250685e17,generics: now promotes simple types to raw types if we discover they are generic during resolution.
6abcaf4fa1598a3c99b54bd1052d922cd8fb79d4,generics: dont assume its a bcelmethod.  When working with generic methods they are merely 'resolvedmembers'
c0dedf58400a86021edb50d72e71ccb03b9ae932,generics: signature unpacking.
52db900e0c3565c9e0692127f6e2c7774dfc1fdc,"generics: dont assume bcelmethod, it cant be resolvedmember"
962f6e7732d88d5590f5167f36f78b66984c136b,"generics: improved type resolution, aware of raw/simple/parameterized/generic"
e25c3b79ad6215c8aa9430c6af273967943424bf,generics: writes out correct class signature
67dda73db7ee78da816e53772e24603b6f9f13f4,generics: polices the combinations of decp when using generics/raws/parameterized types
37fb91c6f4f214d2078adcbc7a99327bc822b097,generics: temporarily use the raw type when matching until the type pattern logic is aware
b7be1afc07bf43da7348ab2d73a1bb8c82d8a805,generics: modified to use built in types since otherwise world setup is painful.
f8934add4ef633393763bb753981bd6c6de41027,generics: use raw type of iterator
ebeba53b5bc8c8134ac1bfe119c3154008862cc0,changed EclipseFactory.makeResolvedMember from static to non-static member and fully resolved all types involved.
3be70641af15361548ab3a576d97fceaea1a9557,"added one simple test for matching members of a parameterized type.
Took me 3 days to get it to pass!!!"
3299a01318c8dfd360f5b970708f261a64bf49e7,a simple type pattern for a generic type should match any parameterization of that type
b468ecc0132d75fdade0c403f78d99212342176d,"add unresolved TypeVariableRefTypes which are created by EclipseFactory during conversion of bindings to TypeX, and resolved to TypeVariableReferenceTypes by the world."
639b4fd0a436e19726dc9f2a47dc66a726794b3d,fix 83935 where Jp / Pjp is an arg and bound in a formal binding as well as another (or 2+) used as implicit bindings in @AJ
aff35a1175201aab88a2f79bb4e13ca67eff125c,"99861 temp fix for deadlock when Sun' Unsafe.defineClass API is used (deadlock in JVMTI obviously, not tied to AJ, but bothers Ron)"
295abc046777ddf6aafc9dd198f49f364664242b,Variant of Huff's fix for 102746 - untested hypothesis
178760115e55305fd8f726d078ea162df1ff0399,tests for Huff's fix for 102746 - not hooked up b/c harness manages classpath.
1e18562cab585182174d9894f1f2a8528b084b77,test that a the erasure of a signature matches a parameterized implementation of a method
10255134e6f9e2aa5ab3bd78c6d40b0be52a5e89,parameterized members remember their erasure and this is used in member matching so that a signature pattern based on the erasure of a signature can match parameterized member declarations.
912e8e3f9a2027d25a26eecfe85e41c3bf566003,"I needed to make some changes to resolveBindings, but the original method had degenerated into such a mess that I've refactored it before continuing. This commit changes no functionality, it just makes the code more readable!"
9e27931e62facfd9a5ea3edfb956056c6900ee59,generics: new error messages.
6a938aa675906c0fc5698208288d564f983fc3ae,organized imports
69bfddbefad71e1ca45eba983668a0c066d848ea,test that a signature with a generic declaring type does not match on the erasure of the parameter types
21de41aba25e317167a22e491ab9c9381388498d,a pointcut now has a simple list of type variable names in scope rather than a TypeVariableListPattern
1a339c3258b63e2618a1234a228531b6a4fdfe67,handles resolution of bindings when the pointcut uses type variables
94ad04399fc4257a54701ce54cc65d7a007a842d,"Ant 1.6 antlib.xml support, per bug 103493"
2163a5f8f73aa91500d3000b6b582a1f3116f67b,organized imports
d3e0e124ef2c57a96caf1b04338cb5dff692acab,teach a typex whether or not it represents a type variable
c2606446912aae244297a74c6f68c11ed3832d30,don't re-resolve already resolved types
ceb8d527356c158d321f49efb0ca53dc12762150,more test cases covering generics in pointcut expressions
eb6c76d2789f5c8634dc56a5d156559f5569407f,"sometimes we get asked to resolve more than once, and that's ok..."
912d51580c0754651e3c18a1a676e94a9f50069c,"new message ""a parameterized type pattern may not be used in a handler pointcut expression"""
67292e752a8cdf373e9de8ec3a24177d643705d2,test for parameterized type usage
cfb2a15c27c7a1f7c3a0c2fc5a7f6e27bfaa7d6d,added an additional message operation to tidy up weaver code
79daea7cc88b6acc3ecba88649605c3e094060ec,better error reporting when using type vars in inappropriate locations
1ab443592497bf1281618ee7666ac10c3b81eefa,test case updates...
d3a1396362fef8107a5e3529530bc523c1c15903,now remembers its location for better error reporting
d9e3ba17c87310d66f0cf796e15f58413afb34f7,avoid losing type variable information when resolving bindings
2f79c9e3930464f16b9fbb071ad4c9ffa50d2302,beginnings of support for matching against type variables
22370921345272104ef570392d8d4a5579d24e9a,organized imports
be1b2ad17aa2b7f8cd5724a02f0a2b42dd3c60b4,just comments (honest ;) ) describing the format of signatures for TypeXs.
17f150e1033357d7aa561200bd32526118183857,"This is the beginning of a significant refactoring needed to cleanly support generics. We need to be much crisper about when we have an unresolved type (plain old TypeX) and when we have a resolved type. This refactoring renames TypeX to UnresolvedType and ResolvedTypeX to ResolvedType. In addition, it moves a number of methods that were defined on TypeX but which can only be answered by resolved types down onto ResolvedType. At the moment, ResolvedType still extends UnresolvedType - but a ResolvedType is *not* a UnresolvedType and this inheritance of convenience will be broken down the line so that ResolvedType does not extend UnresolvedType. Full signature information can only be known for ResolvedTypes."
cad71c760d6e073cfc63395b472308175a22c094,makes fromBinding in EclipseFactory an instance rather than static method. This paves the way for fromBinding to return a ResolvedType (which needs the world that the instance contains) rather than an UnresolvedType.
732539ab4bd740ac660983776ff5790459c58af6,moves forGenericType from UnresolvedType to ResolvedType. Return value still needs changing... one step at a time!
bba9c50768a1db72fc8606a80762333d4b12d140,Fix for pr103266: allow for nulls in the visitor (can happen if there are syntax errors)
e15794a2aa3c981571d54ff370c6e4f1d9ee97b1,testcases for pr98901 (annotations copied to targets of decannotation).  Not yet wired into the full 150 suite.
28c116d4771fd24f5298e7353fa68335e0f09a90,First bits of fix for pr98901 (annotation copying)
b6af07f0f5a889a220ad1301c9fd467068677d61,"@DeclareAnnotation and guard to not use it in M3, doc update for M3"
02cc78ff8873f4651d7b0e88acab4d6e8e598cb3,More bits of fix for pr98901 (annotation copying)
2ef8599677b00f02ddbe130ec65db7e7cdef9efb,method name in weaver refactored.
de064586adce1a43081832aefa88d27e883cb81e,"fix LTW for JMX stuff, rename messageHolder, some doc on that + dump"
f632b6ee2fc4ed7e252e231c03c93ba12f5f1dbb,"ltw reweavable test for Mattew bug, fix some wrong getCoreType that makes some stderr output when closure are encountered on ltw / dump"
9fc901ce7a0af0fca72f266504a0a7bc637cb10a,organized imports - wanted to trigger a build :)
aaa349d1543fbad515ff4fce869799fac591118d,"changes to construction and representation of parameterized types, and enforcement of the constraint that type mungers always operate on the generic type (never raw or parameterized)"
1bff115da676c633a85085d9da8e468b53f4049a,"ensure that when parameterizing a member, we handle any types that are themselves parameterized (eg. a return type List<N> should turn to List<String> when parameterized with String)."
f2987fdb0d76a943024f01962eaa650d811d8d3c,commented out debug line...
d027d6eb67b47cfb2ea8ba88bcf841b7d756bc27,generics: testcase for decp'ing parameterized type onto a generic type that implements a parameterized type using a type variable type parameter ;)
58bab9062a9cb2a3883ab49c16e800bb80c612f1,handle superinterfaces correctly for raw types
706bbcddb77409674424a7d35f60be79589dd536,wild type patterns with no type params ignore <...> when matching by name (raw match)
6a6669722b414814e142f419a29d3b2aa3ec09ba,one more passing test...
66809e17d849d8ece4f0bd56c7424c1d79257b59,fix in ltw log + test + some doc on custom message handler is evil
e59d3c8559ab260fff18b12af97cb5de92157c06,tidy up after a run...
314bd5f7977ebe80b65a27c2c4df56c7b2e77d24,generics:  fixes for decp testcases involving generic types targeted by parameterized decps.  Type variables now persist in the system for longer... also LazyClassGen generates correct generic signatures for modified types.
09a8a6b89a616d459e6a9851615f3a83c3f6356b,dont go looking for generic types pre 1.5
80e82171541d54ac2f1b4b5abfc0cd2284709e03,fixes bug in test case caught by improved error messages in compiler
651f729a3e4e1bdb46c3ca9603c97dad3327b41f,more tests and refinement of existing tests
dbcaf2b41c1f3b469cd2e5d08605a2be8f6e49bd,change from isTypeVariable to isTypeVariableReference
09b7d473c0396c01afee4dc0963c1d4d1b91d421,new warnings for generics in patterns
70f83a34b8e5c1d30876facaa8772a8d1a9058bf,proper support for type variable across patterns in the Eclipse Source Type world. Still need serialization support for this.
619a6adf4771e9b7a10776893583e8c5a96c0de3,fix #104212 very bad bug on static method call jp that has been around since java 1.4 is there
40cf8dff34088b852d41b0e8113fc37ed552165d,changed the serialized form of a WildTypePattern to remember generic info... standby for mass updates of binary comparison tests.
dfba82dc0af71d904aad95c371736183e6877896,remember source location when faulting in generic type
61b56c3484d0b9f282dad4b3da494a65bee987f1,improved matching in canBeBoundTo to consider equality of all bounds when testing against a type variable reference
4b5c1df961787ae569a1b8ccfe83d666d65320f1,also support superinterfaces when converting an Eclipse TypeParameter into a TypeVariable
ed26f1f873827ac78796cb4ca7d4a74f6a1aa18c,annotated lines that should produce compilation warnings
70b4d547c59917cc23ba75ffcb799807042f2915,update to expected messages for type pattern matching with generics
31d0b1f9f1814b3e7f576b446ae684c326754c1b,added extra utility method for warnings
a995ea3bc561ce012bf54e61afd9a85c69f0d2d0,"removed erroneous ""s"" from method name"
ebd9ffbfda07b35b9014f01046db0f4801deaf03,"This commit simply makes the World a better place.

I've refactored, tidied, and commented. Members now have minimum necessary visibility (e.g fields are private). Some redundant methods are eliminated altogether. Also caches precedence calculations, but other than that there are no functional changes."
f792b5464b8944a6a97c4c24403f4a06c73fc606,generics: testcase - static generic method ITD
bfd5c54ebde03a77dacd4395627745c718f543b8,generics: testcase - static generic method ITD
8db7e37a1b2a2c81f977157a9c8e9470a3ff72e6,"fixing the versioning problem.  Up until now if we found no version in a class we 'assumed' it was the latest (1.5.0) - this is dumb.  No version really means it is probably 1.2.0 (as the version was added for 1.2.1).  These fixes mean that you can now safely check that version when reading in attributes, confident that checking for 1.5.0 *means* 1.5.0 was used to build it."
a3dd516b80debb7dfd0c45fa2b0e8ad7959b4b91,minor versioning improvement.  dont add the version attribute if someone else already has.
9ecb2c94f5e3d9a882a34299f751ec7480973791,sick sick sick generic itd tests.
4ba706ee4db6b69fe9f75fc4d44c635c4ad61588,add the version when we add either aspect/pointcut attributes.
bd7bb040c868c96150b4d9c4316a8f43bc44275c,update to style sheet to fix unpleasant title wrapping on IE
e0d59e359d8846af6e2403f2ba797db39f5f06b0,includes change so parameterizedgenericmethodbindings know about underlying ITD generic methods that they represent.
9e7e38d6fcf7c490f7bb95b4daf8bed251e39eac,includes change so parameterizedgenericmethodbindings know about underlying ITD generic methods that they represent.
d5d75b67f6588f7f7412bf9d6adbacde9d62a0e1,rebuilt jars because of resolvedmember serialization change to remember type variables.
ca845bdd02e5c9c227e072bfedfe3fa67643c543,genericmethoditd: forces Resolvedmember to remember typevariables
acbb70e472e2edd41e6a65a3e3a5a771ce8df14c,"genericmethoditd: helper methods for going to/from resolvedmembers/methodbindings, including typevariable conversions between TypeVariableReferences and TypeVariableBindings."
e51f3dcc81862c99490ded005197ccedec40c5a0,genericmethoditd: keep a note of rank/declaringelement in tvariable
c349e6632c9af0664f00783ff44e7e023cfa7d7b,genericmethoditd: uses different ctor so tvariables arent lost
7f85e249a9071c664749cb4f91e78c626bf0821f,genericmethoditd: testcase
c91b611395368c71ca3bac6b8014a49e917099a7,genericmethoditd: VersionedDataInputStream
5cc6458f94ee0ac32210b3779ec8c46319d45005,"genericmethoditd: record a rank/declaringelement, like their Eclipse counterparts."
cb87e550ce9b9bacf481b2fa98a78744a129e5b6,genericmethoditd: tag for type/method since either of those can declare a type variable.
14b1a6b9cc02250b1fd6cb98d7f7bf1587b5e046,genericmethoditd: implements tag interface
3ab5051f534fc054fe622e57a4684090faf98e3b,changed dumb testcase
878cb1939b40b060387d58044646a953ebc9920b,generic decp: now polices you supply the right number of parameters and they have the right bounds on your decp statement.
7b621acacf66dbfa12a1ae2da62e8fcbb2eaa64b,"fix corrupted test failing on Jrockit, fix a ltw doc, ltw include are ORed as per doc"
c804cb81a9a903df09d8ddeae4365d352d5ebc5a,organized imports
a9a5d564db290101de4f9436aa02ee1318d20525,part of fix for annotations appearing on public members: new accessor method for obtaining dispatcher
6ddfe8a87e00c5d034c8fdc5c467b17464bbde8a,part of fix for annotations appearing on public members: can now ask AnnotationX if it represents a runtime visible annotation
7ea7217e9868e9221579041c74386d138292968e,ajh02 initials removed !
72b2a3a2707c621003d8e2330739db65dee99bea,...
de2890a546b560dbb09624953501bf1399f43254,updates to tests in accordance with generics simplification plan
8cb70f37f86030709e51d62e8d1579e418ecc107,"eliminates unwanted ""genericSignature"" attribute, and adds full support for generic wildcard (?, ? extends, ? super)"
b94dee2854b998ccd1bc1738e91f0ce36e781cbb,"full support for generic wildcard (?, ? extends, ? super)"
2fd6898f0a4fcc4bd0a3d142b10cff44b131b022,parser updates for generics simplification plan
ee5d75f4b0d2827606ce63dbae0f019a8430d4c3,no more parameterized or type variable types for declaring type patterns (generics simplification plan).
1156a21f2a2e1b15930f4691ef8946e3ab22f205,"test cases for get, set, staticinitialization, this, target, and within pointcuts matching with various generic and parameterized combos. The implementation of these pointcuts is now complete."
65e1b7ce15ceae73abf8cb928e2091d0087334a0,fixes paramerization for raw types so that List<T> goes to List and not List<Object>
6ad6a8c009a997d446acd18c048d861535b38a8e,new messages emitted during pointcut resolution when parameterized type patterns are used in inappropriate places.
f6515cf9cbf32f1103202131f74293bf23e96835,pruned some dead code
4b341a1c720218609e03e56215178ec3e8881681,fields now unpack their generic signature to determine the true field type
f986b9a893da503877ebdd1b34dd9dd80101b13d,removed dead imports
e22c677c21ca46e2d04b33d8c8e7fa24d582c154,removed some dead code
d3850dbe8f208167b9cfb27bd2116e82f8ec7b3c,avoids creating field signature twice
7b1a3a44fbb4bea0661594e48e7f57583f5e24e5,take type parameters into account for equality and hashCode
671f51b147ed947a954916be80ea7343ff1205c5,the name says it all ;)
ca378fdb002a8bf509f10388d02d0e423f210fcc,"consider the true (generic signature) type of a field when matching ""return type""."
8b26d315d428c9ac5ee5375438f95d8f03b8043e,ensure that wildcard bounds for things like ? extends and ? super are fully taken into account when matching.
d8c084d286dd115764da0c63a824b8c36f71c28b,genericitds: using wildcard '? extends' with typevariables.
506b37517e2681c790cad02367107c43084f342c,genericitds: using wildcard '? extends Type'
42fc0becde4ce2fca4b20d0d9e1f70127b6d7f42,tests for initialization and preinitialization pointcut matching with generics
1bf54ea183838be7c5ecb1941976e143d6549d9a,changes for initialization and preinitialization join point matching with generic and parameterized types. This completes the implementation of these pointcuts.
0401dd1abd3417b49640ace6e477c2e0a2ba36e6,genericitds: using wildcard '? extends' with typevariables.
14b0f911d8452c172e037d2db88f082b2f0c3bb4,genericitds: using wildcard '? extends Type' and '? extends <TypeVariable>'.  Basically preserves wildcardbindings that are built by eclipse as boundedreferencetypes.
9566ac2e6de5f1edc91425cd47966b137b41a4ee,genericitds: the possibilities are endless.
fbb19cca208211667f34316a0d8e15cae60987dc,genericitds: more combinations
7dde3368a16187a53157aaa89b64d48398307765,genericitds: now we're getting silly..
7bd52be2163917fd553699b884bc06d0788a816f,genericitds: more combinations
951ca5082f6174c24772f06ca50de1b8f2c508c8,fixed broken example wrt. annotation inheritance
7c1a5d72a8549771b076af20b4caff8e1da903bd,changed Member to be an interface with impl MemberImpl. changed ResolvedMember to be an interface with impl ResolvedMemberImpl
7b2bd108b72dbe26c15be6e976fc499e0d8759fc,improved and additional signature matching tests
64b52cf36f89ea4404cddaaea9bce8aaf7562a85,"signature matching algorithm simplified, sorted, and fully genericised."
0368e8e8bdd474318e287163b13eef049b1ea308,"with the new matching algorithm, these tests now pass - hurrah!"
64db5cf905f9473c2920bc5a28c96d19d8ba9461,last couple of withincode tests - this completes the testing and implementation of withincode with generic and parameterized types
0894d1dd3223cd171b3a1c40e9bc733585cb0c3e,test cases for execution pointcut with generic and parameterized types. This completes the implementation of the execution pcd with generics. :)
a26f850c10f1790682ff9d1f13a4f8d5253f5e71,"oops, this is the implementation that is needed for the execution tests I committed to pass..."
900a3e81d5b09c55e4044451f311f0566c025ec6,genericitds: lots of new support for recursive type variables and ITD ctors.
c22c80074c9ef8876d758692815b9c100e51f7ed,tests and fix for call pointcut matching with various generic and parameterized types
8f4da67cd5008837d59c6a182558b8403cbff58a,tests and implementation for calls to bridge methods. This completes the implementation of the call pointcut for generic and parameterized types.
7e71de736f50a564628a7b04b36f2b6d07f73b5a,genericitds: test programs
f2d4dce3c8ad4afd59807dc36fb4d3fe23a841c6,genericitds: sharing type variables with generic type - parsing test
1faa347149eacc4682bd5fa237d618eb27f65cf8,generic itds:
64f0a5bd91915a3c626a49841c9e4eb64d7f6de9,genericitds:
211806608a60557fb6180d55f9c9802a79ab490d,Fix for pr98901: copying annotations to new members created via ITD !!
f8e91b592311c086077b3e9d4e6c87efb56a634e,genericitds: test programs for ITDs targetting the different kinds of type.
311d26eeec387fc6365734d4d9991bb99f962325,"genericitds: reusing similar specifications for type variables in the same aspect 'Comparable<? super T/P>'.  If our logic isnt working correctly, it reports a problem with calls to the second ITD thinking it is specified as '<P extends Object & Comparable<? super T>>'"
6fe49e131d6699d52d94a34dac5a02d9971fe2aa,updated rules that allow ITDs on generic types using type parameters
3159ae48b7782b2395e2b98aca2e4f437606f178,some updates to make this sort-of-compile
2682cfbeaede95a9f01ea7b8fe06fd61920602c9,this version is built with -1.3 ;)
43f8b24ddb2cb8b092921e614669a429830f795a,GenericAspects: from AJDK
937c645ae75e19c238cd7abf0132404fef1871ca,"genericitds:  2 big changes here:  I've modifed the super/extends stuff so its only in one place (UnresolvedType) - making it available through the type hierarchy.  I've modified the TypeMap in the World to avoid putting entries in the type map which might confuse us later.  This fix stops us putting parameterized types that are parameterized by type variables from a generic member into the typemap, since we may look them up later for another member that happened to use the same variable name but had different bounds specified.  I'm sure its not perfect yet, but it is definetly improved.  things like Enum<E> still go in the typemap since E is not a generic member type variable."
a0e7fbf879f45831be1ead2dcf5ff74c642d0d2b,new tests cases for args with generics and generic methods in general
1bae1c807ca847b71d9a0274d41309586707766e,support for coercion testing
24873e8cc3ea7ea2564f53775a4fab61dea6a2c3,added toGenericString
b071637d68f41a406ab00f15bbd6d729a5545763,added unchecked match warning
23c9276e9c021d686376e57ae8cd255eeed5853c,support for coercion testing with parameterized types
52d810579f5055135ae8c4ce0a1f3a32a0612ba6,a shadow now remembers the resolved version of its signature
5b169a89bf518b4af16311dc4f95b71fbb4688f1,a type variable reference type should never be treated as a generic wildcard
8643e44d95867da295b83368bd305705247c57e0,added getSimpleName which looks better when used in error and warning messages
eb3eca9cc55ce5cad653b589862c74387e832256,"resolved members never belong to raw types, but the backing generic type"
f34a0f89f0e082d40abf5ac9c188ad0aa5114cc5,don't try and make BcelObjectTypes for parameterized types
eb617d89acf78387ff41d20dc087884fd2d357f0,args fully updated for generics and parameterized types
aef381d76a9bfd71d4d860dc4fa71fa819800927,"I only changed a comment, honestly, I only changed a comment...."
40ad6449866c092abb44f6a2286748778335e4e3,ensure we don't try and insert an instanceof test for a parameterized type
f930586537b0e85ee43a4029fc656b9b0b3199ad,">> and >>> are lexed as tokens by the JDT parser. We always want >,> and >,>,> - yuck."
9dbbc1daa92358bfd63900696c4043f4912b8d56,"make sure that ""all exact"" testing takes into account subtype flags"
4a9396dc60a8ffd6e1864b1c0e3122f13ebbd529,now handles resolving of generic wildcards in type patterns
0a1b33eeb5d154b81a6d060670d49df6f6d8b81e,tests for args - this completes the implementation of generic and parameterized type matching for ALL pointcuts in AspectJ 5. yay.
cb4c7214369154984d59cec11bfb909be37bf3ac,ensure that the generic signature information for advice is retained
56fdece12db2228299df8f5e3481d8d3eeb2cbac,test cases for after throwing and after returning with generic and parameterized types.
dcd86778de51b16e1d4c3922f6f2d2fe594d15b5,support for binding of parameterized types in after returning().
5735e966959da60fcacebb23e8b5463c4138020c,"tests and fix for bug pr106461:
 ""org.aspectj.weaver.patterns.WildTypePattern.maybeGetCleanName(WildTypePattern.java:500)"""
875cccb16ae5db0e24abd97fab1234f01b2cc5b4,"add test for proxy weaving and jit class weaving, update ltw doc"
e56604a385422063520b988c616eb894880239a7,fixed bug whereby we were adding a String into an array of Signature objects
818059b879ce33d4b5c0a3abbb6bfe3b9408c967,removed import of non-existing file
d0aa912a55895769052bda45d3610069039c7476,removed hard-coded date of July 5th
1fc3d52b3c8ed451dbacd02533415d5897520ab0,includes fix in GenericSignatureParser to handle nested types properly.
dcb99de4494f1f2fbc9fe9212d82c153ebf2ec00,"check that only abstract aspects can have type parameters, and that a generic super-aspect is fully parameterized in an extends clause."
477c5751e6894c988cddb27fe82cd076c387940d,"test case for pr106634 :
  regression: argument causes BcelGenericSignatureToTypeXConverter.java:203"
cba5b77c14f68163b8758cbc313b5a1750dcca05,use $ not / to separate nested types in signatures
f7e79bbcf5dfbcc76fa4ec6249fbb16e539043ea,"when unpacking the generic signature of a nested type, we also need to take into account formal type parameters declared on the outer type."
e6c65619c3e20bc105bef61327bc80178409f0d4,updated to test for non-parameterized super aspect
28ccb9d7b814e92f0bc76056208a8494e831c8e1,forgot to add that one in my last commit
96817d501c231a90f813add999a2a24fcc8780a1,a declare parents in an abstract aspect has no effect unless at least one concrete sub-aspect exists in the world
3d2da2a1ae1bb15072b48c8e49e857fd47ba56a6,fixed completely broken implementation of findAspectDeclaringParents and made sure that no declares can end up in the list of declares known to the world twice (this needed because declares are now added from concrete aspects so two concrete sub-aspects of the same abstract aspect will both pick up the same super declare)
3568fca2d7303748f86e2e8eec0054c149c842c3,declares from a parameterized super-aspect are now parameterized before returning to caller
987ad67ea188a8521ff9178eaf5d6c996b9afa36,implementation of parameterizeWith
c8f96a7768dba1d8c707b24c8cc15e641a9e868f,only collect declares from concrete aspects
dcd9cf5419b304c1cd3c0646ffa57096272acf86,"proper handling of type variable signatures (""Txxx;"")"
c53371b40761561cc0a70abe3f97926955d302fd,"early ""parameterizeWith"" support for pointcuts"
f509577970fe3ee7f7b33ba60d0c80f129503fac,"early ""parameterizeWith"" support for type patterns"
da1791018ec0ac7abebb809f901b7f06399b6047,"initial ""parameterizeWith"" support for declares"
43cf534bfd8f852d85b42b5dd0d7d5fbe2956e69,generic aspect testcases - woohoo!
cd43895e3e7b7f68721247d5d1761933c640fce8,remove dependency on 1.5 API and bizarre unwanted import
a5da69fd4e851e2937b71a83ae20561bfce172ba,patch from David Knibb (IBM) to make test more resilient to JVM differences in toString() implementation on annotations
eeee2b527b8c3fb871325c2e8805f57c6b5f1c40,genericitds: Using target type variables in your ITD field declarations.
48210cda000b9dd2c4c120331e120e216265c8d7,genericitds: Using target type variables in your ITD field declarations.
63c1e34ad3e05449d037f77b979acb9f37fb69a6,another case of ArrayStoreException - a bug that Java generics would actually have prevented.
a4e1d6751e7875982992a81e02a6468af692b5c8,"genericitds: fields using target types tvars: New parameterization class that wraps an intertype field binding, like the one that wraps a normal field binding"
cdd9e1e85bcf2ee4045e43f5215d56b2af37295a,genericitds: Using target type variables in your ITD field declarations.
329a179ced983545db124b4eb92984e0c8d79a07,"genericitds: on first construction of the ITD, it builds some 'placeholder' type parameters to keep the eclipse compiler happy, these will be replaced later by the InterTypeMemberFinder when the compiler asks for the field (if anyone uses it...)"
1ac97b7692fe627eecfe987d31e1bb418487c3c9,genericitds: dont lookup those type variables ...
2aca78085a4c51c98e7dfc2edadecdb5368a316f,genericitds: tells the member finder to remember the munger so it can correctly replace type variable refs for a target type.
c840a149bfe03c51475f7c75611a6a037168baaf,genericitds: loads of checks added for when specifying a generic target type for an ITD.  Also builds the map from the names used in the ITD to the positions of the type variables in the generic type.
7fd684f0621e8a8d0ed59b53f5abe2bd4331aa96,"genericitds: when the compiler asks for a member that is in fact from an ITD on a generic type, we fix up the field and return it parameterized for the particular type."
fcb69e778830899386023f587e0837b7e921e04e,genericitds: field type mungers now understand a map from type variable names to positions (for generic itds).  Some changes to assignable rules to support the new possibilities.
fe02f87368665c4f014e0be4525ed2d443967037,test case and fix for (.....)+ type pattern parsing
28b3501d12c875b9f5a9d391c9386e7d9bf91ab7,test cases for generic aspects can now be included in main suite
1234abf691b69a9e70737247516054e4701e712d,-Xlint:xxx and -Xlintfile:xxx in aop.xml
086be61547cb398cd65b5257841cc9e0268d931c,"for one little change, this sure was a hell of a lot of work to track down. Fixes bug pr106130 where methods using iinc instructions with > 255 local vars were failing to generate wide versions of iinc instruction correctly."
68bfe34f32fe2188b814c9361ee0fa242ce645cd,"for one little change, this sure was a hell of a lot of work to track down. Fixes bug pr106130 where methods using iinc instructions with > 255 local vars were failing to generate wide versions of iinc instruction correctly.  Only change in the jar is to IINC class."
aee5f8a89bc4cd4c91a801249c25c9527d056272,genericitds: method ITDs that use their target types generic type variables.
5771d66f8e74b61550ef6a15bb00032fefbfbac2,genericitds: more combinations...
97eb517e2c79764c5a5eeef4b03b7ef21f75900d,genericitds: more method/ctor ITDs that use their target types generic type variables.
012ff4d7009a28cf8754cd1804936a5824f53312,genericitds: more method/ctor ITDs that use their target types generic type variables. plus some basic generic aspects that combine the building blocks
32964a06b9ce29d5279f89aee04e9c8be932a81d,updated parsing of type parameters in OnType of ITDs
d2ab7c219daefa33aef2e934c1b1d660cdad401e,"Fix for pr92880: I've removed the exception clause from the declaration of ajc$getInstance() and modified the internals to return null if an exception occurs rather than rethrowing it.  I've only changed the code gen in the compiler layer, not in the weaver layer.  (interestingly with only my compiler layer change, no tests fail...)"
b472bfcf9ba336bfc1ff795e350932a9fa289906,updated to push on genericIdentifiersLength stack rather than just move the stack pointer.
82d63b5b44849e6fc664ef31deba0651494f4a8b,debug?
15c5be04ed8d39ceeeb4ab7b610c62ad3ba9073a,fix for 98952 : @AJ if pointcut
1966bd29f29e78f18931f759baec35087a94e604,removed 1.3 testing temporarily to keep build happy?
e7b11c1ad0bfacd0572300478656c19cdba63ff0,updated message text...
289eb6a040da3d89b29d39deae0b42c70956cc64,"test for Bugzilla Bug 107059
	  	parser crashes on call(void (@a *)(..)"
e5c36a2a95ba7f07b1de91fe60db47ff4dda9fdc,tests for pr106130
e50ee045bb9470a6ff0ac8b84b1dbcff3ab13754,test for declare soft in a generic aspect when using type vars
fcddd27d45f1e11a389764003a36c73978c9520c,"ajc-test drivers for 106130, 107059, and declare soft in generic aspect"
b80aef96e0752e44f09380a3e9346e62900838a5,tests for pr106130 and pr107059
2f2ddc5b10f6640242d88ff5423cf31fd2184f98,test for declare soft with type vars
6a533b0d99891db6b252b2aed23995c39d062063,added isAny() to enable easy testing for full wildcard
95a55cddfee7b47c9ac6f9a0ab9a57b80affa598,implementation of parameterize with
d572efd0e7f165e363936279ef9404ba6f034417,implementation of parameterize with for EllipsisTypePattern
2a599cb4edaf0f5815ad685e1dfe5f8d8c3ccaba,"fix for Bugzilla Bug 107059
	  	parser crashes on call(void (@a *)(..)"
f9a425cb10da59c629fea56861f26967b22b1766,@AJ PTW polish as per aj$getInstance does not rethrow the exc but return null #92880
14eea512cb9eca5b1868948d269788ddbfdda36b,re-enabling tests with @AJ processing in ajc since these now pass.
0f181ac687428a9aec2b711609516292f76e28b1,fix for bug 98952: @AJ if pointcut
c75040720d62262539d37af46339d6e3a6a89c3f,test case for user list reported problem with annotations on an intermediate type in a hierarchy
d7bb145d6e9ea76fa2e9cc1648ab0869ca5e6c2c,test cases for all examples in the new generics chapter of the ajdk
b212b5d6b3f245ac36ed7610ef32c0ca4e6eca48,added ajdk generics tests and test for annotation matching on intermediate type in hierarchy
afcd1d53306a6d8ba0ef735e52924449d9aee924,advice remembers the set of lint warnings that are suppressed for it via @SuppressAjWarnings
cdefebbb41b0e30a304bbe1be468b2aa461e5d2d,support for @SuppressAjWarnings
c11b403d87ec6d0392e6288c5480c225a6587d38,tell Lint which warnings to suppress during specialization of this advice
dd2f538903e36195e7e61a7318caea9cbc751fb8,added method to determine which set of lint kinds are suppressed for a member via @SuppressAjWarnings
779fa790d491b486fe0deb2616076910767f5d53,updated copyright date
e8f7b99508f0e44f756c465d710d7536f34c3710,"pretty much a complete rewrite, this time matching the actual implementation!"
154fd6e59d48eaaebe834a49e859b91b320dd430,replaced <i> which docbook does not understand with <emphasis> which it does
c82127f4e6f2a77f9f1e4c1a287cb73de0fb94de,"deleted the section about declaring a pertypewithin aspect with a type variable. We could consider supporting this beyond AspectJ 1.5.0 perhaps, but not before."
e9329e91f4e62b8280d70a0e4f0b7ff6e6a67b53,Using JLS 20.18.7 system property for version per mailing list request
10ba23b80089ba3ae4fabab61eff2c9abeb79fac,comment only on poorly-named but public addLibraryJarFile(..)
73748ff36ec8767fc6bb07e2aca5c6fdc1310bea,Fix 106736 - permitting classes dir as aspect URL (also permitting .zip files)
84542fbb09189dbce642123ef4f41a5c77416cb1,tests for Fix 106736 - permitting classes dir as aspect URL (also permitting .zip files)
9329ddd9d346ad2474d249777c172e8015148cf1,I think that astore at the start of the exception block is the right pattern to use.  I remember some bug about a decompiler choking on no store when it was expected.
dea8672c24a4ef917fc37619282b1695de2e843d,Modified access to onType to be via a get/set pair - enabling me to get in and do some stuff for generic ITDs.
7951b5c0e225d188310e10f8d1bd91f77dc44465,"some binary weaving ITD tests, they dont pass yet."
5242ef35b0b8dcc158069807a1226a318f0b86d5,test for pr93356 and generic binary weaving itds
590fccc62446325a42d0e949ecca99e5322571e4,Andrews test for pr93356
431bc7908430f1d77446b891f1c848be7749c3f7,switched test around.
f6544cd3911b551d36d580a54dd8f009ba5318ba,Makes sure it looks on the generic members for annotations in the case of ITDs.
e88e1a38c43abbfabdb407d51a3dd122afede672,follow-on test for pr107159
f7a8c2e721fa01b1b78607a37e57e983f5349062,tests for examples in the ajdk generics chapter
e1e8a032d34bf125561f5fadaf1fba3f37d2d56f,tests for pr107059 and generics chapter of ajdk
6cccb66ba4e056d7f219a6e465ddf6bb0f755c0e,SuppressAjWarnings should not suppress errors!
867a65660c1d55f7e548c9f0957daa1241f96164,messages for trying to reference a pointcut in a generic type from a raw type reference
dde3a9141c63bd2911896735855625cd50803040,implementation of parameterizeWith and fix for 107059 part 2
4a5c56c32b142fe6decf40ee32d942bc50a5a7ac,support for parameterizeWith
e6dd6008a53908d96b21f4c07e84a0ec983ec595,also parameterize annotation pattern
5dd3cc085103f409982e5b484fe32ba68c909701,make sure we don't lose source location on parameterizeWith
e11df238c6cdcb9925ab809a7842a3909a42197f,allow a reference pointcut reference of the form Generic<String>.foo()
8ad9eecd63ff70abf68721fb2d6a0e386a42b2b9,handle reference pointcuts of the from Generic<X>.foo()
8eb191ad3ca2b5ea9365b9baf0db77c344c10a33,force parameterizeWith to be implemented all the way down the hierarchy
04bebb62e80e2317cc19139dc71706db613d2d1f,just a few tests for generic aspects...
5f0844449481c768431b3d99dce0eac8eebd0711,replacing the bloated ones in CVS !
63bbfa1b26251a7141f15852da8c6024a1a345ed,new JDT compiler uses a Map instead of a Hashtable for CompilationUnit.compiledTypes
cfe61d6ce06def3e24d1c62e047cd029c6f1f428,overrides getOwningClass from MethodBinding to ensure correct results in some of the new JDT generics compatibility checks.
b6534a87a3a6dc094bf2c704548f49094f250dc4,collection of really basic tests to use when bringing up a new version of the JDT compiler (these are not linked into the main test suite). Fortunately I didn't need too many in here this time round...
7cf81c21d99579342103bcf5aa59c543901bc440,wording changed in some JDT compiler messages
5bbe0b8050bb52c9700565b33b6c52261a171d34,the big one. these jars are at Eclipse 3.1 final level (v_574_R31X)
4464ce021264feb4197a5b777513c818fb353601,updated parser  w. itd error recovery
33a3148e7a29050232e486457ce5a1527d3213a7,"fix for Bugzilla Bug 74562
	  	[jdt-parser] Unexpected syntax error with fields named ""after"" or ""before"""
5e9aca91401b7c13e56173ef1044959ca9ccc5e5,tests for pr 64568 and 74562
01ab6bf7cfc79db5020d0537c97451870d88b2ba,"fix for Bugzilla Bug 78707
	  	[jdt-parser] AspectJ/AJDT accepts ""before() returning"" advice

no more before returning and before throwing advice ;)

as an added bonus, I built these jars with the correct -1.3 option"
b2b46ce365939bee3ed9f5840b43bb88edf13e93,"tests for pr78707, before returning and before throwing advice"
88720ff6ffbfa5b4ee597912493b1ebdd62ac059,"fix for pr9114, before and after used as var names in parenthesized expressions"
169a48870ac2680169e0632ee8d79b372949be10,"tests for pr91114,  (before - after) expression"
2b23e912c5e57b0731b25c3a26ec365b20468b0f,"tests for pr78261, field patterns with a void field type"
2fbf2933e6b75fcac32e4b725227aa4ee70d2e79,make sure that fields don't have a void type in a get / set pointcut expression
524b9af6ae16643b580d8bdb05bccf319ccc528f,genericitds: more funky tests.
92c16e8dc34f86500628a825141cd035bdf1bc4a,genericitds: I'll be finished when I get to Z
86ce1f7ce2a4be24e55a0eafc96de86142ce1278,"fix for pr86057, overriding of final pointcut"
7b325703558284f5dbf21c5e94b1ffc76e4e382c,"test for pr104529, @SuppressWarnings(""unchecked"") not being honored"
93fdce17441da20b66f6db665db9d9272adda09c,fix and test case for pr79523:  BCException: illegal change to pointcut declaration: calls(<nothing>)
f624c3fcc076d2ec21a011aed01e0e24cb79df6a,"fix for pr78314, parser saying: ""privileged"" expected in far too many recovery situations"
b0622ad2495f6bd3744751c9e52375f4b5601114,tests for pr78314 and pr80571
78f6eed899449f59a5893d0190081244422067f7,"added new method, methods() which returns all methods of a type, including itd'd ones"
197ea8d62a60b4b2e3e22a94ea01c1ec009d485d,"updated jars with fix for pr83377, which was basically some messed up legal override checking for itds."
3cedc6ef49a4a98ed33701d3545074ac97f2af04,tests for pr83377
ce7e64ba610a2957b81d373986668c6cf60b8722,fix for pr83377.aj
262edc95da3a65bb4c86024abf531ac0ddf8bd69,hasmember (hasmethod / hasfield) tests - not linked into main suite at this point in time
44425d3eeaf0c4a29ef3336c6112e56ad5f7bb49,"support for hasmember / hasfield type patterns. currently disabled via static final boolean flag in PatternParser. If re-enabling, see HasMemberTests class and don't forget to figure out behaviour wrt. itds!"
ddf1655ed6ab513dfd183e34a8e85c9d805a36d7,don't let jdt put out warnings about static overrides for ITDs - we've already done it and we do a better job of it :)
c4ae8337e3761309515f0221eac71d6483ccd8e4,reincluding 1.3 test run ... will it work?
6d12d15bf58fb407815607a5c6e46802a445b796,organized imports.
e4714fa267754554f6788c434cea03fb748d5a65,"nope, wont build on 1.3 still ."
84cc03d325e7662f1bfe6381a060cf36a829388b,"genericitds: An ITD now records the set of aliases used for type variables on a target type, and has the ability to modify the scope hierarchy for some member earlier than in resolve (required when using tvar references in ITD ontypes)"
d9feed2b16c8df05dbe3aa0085a2718b38cabf11,genericitds: simplified!!  No crappy fake tvars created.
b4215a57074c807129b41f18ed8a608fd213cd63,genericitds:  modified creation of bindings/resolvedmembers to take into tvars on 'other' types - used for ITD processing. also stores used variables by name rather than rank since AspectJ doesn't currently do correct rank processing (hasnt been required yet...)
c9bc31e6c46dfeff27a51bf65d8f8982764d448d,genericitds: deleted! Functionality pushed down into ParameterizedFieldBinding
b03b2426fc26455aa7af2077a6b12146175fdd88,genericitds: scope can now lookup type variables when referenced via the alias used in the ITD
f3bc92fd305f90232a45f9e9301763c7d8f76e83,genericitds: simplified!!  No crappy fake tvars created.  no need to remember munger sets.
48ae5799c640e4429c4458f189fe35e08065ca7e,genericitds: simplified!! doesnt need to tell member finder the munger sets
ffec34a47eb415e55b132be4f73d73c9ae4aadd5,genericsitds: modified with a couple of new hooks for allowing the use of target type tvars in ITDs
1abe388fddf09811e19dbb1405ed8d81c0cec694,genericitds: tests moved around and activated in GenericsTests
5d7a5587c7316b97337608985bf5edb85b1ab5f5,genericitds: simplified!!
749a909144a87ac8c45fffa1b5dc613bd30100e4,"genericitds: activating more tests - including ""uberaspects - U"" - please dont look at it..."
a0bd497a41bc25791db64c4218bbbfb1810072b2,Removed dead code.
2ac1f6da9d3308e07f45e33761d76d1e370ccbf5,support for -XhasMember
58567c7b2c849f4d35f49e117ab8531527b63f7a,support for anonymous local type registration
0f0c63e0b25968d4bd74bfb0d9d34f7ff9e642c6,has member tests + tests and fix for pr107486
bc187a6e0fe8b714c07c2f87be15203e55f1a744,"fix for pr107486, anonymous local types"
4aacf20ad0fd3f3782fe1ff936aa13f666431beb,@override with ITDs - testcases.
284c4eed6b80ac368ca60c2f9eb7aff1234bf2a8,@override support for ITDs.  Plus some binary weaving generic ITD tests.
961f4ca9011d556c45f8bf7d5191b99a8010eeac,@override - another case involving abstract ITDs
9c1f6658a810785d91c865074a945da87124fca4,@override fix: previous version didnt cope with abstract ITDs (yuck)
0348e56e6ec26d3fa263dcca3e8f8a7bda1145b1,added dependency on loadtime so that loadtime makes it into aspectjtools.jar (and then ajde.jar...)
2c91eb942998395a9824f51f35023dcbb765e2a2,organized imports.
70ba7e28b6ed0b2026c1ed6e403e2d54afacebcf,genericitds: bridge method testcode.
f8ca9028e9993580919f2794875f4e2a531b082c,new @override test plus genericitd bridge method tests.
02c28e7e1f3c1ad29763ab6822e41ffabbffc347,bridge method tests - commented out right now...
76a76ff7936851f0a1eaf99985f38df8b6b6f5be,last piece of the $Local$ fix
5ae8fd75d09b1f4f4d178e1371a96756ff3edd8b,better error messages when failing to unpack a generic signature
488ccb7083806fba4720e1fee9e68d38380c3ea8,organized imports.
4fbd49aac473de47e08f2dc64b9617fd804a20ae,generic itd bridge method test code.
a2978254819c3dffc226f3b644741bdaa0fee335,"with the fix to ensure the methodverifier in the compiler retrieves any inherited ITD methods correctly, had to change two error message handlers - so that they don't accidentally report something (because we will report it later with a better message)"
4eafbe7111f03206e6e56b37e1ab6e2903356283,generic itd bridge tests - not all activated yet.
f84210636e992556394b6d1c885264d47b352434,fixes for ensuring inherited ITDs are visible to the methodverifier for bridge method calculation.
8a772af970720dddbcae353a6e04bb19ba2962bf,"fix for pr82752:  ProgramElement.getSourceSignature returns ""public"" for ""private"" members"
afb3a29b1c6b6446d3763b5f05caacf4cdf96a19,whoops - did I forget to check this fix in earlier?
f54e59243c9a13ce6d0ecf538063411664b9d600,two more bug testcases.
cc6e6812fa6908d315e2f07195bca3914438cb1a,Fixes for 82989 and 91381 - they can now be closed.
803616d373f1c366e133f87342b88514cc5f74c3,"fix for pr107784, failure to parse an array of a primitive type when used as a type variable"
5f1c759b990ca82b8fd1a16e0c8614339ddc419f,"fix for pr107784, IllegalStateException on parsing generic signature"
ba19a7ecdd3fa63305746f4572972c77ebf87550,"fix for Bugzilla Bug 107898
	  	[generics] Type mismatch when returning T (but stranger)"
bf767a9d6e6501df9e973e381546b1c66f41a757,Fix for pr104720: busted tableswitch on around advice weaving.
c9cacff1d61d108c2e3ddf3b4b81a17cd26a1b9c,"updates for M3, mostly tidying and making it clear what is and is not supported in the M3 build"
4d2c46f3f99d7ca0bbfbdbac6adb92f64a851653,hopefully this really is the very very last we'll see of can't find type $Local$ messages
2172ceec0382a30dd7c8bbcf4e983b70225243a4,tests for pr107898 and pr72668
37c44d35a618695c1abb2e204cc31c5e38bfcbe5,"Fix for Bug #82752: ProgramElement.getSourceSignature returns ""public"" for ""private"" members"
100d9e056735e85610fe9072527a0369dc867ec5,Fix for pr107713: classcastexception cant happen now.
efb3c54464efbcffdf82311e63b10eeeef4f349b,tests for pr108104
0a419a3d78800b62b3f8d2af480a08bbc241b8cd,no longer call genericTypeSignature on a LocalTypeBinding as it has unintended side effects
d9132dc6a4ca244a4404d7a7f4e19d9983309962,"fix for pr108014, when we don't find a method on a PTB, we shouldn't erase all records of the methods that we do have!"
27e68f3b3ae82408e8e046a40ab69d9e4996ff5a,"tests for pr108050, signature matching in multiple override scenario"
2ec1f35b5c9f4374970fbe33f1be86dc615253ab,tests for pr108425 and pr108104
a3ee66152903e1de3dce8cc30b2741dfdafb2614,"fix for pr108425, type parameter used in method of anonymous inner type."
3fa3a93b462e19407b015082365b8b9f6b301915,"""band aid"" for pr107530. This will treat the symptom but not the underlying cause..."
dca288a38857115c46e83ca2c548377014c42b7d,tests for pr107953 and newsgroup reported issue of varargs matching with type variable vararg
b9ed3b52aee3997fa255891866f5f826b058d61e,"fix for pr107953, @AfterThrowing with no formal"
6542566aa769b0ba6cf98440bef2ba2699794bea,fix for newsgroup reported problem w. assignability matching on type variables
be750d53ee48c2530bc9857196c468274632f7bc,"fix for pr108377, Verify error on unqualified reference to itd field inside itd method."
2c9ea11c6d7354d3e44aa59531964a15b4486519,fix for pr108448 - failing to look in *all* outer types for type variables when resolving a generic signature.
014c5c64b44c697946c4c7c21c18f273ab0e913b,"tests for pr108454, 'Waving' crash on a 1.5 java generics?"
8fc27ca674446cec163f22412d11b5e2ee674549,"fix for pr108454, 'Waving' crash on a 1.5 java generics?"
53c725aef7efb4bf4012a67dc2408b0c24818a26,"tests for pr108370, enum switch in itd method with target type on the inpath"
766509d831e8a8b6f0032bf7e726aa3e6fd4c745,"fix for pr108370, enum switch in itd method with target type on the inpath"
b953c0347a539890d9e1f87feabc78a3d687c50f,test for pr95992
a0ab747e10653a76abf8ddf839fa6b830e65acb1,"tests and fix for pr105479, declare parents introducing method override with covariance"
f2af562611c7e060ebd71b9b29d6766ffcb9c727,"tests for pr104024, inner class constructed inline and passed as argument to varargs method"
6c8747b590e9e9092ae256f2c7af0db169a6e2e4,"tests and fix for pr107858, inline field access in argument to proceed with too many arguments"
7e0c3cdc37b974ef2bba01e19fa90cb9c752f288,"tests and fix for pr71159, visibility not taken into account when determining matching signatures with overrides"
0c0f2d509a0329fbcf2fd1f1ff65b93b31880cf3,fixed a couple of typos reported by Alexander Popescu on the mailing list.
a66e0a2aa8a6cb057f4b0d740ad961fb1ede5e85,"tests and fix for pr59196, args pcd not ignoring synthetic arguments at adviceexecution join points"
72ba3c51b1e16f6f6a09197791fa39427d22379f,add extra guard in runtime matching of args.
16512b2e4e0e9efe88544472286be55fc86a1f62,"test and fix for pr74048, unused private warnings for aspect types."
8dee531bd67e50d61793a657e19cc8de9113d9c8,enables a Shadow to have a signature to be used for matching that is distinct from the full signature (which may include synthetic args)
7ed592c3a67299f1680c5ce334a5aa79c1877e61,use the orginal (non-synthetic) constructor sig for matching
23d55261d14e8b981270a82347e84f4c0cd6b718,remember the declared (non-synthetic) signature of an ITC
b79814ee09ddda6b8b48b9f98a39c431f1368790,enable an effectiveSignature to be set on a LazyMethodGen
558e025362a02c1c5f88008b3f0c1e90adec60a8,don't match against synthetic constructor args
2ce81c85a936ab156c4147dd426c5067955906e7,use the matchingSignature of a shadow for matching (not the synthetic sig)
a114d244a365a653b52764110d6d312997d70c3e,make sure we have *all* the formals in scope when unpacking the signature
0c44c16b6cd65aeca12a3627a8a0f22416c1801f,"tests for pr59397, synthetic ITC arg confusing matching"
a5e645fa9a16aba627560d058be824438ddfc890,"fix for pr59076, much more memory efficient creation of join point static parts"
6629e48dbff05751879a24c27623a3c923189a79,ensure every section has an assigned id so that urls in generated html remain stable across builds.
d8442e7f2a1af534dddc827134d970e9812c881b,"fix for pr102479, allow clients to provide a custom message handler / holder to be used in place of the default if so desired."
c6bc7a2b2ee30b7647d3cb17fc323ebf96768fef,fix and test updates for enh 102459 - provide more detail in showWeaveInfo messages.
619f8bc764e127d4f43ece87ae0e858f7329ec9e,"fix for pr98290, 'matches declare' relationship not correctly created because offset location missing."
372a025d85641e17d9fff734a0c2e9770fd2d55f,Patch files to reapply changes developed in exploring pr107313 should we ever decided to go back down that route...
ad753aa80558748ab918988809ba6f58b8c26419,"tests and fix for pr108062, failing to correctly tokenize (ZZLjava/...)"
047173e8683e4ab9004ae2151a8abad886d1b84b,"tests and fix for pr99136 (dup adviceDidNotMatch warnings), plus extended testing for pr105479"
e29ca524955b2112bbf63e740ca71516c13fbb4c,tests and fix for pr1202212 - poor job of testing modifiers on ITD methods
b17ff4ed2d55ec24f1f1a6f3fe70ffd91ac18e62,"second part of test and fix for pr102212 - synchronized itdm on interfaces generate synchronized members for implementing classes, but not for the interface itself."
2c88c598b950136bf54376eecbf58f14a19666c4,"test and fix for pr101606, unused privated method warnings incorrectly generated for pointcuts"
df46c6f728502a74b2d042a0a955eab1326ba76a,tests and fix for pr99125 - duplicate members in interfaces after binary weaving
a905c8e46f43684ef19adc4817374b82f2b0993d,"tests for pr87530, final modifier on interface itdm"
ee6a87405375a518c4e7cd73c8ce856145de7c1d,"fix for pr87530, final modifier on interface itdm"
def2f307c6579a5992191b9364d4c74364baef4b,"tests for pr108818, private pointcuts overridden inadvertantly"
9a7dfa5ff13d55a2934e877a7684944920efc224,"fix for pr108818, remember the actual declaring type of a member that refers to a pointcut"
752a7b4b45d02495ca1610d1a941d4feafc80bae,"fix for pr108818, changed the signature of concretize and concretize1 to pass in the actual declaring type of the member owning the pointcut reference."
8459fc93a9f455b2669ed2a758b10bdc6cd3903a,"fix for pr108818, if the declaring type of the member refering to this pointcut has a private matching pointcut, then use that rather than any with the same name in a sub-aspect."
71771abbb2d2bac4cd832323c08d9dcad81db2a0,"tests and fix for pr108816, args with binding with .. at join point with synthetic arguments"
9fa1e7af8353a15a5f28f1bb1a4c4684a3c38eae,removed unused import
2505485766b460041f2648e56f34132982f6428a,tests and fix for pr108902 and pr108903
08d6a5d1e032d33b46afca2fd92d3700b06a6cc6,"tests and fix for pr109042, unusedArgument warning on aj synthetic args"
2d21db05869efd4715e8a4a10810c18a89093bfb,"tests and fix for pr108886, result of having no source location for resolved members representing methods in EclipseSourceTypes"
51874377b6350b80287730e6b8e0cc8a76c284c4,Fix for Bug #109016: NullPointerException when building configuration
d2447a0cc3201a1792ffe19579e92e0e609de7e8,fixed an unneccessary 1.5 dependency that had crept into the test code.
a9ca915dc39c87267a7a763d51e87a819e9799c7,"tests and fix for pr109124, not correctly recognizing synthetic fields under 1.5"
dc4ba2950b8ad87956d93eba5110d7a18288021c,clarification of args matching with null for pr68603.
2942ca0f23ee0489efce58272768529e6b907a63,"tests and fix for pr108826, not correctly converting from T[] to ResolvedType."
64d74013c685a815cbe3565f71747103177daf20,added test for pr105181
f5030e64039e19f562423d9c8b7f7b4587ecdea7,tests and fix for pr108903 - MUST process from super aspect to sub aspect when finding declares
2ae4f531c7f7c3c38c983c73492ef63b224784e3,Test and fix for PR103740: Compiler failure on @annotation
776613eebf410baacd178bf73f3de0783f5df98f,"tests and fix for pr105181, implicit cast of itd field type on return from generic collection erroneously casting to aspect (declaring) type, not owning (target) type."
056db42f1697ed27a47e04759bfb8162acd92590,"tests and a fix for the bug with no name, in which Pooh gets carried away and tries to create raw types all the time, but Christopher Robin kindly explains that raw types should only be created in -1.5 mode."
a058bd9ae17ca3570ca53ff7d0feaaa2daf1102a,test and fix for pr106554: staticinitialization and PTW
76d607d6db0639848d7655e76cef208d7177b527,test and fix for pr106554: staticinitialization and PTW
efa7fb38c25504993d82e71b4a9bbce7b2698ccd,rebuilt due to attribute modifications.
bc4c4ca13decc74d7361e6cea2de6b4eaa5c4e92,was missing two jars - I've added them.
40f576dc2de1a0ceb7e3eb6857680c72b187e5ce,To fix one of Matthews problems with FFDC binary compatibility (AJ5 chokes on a 1.2.1 library): made reading of a type pattern realise it shouldn't look for a varargs flag if processing a pre 1.5 pattern.
bddda4072f25bdcd680e5f167a1faed145066f93,To fix one of Matthews problems with FFDC binary compatibility (AJ5 chokes on a 1.2.1 library): fixed the ordering back to what it was for 1.2.1 - shouldn't have moved NONE as it represents an empty pointcut expression (e.g. 'pointcut ffdcScope();' which is valid) - without this change to the old ordering we were interpreting 20 (which is what the FFDC pointcut had written out) as @args and then choking on processing it.
87e5c2eccac7cf0027b7711cfe1bd4ead21d21cf,test and fix for pr109486: bcel exception when expecting compiler error for final abstract class.
9810a3c335bdb732458a46c7965599b0cc93238e,organized imports
441f1cc722a196c3ea7b48276351531e52aaaaf6,test for pr102210
979128e3d5ca438b7eb75d2f755356de4c297290,rebuilt *again* - i hope the build machine likes these?
3466a78126c79116bed284bfebfadc529243b11e,rebuilt *again* - i hope the build machine likes these?
d01e7fced891648a3d4bdff481c041d76763cf86,use the right version property.
eb39196938a01554927e21e8fcf95c25021530c6,allow for references to descriptors when class_info structures refer to arrays. (pr109728)
5f096e0aa004a180ae2a67774574d84b32548b6c,pr109728: testcase
1d5496e2f178baee39a56910f46e2d3b42ab0bae,pr109728: fix part 1 - don't let bcel damage descriptors.
941ed1bf2f44c07c7b476ee829aab8cecd2663d1,pr109728: don't let people pass signatures to nameToSignature()
2a9b5d8d87d841a40b690f3a6c77e02828768f7a,"pr109728: cope with methods invoked on array types! (e.g. clone).  Slightly optimized too, doesnt build the declaring type twice."
fc2d08e2ae9d03fb377bd0ed0bd56983af4687a5,Fix for pr109728: generates correct aroundBody methods for field-get JPs that are affected when compiling at 1.4/1.5 level.
a39f595c0cdcddf8eac0b99e1918d0578f2dc501,tests and implementation for 108120 - runtime pointcut parsing and matching.
5f93dd1b209827833813978a860dcf1a95b20197,fix for annotation binding bug when target type in bytecode != declaring type (1.4)
4895aeff9da732f0f6f498158e09921844a5a792,test for annotation binding bug when target type in bytecode != declaring type (1.4)
0bb21718c148e8be91a8e49aad1d3fead4e06849,tests and fix for pr102210 - not descending into branches when pulling up disjunctions during pointcut rewriting.
0e1bb192d429beba6a2a8f9b2ab8218f85673405,fix for pr104957: NPE whilst compiling GIJ
ca9c1f7c57b64473042f3100a4159650da085111,tests for pr76374 - missing type warning on declare parents
b5eb04579d5c5d1c0325ebe560c660bde938ce82,load 1.5 dependent tests reflectively...
edd1fb9692ef587a59d069f2994158a1ada6a72e,add the java5-xxx as source folders
2447704c6056d26c5f819654acd187a8d53a2dc3,attempt to create the right classpath for running org.aspectj.weaver.tools tests on the build machine...
f042f0cf99df5eea26ae4a38a06968295c500914,doh!
0442d2f26935d7da1a6819eb79c5e7a1c034b229,"Set project compiler compliance to be Java5 for the weaver project, so that it builds straight out of CVS."
8a0f59ad18ace56ff59cd9108d18c70358a4f055,tests and fix for 109283.
4270e9387e4c72d09d9d2a3ba26e05a96c07101a,AST support change.
03b20bc1129e03d5e8594262b89021e54ab017f9,David Knibb's patch for enh 109173 :- Weaving Adaptor enhancements
14bef379c8c721caa8abbffbbe5cf1dc2c94d68a,"AST support - factories for ensuring when the classes in JDT core initialize, they are able to build the correct AJ subtypes."
61cddce63a77f4e35c7ae75313b503019197ad83,ast support - rebuilt shadows
d0ae646468f33d52522cc324e5d7db112c0fd534,ast support !
d9fe366566e2d3e1b301692650e9657fbc52e407,ast support ! (and testcase)
7d73ff1418686ae98e13b83931c721f4637b9a34,tiny update.
a4a9090d88bd1a79d87f0bc08aff7fa627e81f99,tests and fix for pr77076 - MUCH better toleration of missing types when weaving into jars etc..
2ac865ad7eda40f36e03c93584dba7088701c463,remove @Override that for some reason doesn't compile at 1.3 level...
e61636fbce24dd10ea99dce19f1deec738cf4357,now builds ok under 1.3.  Needs a 'drastic' refactor/tidyup
870577699de0f11a2ac0a6c65729b36207b50357,Ensure tests run if no aj-build folder exists.
1c72a494aadef237659a03fe1a958156792ac9a1,avoid 'illegal forward reference' problem when compiling with 1.3
4afdcf2612e94ce3c07ab0db5b20ea73134ac632,avoid using IdentityHashMap - that doesnt exist < 1.4
d485f9bcc4df37aef60863fceb88654bbd32b680,"fix for pr108123 and pr106500 - better diagnostics and exceptions, plus support for -Xdev:Pinpoint"
0ea99cad049a88bb2465472f8eba9800ae9d44f3,weaver5 split out so weaver can continue to be built with Java1.3
9e531e617fb159c53909521c5f68345224a1edde,moved to weaver5
1362590b3d2fcf1aecec3c84ab31819c07e683a9,no longer required with new weaver5 project.
06ce6cb6bf34b4419e5667edb97889a9359657bb,java5 related folders have gone.
0be5213588a2a262c7d294f42b146b27312b8334,depending on weaver5 will keep the packaging happy...
58ccf4cfe0562091bfbe8715fa7ea451b64d9668,weaver5 added
7860b68dc8ea16a32416b4cd94938a9483300c50,updated for weaver5
601d08a2e47c99f5f9606ab7dd5a5b1d238e6868,doh!
b1c88bdb04ad9c623aea43d633e0475376347e22,imports organized.
cf077b3b71ae47a556e230eb40dfa158abd4d037,include weaver5
20cafd486b5f5181153fadc4179c2cf313c931a5,"a few more tweaks to fix for pr108123 and pr106500 - better diagnostics and exceptions, plus support for -Xdev:Pinpoint"
24e42cff3410e4b427a233112ab0c9b7d43f0ea1,trick the build machine into compiling our code !
10a0985aa2c2e4eb9ba631eb0bfba41a96829214,pr110307: test cases.
c6567597adac0d457cdab8df3c24f9044f21e0e8,give context in can't find type messages
e76b37012601cf67a069b4a78f60f183efad563d,"tests and fix for pr88900, unneccessary warning"
21804a0c3d3a26b124eca65799b5f6462f6c1d02,improve abort handling for AJDT
fb428d0e5ad8adabc14049f8a170b30d57044588,"tests for pr102933, array clone in -1.4, -1.5 vs -1.3"
97520cf015afa87263c9497b4a60888ba2ada177,fix for pr101407 - weaver produces wrong local variable table bytecode.
4b15f3893c96e56bae0634215dde92bdb8e6af2b,restoring original behaviour in LocalVariableGen - not happy with my change from last night....
8ca0ffcdf0a7779638713cb15e4ed8fecb366f1d,organized imports
1feb254c8858b705a9ebcc546e5dc997593fb334,"Bit of shuffling to keep the build machine happy.  Basically the PointcutExpressionTest is now in *two* places.  Its in weaver and when run it will not use a 1.5 delegate, and its in weaver5 where it *will* use a 1.5 delegate.  I changed the logic in the ReflectionDelegateFactory to allow for being unable to find the 1.5 delegate class, although this should only arise on the build machine or running weaver tests standalone."
c7e275bbe8e0ee178ce28c5cc2d12bc5338d76a3,organized imports
fc51daa12dd7952e3b6a2f486e7d0162323c91b4,pr110788: testcases
8a4146fc1c5f39766708a442fedbfea587ccbb3c,organized imports
64da2cd84875f49f5745722a4aad15a3c3128b35,pr110788: fix - better analysis of type hierarchy
e24482630a4dc558528537c87dbd3165c078cf92,"test for Adrian, #108488 - note: other test are commented out"
823947e4fd021bfb1f2cd92aade1f47c8ac982a2,#107953     @AfterThrowing/Returning checks when extra formal is not bound
16c6e0b12643bc42d7dbebf4933c9f8d0622cfeb,"temp comment out for CC, update for #107953 fix"
0b8ed1d5c168d3f3c2eb4a1ca8bcf0f85249cd1b,pr110927: testcase
f8cf60b03ac66011a68da9407f49a69622f26dac,pr110927: testcase and fix
85a4b0afb2c4b69cb467484d9ed18b21e414a868,final bcel fix for 101047
c5171f738fcfa0cc947b2be45e00af8b78d7ac7d,perclause resolving
d6256b8c3c944d8fa2feb6d837900144db6521ac,"tests and fix for pr100195, local var debug info not preserved when inlining around advice"
8a34d98b678b9d85657d81b8991928b8b2788d05,"#108488  @AspectJ perthis(..) was broken for some pointcut issue
checks for @AfterXX fixed"
fce125cac400a4d32bb9a08672bf327aa47413d2,"#108488  @AspectJ perthis(..) was broken for some pointcut issue
checks for @AfterXX fixed"
2650003fea1d611357b741b8d9a2b5c239858541,couple of small generic signature tidies
5fdb986e1843518b4766c21b1be3b85af780731c,give compilation context on compiler crashes during test case runs
81a07900d1e2c4db563d5b4a833b404ac51ee5bd,"tests and fix for enh 108118, completes @SuppressAjWarnings implementation"
2bfd630098d2cdbe7fbf275e13fe8229a193d3e2,Using JRE15_LIB to permit default JRE to be 1.3 (see aspectj5rt and loadtime5)
8515100292ebd44e6362648caf1552e55ff9f590,test fix
4934819a8dfed2a7f31f23891ab433697afbb320,refreshed versions of .txt files for comparison
d83a207c957e9b6cfcb774dbd18cbe4ca8d2e548,new test programs for bug reports.
395cf569c1e790061db435be7209ee03f3ee82c6,bugs bugs bugs: testcases for things on my list.
bc66b0bac908d0d89a8b6418c366502338d91474,avoid unpleasant NPE (see pr110307)
5051f8e49ff9ca7009b9b9b2b510941e45389d05,for all the good it will do - i've updated the javadoc to prevent others falling into a trap.
f74a5c0fc3634f080b6a1714bb4d5b25df2a914b,"updates to reflection library (largely javadoc, but with a few small tweaks)"
e21bf1e36e46dae8c49d9d83bf810747ff56f0a9,test for pr84033 promoted from failing suite to real suite.
f27f533d1a9fe18634aeed8e49269c80f9ba2f00,pr83717: Dont expect to find source locations for type mungers if processing code built with 1.2.1 or earlier.
c86fa6de889e521ebe8224d1a7579269c53ac357,pr83717: allows ITD incremental compilation with reweavable.  Also commented some iffy/complex areas of the code
0fae66242efd3fd91dc7ace349cdcf7e5ebc2ade,completes all of the MAP bar ITDs
45730680627912726919028374403612047c23e3,Fix and tests for pr77269: incorrect structure model for inner types. (Patch from Helen Hawkins).
1ee6fbfbdc453e0d9ba2ee1e2951499f0fb9fef3,rebuilt post fix for pr110906: varargs ITD
32a02ec2a3e15651249d5d7cc5f63fa409468b2a,test and fix for pr110906: vararg ITDs
b305f9ee512015657cad0ea722b8180d884b1f72,itd support in the MAP
2b0e6755030eb378e612a00fcb80d7bdca2c55ee,test and fix for pr111481: varargs ITD ctors.  Patch from Helen Hawkins.
760ceb8deed44cdb6f0cb8624bfc5764f4a8037e,final part of fix for 100195 - local var debug info for inlined around advice
451fea8a2f9b3640d6c133c3f01dad8b9a78f72c,completes implementation of parameterizeWith throughout the PatternNode hierarchy (enh 108117)
12e6334bf5f77d7c3bc2e66eeefa105f0507334a,"Let the bug floodgates open, reweavable is now default (pr91417)"
8d098f969f5ef67fb15b2b56f44bdd21f7929bc6,testcase for pr85132
727b0f5356e50761530655b52cbc0a96aff75c05,testcase for pr92837
aced19f8d64774cb18d33bc2252511f5a02ce53f,"some abstract generic aspect tests, not yet linked into main suite"
ab6c7a562a887b70c6b5ad0ac644e7af58394aa3,"Fixed Bug #56779: [ajdoc] add ajdoc support for inter-type declarations and other declare forms

Also fixed ajdoc tests to run correctly when executed via RunTheseBeforeYouCommit tests (previously they were not being run and silently failing)."
3459ad57fc5af1ec01a0af3235775dfc9086ae7c,"these changes prevent us from forgetting the interface bounds of a TypeVariableReferenceType, and from forgetting bindings when parameterizing bindingxxxtypepatterns in generic abstract aspects."
217d42e730871419136329e8d74df332c7541c75,ensuring that this project can still be built at 1.3 level...
fd21ab7a44ce8b34ad70c0d7595b6b440530fcfc,Fix for bug 111738: packaging src for new modules into src.zip: from helen
304a1fbfb42b3c48c33a2136482c26141c73f0a5,organized imports
c53508700eab4ec1336ff60101e98aa42ba180c6,"testcases and fix for binary weaving ITDs!!!!!!!!!!! (pr85132, etc,etc)"
671e1194f70d2d092dd2df035cf423ff0470a719,Updated ajdoc projects setting for 1.3 source compliance and 1.4 library compliance.  You must now have a JRE14_LIB variable set in your workspace.
75f50930796059524f6e3435037fd3bea69503d4,fixes for generic abstract aspects
d8db661b5d5804a7d544cca2096c4cfce641a154,tests for generic abstract aspects
8f53aa5b42eced36b473eab298c7e0c6be41f843,testcode for bug 111779
d7625fa4436befbbae170aec577cccc344705b91,testcode for bug 111779 (commented out for now...)
71aa3b1f58a3849579ef3a8d990b600e5595ac2c,change to resolvedmember serialization (to support varargs ITDs) is quite serious - major version number of attribute rev'd to 4 in this case.
bba983e0afce48d09316b46a72dbe6d2ae4c14b4,ensure that the javadocs for the aspectj5rt module get built and packaged too.
cd15516ae41d2c559e29cd27488bf571920198c4,source locations are always written out now.
074261689aede2fdb288e2fe2615bca466cfc098,organized imports
0a69e42808527ec7daa32ec2d4bbf183ca8b4f4b,generic itds - see pr112105
1e815517b12de774be8e2321494a28f9f230dc0b,update for LTW and compatibility
ebf72b1f8f6266d6bd4647c9e020a84055e931f8,update for LTW and compatibility - start with exact copy of adk15ProgGuideDB variant
473a162b620adbecd65d0c42c91dc119901fbd52,update for LTW and compatibility - minor updates
4286646e240114a5fc2010ece15960e206ba8006,unique id
3eda2272ac38529b540c99fc09b771f0581e6e73,update for temp fix 99861 for Ron
9736c6dfa2019e888def460bd26b0f8e9362103a,"""ajdoc"" for ""aj"""
9f872345c79a562aa5029e746c08b28ca7c664af,"named sections to avoid generated names, and omitting incremental as broken for now."
5199402ec6034c0dc8d31c64549d5365d96892f5,"generics, compatibility, reflective weaver"
58816664c2ca7f26c613563b42bf9d681f85fa92,omitting incremental as broken for now.
bd5acac2ea98c79c890b4d8b681c1ec9ae3b4b75,/home/technology -> /cvsroot/technology for cvsroot
04e8dca2fc16f5f834e124b7abea5847d90c3366,Fix for 112243: incorrect entries in type map.  Includes fix for this case and guards to give better info if it ever happens again.
7308e33ac72a6b3cb602912c948f8403cee32119,Added Cascon tutorial and directory where we can archive tutorials.
c56d84b2235065fd401f6f105796dc401d8c9e5d,fix dup entries for target when assembling
3d013831856669ebf70bcf8fe204069ce16275fd,method rename - fix dup entries for target when assembling
2a5c822a59d80966e59c20de6585c68ca9db6397,test - fix dup entries for target when assembling
a3520ca7ec5b98b3b102fbd0226f1a887e0aad4e,bootstrap jar - fix dup entries for target when assembling
51a0fe4edd56a626ef5570e43bd2225be0dcb4dd,Fix reference to static method to use class rather than instance.
8982544f13eb5cb082ca19db2bd2c5f77b1e5965,Code for enhancement 107741: Updated WeavingURLClassLoader (thanks to Matthew Webster for the patch)
4aad0473b4681fab8e2f73515c48fc30943fc847,pr112529: better diagnostics (I think it'll still fail tho...)
bddd3ad903c3e4ecf20272def9af2c979035a2dd,pr112529: better diagnostics (I think it'll still fail tho...)
999d9b0c88d4cae8f94025a09641343714cf5d83,pr112514: better diagnostics when class format exception occurs.
62d7032f0a60ace56fc3589383da7989620d55fd,spelling mistake corrected.
7e397dbfae904a4cb9d9e2fdd2f08d5361b336a0,Fix for generic signature parsing - see pr112105
51b0f6261c8b20d424bc7d2a69dba17976894caf,Updates for generic ITDs - see pr112105 for a description of all changes.
c55036f1d4e95a9e75a10f94185aded6cc629de0,Committing new builder name ... no-one will be using the old one!
8ec88f948efdf2ed576c4c286817a797f2e7be5b,discontinuing test if weaver build fails - not the issue
332a5df39711d17d13ef2c87fdaba023d4869538,"Fix 107299 (windows full but not absolute paths) by not prefixing files that exist (and don't need resolving). Tested locally, but unable to make a portable test.  Will cause bugs for .lst-file-relative entries that match user-dir-local files."
9f651ae391dea61c4a0ba903e33e8fd5655d98b1,Forgot to limit scope to full paths
eaaf30a16026a8cffadc08b7eab3445c17348620,testcode for 110307
9d4353100afe702ed324dcc5e297f1216bc08caa,working on 112602
e1537b247640bd0fa3bb8db2616a890b8be9ca58,testcode for pr112602
0b5a5420704f7e32509fffaef66d8c94dcedcf17,Fix for pr112602
bb2d44016148994e99f8a2389754b69f18b710b2,"implement @AspectJ ITD @DeclareParents and @DeclareImplements
changed AjType as ITD field is meaningless (as @AJ ITD is interface driven)"
257e39e557a0ca5f4a058726b6ccc72fdda22397,"polish for last commit
(implement @AspectJ ITD @DeclareParents and @DeclareImplements
changed AjType as ITD field is meaningless (as @AJ ITD is interface driven))"
b31cc05decc08480b083c25d4d1428b158d115ea,Fix part 1 for pr110307
1ea4bde16178e7226b07b942828952ed19c01cd6,organized imports.
65c2eca9149bcdccfa09cf078b364d750b109933,Fix part 1 for pr110307
891821ce61818e6aebd82ab3cc59f6ee094e3b2a,due fix for @AJ ITD annotation copy from ITD intf methods
04fdd0097b8a915fe072aaa1fdae96cb186dd070,how many spelling mistakes could I make in one comment?
10e5c437ed35106c8b4827718b756b23ff3eddc2,see pr112105: parameterizes a generic ITD when looking at whether abstract methods are overridden.
af85aef2316af6bde178f2fe356b6ab65d0b423a,see pr112105: tidyup
03216706db9c7b33c60d58da09f5631b3b2f56f8,see pr112105: can parameterize taking aliases into account
96e89dadd94df6a1af23537e205944ed7d20e209,see pr112105: delegating impl required
447a7a1842c1be0e31245cb3cfa1e3e82e939711,pr110307: testcode
f287e3bc29359ff158175121370b5a2e2bec52ca,rebuilt - includes DeclareImplements annotation
747be1c91a87fce1fd6cf93f1d02a394e8c0b8da,change to itd ctor serialization - quick rebuild of jars.
6aad8a2e7816dd7a70ac16b9845a9989751de73f,tests put back in :)
ac04dc5f2087f1ed2d874c4ad83c88e4243abaf4,slightly changed parsing test.
f303867ebd5f697256407e8586f688ff8f979353,ctor ITDs now remember tvar aliases (see 112105)
ec9a49e930404239f5e681c133454f429fcc1ca6,change to itd ctor serialization - quick rebuild of jars.
ae612d9752200a3784de33ea6b79815e77aabaed,tests and fix for pr112027
51a117846c60df84bd6b368cd2297c8ebd8f2cca,"due fix and test for @AJ ITD reweavable, serialization of the method delegate munger"
31566a154e242f4ee5caa1e262e44dc5a6b581a0,removed jdwp from test for CC
abac6583b34ca2f34ad7c08717fea228c35709f3,moved stuff around to get rid of the annoying warning about foo() should be called statically.  I couldn't just 'fix the program' as it is used in that form as input for a test - so I just moved the code outside of the existing source folders.
b8915a4c9647f6021578adba01a2532ec23f1148,generics tests revisted post all the recent changes - more of them now pass!
745b7b93661f19d37b79c87081ec024a493d00f6,I've tackled methods and ctor generic itds - now fields.
31c2e3f98737cb9cb2923040d2fd12784785a671,fix for odd NPE - don't know what this readAspect goal is (javadoc welcome) and thus if my fix is ok
0526a766cea15bb99d817c0cc7126ae3ebd9ec68,changed the fix - it didnt even compile on my machine without this change...
410a476d2dd0147787636c4c7ce50659bcd290c0,helper method
a49c466ae9a594d2c2a4b9a80ce0d5fb830e5249,temporary removal to get a build through.
ab8ad33b2084f275fd59f177173ddce544b3e8b2,serialized form of ITD field mungers changed (includes aliases) - jars rebuilt
73b22d28e29ed9a4bb5ef2325f9b91dc3b800e33,more design tests.
d1ad8bab58b5526ef8f8335f1f4f914d7a81b3ab,swapped a letter
a07fd2951422464096ce02a682e8d02be17353ff,Changes for generic field itds - see 112105 comment 9
720a6d9d5c1900b79a91d704af8c3973f6165e0d,Fix for ordering problem when using generic abstract aspects.  Fix for crappy code (of mine) in ResolvedType.discover...   - see pr112105 comment #10
e2b7b8b307e3fe03d8a329b08ffb9d8a0e4e6c27,provide access to the sigpattern (Helen)
f06df41e4038bbde47a9934b240a3c064aa26099,test and fix for pr113073 from Helen
6e337a8e27541f3223a5312bd47013f195915be1,*Now* we're moving - more and more stuff from GenericsTests is working :) see pr112105 comment #11
3021284f5d910a406d26a01ce836bbb5f5cd6bfc,test and fix for pr111915
62a4476ca3ff54a75a1b435d8dfe49a0e29cbdc6,docs for @AJ ITD
5e17799ef005829b992198048e4b18abff288f78,weaveinfo for @AJ ITD
1232fbba13b21df11d0a9c58a04657441c447f98,"fix issue in test for -1.5 and @AJ ITD with @anno
impl error message for reweavable and not declared in aop.xml as per David Knibb patch, #104218"
030288930ae5084f44ed8cc1859e46c78a08ae84,complex aspect!
aa26241fc32e53774425373006ce8231bb15a88c,"test V for generics, 4 to go."
53f0f224ed33a2f43cb2f75601777e9cebfd4eab,added if() expressions to permitted scopes for thisJoinPoint forms
822751c24272c84bca7a3121a165de163efd436d,testcases.
70888ddc862b717646b236db2767e11a586b6157,perf improvements from Matthew and Ron #113511
17d987fec6ed69281e8427b60c5cb4d9cd305b0f,"ensure that reflection based world can cope when given a java.lang.Class that represents an array type (such a class has a ""name"" that is actually the signature string)."
bd951ed3eaf19b17ac1b1541d6072246a21a2ca8,"added a test to make sure primitives work (they do), and also tidied up the array test in ReflectionWorld"
76ebbc76add2abd815b3a8b5ea0beb11c94c8c49,"concrete-aspect impl and doc for LTW - see #95529
pbly some issue on abstract @Pointcut() in ajdt core - fix coming"
e638a272e0d7e886bdcac33d7ca9fafa69c1b278,some bridge method testcases and impl for 108101
cc6862f2b54c3333d645a0efb28f5366b0a2bcc3,test and fix for 112615 (-XhasMember not working if passed through AJDT).  Patch from Helen Hawkins.
e1d674faa6a8f4d3f9ca051b88aab36d635eaf1b,ajdtcore for abstract @Pointcut
4bc9d287704b1ed797d92a2b19dea6b0f82b8f5b,change to override check.
808a511b8f00f1ea3785796410b5f7c273e7af8e,"fix for #113587: when aop.xml include/exclude is used, javac @Aspect are not passed thru the aspectof munger. Added custom logic for that"
56766b766a7b1f8f1b3b382bd5c586881738dc60,"errr, org/aspectj/lang/annotation/Pointcut was missing from one of these, causing tests to fail. rebuilt and checking them in again."
ea305990eec2a76cfd286d060b52cab76f47def6,pr113630 testcase added - commented out.
da73b475cc03e7fd8553f2091911ce9b066da5ac,"detects starttWith pattern in aop.xml include/exclude and do fast match
avoid type resolve to do aop.xml include/exclude regular match but use the passed in bytecode (else issue with Stubs not on disk as f.e. in WLS)"
1ad6070a3b7e0b67b89e74874af6876db52b5c26,generic aspect test W
f98b4943de0f745a88e124b3ed702cf4edce841c,organized imports
951a2e68c3fd3aed4cac2e0f42a01ba8d6ff1abd,organized imports
7251a5b15686b2f6002a154a722ba2ecfe91857e,generics test for ITDFs
06211e403bbc4301440abae5aa98bf4a85e4cf61,see pr112105 comment #13: these now use the aliases correctly.
86729a0918b5107c5db944ba068ee90eaeec5929,see pr112105 comment #13: new and modified testcode
290d8d1c6010ea1040c96337ccab0bc5ffc954fb,see pr112105 comment #13: copies type vars across and able to create bridge methods sig.
274d6a91efb297b36fe4d2d9f5d002c5705ba46d,see pr112105 comment #13: uses new declared sig support inside a munger.
1cd45521b1c9396fc46d44b1b469146f27eb46b6,see pr112105 comment #13: dont forget the tvars
1f7ff29c7764f863e3c0217d5f106b32aec0b2ab,see pr112105 comment #13: yey! use parameterized mungers when applying ITDs
62b26e16ff7a228d451986cfb6df20f9f008cfca,see pr112105 comment #13: improved (slightly) code for locating annotation holders.
8287abe6bd065542825c32a427ad357b95d7d0dc,see pr112105 comment #13: bridge method handling for ITD fields/methods
f07508934e02405e2645d99bd094a61d90cf2bea,see pr112105 comment #13: naughty. made a check configurable.
005268b02fa838a0f880252ade50976af35a7d43,"see pr112105 comment #13: more helpers, for itd support."
e7abe5fbd4b27fa87ec2e1f3cf3598f50bd4d32a,see pr112105 comment #13: better var name
58a9e244e9cab502ae6eb7f6eb2677e148e330fc,precedence doc for concrete-aspect
29bcce87bdacd80a3609410f3e1bfe198c11d050,pr113630 - new message.
81f8e0326c6db86ea236e281e8a58ac62d21a702,pr113630: testcode
f202157faad53d040e13da63ef7a3a4472a72ce4,pr113630: fixed!
fa21e62717f87e3f84b74dcedc36d79951ec0751,impl and test for dec precedence in aop.xml without extends
6ab78ee0e1d49a0e3f882ddf604061dc572cb427,test and fix for pr113447: from Helen.
2da9b31be2c1e5af9d33b25be798f3a47362fb88,testcode and fixes for pr99191: thanks to Helen.
426188d738b9dfbca6b75f68accf853b76dad1cd,matthews generic aspect: testcode for pr113947
ae3e83163186bb018b5bad55771e6384fad52802,Fixes for pr113947.
8cea30fedf7a74133c67623ec9286ac9578c9a88,test and fix for pr113861
3ad7a2ca28b78973741db19ba78c60f6feb81f43,naughty - Andy broke the build!
8d479b227be4f8228265f37589b565b78f84d523,hopefully the last of the array gremlins in the reflection based world...
794f9b5eafe34a7dbb48cda3edaec59ff57afef5,#108892 cannot reproduce: hierarchy of aop.xml accross classloader test is fine
40d4d6d294d42992bf7c3ebdfb8a8395b074aabd,moved to devGuideDB/ltw.xml - avoiding xml errors
7d5000a3785da1d615b5c5ca9ce584f3509f5db4,"reflection for 1.5 API Method.isBridge(), unused local"
260ff1798e0aaaba8cef2c848578f5817d072abe,lazytjp default - test code
b239073ddcd47300e3fc0cdfe4815a011602bbab,testcase
4dfd580d0a6c5c6d67b52b262c0c455a8951027e,organized imports.
70d2064e2c213077717844d66fedec4b2d7b9591,modified type parameter check to allow co-dependent generic declare parents to work.  not quite right but a little better.
bb49bdfe8c1a11bc48df7776488cf3623f278dbd,some nastiness removed from the testcases (co-dependant decps) - see pr112105
dd1533a8dfd689aa5b36cb441380419c98949df7,new test
2483e609ca9c0d9f5c43b60c0f32d7b9cdf51adc,test and fix for pr114343
98d8a582fcc18228e5b776532ba522fa96a6b563,helpers
32ed1528933aac1798b285b5af22de502fccc496,pr105479: reorganized testcases.
27efd54991981e712926503d0de99cbb34658566,pr105479: new testcase
7e005f179e5162595692852a8115ef2af0301357,pr105479: fix.  And so it begins ... the dreaded complex bridge method mechanism. (pr108101)
b83d91aafe4de6362cd4f9bc30e92e80d392bc20,wasnt setting the defaults if nothing supplied.
bb9d2de08e63266a93ac1167f87b07813561d559,pr93253: lazytjp the default
abaf7e1b8f043d3ae08ac6ce1c64cda6d5aa212c,pr93253: lazytjp the default.  removed mention of lazytjp.
62d16d52c25f7b5ff389ee2de603bbb3dc186c8e,Matthews patch for 113510
ade32bc38c17b38811b617f54828feb43a4b7048,test and fix for pr114744
4b5e76347445be5180616f5008e52328948b6cf5,fix for latest variant of 114343 (see comment #5):  around advice on method returning type variable.
23f126227121adeaa5615cf94d8afa57a577120b,test for 114343 (see comment #5): another potential case
e72b0518a145edfec0dafd3a56e183b5cad2caae,fixing a problem that services in the debugger when toString fails NPE!
206180218acec863d08939925c7012243b95d55b,possibly useful method being added ... investigating using it for 86903
6e423f15e29896cf3be78b37c72c3b422e171c71,test and fix for 86903
38084566dbf9d17cbe375f7fdfa14a821e3d7311,test and fix for 86903
9025e8b4185cf965d51e64b1ed0aba7e43d33842,tests for pr62606 - itdcs don't run field initialisers in target type. Largely updates to existing tests to cope with new Lint warning.
3d6a9bfbec123c41596a226598de8e07b83c1fc0,new Lint warning for pr62606 - warns when an ITDC does not contain an explicit constructor call.
ac15d777ac6d2604317976926007e8bd70c64656,make sure the harness translates path separators for those of us working on superior platforms ;)
97b20efcc65e4ffa5a6b027fb4d6c575d1857879,fix for pr62606 - raises a lint warning when itdc does not contain an explicit call to a constructor. Can be suppressed using @SuppressAjWarnings
7d4cb8192230085a1b7ea8015a0379198d55e3ab,risky... what about '-Xlint:warning'
cea5fc1169f1052878f40da0bdc24fd02b02258a,bug 102479 example for getting messages from ajc programmatically
a3e8bb5c97809d468330a566d7e548a68b222ad3,"autodetect java version and configure world accordingly (now that aj is stricter about not allowing java 5 features at < 1.5 level, this was needed for some LTW tests to pass too)"
c4ce2448ee0ad553d6768a22e82bba7f437a93fa,tests for 103741 - use of java 5 specific language features now policed at < 1.5 source level
a87f82dcb4a8f162a02992d89a78ec43b677fef5,fix for 103741 - use of java 5 specific language features now policed at < 1.5 source level
bf51fe3e3fded74ae0ba424fdcf8f07394e665b5,test and fix for pr115038
a7e13f10303623cbab5f84e8d9cecd882308b52a,testcode and fix for pr112476: binary weaving decp
f74be5e86f34b9ced867c4687da11caf390532a0,oops!
590f81aacbd8fdc9cb3aebef76a3f2da1034a7f8,add support and tests for isAnonymous in JavaClass
4cf9a72dc45e0842a9e20f7e212cbf173cb5a3e8,relegate adviceDidNotMatch to info for LTW unless explicitly set as an option - don't want this warning coming out by default??
c4c8b7f83e091e09662fec150f23c2d8ae44b779,pr73050 - added support for isAnonymous
78569b96815838515cb9c9bc8ab528149a89af00,"fix for pr73050 :- support for isAnonymous and name pattern matching that now only matches ""*"" against anonymous types"
6104d89dfa9af6f7f1f1853e04b498d5ea60a1c8,"tests for pr73050 :- support for isAnonymous and name pattern matching that now only matches ""*"" against anonymous types"
b943da4e1ea1e67a684ec23d50668fe28f8abe9c,"with the change in LTW to default to the same version as the runtime VM (ie java 5 in this case), many LTW tests were failing with Xlint:adviceDidNotMatch messages that previously were not issued. These commits sprinkle @SuppressAjWarnings annotations liberally around to stop that from happening."
21cf37dd535baf1b9977044ce4f05520538116ba,Fix for pr90143: I'm on fire today ;)
b8b6452001ef25a8f6fb4d49b0a0b95958e8fc1b,moved 1.5 dependency to 1.5 module!
85cde56e2795a70ddc79e59a74652b66218385e0,testcode for pr113066
e2db71535154c6564fb30bebf2f51fc321a94f7c,aspects/include handling and doc update as per #115275
e9e0a7be5be07919d74f7da12fa59232a8b81a1e,#114875 cannot reproduce NPE in @AJ abstract aspect
a625ea2ed4810fb5aa1334c027418d25cfb37834,fix for 95516 (-outxml / -outxmlfile) - from Matthew.
f00d694940fbb8999b63b90d357c8d8409151670,canBeBoundTo fix for isAssignable.
297b594087644bf3566a865584766f8410ca4286,tests for 112783 and 113066
e951f5240c0b786e7e2a4d1144de6e41744a07f9,fixes for 112783 and 113066
d53fe2aeac3c48998da570516a3d3810fb3a40fe,#114897 notreweavable is default on LTW - by Matthew Webster.
dc22a8bff03dc33d4b8743548a62076e949752f8,fix for 95516 (-outxml / -outxmlfile) - from Matthew.
6fd9f4fa7d87195ea7bc43152621b7241b930976,tidy up after finishing.
0b6d41c5a5a35c567f6ef391d4579c701d65d7be,test for pr113531. test patch is from Helen.  Currently commented out in MultiProjectIncrementalTests
e0289593b9be768233801ba10226534af617c19b,test X - matches the spec in the AJDK (work for 112105)
36b901060999ee29e90af7c547662b06208636ed,test X - matches the spec in the AJDK (work for 112105)
d49f6e706343426a09129dab321a4a7ff80491d8,Switch to using a parser that should be around on 1.4.
ad6c637955018901e060fb79966acddb89743227,bridging tests.
d67c9bf91013300fc5ade239cdc8e1814ed9b458,bridging tests.
67ec9ca9ab089690ab376f1ed75006143f26fb84,Helens changes to ensure these tidy up after themselves and avoid synchronization being a pain.
9fe6c2bc5c7d9950fc3edeadb0d9cfb8c1f28495,Fixed Bugzilla Bug 113554: support ajsym file generation for command line builds
4bd7c2a932f8ac03de53f3433d9995a055d23a47,Fixed Bugzilla Bug 113554: support ajsym file generation for command line builds
6a14356a3c279b5067819bb10fd520952d081278,organized imports
6cb89d22cff49645245458802aef0b623c8b6c7c,final part of fix for pr115038
481e39cf090c52f7a67956791adc82922ea8bf9f,Second patch from 95516 (ant support for -outxml) - patch from Matthew
9905334cb7e47e8c0fc78d624e0f8c06cd79baee,For bridge method support - make backing generic member accessible.
d9757d7c41bf2661455422ce3234e4794c9f533e,testcode and fix for pr114005: copying annotations to ITDfs on interfaces.
ae53e0442c32cdb4d37d46a74c2eed0fb8f795d3,patch from helen to ensure the tests tidy up after themselves.
1f5149913ee859e466602f99a210dd76e0ade8ed,"fix for pr112830, tolerate variations on ""aspectjrt.jar"" for Maven."
891dc1b9504abe3d85cebc941049a07ebe3bce32,some useful AST tests
c439e326284d2ffdf4898a50a3d0d5f6a6e99ef1,fix for pr104220 - poor toString implementations for adviceexecution join points.
f6968e6f134df55243c451e45c303600560e6d04,tests for pr104220 - poor toString implementations for adviceexecution join points.
7a1002aba3960caddb4c50ef7e66cc9ac6fb1f58,"tests and fix for pr112756 - use of assert/enum as ""identifier"" in pointcut expression."
0d6fb38c0e32052fb2f3b6ff3d9738e749299a3a,produce better diagnostics on failure.
ff4387ba4640a7f7988cc60b422ddde2c9268e8d,fixes for 91859 - enable us to preserve the set of annotations originally declared on a type so they can be put in the class file and we don't include ones added via declare @type during 'source weaving'
9af74082a57c07fc22f9cba3bb4601b5b78674aa,fixes for 91859 - enable us to preserve the set of annotations originally declared on a type so they can be put in the class file and we don't include ones added via declare @type during 'source weaving'
0f7cb310b399fe3ab9b9ed4fb228752beba00975,fixes for pr91859
e433d6704633b9c3293f1b4c8507592ad987f2b8,fixes from AST bug: 110465.
f8fea133e17dd468f37792bf8aae3829f7130da9,more bridge method testcode.
8152279f8751b7f3222705f4560837e72337b7df,fix for binary weaving declare parents that involve parameterized times when requiring changes to super calls (phew)
eea73ab03a62810a150e2b0f3018066313fc0f5e,fixes and some helper methods added.
4c6d0ecb0511f04b906a66e378ce5c76d403dcf6,organized imports
8965f8074211c53ba39127f22d079da102d2bd5e,fix getPackageName() to cope with parameterized types.
1aeb7f3ef5dc07595dc35249316eaac62c7ba144,more AST stuff: 110465
ed1585ae59552692c892bca34bd61e47b5da7f3e,more AST stuff: 110465
1cd86ff91ecff7901d5984758821b89df1acd3bc,tests for pr113447 from Helen Hawkins.
12b90faa3eb1ad3496d24605fcb0187e7a551083,fixes for pr113447 - dont do bindings check at each shadow.
7218c96f13f61055bf2952778fc0b44848e43663,YES!  Bridge method code all in !! hurrah!!  See pr108101
3226d27a82e968da0f04e6b4fb5a29a03fbdb0f5,Matthews patches from 95529
d7d5947ddd5a3b4f5c3bcaed6114b5445f0d6a01,Fix for 113118 - use the right method to get a signature for the attribute.
b1d058921b7d8bc44035bbb2c2b38627c09eedbe,fix for pr113531
efbf62be5e5732e14a05a8bbe509289c8f6167d0,fix for pr113531
21472d1c9b53e7d5b2f69942f04db583c34a0237,removed 1.5 api (doh!)
563ab1bc7659edf2d42bed64f131b2a6df1ac56a,fix for parser crash on erroneous perthis() - see pr115788
4b8bed7cff98b2aca5586e604a138c3674453c90,tests and fixes for 115235: stackoverflow on concretizing pointcuts (patch from Helen)
c0731dabc77601d0a4841a8736274afdcec20941,Removing 1.5 API String.contains(..)
ccd571e8b952c0b67d15f1d30d5a19f91b7e97ef,fixes for pr115788 - primitive handling.
132f675da7177a41cf0ebfe2f87eee1d68c9e241,fix for comment #1 in 113368
06d8ef35d6035a19671504d21907368150f0aa2c,testcode for 114436
e98ad2257a6cd99607f50646d9757ab25c150c54,more binary bridging testcode
318383d9219bbd35ed97ade06ffe3f2406237923,reported on the list - failing to compile - using ITD to override a parameterized method
40bf10f47746b3cd84f641d338ed72870b898f3e,improved bridging code gen - can cope with lazymethodgens that have no backing memberView
676aa089feb829d744fa054b52af39f83e22952f,allow for missing type (again) - see pr116305
8819e1a2f423da443b3bc3cac5a8b95e78f5fa3a,comment
fdfc78fba8bbc7afc8cd03e2cf11c3547c032b87,test and fix for pr114436
e8b6bde2173e74a5969162aee2de59eee9476456,Matthews patches for 115275
ba1ff19cc794b2f6d2e0b95f3f80bf13093fd5b4,"dont put bridge methods in an interface, you fool."
4ea00513761eeb32b3403caa1a3ba39f9218a839,matthews fixes for 95517
2e2f1c257506c59e030e176868140deca6cae13c,rebuilt for 95517
7860f9718fb7e1656b8b8ef1e8c533c0b260872c,optimization - don't put bridge methods on interfaces.
fabf1598298cb56705e20b4d6a6d64f5c72798eb,fix for pr116255
303571e4cc04c78440f06766ef8d211a7a5422ed,more tests... binary bridge methods and the one reported via the list which includes decps parameterization and ITDs
887fab820369d0fdefd14ef7cffe66014c1e6843,committing version with a main() in it!
abb5d6c097d8c0ec8f33dc95342732855148bb18,next round of fixes for list bug reported by Alexandru.
a7e84c66fc7ced725454c0135fffdb237c899403,more tests - for 115237 and alexs bug on the list.
0d52a36323a374d3ba32da3cbf765c01419d8667,fix for latest part of Alex's bug.
4e13e4ee390f65906c13f63c2fca29010db63468,fix for something Sian noticed.
608688ca74d3c19da3124a917c390232bca610a2,case4 of Alex's bug ;)
555eae61fec76c78376a76803cd3b67171e1ddb6,fixes for pr115237
a2fd71fc5098236847b6976ca49a731393cb0076,Replacing bcel-builder with bcel.  Should just export from weaver.
c7608950f0deb6f9951435f58209ad60aaf28e06,test and fix for 116626 from Matthew.
dd9a9b284ab44b14ea3735d2663e85afb861220b,fix for 116949
557f5b4676f6484dc9b43e2d1a5a8172ef76d5cf,"fix for 115204, 116890 NPE in WildAnnotationTypePattern"
b1a8c138a6af2d94747a66a03dc9249d9c5554ce,tests for 115252
99504bc120db0049fb441bb69b0f37a4a4f29cd9,fixes for 115252 from Helen (xlint on incorrect annotation usage in signatures)
522911ec81aeb3ec5b600939d3a2ee6e6297fd0c,tests and fix for pr116229 and pr116755. Also adds support and tests for parseTypePattern in PointcutParser.
5440ef30e462c7cb77dbb75c1f90317ab9edc8a9,no chained exceptions under 1.3...
490749300499a9dac9d290d32cb56ef37e13d74e,test and fix for 114875
6bda5d41e9a0c8a31a6675e8374cf45f25331edd,two test programs for 115250
6db0502ddfe567f53047f4af44a18ce6c03eee50,tidied up a bit.
50e0849b83e326ca262a7bc29c45eef2a4fc9c68,tests for 115250
6c48b83e22e125d99f8a8fa0e201482ce3d1650d,pr115250: copy params across to variant that we build
d10d611c2ffcfe98285e89052c72887d2f148a14,pr115250: changed parameterizeWith() signature for shadowmungers.
611a7dad9c073d9f85f2ccf361477129bdd81185,pr115250: allows for parameterized advice.
206ab1288754f4c324262667b936b2b0cc865caa,pr115250: doesnt attempt to create invoke calls on parameterized types!
0165ecdffb0551ae055652c4ac45903c0cbe7c91,pr115250: allows for parameterized advice and works with the generic form.
d58439272e0c8bd5d818c80161df9d0ba520e5b9,pr115250: new tests
9ed75a10abaca8a6c8569ead1b74eaaadc980b07,test and fix for 115607 (declare @type): patch from helen.
fa0d385efb794ade2bfd31c2f1e40f1f15927f76,testcase for 117296
2d0af56cbcad1de209d5432fca11c02ae8e26566,fix for reading in pointcuts with argument binding in reflective world - remember string representation before binding screws it up!
5947ce663998ee3a8f332586175d287ad3f52f65,test (passing) for pr113368. Tests for reading compiled pointcuts from reflection world.
e5c3e7214edf3cd2ec84bc1e2b20ba93887b013a,tests for reflective reading of compiled binding pointcuts + ron's bug
735d94f91a02e08bf5a1a86185b9318de4bd4319,tests and fix for pr114332 - reflection api not detecting abstract itdms.
554e73397c0b80ce32e56cf3adeb6921783e005d,tests and fix for pr103051 :- declare soft and adviceexecution
e08f73a4b32ac78362e79b4b49e8a191dfc5d233,tests for pr103097
007a8005e8ba974ac840f0e2dc31431fb7bf0951,117296: testcode
82b6ca01e289d309b1a38ad44fa4d552c4c6f5a8,made declaredModifiers accessible to AJDT
e549651eb81aacce53afc0268fe675fdd93051ec,117296: testcode and fixes.
a1e4d4694a330ee0f9d1700d1b38c606c2c19d44,"""Formals"" defined when used, more details on aspectOf(..)"
a5ac5af396426f2049abe52036748bd344a7d1fe,"117189: patch from Ron, tidied up by Matthew: reduce overhead when no aspects defined"
f936344ec38e6e0f677c8d5c7993841224e59f50,work in progress - not yet active.
ed85c8869de16ef225b5a98610095782b9c9e6be,fixes for pr115788.
ecdc282d48cd6e04d4ccd061e98b25edfa8df743,Fix for 117190:
e05df7e5ac7fb91031d8f98d4b93e361918e4b56,NPE fix for 115251
504e4300204475cef1254de5d1308863c43b26e7,87525 - new error message (and testcase).  Thats all I'm doing on this for 1.5.0
8b294d9e4f02625c4c3391612242969fb4b6be57,tests and fix for pr103157
11ab99f1c46007b084873d1050da2f9e78e43c82,test and fixes for 117681
81e6b60e4eabeaf322651941c65f9f24a0ea80a9,tests and fix for pr116254
a817aacd5a461ffb94416bfb3a44acc3bb05bc83,rollback...
a4caeb95261431c81f7beb0cddbff3b0865e614d,tests and fix for pr114054 (erroneous handling of negation in per-object perclauses)
5cba2054c0bbfb4bdf2f00f044e841741055282c,some fixes for 117622
86880f7281e04ed0c79781b5ddf2613821718b79,tests and fix for pr114495
3da3666d3cb57a6293a4d8aabf201ace00167045,testcase (commented out) for 115251
1fb3856f56027e9921f73c5c1ff5f2d187b2f276,tidied up.
96ff35e46ffd3ecf9f437465629e2ec1140c9267,"test against output dir location was unreliable on mac os x, now fixed"
76d7e83c7fdce7555ce9d9c6ca5bfaaf31d234db,matthews patches from 116899
3b110f784434ac9309dc0e37682335f751af7cc3,try this version instead...
f139242382c8ba330d13a93bd75bbef5c06824e3,fix for parameterizing reference pointcuts with bindings
b3be9410fcd333a516e6a220d30f9705b7aa9748,hopefully the last word on parameterizing pointcuts in all their various glorious flavours
6eb77c5a3b8328e67a047bc6410a858302a3c714,fix for pr117614 + changes to make cantFindType a lint warning (default to error) so that it is user controllable in binary weave scenarios.
5c1a75d0c03f86cf213e3f962b318c967e91910d,this commit eliminates all bar 2 of the 60 odd compilation warnings in the ajde module
e7ca53efedab7db09d2079b4623c69aeb06361d8,"test ""Y"" shouldn't have been enabled yet..."
9f5c8ea89b848be4f0d8a88bbc595dbd84d0846d,organized imports
749461102f3d5b4d89cf0b1ad744be97e161951b,fixes and improved tests for 117622
45c56831ac368e64270c87e781981d482509a888,new version of GenericAspectY in light of our learning experience wrt. itdm matching and execution
27f3f0d3b25ecf86880416a509f39e537d4abc7e,last bits for 112105
361757b0fcfc845efaa75ed062e9a6178d050764,"testcode (commented out) for 112736, 93310"
dd1c1b6b4a127a9bdc51f958ca05c3260fa5c64c,ensure this test works on non-windows machines too!
e988530d35b027b23a92aa964b0db686b6c8ca07,tests and fix for pr115251
c860a8664600e46d5b78976a59125abf0bbc7f3c,eliminates all compilation warning messages from the asm module
78e8ecbd934a4fbfe6e2776b59a4045b0c3e8e80,eliminates many warnings in the aspectj5rt package - 10 generic related warnings remain that I'm not sure how to eradicate!
0715d5c3f0bcad4eabe3a11ecb4e7f8a4079fed3,"disable warnings that we don't want to see in BCEL code - we are not about to make changes here for the sake of it, but don't want to see the warnings either."
6ba566c4ad0545ca44a00d569780d1bbad49e3f8,eliminating compilation warnings from bridge module...
2640d080e67def7273e9531b0a8829e096f69e1a,eliminating warnings...
249d797a9eb4cbcd7bfdc658e128770eaeacc400,eliminating compilation warnings from loadtime module
3ce492be631f9f598bbf9d1e045e4d9637885bf1,Matthews changes - enabling us to see bytecode before and after LTW (bug 117854)
c3bef72dcac14398332abde6dfd5498eec24b042,updated tests and fix for pr116229
9fbd6fcb28199ebe2f03332691ddf887493f87f4,matthews changes for stream redirection 118083: Also I've made verbose FALSE so you won't see too much output.
0ae3db5f546d5e050183dec343449ced2f936a2a,"changing a generics cast - the eclipse compiler liked it, but javac on the build machine doesn't..."
133f154fae55a386f7fd074bfa1d6da02802002b,organized imports
50abc1d34b7685a08d08302fcfbf15819ea8d8c7,removed - to be put into AJDT: (see 111317)
ae62613a4a5ad79fbc18498ef3aefa170656644d,rebuilt without jface inside. (see 111317)
508dbcbc90bc7526fc8cef9fe924a97c166e5a0e,"tests for pr11280, update to reflection api to get classloading right for test suite etc."
bcabce0283aec3c44a99000b3970bd880fee72a0,test and fix for 112736
340f99477cb028f696760f54ebaaf91f840d9eca,pr93310 now fixed !
97b5f52b520f534ac712d1ce3cff7b6ed5cca14f,fixes for 118192
8e14e21ab33d44d6fcfdcdf3576569e1e9e69995,horrible work around for the fact that the build machine runs tests on a 1.5 vm without all the 1.5 aj libs present
b6980f2f7b2697e41b454a16d3a7bd1e0135aa8d,Further changes for 118192
385d9ef905eb07bdd37fd25887ad0a8e69e06f45,code for 116679: targetting a 1.2.1 runtime
3adfeac38184edef2432fae2d2a552def176a243,more slight changes for 111317: ast (raised visibility of some inner types)
d1a295c3205f87277ed9ae5b3dd70ca50e3a806e,fix for pr118337
7384fe71aacd462c94b1e4e73e961dbeba7a19fe,updates to advice annotations to allow specification (and generation) of parameter names if needed
ff77a07113583853f12c38fe07191e12deb05f48,new versions of aspectjrt.jar with annotation updates in
7cf0d6499ce9894015f192adb68cac3e5501148f,"when generating advice annotations, populate the argNames attribute"
bf97cc20ba2315b0e72b239f66c20bc474984789,tests for parameter name generation in advice annotations
20e7098a0568e6192fa0e8d92dbdf2d2cccb86b6,a way to run the pointcut parser tests under 1.5 and have the weaver5 types visible (not linked to main suite...)
1fc93054fafe93774636153f6772d34626be67d8,elimination of unused variable warning
613b1c2ee5e6e4d91c9c3b633c74b0465229f59c,elimination of compilation warnings
d3802ca83f41c29775de2fecb3a9a8a3bcba8f4c,taking out a failing test that fails due to classpath issues on build machine that are too complex to resolve. Facility is also covered by unit tests elsewhere. Look into fixing this post 1.5.0 but I don't want to tamper with the build and test scripts now...
c88e6bc262b9ec81625c28071989cc59862cf5e4,helper method for determining target ajruntime
fcb16b97f4c2ca11e3f02b5e2b396932764b010d,More fixes for 116679: now copes with the enclosingSP type that we introduced for 1.5
2c8190702e95baf0489e384767c816f30d870c86,implementation of new xlint: pr111667
3d3f0631284431d4ad88a63fcee668597e1e4f5e,removed unused import.
551b9ca14c28b843c1dbbc14a48427bf4bb9f097,fixes for 117209: ensures proceedOnError makes it across in the case of AJDT (also -Xajruntimetarget...)
4da88a25f937a55568a0436a0354950343c3b84f,testcode for 118599
020dc6e3132b505fa928f9ce3c11cc6f824cbec7,testcode for 118326
8098a25607df730cad497c286c9674609b1d3144,fix for 118599
8ec833146a26d4952177d8dd7bc368da583b5c8b,tests for 118599
a75b7fa48b233e41ed7aeb7d50fbdd411eadd8e6,test and fix for 118781
15941fb2e3b8fe79e48008030d2b7b0e6c3a302a,updates to bcel to support isNested test on JavaClass
5d7f95e4ce1074a11e0674ade94fe96807624165,updates to name processing to take into account nesting on $ conversions
99a8e7648584be91f418fb26714d25f402bfaff9,"support for isNested, and use of that property when splitting names in WildTypePattern"
6d94d09c4bba8431d810019fe09e989fd026c3d1,test and fix for 118698
378b46a17e8411ec22eec2c31d36dfca3ea86fda,removed 1.5 api - adrian needs to look at the proper solution here though.
1b111328220bc522194ecc7361f282d169d781f3,fixing the unfixable: 117882 incremental dec @type
2bed6a1a75aedc7ae198fae0eb22485663109f2e,fixing the unfixable: 117882 incremental dec @type:  made two methods in Annotation non-final so they can be overridden.
533d367839276941046bb119ea2e0f3f873fd642,fixing the unfixable: 117882 incremental dec @type:  testcode from Helen.
3e07ec315b7c0dfa28a1f42933875486abcb9c7c,testcode for 119019
ff57abb3598f3922370eabfbe08a6bc8655bf6b9,tests for 117882
b17970f20c9040c3455a02b353a8e7fbc1914024,fixes for 117882
278718a6d3bd0c15ebdb9fcf149811575fc99454,fixes for 119019
5611db4f27a752ef5b65f61b614eb3d5ca30bb01,"fixes getGenericXXX methods in Reflection-based resolved member impl, GenericSignatureInformationProvider allows this to work across both 1.4 and 1.5"
d43e74b5c919ebaef67a4b7551a464b8db3b289a,tests and fix for pr118149
3c8832b332f94bc05e7db48f414cc4a537407eb1,workaround for jrockit potential bug (see pr1054290
58f365c7c52c5e367cad18a4819f7aef77404fb6,first part of 117854
f40d02927635b6171083229fe6d48f326da06cc7,"fix for pr117854 - first part, broken switch statement."
1e1bbb3f2e7aab4757d715d76730cb68cceb3b87,fixes for 118715 from Matthew.
c11af72b292ae060578c8649c969307595c3e25e,organized imports
6e8bf5292686224d2110cbf8c2184e2568bcabe3,tests and fix for pr119352
d59d098f734532ed1461e56a2d8321dfd25a6585,"hmmm, misbehaving in the suite."
3425506574d5bcd84e35c57434a7b9e2225b40f8,addressing 118877
a7bc19f804487d6160c5f29eec94e2442e38957e,test for 119543
283d2cdd5b5d8e38c63694597d90561c50400c18,test for 119539
cd49da26792c530d2a8c12028c7c1d7832ec6ad2,"test for 119539,119543"
9b8a8df4b408e5a10331f7e7f2ff64a4e4c1e1bc,"fix for 119543, from Helen."
94159f9e80233497e02899c91a126ea5a3b605cc,test and fix for 109614
f5f36e2dd0f1318f44397f691c480967c57dbfb4,testcode for 119210
8b87db5ac266514d35e1632546d6888e7ca2f6d0,fixes for 119210 - allows for autoboxing with around advice.
b52515fc2319ca34a045a0823ca0f5c8ffeaa2de,delegates modified to return the same thing as BCEL.  Ctors have the name <init> and a return type of 'void'.  Fix for 119353
ca47cacdacf7da5789446bb3ed9b70e26462206e,test from 119570
5f8d2cdff480ac9d04cc73a4a69eb11563a0bb01,test and fix for 119451
0c8c0a3d21365eade6f53a0484bba71f24637a65,Some updates for 118754.  The various places that were checking for 'MISSING' now call 'isMissing' if they can.  I think this negates some work Adrian did with introducing MissingWithKnownSignature - but we have to make this change for LTW to work properly.  Someone with a bit of time on their hands should go through all the places isMissing() is now called and see if the check should be 'isReallyMissing()' which would allow the MissingWithKnownSignature to get through.  I will raise an enhancement to cover this.
979124d0fe6ac23df1dd5ee41838056bbaed6789,#120351 cflowbelow @AJ and binding
96c97433a198c2960be1afc282081886fb84bb46,tests for 119657. from matthew.
1435cd1f6af805b0caa3dc786c7536f974023e80,tests and fixes for 119657. from matthew.
c31c8198b4a33f5319bffac5fa5121caec341aff,more tests for 119570
c88fdf16ea84fc920c2f353a52d69e1ce6f73d25,more tests for 119570 and a fix for a silly warning that comes out.
a9abf53e92cc92a49c0c3924ad076c4f37596c0d,fixes for 119539
354653d5afebb6dfdb631cadeb2f4474d5371107,updates for 116679 (targetting old runtimes)
9edb4b6f9e8ca59b309ac382e6049321832d0700,fixes for 120363 : from matthew (include/exclude problems for LTW)
bf17d4c5db27e8fcc80e9e3de7e8617317cba715,linux fix.
3ac46270398a3e9ddde620e03c9dc2123cbe78d0,fix bug 120401 - adding signature to identify exception message source
107bdfa4da65cd983fcdf92e9b6a15341940e304,119749 test program.
df3adcd1825893130a1873dfcad1bd82e5b9f70b,fixes and tests for 119570 (member type subaspect)
3339edbae5d6891cfbde6952329a4ff2808a7901,fix for 120474 ($Proxy)
47d86c624fa68424fb0d4d440eb188df77664c0b,fix for build prob - rogue warning
3eb0e5addb26cf4f8a9a66795581c01a60adce63,AST fixes: 110465 - from helen.
ae500c6ac89fef8b7bb6cf4bd2a9cf1ec16cdd6a,test for 120521
c0fc8fc41653160c06bdc7e8995a5b3a0049ee3a,fix for120521
a29212c28921626874bc1c6cbb38ddc72c773280,test and fix for 119749
ed3278d16901fd605460ebfbc119e861bf114c46,darn build machine.
9d32b76c9b48e6a2593bff77dc120eb8c5f17cff,fix for 120543 - from Matthew - includes datestamp in weaver info message on LTW startup.
dba2ee75f6cf5ee6de9462cb38a669bb488f2257,permit extensions to pointcut designator set when using weaver tools API
59aa053c0478ac23fc9eff5139c8649164e41aca,unused import.
514aaeaf764c99a54df01e46355d8c64b1696de5,1.5 -> 1.3
e6df15a4ab52c0448fd49335b0b6cf296cd955cf,added skip test check to tolerate funny build machine behaviour
dc8360ec2717f4c54d1b2aa43309ac1d2807f7fb,tests and fix for ITDS in AjTypeSystem
30718de26e1603f038027dfc4b1de4a42b61ec90,testcode for 113257
bdafe3184768eb8b76ab653ef2e9f57b0399ca07,fix for pr120693
40f0b2a58c02bb3071ab7ddebfae056e9fe35764,fix for 113257 - modified rewriter - not perfect but passes the latest problems.
e50bf403b26657b4b39a6be0e34b7170dbc788a9,fix section on annotation inheritance matching
b7929e91659708dc27141f587ad236af7bfa8287,tests and fix for pr119749
588e7b91e892db8db779142184ae3cad169c4a11,fix for enh 120743
7de52b422183b16f37dafa025c6307d503cf233f,tests and fix for ITDS in AjTypeSystem
9825192b0f54682faa39b7467b55372b679db544,"fixes inefficient ordering of tests in SignaturePattern (that I inadvertantly introduced earlier), and corrects @DeclareParents impl in AJTypeSystem :- fields should NOT be shown, and nor should non-interface members."
39b577866fda7b892a0d192282fcd6a12ef7d070,ensure we don't re-attempt modifier matching when walking up the signature hierarchy
bb8a6c47fa01cd869076c39d6f52ffde83f7c3a0,test for 120826
7005a9ab425558c7ff62a893b528748274b5d3b4,"fix for spacewar, and a much simplified solution for pointcut rewriting of a conjunction of disjunctions"
2c59ee16ca8454b20f538e7ea8dde4e7b829fc7c,fixes for 120826
332eef9ebd79970f5ac2fe671c4e0efdce85974a,test updates and the fix for cases 3&4 in 120916: Jrockit test failures with RC1
305786094b456b3d17b0d82abe4ab6fbd4f870bc,fix for clone case in 120916: Jrockit test failures with RC1
f5104819f3199b747ce9a67951457dea1aee3e01,making the tests more resilient to legitimate cross-vm differences
9abfc4044b23629af408459a3a5c638d7978e443,fixes for 120909 (ibmvm failures)
144c404924473bbb501752b95a052c3ccfe78513,AspectJ 5 features
d19d029307d5bc8c75bfe9dfc97d8e5f2e983094,"-1.5, compatibility link, -X options"
d53dca2f900656a3a5e4d850bb931497a00435b6,better xref title
9bf643029af493c8d0d58293ddf38f662a0eb43c,"X options, crossref, 1.5"
8111599318360cb8c44ce2bf05a601089105121e,updated ancient LTW answer
552ca6cd72d0f4d759356a0837ee66d8ce588db4,readme minimally correct for AspectJ 5 release
dd939f06ad19f17cb5a2920613ecf0afc9c66967,"index minimally correct for AspectJ 5 release.
NOTE: Removed references to long-dead emacs, jbuilder, and netbeans IDE support.  jdeveloper was updated in September 2005."
fb949ea6a7563e38b66b1a0bb07c8843983ab7d2,updated list of -X options for AspectJ 5
d9f192dcf9f3638046f587953f867fa64a5bef1b,Comparable test programs.
338ffd1bb5c4c4c7ca26025e8620b1879cd67b34,test defs.
bc1fcf9581621da51498b251f053b29fb70b9c05,defined but commented out decp tests
4676acbde531b3c00f5572ff4053435e9ba9b1eb,merge of changes from 1.5.0 branch into HEAD
2afe12a528f424404d4c88a0db65602fce78254e,rearchitect @decp
a1037edc26d22c437b3b9a399c31938ce063ce29,fix new syntax  @decp
ff86d25cf8e188086666dce1e3ac70a6ac84d33a,fix new syntax  @decp
0de667394fefef642b8660e39e0e6dc723f609de,slightly modified
93f74cbbd62ebdc6d0ae1f050438f94f2f0eb782,more tests.
45190b937a97b3a1f37c327da579d0c2f0b90dcf,no longer needed
e4ef223b7dc33f517c3e61d5d54b93f983ff9984,this was all corrupted tests
87014ebdc6aedf4fef7d8bced8419634b20a5dd5,no-arg ctor test for @decp
41a73ccc3c90e1d55a8e58d9d8a81e5bdfa4e62d,this was all corrupted tests
4a306cf6210cc47433b00822bf168f18a45f7951,testcode for 121384: NPE on incremental compilation @decp
a9a9d8412730d6fa6ed673bd6d6e7a0a14d1aee6,include junit on the path for testcode compilation.
cfc4604d1eeee4e65284ab5e2d83d6b1e6a7f9a7,fixed up @DP tests.
196a0b6585abd52e6d432732a500f0812a385a3b,organized imports
018294023bdf4aac35c5fe39c0a39033b4b70943,includes an error on purpose (class is not static)
d9f1796189add78c3e9d5a9842864662538e7f8c,testcode for 121384
d9f510b94403fe2d97ef5f124a698cef72e6319b,fix for 121384 - just make sure the decp has a source location if we can.
3509955887685ee99cf2772426bcf74cd3a6e5cb,fix NPE in mixing style (can be in concrete aspect from code style as well)
4fe2028e62f2fc77798eab5551f341f6b584dbde,doc updates from RB_V1_5_0
1cbece39b31c67aa9c8711319c979992b1976536,merge of RB_V1_5_0 changes back into HEAD
b9f1bb7ce3de0a6b0848c7fd9a1f791847acc88d,moved to aspectj5rt
22966838cb6460a0a3fcff882611ba71e0a60225,updates to docs for 1.5.0
10b88f0c2342124f35425a8c3cac54fad32fa8aa,matthews message accumulation changes for ltw
6c67bc69e2052ea82b1ea0e7b415ba710d1e3c19,matthews doc changes for ltw
d21b27a4ec70fe7dbb4b38a42ff6015ec4cde16f,testcode for 119453
930c1d3b842f3bccbc6d434907608bdc5d04a63f,ajdoc: fixes from Helen for 119453
bbdd4966a79864ea9979da81ca4725d6471b2fa9,ajdoc: fixes for 58520 from Helen.
94cb3e9bcdb5beae6db3a32280bc42e03dbb31a8,helens fixes for AST and ITDs - uses declared modifiers so the AST consumer doesn't see mangled names. pr110465
f9b9ad79f269295319d2b51ce9b2ab3423f75043,testcode for 121575
6f74831e80244cce6b78dc86e7100d0944ae2496,fixes for 121575.
a778ac41009cdc13412ca79cf7a1649ccec93571,proper fix for 121385.
06c7f82ea977dc9c03b249f9c65289555496c925,doc fix for @DeclareParents
3cadffc3529d94894dfa955497edcfae257c95a6,fix from comment #14 on bug 119453 to do with incorrect results for decp statements. (from helen)
d69ce9aebb3ed4410f07e9992105748b69a0ff5e,fixes for ajdoc crash - bug 122728
53284da53f628e7c5071b87888f0624aa7528697,test and fix for pr112458 - also created the 151 test areas and driving junit infrastructure.
1e8384ce1ff395f4e2e677f87bd801c9f0eb0d01,"oops - bug number not quite right, fixed now."
24a785febccd12facf9fefceef03a2b7ab693bd9,pr122458
a9ef1b01b21e35c6fa43f24b095edf8bf36afe7c,spelling fixed! (pr122417)
ab2150f267eef2ec565cc596b2e0e0412a3bd290,"ajdoc changes - moving to using a sandbox for testing, plus other bits and pieces - see pr121711 - from Helen."
dd1203a376d6b0dcc865735cf50288a83e710b05,more ajdoc changes -  see pr121711 - from Helen.
3f77e755e504d24e0dc6fd640972d56de15a6bef,"pr122248, only unpack generic signatures if the world is in java 5 mode..."
2208126bd1792695ff11d86118c53a9160ab9fee,pr121711 - from Helen - removing >1.3 apis that were introduced in previous patch.
dd97ef1adfcd1df2709c7287275215dc585dc572,pr121711 - from Helen - comment #19
2cff2ef79cd1cbdd78f45894e7db478439cf6c40,removed rogue debugging statement.
f4c8bf91bced2ba5bc1e0aa6b264549ced1efe70,pr58524 (golden oldie...) -  from Helen - removing use of deprecated API in ajdoc.
8b6fbd3ae387e8746cd24184e747d3f8acef3dc2,testcode for 123695
86797879e8c484fdeea87ea2e8304a3354af1e1e,testcode for 124105
60c848e2ef6d8fb6bd1022f390a95ee83e4cd2ba,fix for 124105 - resolve the signature
3a315d0a21d3c4b57436a8d77ab980f910ac17e5,fix for 123695 - allow for null (no annotations)
51855f9c7de66c19c5db21cb416bfb5ec52de30b,tests for 123695 and 124105
3b4aa924f0f003fe736c8274d85099410862a106,doc updates for 76101 from Helen - how to build AJ and stuff  it into AJDT.
ab2f89bd7314680eda5ff5efeb7e97409ff878d1,test and fix for 123612 - remember to clear the caches for declared annotations between compiles.
e0d6f5412b278639a1cc889eda1d8fba041d50ba,"Use ant's TaskLogger for all output from our task, rather than writing directly to sys out / err. This commit also fixes the issue that running ant -verbose did not produce verbose output from iajc (it does now). I ran into this with a client yesterday, and it had me stumped for a while!"
6c16b86a6a68fc7063ea5a8f206d495cb6a36e0f,"an additional interface that custom message handlers may choose to implement. Implementors get callbacks when a build is starting and when a build has finished (allowing them to perform before and after build processing, like closing output files etc..)."
834e88cf5b4f7e1e188aba54c948dc9f78d0c4a3,unused import.
04067a6017182b42f520e450240dc90a2ed86bb4,122347 - at least evict *something* from the type map.  use softrefs but tailorable. also has some basic profiling support for deactivated right now.
7e6cfb2bbb19a01ba9043a3e791d9128dd162e75,77166 - newarray joinpoint - testcode
f51e0736ed52ca6bc3689981f53718b62471251a,"77166 - newarray joinpoint support. ""-Xjoinpoints:arrayconstruction"""
9c38e399f5d9c75fdd2b918752fba7fa12b28673,"77166 - newarray joinpoint support. ""-Xjoinpoints:arrayconstruction"""
9bfea799f7a54b78115111e4c6d44a67536e23ca,"without this check, we sometimes hide earlier problems."
1361dea02a5de3a4da611fe429f48f7fc2afe048,"77166 - newarray joinpoint support. ""-Xjoinpoints:arrayconstruction"""
7df49ff69b2938244240737c685223fbef1d387a,"77166 - newarray joinpoint support. ""-Xjoinpoints:arrayconstruction"""
7a9a69e5c82ee9ee59f94cc68d69a3c25c36b5ff,support for <jvmarg>...</jvmarg> when forking (needed by profiling scripts)
17865f45b709f5b8adf86acff50dd5d05ea4a4f0,"ant script for running profiling tests against aspectj with ajc source compile, binary weaving, load-time weaving, and AJDT simulation. Can configure target application and source of compiler (workspace or pre-built jars)."
9259ef48f7a755ebe6b65b59b10c81fcc105fb83,profiles of the 1.5.0 release of AspectJ building spring 1.2.6
8c2c782896cd308c74a838263842ba3bf8ebbc6a,build the model.
b537e726b3ab16bf30f972e87d768aba0eba31c7,incremental and memory answers gleaned from matthew and andy
8676df9bca4e5e169206f314c8ad5d3da38bc28e,test and fix for pr124803 - mixing numbers of tvars/tparams in a hierarchy
01a8b2eb36e1a34c80697c2034f9657b74dc281a,test and fix for 124808
28f8c695ccc8513e9dcbe0c4fb6ebdc71cf84313,test and fix for 124654: generic annotation matching..
d916002f3d0ba392915ec323ff7ae189a5bdb474,testcode for 124399
a4bd19d25597a31e1b76cc5fc188c3112bf0f5ff,test and fix for 124999
1f4956a4e31ac88bcc97a98da3f84c89413cd0a1,testcode for 122452
8ce00642b4c8b1bb0233125e64f798283ebb3e90,test and fix for 125080 - mixing numbers of types in a generic type hierarchy
244a1c78371fab02a6b2a9937fcc27e6cf1bc61d,test and fix for 125080 - mixing numbers of types in a generic type hierarchy
99eb7f8654eef884dfb204f8fdc0ea00fe849cec,fix for 122452 - pattern parser for a duff pointcut definition.  Also fix for 125027 (deow length set wrong during parsing). latter fix from Helen.
c494255b29d015c16ca7ab877726d1974cb7855b,fix is checked in.
efb20c5a3eeecb85c059110b3494f7b39593ab28,"oops, crap comment earlier - fix for 125101"
861823254fc58b165b1c1e80689497293e03c7ef,new distinct nodes for the different types of declare - all follow the standard ASTNode pattern of having properties defined (modifiers/javadoc/etc).
0498eeaee57665df121ac90161bcb59522c60a4e,new placeholder nodes for type patterns and signature patterns.  Before this change this info was being 'discarded' and not included in the constructed AST - now it is at least created and held onto.  Future work would create the various subnodes for the different kinds of typepatterns and signaturepatterns - if users want to start analysing them below their 'top level'
f2cd958ea7bd31ccfd28fb13deffa21d9d13ef87,Subclass for the AST that is able to create pointcuts/declares/etc.  Similar ctors to the supertype and one method copied into this class that was creating the AST directly when it needs to use the factory now to ensure it creates an instance of this subtype.
6d31507785b6803062e46d071ff969160b979b5a,necessary magic.  Factory 'mechanism' used so that the JDT project doesnt have a direct dependency on the ajdt.core project. It references the factory name through a string and dynamically loads the type.
8653b386762a4e10154c67f911e0dbfd72ea1b08,New tests for all the AST changes - and updated tests due to the AST being more comprehensive.
027fe98f13c245e89cc57876dea418d70bff50cb,includes the AST changes already checked into shadows - see pr110465
7e40a6094541d2191f09d810b3330c4858ed8952,helens changes for 125295 - should keep AJDT happy.
a723cc27959dbb9b6e3eb3eea797163bd4ac7102,testcode for 125405
2602c786913715b1b0530037d43cf47e682637cc,fix for 125405 - demote raws to simple on incremental compiles when necessary.
551b446bec83bef0f7df1f57353fdb4297bc14a6,fix for 121395 - error message on stupid aspectpath
5d7f4e1f89c76fd54c40d513af4c19b8dd74f771,fixes for the AST - see comment #26 in 110465.  Now exposes perclause/privileged information.
693945fed3ea7482c5c312063dfac881f0d0d1c9,fix and test for 123901.  test for 125475 (commented out)
af8ed913b0057fbe1b48d47a03c4390e7fdb591e,useful definition of STRING
2b5329c2a672ff32f8c941f0c56e475ea58ce5f3,testcode for 125475/125480 (from matthew) and for enh 123423 (expose PTW type)
6aa48b0e4feb48912acfb203f2c5b411514fbb87,testcode for 125475/125480 (from matthew) and for enh 123423 (expose PTW type) - last one currently commented out.
49341327b19da8e97c12194be2c162eae9916b40,avoid NPE (125657)
deaa590e83b2e7707fecd5281f342d13246b36d0,"fixes for 125475/125480 - matches nothing @AJ support.  Definetly *NOT* as clean as it could be, but works."
e8ce7c29343baed3b22173ec76a23e852ffbd12e,enh 123423 (expose PTW type) - code currently commented out until return type of getWithinType() decided...
3ea3c39aec3ca5c187e98ef82a8d56959c63ae71,support for messageHolder attribute even when forking (see corresponding change in ajc.Main)
96014baf1aefae6f7925fc66fd490ec80662a80f,support for -messageHolder : do nothing since this (obviously) has to be processed very early in ajc.Main
c24aaf00c7ef2691ca498d5891899084d788c041,support for -messageHolder command-line option. This is needed by the forking iajc ant task to support use of a custom message handler when forking.
eec4990f7d6cad43994490193a4f76be5c580f9f,dom changes for 125809 (from helen)
99e5089b8d757de2bf6f2052dafbf8b8412855a7,added a cleanup method to release memory held in type maps
fcc729519515a30027ffb7d10e51dce0df5f2863,cleanup the EclipseFactory afterCompilation
0ad235508c82bbe372345e6ea46f35496f55dd32,made all the state in AjState private so we can get a better handle on what's going on. Added accessors where needed and extensively commented the lifecycle of the key state we hold.
35264a5f2417827ecfc59d6051a98554d65f6d0f,"get build configuration via accessor, not direct field access"
b913ddec0a176758ab95a6e7df378f66607aa44c,free up maps during cleanup() processing
1d41626c3d8489acf9a630d9236a9ecdf912363d,testcode for 125699 and 125810 from matthew. test for 125699 commented out.
795cd9eadc225d0c1c6d0297853bcd5ca8937be4,fix for 125810 (from helen)
c5678d506d3d1ea2b18049d898c9c4fff4a2d1dc,oops
7a96a40ab7d5418309c4742bdb0225cd0dfb88ff,thats better.
5f10ab1ee6592619b75d8f157f937d620f92d698,@AJ around tests for 126167
81d56a7eb92a0bc7fc3fa1d5c7c048d9ea1f0339,"Err, corrected to visit the right branch as well as the left..."
32c76aa52cab3f80e3ce8692c01f8fa26ce9baa4,simple visitor added that lets you discover if a pointcut binds this or target
19b926e5c905acc5beb3738a5668f9705ea79cf9,"more detail in memory answers, on incremental mode and strong static reference to singleton aspects"
03bb056c7decd47d5b53081e7d91b389b18835e9,"Progress on: Bug 126316: Invalid method signature: Pjava/lang/Enum<Ljava/lang/Object;>;
https://bugs.eclipse.org/bugs/show_bug.cgi?id=126316
  --> test case to reproduce"
f856b9d877b394ff0b8b9920b18f36aae26ad23b,"Progress on: Bug 126316: Invalid method signature: Pjava/lang/Enum<Ljava/lang/Object;>;
https://bugs.eclipse.org/bugs/show_bug.cgi?id=126316

  --> fix and test case"
8933b6a6c18860da97a4c89eb113d44bc67525ad,"Progress on: Bug 126328: IlegalStateException : zip file closed
https://bugs.eclipse.org/bugs/show_bug.cgi?id=126328

closes the loop hole with >1000 jars, and adds some extra sanity checks on potentially closed zip files (tested that the call is cheap) to give better error messages."
5d912f273e6a0c5e1bf0b1d9fe228e497b2641de,Helen and Eduardos AST changes for 110465
59501feb0d88ebd90d3d7b831adac4e161b9118b,not perfect yet - but some I'm using.
5aa932dfeaa68d12a2db9488de5af1e155bad792,dont do anything if we dont have to.
8933aec610413e90706819877387a703ea455112,lazy unpacking of the table contents.  Only done when required - usually when a MethodGen built for a Method (i.e. we are going to weave it).
4eb2d5a17571b5a885917e1d46f4fe01f27fbb33,lazy unpacking of the line number table contents.  Only done when required - usually when a MethodGen built for a Method (i.e. we are going to weave it).
d856e4fedb65e12104851967690ef751b2c7b09b,fix for 123212 - ignoring subversion resources
f743fb210e1b7aa8cdb45e7bda53aa336f912edf,fix for 120356 - better feedback for DEOW when using @AJ. (from helen)
e1822afb432a94de75f95e3c3537d894296a6d31,comment fix
594f80c4b81a34656e61b7b94a9b91513a19d4c3,don't hold hard references to state in this context. Assume single threaded unless told otherwise. Provide reset to ditch memory we are holding.
ede9a8886896bf04426d2a28b8f331f8574bb413,Put compilation-and-weaving-context into multi-thread mode when doing LTW
5f41f5d56a7c6a4b76660697848177aea06273a0,"go ""back to the source"" on an incremental aspect change"
b03d4bb299917983d2c104e818f014e3743f4c17,don't hold eclipse source types in ajstate
e51f62e491088a913ec62bbbdbd3eaf967c7de93,don't hold onto references to AjBuildConfigs
fd7f8075c8046aa5a2fb059e5b27aa869fc6658c,I don't think this class is actively used anymore...
1c26c6cc4885648ccb398b16daf3c387740f8952,free up memory anchored in static at the end of a run
ce08d1423fd1526a36d36aacb7b30f4c6adc2647,provide a way to reset dump state to free up memory
abff16da00d0dd4f1aec75411c1ee40ec65c8278,define some constants to avoid spreading string literals around
88d5a94de9f8e2a312ea1d4b77742a472efe4c2e,Progress on: empty catch block warning - extra lint message
d07f63a30c5af1a380f5091f18c21003aebfae79,Progress on: empty catch block warning - updates to test cases with empty catch blocks
26cc94c194549e2b0c6245916bf57d1dd5ad2897,Progress on: empty catch block warning - test cases
3b1dffc3aa7a93837f2a123b2208ee515d466e7f,Progress on: empty catch block warning - option support
e2978d39000b099f4705047777263de6005ae5fe,Progress on: empty catch block warning - compiler changes to warn on empty catch block
0b39aa5dd0218561f11258ac272112ada447065e,fix for 119882 (from Helen) - similar to fix for 113531
67ef5e265751297e19bed06372330dfc2124cd73,lessen the cost of hashcode and equals
648abc59cc5b4e4d1d475cfc6dfe421e88a5cd3a,organized imports
b94253a3336b01c2fa17627168ae6701bafa47da,optimization: dont unnecessarily build signatures and faster signature processing.
e781e188483c2e0fad9169136409d19c348ad4f7,optimization: char rather than string manipulation
4035a174b2a080841df5cf07bf97fa2ce0978c1d,optimization: use bit twiddling rather than Sets for manipulating the list of Pointcut.couldMatchKinds - (saves a few percent when building shadows in my tests...)
56091228c0f33c7a5a528b7b4fd32f979d676793,optimization: less fiddling with collections when setting up the localvariables for a woven method.
34d6d63fdc7780258fe57d8e50ce9bc4a424583d,"optimization: rather than continuously constructing new arrays from the linked lists of instructions, we create one array and use it multiple times in MethodGen."
32fccd359a00bcfcfef4c9ab4a08eb722aee13b7,Bugette: annotation value of primitive type 'char' wasnt working !
f605cbc8a33a2ab742aeb666968610f2a60387d1,tidy up after yourself
a6243d9f05d730aaaff1d0ffcfca4242a659b1c4,include latest bcel changes.
5a10ce0be395d8086b8fdd6dcb29f87c11626e5a,"optimization: made unpacking of the table lazy.  With a minor change in AJ itself, this results in us only unpacking 15000 of the 39000 local variable table objects constructed during a build of shadows.  Saving space and time."
2dcda062d98090b2ca35f58f737dca4bc65f342b,"optimization: made unpacking of the table lazy.  With a minor change in AJ itself, this results in us only unpacking 15000 of the 39000 local variable table objects constructed during a build of shadows.  Saving space and time."
81228854e0cd74f3a771aafbffb06b264fdac59f,test and fix for 120527
9e06d0efc2697c328f95d468631ec009443f8e43,test and fix for 120527   and test (commented out) for 127299
2c55408317cf3c54c20d3aced2d122d7061f1a99,"Support for ""-Xset:name=value,name=value,name=value"".  The name/value data is stored in a properties object in the world and is accessible through getExtraConfiguration().  This will enable easier tailoring of weaver/world behaviour since you wont need to add new X option processing for every little thing.  Should possibly only be used for tuning parameters."
15930e7f92e2d4be1866509a8550373a4bcea978,tests and (slightly reworked) fix for 125699 from Helen. @AJ bug with inherited advice from code style aspects.
d4219e12eaa86ed810392364931a92324dc2a67f,test and fix for 121616
e87458179ab929aae2bc6966a6e092813bdd14a3,test and fix for 122370 (Andy & Helen) - code generated for @Decp busted.
58e37167f8cd2a8f04667534c4f1637337b3f3ef,organized imports
724c3374806300638f7af58f7900b2d204abf980,just a comment.
9ee775954d74a5387b3fd89e0002e659647e99ac,feature: Use ASM for non-woven types: testcode
da562415d5349c7e1bb7e7d794cbc7c463e5a5ca,fix for 128128 - suggestion correct
6f35ef3f0fe976a720d8bdae254064a1f40be4c0,test for 128128 - also grouped test cases to better disable by commenting
1f1ace1f842758b1235bd471d66715238a653ae2,test for 123553
84131827f7e154a2103f6d30b79ae872308abb00,Spacewar - a small project that exercises the compiler.
113d5bd5cf3f380a3265521e40c3b10a61fbe7b5,optimization: reset logic for primitives so they don't anchor a world instance in static.
f95d2c96edd293b98c27a19bb9f3cc2748b365cb,Fix for 128699 - message.  From Ramnivas.
67a3319816f88e64f933f1ab3d87f02ca446bc15,testcode for 128655
7279108648417c97156e45dbe2ceeb46cdf51d9f,fixes for 128655
08ed5064848a6a895dbd18fc9416abbb51dd1c69,organized imports
bf5612533611857b24a90ba8ef19fe4023329b6e,exposed method for testing.
3b4d09438dd366cf4bb90c9d19cc8134853a347d,"optimization: use tags not gens.  improves memory (create less garbage), faster (dont need to transform the garbage): see pr128650, optimization #6."
8fbb060383a4d6d41f5553355f3bf51197d1a2ae,"Progress on: PointcutHandlerDesignator.
Ensures that MatchingContext can be used in fast matching too."
14fc00e3e4a1f203286d1d4fd530530db8843143,oops - used Boolean.parseBoolean()
7a2087ef985e8af73045bac1e7e0195bb87c7f40,test and fix for 128744 (or at least the LTW problem Sian hit whilst debugging it...)
ba42a09551519a4b611ab06edb161ecb0c629f53,test and fix for 128237 from Helen
89d66dc89110db0f89538a7b78308db61e5539cc,test and fix for 128618 (from helen) - message handling.
3fa1bddb79a5e20a38cb39555e932df46f3d4dfa,test and fix for 122742 (more @AJ thisJoinPoint problems...)
82854f5681752d87be7500828509e6c86c4f7345,optimization: cache info
901fe8fe2510dc940e2a419e8ef75ec12ad97016,optimization: use asm for lightweight delegates
2bede2243113d415ece70c7e18cfe2444445f2e8,rebuilt to include latest optimizations
fa70cf3ef1caaf4711be2337447004dd5b70dbc7,one extra guard.
3099912b8a003eb5a32f25fe23d72094b0469abd,optimization: less ArrayList garbage creation!
35b74b49071cd6ac18d35c93129a1a0fd3d968b3,optimizationasm: includes asm-aj dependency
88e28464f1dac4cb824af1ab761891c57e9ba95a,optimizationasm: the asm visitors and actual delegate classes
79fdd0c8e7290b12ecca0b12aa62faa8b35a5709,optimizationasm: new BCI independant Annotation representation.
90dec5326ec88e2895fddeccf70aba2064802ddb,optimization: encapsulates lazy unpacking of annotations
85bdb11ca4c274a08df6d923050116db31a7a860,optimization: less ArrayList garbage creation!
860ad30a468d26a9880487ce8b8858e572ba9861,optimizationasm: this needs to know if a modifiable (weavable) delegate is required.  Some testcases want a weavable delegate where other decisions we might make would lead us to create an AsmDelegate
d161bfa34064dcd3b424648e5e8f91a1f10f4023,optimizationasm: some test updates since some weaver tests *really* need BCEL modifiable delegates.
b74ad8f4c4bd13608f21552e1df664b56bd37db8,optimization: minor performance tweak
5a11d89a94c19851b85e014041664b360aa6b1b0,optimization: less string manipulation
c05b9bc9283a88cde811632980bc854858ab29fd,optimization: less ArrayList garbage creation!
fe51c4ad1fc21958cc63e5bf262668a396495341,optimizationasm: made bci agnostic: SourceContextImpl
1d3c04222a2f9129d0deca7ba32741d7d98bf705,optimizationasm: the magic that activates ASM delegates
3d44fed01c620ddb21e92b019ecd988210edd67e,optimizationasm: has to force that it wants a modifiable (bcel) delegate
63bba68515457d8194e595ab5ecb09d84cb2eaf8,optimizationasm: new BCI independant Annotation representation.
1cd7b3c6614995f8a38823a63fe4e16fddad86be,optimizationasm: various tweaks!!  See optimization #7 in 128650
c1a21a5d3328d80aed9ec4f6a80b8b298c10c886,"optimization: dont capture lowest level context info unless -Xset:captureAllContext=true - see 128650, optimization 8"
b09439bdc4f336b34233d85e9c87f1018457e707,need to keep Mr Build Machine happy.
ea9c9a968b28a2c1517e90bfcb718f78b5def574,need to keep Mr Build Machine happy.
8db62d39cb1c09e5823ecc32dbfa73b705d9fb80,update to message produced on swallowed exception in catch block to include Xlint information
cafdecb1028a9a72bfb4beb0e57a91f42c5c35cb,code from 121312: rons suggestion for changes to LTWWorld and reflection world.  would have liked some testcode...
e16effca408b23d1ec0d8b2b863518337d406dfd,need to keep Mr Build Machine happy.
cfa38afb145d74cd476653d1e98c190e10741d05,fix to save the big chunk of memory leaking over incremental compiles.
49e1a631d84ca65e387e5e3d0923e322bb9d2c76,reset mechanism
a116142da250286f414946a76112c907e59c6beb,"optimization 129298 - remove redundant (expensive) field - from Ron, doing what I suggested in a comment against the field ;)"
d667d9eeb975c3de1953e5057209dee451b62231,"Completed: Improve ajc memory usage
expose generic sig for structural comparison"
5be99e59411e13ed9e779c96811d4d4ca947fe94,"Completed: Improve ajc memory usage
the last of the big memory hog in AjState is now removed."
c6677a313dded568cc368960c836a118a6276f6b,"Completed: Improve ajc memory usage
ensure that AjState is in incremental mode when used by AJDT"
66165173b34678ee428d4f4d791168f8cb5f231c,"Completed: Improve ajc memory usage
Determine how much state to hold in AjState based on whether the environment we're running in supports incremental compilation"
94635f33e7654b30139e987a7cd6aa360ca631e9,"Completed: Improve ajc memory usage
incremental tests need to ensure that AjState runs in incremental mode!"
5053f266ee41bce94fa7f2d34c5b83992bd3ff13,test for 129566
0748a02f3e581dcff1c70f3f82e935871d2a36a9,fix for 129566
741181e71756adc5cad84a09b6f55ca945171feb,"warn about duplicate sources, convert exampled to -inpath, corrected -inpath aspects and argument file descriptions, linked out to affected types and load-time weaving, deprecated -emacsym as untested/unsupported.  Leaving -messageHolder undocumented (Adrian's choice, if I recall correctly - not sure why)"
4a48f8cdb876becb88b43d26d4f586fbd3f61e7b,"If aspects are required to compile, then weaving must be at compile-time. duh."
1954377011ba95d032e7076ea37623a4c22020ac,optimization: removes static state from Bcel that was accumulating for all 'unknown' (i.e. aspectj!!) attributes
b2259116b8731725743d255a85c894d6f998afb1,fix for 130300: cause the mysterious disappearance of -XnoWeave
7c9dbb297ebbd5c7a48301137ba78d4b7a235c79,needs -X prefix
d7424a46cd2dc56a52d3556b7247f07b6e9379d6,129163: first part: perclause hashcode/equals
05a0983973f48f9cbea5720b3bb277aca437288f,129163: first part: changed comparison code to ignore ajc$/hasaspect/aspectof in AjState - modified type mungers (not finished) to indicate whether they are related to shadow munging or not.
7808f3c29e34fe462c2f248d00727bbbc25fde2c,129163:  more bits... recording whether crosscutting members has changed 'since the last reset'
ecfdab0ddc577d043fc5e471ea55469fe488aa9b,129163:  more bits...: equals in the type munger hierarchy
0370f564e76e1dc2338b22d1be266dc9edc8cdd1,129163:  more bits...: adjust compare to ignore some type mungers
103733b9c277f980d30db27710ea359974e45c81,"Progress on: Bug 130869: Pointcut resolution fails against type variables
https://bugs.eclipse.org/bugs/show_bug.cgi?id=130869
fix and test case..."
d301774057be45bee9e4be7bfd52927b04a313ab,minor - comment.
e20f544cd90d2ac0af6c217eec2a835e1dbe5d06,added -outxml and -outxmlfile to list of options printed on command-line
54c167d257ef862c313fd4ebb647c1f28597157c,"129163:  more bits...: set the compiler correctly for error reporting on inc builds. (comment #34,35)"
856694bcf982aa6ec4a6be5df1022b6483608f2d,hopefully enables outxml to work from AJDT.
6e6658a5e9e1665d18f3b4eb8d94609592b56228,101411: -XaddSerialVersionUID
f1d5dd55312ccf439cf1ad53ddc66f9d70a634b9,unused label (so eclipse 3.2m5a tells me)
1f4858d01bd292a01a9f3c45fe29df441a556884,moved to be a WeakHashMap
ced353c60f1cded943c88a202fbb54399de8e31e,tested eviction code plugged in.  not activated yet in whats in CVS yet though.  Enables BcelDelegates/methods/fields to completely unpack what they need from the JavaClass and then discard it.
45fcada5e3d3ce82e19788dd52e87fbcf01c54ff,helens testcode from 129163 for the recent AJDT integration probs.
bec04d8528872b8fbe72eb01a1f12b01ca9e56b2,fileMap flush added.
42000b8dac08fc2312f9e449b273fa7a6363f66d,bug 128650: comment 16: don't allocate tons of space we don't necessarily need.
140845380f3ac28634109cf663c7b12f328ebc98,bug 128650: comment 16: optimized to death
94e0a52dde6d8395a5c496afaf7b873d9280a790,bug 128650: comment 16: creates far less garbage
e0ecf9f86727f0cc326d54da923a397b9be7f41b,bug 128650: comment 16: better at tidying up
e1919580e5e3179e42e589292c178f3eb1ac2966,plugged into the lifecycle method for evicting bcel state.
1e0e141172627fc454f4345f156783ca9412b95d,bug 128650: comment 16: creates less garbage
eba3f68efcf37934a65b9d5992072b9a5536c441,bug 128650: comment 16: tidy up logic
fee78df3b69267c51e71335196e01e13bb18e664,"bug 128650: comment 16: tidy up logic, forget the compiler."
583b72d14f5eeaf19e01550250ae4f98bee8b573,bug 128650: comment 16: rewritten ... not exactly polished but passes all the tests...
dd8b270597b0a9636ef8c4481eed987fea1d25b9,bug 128650: comment 16: possible alternate implementation that shortens handles drastically ... not currently used.
5f8b48a3c251ac794d7a5322bc8afb0712e62fae,half wired into bcel eviction logic...
1eed8f0c3bc7ec15ea89da1cbf6802c1421be18d,stop NPE for bug 131540
b3cd01d587219969e7c7b58ecda5b1aeb7722c2e,test and fix for 131505: keep aspectnames in the state object
973062a23697bf53ef926ff0235e2b85e5dc550d,die evil 1.4 apis.
f2cd94f88a9976fc98786955a764522a8ccb37f1,test and fix for 131933
e2703cf67fe6c68cc0e91aecdbfa4e07e51c6fc7,test and fix for 131932
95b9c8d913732532cf636aad8ba1afc3b471de7d,testcode for 132305 (structure comparison problems)
9dca72e7c63a5623f3d442bf43bb88810368a65a,test and fix for 132130
7e4b7dafc0b6d20fb2b17e9bc4a12fd7d8934471,128650: more memory stuff
a282c4e6f63a6daed67e4c846f196980da2db4eb,removed rogue syserr
fe2c06ff90d63405ced973ec7a21b43e31167fa5,flush source contexts (128650)
9e90012d603bb53172b2cc0bfb02221188e2ed88,guard on lint
424ad2839e880a1f8787a4a3020692c2490c35ca,lifecycle method for weaving completion switched on - ensures context flushed and bcel artifacts discarded in ANT/batch modes.
c9b5555ffb40f9cb6b390ec22efa849674b22182,ensures bcel stuff flushed.
91c0493cfd3b0562e1611a23da30402b347bae0a,132305: now compares apples and apples not apples and oranges!  hasStructuralChanges() much more reliable.
70af6329f781f098483218602c045c49bd621751,not finished ... packaging script from AJDT to take an AJ build and produce AJDT jars.
a57e879330716b045a3a5dd9b0f0376eca500987,more tests for how AJDT cross project builds work.
9476fcfa391960ad1c1e0da32cb0ffd2a93f8b2b,tidying up...
64b57bdf031c60804a735c483472eece2736e20a,works ... possibly could be tidier.  Creates aj-build/ajdtoutput containing jars for sticking into AJDT.
6aef2d916321e2a37837bc1cd3fa255b153bdfa0,fix for 132977
2fb86fe604b613774492df5185b1c5717c434d29,test and fix for 132926
f963fc4dcd3f0391e6eb234c3346d16eb5bdb891,better tests for 133298 - yucky bug.
c9a60e519d73bb7aa4d8cf4615445089202bd3ad,test and fix for 133307 - funky type variable bounds.
d578125c1bd261349a8c290fbe42e84305111948,switched around.
91473b3badbc89811be8c6223adc6b6641e496d2,fix for NPE in pr132160
6c4770cba1ff07c1d5a406b34f0cfc44a3e05ebe,updates from pr132111
638db357bdf26a8afb6699c84002762fa7d4e518,"test and fixes for 98901, comment 29"
fa2ed1b8d8350afe051a21a510fb4fc929d5f43d,fix for NPE in pr132087
d5c7b9f29492554d2255bf44533ffb7515a074b7,fix for 133298
a555c963c0512d8d363ef2b89eba01e274813290,attempt to remove the damn results.ser file.
41f1f3a4174de86413942cd8f2c2e7c45d9824d7,fix for NPE : 130837
4cbd5456f8d8886579970939d58992d32a1746bd,test and fix for 126560 (@AJ types resolved in 'current package') and test for 132349
91b4e7aa93d3a0b817a598e6aef81310671475f8,fix this to match BuildArgParser.
09406a36994865a841d9b40dff734975dd75f4d2,"improved FAQ entry for J2ME, hurrah! at last!"
e05ab26570eeb1776836d67e980c37e0813e30e3,"test and fix for @DeclareParents problem where the target was ""@Coloured *"" - fix was to resolve the typepattern"
a2252d8b395f4da1e56bf77ea5d36e0c8d634ebd,more tests for @DeclareParents - building it in pieces.
c1d86983cc55cf3999039656a856b3df18a79973,for Mr B
be0ea2c82e48c3dd64a733cfd7151204e3e2981c,did that LTWWorld change break the build?
c3f3a995af26e148d4dd497ed0eff4ebb0787d83,test and fix for 134063
f0958f1f8aa2ef171320573f53d1690534abed99,message fix for 134063
864b70d3a3e6f32d874acddaff17f21694d2b08f,testcode for 133532 (case 2 is simpler)
6d3281e951ddc653702663ab75bc602c239ba5ba,better if no aliases consistently means null rather null before serialization and an empty arraylist after deserialization
5aa3271391d5f592610ffdf87e1d1ce53d1c9790,extra decision recording infrastructure for future debugging!  Also fix for pr133532
24d3c4539ea77e5eeebe8baf9dcb6cb373cdcb11,tests for 133532 - also tidied up the statelistener code
680e72392c69c9d37db19ffeceaa61e89acf550f,future work (see 133532)
90f7bf70b1bfc980b0db28b195ff08e7ef6511f5,useful pause() method can be called to enable (de)attaching jconsole.
6c0746dd37eb21de27faa06fc81f505982726697,updates for 1.5.1
e664735e9f94e5dbe07411cd7afde919e627b440,merged with adrian's version...
e9a7c5036c3f5b68ba55e7b5ba56db27ee31149e,these problematic casts are redundant... (135052)
fdd4e869b979f9c5d75d339e898830a27650c1b3,bullet proof (?) element formatter (135052)
94d8b82fbf3cb18a14d77508b3adad6d50434080,test and fix for 134541
1a6f69583137f03d2a8052148a17eebe8e79e162,test and fix for 135001
c2adc8d88f02c9e507cde5cd4ca16d164116852d,unused import gone.
b66a97f68648e8da7e11b194e8e9604de5e201fe,yuck. need to expose ReflectionWorld in the signature - which is supposed to be public API. Need a better long term solution...
5e01ed2cb2cd9cdeb59c42868cbd7a58243ea771,must use the same world when creating a pointcut parser
d1304320e905040d73d479b2cccaea0124718c01,"for pointcuts in @AspectJ aspects compiled by javac, try a bit harder to find the pointcut parameter names"
dc4e07a6b04b5b44cbb2134119f9b223add3ca65,test and fix for 136258
965ac05c7a891086c726baafdc4b49b07cbbd86e,test and fix for 136258
3e0fc355acc7c525ca290d4740ff7ca70edf408c,use signature rather than name when annotation matching as Bcel chops name in the java.lang package !!
064c5145535c166d52252e010828e9994b3e7635,test matching on annotations directly in the java.lang package
ec93456d8ba48f828757783a50da2bca82e6e8fe,"@within, @withincode, and @annotation also need to return true to HasPossibleDynamicContent..."
d1a252e911bd19747b0cd6815291f62706f202d6,fix for 136665 - Rons suggestion.
980483b367011c75ed7e90b2ddb5a06b34199731,test for 137479
f05e07fbdd07acc31c7c49b595da0fe3d32f0c79,fix for 137479: better isSynthetic() logic
edcb418c39b11e244cf70c9c68bc98419bdf8921,fix for 137479: better isSynthetic() logic
1535ee721c16509713642e20316b226ece69fda9,test and fix for 136585: NullPointerException in PerObjectInterfaceTypeMunger.java:33
5b354c21ff2b4754522f75324f8094958804a753,testcode for 137496: problem with join point matching on calls to parameterized methods
8cbcae72de6f0b2b8bca9d63edd10ae04982e94f,fix for 137496: problem with join point matching on calls to parameterized methods
71bba6c3746ecb3cf64e204372e367ade78da050,"testcode for 137568,138143,138158"
ab4ea848ce9d73b10a4ecf0254a2f2759967288d,"testcode for 137568,138143,138158"
0d74ccfc6087a2bd8025c73e64467a4a8e442916,fix for 138143: npe on duplicate method for ataj
af6f3cbbcea106bebf426c7035c46620efcecfb0,"testcode for 137568,138143,138158"
1b057149b706a6a4f0f4f58310fc80e6c29aa501,fix for 138158
783f85dae63e052d6d58c4a6e3d68555ace4c5bf,unfinished fix for 137568
19ce11e9557460ce4de7b75905a8149bb8627fed,unfinished fix for 138158: !@withincode
0fcaf00109da3273daca689ca93e30c3c6809c1c,commented out a couple of new tests for a bit...
77d9906679b671488272fe62c8409bcc32bbb99c,fix for 138158
f6aaed5b40f403abc8640513d66beadc6b2e31a9,test and fix for part2 of 138158
8c084b533078c9d640aa9d1530e673d744d546ad,work in progress testcase 137568
6b2526fdda56e30d8a151ca0b9bd16ecb690d3d0,"test cases for pr138215, 219, and 223."
c4d2a21b1609ca7473dedce2d855815146cb017f,test and another part of the fix for 137496
d09fb718207be8b9a920f060b439eb89e1b1b544,fix for 138215 :- we need to resolve the pointcut expressions associated with declare warning / error from an @AJ declaration *after* all the pointcut attributes have been processed.
0892513ca2613709de6460b35bd1b3b3b2bd6d5c,enable test case for 138215 now it is passing...
99882cb91a94c468c185cf11cd6a728604e95bdb,rons patch for 138540
c667bcb5088379d74b89c3dc8556b87429e4efb7,test and fix for 138286
c5c18aaea1700d75e8f92a530133ae371924f33c,test for 138798
18c308fb3c26227f7cae5ad728d3565079edd4b5,tests for pr139749 - calling super in @AspectJ advice body causes VerifyError
63653d29e9e09ad69a8f4b43431f0d29242c08b6,enabled test and committed fix for pr139749 : super call in around advice body of @AspectJ aspect
0d1771f1f8698c35fdd5b4a0b74690d1e4c81b67,fix for 139936
cb5dfe759852d4965c692934ed7e14c41f61b715,fixes for 135780: aspectjrt will work better now on a 1.1 vm
5a01932b9dbdf81fe41e029fa56ede17364a2c2e,"fixes for 137235 (contributed by Ron): more intelligent logic for determining if a path entry is a jar/zip (don't just rely on suffix, some new .bndl files seem to be becoming popular...)"
bd60a5b54a76394d73612539265d993169ec36c3,nicer
c82cca35c5df8536fb7fd38a8db9eb757a03ed0d,some tests for 134471 - currently commented out
f6a32cb509f4d932d85895ebc86608b87cc40c6f,Extremely temporary change for 134471 - not ideal but at least the markers will survive a compile.
ab00b0b5636ccae2d5bafc6c58f9aa02c5dcaf9c,new versions...
6cc28740d01a06428037612b3d33bee5eeab7733,test for 136393
2ed766cd9f95b400c69db07eedde69035877113c,test for 136393: NPE on funky ITD ctor
48cd9473fa9b670d0a589281afdda016142f2681,"fixes for 137235 (contributed by Ron): more intelligent logic for determining if a path entry is a jar/zip (don't just rely on suffix, some new .bndl files seem to be becoming popular...)"
14e2901d1f975cbdbc2813e813de25df3ff1fbab,didnt need it...
299c3a4f2c5205102b89d63c4a8f1bccb158eef1,test and fix for 134371
b954b2664c25a74062a5a75b3d99a99e5ddf176d,"test and fix for pr140357, reference pointcuts that refer to other reference pointcuts in the same type, in a reflective world..."
307105369b8d93a193e87f140915c4a0cc387e63,"hack removed, didn't solve enough cases...  we are back to correctly treating non-structural changes in aspects as not requiring full build.  (might get that test passing on Adrians machine...)"
59a6505110ffa73ec1fdec5834b44617eed351c0,ignore CVS resources.
b8012ae0d61684a40ebb86990f023d3d209e8d32,stop the damn thing complaining.
5220ac4b57132a268a3bb8cb962ee178339f798d,new test code - related to 134471
2b6f28eaefef88f26aa7d089f7b50e3e5129a514,134471 - incremental structure model repair code overhaul
20e6c3bf2c75c1e8b4584cdd401773c7a83fe720,another stage added to this test sequence
b26fead410970bfb7a363ace1dc956c0a5b44c88,uses pointcut relationship made conditional (can help make structure model tests easier to write if turned off)
b1ad94d4c9a8f3e13caa35c8f06be35cffa81938,"fix 135210 - -nowarn exceptions for xlint, declare warning"
c625e91d4fc0875a636d366dd0bae181739193fe,organized imports
519880eefc4d3bc1467c8c20fb5c284271c10f4f,134471 - incremental structure model repair code overhaul - repair the filemap and typemap in addition to the handle map (long standing bug!)
63a121b159da4867f115a5d99a972ba85c260faf,134471 - incremental structure model repair code overhaul - full equals support for when mungers are compared and we care about slocs.
10a366b6a93694e1da11c686ef02851f57d33d59,134471 - incremental structure model repair code overhaul - tell the weaver the kind of weave (inc/batch) so it knows whether to do incremental repairs to the model for each file being woven.
fc1bd780246e53db9e9f1f800e61a9b30012689c,134471 - incremental structure model repair code overhaul - slight improvement for duff slocs (@AJ...)
5fb9b7c9aedbab3df52dea7c9024de8beca219cf,"134471 - incremental structure model repair code overhaul - if we don't know the location, don't pretend we do"
923c2265e677b997c3ad80d48dc78004a1313ff9,134471 - incremental structure model repair code overhaul - so we don't unnecessarily recompile if a decw changes.
385d2dfb5fbb9b0da00ca3fe7c00bbea3b772c8e,134471 - incremental structure model repair code overhaul - compare source locations (for now) until handles are location independent.
c010978b54cf6f95d913ae6dc7b1107ea8f24647,134471 - incremental structure model repair code overhaul - consider whether we are doing sloc comparisons.
ac4db735b6f4d5b7d17f0b8d093b63b910c704bd,134471 - incremental structure model repair code overhaul - different strategy for tidying up relationships.
cf19fbaa4da5a09e7325e612eb038b8220d34368,134471 - incremental structure model repair code overhaul - some new tests for incremental structure model repairs.
60033cf18f34c7eab52eaa0638876fbb1ee55911,134471 - incremental structure model repair code overhaul - the key new behaviour. At the start of weaving we remove relationships.
9d1f31f65bbf7e7d4b5e205d983201d724f97676,fixes for missing error messages (pr132314)
5d2b5b8892cc6e714565326b70d7c6a4b7007129,test and fix for 138384: woven methods being >64k in code size
3ca976f0ce48a49cdcef98b7f72ce2ce23b9ef4d,test and fix for 129704: broken @annotation for methods in generic types
7a955f0f8f2fcd843e8c796e3f1ac9136fd77d82,longhand of recent Java API *sigh*
64d321521a3e66e39510c2c150ba6b06ca40cc68,tests and fix for 136026: cflow verifyerror in non trivial combination of cflow pointcuts.
563a4cb323c8eb5322e4266823d6aae38dbbf56f,tests and fix for 136026: cflow verifyerror in non trivial combination of cflow pointcuts: include kind of usage (stack/counter) in key for cache
3fa4d24ac16e94ee40b824fe27830fe7a34866a3,test and fix for 133117: dont spam the user with noGuardForLazyTjp messages.
ce56cd98bd5fdb99b24f1d57453470416bcd35d6,work in progress - beginnings of a document defining what we should have in a comprehensive incremental compilation test suite
5c2da6f738945e027241703ef91c49099d9851d8,recover from crash whilst crashing...
9ffc63b51aa49fa3bb67a4a1c40dd7d1fe4c97ae,tests and fix for 135068: verifyerror for @AJ
b14d5e8a49519156f711d9e6ee15a6ff6c729b69,for 82570 - add linenumbertable for generated methods (aspectOf/etc)
fc7db25dad5d302221669c7cfdb4890f061d2e9e,"fix for pr141945, misleading message re. aop.xml"
b166a7e6163889eb951f82655f0f49bfc26a49f0,"tests and fix for pr130722, 138219"
40c0d949493e14806799cb4975135998b707c9f2,progress on enh 101983 (allow separate output folders for separate source folders)
4842f1826c3905c2789bc99a2dc841c733092339,testcode for 135865 and 142165
7d9a7287ee1aef66ba2edf55ef2fec2bf95b0dc3,fix for 142165: LTW
5f6a6b12c560f80dd720a943c4c63cf8dc182cc3,test and fix for 141956
2c5fd746cb28ed8ad3990229ea2f861bbb815821,proper testcode for 135865
6b2d9ae90158bd4e5cda5ecea5f3787400bab5af,test update and fix for 138223: funky annotation matching
84601d8cc7f6a8ffc559a332763502d3688f52cc,sick and tired of checking these classes out of CVS and hacking debug ON.  The only time I want debug off is when running RunTheseBeforeYouCommitTests.  So now debug is hard coded ON and I've checked in a launch config for running the tests with debug off.
21720a06321ea83f9969e8be58c520480fca4b09,testcode for 138171
3d92cc4e889d0c8326eb237001449f8fd1d6a591,possible test for 138171 - i worry about it failing on some configurations tho.. (linux/mac...)
bf5c6b8b011fa305ec446e1e9ff5c45ef64f8814,fix for 138171 - error if we can't copy a resource over rather than crashing.
13035136f74ea376942070bf2b9fb9fa6d710cbe,testcode for 134425
1ae7c9a3e2d715318f7f6f34286b3cb3c75d32cf,proper testcode for 125480
7c02aab127411cb5b3503a7d585eed39241f3b7a,tests for 125480
4cd98f5929a019b2b9dc5ca430afbe8b67bb50d9,tests moved to 125480
f1f3decfd2ff14d5d559e67f0209e567a6fbbc79,tests moved to 152
e1e919408d346b7ff985c4920de7ab2d777a9d3c,fix for 125480
95b6665e651ab0a640cc5eadff875dde125a5880,testcode for 129408
4eb6fbcc59a32e26704f4c3e82224cd323cdc0a9,testcode for 129408 - dont print out AbortException stack traces!!
03616d76d75ffcf5a877041fb56bb375f16f3fbe,testcode for 129408 - cant be switched on yet
d8830cd18a5f7cfaa8e3b322442d76162e6cb610,first cut at what a basic incremental suite should cover...
e9c2a596fb624caa4c17f9ae13e168d17726efef,final implementation and tests for 101983: allow separate output folders
054eb78c6697e95d28b36b6bb966068fc1f0d5c6,moved pr132349 from 151 to 152
0e6530f173f186e1668043abeb08df51b593c9de,test for 128443
4dea3ad2411d5ea80b6f49ed342e96e52a39a91a,test and fix for pr132349: itds on inner type of generic type
8825b5c86b769c3bf67457967dab4c6e3d59b74f,fix for 137568: dreaded generics signature
69e24e90d4fee7115ecbc8c7786915b1f741471b,fix for 142466
7d99a23266ff26d1be0bd46af8ab7b3951cb9230,test and fix for first part of 126355
917a3a70f5c09f16151200f13eb89283c4bb2abf,expose -Xjoinpoints: from Ant
b2247654a3b35eb26731fac20247fc3007612eab,synchronization joinpoints: testcode
40cbd9f1d42610e95e533cc920e4fb74fb8749d6,synchronization joinpoints: aspectjrt changes
aedf0bc50890f195ac61dea2ef40f2ef7f144011,synchronization joinpoints: aspectjrt changes
40053a0469bca1382b71781acba6dad1ff0b1d10,synchronization joinpoints: messages
b96cf12db0651b621fca20bbbb09a32b25778071,synchronization joinpoints: useful constant
6629274a350cef09ad7c02d67ac194cab7b0bd93,including testing-util
91f54fd96f209fe138228040673a59f9cf210a92,fix for NPE in SignatureImpl reported on the list by Simon Walter
7235e9d089fa2b12b835cbaab7c253cb1de0b563,tests for 122253
9eb7fa0bc21878bfd2c0251afb4001b5eb55e346,tests and fix for 122253
26a8a862994acefb10a57d561b18c94ffeba41a4,"test and fixes for 143930, 143924"
7b5abac9187c943edac29dee41a7c5cb46c6eb49,fix for 83052
b4a28a99e4e7afbf3cefb3b43a6432b24525d7b2,test for 144465
69d420e8f33b47425c18e4d9bcf4a1595156871e,fix for 144465
f18d686bf02bb4dff4011ec3609a9035955da428,it's -> its
10f097893bfb615d3d7952252ab68bba1a1ad002,testcase for 144602
4fd9d65ae4b54b1dc0c2e04bac018c714a05f15f,fix for 144602
12afa8740ebca74541738b6c73034a035018e0b4,testcode for 129282
7e86ccf44daa9140a6576e03583c7be7aaa094ff,fixed up for 129282 (compilationresult changed slightly)
d072fd16eccdca9df642585297804902f68e16cc,test and fix for 129282
97cd71ae811def2ee79d34567f60acb9f76ebf0c,test and fix for pr144717 - array type as pointcut parameter in reflective world
62a76545892371369ad9e9ef78ebdc12a9fb53bf,update license to EPL
8997be03b5f65989947fab2057999cbf1199d478,update license to EPL
7fefd3c08bf3be0317742b6b1c85aeb16f66ba90,update license to EPL
b6c89301f2389edcd017c66968cce7d628a708a0,update license to EPL
c82fae9bb7478f78837f98ac4b43564f1eef8770,update license to EPL
b5525d9491fd8561b81c48e4e3d07d9631c5d8eb,"1.5 API: changed new PrintStream(File, ..) to new PrintStream(new FileOutputStream(), ..)"
a5b31830511167ea4a8b9d750c7e1d16292e0938,improved handling of optional joinpoints argument processing.  and updated usage text to correct an error.
4513e921c89fb3b8f037418a901e49906724e7bd,fix for 120739
a1a4d727398213b19facbd1827cb3373f2f41c0d,testcode for 145018
30ba1f01085bb48d8fb599ebf072dbc0b547cdfb,Another attempt to make this LTW change
319a0d15703c098b74335ecb9672f58166bf3c5b,132591 - Duplicate exception with aop.xml file on aspectpath
73d96a5cf3bb38a2fbda7f8ae00a7725c9728ec6,fall back logic when on 1.5 vm but necessary classes cant be found (test machine happy?)
f821ca3dae5681758d23a2a0531d0d42f017152e,test and fix for 145086
d1dbf827ea64012890fd2de97d684722f81f3226,use a loader that can find the reflection delegate.
5e74f35fa0ac6002b0a291259b88c1b0017fbf40,some code for 141730 - store type signatures in program elements rather than processed type names.
3e0650d8a084248c4eb93f22cd8abfdabe6ba2a8,fix for 145322
e769745da4ba14cb68c220b33f0232a920eeafae,"testcode for 145391,145693"
c3898d9b4eb958e58741fbd31a5c85c16ae5ddd2,"testcode for 145391,145693"
5a75601c50821c333d1777f0c4b7236368b175af,141730 - latest variant of program element signature processing
afe41a56ebf6c0dcbe69285a263f0e5739d58028,test for 145950
39bc21c734ee42b99644f30b78ec0f135483e414,fix for 145950
f1ad9e6c3550df1679ca5a79729ffd129d55f02d,synchronization joinpoints: code dump...
3beaaba0c5f801ff8be35288025f0a2e18be3095,oops! remove that bit.
d779def920f62f51d284be100fd0f4b9bf7b2f0a,synchronization joinpoints: code dump...
87ff820beb90bb1c989f873e9ad140a22bf63367,synchronization joinpoints: code dump... uses world rather than messagehandler
8d92b51c9c5a4038f57759c7024e9834896cf8c0,synchronization joinpoints: code dump...
6f1419826c990e919ff88e48d6a417fd973da06a,synchronization joinpoints: code dump...
65ff490a29f85cf4f3fc910e08ab5da8b7065040,synchronization joinpoints: code dump...
d73b7fedff37cb3c892b4fd4b48427111f569f6f,synchronization joinpoints: code dump...
ce25d10cfdefa47f7409903a99365cb7355297a6,synchronization joinpoints: code dump...
d93b84080d8da39d0e331566ac8a515f9acea5d5,synchronization joinpoints: code dump...
6dbe44d708bbd5d3754a8ab0de31f43c5144ef6c,tidied comments.
97e9aaf4ecb94f4f3ca38e8276ba43885fde7b4e,synchronization joinpoints: and ACTIVATE.....................BOOM!
4db50ddb1edbae0baa447a22eb18b1c60e26d5a5,synchronization joinpoints: code dump...
75afb31e38f75e61de5c15058d3332f3dac0df15,"Fix for 122580 ""Circularity Failure for Verbose Loading on JRockit 1.4.2_08 Agent""
1. New JRockitAgent
2. New lib/ext/jrocket/jrockit.jar for dependencies
3. New JRockitAgent tests"
4dcb8f3d88ed5e464bf31378d9c222fdf791ff4a,test and fix for 145963: faulting in aspects coming in as binary inputs
38cc0dd2f77eaea1778ede835e7da0aa9d871de7,fix for 146546
b8e83b78c412178f79f3d2fa9e1fcecfb0c033aa,flag is ON by default
f58b5d89371ed4454e65dbbca54032db4039151a,141730: underpinning changes for new handles support.  No longer 'leak' implementation details of the handles out into the rest of the code.
008efca98bdfe5cda6c32ec75575facf7da2c687,Fix 136707 new logCommand option emits command line to INFO
94e8e649569246be91bc9af895080f1b1c15ba53,Fix for Bug 140695 - Use LTWWorld not BcelWorld for load-time weaving (wrong class loader)
b28c0d22c0658239710c17315c30178202a33bc0,Fix for Bug 140695 - Use LTWWorld not BcelWorld for load-time weaving (AjcTestCase.DEFAULT_CLASSPATH_ENTRIES)
f4cd0bfb01911ae5f8aaf4a114fac0b921806f50,Make sandbox directories unique among workspaces e.g. c:\temp\ajcSandbox\org.aspectj\ajcTes1234.tmp
81abede5115df2b032b846c5ff8bf23050f68e34,Fix build: move createEmptySandbox() from FileUtil back to Ajc to avoid JUnit dependency problem in util project
fdbae3fda3e572ea35ac4a73373896b9b5cff8f7,"Fix for 139936 ""[ltw] WeavingAdaptor.generatedClassesExist() cannot cope with additional class weaving"""
abe25b029852a8c8e1c682a9a59413896d18dd2b,"testcode and patches for pr141730 comments #13,14: ""new handleprovider"""
0b27616f8e38fa432f01d07878d2b08ffc25d183,skip attribute for line number - confuses mac/linux.
11645343f9083c8f0b6d7ed73b3124ba857d0051,fixed decp bug and problem with 1.5 IBM VM
32167a810d4b31bfd5056b9db4c15cd4b6f682ee,"make the default warning level for my beautiful ""warnOnSwallowedExceptions"" be ""ignore"""
8cab27018dc4dc96ad5eba90df86dfe232ecb967,testcode for 147701: @DeclareParents
1468daa88534262ebdd209574d3be360a0c78143,"test and fix for 147701: @DeclareParents: was failing to include package name for checked exceptions, failing to report when impl class didnt implement interface"
c2ae48e581cd204a64f95f4dd3891d118a71eaf6,145963: patches from comment #3
2257fc7638ae9e939cbec9994464a5e1ae36c9ba,public accessibility..
791f8a7c3f37d9b10b8ad1692df998733bbc2f20,"tests and fix for pr147845, generic abstract aspect 3+ deep hierarchies"
13dde4efd453d32bb4f25781a8fa7aafc2cef850,test and fix for 147801: rogue bridge methods in a funky configuration.
497dcf1140b7ec4eab3aab80fa5a22c8259bae48,"Fix for Bug 140695 ""Use LTWWorld not BcelWorld for load-time weaving"" (use bootstrap loader)"
426cbdccfdf8fcfcda07b86d8e524d1034b2d0b7,"tests and ""fix"" for pr148007 - workaround JRockit ""goto"" bug by generating code closer to that produced by javac when weaving after and after returning. In particular: avoid adding a goto that branches to the next instruction (now replaces that return opcode with a nop instead), and store the return value on the top of the stack in a temp before branching to the after advice dispatch and restore it afterwards."
685d347782772e00d14b078c065162b44e79d40d,refactored implementation of weaveAfterReturning - this is now much clearer and easier to follow.
76d1bc7bdfe7665c6d4fd04c852b92f17d255ddb,148027: dont generate usespointcut relationship (for now...)
4dafe048cb1f5bf9a30fcfac58011fe425141b91,"design notes and initial test for ""truly synthetic"" members"
5b90af1d60b15994abaef2c9391b890b8605c482,unfinished (not sure of expected output) testcase committed for 147841
9d2bb0c6ea27b577797ca6c7ca21959377b40cef,three more tests for @Around
d97a716624fd4e6cf2bbff5e1f201942f0291a92,doc changes for @Around... wip
7f1b18423b266c344e3b262f9b59a6216c551b88,fix for NPE in compiler: 147841
4a4240e2df9fd9a8aff80e7d92595ba2265286f8,testcode for 148285
ffa7ca77ced7b9f874abb8603065452ddf195c1f,testcode for 148285 (commented out)
718543f8d7bdeec644aaee560066abd4a623578c,126167: Fix for @Around problems...
16d8120ef10e7934c658c5457fb46e67d4ed9b78,126167: Fix for @Around problems...
c9f311aeeb11fb1427ec8857c24cfe3ffa6c7c9d,tests and implementation for enh 147711 (use true synthetic attribute/flag for aj synthetic members).
045e82d5cebc9c9674ac71cffa3fefc34eeb042f,testcode for 148536 and 148537
75a17318a97a8528c2604ada7ce159b3e46f12a6,testcode for 148545
ec9b7f9c79f7f1e5c2ae616b3fd290448a6ee8b5,fix for 148536
bb685a123d8b258b2ab985b65e39460a3c84e0e9,testcode for 148536 and 148537 and 148545
5e24c70a7b30ae065ab83b1cb4e5f3c17a39c290,organized imports
be2aca6940a820f96cfc4a6deeb7d4be5bba767d,recognizes parameterized methods (fix for 148545)
c8e1c4e4ef296b9108af8036f30baad4443b5afe,another scenario for 148545 - generic return type too.
61449886f81b10106dcd9f8133768459a6a447a2,have DEVELOPMENT flag.
9ebe9c08cff7d8f4d3b2e8d9f389804a1478b909,includes the missing antadapter code..
97732e8f20108a4fe3f3ca66ea842f298c6531ea,readme updates for 1.5.2
d1be59a2e48808bc72dea4432dcf00ee50662e5e,updated readme
792d1dfd50e8b9ca5df70ea84c0b35de9cfba0f3,"test/fix for 148786: new array joinpoint problem.  tiny one line change, safe for committing post RC."
99d1c184fdbaafc772ae290d7af3b3430e33d33b,"Fix for Bug 148388 ""LTW weaver produces a debug message at the begining"""
b59b036af89c28616efeda9b4cef1043c34337d6,NPE guard for 148911
21e06a69892469bab688d2315e7e034047431082,test and fix for 148727 - reverse synthetic changes for aspectOf() and hasAspect()
2f2f5683643a0f1e0856ac43fa590c4b39f1be26,bit of reordering to Ajc152Tests - and fixed 148972
c3b3732cc91fd3718540ee92a9da1dc98bcf3066,and away we go ... 1.5.3 tests
8930b0ddd121c0235689469fec3ebe8b86a65c40,testcode for new handle provider (pr141730)
f6834c7692082a20e94f7d88841e6c7c3f96c26a,test and fix for 148737
eedc4a6101561eb788e3ae0cb573c92b3f0392ca,testcode for new handle provider (pr141730)
2f3eb4fc8e8fb9b76f82eb08f7bcd04d732a620c,correct construction for inner types and source positions.
f6e70ba1a3e362455931eb84d74199003943c60d,testcode for new handle provider (pr141730): helper method
6e9b3b60dbd738036fa658de6d8b2414b1a56eb1,testcode for new handle provider (pr141730): quirky symbols to use in handles (JDT ones + extra)
53eef314f44242faedbf23fd39b470518995f954,testcode for new handle provider (pr141730)
57120150bfebf93ba8347465cd88a29cff15e1e6,new handle provider (pr141730): new interface method implementations
dac2ff628bffa7a34c362ec65cd963df5f0e7b77,new handle provider (pr141730): helper method
97b5e687749801b5431368b9efeccc11842a27ca,change from 149321
bac686f005076e97fa351c7ed1e8a872b3776ed6,fix from 149554
6becfea965f575ea82af8581d8551b4ed5537ed8,"Bug 117854 ""LTW with Hibernate/CGLIB/ASM"" (document beforeandafter option of dump element)"
4a8b8532694b79c106efd1eb70070e71174b6f1a,"testcode for 149305, 149096, 149305"
a6b36f2034e7af068ac368526a0ce042d4a1621c,"testcode for 149305, 149096, 149305:  fix for 149305"
777801afde6cb904f72d821ca2b3db38207749f9,keep the verifier happy.
82f217fa97084beaa1c4c88ec2e96e4cf83e8aad,test and fix for 148693
477c46dc2b5e2be500ea5281f09784d8b3d0cbde,test for 148537
7b526ecf23dc03453f8f8adb3a25c67b0a7018b8,test and fix for 148537
8d74e6f01acd609c61db17449767808451566fe4,moved tests to 153
54934badeea099373c8988195fc6d359e04e4c7a,new weaver message - pr145693
d16403655828b58d1ffbdb8d9ab4457c097bd746,pr145693 - fix for part 1
d0c299daf6a8ac2e52c33ab4140257fbd60712dd,last patches for 141730
e6df082a65b5984834a21740fce1eacc534d2f0d,last patches for 141730
d1eb6f3a3df0b6c2694e4b036d6ab318a29e9713,look in the right place you fool
1b5f76ea13de634c148f46cf1dd37f936579ee6a,promoted test 147841 to 153tests
2c5ebb90bdac4eaf8dc7e9575ef7f0e3de30be94,testcode for 149071
9249d0c861535733f679f1307dfe334f2769c6f2,remaining fix for 145693
00669de71fac80693af27127e2587c596c1cf3f1,149071 testcase
369de870280d4ae4f1e984a7bd8a76affb4ed0a2,test and fix for 148409
58bbbe871e85fa2dfc92587b0715e0b04dab190c,"Interim fix for Bug 117885 ""Classes are reloaded in AjcTestCase.run()"" (copy test CLASSPATH)"
5c20db9edf8ecda77db8ad56288f615b11db1385,"Testcase for Bug 149322 ""Change Xlint cantFindType default to warning"""
0ad3ad91ae096f906b9ca964dd4cd9f1cb526a60,145018: moved 152>153
dad5fe881c44e475069d31a00e06da3335e3887e,145018: moved 152>153
76097cb5054c43c7f1f5ea28aa3183d71eba2573,testcode for 150095: generics binary decp
5ab92340fd029ba54a07e568e82e4dbe61580c95,fix for 150095: generics binary decp
e907c49da0f7c98e72f887b17d465defc4d2e58e,oops! testcase bug - uncovered by work on 150095
c38a878e00f5fa4bb51ec68d9cb4c292402aa14e,"Testcases for Bug 149322 ""Change Xlint cantFindType default to warning"""
5c5803307fcc99fa0f830b55000adadef3d857c9,test for 121805.  commented out test for 145442 (not recreated yet)
80b41cac550e3bd12240eca6b8eb7f6ad3ec9398,removing 121805 for now...
1a36c97b022e35906fcf5ed0981a2ca95800ea84,oops
e22244ba499571a43caf518567cba3717e4b5ce3,"Testcases for 145442 ""The line number is missing for an advised class."""
928cb4a192b7f8acdfe706a35a6e329cc0dff13c,"Fix for Bug 150254 ""Provide context for LTW verbose messages"" (IWeavingContext.getId(), WeavingContextTest)"
b1024db14f7290378784988e14dffd2def5c251f,"Fix for Bug 150254 ""Provide context for LTW verbose messages"" (WeavingAdaptorMessageHandler.render())"
b15cda7add8a6d7f288ce6132c9c2cd328bba7bc,"First drop of Bug 150487 ""Tracing and Logging Framework"" (Trace & TraceFactory)"
52c25536d8f9d8ad1438921e0542c259906a3793,"Fix for Bug 150254 ""Provide context for LTW verbose messages"" (tidy up ClassLoaderWeavingAdaptor.initialize())"
2b67955a7b3ef367fc45f4c9ae8c7a90e42e27bb,"Bug 113948 ""Repackage AspectJ"" (proposal document)"
2e81a3f807c74a9bbae7c66e19b2a94cc9c90c08,PipeliningFeature146781:Some AjBcel changes to reduce amount of garbage created during weaving.
b51730da12fa7fbde03bfd724bbd30015371f43f,"Bug 150487 ""Tracing and Logging Framework"" (skip commons.jar)"
b724c0dc811aaaeda5930e911945c607e9a7f03e,"Bug 150487 ""Tracing and Logging Framework"" (skip commons.jar)"
d558b00529bd9f5cdf2b237894a22d7a292d1006,"Bug 150487 ""Tracing and Logging Framework"" (skip commons.jar)"
711a5a62240ede7a1249801edecc15d5042e5b56,unused local
e750f4fcb5a0b4ace91cc7f7dfe091ff38666709,unused import
ab30a9d30cab6fd8f2621c98587120815ccddbff,"preliminary support for reading OSGI manifest, remove unused code"
52260f75fc3908c95ab0a7f3b9c811983f79ae58,preliminary support for reading OSGI manifests
da99c638d3fd59b8348c26f5509a565dec2a8564,remove unused code
f847cc59e7af417d57ad8db052680b91642badd2,initial OSGI module tests
7326efabc0093bcd39ec4c19b3034973cf900682,Restructured and added comments and new simplification options.
97b3ae73a8d18db916f0fa10189d658003eb068c,disabling test
beaeab3dbf69175b3f08c30bb6ae82aa6b4eb728,pr145689 - telling AJDT through the progress monitor (rather than a debug interface) whether the build was full or incremental.
b508e08b7057cb601f481ec326b1a320f66e3370,pr145689 - telling AJDT through the progress monitor (rather than a debug interface) whether the build was full or incremental.
d3376d042220a3a8de02b22a87131874cd4e48d6,pr145689 - telling AJDT through the progress monitor (rather than a debug interface) whether the build was full or incremental.
357bbe9eeb34748f7c8c2ff85049230db2adbbf2,test and fix for Bug 150671: declare error on set of volatile field does not work
d373429ee98f689574fb2657ef0739c58ed4e0b8,test and fixes for Bug 145963: add injar aspects to the model
ee7a4fd3758181c2bf7156407813827def6a06c0,wonder what the build will make of this? dependency from browser>weaver5 so that the JDK14 tracing code (and rest of weaver5...) gets into aspectjtools.jar
a915b6524ccb79d365ede0a5c65eefc278eed9c5,message was wrong way round!
9ec075865fa11db398ba75547c8375b2deda251b,allow exception to flow out rather than losing it due to an NPE
815ff5d5dff6f6f4203848a36fe139bdb399bf72,pipeline changes:  implemented stringify.
22437ba8c2acd7fc2421d5867d5a9051d77c8db2,pipeline changes:  printable
3aeda831002fa79227bf583322777525f0ab2309,pipeline changes:  tell us what needed resolving!
e2df9de0de998366dd70ce62c97751a5a470c946,"Bug 150487 ""Tracing and Logging Framework"" (handle missing org.apache.commons.logging on JSE-1.3/1.4)"
5adf1ef8bbd5ff2379bed15825f292ba0b3eaea5,"Bug 107741 ""Update WeavingURLClassLoader"" (update examples/build.xml)"
06f5e354a7f278ea16e6ea6b76d137e1e9487f55,pipeline changes: need extra hook into compiler lifecycle (after diet parse)
9fcd1e6ce6ec27d7b3db919e1b3605e190b31d3b,pipeline changes:  testcode
7ab3074afd99992ef9301311f7c1e1c4dfc50905,fix annoying stacktrace that comes out when running all tests
5526c123cdb6a8a92f0f5b0af66e7e65d13988ef,pipeline changes:  new kind of ResolvedMember for Eclipsey members
ccc044ffa26735e89eb697a393757e178991b72d,doh! uses api that isnt there yet...
cb812785a69a69f6eaa70ce959ea72c84062daa0,doh! uses api that isnt there yet...
397a19d441eaf7fdc67e841232b410358b48ba11,"Bug 151182 ""NPE in BcelWeaver using LTW"" (synchronize(loader) for adaptor create, initialize and weave)"
c4e60095c3ff2987b4605803c8f639ad2d3ef4c2,"Bug 150487 ""Tracing and Logging Framework"" (remove 1.4 API)"
54f7bb4f25792e717eadf21421c81ae1dc8e0718,fix for Bug 151845: NPE while building
9783d6431916dfe07b00581c9ff62aa5d53fc414,"Bug 150487 ""Tracing and Logging Framework"" (test default behaviour under 1.3 & 1.5)"
79d9aff324adce6ef480155be0db3db85a89092a,"Bug 150487 ""Tracing and Logging Framework"" (add timestamp and thread id)"
db06666e1c5858bdc4e6fb0c43ec2d74efd649f2,"Bug 150487 ""Tracing and Logging Framework"" (add JUnit tests)"
e4ab0ae5762be7d9869e0eee350677ac79749150,fix and testcode update for: 151673: after advice sometimes woven incorrectly into strangely formed input bytecode
29a19f08e441071b9bf56a2e424014896e916399,"pipeline changes: switch in World - defaults to ON, switched off via -Xset:pipelineCompilation=false"
fda5c9f9805e46ac370097799723f6541ef4416f,"Bug 113948 ""Repackage AspectJ"" (comments and questions)"
4d2d363d34b1f56149a991cd8297a0d656532ad8,"pipeline changes: multiple variants of compiler adapter now, one pipelines, one doesnt."
b22f23ad786179710eef4541c4beb0e8a193094f,pipeline changes: changed to cope with differing implementations of ICompilerAdapter
847f91920f147c71336fc50821a5ddb050b8c0a4,pipeline changes: builds EclipseResolvedMembers
2719757a9231f54c8634ee0df316894dd2e47667,pipeline changes: converts Eclipse annotations to AJ ones
d2e88a7f9fe29a207b38ac4b73b85e24fad21ef9,"pipeline changes: new info message for time taken, plus optional (commented out logic) for easily attaching jconsole"
e30498bef9222f1d16e759a692ed35e5683ee929,pipeline changes: new info message for time taken required change
a46a226073be6e9a2a7903d9968e7a3b2de4abfe,"pipeline changes: activated PipeliningTests, some adviceDidNotMatch changes in the test xml"
c8497181b172eaf282a239e21785fcc40b81033a,"pipeline changes: stores names of super types, not direct references (cost?)"
2f3145681eb99bf4a32461a366ab87f1108bd056,pipeline changes: changed adviceDidNotMatch processing and moved reweavable message (dont want it for every file woven!)
d692fc2a7de7acd11233efdab8b5bbeb98777b44,"Bug 150487 ""Tracing and Logging Framework"" (remove redundant TraceFactory.isEnabled() method and test)"
68c36e3ac9b5fc031a956800158aee15b0d44301,bug151978: testcase (commented out)
af9e8ba799feb154ffbd40c190b42f6b01ec3109,pipeline changes: fix for deep nesting aspects
50d13c720a2734330c043f45b457483960deb99a,being worked on...
eb31ec6c3d7016f7b57210f61c27daa54118c263,"Bug 113948 ""Repackage AspectJ"" (move module root suites out of default package)"
4a6ccf0f0d8b8320f665dbdfe3f06c4ac4d242e2,trace!
f1f468907e99cf8fcc0ec9a3dedd467a4f78e1f3,testcode 152257
832480f7290084fcbd63d9ab70c6eab5b7a8cf2c,testcode 152257
a3f3ae406d01081897b68c1344b4f23cbabaeed8,test and fix for 152257
079fb81e534c13dbc1b1f4cd01f4f70cffd45b77,"Bug 150487 ""Tracing and Logging Framework"" (remove tracing from ClassPathManager to prevent recursion in JDK 1.4 LTW)"
684562c498597d1181a3401c8d01c09aa76981e1,"Bug 150487 ""Tracing and Logging Framework"""
43991a1334b04cf9580bc62961da1351490f94a4,cope (not perfect) with recent change to containers in AJDT projects.
c6b1c7c63fd4f4d2aa39cd7be2301d849c720b27,build should cope now.
f4289cd1511ef1977fecd10cb1949c78dfbb9e9c,synchronization pointcut problem (see Fourteen.java for info)
a89eac7f94cbea34f2ca76e49a1c42a594194080,"Bug 150487 ""Tracing and Logging Framework"" (lazy initialize SimpleDateFormat to prevent recursion in JDK 1.4 LTW)"
bebb3640698bf2c465b64d9565123ec699dac45d,"Bug 151938 ""Handle Duplicate -javaagent entries more gracefully"" (ignore duplicate agents)"
d15e56b4599a3a5d19e42aee5ae72c2b05c243a3,failure when lock()/unlock() used in XML defined pointcut and would require synchronization transform of a method
572e8e4d8bf9cae92510e822c291e9bb791da683,Fix for failure when lock()/unlock() used in XML defined pointcut and would require synchronization transform of a method
13098e3b3480e55d1e96fd75669a7e3f1b15e6fd,"Bug 150487 ""Tracing and Logging Framework"" (fix Linux)"
9b96943ffeac0c120464cc268a0cd98b7667869c,"Bug 150131 ""org.aspectj.ajde.core testcases create ""out"" directory in project root"" (remove redundant logic that created result.ser"""
9664058bcdaeb4934a01969f4e5f651bc6e8cd71,test and fix for 152589: adviceDidNotMatch incorrectly appearing
e38e83903795e8904c92144c67e1674ccb30df82,fix for problem with transform of static synchronized method on pre Java5.
b6925cbe5f24d611b1463558ee4f9b180d3c699a,fix for problem with transform of static synchronized method on pre Java5.
ea82f25eb6a7d2f691a0990d9646f5495d699093,"Bug 150131 ""org.aspectj.ajde.core testcases create ""out"" directory in project root"" (use sandbox for compiling and running tests)"
b7ccac980f81164b32042522e85834c498f14b94,test and initial patches for 141556
db081c5bd89620352390b0d5e3cba9d9cd13bd0a,copyright notice
73b71e3834f1384ce77bacf3844222aab27c0951,copyright notice
7aa6cfeed1b51b7290a059de6a2f34009274e6f0,"Bug 151991 add modules ajdoc, loadtime, loadtime5, weaver5 to license check"
af722d0d6afc76147663ada3fe398a46e21fb90e,doc process for adding new modules (soon to be superceded)
e28d7fd48bd913ccfac3976623bf98a3752e116e,bug 149577 (darker tt tag color in .css)
f19e8f51c202a0675056f48108b005e414f9aabe,synchronized advice (I thought I checked this in right after the mail list discussion)
1e9ca71a253b099a3b3ed8ec17994d8be1f24995,bug 143903 - doc rewriting of javac tasks to support iajc via build.compiler
ff2377a7f3b3d2148d107a7c411cf8308d254136,test and fix for 152631: decp targetting aspect using cflow
908b4054bff043f50d8bcf12afb6801e0d2913d4,guard for 152835 - could be knock on effect from pipeline change
54c52c8ecd8ae73d254b4f545a56f7210b122e9f,better diagnostic message.
d559512e93a09110ceed21b7e6c4d8e13edb2915,remove debug
73368931c7c7b346b062321c83a55c86ecd41ffd,testcode for 152871: parsing bytecode too often (needs a wildcard pattern in the exclude list)
c779c96eff482f8b99fe5d7f85505f1792780281,fix for 152871: parsing bytecode too often
c6b01b10d34c2ad9464ea11321547515b4077087,dont need TODO
51ace9a1a3bbcb24fd2a0f08ff6fdbec27f47738,"Bug 152982 ""org.aspectj Restructure - Phase 2: Move tests"" (ensure contextClassLoader is set for JCL)"
6dca4cc41d0af83c9baeb1aa1734b48cec11b1b0,"Bug 152982 ""org.aspectj Restructure - Phase 2: Move tests"" (move Java 5 dependedent tests to weaver5, reduce use of reflection and conditional execution, remove duplication)"
f239f2a2ac6a887fd46e6d95e8fb4ec93e2e159d,tests (?) and fixes for 152873 - optimized check for @AJ aspects in LTW
4f3c86ded09ce6407d51ab6ca98fac6ed16f8e59,Eclipse 3.2 (JSE-1.5 and JUnit 3)
387c3ac6f23a39aebbc4044093c793009dfea8f6,152979: shared cache in the repository
282188781fc2c342ad12bd4173aee139befa0da1,inactive test case for Classloader repository sharing
a38edd39a8e998a22b41a0cf1928493aa0755e65,fix for 152388
039be6888f9ec674a0bbb0f5fc37486f8565fece,patches from 152161
b8dd4360f0814cbc2d22eb5ffee25a364b1993c9,"Bug 152982 ""org.aspectj Restructure - Phase 2: Move tests"" (move Java 5 dependent tests in AjASTTests to AjAST5Tests in java5-testsrc)"
08ddc0a60211cc895ed110ddf5f54ca55dd2bfa1,"Bug 152982 ""org.aspectj Restructure - Phase 2: Move tests"" (remove unnecessary reflective invocation)"
c021ad9391d046a1190e60ed4777d41b108fdf15,test and fix for 150467
19fb4370af2db817a9baf239dfe7f0e55bc9995e,test and fix for 150467
07c2189bdb6d133886056ea1c02a302975f1e724,test and fix for pr148219
dd10a2b22bb9db9db4fa1b0d9d1f7261eaf60cae,"Missing ""/"""
00851bff4ef25e75ae06876306aa90074da57a04,"Bug 152982 ""org.aspectj Restructure - Phase 2: Move tests"" (fail XML test if JVM not supported)"
594b441f49fd3be06e1bc1caa060194f42477f38,"Bug 152982 ""org.aspectj Restructure - Phase 2: Move tests"" (move MultiProjectIncrementalTests fromm AllTests to AllTests15 because of Java 5 dependencies)"
8df8db1be53dff9405da3a2edb542af2c28ea75a,"Bug 152982 ""org.aspectj Restructure - Phase 2: Move tests"" (move Java 5 dependent tests to XLint5Tests)"
fe2b911d4aaeb0fd1a853ff2a95bd501e1dccfe3,fix adrians test to allow MultiProjectIncrementalTests to run after this one
e42bdf150dc7dda76eacf36cdb8d7ea1baa75a9e,"Bug 150487 ""Tracing and Logging Framework"" (TraceMessageHandler)"
7a0f7a45b24c8dc9c63141edcb57f80f4a358f63,"Bug 150487 ""Tracing and Logging Framework"" (support debug, info, warn, error and fatal)"
1b7aa6a076390963293aad9c716880ddd2821442,testcode for problem found whilst looking into 153380
0fb1a38f58557cb30adae66ba19882d03e8ecbbd,fix for problem found whilst looking into 153380
11fe8eb9db9ca99da426b3f58c51b4315af5a83b,"Bug 152982 ""org.aspectj Restructure - Phase 2: Move tests"" (fix MultiProjectIncrementalTests, 2nd attempt)"
0adc866c0f8b8eb0f9d398898c052a3376936b8d,testcode for call and decp LTW 133770
9197a11f244b49c8567e1a46e937b5bb93a0175c,testcode for call and decp LTW 133770
67bbaac0301bf2007c16ab5b6ad0e62664a99fbd,133770 'call and ltw': moving type from loadtime to weaver
2d33e8d998fde7f5d695e8be56b2d197622e7cfc,133770 'call and ltw': now able to complete ITD binding for binary types in LTW world
0dde33db7477bb59728ad181f15b979d91310388,133770 'call and ltw': testcode
ddb5eea1bf53bda27c51750b1966044df97d95a1,133770 'call and ltw': isLocallyDefined() implemented - may not be right for all classloader hierarchies (especially non-delegating ones) - but its a start!
6bf6295895351381b81fdf1cb625ea8e81032c1a,"Bug 150487 ""Tracing and Logging Framework"" (override TraceFactory, trace info, warn, error, fatal by default)"
0850eef4c7060de3848dfdfe90c8b6c7d3d2e75f,"Bug 153772 ""Support stdout/stderr specifications for the ant compiler test step"""
2aac0a2e476d4c5bda5b9e2c5ea24ef337aa3388,"Bug 150487 ""Tracing and Logging Framework"" (remove TraceMessageHandler)"
41340ae6cb640bf77b6e68cce2ff71e5aa982a2b,"Bug 150487 ""Tracing and Logging Framework"" (allow LTW IMessageHandler implementations to add context)"
42f46b0604dde7fe289058149a8fbad93931b925,"Bug 153772 ""Support stdout/stderr specifications for the ant compiler test step"" (tests)"
acf2739fa68567d65cd776e583aab6d60c2e6991,"Bug 150487 ""Tracing and Logging Framework"" (WeavingAdaptorMessageHandler delegates and traces)"
58a3e87818ffaba69df25e4c0601b99f2931a31f,"133770 'call and ltw': now attempts to grab a delegate for a non-locally defined type, giving the super-loader chance to weave a type with ITDs."
efb2dd01da7b56b929fdd23c25448ded27182b5e,"133770 'call and ltw': now attempts to grab a delegate for a non-locally defined type, giving the super-loader chance to weave a type with ITDs."
82e3e13c66720ed17399821d478c31151b2d2234,test and fix for 153535
3b517caf402c6d7c52d4bcbdc86c7528ab828ec9,"Bug 153907 ""Facilitate LTW testing in a custom ClassLoader hierarchy"" (TestServer, TestServerTest and LTWServerTests)"
f37ab9ecfd9e34a7957eafba8e7bf577710ac18b,"Bug 153907 ""Facilitate LTW testing in a custom ClassLoader hierarchy"" (fix build break and improve diagnostics)"
bf17ebb5bbb02bb0279122b965d9af713fd59005,"Bug 153907 ""Facilitate LTW testing in a custom ClassLoader hierarchy"" (2nd attempt to get classpath right)"
4a53ac4202af0d7ee667474c7a1a4820e32a98cf,"Bug 150487 ""Tracing and Logging Framework"" (improve formatting for arrays and Collections)"
c1c9215efa1c1e332859dd50c103e2a0021e15fe,"Bug 150487 ""Tracing and Logging Framework"" (trace everyting test)"
4ce6cb8b0cd79d8ba746473af86a76774755b6b8,"Bug 150487 ""Tracing and Logging Framework"" (new/fixed trace points)"
f4566cf38517f789d676a72a61ec050806dbc69e,"Bug 153907 ""Facilitate LTW testing in a custom ClassLoader hierarchy"" (determine why the hell we can't find org/aspectj/runtime/internal/AroundClosure)"
3b49ad4a35edfebc8f92f7dd7daa05387c0ad7de,"Bug 153907 ""Facilitate LTW testing in a custom ClassLoader hierarchy"" (Doh! remember to build and commit testing-client.jar)"
59123b0efba484e81625d403ca36768e149bd451,test and fix for 154332: broken java.lang.<annotation> processing
193aa8c16ca07f5743987d8717d5308a54bfb8f4,145963: binary entries in the model: testcode
9a84fe9d3af82b03103c4566a953fc54837db1f9,minor refactoring for a forthcoming fix
1619a751e2a4a8a38676d5c96697022bdc798710,for AJDT dont store messages - waste of space!
9b03811333687b7a41baa1b9c9ff84344df86bbc,145963: binary entries in the model: various parts to the fix.
135173acd2c893e5bfbb420e9cccf493ba150bfe,fix for pr153572 LTWWorld with Annotation finding and boot classes
a562d831df36dd0ec0cbf6ff0c6526ebc8977432,141556: lint message sort out and memory leak resolution
fd3a8eca2517b4a7ab437c00e2c81a3cdefeeb3a,tests for pr153572
bec92132ab1ee779bc910c62fd8cb854973d06cf,145963: work on linux
0185a0214f790c6611b48b986e01ef97a399b6ae,some updates to ClassLoaderRepository - tested by RontimeWeaving
8b393cc90d5d63171154713e5a73044a1a2fddaf,oops! fix for serial version uid calculation (abstract class problem)
50f8ecc4339442c7abaf4d3a9995c1434b768ef2,refactored tests for 154552 - use new model testing structure
41af7600c8661ff5b7a66a1e97fb865b562bc296,"code has moved into model area...154552, comment 3"
945a257776a5879251ccb1b90cf24fd1d89bcfe6,"fixes for 149560: (1) correct the bcel code for creating clinit call (2) don't let singleton aspects be implemented as late type mungers, the clinit manipulation breaks."
1bad6cdfa2a530b74c30bb0d8122bead03413670,switch to a different XLint to rely on - since adviceDidNotMatch cannot occur in LTW now.
30c0ada8a7430c4cfeab89f94291f328099e9da4,correct the comment!
8549d861b124c20eba114b658e886bfbaf5d231c,"Bug 150271 ""Allow multiple levels of LTW information"" (make weaving/not weaving messages debug and add -debug to options for aop.xml)"
0f98c3d06b755e1474a556cea2928e6ccd49f041,112098: checkRtJar removed.
fa7ca52b5278bd824a43a08e3ecd5f038696bb1a,"Bug 149289 ""Support system and user aop.xml configuration files"" (add META-INF/aop-ajc.xml)"
435d87221841f5f73b312c4c715bc8bbad203b91,no longer required - model tests moved.
137ce3fd3c106581c35b3eba6f2e95612a34046a,"comments explaining impact of changing model dumping code - pr154552, comment #9"
04fa1dcce12934cc5cfe1e5e8b66523c10e93672,"Bug 129525 ""Don't Dump Bytecodes to Syserr in LTW"" (don't throw AbortException in LTW message handler)"
409e613aacda8d3e5bee8eed3d2919340e0ff7cd,141556#11 - reworked messagehandler with 'ignore' function! (wooo) - hope Matthew doesnt complain.
8516e5ac30885e0dcf1546cc372f1dd0d3f00d63,"removed, needs a rename"
e00c0f2931f040ca7796a8b4c51efba3d93d6d13,"back again, lower case dir name for linux (see 154552#12)"
04c679e8e06ab8295a9d6916960cdcfc1c0025af,testcode for 152848 'deploying generics code when non-generics types are about'
91c20abd138e0cf548e1cebc90fabad3586abc09,141556#13 - messagehandler pulled out of CompilerAdapter and changed to have nothing to do with holders (since it doesnt need to store messages)
5787d0e82f32648f30f4677c13aef68d4615e300,"Bug 150487 ""Tracing and Logging Framework"" (Trace.event())"
07e6e9a1767c860b483540ac165108983dc1e1f4,last of the dreaded jdtlikehandleprovider changes - 141730#22
fd3d29f4c44252e3ca9cba35ea43b1847971da50,fix for 152848: cope with discovering a non-generic type
b394aa711917bc4330bccbb65032171a12fcb8fa,testcode for 152848 'deploying generics code when non-generics types are about'
40cf61076994bf2dd6f0397b1bd0287ed546a75b,fix for 155213: made using date formatter lazy.
475afa91a3222f6839e7f087760415cc9bb76c98,includes refactoring that is in real Version.java
6be70973a704548a42e396e996c9d49915b92a64,"Bug 155148 ""jdk14 trace deadlock in oc4j"" (use formatObj for _all_ arguments)"
14e8b7d8f0c94d316665036c3968821f8874678e,"Bug 155238 ""Trace should use System.identityHashCode, not hashCode"""
090de7e4c5c9618f965259f93de6d490050543da,"Bug 155972 ""NullPointerException in ConstructorSignature.getConstructor()"""
0409738040af0a34cd76739dfff22d8c622198b2,"refix 112098 - check for correct aspectjrt.jar version re-enabled for Main (taskdef, command-line) but still disabled otherwise (for AJDT)"
e5b2cd7148abec67d52132a9cddb9aea91acc9a1,"refix 112098 - check for correct aspectjrt.jar version re-enabled for Main (taskdef, command-line) but still disabled otherwise (for AJDT)"
018b33eab8e607e54b65752cc65a25b66e1a0e91,test and fix for 155763 - incorrect codegen from compiler leads to NPE
7619ce1c2b03accdd1fb13db6045026a0e76a197,test and fix for 155763 - incorrect codegen from compiler leads to NPE
df98dedb103d8b85aca337aac9436b8c88064680,testcode for 156962: Problems with @Deprecated in method signatures
6a20efc0725fa4d87c7766478f5e4f06583762c0,typo!
7a4256df61f2d23aefb855ffb0ad6c6bfb2d36d6,testcode and fixes for 156962: Problems with @Deprecated in method signatures
43638daf5d222e4dd9af8788d575b721f84d1210,testcode for 153490: nested delegate problems.
8e14546e33d64d086865b8224806fce52f75f866,tests for 153490: mixing delegates
b49e8cae5b2473c7285c29f3ff33a621513ebbd5,fixes for 153490: mixing delegates.  Refactored a *lot* of stuff - promoting duplicate code up from AsmDelegate/BcelObjectType up to AbstractReferenceTypeDelegate and higher.
9892449cd6366540f650b45f548f8cc74f6fcae2,test for 156058 - commented out
70ae0f8df6ec8b77ea2940b222e11d6d411ec5d2,test and fix for 153845: Rogue signature containing a 'P' getting into the classfile.
359ef5055a0cfa1f16bf7e0de8d4a001dcdda542,testcode for 157054 - random matching (!!) with pointcuts matching on get of annotated fields
563711fb8fd867a89b0ffb18d68105ee35a34625,found whilst investigating 157057 - we sometimes crashed for bad input (duplicate class declarations) rather than just putting out a nice message.
c4eb5d590ba2578692bc8408e3f4880e71d737b6,"new type - not yet used, but may prove useful when we get into the situation of converting eclipse annotations to our internal AnnotationAJ format. Didn't want to lose this code!"
9a4f0495f37f6637578724c4e5aed87f9fcb4674,Fix for 157057: expanded EclipseResolvedMember to work for fields as well as methods and finished off a little more of its implementation relating to annotations.  I have put an exception guard in for something that has been missing implementation for a while - so that may trigger when this build gets out into the wild...
478d55f8bd604ee7a652c8be5012ec531da04308,Test for 157057
d46c28243e5bafd2390f5356f5d77388af046bc1,ignore duplicate aop.xml definition
a40594edf71956e8e7b1d3229a335ce3892ba4a6,"Bug 157474 ""Handle duplicate aop.xml definitions more gracefully"" (info message for defining concrete aspects)"
a06896ea1981bb66838fbb352249eb614b2f2946,"Bug 157474 ""Handle duplicate aop.xml definitions more gracefully"" (tests for duplicate aop.xml and -Dorg.aspectj.weaver.loadtime.configuration)"
9d1a56b3e8a0ffd055986e08612e3baf30efc25f,test code for 158126 - already fixed ;) just a nice test to have
8c20287bbf6440d6dfc296d46aa6a7d8b5a5917e,anyPackageProtectedMethodExecution
c4bf683e5ceb125bbd735eeccd380a489e246b30,"javadoc only - null Constructor for interface and static initializers, empty CodeSignatures values for static initializers."
1138f942d5c2367ef8a6abb4d30e724730bc8f79,154054 testcode
98a5d925536b291ca760ca510a2e06b7e3cff13e,154054 testcode and fix: noticing changes in around advice and forcing full builds
497a8095510715712b98ee41bbdd825bf9fde9d7,154054 testcode and fix: noticing changes in around advice and forcing full builds: bcel changed to offer pretty string for code elements
aefa777dfd64a8a90e2730ff442ebf99f832162f,"tests for 151772, 125981: incorrect scope for dec soft reporting"
f3f24b02f5b1e75d8fc7e590b6a64c8be707d4eb,"fix for 151772, 125981: incorrect scope for dec soft reporting"
e56a69a32149724c51daf0b52958607e5cc46eb4,test and fix for 158412: annotation style reference pointcuts don't work
b69748e35322013e378a5eb830fbd0ac8ace25f4,message patch from 155139
b53e59401bf0228e127edbde36efe074181859f0,testcase for 153464 - commented out at the mo
fc39df195868a601e071f4fec900ab1854c43549,test and fix for 148908: structure model
d7dbfc08d0cb7a9bdacde642d6dd8d3b948edc79,141730#27 patch - switch to jdt handle provider.
59b06d385800f2337787f2b34b06f1a9e19aec32,133532 - testcode for latest case
bbc4284b46b7f276239f059e96fe11852ca6f87b,patch from 158719
c50a557d3c5de6868dee87e187bf1ae33636cae4,test and fixes for 145442 - line number info for stack traces.
ea4ff8adad2347557c25d6e10e114132b7491870,test and fix for 158624: generic types and arrays
cd9fd1147b63c7a0df0c93307feae4dce7b19d4d,test and fix for 158573 - incorrect 'adviceDidNotMatch' warning appears
71273ed2cedc34faf0f154c8b74c7f65093553b6,"Bug 158205 ""NullPointerException when weaving with bootstrap agent"" (modified patch from rbodkin+LISTS@gmail.com)"
7ebbc9657a00e5288c69783be56aae1bb98369c4,"Bug 158205 ""NullPointerException when weaving with bootstrap agent"" (tidy up)"
a6f716a82b8c218e3c07f432caca3d00828ac564,"Bug 158205 ""NullPointerException when weaving with bootstrap agent"" (custom agent testcase)"
6de65b3a76da5d63412c3fd325754bd9f804cfc5,"Bug 158205 ""NullPointerException when weaving with bootstrap agent"" (remove use of -Daj5.def)"
ffc92dd6db1ac49de4f6396ff0e38834c7344cde,"Bug 158205 ""NullPointerException when weaving with bootstrap agent"" (improve declare parents LTW tests)"
e8959972193b4f74b173daca878f4af77089ccb8,turning off completeBinaryTypes
a0c198f33de6031842024b3ef36314420e535632,fixes for 145442: better line numbers for woven code
af08e729f0ca9f49ca139f1099eb2dd197be6ce2,fixes for 145442: better line numbers for woven code
a67ec0d3c573b37b0d1bbc8b2400da430dfb2faa,test and fix for 149071
7b831ff7356725b9872a9635d1e0eeb035f2790b,test and fixes for 152366: support AND in include/exclude/dump
782ade25e6d68caf361f51a1e040edbd6855842b,test and fix for 156904: missing type warning then it matches anyway
765c4be9a0945dba7c2c87104fec751ae7f26f2f,153464 - testcase in progress
513564a9e5b5ae5d03c4f0547ee7823e903d3c52,test from Wes (bug 159143)
6b31b32ae338cdecea6e20aa87fe05ca0cc2fb57,"Bug 132080 ""LTW concrete-aspect definitions not exposed to weaver"""
6978c427a1da9a291606d1e9a0a7ee98c436efb9,"Bug 132080 ""LTW concrete-aspect definitions not exposed to weaver"" (new ""weaving aspect ..."" message)"
81427c39398b2134bffa5485adc0defaee7db607,Trace loader parent and class lookup
3ebee688f8dab9c114ca61b685b324c19640ae9b,"Bug 158957 ""NPE in LTW with RMI dynamic proxies w/ pointcut reuse"" (ensure we can filter classes like $XXX)"
c315f9d9a754d01ea608d6d1ae020889d4018fc6,"Bug 158957 ""NPE in LTW with RMI dynamic proxies w/ pointcut reuse"" (restore catch(Throwable) in Aj.preProcess() and make adaptor disabled by default)"
c0ef7c724322530a361686fade5607ed0577bb87,bug 159390 Documenting long-known runtime ClassCastException from proceed
f176ce5c3f54b1401d7ca62edf22424bd546b263,tests for 156058 and 159983
2883a55829716132efcf288acec08bf3ab6826a7,fixes for 156058 and 159983
d532892d89865511ea39286e4ebd34fc20b96a5d,"tests and fixes for jdtlikehandleprovider, bug 159896"
7884c4e70e295ab0f62cfabb8e2833ed33df1d77,linux
9175cd11dfa04aa9b30da47ee8789bc79e24fa46,no 1.5 API!
f7508cf38732781a467aa3eb95a03cee157e2730,dont NPE for blank output folder (160167)
baf4958e10e998bf081c68ec047c5241f9d79c72,helen wanted this tidied up
f80ae0089b2a8f57653348b76ef1b7f89aebf2ef,improved - hopefully get more info as to why currently failing on the build machine
e6a707af677f170f3dbf41081f6ff296b90437d1,test and fix for 160674: simpler strategy for loading bytecode on SAP
5b715608033ae06bdcacfeb71397380ff0cf3235,test and fix for 160674: simpler strategy for loading bytecode on SAP
9030415d5741f7d4ac96cd055e860c7760d93d37,moved things around so that Xset can change world configuration
d701aa00e0747e5b14180867bd8f3d5213c90a71,tests and fixes for 160469: handle problems
fc750075fd91edcdd5e73cf04593ea3c822a746a,"Bug 158957 ""NPE in LTW with RMI dynamic proxies w/ pointcut reuse"" (give modified testcase for 120474 a unique name to avoid intermittent failures when running the whole suite)"
3ff7b362b50714806abc449bac38545361313237,corrected some problems with parameterized types in packages
f503685292371f5f0048ad239b92c680cb96c2b0,pr133532 fix: always uses a StatefulNameEnvironment (since needs to check the state object)
a9744fe1e9aad2d7222d036dc463d874f0a1d153,pr133532 fix: promoted compact representation to top level type - fixed memory leak when classes deleted
c3c65b32cb393825c7e654db36655afbf8f0e16e,pr133532 fix: new top level type (from AjState) - implements IBinaryType and holds a little more state
1256ae47a00858206c280fbbffe71fc009030637,pr133532 fix: checks the state object before going back to disk - will enable it to use unwoven class file data
e07c624587bfcb44a6840a0d943f5a24e7ab872f,pr133532 test
bc2f36fdbf0e0a8d59e9613b69a3b4639b1dd668,test for 149293: declare atType for private annotation
1a2eef067f87e9037bd39f20d4c682c642689de8,close files!
db68044fe8ea0f43a5e090a67b9410f4c334bff6,test and fix for 123423: getWithinTypeName() for ptw aspects
044542c6d5996806ce29156e83e1725823f5f8fe,test and fix for 161217
efe6cc79c4c19ebc8f7109f10220b13dc4efffad,change for 160496: refactored ajdoc main
757004ca6702a97369aac2ba62532f13ac5ced36,tests and fix for 149908: NPE in org.aspectj.weaver.MemberImpl.getModifiers
70dda814951a9cf2f79e958b2bd93f66f390b6da,tests and fixes for 148906: Support -Xlintfile for ajdoc
7b40e7e3e4b68d6b0334f5643931e00f06881cdd,tests and fixes for 161502: annotation style generic pointcuts (!)
e4a441b93c2f1a644784af90d8256f0d6c194b4c,ajdoc patches 148906
2d20069013a05c140f3ce605c2f1588535db19cc,testcode for 162135
3294a35d1bfb49772a188d71777f109819faa8bf,removing asm for the moment
a4d46605ca5acf6be6485e079a368afa67d5de80,"Bug 159854 ""Problem Diagnosis Guide"" (skeleton)"
c3be7fc35ccef9b868332a15a60c74fcc3186905,"Bug 159854 ""Problem Diagnosis Guide"""
b83891da5769442d335d8e61d52d16e215055975,tests for 162135 (commented out) and 162657 (not commented out)
26a4654ba4ebd7746b39fdf5d8f9122ea8246d61,fix for 162657 - remove the matchesNothingPointcut which has no source context (can cause npe when reporting messages)
80f9849bacfacca6d108ab375ed8c0c19a2bcfba,"Bug 159854 ""Problem Diagnosis Guide"" (first draft)"
710844d944208af8b70a64290d1d145123c80fbe,"Bug 159854 ""Problem Diagnosis Guide"" (tests)"
d89bcf0270367f233ae420984d6dbc8772010a7e,"Bug 159854 ""Problem Diagnosis Guide"" (typos)"
38af9949c6ffd1b07aaab3271cd57f83ce247286,"to pdguide added XLint list, more control options, debugging pointcuts, and more hand-holding."
10bf1155d2d1fad206749c1ee136664b2ef976bd,"minimal updates, e.g., links for pdguide, product stories"
2dbecd2538f135239f3d10a0349d51ac16fdc7e7,"Bug 155033 ""Use ajcore for LTW problems"" (call Dump from preProcess())"
4add2e21b067b1e0ea1fb6e862d5c22429336c4a,"Bug 155033 ""Use ajcore for LTW problems"" (move System Property handling)"
36ba801b8f3f45f8c9acd2af2b03489958b97b55,"Bug 155033 ""Use ajcore for LTW problems"" (add ajcore LTW testcases)"
c54bc0b1b5db182c431d7c1ac28cbc73edb229c2,"Bug 155033 ""Use ajcore for LTW problems"" (rename HelloWorld HelloWorldWithException)"
3cb2fd8d69a01c405f36b486831e5573d693ee2b,"Bug 155033 ""Use ajcore for LTW problems"" (change MessageHandler to MessageHolder)"
bce3f0847b7398fb3fa3bc1c076f04624f74c7a1,"Bug 155033 ""Use ajcore for LTW problems"" (new convenience methods and formatting for Kind)"
3ad35ac6ba6054f6b28d61f421ca08e2a725f04e,"Bug 155033 ""Use ajcore for LTW problems"" (dump class loader)"
d249e83d6f83a671c1243192aaecbe90d50af593,"Bug 155033 ""Use ajcore for LTW problems"""
a56894211c4c4f8565938d729db34de7ccb563dd,"Bug 155033 ""Use ajcore for LTW problems"" (OOM errors running AJDT AllCoreTests)"
e5a9298270b1ceb1a8bc03341107121a511949e0,"Bug 155033 ""Use ajcore for LTW problems"""
936ff6c81c794edc9f3ef00bba3562255518f8b0,section named for eclipse help linkability.
5b5f0da2e219064764eac4646944c17c069d97cc,Check messages without inserts
0c5490929372bdfddf9b869a31719157319f6ce1,update installer copyright to 2006
fefcb453eb01c78f40549fa143d29ec09c03555b,"Bug 159854 ""Problem Diagnosis Guide"""
59fcd7e0381512e59c6eed5c9429962b160ab66f,"Bug 149289 ""Support system and user aop.xml configuration"" (add org/aspect/aop.xml)"
bdb0b42d7d9264ef9d462adc5d3daf0f5956f188,"Bug 149289 ""Support system and user aop.xml configuration"" (add org/aspect/aop.xml)"
2a540e3451bd6fc6ce0de29f3a4f1f528c0d93df,1.6 VM should mean 'is15VMOrGreater' ! pr164384
39c89755c36f19f98c4775a0a7369c7bd810435a,tests and fixes for pr164384
6870da4cbcfbf6b2ec267d50e2bcc04fd32bcaeb,tests and fixes for pr164384
79b932a699266e049497247cf834eb70cb2061ae,fix for pr164317
c54fa62036a1fce21c2f50d0dbeafc025ca16bc0,164288 (Jdeveloper) - fixes and tests in
9db64977999afb029da8a4f06aaeb16eeab59953,weasily words for 1.5.3
7143428801aa03299b6ff1651df7012097024576,153 readme - draft
e8d2556d9448375fcf578695c082f81aa604fddb,fix for 165148 - don't resolve things you are 99 percent sure won't be found
ee958b0a186135d62735ae44fa3b0ca9d6d4cb21,153 readme - LTW Enhancements
25d72696da5568ab33ec8f4739a2542cf01437c9,153 readme - draft
e022f649ea1fce716d16fc0d18b4c6aed48f8b30,test and fix for 164633 - problem with decp incorrectly targetting an inner type
1f00a6ff06de145c9072aca7e16c6a1d5a4ea4e0,test and fix for 164633 - problem with decp incorrectly targetting an inner type
bb14e258c5d1769b3987a2e11f02c29f90f30e36,tests and implementation for 165153: outputting aspectj trace to a named file
f09bf4ff471e3d8a407d5c062a5e5c1c205e66db,tests and implementation for 165153: outputting aspectj trace to a named file
5ea0e5e6f587c268175312435b7295b4b01f1beb,153
e3b8df177c11518d8ab71973149bfa97a9287c0b,153
f8d70447e82ccc6f6ca5d6c06a6eaab702e59a3e,153
1dab3546e8f0e4dc317557563834db0bd6fac661,Test and fix for 165885: generic fields and pipelining problem
145f2240e5706f4012cb1decf944023a12de48a8,Test and fix for 165885: generic fields and pipelining problem
f1520e89e3e9facafe708d390cf91cb43fc1bcb3,test and fix for 166084: istore incorrectly optimized
59b0f4e58faa3578969a643b1993ee7cbfc4b5f5,test and fix for 166084: istore incorrectly optimized
9a5ffae290474a04abf2249abcef1f23b9487492,test and fix for 166084: istore incorrectly optimized
09e2b1bc62beb82dbaf746b996ebc8d7049380bc,test and fix for 165631: Dont allow multiple parameterizations in a hierarchy
c1aa8a278d257909a8d747d169b3fea09b031ba0,test and fix for 165631: Dont allow multiple parameterizations in a hierarchy
3a4d0300ff876bab290e14b6725efe7d1416bed6,fix for unusual bytecode sequence around ctor-call join point
25a8a5afc3c3b1f9c9b3332f19ff9a6681db4ad6,"166238 ""-nowarn doesn't work for load-time weaving"" (rbodkin+LISTS@gmail.com)"
c2abdf7c6f1e64e53632a8873e9c5b26c995aa01,"166238 ""-nowarn doesn't work for load-time weaving"" (rbodkin+LISTS@gmail.com)"
8ee3d8eeae145e60e42eaeb039fc9054d727246e,AST contributions: bug 110465
e5f15ac120710e8a08c9af3795d5a1e75ea69ebc,test and fix for 168840: incremental compilation and inpath
d101ea2c756451cff2ed0462cd13581e2a746661,test and fix for 168840: incremental compilation and inpath
db930ff50582bc069f293e5da9b972c9c6a13353,"166580, comment #6: harness now allows you to specify if ordering is important in expected output"
d7222a776d529bc84dee4d2da4796bb01b0659d9,"166580, comment #6: harness now allows you to specify if ordering is important in expected output"
616672d6f7b71a5cfbff20ec698c3d812dd7fc4a,test and fix for 169706: inherited annotations down a hierarchy greater than 2 deep
e9e52fea126c8177bf8fead1353ffc31e208440b,test and fix for 169706: inherited annotations down a hierarchy greater than 2 deep
e5ef495c96e6ea5872c091e1df455d227c26cd0b,test and fix for 166580: multiple output locations and incremental compilation
a4d58bfa053406735465eb73ea74920194519fdc,test and fix for 166580: multiple output locations and incremental compilation
6cf03da38e931dd898a845dd94d6f92a981c12f0,test and fix for 166580: multiple output locations and incremental compilation
ffebf4f882fe2c0a3a30b4f6b33918e2140fa4e2,made synchronized method message a lint warning
f1ce9eb89f9df1ffacb4ffa0123de7daaf527cb3,made synchronized method message a lint warning
bcdcb8a0d0bf2ce1b9f20f5950ab507ab786c19e,2007!
18535100f9d21aea94134defd298fc277b06ee57,test and fix for 168063 - incorrectly tagging a field as transient
d0650f0835a1830584fcb79f405286c8a6357d47,test and fix for 168063 - incorrectly tagging a field as transient
53366032c9158823a2d7527df96046f34b773c9c,170102: allow more warnings in <iajc warn= >
8944ce6832ffd5d47f7c6c7bac7e67c003aaedcc,test and fix for 168044 - processing complex self referential generic declarations
0396229c372cb2f0354fd40b2b0563b2f7f657f7,test and fix for 168044 - processing complex self referential generic declarations
18d0d458a36ef2760495723b0dd90c285b8f03fe,patches from 148190 #22
9c5ec0680fae76d5031e994e52afa2fdf3e09d7d,patches from 148190 #22
f80944e47e6318c9f2c0e54412b67b6ae00eae57,patches from 148190 #22
41fefd58f8b716468b2bdba2335eb921e5eb3a7b,patches from 148190 #22
cfd711b9628154e0b2eb2df174124699cf831f83,new ajde.core module
b0fd58d814af658a541651195f4adde645c797e5,spelling
a8600ef8d7221fb6dbe42b92ff72ec1e05d248f8,148190: reworked code to cope with new module ajde.core
085e7486e77861cef556136bcf6cfaaa6e51ff19,148190: reworked code to cope with new module ajde.core
9a4afec0cc96c6a1a126e61684389301de2e6df2,148190: reworked code to cope with new module ajde.core
c185ea6fda83999e4f9513999b9a38c8bab771e8,148190: reworked code to cope with new module ajde.core
86e1ad3b3177840190e1e13a811a6018d18120e4,148190#27: patch for new module ajde.core
df061d470fefacd871dc5ca29fa03bbd424c088f,148190#30: rebase tests
1d0224bf0f7c4d2ca84a02dbc772cfbf0353ba29,148190#30: rebase tests
7358a5c2ba452bf831e04235d713e742dbf713f5,148190#32
cdcce76367a48d35822757ee57287c797bb10e94,148190#32
95e8f940ab5216a9059f22dedd0e15ea02898d13,148190#32
9ddbb03d252603452dbebb7e5ccf82139de7847a,148190#32
e375a91c1d5727c0551dcc7b5193149823779d74,148190#32
a010542247f01c64386cef5a0ad3f8e502f0f306,148190#32
4f5615f0e9f56d9078faf5dd89330897298755c1,148190#32
7c9d27a39c17e765a4f59fffd52ff568b958d907,148190#32
3dc8161d78fdba4236d7ba90dca7fb3b50285f22,148190#32
ade1fbdd496c239d07ae7334de16a8c2422e5062,148190#32
a03aa0cd334806004c0b8060058e40704da9adab,148190#32
4820dcea42b8379dc40ce157ca09d2740313309d,148190#32
0a6ce34845218cd2d81507171afda6a6f1201aa8,148190#32
42f285fc5871d0d968926b13df36c3f48f9a8b22,148190#32
bf1c29c01c78ab4c3740e8c267d9afdb0cda8a56,148190#32
d1362a9759b0378881b86ea225be073b07059e0c,148190#32
c15e9cc0c51e1cc1357f4a526ea1218ad2eab441,148190#32
1e76ec3f7e15bb1c943a2baec3f6ade6c9a7745d,148190#32
fb86dd4ca2edac7e1eb639cfde1d4b2a4f450457,148190#32
8559a350a486171c332791c8364d857a074531e0,148190#35
0684161295e935428bb584d67197b49151219cc5,148190#35
baa2728b4aaf49ac680e0e19aab9db5b26516dbc,148190#35
cf7e6f356674e59932b21c8590157f24cfe85bfd,"Bug 117293 ""Java 5 compiler warnings in aspectrt5 and weaver5 modules"" (added project-specific properties)"
bee8f80147000f5539637be824a782fe41d51b9c,"Bug 117293 ""Java 5 compiler warnings in aspectrt5 and weaver5 modules"" (added project-specific properties)"
30f3104ac38f10e7c8f3b776517ce43eb2a22370,"Bug 171069 ""java.util.EmptyStackException in CompilationAndWeavingContext using LTW"""
8cd8549fe9bfb19dc04b307647f1a016860b953d,"Bug 171069 ""java.util.EmptyStackException in CompilationAndWeavingContext using LTW"""
de04ec9067585a048b8620a56d9aca25083bd054,"Bug 171069 ""java.util.EmptyStackException in CompilationAndWeavingContext using LTW"""
fe356d2b742c642a931d40e6e5c5c43118c35f89,Test LTW dump for JSPs
8ab740316c2afbe54fbdd081b0e4ad2790c3ef60,170467: methods with parameterized parameters not working in ITD overrides relationship.  tests and fix.
12a4579a442439df5116558cb4629776e9337cec,170467: methods with parameterized parameters not working in ITD overrides relationship.  tests and fix.
afad393293c7655e4161bb9b9625e8d0589c837a,organized imports
87e59db578390c77aabab01d2e5d19b3514cda96,171952: testcode
bce642eed89a9f3bfd21f232eaa5359fa3d81214,test and fix for 171952: method overriding with ITD using generic return values
6aaa774dd781b2cfc0cc78364bf8a0d2422fa518,test and fix for 171952: method overriding with ITD using generic return values
cc3266deb2c08eb71274c385fff1e09d0cb81465,New type so we can distinguish this special kind of PrivilegedAccessMunger
87da93e5cbf1056963305b0c3526c7d3df04b3ca,"Don't create multiple ExposeTypeMungers for the same type, it is *dumb*"
db03e4bbe73821a6fa73b6d96a09e1547e7c3b94,better info on failure
0b536f0118ed419ba9a9ead933a71d9d7e9c6a33,tutorial from last year
b945551fa2573798afbe62736e66147efe906827,tutorial from last year
2447dfe82db042aa10fa5c2a4ba0646c37dc26d7,major refactoring - writeup to follow...
b385e38ee74765c80845193e32bff2370dd78903,test and fix for 171953
6021f41af39a9d9baf4f4d258132e5429de83652,test and fix for 171953
6fe085391acac7f16bd4c39de623e8bb8d1da192,repairing HEAD
b6ae145e2ae12dbe183a9a3b77fff51fc731711b,is this going into the branch?!?!
41c8c1c3436b3ba20726f3e7d4d2e5c51108ed11,repairing HEAD
bc1b63af578c837455c4a867684ffc8681bc77f2,"dont lose that refactoring work, committing it to CVS."
4177bedfe6e1fe4240fddb7de6b9eaed38b9f0cf,171667: npe guards
3e8e5250e011d25027daf825d21ae55aabe62606,168795: reactivating ajdoc task
e1770f1714a29b2f42777374a526fa873345a601,168795 - ajdoc dependency added
1aef8a8cf7dfbaa164a464ee5b10e7688b6a0964,171953#1 - test and fix for generic method introduction and compilation errors varying depending on order of source file processing
b39189a3136651450226b37a0f29fa1260837d7f,171953#1 - test and fix for generic method introduction and compilation errors varying depending on order of source file processing
907dc1b73d052f9a0f95498b6ed5a92e0517cf65,"optimization: if forcing a public type public, dont consider it a change!"
e253331f1e8d3f4aaba29f73fada1cdd1f72a314,174449: generic aspects and generic pointcuts - dont ignore parameterized signatures for the advice method
712178b936edd32f5aaa0f06ac225fd2bab13379,174449: generic aspects and generic pointcuts - dont ignore parameterized signatures for the advice method
e0a105031fc054cd4f3e115f2285fd368e83ac6e,175806: allow for crumby bytecode incoming
e83cf86b07ea7cf7de0b4f16f8d928c3c94e8e99,175806: allow for crumby bytecode incoming
832c17cdebad0e9e2de8e16a95df43223bd6a9fe,175806: allow for crumby bytecode incoming
579ec14c9e86cdbaac656872e26f3e954e8f8946,"175039: incorrect processing of a type parameter that is a nested type, test and fix"
49aad5d5b4767aa81d2dac74ea80d55bdc8e9643,"Bug 176546 ""Allow custom aop.xml provider through IWeavingContext"""
2f71a4085231169ab07d54c2c6cc453a3c0027bf,"Bug 176546 ""Allow custom aop.xml provider through IWeavingContext"""
fc33d332792e3bc792b0d6ded56e3d894a1442cc,test and fix for 172107
737c6db800db02ec36d0951edece92c72e183079,test and fix for 172107
fc6259ffc5b21f03e25ba3433563c26a0091965f,test and fix for 172107
24efa707d2366606ca439004d9588ae8309894f1,fix for problem LTW in multi-threaded configuration - removed static from bcel classes
f458b3f74ec877f321673bf076df3016debcf0b8,fix for problem LTW in multi-threaded configuration - removed static from bcel classes
74a20b680b956b3376812af81cc200fa82b1a46b,linux dont like that not character!
8890217addb4b53ecb2728376917c68d952f94c2,tests update so works ok on mac/linux
2d2fa04a35b505dede77690b43a564225f990045,"remove swing usage, enabling tests to run with no display on linux"
7d21be99acce64728f70e3f4b26bc5390a658672,"these tests are now for 1.5.4, not 1.6.0"
499b8bcb0e89b39a63008fc68b44df9ed39d0750,"these tests are now for 1.5.4, not 1.6.0"
7be23e895b5dfe9f2b286dac4fb0737396df55aa,"these tests are now for 1.5.4, not 1.6.0"
797ec4d2ade426e40ada04881fdc83f799fd4cc9,"206732: fix to check for clashing ITDs, test already added."
df6923ebe1287237375e40624756b65dfaaa1a63,test commented out for bug 197719 - but not fixed yet!
73afd73a48ef87653436cae1e98a20b6bad1e9a9,delay required for some filesystems that have poor resolution of lastmodtime
5a431c218b425802552758635d0075c8fdea719a,delay didnt help
04190531acf7eed50d1c9f018442e35166ca1c0d,macfix: use canonicalpath in case the /tmp dir is a softlink
601b5fa0429787ab3ebf27a86c8701c4f83178a2,macfix: use canonicalpath in case the /tmp dir is a softlink
ba1e3789aa0207d4452685a551cd7b41f6a91fa3,"temp: skip on linux, problem with resolution of timers on file changes I think"
7d8851f559f7c2d6804b312f34206a08b1665af9,macfixes: can cope when /tmp is a link to somewhere
de82913f07bf9f05ccc20167bd5c31bf49c71d56,"fix for 205949: ""Unattended install of aspectj builds on the Mac fails"".  just had to cope with a null graphical component."
427211607630ca82f9f68c990cbf372aefe5b587,"fix for 205949: ""Unattended install of aspectj builds on the Mac fails"".  just had to cope with a null graphical component."
3fb03ca8295926e82a14dfff3319bd7dd497a881,203646: tests and fixes for ITD method on generic inner type
a43eddd4814edd3f4f558a31ee5ec298c4f4b4d3,203646: tests and fixes for ITD method on generic inner type
764b025806700b5e01b415fe078c8709a8816813,testcase for 167197 - commented out right now.
47dc21610bdce04e050e70a86f2b1f6e5077b705,186673: test and fix.  Don't rely on suffix for identifying jars and zips
aab2f152f2f663d788686cd7c1ec1662b76e3bff,186673: test and fix.  Don't rely on suffix for identifying jars and zips
6e6f379eeb5f5cbfb7bc317a59910da3cb73ed5c,pr173729: test and fixes committed.  Modify the bcel delegate at compile time alongside the eclipse delegate then undo it prior to proper weaving.
2d623e1c0ac093f53795c77e5d57cfb3045178a3,pr173729: test and fixes committed.  Modify the bcel delegate at compile time alongside the eclipse delegate then undo it prior to proper weaving.
d7ed3a72017b70f13f44515e5aa768d7f965b0e9,pr173729: test and fixes committed.  Modify the bcel delegate at compile time alongside the eclipse delegate then undo it prior to proper weaving.
ef9eee2a1870d8b7208ea4ce186e293cc70c690d,pr169428: text and fix for checking decp annotation specified on construct inside an aspect type
2966d25ce98ad492d5fb61b5262132e95e06da9b,pr169428: text and fix for checking decp annotation specified on construct inside an aspect type
21beaa0517e14803a202baf14da3d7b91ad11834,pr154923: guard for NPE in MethodBinding
035b27d00333ef36a35042f2e7a254c2f80814f1,moved 154 tests to correct bundle
60f020069426ff561d89b034d2849d1f07495e02,pr202088: test and fix for coping with abstract annotation pointcuts with context
08904ab5e37abd95a50875f36f4ed5ed757b0cc0,pr202088: test and fix for coping with abstract annotation pointcuts with context
b039791377f005005601d0d303150c5a376f1827,testcode for 169432 and 209019
50c3bd01737767ec3df8690fbbd2a38d008ac5d5,Tests for 209019 and fix: incorrect application of around advice when atAspectJ subaspect
abcce5cc64578187586156530c7a7f56fcd63c6c,Tests for 209019 and fix: incorrect application of around advice when atAspectJ subaspect
20c4e096716f935fdcf8b5d42135a9b101480a82,more testcode for 169432
4becbd27f0dcf9bf8ebeb7aa3788362dc62a09cb,testcode for 209051
15b4d76c67285fb37205e44d728e482fa13e5062,testcode for 169432 and 209051
5aced374f29c70db5af2730672bc0d14dfa58df2,fix for 169432 - allow @DeclareParents with no impl if the targets implement the interface correctly
6ae7fbf008528f4c24b2d63933ee4504a64164c7,tests for 148381
8ce0d477e2eee93305296ff9df85661387b88313,oops! removed rogue sysout
40f443c339a500f052e68344c3ade40e8dd7ca14,pr148381: implementation of support for using argNames to specify argument names when no debug info around
bd00110f8f65f2d3dfcbb40cf49835a8cb279897,"pr194314: broken LV table, testcode"
a6396a59b5f3aee96577b09e4c283a026a76d845,"pr194314: broken LV table, testcode"
65b66f474dab1ef11b49738dfd57583d754babf4,"pr194314: broken LV table, return arg name at shadow (for shadows where it makes sense)"
f08d8adfed55a11c37140e6fc6921efd5c2bd97e,oops! removed rogue sysout
8a8635a94f17134c32540282bf68d02c9501c56f,162539: NullPointerException when pointcut library missing @aspect annotion: tests and fixes.  Modified resolution of @AJ pointcuts and optimized searching for @AJ elements in all classes
2c53de22828f0d89e5b2abc04199eb53f30e21a8,162539: NullPointerException when pointcut library missing @aspect annotion: tests and fixes.  Modified resolution of @AJ pointcuts and optimized searching for @AJ elements in all classes
915aaa9d09a7aa104c96c73739e15464616e7326,162539: NullPointerException when pointcut library missing @aspect annotion: tests and fixes.  Modified resolution of @AJ pointcuts and optimized searching for @AJ elements in all classes
3d5c7ab0bff432c50f2634e6c149aa1e640786fc,86818: testcode
646b77427bf44ec097829a18ec4336bcd7b2e67f,testcode for 162539 and 176991
26873928c3b1e3739c5376ad35075f5477cc452e,made field final - does that avoid NPE on line 105 under tomcat?
9de03b75977599b12208c93c20cfc50fa85d7e22,tests for 211674
9391b1d1cfc643e249cf8f67a11eec2e63f98cfd,code for enh193065: pointcutdoctor changes
c7f8aa2ea0e1d774ba1eda66be46310fcdac4c38,code for enh193065: pointcutdoctor changes
d0c77dcb70741f11afb38fc3c9b4525c0ea061fc,code for enh193065: pointcutdoctor changes
13bf61e0f480da3b0effdbaa84768d353611c147,weaver dep for CustomMungerFactory - not the cleanest solution *sigh*
42b962499e9a151825fdcd94e09d487203132e91,211052 - testcode
657bfd69ad7e9f3a30122031dd1d657457255ffe,211052 - testcode
38137611550c73083cc8d60065363653a5eb9704,211052 - fix - dont re-resolve annotations
b1b1d16d6983861092fadd1c37a58372930490cf,pointcutdoctor stuff removed - cause chaos on the build machine
a28ee4c845a9429bcbe1bd0bdf72d5e3fa93f7e4,organize imports
97ab352ee79577d8a743134d8e53e6b69f6734ef,quick variant of support for pointcutdoctor - is this sufficient?
147258ea31cc8b2375b3c5961b875d9d05c4415d,quick variant of support for pointcutdoctor - is this sufficient?
0f4432d19a51f841717e6c0b8365d4ae3fd1ed42,signatures are Object - hideous.
d48385b2d02a73e4e68cb3e1a808e383a784d057,signatures are Object - hideous.
4e7583aac32c77523a357f9606be6fd29ec62a6f,166647 testcode: commented out in ajc154 - poor solution
f07ca5ac11808f354f7f4daffcd035300128e7d6,166647 fixes: produces a suitable error if XML defined aspects are excluded from weaving
d32f09ff0dafcc36a7655dc6fbda35f5b4feff62,166647 fixes: produces a suitable error if XML defined aspects are excluded from weaving
a36f9ce5a39bf5161996374ccce8384fcde39025,PointcutDoctor javadoc - 193065
61be6d639ffdd7feea0c3f88b09e00a3a3a84035,PointcutDoctor javadoc - 193065
197607d2bba1edb98804f13e1c16cf1b53e7d828,PointcutDoctor javadoc - 193065
5effd12ae3d931843013bc356704fa1ce11ff168,useful class i keep rewriting!
5755e1d80eba6cca1eca53dc26a9057f24e32100,166647 changed the error message to a lint
39e580cff820df73d5b7fefb32a80e3410064fbd,166647 changed the error message to a lint
489f36454f3d81f4c14729ec243e782aa31aa3a2,166647 changed the error message to a lint
9505640327e797a1c96f0ff51a900f5c0946a7f0,CustomMungerTest now included
4bb4a25bdc28058c78495c006c7dd699e152f368,readme-154
b50c23b0a214e315791677a5bfef990db271ecd9,readme-154
dcc82aeb8a70b73a73fc21ba93c9ed1a35c638a6,AspectJ6: allow for 1.6 option
d6dc3089f663756649e0078ceeb4563eef0e9331,AspectJ6: change install location to 1.6
075a7f8f81487e106c5b5a1d143793bd2da4f7db,AspectJ6: copyright updated
51e82f1ae82ceaf093fbdc12a8d8a97c7f9a74b8,AspectJ6: updated text to 6
28db8979d221cdcd8c44a16ec198c1a409089ed6,AspectJ6: readme updates for 1.6.0m1
7d631c5d17470723e2b9003cdc4f55ac0fd15bd0,AspectJ6: installer changed to mention 1.6 so had to rebuild
53e5bb5938412a4c6488b59a2b129ec354678329,AspectJ6: usage text and options processing updated to cope with 1.6
919bd9c7a93c5e7e0deac5564f5a707971354d99,AspectJ6: copes with 1.6 environment
7391b11e33ddf769e45eea5c8077518d4c8832a8,AspectJ6: improved diagnostics for failure case
0fdb4e141a75dd925b2263047c9f9e409ccd023c,AspectJ6: some simple testcode
13ee864beeae3ddc9043352bdcb9421db96a8bb1,AspectJ6: expected results changed as compiler output has changed slightly
ec634bd937c182fb4762e67173021fa8c862cfdd,AspectJ6: some simple testcode
023d696a3cdd1e713d4d16c7fe9b39d996294cdb,AspectJ6: simplified
f80db137d0f13461973eb7907c4881a3f49b71c1,AspectJ6: copes with 1.6 environment
35a5fcca4f588a3d0a0ba48f70035b15e9319640,AspectJ6: test suites
0295de4deb362d0c239c4ea62e6aa171e2f30dac,AspectJ6: produces more messages now
478aedaa7985c6d09e6bc43a18fd0ca129b0c66c,AspectJ6: some error messages changed
102a0cebac0c9dfacbf48a0bde232c0bff7fc6ec,AspectJ6: OMG its a 1.6 compiler!
c0a7b97a3a83d2b4cfc10108a8b43a9e2cbdd5e3,AspectJ6: tests changed to be more pleasant to work with when they go wrong
9ad3c30edde027b2f1bca1bd39decf04e96b8c23,AspectJ6: removed expected errors when -1.6 supplied :)
688079371919fa00ea93157e3cb6521126f398df,AspectJ6: test suites
e51dfd8a4ba53825beb324ec9e9888b0203508c3,AspectJ6: extra errors
c034e51427f71b7d0d62614e077b646882db7ff3,"AspectJ6: compiler is producing slightly different code, so suid is different... dont panic"
5d6e25dbcee72ebd09a1eabd44684789c3767e88,AspectJ6: Picking up compiler interface changes
b6718c69e22d7b32941b4c3aba74341757e80264,AspectJ6: Picking up compiler interface changes
5eebd9063cbd5f4ba6e3c908888d3ff80059de74,AspectJ6: picking up compiler interface changes
030573d456fa855623af8d347ede2af7cea0f713,AspectJ6: picking up compiler interface changes
cab36df2b1dec95b149717c7326e71001104618f,AspectJ6: picking up compiler interface changes: fields have moved to bits
73ed3bf9acf61225a58e642b1d21b646c567d669,AspectJ6: picking up compiler interface changes
1393d1b5dfaa7d12f1426b8d62a62e5e41d99eec,AspectJ6: picking up compiler interface changes
6073b6aa5f12926c29084bdcd8a23176dacc7db4,AspectJ6: corrected version check
1bd89958fb45b6d00aaa330d1374145aff105521,AspectJ6: corrected version check
1f45da2efa026604b1a9ae48057054b075df0f1c,AspectJ6: picking up compiler interface changes
5b0ec373124a0615254d8e4f0b9e637f019f555d,AspectJ6: picking up compiler interface changes
0acc167d70cc1b0e9cc3f055fa92600298cbdb5c,AspectJ6: picking up compiler interface changes
d8548b052eaa5f034f9d272fae4d3b696ab653f3,AspectJ6: picking up compiler interface changes
fdf51a31c8d4e7e3cfb33cc2871ea0d4675225c3,AspectJ6: picking up compiler interface changes
d4f62bbf33e1619d191e4f1ce2f62384ac35ff44,AspectJ6: picking up compiler interface changes
282127c1ce63a071d7200b2a6711dbe115cdee48,AspectJ6: picking up compiler interface changes
036edcef05ec8713e9c69d69ce01ac9a52624105,AspectJ6: picking up compiler interface changes
568d71b238472311e13fbfd72428155acd458d41,AspectJ6: picking up compiler interface changes
17389bae9f6c5b6e04fb456da339c7e971c61978,AspectJ6: picking up compiler interface changes
b80f821c76cca5f142321d002396b94625898926,AspectJ6: picking up compiler interface changes
f62ed8db5f070fde43fcde31c60a3a39e24b59d3,AspectJ6: picking up compiler interface changes
de4f7290877ae574723d03907b0353c33fc8db49,AspectJ6: picking up compiler interface changes: fields are now in two groups (synthetic and normal) and it isnt managed so well..
02a6a179ea9c9a1a08120114855a4f402d129d13,AspectJ6: picking up compiler interface changes
3265aa9f9a34c392ec4f39371664e2c17173bbcd,AspectJ6: picking up compiler interface changes
69f8372a069ec3df1974c685e23fce56e09d2e80,AspectJ6: picking up compiler interface changes
3b0d0cea728844785cf0627e6b13d4c81e9746c4,AspectJ6: picking up compiler interface changes
c3a96ab7368037ebd2bd1a4b176d6767560f39ac,AspectJ6: picking up compiler interface changes
c67a173f7f05d9725446e59fa491bd29b4150378,AspectJ6: beginnings of fix for proper parameterization of generic ITDs
ae6ffffa9d441f8e763f46c3cf7d2b96f149b5b7,AspectJ6: picking up compiler interface changes
70a91b2f09324c364ebc19bd457a5c6fe976da24,AspectJ6: picking up compiler interface changes
c6c22b6a6942ef6039a026fe871e72640374b160,AspectJ6: picking up compiler interface changes
f8b2e74a129cda256fd7fe58dea85661e6d62856,AspectJ6: picking up compiler interface changes
82798ce1343827def3993c82d295bcdae0f93335,AspectJ6: picking up compiler interface changes
063bc9bcebce0c6add525b6139754b54e3bd3b87,AspectJ6: picking up compiler interface changes
5164db2fd6ec08aff09816622136d9a8b4d79560,AspectJ6: removed due to bad implementation of generic itds that the new compiler has revealed.  Should be added back in for final
d535e17539fa980c1d817a58eb1ee129e983fec3,correct date
1d5ad15be66a3700a5227e551aadccdcdd335404,remove unnecessary imports to keep build happy
ee4d14771c8385e2f4d664ed474906cefccdf1f0,field made public in SourceJavadocParser - for AJDT
da0a976e4cdc552d89ddb10b56e3241c2f139537,support weaving of java. and javax. in ltw - risky business
c522105f33a84b9fcb396e8fd8ea51336bffaaf7,support weaving of java. and javax. in ltw - risky business
54b1ece541df95f958f28bcc40e5682ca1063dc1,removed silly println
114db350a407be5b0aa00d1b8b3baa60aa6911e2,bug 203384: getting ontype information from the AST
ca7f9f4bf393a4a1193773501b7d55ecd17ede1f,pr206911: tests and fix: generic super itd
48a295ed7318a91d801f998f9f82aa1246ade6c4,pr206911: tests and fix: generic super itd
a16a8c5e7c3c1820850fb4403a41048557ea0fa6,typo fix - 216205
866302f8103b931f99a9c1c6846ca2fa44b129dc,unused import
c84d4ced10011e5fa42ccb9b897e2215cf96cfde,unused import
ece07ea8a430b9c4c28cba42bef97bcffcaced4a,unused import
70f9602258fd98dc08ea7055b37ad8b7cdaad138,unused import
68186f7005ce4a3594d88adfce7d5ab42645c532,unused import
35bfd0a11780c91c82f7b9a3867099e0e2efe3eb,unused import
be092b11c70e2c23d61d90272b2d36fb8aeb7312,unused import
bfa7f3836720f04e410eeb00ccdaf7822dcbb497,unused import
40fd12cb97f724d5e56008924a5433c0f76638da,paramannos: obtain all the annotations together
750c39dfd4757e3c6e9fff88104a6f49a38dea9c,2008!
2f2ea564c21a05edb9a99dd42805231cdc53d02f,paramannos: testcode
070a3be4a6926d62c5bec5c2676a71d365fc9b83,unused import
af842fa12e8ff47a1f5bc669b19f3a704aeddd9a,paramannos: can fetch all annotations in one call for a method
7a6c7cffe4b6180b942b5e496660b8ac57fbe579,paramannos: testcode
5259e0bd36e7023d9d4c427d1a936b3a79221761,paramannos: testcode
de508dd920831310f7bfac3a833d9920a4d133f2,paramannos: improved annotation unpacking
7131d6ad9132eb620463e66a7b8cfce1397e5538,paramannos: improved annotation unpacking
bf5bf21b7c668f73401ec1515d60ff1f12dd1d63,paramannos: testcode
44fb53df1b5450191473161b3c3854fa9c48ad69,paramannos: testcode
895ba89d0a948a5717209f4a2731194b7c73d751,paramannos: implementation!
e4d51aa2897e5f8578714dc7c08d4da0c4402126,paramannos: implementation!
ca39a64d575d8b5298361272738f5324b1cb5a19,paramannos: testcode
4e0b5cfc0317bca6a487dc11c61cb26eb3adeb8d,paramannos: testcode
f082e49ea87ebb70a18f75b1b0da34286f24051b,paramannos: implementation!
760c8322dff2f3e5eb240ee423db00a15e084f54,paramannos: knows whether it is for matching parameter annotations or not
6ed595dc235f4e6f999e6256f08bdf76ef87f84a,paramannos: extracted from being secondary type in existing source file
69c887f2cf5d0fa479b5edb3811f93e9361f9125,paramannos: aware of parameter annotation matching
de8f001c29e04cc22e53a1ae17a58e705d271f89,paramannos: aware of parameter annotation matching
d33ae8fd19e783c8119cc2519589272ba90a802e,paramannos: aware of parameter annotation matching
f6b4f77bf3da486eda54b2b81e433f8a8cf63df1,paramannos: aware of parameter annotation matching
9735e48fbe882a819b25362c6c8fbf2bd1102652,paramannos: aware of parameter annotation matching
9e0bc9339fbdf019947ec8d51d74e39260a30e8d,paramannos: aware of parameter annotation matching
7026369f6087de42b881509b7637b25ea9681871,paramannos: aware of parameter annotation matching
cf93a41505586e6799afbaf2b46efae5f76e3cd0,paramannos: testcode
83d584dded49ec0861ad0fe1e6f5f15658bc477b,paramannos: ResolvedType can hold 'temporary annotations' during a match (parameter annos).  PatternParser supports distinction between parameter and type annos.
2ff820e5ebd70458c675a8167ef9c42d804358b7,paramannos: ResolvedType can hold 'temporary annotations' during a match (parameter annos).  PatternParser supports distinction between parameter and type annos.
c5c440e2d0786ccef63d859a7bb45e2e3a53cf63,paramannos: doc updates to give examples
0ae90ff0af83339150cc64b5239c6420b4e548a6,paramannos: lists outstanding work items on this
3690f9d8a3589a77854cb1e45ebfdca8d439dfe8,trigger build
5d3d1983a043a2d7011e2f54cce63fb511fde335,remove unwanted xlint for parameter annotations
0e59d9e92066f90ac0a2f8ada45e8249748593d5,remove unwanted xlint for parameter annotations
db0e7de7899794db02664dbd71ccafdb2dc89496,218167: test and fix: compiler crash on multiple dec @fields
067b7ef2939465a558812d2957c41c93fba8db61,218167: test and fix: compiler crash on multiple dec @fields
0318e1c2e441daef47aab6b3c33360dd1046d918,218167: test and fix: compiler crash on multiple dec @fields
199dd5ed2d7843abb2b8a4e51ba6fd3c71ebf42a,extra diagnostics for weaverstate problem
1e8a3a879be53516d00ef00f9e0dff25e4110099,219298: testcode
7e51c31ea8ebf3ef47578109e26aa257537ab518,219298: raised visibility of CompilationUnitScope.checkParameterizedTypes()
9c4979953901dbc398638338fa77313db6b5ebff,219298: testcode
4dc165353001baf072e5492621b19eaac31be374,219298: raised visibility of CompilationUnitScope.checkParameterizedTypes()
86bc573735f1065c5fd57f570456128a3423b512,219298: new error message comes out
876e7d62bb8cd5313377adaf02db372a1e539b82,204505: testcode and fix: poorly documented method in ResolvedMemberImpl now creates a sig based on the erasure of the type variable rather than using the type variable itself.  Passes this case but could be related situations that fail...
b91e3abfe2d9fcafac1eabaefab0f1c3ba8ae55a,204505: testcode and fix: poorly documented method in ResolvedMemberImpl now creates a sig based on the erasure of the type variable rather than using the type variable itself.  Passes this case but could be related situations that fail...
a22ad46047e2ddfa124c08621dd4bf567c8f23f1,debug diagnostics for spring bug http://jira.springframework.org/browse/SPR-4390
c75c9f9937291849957802ec14c5c565a776c859,216311: testcode
743a760afef2e934f6e4c14b7757e445d86b11fd,216311: testcode
228692968fa99517b7b172392095a6146cffe6bf,216311: add 'instance' component to field name and then use it to identify what should not be made transient.
f836185807e97bdd7f300a5f615b6234b84d1ee6,214559: tests and fix: cope with varying orderings for interdependant declare parents statements.
09bd9cbc83d87fa910e323003707a1ae95a96750,214559: tests and fix: cope with varying orderings for interdependant declare parents statements.
69953bdf556d5ae38e00d6f8e145e4d256945914,added test for 'enum' and upgraded testcode to use source level 1.5 (and JLS3)
b4715bcd195773fb2321270e20458482c00b3854,210848: better javadoc
1c6172217be1cc8cf778d1e30e18a870602e7c46,209831: testcode
19a25bbf7b6e2bc627e45c2e739a239816b883c2,209831: testcode
9addfb7d828f72c0c0c5434e9d853f9f2e2d90e3,209831: ensure resolved before matching
35de0630d5660ae17c50101d92f893c5b61f1a8e,fix expected result
4924463fee39c754342c9bc799c7a4b9a7b7437d,trigger build
6ca4854013bb96fe4500ffbc5172e6937b193320,do the right version check!
2e55637ff567455b60cea150ff3478456816b65f,fix for ternary operator
62871f3aee37edaf8a2cc867e39b0e37b94b7a47,parameter value matching: testcode
dea37b79ecd150bd40fb23645161956737e141c4,annotation value matching: testcode
ffa12d32408bae510865d0923efe8cd3cfc4d96a,annotation value matching: testcode
4cb79c2713f8c039d89419d4441de5895f304e95,annoValMatch: able to ask annotation about its values and their settings
0d3320ee4985314aed705f036febda2a8633a106,annoValMatch: able to ask annotation about its values and their settings
5e2673ab5a5143efb093f95ac213c0b603fc1a7e,annoValMatch: testcode
b2602650a75cf44e09290dc060ed59596a3b299d,annoValMatch: testcode
ad48a553cc53df64b433e568b59c23a9c5bcffa6,"annoValMatch: allow '=' as a pseudo token so it can be seen correctly in pointcuts: execution(@Foo(a=b,c=d) * *(..))"
38add973034e7d4e6436c19e3cb0a89e48d90997,annoValMatch: querying default value of an annotation (for members that represent annotation values)
5beab0ec09f8ccc7cea9778ea3d77e5d03486f0c,220172: npe guard
09050423f273b3015ebe88a329b66da363a68213,annoValMatch: implementation
90fef29a3e2966715fe449bbc7ad579bd3516420,annoValMatch: implementation
feaf0017acec0b8f609f63c02f85604c05a06ddb,annoValMatch: implementation
ecf4237a6326ac2ff5b4b4eac3ee5e798c5fcdd3,annoValMatch: implementation
e4524124edc0c4721ca78efcaeecb52106e4b252,organized imports
596926f6d75a5e4510ea98b4b3cec9fd95f51672,annoValMatch: implementation
aff8542d4f5e6b386dd0a216b4cf9adf5d413212,annoValMatch: testcode
fdb16f70ce79ff3ac1d62bcc5021e24f21756291,annoValMatch: implementation
0bee495324f80f798d5e29730deddc255909329b,annoValMatch: implementation
21b8aa70dbeb9a16cd533694a157c3f009a84686,annoValMatch: implementation
6a7f6c237dd9c1486fe6076c2a4ec688dccc1f30,annoValMatch: implementation
bfe8814f39f0fbb324b74b3d39f46d2145f1c628,annoValMatch: implementation
fb08aa0765f0c212273ee57c6637ed93dc3b7a4e,annoValMatch: implementation
acb02d9c33490ae835964d587c8262dd0aa33422,annoValMatch: implementation
b0a10381d5cfe599acea374aa96019849b42900b,annoValMatch: implementation
744276986b6a82190c2eea1f923df7fa1e06c3eb,"annoValMatch: allow '=' as a pseudo token so it can be seen correctly in pointcuts: execution(@Foo(a=b,c=d) * *(..))"
965c356e99e5eca80fda72d0541dca5f2f90017c,"annoValMatch: allow '=' as a pseudo token so it can be seen correctly in pointcuts: execution(@Foo(a=b,c=d) * *(..))"
b6ff503614aaf1c0826d27acbe6ba2484725c2de,"annoValMatch: allow '=' as a pseudo token so it can be seen correctly in pointcuts: execution(@Foo(a=b,c=d) * *(..))"
42e020ac0182f60c6ead59e093a5df0c494d33e2,trigger build
0966cf50084b850c72d85c3b874e7893a90bdf67,remove unnecessary debug info
9bf93cb12883ffb32db388a5d2a76b97cafca622,220255: testcode
7d05ceb7497c81bf5a4a846c1bd796005c0d8075,220255: testcode
fb9b888d7d1f1a0948acca7ba50da193d6195ab2,220255: use the right signature for the annotation added
253c10ae7f225f9ac3b0221e75b92277bad84028,dont rely on autoboxing!
493af53138c71affba0c75c53ecefd192df68fed,testcode for 211146 and hasMethod semantics - commented out right now
8be569b9ad27ef4d50a7a7d24ab99805b47ea9a2,testcode for 211146 and hasMethod semantics - commented out right now
5c79253a191046d074d9c893a1e7b50890f98890,m2 info!
9bbdb4128761575adb6e1c81e51b9c0bb1edb02a,stopgap for 220430
1bbe6f988d26d08b3482d0875d588ea1d1eb039f,set the world!  bug  219830
caf8960e2b98d6bbd4e5ade65f05e128c240ddc3,220686: wrapped weakhashmap
fca2a297a2c9bbb432280280e68c5619fda13fb6,fix for http://jira.springframework.org/browse/SPR-4512
182a728ab782b94f5c0f8efb1536fb4f5b913e9c,annotation value matching in decp
6a34940cfc2e8fe9461f9888544df72ae6c4f31b,annotation value matching in decp
2ca87769965dd971e58350e91301105cba94d3fd,annotation value matching in decp
c328f2f1dca0c38178f97dfc2aaf9d7098a7ab22,testcode - incorrect message with itd of default implementation using generic types
2c257af099b5fafeae0620a9c9176143be07b707,221558: test and fix: incorrect abstract method error with generics and ITDs
97e2ffa40e0c4b884b8e003d647fd0521bcb419d,221558: test and fix: incorrect abstract method error with generics and ITDs
c6f581c3c7cd72adede91a5b095bc22b12e776b9,trigger build
014b8ccd0015b2ca6f4aaf149fe2af5489489896,trigger build
d46d53b69a261fb79cda4bd08d6b8559d1525036,221427 testcode
7a989e83a72b50a48a588cd6751d5b2dd499e827,221427 testcode: commented out
a31b3dea01cbf925e6b22ef8789b3a3d86fd9160,193348: prevent NPE - might give peculiar entry in the problems view though
3a64e7efe65ed2e50969a0270e124e822c742eee,"201748: new testcase, currently commented out"
54bb3f036637b3c698294490bb10572039cb0f06,221427: improved output
77ee9570323566ec2b31e391e67ed24af425aaa6,221427: improved output
688af88cdff1ccfa4b72f269831fa687f2b9fb32,221427: testcode
906c84944b2e740a1bd781e936d48b31ce09b9ac,fix for 222437 - don't always ignore MANIFEST.MF
87015450336c5eef0572e445cddcdacfec10cc91,205907 - world remembers registered handlers
9e2aec721373a4bb90636c0f4d297cfac1a07d2b,205907 - world remembers registered handlers
79ccb3d967d245f6905eb918c9af8f3d09353ffc,205907 - world remembers registered handlers
8f8ea5ef2406e595a0716dc9c3dae1674d360c77,205907 - world remembers registered handlers
eea33c63a820011ca95cd7fd844133941349c265,205907 - world remembers registered handlers
5924da3cbfb32871141c1fc2e9ac23d29ccaecf6,191435 correction
84b0374d8a6d88141a1ae6cf06183262169d7d8c,180264 - testcode
bf09178a5f67d67529fd94ecb301e6ad865fae6f,180264: fix for NPE with -uselessTypeCheck option
7b1b5b16539747b6d21762f554479f44d2f8e0fc,organized imports
4297286eee93de4e6589855c776a97f4dc72c044,180264 - testcase
c02ccd671935a94dacbcfb0450d8f4e580c3af29,167197: moved test code to 1.6
0650df611a0c3f295689636b8eb0eff0fb68fdae,167197: moved test code to 1.6
8f4fc1f22258305e9b67c08f34254a028f1982fd,167197: some methods made non final for subclassing
cf8e7d49370e4d8b9a52818be560f43fd91c0ff2,167197: test code
2dc8002a98d373c0cf6082dfcbf8f83a11182f58,167197: Make array a subclass of referencetype and not resolvedtype
967ea6dcfe7dae7dc8d2c42fc2694047bc622ff7,167197: Make array a subclass of referencetype and not resolvedtype
739d01ffba57c23d643ae37f743d48abfce7f1a3,145018 - moved testcode to 16
31faca3733d21214b8672766ef65ec0e4384bfba,145018 - moved testcode to 16
e95bd7610b7da1aae7aa6fc309f78bca3d76ce85,"223094 - fix, add supertypes automatically if they are aspects when ltw"
97239158227f2170d33f4aba0dae7b01f1508de0,223094 - test case
1ee7c5fd027286bb855988b77e7e6e6430d3887d,223094 - test case
a60967b92a4de61a55569f8b4828ad9575b521f9,173602 : testcode and fix for duplicate ITDs and NPE
382db453417023bddc42ab14fb5fac4da45b7362,173602 : testcode and fix for duplicate ITDs and NPE
6629437ab7083aae89792a75e5bbc1ef71fd0a21,223226: testcode
1a370e866856f56916cd7816b41b936f75a3e338,173602 : testcode and fix for duplicate ITDs and NPE
75d917cdcf62a4c81befbfd535e38bb2b80a6466,164356: test and fix: ajdoc
331316fef7cc6c6ba77fd0ed63aaed630acaae28,164356: test and fix: ajdoc
d4d6cf4b6d2ee80c9ec23d36ee2f1158737bb6ab,164356: test and fix: ajdoc
d8e9bcdcffbdc13a2761329665f045049e705c45,164356: test and fix: ajdoc
6c54db924759b08effc806a93f633515c3e3a5d2,222987 - NPE guard
7faf2616d9d7dd7550753a96cf94f4ec7f2466e3,trigger build
56f03c408e3986f27e53405f491eae134bcefc44,"temporarily removed, see 223446"
fe99e6bfec2689b03ffcfd7da960e3cd3bd78a54,163802: produce sensible error rather than NPEing
8ce9dcfa94ad3c702fa0bbc8529d6e4b169661a6,184447: guard for npe
e372e390116d3d90f3ed5f6d8d1689c29932655f,223605: itd on generic type: test and fix
81d417ed1a5377d371443b8e94c3ba4c0112770f,223605: itd on generic type: test and fix
79b028d0d40b322500c7a1d6c2951789f69efcd4,Incremental compilation: exposed some intern methods for qualified and simple references
659bd1bd5a03eb975f5bdd2a2c6687d16bf4abca,214994: generic itds alias NPE: tests and fix
3dbf9fd5823d04e3ef6b9b39e5ebec62dd3aed35,214994: generic itds alias NPE: tests and fix
34fa37de041f1dbb28c060e4bd71acc220246872,"remove array class cast test, fix is not in!"
b5d4aaa0a5c9ec72a703597055a64fb8aeb6a862,153380: fix:  annotations and pipelining: don't use BcelTypeMunger
6bdb87d7462fd4fee4ec474937d4ad18b59b0852,fix for 224962 - cope with 1.6
7c2380f228ab7279e53afb246ab50ee59872a0c3,fix for 166514 - cope with missing type
7e9072ea7018b0aa9eac66d9cf2264b977ba0283,221427: optimizing project rebuilds
fb7511ebd0dfeecf8c3e8a41c7312ebcd0eeba4c,221427: optimizing project rebuilds
b294e1a5b22bf4a16044818edf6697846daa42f6,221427: optimizing project rebuilds
ee4050d41d3378212f2acee4d622507e2d8c28c5,fix for Chris Beams' ltw problem: dont use javaClass post state eviction
1c7f6236d74eec5a223eb552e59e1e89533b4be2,need toString() for < Java1.5 compilation
e0a94172fdc227ea6fc8ccacc5e79b020dac8bac,dont let bea test stubs make it into distribution
432dc652b1c43d382ea15313b0526cd4646138eb,dont let bea test stubs make it into distribution
c40d0c6097bc1069f3ce2336d26378c69b0e49c8,dont want dependency on a bea stub
702abd77dbb7f624146fff6266d7a8741e5aa42a,225916: test and fix: when pipelining use the binding to determine anonymity
68864bab9569c03dfe16491a69d55d36ef7d4bad,225916: test and fix: when pipelining use the binding to determine anonymity
e817beb188b7f4f97ea3cdec2e6cfac15905cd63,dont generate garbage
3179a7d863cb647e063dab11cada2240e71a76ec,null guards
ad96a03d9a1491121612dc6992d7a64e4943b712,dont loop indefinetly (eg.  Enum<E extends Enum<E>>)
6fbf0de6132bdb29d1174e7b552fbba2b03f96a6,160868: dont check paths more than once
1756ee86cb8d265e3e0beb820c91b7bdbff9ac47,160rc1 update
e389120e28f7440f0e77f115e1b7757d2196529f,227540: npe guard + diagnostics
f4527aad8efcfc306baaa4e915dee7d9ee731e66,227029: multithreaded bug in reflection
429bf85a57ca065a9c28c4974e897b2e06f65e96,227029: multithreaded bug in reflection
2a9efe4b94c05164ef39c4b49a5927a3f255b87c,227029: multithreaded bug in reflection
c1494c616e54a3a8288bd567a87e4287ba4a4b7d,227029: multithreaded bug in reflection
fd93d44c48e5e82b9c09edd19a7eb1e1efbfdc63,227540 related debug removed
9000241e75b3f0a3217b734f98ed1a0139c718e5,1.6.0 final readme
0872b206524c6e2fbd2a8ff65bf01378c31aa89c,1.6.0 final readme
7796a3f542c6bad580076b074fa778297d4683f3,updated build to say 1.4 requirement on install screen.  updated changes.html to 1.6.0 final
9ba565893debcc67764e63f748205926951c7a98,updated build to say 1.4 requirement on install screen.  updated changes.html to 1.6.0 final
528ae36edbe8fefcd1620b47758cdd4fc45095a4,updated build to say 1.4 requirement on install screen.
e08d3dede2af8b0aafe460f17a40912e621f4397,226567: test and fix - generic return types and overridden methods
3189369baa42e562541ba2c3f4c2f6619f1b532f,226567: test and fix - generic return types and overridden methods
bed3f4e45a663bc7c366bea3c66e17b27d3410e2,228633: pointcut comparison changes in AST support
3c12fb39f791f51ff9f33b4d40201d55f2047e4d,up to date with 1.6.0
373dbc4a6c443319b1fe7ea2273ca4939bbf232e,repair the stupid damage
677f7d0c4b42bc9d0a4ad793747e9183e3322f3f,228980: tests and partial fix
896000fba2b8c82c611ff36d58e70ab72f50c3d5,228980: tests and partial fix
95fd0b5d754806866d836e56e15b9ecb8a3fa1ee,rest of fix for 228980 - annotations bundled in with Nots
6e4d4bdf9fa5f2dee613932c8ada32606724b7b9,rest of fix for 228980 - annotations bundled in with Nots
85af57c52f16fb27506ed109681a7098ae73b197,229910 - dont generate bad code for around advice on fieldset for an inherited field
6df42fc2fca5a3074880dbc57b92ed7bdb238937,229910 - dont generate bad code for around advice on fieldset for an inherited field
6ac970dd10aaa0ce4f65e59697f31137b1adc8cd,sp mistake
45d16bebca01d960ad556cac7c762578badea50f,210470: remove thread reference stored in CompilationAndWeavingContext static - it anchors the context class loader
a2541b903640c8d4e5c20376bd75f2889e593a35,210470: remove thread reference stored in CompilationAndWeavingContext static - it anchors the context class loader
8d000634a5c24c7c93033fa7e0deb7ab6bec6327,210470: weakly wrap a classloader
e5583b04a2eef87eac84482485b60adc486acd9a,remove useless message
41cd95b3fcd154cbe279b2f8ea73b6e3ebf922f0,230134: testcode
0758535a3ce9869e81bd6ff3d1750bbae8d98df2,"230134: tests and fixes - move cflow caches from static state to crosscuttingmembers for the aspect, fixing their lifecycle."
d7d315bedcf39f75067a7dbabd9109c03ccbc67c,"230134: tests and fixes - move cflow caches from static state to crosscuttingmembers for the aspect, fixing their lifecycle."
4988216b02b9b9f360f970772adb613ee33b8e0d,"230134: tests and fixes - move cflow caches from static state to crosscuttingmembers for the aspect, fixing their lifecycle."
1daa03957dbaa90ceaee501321c67f12ff20c277,"-timers option, just times top level main() for now"
3e5aa808e98784e6329947fd43640874e449c1d0,removing test that builds into the src tree rather than the sandbox
5f97d461c819a42c52aa772499f0046db8fa1dda,230817: remap NPE - switch ordering in match to do exception handlers first and insert an extra NOP if required.
d3c3e32b533cbfa15120ad0414d07c5dbeec4296,209372: guard for -1 source line when no line numbers in class file
1eab1ab1d16da7a243e6712fb051efef3161075d,225785: rebuild of shadows with 229910 fixed in the compiler being used.
4e315bcea79925d24801acac5465982a683c6e7a,231187: test and fix.  Do the parameterization check after ITDs have applied
6b86f1f2afc52004dea6093d4b59b0f50164bc5d,231187: test and fix.  Do the parameterization check after ITDs have applied
d4477a7ddb3e2a66cec69f6580286b010b1460fe,231187: test and fix.  Do the parameterization check after ITDs have applied
bba46a2a74f2e93c61ef3416037806463821af6d,231187: test and fix.  Do the parameterization check after ITDs have applied
53987d5e3b5b4478b24c78f74a17651c15f718f5,231396: moved ConfigParser out of weaver jar
4c54212562938f3a94263aab1fd809e1b2a6745d,231396: moved ConfigParser out of weaver jar
376223395b9a06bb959874459b4efbc9640b2c89,231396: moved ConfigParser out of weaver jar
73399057a2e5a317074be23b870fbb3293f9e715,231396: moved ConfigParser out of weaver jar
78e2c20178e245e7dac74b9646841beaa376d0d5,231396: moved ConfigParser out of weaver jar
b6464f5bb94272e01fd77fab1c3a508334eefa8a,227993: annotation value matching support for field annotations. plus hashcode/equals on annotationtypepatterns where it was missing!
f365ababc310ac7edd90c7ebcbf91690d7ec2ed0,227993: annotation value matching support for field annotations. plus hashcode/equals on annotationtypepatterns where it was missing!
50e9d8d8aeebb48fe03042b0b22560937bf97af9,231478: testcode
452374ba5120a8c829e64460b518137d627a6eaf,231478: testcode and fix - allow for bounds variation when sub-aspect is parameterizing super-aspect
c1e48e941045f93f8c1a3419ded77ad12bea0531,231478: testcode and fix - allow for bounds variation when sub-aspect is parameterizing super-aspect
074f33192c227c32cd15c787a9483bfd8c4e33f0,231396: refactoring: dont look for annotations if they can't be there
417f286be87c8275104a6a535c96ca454a11a18f,231396: refactoring: BetaException type removed
a66b44fe27854d4e2c0abeda3a0eae843dba076b,231396: refactoring: BetaException type removed
139d7d337d63ce0b7d49525476be3a144dd995e5,231396: refactoring: CollectionUtil type removed
e1ca04451737617f62aac6e552bb193aac111f71,231396: refactoring: CollectionUtil type removed
c77010c48ecc1c81fcee006541e452932aee5216,231396: optimization notes
0d9e9230519499eef1e1cc3a8d7aec1413e8f8ee,231396: refactoring:
53cab61a5ec49d528bd548d2c1be559f2c5677b4,231396: refactoring: CollectionUtil type removed
1ba74d84a9a981af00b23985648ae491e8ac88ca,231396: refactoring: Moved CharOperation and NameConvertor
27c5c6324326f0126a121b76f9b543cdcfd4d0d1,231396: refactoring: Moved CharOperation and NameConvertor
5c49628e1936743d46eb9513e71af1e83ac8c6f4,231396: refactoring: Moved CharOperation and NameConvertor
97d14014cb5f4ca8caa2d794e3ecc5e6a0e80e50,231396: refactoring: Moved CharOperation and NameConvertor
514a05011dd9b6a8bfdf1cc64cbdf8ec3aadb361,"231396: refactoring: removed WeaverMetrics/LTWeaver, changed UnwovenClassFile to have a char array name and use that when possible"
73f8338a1cc6a329b3e3a1738cda25bc07723197,"231396: refactoring: removed WeaverMetrics/LTWeaver, changed UnwovenClassFile to have a char array name and use that when possible"
a8739e3359b0da1fdb60e2201f8fe37265aa9d04,"231467: fix: allow for a type signature like [ITE; - it means int[],E  and not just E !"
71fa6407d3fcd3e4aa4c2d938694d4e76c668bf0,"231963: implementation, allow -checkRuntimeVersion:true or false"
c398f4592708d48860e86905a2b980d419043fe1,"231963: implementation, allow -checkRuntimeVersion:true or false"
80600b2b0299a9f90635200706e7313abbca8b9d,231396: refactoring: removed NonLocalExit and moved StreamPrintWriter into test infrastructure
2cb78e1ec067d44db32f71021c4d43bed243c624,231396: refactoring: removed NonLocalExit and moved StreamPrintWriter into test infrastructure
f0142758d0b83904bd648dddf270199777d5ec6c,232712: fix - remove native when creating bridge method
93b7bedd6e367f07cf74782b6d367b9f6f418698,233497: dont produce SIOOBE if a classfile from the aspectpath isn't at a place that includes its package prefix
5e3e0b6a07c1a1e270786faf72e6a7a54972f821,227401: test and fix - use correct declaring type when building tjp so getDeclaringType() works at runtime
ce470b7a64ce9f1daedd8f1843d08ab53a501d63,227401: test and fix - use correct declaring type when building tjp so getDeclaringType() works at runtime
4a053f50b39dbe6560dc8fc35ea726b68d911f38,organized imports
0ad779a799bd8a7dfb6d248aa9cc4c822517dd90,233838: testcode: itd and declare precedence
bb6cebd29925b0b76e465983fce557fdd913b134,233838: message no longer comes out (same as at 1.5.4 level)
4c58246253458e494b3db5dbda10cb4d0e665af1,233838: fix: Scope changed to cope with ITDs
bcd990177151a73a48505c77d1007075262aee0d,allow use of DOLLARsandbox in the arguments to a 'run' test
51ea68030df38bbc4bd820147b943db6cbd199c6,organized imports
d8c8d2bb1b8ddbeb0d11fae9ebbea95d73fa2b27,210470: preventing weaver leaks: get control of the classloader references in Bcel
d78772db596a4169095d26ab6e13cf92fda0dde0,210470: preventing weaver leaks: do not mess up the context stack in a multi-threaded environment
384a650fffc423a328d4397bc42454423d917ad3,210470: preventing weaver leaks: get control of the classloader references in Bcel
bd6051887847ae44869991c89c916aaab71f3d90,210470: preventing weaver leaks: added getClassLoader() to interface
d9676664596aa81eca5b32967213257afbc09a34,"210470: preventing weaver leaks: Wraps a classloader reference in a weak reference, for use everywhere inside a weaver"
804d34e3224c14414d34c2fba8b9bf5c99f6483c,210470: preventing weaver leaks: use a weak classloader ref
b4a9f97fa9eb3b57aaff27fca62063185e76d0d6,210470: preventing weaver leaks: use a weak classloader ref
4fef2b08d0278b67d5957d10510cd746bff3e334,210470: preventing weaver leaks: cast to select right ctor in new bcel API
261516ac8697ee5604ed9928b59abb73d4dc24d0,210470: preventing weaver leaks: use a weak classloader ref
1cf316d19fcc0ae7be30ab2a8404b7caf95b710b,210470: preventing weaver leaks: implement new IWeavingContext method
3bd8068e4463ec4128fdbc9385e35cc504653326,"210470: preventing weaver leaks: removed bootstrap type sharing for now, it is badly designed"
56e0a03e4cb6030fe980c546891214d557070bbd,210470: preventing weaver leaks: use a weak classloader ref
9f5a293b81b32acdffd484f1f65d416f18293953,210470: preventing weaver leaks: implement new IWeavingContext method
f08b2920cb9f6b1ab9b593b3136886c584ef772c,210470: preventing weaver leaks: use a weak classloader ref
788899b050c9793be985d1721a8159092bcd3517,210470: preventing weaver leaks: use a weak classloader ref
255c5aa18cb8f4112a9a98cb9b387fc076ac8fd5,210470: preventing weaver leaks: big changes to better manage the lifecycle of weaver adaptors
f2e5fd250b387706b66742b9294d3e1e470476e4,Add CURRENT version
290386ef3aa800288e6474f092e46312d20d33e9,reduce string garbage
f48735601f07796a846fa2d619b74e10349bb334,slightly better doc
3d89dc1c587cf386aea8032745f214e3fa446e0b,spelling and optimization opportunities noted
f95b45c594aaca349715d3ba3c276d74bb3fed7b,remove unnecessary file
be991214a11cb99544303cfe51817edd0df15e1e,better named fields
2e138e485900fa4b2c8483f13e989f649832950d,231396: Comment #4: Big Refactoring
1fe2cde76555ab272b986fc2249ab35145f87b63,231396: Comment #4: Big Refactoring
43bbb31cf8997747a36eb7a2153aefd4bd10c741,231396: Comment #4: Big Refactoring
c25f60966bdf738b6430c248bed7cf917e847a96,231396: Comment #4: Big Refactoring
7f4907561f8491d60830ba0b108f137480a63721,231396: Comment #4: Big Refactoring
3259086920e238f5106a7534c16800b91eabcfb8,231396: Comment #4: Big Refactoring
91109eab15f47311489b5028aea3f1fc056b1d41,231396: Comment #4: Big Refactoring
93a6cdb2f643b3523aa0d80fab06cf6bed3db877,231396: Comment #4: Big Refactoring
42e8eeb45a876dd9a35afc51d13d1866fa049f6e,231396: Comment #4: Big Refactoring
0a162f8ebf5fbd1c386d333ceaa73bb733ac083c,231396: Comment #4: Big Refactoring
b01f3073462d78af66f323afc7c1800771f755b5,231396: Comment #4: Big Refactoring
b0d25d96adcad5440a662ac35880ad69d41a9358,organized imports
5e87462aec093e19f58b233ed99dcceae80833c3,address ITD problem - have to change LazyClassGen back to use BcelMethods directly (but hurts memory profile)
c5b4d748411edd740a17dcf6f1fb604eb5240fde,231396: Moved some mainline code out to testsrc
ec0b8cefd1557ad2deee928bd20164d9b38d3a04,231396: Moved test visitor out to test code
318c4a62b60e8c2497d6226bd5b73d786d3a99d8,231396: Use testutils rather than mainline code
4635b923a3d910ea2f2e7e3a30b3e9af760178ea,just doc
7852ac4696e6f505d1486dc6da5691a151938090,prevent runaway memory usage
5f8f039ce7297561c2805624a40158815beadfcd,231396: Comment #4: Big Refactoring: renamed type
f4be9b3770e013082082d49f1e3169445e9dc40a,231396: Comment #4: Big Refactoring: move towards using the right type in the right place from the Member hierarchy
377cc9123436ecd9156ba2bd82f38d180cf73152,231396: Comment #4: Big Refactoring: tidyup loose joinpointsig iterators
f60b873b16f0123cbe5143b1092d1ff512bfa157,231396: Comment #4: Big Refactoring: tidyup loose joinpointsig iterators
505afcd27a23ec54b9e29b012c8f2f32f235a0d5,"231396: Pass the classname, reduces bytecode parses to discover it later"
155bb27738a310c0b8100c746e88915e697066b0,231396: Switch to new UnresolvedType for wildcards
5b59b7bd571c4c5e3ba6b9a568e8aae05af56cdb,"231396: with change to pass classname to UCFWTPMB, less parses"
56ca1efbe8fb4e2b96adc4a91cd2cebc1c0cb3f1,231396: reduce uses of UnresolvedType.forName() - switch to forSignature()
1c40d57d893cf5fd57166f298c4ab3ecf7a45e90,231396: bounds moved down from UnresolvedType
8811c89c3d843d5d9c080d5c3c82ddb74c7e703b,231396: remove unused code
ca626d4b94ea8d905a8fef987c69f7c0cd1b16e0,231396: remove unused code
8ffb5393924b5db5c7d8e91a0dd9cfd81d3617eb,231396:
9b5a7e7feacee0b1a11ca9484532e8cf96388800,231396: move to testcase
66dad9449cb09a94d66891be9e5eeef37bba7bee,231396: organized imports
c59828a7db87f4f84acd37d68d8ccbf3165b746f,231396: pass classname as we know it
3177a16967d9af5cdd068b78678908543985e748,231396: use new Wildcard
6065757aea69aeee273f42e161ddf7483e3d597e,231396: marker interface - not used in anger yet
0cc91be69e45ff915bc1c5cfbad473fba6be74f1,231396: factored out wildcard related stuff from UnresolvedType into here
10cfb55c9466124304d287a9c02f8291cc08b8dd,231396: reduce uses of UnresolvedType.forName() - switch to forSignature()
dbea484241b45290d737c3c42e5f5be6ce2f512b,231396: optimize tag
6cb4a2771d84e0397687be08a2902421b414df23,231396: removed useless comments
f85b7f7da6334ea8606abaf8b6dc3dc9e2460a7f,231396: reworked wildcard handling
afa3695c19566f0fcf12992926e358a091fdb82b,231396: optimize tag
5e6e5fa2c329093c3b162cf8b09ece46981a6b04,231396: reworked wildcard handling
118fb4d21a506000b6eb33c82913974b58d5f760,231396: factored out wildcard related stuff from UnresolvedType into here
210aeea950b7e53e40c6b3fed6c1f1df981b2a87,231396: reworked wildcard handling
f4974d7506ea4eb5f86c1d7a3f9d427745ad38bf,231396: removed unused code
f65c24d544a1980f7010c15e635c61b97ef96e32,231396: shrink support
ce04c663a38357f59a59c856e5695288553e8d18,organized imports
182a4c450a962e09d17ad4f84d83d28c1616f15c,231396: removed unused code
846666ecae88c08104096106306dcefe16459382,231396: optimize tag
f98072a2cea60676a89ec865179cc073e0965d78,231396: dont create UTs everytime
2188dc0b5aec516e501f586fc069b439cbbc3818,231396: reworked wildcard handling
a097fcf5eeadf46c03f0f487ba4419d452eaf693,231396: optimize tag
ecde02265f5356d241b09037d2483b87e52bb876,231396: reworked wildcard handling
87036cf629fcf91eb492ae193a56b8a4899ca16c,231396: optimize tag
84cc384edb9c8ce5a58fa6eecb2b87a92a1ac14f,231396: mainline code moved to test area
68c3e663d1f36ede956377406c2315e923760988,231396: mainline code moved to test area
86a5a9463954483d63253fc9f3cf2d300931e460,organized imports
ba83575cf27d18f02b995db8b34c5615001d2351,organized imports
555fa54a60e192d7d7d274690cc20b46b3a6e60a,organized imports
61c0f2cc1ac4059beb1f0207d58b57fb820b2f83,modify visibility
8892246b8670e80c47339e7e9257350dc9b6063f,modify visibility
ea4ce887e128cf0182ccbf764a171137ea659272,234943: testcode
23cb4d65b0adce8f62d03a62d057d5921026c1b1,234943: depend on the right interface
b0e65e02b9d877cefa2987aa119e621860529b70,234943: implementation
97c8fff7799309dfe86dc146283667ae734a43d7,234943: implementation
023bfee724aff5d4b4688db89741863c64be3f4b,organized imports
6b0a1b5e1e31c4c4cc949bcd32579f301bc63ecb,organized imports
08234af1749cc56c8c6b4b8f5cebff333609d21a,234934: bug fix - npe
57d181b644a6cdffad6130ad24a5835c1da9d120,234934: bug fix - npe
239e51fe25f1b88118b77cd1717bac336d536248,235204: fix - for recursive call join point
e7a6acd6d481f219ba4f87ec1a2cfa29e5aa9fd5,235204: test
580fdaf3abb0c416d280f6246348a002801db2f4,organized imports
bcf1554a1090c210da1ff66f8d8a190aac6b38a1,organized imports
45bc547b981668be3c2ff628ebb38cb34d5011c6,organized imports
0a38e35bc83f2077828e1c67306a8cd89b5e078d,avoid NPE
4b7550584f45d6be577e54f59563bbeb7093040d,optimize tag
f8060aaf9bd31a0f6865a4df31039b3482cd7373,removed unncessary jar reference
30b591e1793994bbbe5e3978d29fc317dd432da1,"Stupid bloody tests that don't tell you why they failed, I HATE THEM - fixed this one in one place."
52e8c2b37de4e4f18efe303b0e49e471ea75077e,235597: test and fix: annotations on generic methods
14714d87d8e6822bb980c6fe6e3f5ef0a26537f7,235597: test and fix: annotations on generic methods
4f91c7ee4bb1bec78360e3c851d68202edd69c49,removed unused stuff
d9767a2dbe6c6a32c58fd547128a5b53f40b5b6a,231396: refactoring AspectJ: moving stuff around in the Member hierarchy
e5e5066fa5491606981aba50e33598e18de1bc06,"231396: refactoring AspectJ: optimized packing change integrated, can be turned off"
85cce7479e24ef61d35ba537ce17ed3feb675163,231396: refactoring AspectJ: removing unused code
9883ca65e71e35d9950f0b6fff468e2b0f8c87b7,231396: refactoring AspectJ: tidying up
eb00b928a548f6ca64ab3a0f6ccfa57c38e80bec,231396: refactoring AspectJ: tidying up
dd101527d7963a26052180d9ac31c0d6317cc579,231396: refactoring AspectJ: tidying up
40e75de834ad94dfaf636ea67122ca96a0be9b52,231396: refactoring AspectJ: tidying up
9d503f6e3b8c9b425498a2ab3df1a6545359c616,231396: refactoring AspectJ: PMD reported - no need for ctor
434ff38e892607fcd76a3dc416751a204b24cb7b,231396: refactoring AspectJ: unused
cc7ecd7bf7e0384f0fe34f4d81081182b918f2f4,231396: refactoring AspectJ: PMD reported - made final
c0641f2025876e0307526f7ce3a579c406a6c984,231396: refactoring AspectJ: PMD reported - made final
3e893228a35c07fb6f369d7384d561d21b1ce35a,231396: refactoring AspectJ: PMD reported - made final
5c1713f4d5cdd5b5ad6725d571037b3673574f5f,231396: refactoring AspectJ: removed Unresolved interface usage
93682f3aa867418f9987070ca875b54624b5b29a,231396: refactoring AspectJ: removed Unresolved interface usage
b692b9a320db846310413060524eec83984a7aa8,231396: refactoring AspectJ: unused
35f934a8552fe8b9eb97afcc071377d364282199,231396: refactoring AspectJ: PMD reported - made final
5f61e1b40aad4f10c58400293025745a383df0b7,231396: refactoring AspectJ: PMD reported
a7a975ac4de9b1c686be6b275649483b79a6791f,231396: refactoring AspectJ: PMD reported
8bc9294c09f5438ea3e6ca11f456da5ec2cbd467,231396: refactoring AspectJ: PMD reported
c844a904e066025b93288609dcc7f3dd7ecf16ee,231396: refactoring AspectJ: removed IWeaver - possibly need new abstraction tho
439ec9537a7b24361f7ba9a1da4f6c860dc69eba,231396: refactoring AspectJ: unused
2e490df49888eb906010c00e8d274f4879e7e113,231396: refactoring AspectJ: removed IWeaver - possibly need new abstraction tho
af275059397b3297df67ad5c5ffd3e707ebd3041,231396: refactoring AspectJ: PMD reported
9c2055688d87b9d38c5705ce26334f4794ae84f2,231396: refactoring AspectJ: PMD reported - real bug in Utility
5dd6c0eb63ad669253e64fcb969beac8b47794c0,231396: refactoring AspectJ: Due to PMD reported problem in Utility - had to change expected code
9e4b5414762fd647cd5603098cb26bd9ff937e90,
e4dfc7aa94216cea4f9f15608b21c25c95570b0d,231396: refactoring AspectJ: simplifying resolvedmember hierarchy and removing unused test code.
185d841fb8b93ff3a91dc032d9ee1ad8c0b8a60f,235829: test and fix: generic sigs and inner classes
6c13ed35770d71e2f4df1393f0ae7e976e291b23,235829: test and fix: generic sigs and inner classes
0fe881dc527459faa5dfdf032416d4d8bf769124,231396: refactoring AspectJ: moving junk out of MemberImpl
7f4f64f7e9306073a5f0676e3bb925b62f4c94d8,231396: refactoring AspectJ: reduced unnecessary sig parsing from strings
f3ca71937c326b7d10d4bbd17d5b48350ebf2ad6,used wrong level API - fixing
611c03484bff409ec0f4910bfc65d4999d0f73be,231396: refactoring AspectJ: used cheaper variant of method() creation
5336f5545215e404e6a332f11fc8e35607fb0caa,231396: refactoring AspectJ: optimize flag added
0ea352fe3489ccce570f9dddb6106c18639d43d1,231396: refactoring AspectJ: moved getExtractableName() into here from Member
3948b598c5735c718cb81bc025bcb285df6f7d0f,231396: refactoring AspectJ: useless count field removed and new constants added
489b0d0fc2e48ad6537befb40019f976a622f3e2,231396: refactoring AspectJ: includes latest changes
11c9489751843187ba138ea7f2bd32fc9c2e2651,231396: refactoring AspectJ: use getExtractableName() at new location
a1f35f502917243dcf685cc32af6558512dd36a7,231396: refactoring AspectJ: constants for two very very common types
41b1940e0ef6353a03969c8ef77fbd0af5c2c278,"231396: refactoring AspectJ: simplified Member again, removed string compares for determining MemberKind on building shadows and moved to constants for TJP/TJPSP types."
33dc2229ad551eec9628e57d3885eec78d276d2e,switch to container from jrelib
fd97c58e9a603c538977bc7ecc68099f5bbbef00,switch to container from jrelib
47b0ff57d3cb488ef4e2a1f5af889fcde2b2d280,switch to container from jrelib
fa36c54f53e1f9db2a47910cd8bec0cc28cc8dfe,switch to container from jrelib
ef3d7dff3d00b93d69f5a607dd35bf5b443d84f5,switch to container from jrelib
8e5187a3a5e91d7f32893f1a89d4932d9186d3f9,switch to container from jrelib
4e1b86897142faa3928004c20818b47a8a179e91,switch to container from jrelib
198ec09c69aa0e886e988e6d083155cf48756be4,switch to container from jrelib
92a31704db43081b2db3ef173f8b61a6ebc3a17a,switch to container from jrelib
d525ef12c916f98a7ffe3b553e7ea512ae42ff45,switch to container from jrelib
70f144da25e3d5b01f728757e5ea27b1cd0a8e56,switch to container from jrelib
3b2109ac656e354034713b090f7d70a2d9898486,227295: fix to avoid CCE
a481d9b6bd688096c694456b98416aa6433534e1,switch to container from jrelib
0bdeea7a300cdd7089c988b69ed4d346f7b53724,switch to container from jrelib
3dbbb88e9271404b46dbe56826128f1ec4f16b32,fixed jre lib warning
dddd9b0eda7b5672470b78bf26a75e33366619fb,fixed jre lib warning
372770bde105c56e08c3d35040a7ea210b383f32,fixed jre lib warning
6e58dcb6f78564de40a82f8ccbaf44b24da9db45,fixed jre lib warning
81ff93b04f951758de1a959a55d486fbe8fe410f,test and fix for 226201 - convert return type of generic advice to parameterized type
358beefe5e1e0ee7fd2da5b025fd419fcd0a71c1,test and fix for 226201 - convert return type of generic advice to parameterized type
59facf36ee7ac402f60f5887dceecd14bac47514,199130: testcode
32afe2f92f2faa183e7f4d1e83d5bf98342be2e2,added todo
6fc9b90ec1ede8f634327bb4f53dfd73a0ee9ca4,199130: test and fix - checking aspect bounds for generic aspects
aaf3d7050d337372866090a424b3cde5832a0008,199130: test and fix - checking aspect bounds for generic aspects
a7fefe27d3cd2cb4a6825ee83d9fe93928bdcd44,remove leftover debug
6d5e37c5e3c9664bd0c20c83233bf2af581b54fd,199130: test and fix - checking aspect bounds for generic aspects
0f9681ba755a272e41fff04c8f57be985f0c9824,"174385: testcode, almost working"
5c042e543e1c66a8fe023dcd29f2cb30486d033f,that error doesnt come out anymore - it was a dup anyway!
58961143f7f8e28243a9ae58cd89b25ee14b318d,"tests for 159268, 235505, 64222 (all parser related)"
8d998f54c171b744b48b055edc607ecf1a17b8b7,"fix for 235505, 64222, 159268"
59f843d4e51064094d1540f4955e54080d185123,correct dev version now
d97cf3597e95aef667539c6a24c3e1345c20dfe7,test and fix for 174385
45b5c47ddc6b6ed96a58f640cb8098cde5fd38e9,test and fix for 174385
7097e53a05b79205dc49d91c5a5cc7e7e84d62f0,organized imports
248962b92ffa409d11122d2504e84567c7c34354,guard 155347
b6964089f1c56d86697c27823a065b7b2d5bf56e,230075: testcode
d5334b1fc19fc53ff5303eee88f9ac41ef0f0172,230075: testcode and fix
15417326c953d13c906f3e7d516fcf64ed04d36a,230075: testcode and fix
27e794ebf410b678643cd079a1b9a285774b46e8,faq update for 160146
8d7f7e1d4ad5e302b60074db044636817ba4e5a5,164340: ajdoc fix and test
71459e4052ad7022ad94d4f4eca55b2789e1b9a5,164340: ajdoc fix and test
7ceeb0b26a83c56bee579aed4e42b458f1f3469c,164340: ajdoc fix and test
3b13e9b46e82001b285bbc61634ec1c446e84343,197719: test and fix: advising protected method calls from inner classes
a0cf51dde7d399fbf7774df4709c19b8a7e95b4a,197719: test and fix: advising protected method calls from inner classes
06f056227ea78ef424f9c5baf91148d208ff3df8,197719: second testcase
b794e2a851cfe3219159ae078a6c76f05753827f,197719: second testcase
4018fb57e0131b7cf8b70ac1bceb7610a7cb3e55,223226: test and fix for NPE and duplicate signature
5fce948c251d0258e5f5909736cef76712c42009,223226: test and fix for NPE and duplicate signature
be5fb95ac63fc225b7e2a17380052bb147af3b21,223226: test and fix for NPE and duplicate signature
0ed0600a2bb9c08b530120ffbf9b18dad613a108,"234933: test and partial fix, just for adviceDidNotMatch so far."
704e1ad70b52b1733627a200d7f181eb16023d79,"234933: test and partial fix, just for adviceDidNotMatch so far."
bc04401627101ce037a5e90852e36baacdab2873,test and fix for 168982: message on ataspectj nonabstract generic aspect
92e2a41d3cdf7d3297092ee5d4266577905519b3,test and fix for 168982: message on ataspectj nonabstract generic aspect
8e966e2713ca264371174574ba099eeedeb38190,168482: ref dtd
b35eb40ec74a32030312ee9cbbe2b40f6315dc12,"102733: broken code support, wooo"
c5eb3381d652ab431b5d1920ccdef322b00424ac,"102733: broken code support, wooo"
56222cd5bc1acb843613553c7e061ac0e74da9f5,"102733: broken code support, wooo"
dad6ba44ca81c718ac5f62d71c5ee296080fce9b,"102733: broken code support, wooo"
1d7244faef6a04535408216624adc1d60e161ff8,update test to pass on Windows too !
006eaf6886b36c289c7bc74b89016c277ac91051,198196: testcode
26cff8dd6f0a01ef0c442f20f505d9a2655ea772,134425: testcode
7090caca7a69163f9ee60498f460dd2ee67d3ea2,bunch of tests
4fb4bfabf4e0a0f45a7935fb542056a36b16217a,237381: testcode
da5aaae9a023e4bd2bc28a29fa84d626fce9682e,198196: prevent stackoverflow
e7355ff02829155c673d624de1c94def353279d0,198196: extra ctor
786effe9cc2d70f9a1980ebe96a2dddc9fcf4662,198196: fix
da08fc1d9bc4b44aa0a79913e410badb09334d27,198196: testcode
11ebdd83e542cc1412a0086bff4389b55c592de9,203367: testcase added
8bf125c6631e4b6041f24067717aba4502f4713e,237419: testcode
35d442ca64648d2924f21257b51bcf4dd6b62bf2,237419: testcode and fix: use erased signature of member and dont tag all types with a type munger for atAspect
5e1f1922691c9932dd32e693379dddd1cb79c1c9,237419: testcode and fix: use erased signature of member and dont tag all types with a type munger for atAspect
0f01399c3fd0a593eebe6ce12fbb22f238e25d52,trying to get 237447 to happen
3808a3ed369ef86b5f55307fa30f1c80a7f44f0c,173978: testcode
204bbed5a8dc6f324b1a6b904434f09cb49e6aa6,fix error revealed by allowing mixed syntaxes
2fd8894377f7d2515a00f7dd73ec30f90d333cb1,237381: fix: allow deow annotations in code style aspect
bac3b32d76b6556bb1ec7cbab3126c0126c9e7cd,237381: fix: allow deow annotations in code style aspect
21850ffb157cae71d570c17483bbceb197a7ceae,237447: test and fix: nested parameterization
5c4b5d1fec3fa38d33d3e079b0c6645cc136552e,237447: test and fix: nested parameterization
f02658106fc7022ef60ad077accda8ce039a5ca7,237447: test and fix: nested parameterization
b04b0c3c7865be55eb1daf333425e48ebc511d2c,delegating 2 arg method to keep those on a back level happy
92f20dded994950a603f681066f7be88baed0ca7,"161 readme, lots to fill in"
c3400e82f6606bdc75bf0465475cb07a9643e5b2,231396: caching
f442fa78afe9b99b575259f80dcb0ef0bf349bb5,231396: pick up caching change
2a409a4ac7f17261d344287e43a51ab5c76a4cdb,231396: reducing toArray calls
6aed5be0bd3a94dd1514bf85bf272fc14f9aa186,"231396: loop, dont iterate"
0e4a2c2bda107440aa76b9f42cbb00107146330f,231396: cache the member!
4efdf2ca058714d58d2b99bdfb9f8448a6ba873b,optimize todo added
3622fc1ed1039b3eedef38823b57160a05f7bac9,merge of splitNames into innerMatchesExactly - reduces number of unnecessary arrays built
79af634638de58f454bc44e495781553dc96ef74,yikes! address megabug.  switch statements whose jump destinations were woven (apart from default) were incorrectly rewritten!
626c063438114095bc8647d723e1e63fd82875b9,new fixme
b23c75ca5955ee72d9e7291f9effc4732d7a26a5,better error
e6f219f8672faba55719bb5a6f904a8dfa82fb83,organized imports
b2d19f17228b4f874a1591932085e32c62e38ca8,organized imports
be0316737b255f5e9d05bd76ea1e7bf973c347e1,237962: deserializing 1.5.4 aspects - fix
78e7815193e6d7c8a1a6a644c66e98a3e1a6843b,define empty array constant
109e942934c1192c433736cd03392a9f2023f4c6,MEMORY: Don't create unnecessary empty CodeException arrays
260bff8874f58878a70fe136157c520f013f1456,MEMORY: Don't create unnecessary empty string arrays for implemented interfaces
c19df6f710ed03f956224e3d4a57610e7a50bb71,throw more helpful exceptions when serialized form broken
d5fd87c305631713c32303864f2758e6c3bab151,MEMORY: Don't create unnecessary empty lists
84adb23fdfd070a52b3a70561bf9eb31b240bab6,PERFORMANCE: use forSignature() and not forName()
83ad6ee527ba2d9d9a72374ac723532521b41e24,MEMORY: don't create unnecessary empty arrays
ee857bb354fb193af9319b4bd9defbbb174d7522,rename from gen to regular cp
00da5fd6edd87dbcb273eca3050991e22dec324d,PERFORMANCE: cache field lookups
ad4951e507321947eeb090e6f72e749dbf7486f0,PERFORMANCE: avoid unnecessary replace
502c0971fcd0bc6e5b30e255f29adc69d62ded7b,PERFORMANCE: create and reuse common types
96225f3f491e45ca55b63c7906f0a20f9c76fc86,pick up latest bcel changes
979d45b4969a65babd729e9253c4ac43536f24ff,180264: uselessTypeChecks and ASTNode: refix
fa4b6eb30136844685a7a135e32a0cd5d379c4cf,180264: uselessTypeChecks and ASTNode: refix
5fcb99b16535ee6d0841ccccd36fd0e210c47d38,remove redundant param
7985fc2ec41a77516dedc13958761a5cbcd25a00,1.6.1 done?
993e4b43af4a342f8060042000a67f0388f0d3fa,"238054: testcase, commented out"
a7e3927b1884823915020d2b3f7029507d60b790,1.6.1 final readme changes
93082a29639ef8919ca50c4124c52d4d6337077e,use jpgs not PNGs
288e4a9bf59acc44fc885f6ee7d8edd312d8608f,162 test infra
3d5b79a6b05bb26b025e9e9e7d4ad2772a85d023,238992: test and fix
ad03f314f66a7c49737f32fc23b4aea6bef3d8cf,238992: test and fix
13f83eba7cd6c3cdf9f97a527f3ed42f81bfd4ad,238992: test and fix
f8c24e135998cea81deb38a5d66752e73e463a83,239910: fixed
91fe127af954767d54f972c032eb716de10467d3,239910: fix
a59202a5f980a8813e7edf18e2d889382dad627b,239910: fix
da38c1ebfcaf19624af8e218e7c4df7045bf80ef,239910: fix
36311b94bb2057af442f50e1308b1328737e10f3,avoid NPE building AJDT 1.5.3RC1 code on Eclipse 3.4
49303882a2920465cf8889b7d7975bbe329696c0,239441 - testcode and fix
df587ce7e378af478e7ee4eca3e998ea728ab05d,239441 - testcode and fix
ccfe4bf346a7f8145116fcecd68ee93df20f2055,198181 - testcode
349acc6542f0c2e586ce0e6ac9cfb906844d08d6,240360 - test and fix for -proceedOnError and weaving in the face of broken source
eeb2e60d0777af6cbcbc92efe467acaa1c12f123,240360 - test and fix for -proceedOnError and weaving in the face of broken source
1e6310e5b532fddaf538e569439eaf39290e21cc,240360 - test and fix for -proceedOnError and weaving in the face of broken source
41f9314f6b9b29cf5a47ce32b37257834549b112,230234 comment 10 - ajdoc modifications and tests
d2ffd516f8c75144ab877e72b285de6197642341,230234 comment 10 - ajdoc modifications and tests
942138ee1f7be2ace3ed41901d97a21f32055e88,230234 comment 10 - ajdoc modifications and tests
c78628924a9969b5e84ac13cbaf63efa13422d0e,230234 comment 10 - ajdoc modifications and tests
3a79d88b6d101819880ecbc4696b6cd974ae0dba,241861: test
e9823aa074ffa69352ffcab1ef6be2b00d5accf1,229829: fix for sourceStart() NPE
58185caad5b483c85ec870a759dc777ab23f33f7,"241847: test added, commented out"
84af74fbe910946b44b13c879c39c06ece47db9a,"240234, comment 19 - patch for ajdoc"
8f00831a5444d8bcdd81584596033fd5a6dc9add,"240234, comment 19 - patch for ajdoc"
32c77ef7eb98a4b9cbf68485ab89a99d0b07ba0a,238992: test and fix: string anno values
34bdf6532e15767c950f15108e1ed3c39a1caae3,238992: test and fix: string anno values
84ac656f3c14285968fda4c83f09201d04571f70,inpath weaving test
df49b5c64ad56dcb67424bbcdbe27976c5b77477,238666: Allow the ltw configuration to be directly specified rather than discovered on the classpath
d2a1ab0511494acf60a1fe919c944b92e4d0c089,242797: new compiler. modified sourcetypebinding and methodverifier
277941b7a9536b0c210d468177e62306f6d4f3a7,242797: resolve earlier so that any generic method type vars are recognized.
acdb8c8a8a6fe0ddb159f26d709f7a76114955e9,242797
f587232bf51d20d4d9b86b14e433205305141b5c,242797
5a16f7645e3435626eea9ed93f09450e16380140,242797
06c8ef4fa876e539c130dbb126f1901b53c5180c,242797: no longer get this message
0cb10e17780d422526c3d90235c8c5ae69070894,prevents funny behaviour on JDK1.6
ff47623a811fc7747e7ca9ea87e003457fb511ba,242797: a testcase
78e22836ceeb746446dc0aded64a0e6df3b78743,243192: optimizing handling of constant instructions (eg. ALOAD_0)
3d378958148e0fbcb527d05eea67ea0bc743fe88,243192: optimizing handling of constant instructions (eg. ALOAD_0)
6e045d6f04519fc7cc541157f10e5ce0cdc079b7,243192: optimizing handling of constant instructions (eg. ALOAD_0)
d4a5c74c9ffd54a15298117d9a3ca3e43b30d7b1,241047: testcode
3e731a1db8d54f109c9782ffd31d86cd5f7aae9f,243224: dont lose context when rewriting not pcds
17cd055166650c806b961b081e47eb26ce0401ed,243224: dont lose context
eac29f3b88c39f70e4fa0ea6715ea698e914c22a,removed blank lines
9e759ec041041529c028606a3df438102acc37e8,minor enhancement to harness
8de760d6979b047eb9d3d490302bc0f5967d3aab,243516: fixed example
24f15b58cbaa6d204a41070bd01c8a836943dee4,243376: do less resource copying.  All on full build then non on incremental
1cde15355781203652912df3345a21f6457e8f54,243376: do less resource copying.  All on full build then non on incremental
f359af78ac0fb7d3e9eb405ff20835fc79c2e5d7,242328: npe guard - what is the underlying problem?
00f8db2caec8ab08ea2b25e87da3bd76ef6502c7,242797: npe in TypeVariable after deserialization since interfacebounds not correctly initialized
3246e40b89660d7de65394b132ed385043fa1878,242797: npe in TypeVariable after deserialization since interfacebounds not correctly initialized
fbee54f2121650ea5bc32ab2c19d76cd41c077f4,242797: npe in TypeVariable after deserialization since interfacebounds not correctly initialized
4b5f72539556206856cece31c722e4ef77b150ff,242797: crappy bounds checking in TypeVariable
62e39dad3a12d338429c8dbbdbd0c072c352cef5,242797: crappy bounds checking in TypeVariable
61cfbc4afb972b2d4a4f9f0d982d94d54c447a40,242797: crappy bounds checking in TypeVariable
bff0937e36541ac18f3dbe299b9bd3f65bc2fb04,removed dup code!
5ba47c9d786a8959f7abb053fe1b0528780d5141,242797: all latest fixes
2b3b1260564cf3d4580771c5922c8aea8f213981,241047: test and fix: when pipelining we have to ask the generic type for its super interfaces as thats where they will be until it has gone through the pipeline
9b87ea9ff3ea63d6115cf93c2420c200d90566b3,241047: test and fix: when pipelining we have to ask the generic type for its super interfaces as thats where they will be until it has gone through the pipeline
231c548d64db8deffbe74b1b0f1ef7f4a448c9ac,minor optimization
7b3134928cc1510172cbcb4693eb49e2f5d113a8,240693: test and fix: generic type defined inside around advice (mad)
46373c59c0d02695e006d72537508ee0b52681c2,240693: test and fix: generic type defined inside around advice (mad)
99eff05ed4e0fd8b5324e035ecad48cd006930a0,119570:212783: testcases relating to not up collecting declare parents
758dbae27d6ec1db70f014b4d0124c9ea9dde3df,missing test definition
108712f7777391e2e38609fb4de25e4815cf3892,avoid messy exception on cascading failure
95f5dac42dd995f1c03162a2d43a5d69067e159d,239539: test and fix: better message when cannot override pointcut due to it not being visible
9e8236201e7e67f5add224e61c915bab82eb4273,239539: test and fix: better message when cannot override pointcut due to it not being visible
6d906dc563e78f9a4a21bc61f27ca406b065a6b8,216067
42c0676d7fd909b5efc1cce7f7bcbc9e3c99f4c8,223446: try reenabling this test
fe2f8cdae5328a768922bebe387492d583901cad,145391: moved tests 152>162 and fixed them
78ab379057f7456be3ea579f2a087a5a2cd494c3,145391: ensure type variables in the signature are resolved prior to building dispatcher
89fb0653b48f0fb9316ec48edca0308ff60281d0,145391: take parameterized types into account
95bf99ab559ce926df99e84f811934f98eaf6b49,remove unnecessary files
d94ade722d8a1212aa7c9b6ca90fe47a637e2c7a,222648: testcode
66e2987da8bd0cc629c25b84cd4f89a26bbc997a,refactoring
2aa694f1481bdfb7903e4f0adbd49bdab113c33e,rev version
6a044f3fc948d2783bd02956bdcfeba530e20ad9,"222648: when setting off to resolve the superclass, set the type variable lookup scope to be the type for which we are exploring the type hierarchy"
9c17216914f955f65c44293970f4f6801e1536b8,trigger build
1fa8b08feed7ff90f9ed4fc759480cfe77b18db0,244830: test and fix: only initfailurecase field in singleton aspect
3250df2d154cb2d35778d81e9bf9d6cf98adb69f,244830: test and fix: only initfailurecase field in singleton aspect
dd38ad1d0baa94cf3775447d196c2f69f1f9df49,244830: test and fix: only initfailurecase field in singleton aspect
cd0feecc0b1b875be8e5083b1c38efa677f012f2,removed again
d456da9c254dc59a60b4250cae05da376d808d9f,210114: test and fix: errors for compiler limitations become warnings
8413359b37dce1f999017935007e6ce56f0fe641,210114: test and fix: errors for compiler limitations become warnings
f8fac37d1e4ec74eb13389c0968f4868d0116ad0,194429: test and fix: include context in error
718dcf817024f690582f7328fa4ec48b515f3b25,194429: test and fix: include context in error
d9d5f4a7cb2e5675b7be629c633d6abd81b1447a,211146: testcode: generics info lost from itds
9b5ccefeb089fae5ea19bd5273fc9525913a2d6f,211146: testcode: generics info lost from itds
998ca6c85244a7f05ed68989a81b2cc72307b2ef,203235: test and fix
71c23eac9f0575692fea14ed4a2cdaff36b7d1bc,203235: test and fix
2473e588ca5e55c3c703d6a67f33e1f99283ff45,197720: test and fix: annotation matching on parameterized member
8f9ad80b4e0ed4518761c8ab9e81df68cf145c1e,197720: test and fix: annotation matching on parameterized member
1de0ef98b813eb8a4f539d9eb94909fda84598ce,removed unnecessary code
18f59c4ecf7b4fa124d46eae69bebd2581267ecd,removed unnecessary code
98abc3004833b14311332dd7936febd9379c4670,removed unnecessary code
b48c9bb2ca27856e2dc27379a826885188faa35c,removed unnecessary code
cc7f86b7011623615b20009c57a03bd5a786a93a,findbugs: make these final
f41ccac7372307c346c87ee447ca317cc2a6d81b,removed unnecessary code
07c36cd2993c9ed768de4a33aa527d9d43206a2c,findbugs: made final
857ccd57e7eed20e71bdb98f62e45a8bd465df81,findbugs: unused
de141f0c33f315718142a73d0d79d4cace5be98e,findbugs: same code in two branches
db3d4c7192fb71da8f0af0d8054b7ab3fb67dac3,findbugs: unused
36d42cc43e47f602ffe1f949603a8a86b0d0b26c,eclipse: redundant null check
c16372339bd3e5c6ec5b5fae538a0e9b504ef8e1,eclipse: unnecessary cast
ba7d08a7631a6e7ee4685f4a893bb69ac6151aab,"incorrectly removed this code - although it needs changing, it needs null checks, not instanceof checks"
fce5864ed5c5b858ffa813557fa979ea3421466b,eclipse: redundant null check
e5d9df60b019fad6cb9d03e8f24935189aff017b,eclipse: testcode: redundant null check
73a784c6a64e8526afaed047386ed23a1cfd52dc,findbugs: unused code
6221ad167c98c277029f3e6793898d18c313ae54,eclipse: unnecessary cast
0bea5746d02575c4418a472c3de592e228b007a2,eclipse: unnecessary cast and messing about
421c7e1f75b1c22101dda1e4ae3797f47cb8907e,eclipse: unnecessary cast
649609c6cf343b2c4b0131555192aba795d3efae,eclipse: unnecessary cast
50d36d0797f3005d13ea246f231a1363401ac58b,eclipse: unnecessary cast
d8b45796edccb697f60ae898dddeefc348b7805f,removed unnecessary code
1607e45eb209411d6ffdbf8323f98c53b681301a,findbugs: made final
d295401e0fe7845ae06ea0b77904165cf6af52c0,eclipse: unnecessary cast
b9ba4893500c2de097adab6ed9c1e407515004b8,eclipse: unused code
d69f1374650e84780358da089e4b220782475107,209051: promoted test 154>162
2f2215479d40b6a4c82f06ea7e95e8460b0fd58a,eclipse: unnecessary cast
36df743803c35f9715f4c0c5cffa79989a672992,198341: test and fix
fbac9e5426de8b2a2cbd4408e812dd34648a6a10,198341: test and fix
d0d65ce7c4a156ccd7e5dcd9bc72a61b853a32f9,176905: test and fix
7aef243f67f9cdcac4bc6abc5eadb59a9f9700c6,176905: test and fix
d0847f9ab70e8891bf1f5569c1740f0baa0d59cb,163005: testcode
abadca94b1a5c8d68319608aeb64f18341b1a818,eclipse: unnecessary cast
b98efbd8ec7ccfb390381d7962a4d83d9292317d,eclipse: unnecessary cast
b0dcdd08eac2495a2b62f8daed344402cbc958bc,eclipse: unnecessary cast
e5c9dbdaa6e96f4e61f2dd3cfbc5d6dd3f7286f0,eclipse: unnecessary cast
ac7752b807b27ec52bad976b52d10b264a92f034,eclipse: unnecessary cast
72c97266d764c29b3553b71bb9fb6bb6b0266c3f,eclipse: unused code
e92ca66bf589ec2f72afc886641410fd9610d924,eclipse: unnecessary cast
051c34fe07947e0b6f416cef47a670f112451a3a,eclipse: unnecessary cast
acc5d7a8ad77ac73b0a7213999fcc0c9be543fe2,eclipse: unnecessary cast
e0c401c92c0c586c37a17c563e73473a367f2dde,243376: optimized implementation
026fb387b7d84d80f79e51a3d9623fa3c782b6d0,243376: optimized interface
3117568208156c36e2a4b22e21bb5428ccd5a367,eclipse: unused code
b4799d333afa2f8be94f0e947b27c40a957d541d,eclipse: unused code
243afc5c6e1a76a0e9cead7894ab3765581adc04,243376: optimized searching for handles
7a44fcbb0617fcc37b84262b7fd2bb839ff51d7a,made final
3263fc39a0638164c396bf2abd5a682f7d0d094b,removed debug
b8aaf878584d3d591a05181f3e9f5cd1bfa2970d,remove unused
61134f98ab6f2a227b2057b2c002908112f18243,dont double initialize
d9758c1fa6d71a5f5c5cf19f3aba3dde3ffad877,tidy
b4246548cf7c9e1d67230aa8193af0d0d18039bf,ignore unused return
8d85e808ac4ed874eb37a5d9f92ca427d6a8fbd0,tidy
92da8acee7cc659585339d600bbefb812d7b4990,ignore unused return
9e332216dc99831c4590abfe6073ba83dad7bf19,remove unused
fd361c6b5603056aa67d98dd0cb27841baa82d6e,remove unused
70b4460ee2d393313d4e19ce0811a6d9724c2263,remove unnecessary
2df28ea8ebe8cede8b5238e230b661cf61b30d77,remove unnecessary cast
108951c3f2742904057e204e915a69c3b9240c3d,spell hashCode correctly !!!!!!
73ea779f597bdc7fa57cc3e87192a5da4864c374,remove unnecessary
fbaf927aa84d45475d1b134bfd1fa44997a744a0,remove unnecessary cast
9795eeef6a860e29a03bdcd7f72eed82d83b4641,change method to something sensible
f15adf56f32d3d293bdab55b6f45902c8ee7e7d5,includes the opcode to tell us if it can be widened
931f402393ec81dfb03712093ee8f1fd67055a04,moved to 162
e72d332c31652088faf6c0d73cf80110f21dcbc2,findbugs: cleared warnings
b7ab7a972ee267c14b7dcfae39ce9b02d4c5143c,implement new ICompilerConfiguration method
0044cad68439f7c41d8ae0883985a557f1fe7e8c,implement new ICompilerConfiguration method
74041c1bbccbc4b55776cc8a34ee248ef6b84acb,243376: new ICompilerConfiguration method
2e2a9e8fa008aef171bb8345c4be08dca18ddf60,implement new ICompilerConfiguration method
e9542b97aa8755e90bc4ff35c4afaeea7566b7bc,unused imports
a8893a592ef93ceba6f6bd27189ff33d3e926034,implement new ICompilerConfiguration method
c431df6c564152021dd06cb9545538ea0fd15fdf,some findbugs stuff addressed and better exception message in InstructionBranch
cdd0d8d67adb32b5a3f849b94403920a3dfc7c69,minor optimizations
24409068d6b0b02411be12ea2e0736e7b413fd01,removed unnecessary code and unused casts
a99df539f4bb2d13816da647b2cb8968e9bbb4c6,implement new ICompilerConfiguration method
62cae031f59a6e61ac9afe1168d8f7b18c77c4a7,unnecessary null check removed
ffcd21cc17832db5043b2b4b9eebcb820e418a66,eclipse: unnecessary semi
c6e597eb3c4e69f6f84fea111aa66af17fb51e58,unnecessary unused code removed
4ec1ecc1942cb40178d0ebd45fb75df34cddd396,eclipse: unnecessary semi
6b38c14ff11a3fc1321bfb2b225be8bb3e44598b,findbugs/eclipse warnings fixed
13a2f4c18a0032c246dd744c7a212cc2a3840e84,findbugs/eclipse warnings fixed
c478a53fee1518aec9a057c317df1fcc666d36bc,findbugs/eclipse warnings fixed
9d91bcb8d2d6342f005752bd6dc0be858164b1ea,findbugs/eclipse warnings fixed
be898b37cadf5fd23a38b5bd5113452c16700862,findbugs/eclipse warnings fixed
7a013ac10b7454b2058462f2ad715fb078337bda,findbugs/eclipse warnings fixed
fdf632e7b0b9ed5f40bf67dbc475241155332092,no need
55f7bb10832ec23af4d489a485f9107feb7f884c,"eclipse: addressed unnecessary casts, unused code, invalid null checks"
1dbfde4566fb20d1eec4edce1b8adad9441efc68,211607: test and fix
f278ada0825351d99be1f32ab63be2f0b0fda3cf,211607: test and fix
7e81084dfadf74ad99e7741756f110266bcbadff,chewed by formatter
87ef73fb813749243fd6b549888a83f92e36644e,unnecessary code removed
525c1bf389eff272a4eaf577cbf805d7c1a8dbfa,chewed by formatter
e0df1c76cafcdaf228e37d552174f1fce4bc3f45,unnecessary code removed
31016724225eadc2e13fc453c94b8324e0254caf,no longer Serializable
d7cfa79a398653508229fad9b43cffe38bf06fa2,moved some stuff into verifier package from base bcel (eg. visitor)
9549aa1dcaf66ff6d21d2946cea10d14d8d9be75,got rid of this
e063b0d6c3e86a44c16319c543f4863cf52f77cf,chewed by formatter
bec82a4941ec03f4ddfe11b9c4dbbe18df728c47,implemented equals/hashcode properly and fixed auto expansion to wide for big jumps
bdf5906d039a27afd7e0b3a927f7157b84bddd83,no longer serializable and removed unused code
5bfc685bc4cb00dcc15c6dd47e46e759e4c74769,chewed by formatter: also added a way to grab targeters without turning them into an array
fba2c63f65a1f19da3253d10e40ced0e41e0780e,chewed by formatter
15d72b921aa6b3119230e3d3fdf51cff88d69ffb,chewed by formatter
f3ae74bda5f98e207ba43d7bb63947a6128ff904,chewed by formatter
0f9f7f73f36fdf5e0d816aa92057cacfa0e7ffb8,chewed by formatter
29b24ec583efc887faee58767964049554ca2661,chewed by formatter
c6b7ed7054ee71a55ce721c3b00cec0ba64a924b,chewed by formatter
91d76d20f5c84a2cbb6d879f5fda8ac983aa6160,equals/hashCode
e41506b56026497aafbd09d2cf056b5506aa00d1,chewed by formatter
3c1b4ec37235272c9550b72a8cc85c5d8541d4c1,chewed by formatter
710fe91de150dd86b7e8a82575b0a4024660ebce,streamlined reading in.  Removed visitor nonsense. implemented equals/hashcode
acec9ef0ced82ef699352c250065f9d9b81bdf07,switch to using iterator set
7c702e723ca33ca3b10609d8a17b8bf7a4e2ccc6,lots of improvements
6f319cdbcdfcd73967c506402cad169b8cd3e8ed,use new targeter set rather than array
39ce15df3181b5ad662ad9745b2e14b86b84ed38,use new targeter set rather than array
0533b04777c546c8c4369e175afe5aa7e5158b7d,use new targeter set rather than array
985947987e77d5f4aafc8fc74f9e2c9fd9e4bf21,fix concurrentmod exception
8e99d6053bd8f2cfa89eb37de5be24e1dd48aef9,245286: test and fix: ajdoc does not generate signature correctly for generic constructer
184692bfad69f46cdb898ac0d0aeaf07614df488,245286: test and fix: ajdoc does not generate signature correctly for generic constructer
5498d0a84762c437b6bff443d6cc1e1e5c914dce,formatter chewed on it
5077a5824f695906fc635c36e42af1c9d960ffca,245307: test and fix: Aspected annotations cause ajdoc to generate ClassCastExceptions
8e64395ce932b225780d35f38999b3d53aadc786,245307: test and fix: Aspected annotations cause ajdoc to generate ClassCastExceptions
65f73464a4eff01b32a7789ca0a798e6a9898b6f,organize imports
4e4299ef560badce91ed62acff384f21311bb417,fixed eclipse warnings
75b4195ec99ece743a5a95484238d0d9dbef55b2,fixed eclipse warnings
af00617ba35c418cafa385397086acc489ffb0da,fixed eclipse warnings
5fd25b258cce531b2f08c8ad39d062a9e51552f9,fixed eclipse warnings
f56eb37f77b3bd946ef567b2e018bd17b2965f20,fixed eclipse warnings
a728a0ea633eb81ef82b68e34e680ceb74845835,fixed eclipse warnings
25e44d20722b9fee97c32a2706e6628d040a1b75,formatter chewed on it
86d6de035d433cb2c4c04c1f74fbdabc600c4ad3,removed unused code and chewed on by formatter
da2beaa264b9b72fc86bfb541bc008d4062ca871,fixed eclipse warnings
94de8ca9978d7f6176c6a86cb29896ca7c6479d9,removed unused code and chewed on by formatter
f7f084d8567a6d5d267caadb6ea7915f6153de35,formatter chewed on it
15ce12c6d44d98f615ca356c937edfa8ec6ce598,formatter chewed on it
c778fc5e3ccec7fc253fc7be2fe2247684ab7930,formatter chewed on it
1361ef2f8e345f0a6fc1f8d518d0c938228d8ad7,removed unused code and chewed on by formatter
bd17705f0c1a40225058ce9d5bc9c99718b22851,245566: testcode for incremental magic
d4d9ca53eb0d22797f0c386747d46fe8ef057d4b,245566: testcode for incremental magic
cf66ed56a619637b5be8e47b4156b23b057a57b6,245566: incremental magic
017c1f96e837080cfbc8bceca53ea265d2b9421d,245566: incremental magic
f347528612a319c48dc16627449483c56cc0a543,245566: incremental magic
4ba9d260cc39de8dd5690dca13d999530bf14cbd,245566: incremental magic
10e7a8297323e1013ebb7fd371c7b807cfc62719,245566: incremental magic
c3f5a80b252acaa2e83c995ebe2130ad3fdd763d,245566: incremental magic
e2b5e57abadc945b54050f98329b1087ac7469ee,dependency for picking up compiler change bitflags
d5c2eadfa5e873ae300b52c0ecd86a3a8dedd088,244321: fix: sjpp and default encoding
5590d8b5c60ff991f6af1cbfe7a0df2954460d9d,245566: introduced name environment sharing across compiles through the state object
3975be0732ca3b8063b234dd1c396b69f9ed4c7b,245566: introduced name environment sharing across compiles through the state object
64709897b88148635900ed94f6b633f53d4ff19f,build machine timings are bit wobbly
8c37e52c5a50fb145215817403efdd1bcb82d3db,removing unused code
323e9a42d7b7d46ca7de95c23b0e5968dd68fc82,dont call string ctor with a string
2925bb82dd8589421104db87c82f57b1d308ee7d,removing unused code
fd8aebb985420425a95e163b814cc03bd997f042,removing unused code
74407d4cb10df42abcb685da3ffb26344849437b,removing unused code
ee77d7cdc0e0bb67abe21023e06fe18ea763a3b9,remove unused code
cb46b4aa17ef055539ec9b6a7335564d2bc388d7,remove unused code
5f7672bc4007659063bf63b15c489aaa64140a81,remove unused code
df779877b56586c5a4e226ac8b73d70386bf5039,remove unused code
c5f29f24913fafe0983b51ee6ea175326bda4221,remove unused code - improve path detection
66a07e986c8fa8487cdd90c633d56b8c85ada867,remove unused code - improve path detection
d1e4aebe252c4a92d18c42b89d1a77e5eead5f3a,remove unused code - improve path detection
e5899f8150116fdda0c91e4d9560e01bf0e06c65,245566: final config interface change
fefc9d6773202dc58e746375f4480dd66211c6c2,245566: final config interface change
e7f37508984f3b3bb0586a61fc490acdd16a2ed2,245566: final config interface change
f12d9e2e4fc56dd7e464f590be9d8e05cc66d257,245566: final config interface change
42722c9843f42060ef892853fd5a9482072b351d,245566: final config interface change
fd0b4cd65d9f3065f6a998c2bdcf5480014802c8,245566: final config interface change
5d410c01eca227eaea7ca0f49a87eed84e224099,245566: final config interface change
805fc1b71a6601c0bb9106465600a19017ea5bfb,245566: final config interface change
78a483d0aed48c974a4a2408f9e1adb2822d1242,246021: lazily setup arguments
7d9cd79e1bf3dbfe4c2e6c51bf37143bcbfb92aa,trigger build
cdd9d5fe5cf01ec317e1fee948fa1962e9465f6e,246264: test and fix
025d06e3494607d2a6032c202528038dcb7b8cbb,246264: test and fix
89eb98064b3c992f855337381fe7f0e3277cd6bf,chewed by formatter
ce21f971468b579fe4c754f90c3793c78193bd35,chewed by formatter. new constants for string array and annotation
5fb117d2e742ef9cc7275f25aa09e8de50e3db8a,chewed by formatter
b36e2444dd92515fdab10cc7b93953a54f03282c,chewed by formatter
d979cc0c4775d4e628a7635fe3803a79ef6d8c33,unused
48af77e2d1506a92f5a5af25fdb6289e9800cb4f,delta change tracking for incr builds
988458bbc0c8f2b06bd18c56075f153b24d93f9b,246281: test and fix
ec9ebe73bbce1ac45e064be0ebd287b3563d4835,246281: test and fix
31a415662a0ffa6f0425e5096e04fc1902726c9e,breaking the weaver apart
c3587474e9f348ff64d3de42dd15319943dbcd6f,246125: comment 3: reworked AnnotationX - got rid of the thing
0a5eeedb967ff1a1b81840f008637759986bb2b1,246125: comment 3: reworked AnnotationX - got rid of the thing
e2a6f72504c9e53ee6716e07e65a54e784283268,246125: comment 3: reworked AnnotationX - got rid of the thing
e4a3ab5cef0e9b37da2a1309b897d845f3cd1e51,246125: comment 3: reworked AnnotationX - got rid of the thing
742ab2e178ff40bf67220c7cb2b54e5042e80d02,246125: break bcel dependency in AsmRelationshipProvider
feff0c4f670183e12a6a56cfd3e9909380537bab,246125: pull across useful utils from bcel package to 'normal' weaver package
1e9bca041f7d737717f95cf290d72938ffb13048,246125: removing bcel dependency
7483c742aeebb0d02b6e52d91edd046d7119ed36,"246125: based on Bcel entity, moved to bcel package"
62773812d89b95b0594096c5d06223d243fb0bfe,246125: removed CrosscuttingMembers bcel dependency
258199d4cc361a86daee02fb68a7f0fefd8a9a02,246125: move bcel dependent type to bcel package
0c8da60c4d6e6f22e6d422157ecc0630bad942e3,allow for jars changing on classpath
775ff6f116d4ea9cd3bffc5d6bc01c963d2c78e9,246125: moving bcel types to bcel package
75e2ab54e0b510601d26aeae95a15128a7d6de98,246125: moving bcel types to bcel package
2db57c9bd1c93f619f602fad1ac82034e6a18768,guard for non-dir
0bc43d34b27ced82b40e48ac0645ed1ba94d2d2f,246918: perclause: testcode
dd88cb3cd35dc195a60cfa0ef68a6239bdd96a17,use String directly and dont build each time
4fcdec844c7c6fe8c172d3ee351654be96d67c8a,246918: perclause:
426ca34194c1694005daf1a4c3555373b68fd0ce,246918: perclause:
e97d305371a4e75edc1419cce5220238d1cef7f8,246918: perclause:
7d2b812237d040fadcb94f270d97d5ba36b9eee6,New method on the interface: null impl
bd232a2be79b99bce9037ff05514ef73238b9991,New method on the interface: null impl
f6e3192f19abca9e89f3948276b8f6aca6815b24,New method on the interface: null impl
c84daa305f559019bced940684d9cfbf22812180,New method on the interface: null impl
cdb2b55c431360dbb6ae38fecf6962e67050482d,New method on the interface: null impl
e30a0bfea42e6f3acba7cecdd5b0d3d8f32237a1,testcode for handles for files from multiple source folders
cb0b7ddda7591d2344637cab1950496db973c2ef,New method on the interface: null impl
6a68dba947ddd49e8e8dea06e17f1412535c1cb8,New method on the interface: null impl
95f9ea7929dfa2b55a957461a2db8e395b11a797,supporting multiple source folders in the model - to ensure handles compatible with JDT
a8b8557f3902c3965f0946e7c1b56fd3dc605f14,supporting multiple source folders in the model - to ensure handles compatible with JDT
48d455142d22b73b8f5bf7c3e994736cc762a30f,supporting multiple source folders in the model - to ensure handles compatible with JDT
ba66769fd523538e218a5f47373fe5ce88900089,supporting multiple source folders in the model - to ensure handles compatible with JDT
e82b72c984afacd9ffc443a5c4aeea74132ae512,supporting multiple source folders in the model - to ensure handles compatible with JDT
282ba8f92b8c1c6061ae8e5fdd06a76b3d1b6801,might head down this route for stackmap
3da59f2a4d5f426b2b34335076d8a2c06d74914e,more jdt like handle fixes
577a8fc01fa9d69b8afa8aaf09e0d511b8cb7338,more jdt like handle fixes
1f04a60543565b8a78d84e21a322fcdec77195fc,incorrect imports
8e14f28e1ee8658507c2fa7caf2f458a1adac436,jdt like handle fixes: anonymous inner classes
8ed07c9e61d00d788e7d05d6c90bbeb3d378dcff,jdt like handle fixes: anonymous inner classes
cb4916df425983d6ff1bdcf070f64cede7ec40df,jdt like handle fixes: anonymous inner classes
a6471d70850ce396f0597f8ece69035f6d6530ce,16 ref now OK
fe7360053e8aecde966d0977c84f4794f82f4597,latest
0c6a7c5435954a89feb9468143b38a896e2f5c5a,dont package asm
98d29e0a89334d51682e6e36467f01808dfabc16,dont package asm
3a9d4a2bc3092d0e8bd92eec472ddd8203f8ece8,can add stackmap attributes with: -1.6 -Xset:generateStackMaps=true
5bdbd842fe24d1aa8ebd17a833f461936b8c231e,formatter chewed
07a4fd7d8f4a91888172ddfb505eb69ea2dcd83e,formatter chewed
17a082b29ea69cbbfbb5fa8225b63ffdda12975b,copes with source folders in the model when searching for types
0493f46ac39e308bc85b95d0e9f31bfa24354360,break on my t61!
a7bca9af787487e8539b65c7c9e2888c1e1e0049,binary handles testcase - commented out
5347178d0233e98a74e65cdc1721c19f509c0a18,preparing to build src jars
6d6adfc1327fea030f0547737543df96b5447387,copyright added
3d7308774c6229548756abb27c6f3afe135fccc6,242797: testcode
18b8862db0bcdaea54600f27faeadf9aad1e96ba,temporarily removed
4f13384c8c09fbdfad5fbc724a49740bee36690a,more cp contents: might fix prob with test that had to be excluded
b0450ebd70d0a415da1d6e9a6c35c82a9b038c91,242797: latest fixes for using * rather than ? in sigs
cb290a9cc1316ba47f2b673bc5fd474da954d611,242797: latest fixes for using * rather than ? in sigs
f414fa0b101bdde8f5828b419dd6a853682b1b00,247742: anonymous handles: c3
683a59bd5b0da421e2be74b2d4803c5dda22869d,247742: anonymous handles: c3
b1cb2a539d016d45d231a1839887cde965754ba9,247742: anonymous handles:  c6
2eadd1a2c662765e63e977b5f3585ab767c1239c,247742: anonymous handles:  c6
f376a21458ead647d32320cfbc779b67c7b7521d,attempted fix for 245734
7e2af95037db83eb79e5c51f2b48e5bd9010c34e,245307: comment #6
c8471429684ecfa9294075fed223568f92673efd,247742:c27
15e3a298d2b4d9db6441c42f65f42bbe0a1c5f41,247742:c27
8a81e52c5b95c06af9ecc054cda5cb9bb78602dc,247742:c27
96961535f6353b1e96de55eb3223476883533dc3,247742:c27
27ee20bd6d29a42619afd9a3b0627b1ac9eeba43,247742:c27
8c738a60c2788a58365348a6f0edd05f4c94b1cb,247742:c27
830dd0c371f901f85f8843d1459f83d1b4fc11da,247742:c27
f8aade758b22f8b09acf2f376a47f3bdebf401a3,remove debug
296e6f9210422f4d4cb678635ce9b62c80fad66d,remove decp and deca rels added at compile time
ea5d1eb015df0f16acb65d8feb0ade420aee16a0,remove decp and deca rels added at compile time
53aa686e310736f0a0d52166bfa66ed5e3fab047,remove decp and deca rels added at compile time
a115ac79aed74003572bd2981f19bc9c7103af3f,null guard on getAnnotationTypes() - pr247683
60144233e56848874235cf31730c8aa91c8cc3a3,242797: c41
a85c94e29a245a321a233083e3dfb6dacc847edf,248814: perclassloaderdumpdir
ecca4f0d36d30abd26390042da8c5c98895b95ec,248814: perclassloaderdumpdir
f37fb474d64d388af0501e0a0556db9651c5ee5c,some ltw notes
9bd7429e83ab61f44cfa773b7186778975f31e00,tracking aspects in effect last build
c9a2d9acbe222b80042995c670fc7f78964f3501,tracking aspects in effect last build
7f875fc6044ca2b9bd56668b8c6ec65b82897fe8,248814: perclassloaderdumpdir
d1031290b434b7e1025e830b2095b630fd3f6067,238992: c11: cope with normal annotations with no values
556feee2eeb05b1ef9d3e56324ae39db6e6c1598,247683: test and fix: annotations on array delegates
3fffdb9f5afd0f4b674c2942872663366738260b,247683: test and fix: annotations on array delegates
0bf359315c3f18d0c08d3f2562285131aa9936ac,cope with someone asking the wrong question
5542c2e3afd491f9754444e295adfb7c208ef5df,cope with someone asking the wrong question
16372a5eae2ef5e9da0df482919acd2ccdb4e85c,153572: little b for Boot
aca78f796d64583e8d17aac0bff6f6e502bbafa4,testcode for 241861 and 148508
9b68a31302174ba06218e5e1182653297f722110,192877: testcode
7a398a2d4cfe14c36662ac6b984303f8ba920362,186884: fix
b0234366ae48c3ac6c5f040e3d02ff553b79862b,dont crash if other problems prevent annotation resolution
f761cd7e9ab41e3809cd0fe11eea3beb77515461,249551: cleanup by default
9756f892ef86ddf3bc5bbb0cb326fb10736e8ef8,249551: cleanup by default
c236b590dc9716e1d578e4e43c5b0c1b8a7518de,finally blocks to close zips/streams
edc225770f8f3037c87481ab3656e1b6c08ff449,undo some of the deoptimization
e78ca8b57dbb82776f96d288353f659b2c3c3cfd,make cleanup part of compiler discard
3817c58a2bef7f5899e3295997fb82bf9a46678c,avoid NPE!
4d04de0a96703498babc71754a47df4af1992e62,removing redundant test
0ea57f0dd0a012e62e868fd3f23fd6ee68475e45,build.xml extended to build src jars
827562515b125e052ec4fa430f7f4e6bce17e09a,162 readme
0682be1a621d592af0ecc5a92420641fb3e2e04d,dont build src just yet
410753eaa6ed20c3e0120fc1d161bf8f6c724a3b,splitting - move world weaver specific operations to an interface
b454292b74a07a5b5316183209ddac2343ae3e8e,250493: testcase
dac17a6da63eb05904137c84c18d79670f4eb6df,250493: fix: bridge generic itd methods missing flag
8b80dc4a8508c81a061de6eb63f143cfb3b64e61,250632: testcase
a0cb79d556316e0b25c57916582ac6fa64ddadf9,250632: fix (poor code tho...)
fa62ef97cd21cb7f7904735d4c877d2bf3555a60,change due to 250632 change
37eb8562e8705552b5a448cd3ba4f5a047aed172,reset the lists when a new asm created
d89fb5058735cbfa322674012ac19f301c3cc128,remove aspectjlib from the distribution and build system
013bd09cafc07aa87634798896da7099013fc1cd,remove aspectjlib from the distribution and build system
c44d157365d758eca3da9763585b3dee5366f2eb,remove aspectjlib from the distribution and build system
a0355bda0a630db554cbfb25d9a0bb024c3239cb,249212: c1: aspectpath change handling
b7380ae57dc9862d5221c8a15f1079a4a94c2040,250632: fix (poor code tho...)
3d3b2435877cf0026df81d0a89e979a7ae2f8a36,249212: keep track of aspects resulting in .class files for incremental analysis
832c74d4790da2af52218b1d12fbb5739b556e31,remove aspectjlib from the distribution and build system
35412c5907b682a46ba507d09db49feecb840dcb,250921: xlint for missing aspect on reweave
bef259500f620e03ee8fee4e6201cdc8a7821fab,250921: xlint for missing aspect on reweave
0b8250b807fe55b63d2a18f6cf4cd695e00681ea,251277: making asmmanager non-singleton
7a625d01b8e28fe62c0a5ad826abef2b1891d373,251277: making asmmanager non-singleton
e19a7e7e66072029ce7ed70d865371b3cb021649,251277: making asmmanager non-singleton
689bd19050a5474ee734110c8702f40b595e300f,251277: making asmmanager non-singleton
ac7c836f40e3723cfdb38d708d6fc967786a7227,251277: making asmmanager non-singleton
2d2a71a12696ca8a9fa9edd15f1f0c3cc0016671,251277: making asmmanager non-singleton
d635276ec2564df5943c1fddcf97bdd6d2f7808d,251277: making asmmanager non-singleton
fb549b50398a100b944975c80745a6515a7740d7,251277: making asmmanager non-singleton
820ea406da92ae61605ca5fc53dbd7732744a282,251277: making asmmanager non-singleton
b81f5d876bb1eedc204079f5c1c8b93b1757aa72,251277: making asmmanager non-singleton
331a89451d7699ea0babe5501a1b1ec0c6448f1d,251277: making asmmanager non-singleton
35cde06f2c21bfc529d088b33f89c3eeb79f6e4f,251277: making asmmanager non-singleton
655986cb7d9fa1e45a3a4130b04feac408184cb1,246125: promoted generic sig parsing code to util
f479c18ec097f4d3d1dcbfcd5e1881678425b820,246125: promoted generic sig parsing code to util
83fad50ca5effa81e73b6fa8f159d175fcaab599,246125: promoted generic sig parsing code to util
22c9c825e93a8ad85904462499fcd0b7ca5f7845,246125: promoted generic sig parsing code to util
315fa045aa378b43c36635b4e2edc435ab324737,246125: promoted generic sig parsing code to util
6ab8486555854b20b5402a69bd780290f2336b4f,first drop of org.aspectj.matcher - its empty!
72ad269212046448767bfc05c1a6249f644e96fc,246125: build the new org.aspectj.matcher.jar into the distribution
8617f5c3fcbeb3d50beb2470c23827f26769e283,246125: build the new org.aspectj.matcher.jar into the distribution
9b9a877fd1dd2d293590adda6cb2c2405126f859,246125: introduce weaver dependency on matcher
edc97a8a96aaf01f6fdc015bdde2c4c1d2bb5a96,246125: moving structure model related stuff out of org.aspectj.weaver into org.aspectj.weaver.model
ad98ff188c622aa74490df51938babdacb60ea2f,246125: moving structure model related stuff out of org.aspectj.weaver into org.aspectj.weaver.model
24bbc66f33c75018339622809ced0a1f79b52706,246125: ensuring content in org.aspectj.matcher.jar
6536cf1c8e442a22b27478cc17731f31d6b64226,246125: ensuring content in org.aspectj.matcher.jar
0fd8218dffd718d7fffe5d44c0b42c57cccf5bd2,246125: all asm related stuff moved out of org.aspectj.weaver package
369e5fe5c1306b65454e27d30ed400138a9c12be,246125: removed last Asm dependency from org.aspectj.weaver (world model ref).  Removed bcelobjecttype dependency in ReferenceType.
ceb9e9afee14675f552ed1d9d6d547352286704e,246125: removed last Asm dependency from org.aspectj.weaver (world model ref).  Removed bcelobjecttype dependency in ReferenceType.
838f6fe82e095033ed79b804a0d6094581153da7,246125: removed last Asm dependency from org.aspectj.weaver (world model ref).  Removed bcelobjecttype dependency in ReferenceType.
b027e7474de1f9407a6e4e4b518c42e376baba5e,246125: removed last Asm dependency from org.aspectj.weaver (world model ref).  Removed bcelobjecttype dependency in ReferenceType.
597e460e392e64582f722c024267885db517a00a,246125: removed last Asm dependency from org.aspectj.weaver (world model ref).  Removed bcelobjecttype dependency in ReferenceType.
77a2ad53f201fe3947b94edd6c7b8d4d2a5ed88a,246125: new abstraction of structure model without the weight of the asm module
97a76188be33fba8b7b2502baa7538f63ec460b1,246125: removed last Asm dependency from org.aspectj.weaver (world model ref).  Removed bcelobjecttype dependency in ReferenceType.
9a159ec17b32405981587472a7965ba0fc5de581,246125: new abstraction of structure model without the weight of the asm module
2395fc9e8f1b0b4a5fe9c15861d5afb5d8bd9858,246125: move dependencies on bcel out of org.aspectj.weaver.ast org.aspectj.weaver.patterns
f671c10263531ed00144c476af1aae8473c92b4e,246125: removing bcel/runtime dependencies from patterns
7ba6c461a1d36e83093c8c474310786a3e1a5405,246125: c14
414026dbcb3d7fbf1b8909d0fa384ae3f9e2de3f,246125: c15
af6bcfe4ee5324e9868e5cef2c0e76b8299960e7,246125: c14
c6d17d523c24fa884b61f27c171514e4d55a011b,246125: c16
471db173df94e16aeca5edaa0a5f2948bcf3c50e,246125: c16
07f961ab2915cefdb9e2cc163ae02d8fc54aacdb,246125: c16
ae9adeee650aa4ed3c62a9fffa979c058f0edf60,246125: the SPLIT
eb5b2857783d3060a5a3188a3811f5cbb8f81aa5,246125: the SPLIT
c24062050c0719ea31814d2c0dd7542f5f0a2ad0,246125: the SPLIT
f512165c426ce560567a67c318ebef19ee9f5c7d,246125: the SPLIT
b63f780e7aaea4e693ebe1753b81c6d44888ecdc,246125: the SPLIT
bfdc895ca8a69c262ac2c685be4e1fc59930954c,246125: the SPLIT
f823bc2898ea2e3f3d2ed4e5b229292719be88d6,246125: the SPLIT
9521b1ee8941b63b2e92ef91198bb241b1c7e966,246125: moving some very simple tests across to matcher from weaver
106f7332a907c33a6a9aa3a7865de96752ebd596,246125: moving some very simple tests across to matcher from weaver
da34cb025547154ce0e384944f2576e032a62bac,246125: moving some very simple tests across to matcher from weaver
621e6e54fa172775cc1f4cb28ba5b072e52fd39a,226163: 251940: tests
0ef961c9eff0fba9b96f0573cc95fe4d7f70332b,226163: cope with empty recovery template (ought to work out why...) change is in DiagnoseParser
fd9f0b56e8a8b81c9102a81af9c17e53edc1b2cd,251940: testcode
6f955f1680d2622538cbded6bbe9e70e3468b0f5,251940: fix
e2fac0e58679db78ef8ce62e9e2945b5e3a5a696,252285: tests
0ac2913585d05269ea908c1294bf8d507ea16bb7,252285: fix and removed system.err !
05e64c98ba6effe6a083dfe7c34e3f7f04fe7fb0,246125: pulled tests from weaver into matcher and created bcel subtypes of matcher tests where appropriate
f36c8f063502df6870ee70c43fe0b7443835390f,246125: pulled tests from weaver into matcher and created bcel subtypes of matcher tests where appropriate
ad94bf289fb25c8425f59a051a8493a9c7771541,246125: pulled tests from weaver into matcher and created bcel subtypes of matcher tests where appropriate
dc93a21d61d5d50dbb68c0f0cca00529669876d0,246125: pulled tests from weaver into matcher and created bcel subtypes of matcher tests where appropriate
06607800a13d0f03a169ed4e9c36838c7bfd876e,246125: pulled tests from weaver into matcher and created bcel subtypes of matcher tests where appropriate
05529d854bdacb2f8c1853ec7a913291cad9e373,"leave it in bcel, dont have a copy in matcher since it uses generics in the test"
85347bfd6fb121e086d3e0659cae668b5f3eaf51,250091: test and fix
86448d8279f05935ba04ac205f9f7928fc21a845,250091: test and fix
671b0bc0b2ceaca8d5382b874fdf470c1dbb76e2,matcher on classpath for build machine test runs
cffe291340c69186f6a5c986adbecf02038ba590,249710: test
3690a7b51950ab2495ecb8178a739048c37b740c,up'd version to 1.6.3
aa557a28af6ccb3bc0aa427665d5ec615d61d546,moved to 163
19e1e92ad7a75f9f00c4a31ce7db98527f2c0c62,173978: test and fix: local var table for method-execution and around advice
6097c60e19f08f0b8dd20b474159d82804139f7e,173978: test and fix: local var table for method-execution and around advice
33193b5616710b1ebd6b88dd7f78b4b8916f7dec,252702: declare parents in model
394ad33a0cba7c7254602d2ccd25e15decd03c2e,252702: declare parents in model
53d36c32235d38bc60106799c3433dd972741510,252702: declare parents in model
62a3826d07ec8aa2f62fb11bce18ff154b593049,reactivate test: 247914
585a058261614b45dc6ca8b820f04b68bed33d72,reactivate test: 247914
5d9ceb0fd834b1713a1e448db11a444979ba2959,reactivate test: 247914
fc7ac6820b4ab997cd40cf781f1b7fd3271c0d61,standard properties file to use
3594800a4c212228183822ec2db3962635655d83,tests for 163005: upgraded test for 80571
9272f7aaa5401f5b7c8ee62be6750cc5c249338a,fixed path
373b1e2679258c9f8abdcebe73d1e13e68346671,fix for 163005
531092ca08c86bdfdb6c783e9fd47b1d2df87899,fix for 163005
cf313e4d42dc1fc17dea3c06f6d727681140f2c7,path fix
44bef3e41af9839f1be28a80e53b7014c8e76133,194314: lvt tests
fb630fa62b6654767dcdef3919105a89f9becdd3,253109: tests
377ed8f4b1569214fab207dd915daadda22d2831,253109: testcode
1d7b075ceff892cc24267141897183e0c007c0d1,253109: testcode
91df54f53f655e247838b4acf8cfacdbbe190da3,gone again
2673c9b8369107ef15e5da1dc134e2c166159bfa,remove tests not yet working
20829e432308522e9c03befe5c077d757ea49358,debug Ryans problem
44bc4850c95f12d26f0554102ef124e8fa9ed396,253109: fix
a6ab11f0bbbd8810d05bbbf055ef2699116f7846,253109: fix
f357106f919d38b45e4477fc8165cdeaf80c640e,Make findElementForHandleOrCreate public
e897b667b40b52d6ae801eef190fe9548208d6b5,254207: tests and fix
79854b95cab02f90ef461d668b7f847d739124b9,254207: tests and fix
e17db0acf5975a413072d2d12725b1b4a0e566f3,252702: c7
96b6efff414aecc3095787cba34ec960b4e5e811,252702: c7
ee99db122b5a183f0e7efe3969b642708a77ee75,252702: c9
c010b6834c4eb12bc1073072590c94d5d785701b,252702: now includes _new in right places for ITD ctor
155a888d39e73a70fd4fe47de2c37ed593bb5459,256400: fix
48ba3fea26bf31e702199528bd461eaff4cc535c,256669: itd parameter annotations copied to target
1cc5811ebf365c373ec61a08703825f2d3659050,256669: itd parameter annotations copied to target
b62c591f7a8781119e030c884d3e7c94df77de62,249216:c22: escape path separators in source folder names
f1f16968edf4ef8afdc36246d43697dcedfd2166,249216:c22: escape path separators in source folder names
ae5ed056a7c9424f10bf03187cfc1fb6c80db62a,256514: c1
7cc89195decaf1f2b862f24872ee387973e76cac,256937: test and fix
ee2a860fcdf78383350e33c2a1d16be814e30f83,256937: test and fix
577254e01d7c9732dcafde5c54c7b1da8de864ee,include the matcher src in the created src zip
89d94f1b41b74d2f4f42c4edc6009845848d950b,255555: pattern parser allowing for parentheses around declare anno signatures; cope with weaving broken code.
2ceebd05710ae727890cf99ca8a4eec43c41a587,255555: pattern parser allowing for parentheses around declare anno signatures; cope with weaving broken code.
46b72b291ccd708accfa69353c443b35497dd166,255555: pattern parser allowing for parentheses around declare anno signatures; cope with weaving broken code.
3a996832d394faf409bbca5bef7846256bb3592d,255555: pattern parser allowing for parentheses around declare anno signatures; cope with weaving broken code.
5dcfe73f9b4e4bd5544aeb43adb9df05fd11885c,154427: test and fix
d3e12916475820991d3b57310d0b9990c701a45f,guard on field too
63420a08bd1feed9e1eefffd9dd2b5455565d665,154427: test and fix
7c00631cac0293e407812d68e7dd2d170ef34e7f,154427: test and fix
cd586e1891caecc3760a77305e9fe051759f98ab,213751: 249216: tests
17ac62ab95a36a5ad492d4e0c4b44d0ca7d98f5c,213751: fix
120b47fd215b25f2c3cd7e977a93c206e8a2281a,185447: fixed: abstract annotation style pointcut resolution
7f21b3f9c679cafd4de12707177f74c38c69982a,252702: c4
daf33c9932e75af599d613619aacd88e3223be32,253067: test
5aba4214ce875a313e0243407c84d107fdbde446,253067: fix
57561d1fef451dfdf395d9983718918268687640,171042: test and fix
e65202e30fccf3ef5a796d667a821ed1113c1314,171042: test and fix
2c41499e77a0f11a226edf1255a7b025dd3a4131,164016: testcode
73b72d2d9e7ed5f9fe311fcb56cbf2dee834478c,164016: testcode
2c816d684cbaf0696f834e2b108bf415977276c1,249216: testcode
0daedad7d44b9233d5c1f5a726d2a95d7c54cc21,249216: more test cases
84078de0516902f72e9331528e791b9954d5cff4,249216: handle changes
c2a2fc097355c1f7c6940d71e266110bfc3cef12,249216: handle changes
4ab5683130ed30b559b9437a14abe194f06aa20e,249216: handle changes
024421468c163588ec7d2d2d5dfa13b8dea4bb1e,commented out solution to mixin problem
f8bedd567528dd918128b5ca6df0617136ff4994,162135: test and fix
cec4c7798d9d35901d721d3e3cb8aca8db52aa78,162135: test and fix
7147c4a3650bc6ea608bce40363df2e79f5ddca5,162135: test and fix
368883bf8494e552daf9194d9885c858997fd876,256458: test and fix: better message for if() pointcut anno style problems
a4d35810d8f5a16b55cfa3ecd225e3b258892cad,256458: test and fix: better message for if() pointcut anno style problems
7341d0ef49091ce7ea2b671672cdec5f6583743a,256458: test and fix: better message for if() pointcut anno style problems
3756d42e4446d917be52d39e09a29a32a858734b,itd fields
1cf507ec70fc29fac77f8fe1779e187a1c550a7c,219419: test and fix
45337fcef5b6a9147b07fea7827b3880701e4574,new getRealFieldType() accessor
490789c6a2e0c1d3993e0540bb5c9dbd02b608a8,219419: test and fix: intelligent determination of extra param when possible
de4e0f04be33c3465fb8834558320d12d06b1128,219419: test and fix
2cf9f5287d34d5a4abb11e0229f50581f1dfc1a6,formatting
c2b29e1ed1e75f6f03629241c27e794a9410c35f,getCorrespondingType() fixed for itdf
baf669ff24513592a4e553e7aa6f629e42ec54db,257754: decp anno: test and fix
a2f209561e3f3cfb607bfc4e24ada88aa6379a05,257754: decp anno: test and fix
18f949e82fe7306e556801e1d2af4ded472b856a,257754: decp anno: test and fix
2e2be8e6396445755df423a96fc2decdae7b8b40,257833: test and fix: anno atArgs and null
d2e0feacc5c46d3d0c975e61d547fd8ebb35aa0d,257833: test and fix: anno atArgs and null
ddbde46bddb183ac35dde309d09a33e482297154,backed out changes - break the build
945c4cfec954d918142f5c799fbb45d343eeca63,255856: test and fix: dont incorrectly process @target(Blah)+
2fe4f4bae75cc48d7b36af9d2b8e6337ccf89216,255856: test and fix: dont incorrectly process @target(Blah)+
1237ad5e18c6091024b22de06c3977aff16ff7c1,"to continue to fail, with new ctor vis checking"
9ca3b783d892f4f486f6223a1412f089df7d6304,committed testcase change before fix! backing out
0b20da91288f47daa9c9860b5186782d1da4007b,253109: tests and fix
1ee5cebaebb381778cb15806fc5a9f25d7d8bf5b,253109: tests and fix
7327bc3771417a7a65a658ad584c4f7a851a1109,253109:tests
364e330f369eb4002c1596b6b425053bc92d3310,253109
f1a83b5f2ba583e3c18542f962b569847a863844,251326: testcase
5621f148e957cec57c319c8c9508167134a806f0,128664: testcode
72c5435bc264ecb853a7a35cb998627745fb41d8,comment
da08b5a5c309ea75fe64c5394bf9e2d88268aef5,more tests
44c40113a96fa4238c8f5dbed5242f8054a757ab,split weaving/matching: pointcut matching tests
0e2298a8c7cf0b6c8baef5900d77dc28ff3e19ba,Change from ReflectionWorld to World - does this break spring?
1fe66be046de4b3c13fdd40509ebd94fb13a5ae8,more tests
a84b3a8bb1904644942ed38277960ebd97bd9b51,some annotation matching tests
1c5d4bc331f4273083b547923b122571b8387bfe,some annotation matching tests
21f257f764afb74bdf2a1113b082a589c30e5ec9,258325: fix
33c1f32f5d8e2353a024c52cb17bd5aa30e70a30,258325: fix
d65b4f2cc6e9dbd139e6d9a1ee6bdca50c3e5c31,258325: fix
ec5e796a78f98328fff6d732e1fceb8f97999f2a,258325: fix
372420d7b8ff3ea2cc74a6b083a962058b9b4c3c,258325: fix
029e8b9dad14f61f198bf2de3e2d0f9b31a8c0c7,258325: fix
e9b46f75fdb26d95b6b2c791546d0b6ca166178d,258325: fix
e58cc15a92634c2cdd1913a8f670bd03f9eb67fe,missing license + removed from suite
b932237acfbcf6faa9faa1a72d1983630d6d5b7e,258653: test and fix
bc71bf94320dbdba830261c0f115688d77a7592b,258653: test and fix
db5cc21f2429dfa9b490d924997927dcfcc4952b,fq itds - tests
d7c64f06ad0a3f71934fdcad2f470ac3a053f0bd,eaten by the formatter
711244d4b37da114c139732c2572e33771be848e,258325: refix
1d771cda423bb19f1d0b57137a9507af178e440b,255643: test and fix
556625089b5d33b38ecdb212a3db95d7be5a007c,255643: test and fix
5a72675b995e68dfb4b3e19bb13b322900bb64f2,attempt to commit patch for 256514 again: fixed the patch to be non-windoze only
c1abea71ee77687ea2a7a616fd7657fee36ebf1d,remove duff test
c3817b36375049666d386da3ed4c75db0a54896c,252722: test and fix: generated super dispatch methods
5750d4a63d1d21a07ff9440580f8ebd7c7db7779,252722: test and fix: generated super dispatch methods
a2041f02e2d022438f125681339706b97af8e2e7,252722: test and fix: generated super dispatch methods
f6c0e441ce6ab3d8bb9724d3595d95cef60e786e,252722: test and fix: generated super dispatch methods
e18b289fbf346cf843f59d178217e75255029885,remove wierdness about sometimes and sometimes not getting a param on the default ctor
632b63757bd557c60764dc55c7f7b5716cd6b363,163 readme
b9630d7479b2102734df9eeb06d303e099645274,build src jar for matcher
e62cc6cf8dd6b455afd8bd0792de2199addb63b8,259279: test and fix: bridge pipeline
a715fdfb3fe097546b9ee30f2da636683fa2db07,259279: test and fix: bridge pipeline
68657d13092a10f7d65ad15568bc55087b7aa128,259279: test and fix: bridge pipeline
2b43e636bb8929430e75b1c90ddf2c2f6ba86093,259528: test
62c9d6c3ac9291aa3238d5dc02da9eb836cca7df,164 added
7972815e3c844e097bf401745ca1d6a4c5672063,1.6.4
d8011d6238c919468419918a902ceb33b8f7cb95,259649: smarter model lookup
4316c4456bee9357df9845153d8a5c34e57520b2,259649: equivalentTo() added
392b7ccd397b59bdba55439882b970910ed5f3c1,259649: override shouldOverwrite()
09f513c1269c615e7cb2a3746274aeeded29bdaa,259649: bit of refactoring
84dbc011f6b45048fd4e57a5147702284d18e059,259649: bit of refactoring and aspect comparison logic fixed
6a0d1a70dc38f0a84e779300285ef934d5d34f6e,259649: bit of refactoring and aspect comparison logic fixed
f5f5ef2f3dc732ca0fc22e9bb9adebc7f18f5c99,classpath modification helper for tests
b0697974ce3b202ba676cf5a169ad13ec3b3afbe,migrated tests from 163->164
77f22ee2d3252f0e63bdae165519581ac5afddc2,258206: package declaration support in the model
10f564c53f96eadd15817b75d114a43460cef861,164016:258788: testcode
7deaa61cfdd361bfc1b55885c5e6f550244427a2,258206: package declaration support in the model
04fb46c3c1192dd13d74f6d2234095bfc460dfa1,258206: package declaration support in the model
f6debc480abf456cab312a3538bb8c9430f9d6e2,258206: package declaration support in the model
32554ee4a874dcaee989ea8141073c3280c6b07f,258206: package declaration support in the model
b604f27b616fe8679a28fe2f5daed62f8f22159c,258206: package declaration support in the model
9edfc1380f5dc699eb9c52efd7200293a820027c,258206: package declaration support in the model
34aa6add64bb6a5d420e633e6e2bcdf64234c36c,258206: package declaration support in the model
a99152466be89364c68ca43731445ba9ab7e3f26,"164016, 258788: test and fix"
5d2608b8ef08126f06e53c39384c6b9728633667,"164016, 258788: test and fix"
22bac4e4a64139cdaa200b45a59bdb05fece8a7f,"164016, 258788: test and fix"
1a92cf08b50d3117d3b0de3a7adcf9d0b63f6271,first fixes
242fbc2fdfa1698cdea07b3f505f19c12c15a3be,first fixes
86af20534d08197ca88e18f1563b27e366d5e6bc,260384: guards for npes that could occur due to other errors in the source
48c2e8d42715597b2ce3cb5e039115629d38a6cb,260384: guards for npes that could occur due to other errors in the source
64dbeb02963f33402f1be54aea36c1bba1d7c93c,260384: testcode and fix
80021b2ee4bfce86ab1e6f38dae3409f7371d54f,260384: testcode and fix
4ed8f0b1e0864c1d6d244c413a89a4a991d88637,NPE guard
e7bbceef4552aa06c1eb75928a6274e1718b50bf,260384: testcode and fix: better hierarchy search
d9bd46d462bc3742bfcc72d7baf493c49d96cb4b,260751: fix
681a4e5c11e4eba217c2a68f33ebc309bcf64a95,260384: NumberFormatException
c081bf7f5f4f642e01cb99d930a64852a9c8232a,260384: NumberFormatException
2a58fc63d699f4be27bd81a5512b079e923e498d,260384: Literal.FALSE and clone()
b140866871aa357e14cc511929fb37abc845a30b,260384: Literal.FALSE and clone()
29fe23e4bb449eea40dcf3ec78cd59a73088104d,261150: diagnostics
25277e5bdd3116dff98b72336e2511367146b794,prevent multi-threaded access problems to the map
83e8e800adaf24c52b03d681fcf75426a00ec814,remove unnecessary casts
83068f5508347e18a935fa9ae94541b921c1cc75,few more tests added
c773446c3b338c4711aa477a014faf541738195e,formatting
4a5a73b08d8f6fbb6471b68cc74bf2d6e7b55f49,258510: promoted additional annotation/class/interface storage from delegate to referencetype
3be58b7ad73775ef09701436e4457637b42da460,258510: promoted additional annotation/class/interface storage from delegate to referencetype
89ef2081b9c35e7baf5f0f0ca87e359c9b83ec96,258510: promoted additional annotation/class/interface storage from delegate to referencetype
e307d037aa3288639e45d5b656bfe614766c7e43,258510: promoted additional annotation/class/interface storage from delegate to referencetype
9f6189496590511249b927e5db8704549dd64b4e,remove unnecessary cast
405805d07619bc3538552ea49f9aca9da2e58875,261380: test and fix
fee0a3644bfcf03362953fd098962ce88f494d86,261380: test and fix
284586a44e50405944ad35cd9846e9215528fb89,209051: moved test to 164
30607137f9fd8393c8e895419faa8727b8b3a3df,209051: compiler limitation message
2962982a4536e6ae5bec907f72c696137d68c728,262154: test and fix
0afe6b3137e636e126d58d6db1a21d2990c06d95,262154: test and fix
ab75342042aa9a5e0ed0c512bf50d68f9bfb2d19,262218: test and fix
01eb395e6ef8f8b403d2c37b36ef717ff82d158a,262218: test and fix
671bafd7b5e584d96a44d4f35059ec9046c1a4f7,246393: new compiler build
7df9c78208eef1b9eee6f10ff471d7cb27b0684c,246393: expected error changed
72886ba04e02a4849578a96fcd70764d4379bd9b,246393: new compiler build
5911483599f9e45b4e3b82ddf024c1bf42302593,246393: new compiler build
2d1d2fde7ef8571c918df5fd11b8ed1271256d88,262509: test and fix
8e5ebdadf66a9af5d3f4d9e99e6423e3a5e0a9fb,262509: test and fix
c2dabf34a833e1e4a6f168f97d3f30be10b89e63,262509: test and fix
487c51d470f95f60f0abe883fe47742d54af3810,262509: test and fix
f9ea945477d7a3649e99c583a25adc49ac117d36,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
4ac450d08f0553182c2dde58041bdc7d0d41216b,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
c50054a4d5131c2af9636280bf4ee99095f28854,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
bfa83c307db4fa4635c21470dce3be3270173462,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
35c67f9eb950fdb3cd19498469fd1a1b53251593,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
b60b96f53995f9ac4884a250f449ded3c1626303,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
d1ca41db5d4944469f7293bd4317b4e590036fb0,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
8c5d8d3a13b7c6bb8243da5eb686ddc1149b981e,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
ea331bebf218042f2557481fc3258dd4e26d8e38,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
20f59229610a532b83afaee3bc519b868c354d9d,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
17da10da5fe342efe7e84e0ffa5a0aecc706a954,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
fb0ebe4eddae6bf7bcc272c919d25d19d72c7c0d,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
a26e7b41b90b6ce92c795766bc73cd4b4c423152,refactoring to make around advice lvt fixes easier to apply - and make the code a bit clearer
b5045f23917acb21677dc31a251e629d558e7b99,194314: give appropriate arg names to effective signature member for an array ctor call
fedb620ccb3b5e2235e70be07153aaceaf3b5cf4,194314: testcode
377069ffe18e73576d225a329b154ec319a4c6ce,194314: moved to 164
4f9ab2ded490c39ba25f18a256428ddac88b59c2,rogue test occasionally fails
d3bd4c36d032932b3ffaab274d9fb880a555ff1f,194314: moved to 164
a98ffb76a0a85d68ae9ed55ec46251b3e8991517,194314: copying parameter names across for local var table correctness
ca925703db97ea3de19067e1f742f34707830954,194314: changed to a more consistent name
9a29070066af5b98dd3a155c51f3de1e15d4c58b,194314: now copies the parameter names from the ITD to the dispatcher
344ad0d549d25de58943a3170fd8687835911733,194314: tests
69e86654d7ba0ce4c4b7bcb4001f24c695022199,"194314: on copying, do the right thing for special lvar"
127b5202621a73150e90028420da2828a4a9f869,194314: calculate the right local variable names
2a002f6542f6401c3b824930c5a0b2df0ef1a277,194314: updated based on extra param
0e9c7e3b42c88dfa8de9b457e19595d54c2ae93b,194314: tests
d46e7dded389d5054d0bb32183d98238134acb6e,test to cover regression in removing mutators
a066840ea5b8a2a99209147b001181b04445c7b1,"on delegate change, forget any attached modifications to the reference type"
0614ca9b7b46864f3319b3d71984319c173d0dfe,262288: cope with a previous build that did not fill in the buildconfig
76128713ed1b6a5737b267bd80aeb9e50540b9e7,255421: ExtendedStringLiteral changes
f46933395a33c1b9d28b3cd4bbb2b2d326b7c538,255421: ExtendedStringLiteral changes
85eed1b16732e2448a4d5089ce46e8fe0530e4b0,256779: test and fix: decp lazy resolution in anno style
69a79e20f60efdc344a0a354b254fe72019907f5,256779: test and fix: decp lazy resolution in anno style
79eda2ed361fc73ae14e9c96b6c6c9f1174ba5f6,256779: test and fix: decp lazy resolution in anno style
e75cabfcdc41f02a7cec508b1f6eeb555a97114f,262288: doubly sure
68ed0cfc1ff49267a1c52124b5840fd182a35dcd,262905: recursive non matching cflow pointcut: test and fix
9f677b43bac8458e52f4c1b6fe0816514c08b923,262905: recursive non matching cflow pointcut: test and fix
b62098640ed0a6b027e166b0978543500a9c5cea,262905: recursive non matching cflow pointcut: corrected testcase
edafd55ed6eb5a20b160c798c7f5523f44498e62,262905: recursive non matching cflow pointcut: set source context for matches nothing pointcut
04509cc64423b8e34e3ef44396557ace8073df9e,262905: recursive non matching cflow pointcut: dont report rogue non-matches
6133a38cd5579c94afe5790866cfe18f2e15fb33,262905: recursive non matching cflow pointcut: corrected testcase
229000c70a2258fc523bd08bcacf289ed277906c,124460: moving xml parser and structure across to weaver from loadtime
89d8a647dd362a1aca8d86e782e029e80a7b891b,124460: moving xml parser and structure across to weaver from loadtime
54462b3a7fdb26de5021caa8475b5b8b59b304f7,124460: moving xml parser and structure across to weaver from loadtime
690015d703ba9bb16993c0d5b827d1bbf9333bcd,124460: build config knows about some list of xml files
e2b4f22f7be28b18443280fb05966aba44d3c384,124460: allows .xml files mixed in with source files on command line
feaca8335967296f8e3e61b5063c43c2dc1c8a9c,124460: world knows if XML files are being used to influence weaving
c04eccb2aad5c0f427b123d4c5712ba0317f4695,124460: world knows if XML files are being used to influence weaving
1da1f7cdaca36e258045ef29660abaa13c84ebed,261808: fix
3c4a44d338cd120716df6952a273f1f48eb5076c,195090: ajc$ local vars that aren't used getting reported when using -warn:+unusedArgument
c4a0adb1093ec5112c60a186c7659ba602910c1c,195090: ajc$ local vars that aren't used getting reported when using -warn:+unusedArgument
3e12b98e66ae5b626a6748e46e30a3c49f809f92,148285: test and fixes
01c599be6992b542217eb82882d56ec373a23c9c,148285: test and fixes
c0b181cf7501f22c9babf078d1d7343c07b3a8ca,148285: test and fixes
874e933743722b65d5971eae9ea8563a4ae5882b,148285: test and fixes
8bf38fa383314b9c3526eb8532b9e9ee8a889809,249295: npe guard with diagnostics
e842cc97fab075b691acd2a73a1c4a7ee32b554f,263323: broken aspect weaving
4343691ba5248e7dc221763203230c8244c568be,263323: broken aspect weaving
542fa0dedcb8fe8b06c9fef48450bda262add60f,263323: broken aspect weaving
2d3001e1f6949e3d9d50e7703e3c15d3a3376c25,263487: test and fix
f8979069c23d3e1f430c8a553ca332486f62671c,263487: test
f8ab145f9ba1edea907db7a78a7c3ff25cd28e4d,263487: test and fix
55dacf6126a9ffa4b67b40da90d1200525bce779,257277: Incorrect generated Source Signature for FieldDeclarations
d8a9b17f4540c876d68b1bd5cf28a43054a9379d,257277: Incorrect generated Source Signature for FieldDeclarations
22506adf79a66b5caa323d50e103a5f47d125c2e,257277: Incorrect generated Source Signature for FieldDeclarations
518cb3776d4ba529dbbbd1233bd6dc1e385c2469,263666: missing counter for around advice differing in return type
b8a9c0463f679c5cd681c724c5e9cf1518e1813b,263666: missing counter for around advice differing in return type
1ddce9bd6611ca86047af27ba04ce0e6849ede2c,263666: missing counter for around advice differing in return type
1b54b4b7555176c8548dbbffded063191ad0b46a,263837: make reweavable field in BcelClassWeaver non-static
c75b7a1696bea21b78e965bccd8d05c81a94494c,124460: simple basic control of weaving via aop.xml
42c34e2fa348eb453be2c953b72f13391d5a9997,124460: simple basic control of weaving via aop.xml
8b1b62db36b8076aaa2e794694119523f761f402,124460: simple basic control of weaving via aop.xml
3ba74a5b31180ecd73aa3d7fb9d3c04a2739ec98,124460: simple basic control of weaving via aop.xml
b0089cb8c4931f46ba84a2462d08f3d30488df98,124460: simple basic control of weaving via aop.xml
2dca2a4e22cca7bafebcb474f707b2a423a8ac7e,262257: testcode
6a46a9eaf098d04844852e055c75d062c1361e8c,262350: testcode
363b3661a41ea8241a3d55aa7e2485e39fad1825,"263310: testcode, not failing so far"
35b87d07898b0a3dc76045972fee8e690befd2b2,124460: simple basic control of weaving via aop.xml
5786866ca73bdafbf6870a428e16a3634021ab57,trigger build
2d9a0895eb564518abd121c5b25f278953823ed2,can build a maven repo
d306fe2c24893ec635f03e41ea6dc84a76ffa92d,pom templates for a maven repo
797c4225a81d0ec9f76f006afa5e825ec33c93fd,maven repo option
3765aa957a7fe191eb58e507c7b1b72810f834a9,124460: aop.xml used for compilation: AJDT interface support
f191842def35c70291fdb11dc1165878998f3c23,124460: aop.xml used for compilation: AJDT interface support
5456d4c5c0d17dc007751df618156c9a414273f0,124460: aop.xml used for compilation: AJDT interface support
3320b23dad61397eda6b7e812a3456f55cbfe71d,124460: aop.xml used for compilation: AJDT interface support
54995f6229456a4e8fb174446b224eba65ee3808,124460: aop.xml used for compilation: AJDT interface support
1a9817fb980988bf18c86cd8b76a0faec2df015c,124460: aop.xml used for compilation: AJDT interface support
41e23851e2f2cb8e1612acc1ad96f57ac60e949c,124460: aop.xml used for compilation: AJDT interface support
78e5fb4ad589d7bc83c388a6f3756d32e37b4b79,124460: aop.xml used for compilation: AJDT interface support
c693350b28918e4c0ef93820188e230fc8a73d6e,124460: aop.xml used for compilation: AJDT interface support
3df7b5ede4980b5beb9c6af82e58ca2aab9bf66e,124460: aop.xml used for compilation: AJDT interface support
0af658e1b117aee704b5e6e836ce7e84199ae548,264563: [handles] Remove trailing '/' from source path handles
a1d749b3658307fbc62f4387ff69ac234498b0a6,corrected to weaver
e2ffbb54af0974cb0c72b893a88aa2a75f45bebb,"233032, 265072: dual preclints"
250ef222d3e165efdc69903860fab2a59277849b,"233032, 265072: dual preclints"
9f80317172e217cf2cbee6d212ccfc2d94c0ecfb,264869: cope with badly formed source name attribute
8cb2caca59e73cc107abcb7fdffea63cc09d40af,just give up if the name is rubbish
cb5091bcd8e4bec3e6a2b370c936f46f03320113,cope with rubbish
b6d5f319a101d120450a6bb6f9d5d2f91b41021c,233032: test for dual clinits
04ccf76fdb776388dbdef108d69183f01fe8821c,265360: test and fix for annotation style references from string pointcuts
c57e9c7b63669925587390db9f250325cdc24e8f,265360: test and fix for annotation style references from string pointcuts
bb6a294312282d7caaf8a85d79b35a94e3f3c2d6,"148508, 265418: tests and fixes: array and varargs subtype patterns"
0da0f4fbc6733814b049366938403101a9e578a7,"148508, 265418: tests and fixes: array and varargs subtype patterns"
513a526e3bcdfdf73b2a317e22d5cedfbd156d56,"148508, 265418: tests and fixes: array and varargs subtype patterns"
57dbf696735070a818bf33bf5b7e8e51a5f0ba5c,"148508, 265418: tests and fixes: array and varargs subtype patterns"
e8309925eb9c0a86d3cf6a786cb95fc4be349242,265695: inherited anno matching
5d5accd13723457fa8f1501f7c20f21af5e697fb,265695: inherited anno matching
7479065f9c0980d1ab2195d171977d5b98295da5,spelling
303c8c22c537a4c64ced3c0d83cc92f110e60001,265729: fault in binary aspects for itds/decps and search for them correctly
57d21ed5c724ff0b123aeef34875f8786cb21d36,265729: fault in binary aspects for itds/decps and search for them correctly
bb02acd6e5cd0677e8fb9f3ef524b075a0152427,265729: fault in binary aspects for itds/decps and search for them correctly
51e641f10a044a0e394f6bac3e906494c46dd67f,265729: fault in binary aspects for itds/decps and search for them correctly
11e7c2ef992f4b26a7839a06594b5cc6139221a8,265729: testcode
5bbefa7bda17bd31d06ffc1e537fd05cff53fbeb,chewed by code formatter
69903ea6029fe4be457adb5ef6019e44d5a6d1e3,265729: get return type and param types correct for ITDs
69ba51113aff39f33a487006036de80474f42cb2,265729: get return type and param types correct for ITDs
52f10ad1374069c305674e0ce66cd9a4f72e25f0,266165: if(enabled) where enabled is constant boolean is optimized
17229916f59b8eb79af2f2e930cdd529520f5341,266165: if(enabled) where enabled is constant boolean is optimized
cf9a42e2c35699ae328a9066665c7e8c55617e2f,266165: if(enabled) where enabled is constant boolean is optimized
66b8707bc7c42bdca0c365c0027162b3110b0405,commented out assert
997321eeca690086e7a60d796e24bbf25a7699b3,266220: generic aspect subtypes in aop.xml
8f0c016b0935d1f27b800f815f2490c12b3fab9a,266220: generic aspect subtypes in aop.xml
390b387fd0f3695820a6fab69110ae46496f8473,266220: generic aspect subtypes in aop.xml
ac24440f6770e72ac0207ca0eeecd56676547204,266220: generic aspect subtypes in aop.xml
7d41bf5a3b2fb4761c030c7c208752cfee2a514a,trigger build
a378bdbeeb2f6fe19befbb45d2b44f1afb77ab44,265729: testing ctor/field/method itds
11c44afad0a9e1c7cd656eab0290da45e2bb80e6,265729: testing ctor/field/method itds
9b5be6ed58681b0b994ba73bd79b91280a3214cd,265729: testing ctor/field/method itds
7da66c129c697d2d818da43649be905940fe5130,266420: rogue unused private warning
145167c811d0e242d747838243ae5dd488d65ef9,266420: rogue unused private warning
0a89dda303c2e120231768f7b218874f214615db,266420: rogue unused private warning
374521ee14c3e86a5722b417394be809ac6dc722,dont turn off multithreaded context unless running command line build
34467bbdc9d08ede26bf33ab27c736b2bc05f962,266420: rogue unused private warning
5b1b29a1ced5d3659cdb01ee30cf1f2858c2289f,266420: incremental compile case
c0d0d1a24d302c1748a6d597fc743b5c6753ec97,266420: incremental compile case
2ef85a84395578dc5d1cf3f4e39c057bfb6dfdd4,266420: incremental compile case
82c0ab156a769151d9825dd421bb8512ebd48d8e,266420: incremental compile case
0317807e6cb65e3e018a41a3200975e06047a011,266564: annotation style inline problem for double slot var types
8ab8418959144feced704582e8c4ea123142f293,266564: annotation style inline problem for double slot var types
e41d1991715e882b68809ef028096f015966539b,unnecessary code
3a1247436b10b786d648701fd4997fc1a5f20b93,unnecessary code
2f36e7f0a7cbf99fbb49e5de268918d4ea57256c,266602: change from BCException to proceeding 'as normal' since it probably indicates the aspect is broken
8c3cc76b493a89bd170a6f9c9dc1b80e34f1e3ab,findbugs: dont compare wrong types
9f2317ee6aae27050fac2d8609023394a3909ed8,declareMixin: annotation signature defined
79400c1dd4ff9a6dd07a8befbe7b3edbecd45c9e,fb
63c6e597087eb8faaa2c1309f5009214be4050c8,fb
7c7a3c616e3d41049750737c817587e6c8eb6a71,fb
7239597b06d9afef587f1c01e2d44b701bc429cb,declareMixin
eeb997753292a003e269aeb272df261fd2a838cd,declareMixin
d561b934a8663072be4768ef3dd72736af1443ff,declareMixin
f94920c35dbeab6b774f2dcfda3f3d8f9ee6124b,moved to 164
98e2ebf7aec2dfe18c49a452a59d1412b4fbe9a2,minor optimization
957181a21c6606399b00b5f2b86b15e8e7cbaaae,declaremixin
87a2be9fe71662caef27147fdae5177e37243438,declaremixin: testcode
191fdaa9238a231cc6bdce67c848f909ef43f44b,declaremixin: testcode
85f0de8b3ba5af28509d7dc5feefed4303053f9f,declaremixin
84e3fa9ff46c93841fc4234bdb44b323ffbe4ab8,declaremixin
90235ddf4653e0de745a2006f82f3eb09bc9495e,declaremixin
e6a00e981659d5c65c16b3c88648e80c7a289770,declaremixin
4db713f68a8b082a359111c4561863446058223f,declaremixin
436c81f1fd28a1ffb89933f1f541bd1e323ccd4a,"2009,2010"
b331fa862e3296cb26b3d6b47a5c8a4dfe2110a8,declaremixin: check signature of factory method
a717f689d51d8392d1f81e50556e25f26658294f,declaremixin: check signature of factory method
2309f7b8eba592fd5521952e04ec8f0093daab62,266996: fix
76a261b91fcbb3659f8fc8ed062f52ed26ed1df7,declaremixin
c4439a7a47124e646b0ef4b355eebb716b18c00e,trigger build
9a65e1e9ff34300c1388eb81ed4246605e1c8b05,declareMixin
5afb1af30a356bd104579d9ca4120d68fec591c0,declareMixin
4c97a01e0f928e83f80f6aa961afd4a9e1ec74b4,declareMixin
9b4b39591fcf47c6fc22c078f014480ac9ab3e79,declareMixin
49f8b5820a40d91dffad92d45d66d419d575cf23,declareMixin
fccbab59a264a7351822adcadd65af8570f216e8,declareMixin
47fab0075ffd3252a2ab125a85db190c8124df45,declaremixin
d4db815bd941b1a07c8c961613672480afbce8e4,declaremixin
82692416fb2dbae3d95a05c495e4917cb09ea0db,declaremixin
96870a05d3255c7c555c325b3993f3012400443c,267559: generics itd npe
8122399b46dbf63e5e35cea8dae8c7022380626b,declareMixin
0638e95e1317ec599bfd33f911804a24c6f150f3,missing section title
a2f7c84abb11866c334bbdfc7c2f9bfd99eb927b,declaremixin: javadoc
433fdcfa0920e53be10f097bf34f435e8922b482,267559: generic itd npe: fix
9c1e8c788a7b5f3856e65815e67bd9209a90ac32,declareMixin
596406d0d78771524f4176d807a6791418bfb7b5,declareMixin
3d69656ad9cb116192206949527160989b40a84f,declareMixin
01b0ccdea69bf1d8a70b8cbe65f3130e9445a620,declareMixin
a45da4ff22289b1048174b1f94e13d549b12d7b5,267559: generic itd npe: fix
4140fa3d7466876d427d82ed8ab949cf332e160d,268689: test and fix for npe in generic aspect
41a94551a155d4862770def8725065d4cad125f2,268689: test and fix for npe in generic aspect
30fd8c9133fc57c7b6082d460dad2e2d9dad950b,bitflags
1c9611faa2341eb315045ce1ab0df0269a7ab423,268710: test and fix: marker interface within generic aspect
73c305bb7af6382c09caf5795a39b3ac96439b9f,268710: test and fix: marker interface within generic aspect
0f5f551ffc0819f793122b6d0afe075ad377e027,268611: building broken deca code (fix)
3ed33c860ae647660de38ec6a0b6000814c3e1fe,268611: building broken deca code (fix)
5877d7f9331fa5d52d766089a71a1bb271d438fb,268611: building broken deca code (fix)
534c29bc918c210e7c4161b2e1964719eebf8147,268896: funny lv table in method
2b9081418949961b2aa76542d61c9c802c81a516,268896: funny lv table in method
029749c2958eb1db537cfa70475fec7a8b1802ec,268419: testcode: dynamic proxies and generics
3657693913b78f93a69991907fbf946d72203386,268419: testcode: dynamic proxies and generics
d9dbf074aa0afb574f831a9df76759fbba339227,268419: testcode: dynamic proxies and generics
e232485ed9305b92235ec00e00ae93fb7b160d3a,268827: ajstate intelligence upgrade
f39c6e9435544e6256fffda39e66666629257a72,268827: tell ajdt about class file removal
c4caaab16d00e459bbdb31157dfaf33cd135a11a,268827: tell ajdt about class file removal
70e7e2fb0bf2408874c36cc489a881cab0c23ba8,268827: tell ajdt about class file removal
87dbaaa2793bfcf03a90a7d5a4ec02af0266a30e,268827: tell ajdt about class file removal
2f078d8266060d780ab30b3972473336ae1b4d56,268827: tell ajdt about class file removal
93214ae61c5e4587f6fd6cfc55ae7412a8fb7026,268827: tell ajdt about class file removal
496eabc6e272c3218c7eb0a0220ea2b4fe8ed1e9,268827: tell ajdt about class file removal
ce3f4051143a6fb56c5690c9ce824c55cf7baad6,268827: tell ajdt about class file removal
eaeb4f95a11381313a432eb11580d5c6edd4fc2c,268827: tell ajdt about class file removal
76e36c828237f49885b2f08858ffb90049bdb047,268827: tell ajdt about class file removal
d4d1884067b5ba50f6d585d4d967e9b4df31d41c,report after
5c49c0b67a0e88722bf9ea7a8c9e80dce518f067,269578: resources remember where they came from and are deleted properly
838a7aa6a6551528230b8e6d5d07e9f3bf4c8a94,generalize report API to cover resources and outjar
8026d8ce7bb8798247e367dea0b40c120498d02b,generalize report API to cover resources and outjar
e6793d1d0aa61243c136cf0cc34394f70ed45f77,generalize report API to cover resources and outjar
c53218321b797e7c37c9784085c904bdbc8c7f23,generalize report API to cover resources and outjar
cdfa2e2a765a0dd979418f16c0c23298b45ebc86,generalize report API to cover resources and outjar
4d09d96c91c6b4ac0f1d9363c32af7aff5ac718d,generalize report API to cover resources and outjar
acbe3c71ed27b17f5502e6c167703301fc898281,generalize report API to cover resources and outjar
525a70ecf3e81ac0bb3c5a48c6ea1850ee2c0b59,generalize report API to cover resources and outjar
93948ce0a0b7d7b2033243de4bc6863320d5553a,generalize report API to cover resources and outjar
f23fb4f9cbd0090c8092520415b237eb458d02d8,consider aop-ajc.xml as resource creation
aaa62a3a7e7ce6bb0d8e88d75d2b4ac2fb01844f,import declarations gone from faulted in binaries (265693)
eba0bb196cc37181c39598216df43c2032b2f746,265693: model for binary elements
c8c1f2b0993a35879835fa410d690f5d9d6621c8,265693: model for binary elements
41f4946d2991fac86660982065f97e27409b9a5b,265693: model for binary elements
bd57a2e9ad8b5e40c110b669df586d97ce1ee323,removed unnecessary test
c017db4d89081fe954e645cc53585cf0df98c2ed,268827: ask for the JDT project state
a3d12308ed839f818eda96539510b786d5cffe69,268827: ask for the JDT project state
162f60420e603fe8d3e65858f6643c65231a365a,268827: ask for the JDT project state
1b0c5e9746bfd484d3e3e8dd7c2c1e688e3f912b,268827: ask for the JDT project state
b236df9da51debc7c62eb570bde7e84493bbdf1f,268827: ask for the JDT project state
03f436798a2210327d7614e15566697e06ea5789,268827: ask for the JDT project state
706fea95235110c75ab4853783df7f277bef4307,268827: ask for the JDT project state
2785ffac057a7e7ab13c2f314182543d96a6b692,268827: ask for the JDT project state
78decedeb5b689a9f2ec1bad7a813b2108c0f845,265993: more jdt like handles
24118fc5a91c72d5cea37d2ca433be6cb9785006,265993: more jdt like handles
6ecec12b5da0a782f6f3d544cf4f563524736cb7,265993: more jdt like handles
9768b96731eec6cb04fc15e46c36d5af63138c8d,265993: more jdt like handles
446370d3a25285bc20bcc670dc9cf57c0504c29f,265993: more jdt like handles
3274723d55a95c98a1d67d1f53af292743751045,265993: more jdt like handles
b269e7bf87f9cc1951ecbcbec0d40f2682964854,265993: more jdt like handles
7a7d6f0f1e81e6639bdaa4f278b4778b984ad175,269840: [model] package search fails in binary aspect in same package
3eb475ccd3fcd641ef0aa6c543314ec0a26f5fe4,265693: better test
752f895d260e3c61c8140a90812df52425ca3692,269867: synchronized the map
e40367cb1dc194b89e2d31fb8a41d0dc523ee268,89009: added getId() to joinpoint.staticpart
691df674af216708a7a5f12dba6a5de1a797a448,include latest changes to runtime source
e089e8449b8bdbf5e31db78a4533deb9addd6634,89009: joinpoint ids
d6b76a505bfe57095e5518bd7801e636b4bf3a6a,268827: test
c732808dbf2daf655dc1c9ce4cddb20b8c27ab1a,269912: dont build message contexts for messages that will be output in the IDE
245763d3a26349a82b6e7e209e7093610dc780c1,263666: forget modifiers that may have appeared in the pointcut expression
d5e900d42c32d32d87173c82d8a5dc51beb87300,269902: guard
b23cc1a113ffabc87c2efefdfa919d643562b20e,270033: don't always resort to full build when seeing an aspect
5b8b139e1256b14e75b36fbd0c5dd32442270af2,missing testcase data!
6dbb5f308c198963486550cb614204bc5bf8fd7a,269522: allow for extra args
68eb725ad52d74215450e8ee96a16a2fe5be3dd3,remove unnecessary code
ef6efccc2143fefeeabb29e0f100ff49e29e3926,265993: fixed Qs for tvars
900ae342e62d9f193c773da8d93e3d52c2e680c2,265993: fixed Qs for tvars
a2703cf03d909a2dbc78f5b169225270f8308606,269286: handles for anno style elements
127e468b74f1c1a99ae1917f64b5f251c45c4520,269286: handles for anno style elements: less than optimal fix but need something quick
2c0e14ac955fdea50dd5cf82baf186415d9a17c4,269286: handles for anno style elements: less than optimal fix but need something quick
f7920545b225220b68ffdd18537eaffa22db5174,updated expected output to QT
b00ca75db832164f0eec0451723edab041ff3584,handle for anno style aspect (annotated class) is class delimited now
0693366e874cc40f78a0057f5d7a13e88c49e318,advice handle counters
f53ca7ccceefcd3e38833b339376443e0c4cc15e,267245: don't give up on incremental build if >30 files affected
7c3c5b5714ec2d00d5078e4bf4130ebf2dcb22da,164 readme
96d196a89c16ffe7d32b10e6d567d6aab81a16e3,corrections
e611286da100fa40e132fccdd3797cda49654cc9,Xmx
df5127eb48ca10ae10014c5a05dfcce9bf5839ff,reverted the change - the builder looks actively in here for the version of rt
b90b11e6346a98ec268bfc7619e4d8980b939429,271169: test and fix: npe in weave call method with 4 longs
c17d9d32781bdeadd1b30e166c5c88cb0b258fab,271169: test and fix: npe in weave call method with 4 longs
d7766b83c0893dec422d99d58af23fb4a72a3a5b,164 final
312bc4815dbd270e64b8edc44aeb74acc37f25fe,pullup
daf9c9b62dd64bf1f3daf6b77e6ce06656befdbf,271201: inpath handle testcase
bf9773a0b7ee6cfa7b79bbff75ee1b25d50cc8e4,271201: inpath handle: can determine if class is from inpath in add method now
a2b8d41837c2732459251724ec17e4e9a6f2c28d,271201: inpath handle: can determine if class is from inpath in add method now
17df9e0e0dc91d704b384fa1d69d2c6de5c8760c,271201: inpath handle: can determine if class is from inpath in add method now
49e81e381f27df70e6d9000c56ac05155777f9d2,271201: inpath handle: can determine if class is from inpath in add method now
c815a44c9f50fc044e5313e29a7d98a2bc2ae85b,271201: inpath handle: can determine if class is from inpath in add method now
50603b3dd937263492cbb401a910c2626a55247f,guard against -1
8e813eb537bb67e6061c2847525571304f24bf2d,271201: inpath handles
c4f8d70ef68455e53f47450df811c84f1c3bc905,271201: inpath handles
1da67c35d8b6a7ab7df85e846a8852141f434180,271201: inpath handles
212d3c1b66b69b70775df1f172e7d83ed82e285f,271201: inpath handles
0b3e0b9b6310596baa5eada118d5988156cf7e47,271201: inpath handles
861ea1bbcbe27a61ecd2683052be23e36a35d189,271201: inpath handles
0b1653b40cf31befcb001dc1d9156d2de4634328,271201: inpath handles
cf67756f0203084d1e7ccbf9d0291c90a7802f46,271201: inpath handles
a56ad7026f0703f4a64b7cd4042a62831bca7109,271201: inpath handles
7a9a05afe85289261f9a7fbcd52885f53062dfe2,271265: incremental inpath model
32534de186f69d98669fb809566a686f506f5483,271265: incremental inpath model
fad0301cb8a9f460faef883cda7384c8261d46bb,271265: incremental inpath model
fc60b23c788601d1d44ac01dd20fa9f2eded51d6,271201: inpath handles for jars
ac617315a816e78b45da02ce4cc9bc006770aa8f,271201: inpath handles for jars
023dcb3a04b8a0c23a3b22f6f1f0d35fa8a0dcb2,271201: inpath handles for jars
e1d807495d9078382ddedbd698b8b09cb09d0ec2,265356: positional info for anno style messages
162cda91a384d790cd17373c9b411dddf55b5a17,265356: positional info for anno style messages
46559c63b1f0c3ab261f0e55da0a423bf4fa7447,227484: type demotion (default off)
2992b5079cad2b9fc69e52a1a5c92858a8164950,227484: type demotion (default off)
2b74ebb888539e3e0c410e78736c5e79c1b98c05,use canonfilepath
75f54f592d7a8443ff76dee0034c99e70514519d,enable positional check to pass on linux
21af07ee311f913e13197534e89a1c85e3a26d30,testcode
d2afa9933475f4423c80826950b5ac19b2f18523,trigger build
991dd5c0c0bf53fe733d3c289c453b427f3b752b,removing for one build
bb741e6b112e6f3dff5ea53e1e42956a0418c74e,"272233: test and fix, using 'void<?>'"
43d34f58ff0ee4c9e36ccc083e3c73d22b7c928d,"272233: test and fix, using 'void<?>'"
51a30730da0a61af553b8064315bdc5f727aba2d,Simones improvements for maven upload
6b2d9696e1bf0ce8d16a7341ba2d1a0dd6f88221,up to 1.6.5
0e00b916d0cf3702c9e44df29d77ebdca5fe30e0,271704: itds on interfaces are not abstract
c6601d4e182c6cd780815ec6ea48d9423fac85d7,273628: test and fix: use of if() pointcut in annotation style with annotation value binding!
42b451fbb6dd1306a3fe5da7000d3d02f1f21b0a,273628: test and fix: use of if() pointcut in annotation style with annotation value binding!
5e8ba5a1320f80712cd9aabcdbd52af8ee92dd37,guard for null - it may not yet have been setup
4afa356104af67957a2353d0adaf8373f518b46d,271840: deadlock in ltw with terracotta
aeaa12757ee7691b9deda9a07c921c83dd9a6032,271840: deadlock in ltw with terracotta
c533722181596ca6ed43fbc87c28936961c46570,274558: use .class names in handles for binaries entries (faulted in aspects)
bd85862d023f3b8a7de01ffe3f5d2e2ef34fcaac,274558: use .class names in handles for binaries entries (faulted in aspects)
1fe559e2babe14a778e200b4efccd380af5bf16b,272825: test and fix: super method call with generic itds
a601b9846099424a77480d082db016494e870772,272825: test and fix: super method call with generic itds
1b663a986bf7d2a0b62988c08d31753ace94072e,272591: allow for runtime from bundle repo
f9578daa1e5153f241aee8b640d58351db26241f,274559: fix: manipulating locals when debug info off
262cb6dd7fa047f97b9c76e7425964ae542b147c,275032: test and fix: itd of no-arg constructor should overwrite a generated default constructor
b187712e592887ab56f1a1712de72ebce44ee475,275032: test and fix: itd of no-arg constructor should overwrite a generated default constructor
a8c1caa33da4f62b452f18a3304116cbfdcab4d0,275032: test and fix: itd of no-arg constructor should overwrite a generated default constructor
0d29499117e53b919ba65eb8aedbd6dd2c1983a9,275032: test and fix: itd of no-arg constructor should overwrite a generated default constructor
d9f208ff2807ceb090570a9a69419e9cd4ff4786,275032: test and fix: itd of no-arg constructor should overwrite a generated default constructor
66235e846cc472a5e7c15ab3c1c37513d2e4ed0b,274986: don't cache in a static field
d45f7abd3a340ac6839dbb185cc3605c7e240481,275625: test and fix: declare at method
9bdd7b03cf1080204abe0b6d437e34ccef499e54,275625: test and fix: declare at method
f079f5ee18dbb68929172557568d0d95d25f7af5,275625: test and fix: declare at method
506f9187da625a18bc135f9821881b05c53f1871,"276399: test and fix: annotation matching, default package and source folder"
bda8490282fbcf925368a53fa6a243307281a1d9,"276399: test and fix: annotation matching, default package and source folder"
37a9cd7d0310e4020d7377142588ea926193fd85,brackets
e13cd5bb929f84c6b916ffe25d55784923456956,no need to use getter
bccc67ad02adfb1dee5af7418c6767d5adeeb280,shouldn't retrieve annotations - can be a problem when aspect is broken
ac9b2b94c8ce3166edcbfd6fff1e345db3ac2b0b,275032: refactoring - changed method name to something more intuitive and error reporting for the problem case too
bb59ce3cd1d8ada07aeeaeb51006df8ca39a7abe,275032: test and fix
b10573ed2e80fdb18df0eed3f85b07b25e60d197,275032: test and fix
090f8cc9870196afcd4b11336480c9bb197ec2ba,275032: test and fix
d32d58db8f91e29e61843afc9107a798f07901e9,new constant
5f15c2a8e4afbf5aa7d554142732da58b5cec5f2,277508: more stable if_ method names
3f5852976b7f3727f3e0bf6067b4eddd904ec4d8,277508: more stable if_ method names
25492effbb0cd1137a5c72df365d70602bd3e049,277959: stack depth must be at least one if there is an exception handler
6f76bb72e9d65b5e340736c7a61c2ad047d67686,277959: stack depth must be at least one if there is an exception handler
82e74b40420e7569997bfd8620cd5be3717bb084,277959: stack depth must be at least one if there is an exception handler
89e193912b8e49f26b8b2203b3feb384b9c3ea3b,278255
8ea4d681ea9bb4dd2e0bc44066f681a03903a857,278255
9940e0b50f30d89bd657ef0f9c8c5b91ea13775f,278255
3417cbe70eb77243767e59f9fd181b989c8cefb6,279120: rewritten not to rely on javaClass being non-null - use the already unpacked annotations
433cf59cfb44d1b0bb1e3059e1940cfe720167c5,diagnostics
7831ddd2c4d61ac9b28525929efd492d21b4dd9e,handle fixes
8367af2a21a2a9199feb45e92bd8061f5f03ec7c,temporarily removed
5f7d428a32839b830cf9e84a23018ff8fd29be4a,277616: renaming this to ajc$this on extract to static method
4a0eb9eea41c710a47a40f84048d289c17648407,277616: renaming this to ajc$this on extract to static method
d1ed4f4f62c33f1e94d6dd14bb5b9ebe0adf3341,277616: renaming this to ajc$this on extract to static method
558c22cbe8fb3c20dd7fa1712cef89d65c8b82aa,277616: renaming this to ajc$this on extract to static method
fd85fe1044fbafecfcd6fd0550cf6ddab88abbad,diagnostics for 278496
140040eb7c05beed14ad49a38c2d59508dcda6f8,279983: test
65ed03ad0aaed18d1cb83897c70575dc702b0b07,279983: test
ac052835d1e3895df17724a67c32c750d8887a54,280380: testcase
77c6f9ea8336bdf624a56365c595cc4bee87789c,280383: test and fix: itd ctor handles and npe with default ctor itd
e31f314dcdb74fe7372c008cba26f5ff60b269bd,280383: test and fix: itd ctor handles and npe with default ctor itd
3aed1befd9231ef3f77f450300896e8437385a7f,280651: first changes: avoid crash
af9f445bd7645d5b7b370f29005aa2d4f8bca804,280651: first changes: better rels
9de8cbe6648d82970d6a8fb3cd3599f025c1ca8e,remove debug!
f64c442ec64b878086171722c066ebd648a95977,"280651, 280658, 280676: testcases"
fa352eb9f1b0335b01a8b6a90249cd3a03dba4c5,280676: fixed broken equals
60c1f1ca927f1a3b5fbac21f1781c34355f662a6,280676: problem 2: allow for target not being generic
b98b6999e6b030fb550394d182e6368b4d372ed6,280676: problem 2: allow for target not being generic
f5f0ab28e5746422fdca2ff4119530bd70016f41,280676: problem 2: allow for target not being generic
37503f9aca30f152c3bcc01b2d32f09429e85a87,165 readme
59d5c3bcd7c045c55826f1b62576ffa05321626f,280783: removed security manager - why is it there?
a06d23b39c6bf0913520fd9cad286db15d70021e,up to 1.6.6
d96d5988ff8719eddc7047ed4015e477b534cdc9,field host for mixin made synthetic
4087725c8b15d3777dd219d21041d346aed31a49,world tests - not yet used
a53a1e8883360eeaab2b60d7eca4af739f01218a,call getHandle not createHandle
bfd0919e40fddad56e29959c7b98e0152f5abef3,283229: serialversionuid field and interfaces
8dbb6338d7b7314f97e30052f7eca8cf034ace6b,283229: serialversionuid field and interfaces
f65e345ba3f12fa76a5aa7d608042dd5ee900fac,trigger build
75cab96794087e91322e8a575ce7c628f95fb3ca,283657: fix
5f50e8fec2ed81d2def2fce3a14f57dec2e4c1dc,283657: fix
c12e41f18d0ec12bf658053504fe6e52c7f578f2,248297: fix
13c48f6e488de25566b2426536e9e7e4e1695b42,248297: fix
813ca1c230a57b7a10386bf799e6cc83c9f8384b,269652: incremental builds and prodding StatefulNameEnvironment
ca8e321a878df4720f4131f873e47b8d0f1eef47,269652: incremental builds and prodding StatefulNameEnvironment
bec027d3820915009825aa7134064a5bff412234,280380: don't include package name in itds
05d5befdd96f145e1fe0625375e7edf9308477ae,280380: don't include package name in itds
7b0a1866168d9d477db641376929c92053b3a37d,284771: before tjp clashing advice sigs dont get counter suffix
08b7d9e41e05df9956c5da1514a2edd29567a0ac,284771: before tjp clashing advice sigs dont get counter suffix
1f118ad52bfe5405ca913f210634996f715adc06,282299: generics and declare parents - bridge method unrecognized
224e781cb556614cd65e463614ec2797ae644e49,282299: generics and declare parents - bridge method unrecognized
3c9a892af98b9d5ad8e3826295d0ff141e738aca,279983: generic method overriding
170a9cbbfe409f34fd4dd3da6011ce6bfff87bf5,279983: generic method overriding
716ae41d883c69c224b9b35e9ec8359bb1ca7e4e,279983: generic method overriding
dd7d87923f6f8e6ccdc3e387679ba5a3c70550ac,285172: use cached ref type
aa46c1d72c1218a318087e1b93ec430af02b3a84,284862: test and fix
71d04cc7e873acc88189928c2b69e8c5f791d0b7,284862: test and fix
476538d776e653badae0de87c14a6030b338ea7d,286539: test and fix (decanno type in model)
bb77614623826008a4d0b7c5927b614478bc4096,286539: test and fix (decanno type in model)
06809533402a29b4e9a657e43a971970cefe9ab0,286539: test and fix (decanno type in model)
64f0ff99ca52e37298666b1ef7f8d5ef0bc8caa4,286539: test and fix (decanno type in model)
7f3501bfabd4c8b305ca7b0b750b5a6713b9735b,286539: test and fix (decanno type in model)
447cdc9d31a9e85f754eba3d0b4e461e60dc999d,286539: test and fix (decanno type in model)
b6649690748b44544a361e39510a10e0bf83ca46,287315: re-entrancy
6706a106771e2a04d75735977e98795e407aa2e1,few more helper methods
f807554202405be553bb4b926f9bda2e4327a8c3,possible model removal code for unwoven types
cf35dab1c10ff09caa6beeb02142b74f16ae6f6d,state persistence
6a30760b95e164afefab1e24e9155e0079c1d619,persistence
0d44dd26589e3a792f8df95d197e5c8c45c311eb,persistence
51daa554290848383d095182515c8605c9566b79,persistence
b399c7f67c68cd53cf837361fa14c08f7a16bb0e,persistence
64c613985aa8c128c1423af97d27d08fb6e074f7,stateless jdtlikehandleprovider so handles can optionally be cached now.  Currently still cached
3d3d03b2898a16658e281583d3912b24db1c0ac1,288505: fix
853ecde20640984a19aae66c1955509428c178fc,close streams
9c0f19aded36e6ac1778aade1624fce7ead02e9c,close streams
734c828178d3da42a537c9293e5869cb7f5c305a,close streams
b29f8393e988bbfb4db28c5051bf036ef6551aa2,288198: 1.7 support
b58e76c68d96811cbe9b1d4f8c0e245a81d66e5a,288635: cce munger
a7ce136ad755909c4ef63a3fb5c6a2fec36682a8,288635: cce munger
0e2043d0f6ed939e360c78767d9f6e330cc77340,281654: concurrency problem
0fb61a07291261d7ae0760a38b32d5e46be63aa8,281654: concurrency problem
f1b0ee3c34a90a0db0feb812139684b5fd132a1a,286375: test and fix: recursive decl npe
9eb61273fe9f7e1ebe4e4ef3bde4ed5bfd42886d,286375: test and fix: recursive decl npe
b9a0ccee12eb56a370c58010bbd89a27b8570724,286375: test and fix: recursive decl npe
444960d934b528b00f3d7959aa43b4477cf1f1ae,286341: incremental anno style
e0c9b09bb8d0618b31e8803ab99ca8b4c60068d5,286341: incremental anno style
d96a234e92c619a68bf52e83aeb822f7bcb36b46,existence of .isJava5 in module root will activate java5 compilation of this module
9bdd493924dfa8b124afc62cf8f4057a9ee893f1,existence of .isJava5 in module root will activate java5 compilation of this module
4852b21903efb89fc27ebcb2c895a9508aa7368b,first bit of java 5 in the weaver module - will the build machine cope?
1ef6b1decae19efe6de321eec4d533538bce940b,288712: anno style verifyerror
577bbf481a306b859584e7c9f7a9905d77da4ab6,288712: anno style verifyerror
b7c2c83e419e9db51130e169acade68a7d0d0599,288049: wrong message for wildcarded dec anno: fix
21acc37186a54ed6293634acf43072298377b679,288049: wrong message for wildcarded dec anno: fix
20028ccf87106d2dae01ace891aa1ebad962e3c0,Java5 upgrades
943833fe1ac494becf1b5fb6b3b5cda3eef6ec4d,288635: fix
ae35da9869ce6ab8a4cfa72cde8bc84e0fd7fc63,288635: fix
6f3a860305c35f74b36419ae74629657cb3304e7,Java5 upgrades
1931657e1b26dbef861bb8e330ef9ae6e282f241,Java5 upgrades
0a395eb90a627aa707ea289ec42a5dc242d9716d,Java5 upgrades
f3c1fd6938cb0857e491d6bf8812204dae60c3b1,refactoring
40de2e7d33e9b0ff18760e996cfe8efaf0614e54,refactoring
e7a87072d7ef60f89569ce88dfa318373463fc63,refactoring
60eb673578c615a11b697794d1bad804e0f7b2b0,refactoring
30de93d373842e59138ef2e9604651f67babe8b3,refactoring
32e70c4020f202916bfb25e9c89987b1453ae6c3,refactoring
6b3a690e6657bbf92a73301309983d37e5eceee5,refactoring
f7fd9e7bf37d14fad7cacc6b24221d811e5077fa,refactoring
0e2c4bfe4300ff87cc800624f54d0eae13c67292,refactoring
eb469760c544f92e63107d43a7012f86d8760fd4,refactoring
357807562fa730f9ae744fff1160c60c333a62d5,refactoring
2d4febf6ab6d8e5e2c0f129ac824c58e948da91e,refactoring
b8439ed10c8a3c3d7f07414ce86139bfd98b8526,remove @Override for now
5a88b84f70a036437a9038233843bb8075149118,refactoring
4b0dc89799738d83cc554b861fbc6c5aa768631c,refactoring
902403ee9e8b1eb7a617bd6b0b2efa6e5b14b9e8,refactoring
cb1cfd4ed35ed8cfa206ff984aecb0dad3092973,refactoring
4da4379d79ef1dc70a4b5ba7595a07ce187b8f33,refactoring
600b4494987ac17c5bfa6e69172f9ec8be3801fe,refactoring
a97806d9f1fda874a04916a63b2ea8969e3da096,refactoring
f39b866d064594148ae9cc558bf3bcff4e9804b4,refactoring
f9350e12bdefbc0bfc483fb8943480e497d45f35,refactoring
396c3fcb58fccfd4debfb87445582423a4a87536,refactoring
1a5597f207c4cde6dd8cbc36d2496673ab08d6f0,refactoring
79f8a49bde39e710321dde53b8c6237b234cf637,override removed
ebd2c14134d346b39e2c1d581627132f8b4337c6,more aop.xml compile time config stuff
df77d3ac901b2bc91d1580732d0b967da8947ecf,more aop.xml compile time config stuff
f5aab0994645ac03545fbab7b74fcb6e42968bc5,more aop.xml compile time config stuff
250b7a1b0648d25ea6a9d29232ece43293589928,refactoring
83c92096aa01076f4d7ed3022e06b7f14e3b62d5,refactoring
f78041b18d297d23b5a7f1ada3d8226ad1c45fa3,try N drive before C to keep the damn temp files orf my SSD
23357ade788be1f2231b17a934e97a7b340ae697,refactoring
7c89067090cc77b93ed9936919e9439b0aa336e2,refactoring
a8aa0b1673518bea0f9ba63a43f511f35f5f145b,refactoring
9da6451bae5bd28aec3d34db4973d779d8f465fa,refactoring
a9a176919c0ca41e9480c0c4676770a006bd7082,124460 and refactoring
8b52892aea51f85301a3f2a3c20800faab568c05,refactoring
6164d9b825a2d9a4e40245c6acccf2a9395a62dd,124460 and refactoring
ba4150af852e3d604f31619aaa01b4836358ca7a,124460 and refactoring
35d3446a5996867adf9981ff7ab904ead1b05c53,unused code
3b522e9db64135ed56ef731142a99136bcded722,unused code
67ffda8e2f53058f6e41336f5204541e912ca9e2,289816
4d200d1ffd09f64825f908979a3d7af0f3cb63a9,289818
6ace30a3a1447c89f988ca69d4029ea5e796423a,290087: testcode
359d6c12d847d879ba69405adce2692d7be3efbc,290087: fix
88978624d0b3b68bbd964cd02edb1c4e90ba4e71,290087: fix
237604e31504b5da74448fc9e3c389bd998640aa,290227: fix and test
646872fa7325c9720c02a5360ad07c0a991ce886,290227: fix and test
ede8a85199614e13e431721d4d90b602f0e116cb,290227: fix and test
81638e94f858bae3ff5ea6e6aceb3df90d58d07e,286473: tests
f28a624ab4e1d01071fcca9cdaea56274f72fd76,290030
d673ac01a8eb71c91c19af7b53df94cf755b61fa,formatted
53368cb03d9b205e75b5fdce8cdbf5c01a768990,formatted
a6720488b256f80cd591a4cac837e1b8222424bf,formatted
8b35602d22f302acce96ca258f4e7933be8d3dde,formatted
5a37433e22d85e84312e5e804ed15f74bf50d22a,formatted
5e40d5e325962b203b0ba45542c1b5e13feedb3d,formatted
136fe84334f06836779b4e890d6ac225d0afc6b0,formatted
6913762cc4a151dce9cd73e09b376793851131e6,optimization
b4ba64a08979c5a0c758958361d7cc4043b94d87,optimization
65ed8e4b725489189b10d37d0cd659f0959db1fe,optimization
d4f1a774e300db6b1e353ad4743003975e916bf3,formatted
c1c4d97b927730adfb9466386d77f72d47f3f641,fixed and new constants
f179a87e3a85957b759dc9d00c9e8f9b7265643a,formatted
48df556e87dee8b9485e84da7f9453bd182d6c57,generics
97e5985c7f52650b9628c98a65b8f516ae8e46e7,use constant
926753a7efcdea6b2e8b805e6649ab853a113129,optimization
8c8dbe76aa8be35f0bc14edb6c2aede8deceb526,optimization
da285d792f152bceabfe52fc1cafc1b948c50da4,1.6.6
11edfc23a87c8bf5505f295dfe08cb54b674cd21,1.6.6
364d473e5010e24f75fab5163dc720077d476d82,formatted
5f35fa1d843e08067852732b48a0ff5093aa4226,formatted
4c83b12c753cffe0dc0165e5e3a0210e8f9f3f26,formatted
92c8cc8aafed59909f013b3f33297c999cd0b4a9,refactoring
06b5401c5b05053f469e7b0312a16708b677182a,formatted
9b9952cc696d268e9458b1e998b2b167da973f90,optimization
aeba27a46dfdbe9ec3a4ea3d2f92399d45cc24b0,optimization
600806409c911a9afc2074fa522f1b7dd56e9f0f,1.6.7
d12d461249f35b2ecc5bbd233af38335bdd8ceb4,faster hashCode
8808125e1f90ef9c7ca813858d291ecb973d651d,291523: annotation pattern parsing changes for (@a.b.c.Foo *)
9e7994865033f0e80b948e94f1ad761c54c5db2b,291523: annotation pattern parsing changes for (@a.b.c.Foo *)
db4a8956ad4a22915d9793001ca3a1d559fef0b0,formatted
a36fdb2e631cedbc42ef1ad00a712900dc1d38c1,288064: innerclass attribute usage
b5485dec19c23466b4c84a98763a40e321b7ffc1,288064: innerclass attribute usage
9def160bb51220f4079cbe69d35f131f0fe7ff6b,292069: make this/target cheaper than call
1a790bef0683ad844f66b668c93b41154fc5a3fb,292069: make this/target cheaper than call
d0f582977df09bde57a0513b5d51a766d653d71c,292069: make this/target cheaper than call
35a964971d99283b22510f73b5e7e826b57c619a,279298: cobertura and AspectJ
bccc3395c43335b671d1f060f370e644053fe268,293203: annotations with multiple ellipses'
94e49ef3791e21ca5e73e7bd924367fcda07aedb,293203: annotations with multiple ellipses'
c4f415f6efa97daa41dbfebd695664f203132429,293203: annotations with multiple ellipses'
a23c7e40904d0c5cd572d6f49a461ae474a0d303,293351
c846832386d49cc8e3bbdf5ef2a074ceeb4e42cb,improved diagnostics when problems processing attributes
50b3ff85321192d07ec7ecf85b94244ec521299b,runMinimalMemory option respected for LTWWorld (defaults to true in that case though).  Also overWeaving defined as an option
f0fbc8d4f62134e7089036add660975646a67835,runMinimalMemory option respected for LTWWorld (defaults to true in that case though).  Also overWeaving defined as an option
cecf24a8eb69737a3d18fe0d70bbfbeda581ce14,formatted
07c21fe958b67bf48d3950924d156ab531e4ec8d,formatted
8b1290a643e20ad71c529a12482f53155a9a5d0a,formatted
dbb946ecb6be40a4364e96d132281aec831c581a,formatted
412e5e12b38481763240bcba767e2b8155272680,formatted
60266e839e67ecb84fd477b0e8716eaa51d18478,optimize: extra ctor for already resolved annotation
e9c7eb710b52a0df1f04e906abb3fa57d3e33a60,formatted
0a15717701dc920425e19b283544a280f913d949,formatted
931ab83d5d794c25260048d944c33b18dda44c73,optimization: better return type
44f08af6a0915a0102cdf1cc228faef5c2607553,formatted
715ea62d111eec1132c764a868aaf968259450c8,formatted
005488858c1ab318ac45ddb9e01fd2b99a218b1c,formatted
f5de06c2d598742000760c18cb18cc1dba1100a5,formatted
60fc6e0b7af903db2dc6f3ac5dd2f21f8b936bf7,formatted
522b4e9588eae38dbb47333e272291da86ef93ee,formatted
71550338a5a9ac65799db7dc2ce84fe03e789af1,formatted
93a7164cec47ef5b8b38f639b50248c80309bf1c,formatted
22f24b10ff406b5696eef865ddcfafb4488247b9,formatted
2afa47701d23cbc0cd0d3c10d75634b71ada999b,spelling
fed2b628ac560bf37bf0b66ae29b6f45fa67cc8b,formatted
de9f63bd6dbf216925d57d31c3b79421a7ab795d,formatted
da3af2cc901d4d14372b50e3a16b3ebf229cc141,formatted
9094be08c33dc986994145a78d091cdb81c90de8,formatted
c27d7376e3911bf2a26638822edf8fa747817b8b,formatted
03396b004bafec178da33ee2b185fc73ac6727be,formatted
9c4df09945911f1ccec3d5413d11d522d3f47fe5,formatted
abd03ff1cffea69c1b7ac196e5f10ff84d3ae0bd,overweaving tests
ae822d0db3a4a528074b6b9df8a4eb1818475654,set concrete aspect correctly
b2909b023753daa470734e2536cf65cdb452a44a,formatted
cef6f5a98a31b76d20f8981fd4eba07b47432513,formatted
a9fcaad4ca669c689e541b811064c52e55281474,added getConcreteAspect()
9820f05266e3e6a028f6d64986d0217cdf725110,added getConcreteAspect()
e31f8d1ff24db603286358302047f5866ecd1fa3,pass concreteAspect when building advice object
1494c973d8748df1b0146b47c30e91eb98ad6cdd,pass concreteAspect when building advice object
ab942486f45bf4ba6c3b9266b0011152992efb4b,pass concreteAspect when building advice object
9671430b6123ced267c69fb8d47b2140b2d514a2,pass concreteAspect when building advice object
c3c673bbb4b3b59d922b2371e450575863861d77,pass concreteAspect when building advice object
34f74c44baedf9e6de3511a50729a1209286e285,pass concreteAspect when building advice object
fb90e0701976ec104659a4903e218861196d7ce9,generics
657bba8c14a09313dddecf3a37f38cb33aec72a6,overweaving: testcode
f4a8d6af08ec26a2b5e07f6da663762350137ae9,execution fastmatch tests
300f1c726b9ca1dcb999b4a67c31eb5a87f928d2,testcase
061bb553ba7dd56ac37332ac5ef4487ea9f0bd3d,hierarchy walking testdata
617c3a597bd6d463f79e80ccf796ee420d78dc6b,generics
44306d731410e2bc5a3bbb6f5552982974e612d6,formatted
b75f2701f263e7318c6227977f5c7997e5a79d38,formatted
3f6882c0d42293848506722b2fe9d2f4d046f9e9,knows if exact declaring type pattern
1d69efda32f5a9d353ad07a6afe253be82e2cac7,bitflags for optimized checks
9197bc6932c4eacd80391d56660eb32ba01aed42,generics
8f0c04c6339ef7972ad206d931bc13c82544d26b,formatted
e9de04551e51fd3958e7ad79fc9347e8329c44e8,expose some internals
b11651a7c9b2d06e94eed5694284964939c5a463,formatted
39fd6de06487242aad870f7346ef3e948f26ab9c,better checking of type
9c63fe783bfca1b9c827336304619ee64336c33c,formatted
02f0fe5cdb7f5cd6817217474b65da05fe103757,293510: testcode
fff77228eb2ae9b22aef5bdf9254ed188d963546,formatted
0f70ebcee38c89ef00254c18e897a16554c7cd97,fast return for suppression
1a129cf4fb821c09368fbcd98ffcb4e6f8bf3f37,overweaving: initialize joinpoint counter based on what is already in the type
11d21a49c805fab5624f5aa5e86714db40f10d52,293620: c4
f865a36a7b9a79d0a56b2f7645df73d3949dc258,generics
4cb2ebca361583b2f967b1874586cb8f7dfda315,formatted
5a228eb0ef0199d24b0a5a7588ab14ff9feb34ce,formatted
90525666070cf73478c6dd5dc09d2278dee5ba8f,293620: c5
f3c04a89cebc5fa96986e245cdace39a3d2fd50e,overweaving
c3eb3164e25769745debf6d3381b34b2e2c02e70,useless jdoc
c0fe84f31d4840b90fc1c015c3787f0d675afebf,293620: new Arrays iterator
6b1cad1c221791c4a6070d4a581d526eb918eb77,293620: fast exit before annotation matching if type match doesnt pass
92e60fa66ff89b14e9231778ba1170d53a79772e,293620:
33a2182c54c63d67dab2bd28215fd05de9958d15,293620:
d476faa676acc89773fc2755449eead1db4883a0,293620:
e4f92ac7658ea33bfb9da884c78796b84740a8b1,formatted
f2b05dfae18ecb754c4cb963bfef2e54ef5bafe9,generics
a6ef9e4515d46951164880ab69e1cc5fde1f271d,generics
296d90115b2723fae99dfb0364735b24d52f73fb,generics
a882810c2c1c2aebea547c5013034ccb6abe9ce7,generics
94abbb3464643e8aa52484ae69d9013290f54cee,293620: c6:
d1d9f290938ad852b274ac2b2699fad29bb84426,timing
6f1dfd7761485989786efc4d342c6082bc7e5a46,remove @Override and timing support
42856b3091a6e6a2d526788e5ddb966bc6c39f9f,remove @Override
e9601ff86771617e37ca63d0dfe48bacd5df0a87,timing support
82324352ad1b358dbcff98caf95278be33d406ce,timing support
5d0833b4875d3a47f3f0fc3461dfe330d13bb795,timer support for aop.xml
19dc13aad9a779dedbe59a1515d29c20d4e8675c,world aware
d459a56184de28807df96a119617209ca9787ad8,formatted - and pass world to FastMatchInfo
0fc018addcad2cd3eff2a5f79ec504811a1e3f4c,formatted - and pass world to FastMatchInfo
7b82ae56fca2ef9fefe67a4bf1507f23b38689d0,ensure initialized post serialization
9b9fcdca0c812524e3970bf698f4de47af0c29c7,timing
25220a4fceddb84895cdee5f8705634edbc93391,pass world
c21508c6bdabd9314985a69701fbc1355050c623,message on wrong conditional value
abb818d0290a8127d770ec05e2a616e2e97ab887,generics
b7945ff4f34a70266c375ec85695e6e71ed875ae,generics
a04e53377cbc6454dd1c79ff2a384da3b3fe97d0,extra methods for fast recognition of certain patterns
ef8f7bc3649cdc055acb19be748257fb51efb3fc,generics
b1554f096ea281784f1d767d8798cc3c7cb00b7a,guard raising cantFindType
cffe952902c5b317d246367aefdddee4021ce280,minor optimizations
7ab4ecf0d42728083c60d0dd86fb04e0fcd6bc7e,more optimizations
d664b267a61c4bad8664d0961e1d55f26404b7d0,more optimizations
18841492728279293ed715acf62f9197791899cf,more helpers
65a862c8cad5b62b2b37a588f1c4db5e14340b84,more helpers
ac7e0ebdc677f7b4494ee1357eccc43880f1b72c,reorg to make patching easier
c99ae28897a3645a782240773fb6f03b74194af5,reorg to make patching easier
8b5f2f89fec8ad3c810f6dd1c282ef5dedea4e66,reorg to make patching easier
8c06443c1d14cee1b6b4596f6cf38a5fd2033fc6,slowly merging in optimizations
d80b8aa5a339d331c39cc84635187555ce2dcd86,slowly merging in optimizations
6ecb02bddcd254d8d927bf44aae6614f5bd89049,slowly merging in optimizations
6c59333620d99c4eed53c17f70d9ba66d157bf64,slowly merging in optimizations
6fcad31ac74d159a005fba2578fa836215cda3ea,slowly merging in optimizations
aefc92e3d7082d181e732a2fdf422ae32e8ee9ce,slowly merging in optimizations
857abbef13c294be25dc42a0910a4f4b9fa860b7,testcode
22ab5b609bf9ac32b848759cf16e26019b519ef5,testcode
45d1a33a205f44b924ef3e373cd9ce63c05fe8ec,slowly merging in optimizations
d266791089cf1315e50f35302afae9899e7849cc,slowly merging in optimizations
2a9e8c4305302990aa001e911b438bf60680a073,another test
951092d914d8947f1d94f519a6ffdf80401ae9dd,remove debug
bf851c2e6899f40554341b4e9d3b7a3ddf966b09,fastmatch for execution!
c8ead36f696010fb2783ad889e7df960a83dbd43,fastmatch for execution!
3d5f09aa1cbf8843894f857a94e8c97c00fe3cab,done!
d3ec7d11177a86e63d2bb49a7cb182fbd946e158,correction to isStar() implementation
a674f634521fcb4575305e41527b2a1b4927d033,timers
41d9980985b7081e032f5e88eb704dd3f43e874f,timers and improved signature pattern matching
9fd80a0a78acda7359967bff7c4fa9b932d246d5,timers and improved signature pattern matching
e9447297fe8eda1735065375871896289ec8f667,timers and improved signature pattern matching
800f63c966f76d3d246703e69ab6d89b97051d32,remove Override
58400a038a66c625eb316424194e47f51ae5f69a,remove Override
4379184bbefdf0213a527b2696ec50e82c6c6183,remove Override
eeac904923d41f1bdc931fcccff2b4c091a32037,make tests a java5 project
134cb2a16ac8330d55fe0183edf9c25c7ed33a5f,default values!
d8efaa7577f9e14cddcc9dcc9afccb358f3d6edc,correct expected output
62dcbf5ed36a96fec89aa0b7a02c2634d3713120,correct expected output
9e5f50aa9bcffc5b698cddb1f708b7efd8ae862e,optimized way to carry a set of types around that you may or may not want to resolve
7527d8582cbe983c2cdbd5b693bc37ff84ebdc09,a matching variant that can use a ResolvableTypeList
92aea641ee24a3ca524d4e2ecd3e84c7c8238e6a,need a build through!
37e4850b5ccc52900a1b9a76933466753619b6ea,final signature optimizations
0f5ecb7c4fbf72f9ef19f7fa7aa2d14dc82cb6fc,prevent re-entrancy on a per thread basis
c7e614809aa029f9010cda1465a1ac1835273691,"test out for a minute, to get a build through"
cc6433b3a97461a253db71b4cde23c0b07b765da,formatted
e8f1ad92fc8cdc66e33e5917174aa5512658dba6,isCacheable method
e52d5802484bb3e4cbde5ea7612ad958a6b2a2a6,isCacheable true
329b0e275f672bf6277d8957bd7aa57a95205cf3,further optimization possible? task tag added
aab239a1c3e676882cbd9ce5401aecf6f4fdb103,debug for resolved pointcut override detection
c0ed526d8784de6312cb9434b86390a3c1b593bf,tag for possible optimization
6df6eb967f46d45d6cefd54a7b963a61bc3d56d7,cope with a bug that will be reported elsewhere
21600b575771500be297d7c75ddb9c8b5bc953d4,taggable when parents correct
65907c10cdfe1431f16e67991385c53a26a426b8,formatting
f2f918dcfd63e5a344678c589d860506233f31b4,speed test
1524023405b6b1e596986fa44a6db48e5d401acc,cache resolved ontype
bbe9ce4a1929279ddff6cda6394863a311beb231,weakref cache of resolved interfaces and supertype
db70f92aa10ee2fbf15f5ec1e2ed3d68cc2b6baf,faster parametercount checking
bb94aed3b555891f46dcad72b760719abf8b2cef,timer test ON
81fbcb2ec69061fb085c55e7e2fb8c99f0ee1ea8,expected output change
fd52f6369ee15bb8ee410a3a3720b957cbfe22a3,intelligent use of  match info determined earlier
abba8bcc903e8051635bde91e7ad29b531a6773c,superinterface cache
ca92e92682ce22acedae2069231fff8b9ce4610b,faster parents weaving - seems to work...
872312942b1d94fc759e81f7b8a882c2691fda7e,minor
d36e29c2b5af71cad644499d40f71e4cc574dfcc,make timers non-periodic under AJDT
58501cf16a2f6e35e8223deface3f8acdde66c00,make timers non-periodic under AJDT
46a9dcafd151bb2265b8868845b07d8d12cf1c91,make timers non-periodic under AJDT
1c49dac5798553d0fecf547a4b45917d5a8d6202,bug marker
39d47ebd9e084c354e729aebb3cd08a7819306d1,weak refs to cached interface set
ea9f35ae874ab50e91cafec3f4b9a7ff6219e1d6,work in progress to improve MemberImpl
06edacb5c384cccdcac9ba8b5caec31622fe636e,type demotion ON by default. runMinimalMemory OFF by default
4ebeaac176bb61fec567f7f6b340a1375e499222,type demotion ON by default. runMinimalMemory OFF by default
7e2347178129398ba119aba28f8d25545d44ca94,speed test
af24cdcab9e40ce4048ec45e0d9213bcdd90594d,overweaving tests - commented out
ec805fb6009302ba6dd77c1e11f081f4238ae63a,demotion system only active for LTW by default
c026262551fd5488ad75379e1e2ccf515eca88ef,demotion system only active for LTW by default
ac9991b033d7b6e27e44c6d327bb67ae0b5c3cf4,move isAbstractOrNative into the only place they are used
f66db363f65a018bcb6ee81bb37011afbcbdda0c,move away from using helper methods on Member
ca32992089bb82e5295fbd5c210c5503025acd25,move away from using helper methods on Member
a4a85bddb024d76c727bc871f4309937ad27609d,removing isNative
19d9bb7bba074c76f9e00f4b1611ec049f85a261,removing isNative
21ce8f4a0e6784b4442fa5150d71fbf849008b97,move away from using helper methods on Member
47789e0d0bee4b13c83ed40065771f98968de668,move away from using helper methods on Member
b481476cdbb6bc2b884ff474ed61bdbbd57e52ff,move away from using helper methods on Member
2d22a529bb98aa01e3f8d14f80fb0c40b5bd2e92,move away from using helper methods on Member
b424f7307124a4b66841697d1cd937e5e330b843,move away from using helper methods on Member
89cd3fc127e707803972ced6a049e6af4e276ecf,move away from using helper methods on Member
8812484c907e46b5691dffd8279f2e5a530f09c0,move away from using helper methods on Member
b3d88fcd5403518d0a83ea77369d958a2a2e0244,move away from using helper methods on Member
f589059e2975760e679d6e4fb893c4724c4046fb,move away from using helper methods on Member
e555801a094e8f0db6e1a62eb7c920e9c309870e,avoid using helpers on Member hierarchy
eaa88f50674240d63390bf1525abfc1c305175b1,avoid using helpers on Member hierarchy
82fd550e46bbe27c379377e6946c5303fd063c94,avoid using helpers on Member hierarchy
fbdf37a831b632ff7d2ebc592613f5dfcf972c77,avoid using helpers on Member hierarchy
7bcbb38f0147d3796cbc42a970755c1c2e965f28,294647: debug
7e06a55f0bc1c410a1197f8c0be7c128de05b16c,trigger build
006061179209f7fd8e95d76d0e3169ac893d89c8,295491: NPE fix
dc53b77e2494a2960423314a0ea7425a6c0eff7d,293457: test and fix
f5cd023f4d97a9be2507f2e033cb76b0aa41d50b,new intertype syntax: testcode
ae9dd166c860b4e05e1eedaf00efbfeb6544b2d7,refactoring
fa125f6bc71d9d21999d9e98548c5085d53d6709,avoid using helpers on Member hierarchy
8c471f187d47a80b8c0c0aeb21ee64872e07cb68,avoid using helpers on Member hierarchy
c2bb5945bd83700f41c903ce273fb3a8ea6c5198,avoid using helpers on Member hierarchy
fa1fe0b77adb59fec1129ef164621ed88ea9638b,avoid using helpers on Member hierarchy
b503147e769fb7692aa54eb57f7f7b363329b482,294647: guard and possible fix
ef9d5b81965983759649e3d0d8cc4e4f26e1f5af,294647: guard and possible fix
534ef931bf656e86114044594504b21667bc42e7,avoid using helpers on Member hierarchy
4b627b68d078ca1ac24bdf9bb6fd0913b8068f2b,avoid using helpers on Member hierarchy
9f342591a0c0f75efd5944cdb4e09dcc132d5e0f,avoid using helpers on Member hierarchy
19355dd4021dae5388a4a6178f08d57595b59b1d,120375: reweaving enabled...
a47284d3fe20acd33f784dc0daad2236270fa427,simplifying ResolvedMember interface
4289ce7c6751b61554fb2c45a893f93f26676ed3,simplifying ResolvedMember interface
a912b03068ed56602171bfd3d632c996cd018e12,open up for initialization
04ad1337131d249cc42840afea4ed32beeb61512,removing debug and unused code
80f517ebf71430b6eed15c34a5103d2bf504f5a9,296040: method dispatch problem with google collections
ca9c264a8ececec929040a9bf6e4100fccfa791b,296040: method dispatch problem with google collections
c0e4ac70fe7394dd2c99932b0bf2b24210567ba6,296054: testcase: npe on model building for bad code
898d05cf68039b3a0d4449c0ed2cd6c9f74798ce,removed @Override
11ff72524df72345f24cc341119cf278808cdc32,296484:296501: annotationbinding
6abc8f8488c57bf668ff826b678926a3f8c100d7,296484:296501: annotationbinding
037bb06b37960d5facbd0e701d48af5b5a22133c,296484:296501: annotationbinding
4cfcd37ea6daa646b33c955abd558bdfbe378f1a,296533: generics info in generated accessor names
41c8b34427a22eed17fd72df52fd646df78fe472,296533: generics info in generated accessor names
6995b2097c0094b7aaf2c4634e0d01916fd8c484,try to ensure demotion happens
f4cde663fec744142f7160451a6363127743a2db,trigger build
a416d96a68c2ef1ad7ac4936266d549bf1e9ba40,demotion for types introduced by include/exclude checking
ca38e2297442d0de07b1b8d3845d3190b1f3be56,unnecessary code
95ae07b5aa70a702bac463a7775ec36487936bb9,testadata for fast inclusion/exclusion when LTW
1d471f7cfaf166d4321c56b52fe47859e9974441,296734: various optimizations for LTW and aop.xml include/exclude processing
3cd7cacfcb652df8886842ad51ff3dda7bce012f,296734: various optimizations for LTW and aop.xml include/exclude processing
0e602434aeeef6242663b5bfdd254843c9fefbf0,296734: various optimizations for LTW and aop.xml include/exclude processing
25530f360c4991b81f82befb3f41d85ce40543fb,296734: various optimizations for LTW and aop.xml include/exclude processing
c3d21581f311ff47fa39b62c4d4006a35db8d7b2,static aspect
b3f0ddfcb6743dd0b78309fcc9fcea4036aad51d,231945: guard on null and tell them what to do about it
00ff26acf5380709adaa2ee146c37021d09341b2,231945: guard on null and tell them what to do about it
eae7e29234516e4b2e9d3e6cadad66afb0347a4e,typemap accessible
04eb2029de00f0b8d31df2d69a3526933572eb76,typemap accessible
d5d5d890d3a7a79af0035b4cd335c6dd9ea839d4,WEAKREFS DEFAULT
2f890d2be9d868875755c0487b494ca7483463a2,tests out to get a build through
8310b6ae94cd26c367e4750cd7f72d5542d8a80e,"minor optimizations, but in code that is run 1000000s of times"
28fb861ff98a40315e38d47d6b36b9a412201349,297013
40ca8e83c517f1b7277c4f360bbeb50d66cc9da3,167 readme
60383f58379fcb1449be5e30d6bf1b7b9af3dcf0,reset method
600a724b358c399b077054d574037cbc09ed787e,167a
41960c59bf4744deeb6001ed308475b01b1baa70,testdata
a9688904c8041bd2bbb28817fbb82833522340c2,298786: non-optimal exclude pattern issue
933642c8339d1acefb564e22cea987d15dbecabc,167
4aee36e371e166a9cc653e6daaad877611325211,exclude/include tests
7339c5da5fb0cdbc403c4fca881fcbcf6b60b994,parser speed tests
dfb5de5a2b982d449b79772a5f228b5cda0c2253,spelling
81de18f910c1b785695082bf1690b82cd4d0ac10,towards 1.6.8
fe3e4e542930d7ea4b516823c4258ca7df782c6d,remove aspectjrt dependency
a1fe853372c385b27f8451683204def9d89ec165,apparently cracked the long standing issue of recursive exception in isAssignableFrom
4a94788d93d10cf761962f7281bc0fe7ee696af9,get a build through
4927499304b79621f6f0b9d8ec116f51545cd18a,tests back in
f31f43ba78eb1bcb45950ce224039f38678e3a2a,make the return to softrefs configurable
0ef1b6e99b7bc08536c29a72413ed41d04bb2af2,168
6082a97caf37b26c3cd4acb31a6f0671a4f87995,comment out unreliable test (perf test that can depend on machine load)
7199cc27214344dab99f1902c7f2a528264f12d4,refactoring
677a140584013888455e82df655ff3db06c2e507,tagged old style name creators
f7591e67250f1e6717bbebb23b5bb9c47fb05204,1.6.9
f91ffb032fae7c7d9f59f4aedf27f067ba60919e,299552: private ITD fields stay private in target (with unmangled name)
1caf98edc449a4cab7e3650a6d812802811d5567,299552: private ITD fields stay private in target (with unmangled name)
ce191a75add393b5e9af702f062bf77d1062560b,299552: private ITD fields stay private in target (with unmangled name): only build the attribute if it will contain anything
9fe3fe74251d625ae82dd58f4a05de63d12cc211,"299552: private ITD fields stay private in target (with unmangled name): itdVersion property on world, set via -Xset:itdVersion=1/2"
58b93a22f9899c7b79da905b5d32a94c886a3549,299552: private ITD fields stay private in target (with unmangled name): all of it
657e59a91c689a8bfd8f4c4bbfa1cf3226b32ca6,299552: private ITD fields stay private in target (with unmangled name): all of it
2cae45bf7161568d469ad75592b73c10ca5dfede,299552: private ITD fields stay private in target (with unmangled name): all of it
125fcda8e231b49cd81833423170b57f893e554e,299552: private ITD fields stay private in target (with unmangled name): all of it
bef237245fe7cf95c976cde23913ebcf99d080e8,299552: private ITD fields stay private in target (with unmangled name): all of it
6a965e108fe1748154463005bd98d703e40b8c25,299552: private ITD fields stay private in target (with unmangled name): all of it
3a602b98300a5e4d3af8be0bed19e768d4efeacc,299552: private ITD fields stay private in target (with unmangled name): all of it
cd123ff75a28937d49d19cdbdcb57ad9f4328b75,improved assert
c70383591c468ed1c289791f8b2bfaad12aca804,298704
df01d2d711ab2988acf89f0ed0366864974c063d,298704
9c07816d4839596800d3e2bcd709a6df2f0c5ba3,298704
046261e20078530352a063c6c1eef9f44bb98f23,292168
d36b87d2f0b22991ffc8d111367fdb7c97943477,"292584, 295491, 298388: testcode"
ed1dc14a99c0728b7cd7ed0e312c5312d9e39d40,292584: fix
56821892311d53bb86b9990062ee018439d5beff,298388: fix
c37f7b59681af275495aecd5a8f509d65b1f8fdd,slight FieldGen change to allow constant initialization - not great but it works
759abc6067dbe0da02b8a2582445544caa2fce79,slight FieldGen change to allow constant initialization - not great but it works
9e935c0777e5780c8e4ce89dfaf32f2a7f34faa7,extended definition and code gen to allow for deows
b21cd2fcde00255aef5de268c66350c6fb1d8441,extended definition and code gen to allow for deows
3b9285c9db992870541409b80f069acf82ad50ab,302460: debug
fbd357077111de1b77797bcf73c9b8d53afd4e32,302460: debug
2a2c78e1fe163c8c98fff16b6d82e1b7a86304f5,303758: fixes
b4a21bf7ab6c1d06ca849d2e906083f98e47f51c,303758: fixes
d97b948db1a8481548bc420cbe8c364f1b38c6a9,303758: fixes
2823c921c4b7ac0d321bfdb0a65e10686b7a0f1a,303758: fixes
a95c391d27d6df395014dfe093111122ebc23347,303758: fixes
fc12e83825776296afa6c2390ec07a53b70bfa3e,303758: fixes
fb8656fc5d36147829bff93bddb0699fad4daeab,303924: fix
3adcb6f3f2f7646b96e6cb608544dcf8e5a3a24b,303924: fix
a8af466d3bc15e65a6f213cdd2ca88d2305a6074,303924: fix
d4f375e4f6484bd70776d12edf5cf32a2398851f,303924: fix
d5a3aeb786e6e62886639782b85c6ccffd2913d6,declare type eow
0d45d8adeed2da4137a80e3022e2ee143f655cd0,declare type eow
81f46417ee1a681422598479eaf01bf544098f76,48080: inserts in messages
90de1cd02fa216dd6cfe47ab06bab30087836652,48080: inserts in messages
e49b375f3b0d5d65b8a86d14298d0056fc289804,48080: inserts in messages
85d90a601b1da2b59bd4920cddf8b8e001c39780,298504: test and fix: incremental build when invalid declare @type
21d98b094385d277919b71f685bc50c75784d58b,298504: test and fix: incremental build when invalid declare @type
e60f463f95845f92f62f02958f25505e4d401e5a,44365: is() support in type patterns
576db589a6aa911df6ce8a9cd608baacdfe631d7,44365: is() support in type patterns
9f44ac1d97dbaa8d571ad6d73746c82a3fe07aae,44365: cope with also wanting to advise a method called is
7579d32b26596d041cf58c29203a40fe74aa716f,44365: cope with also wanting to advise a method called is
b95d3f555fc067c62ba763d6d891061e9caa653b,292262: testcode
ad2c31d53ca35b0637a76789279fce24b937e63b,298665: testcode
fc81aadfbe493bef3c4bf6070ac097e1051db4e7,extracted inner type to top level type
b4a56268b237352803d52982653dc1fe12ca07a0,269082: regression test
88c762e2edb06cc7878bae1a86e1b7df3c34fe03,declare type warning
749078d83c99b0f19f4a3060460a17730faa97f9,305788: synchronization around map accesses
d55213952a178932984d98daec65b1d6034427ad,307120: field accesses in itds of private fields
9a6948be9bf548c28747d19a2547e04808ffbb64,307120: field accesses in itds of private fields
5f71d71ca445298efb9fafcdabd6a026c197453b,307147: testcode
c516df6b162ff9a9e248b4b702d946f6808ee8b3,307147: testcode
4b43dc63d14ad8b2bc82129bc27bdc3abfdfd7b4,308093: tidyup before attempting to reapply
05c1ca35b9353c509610bf5b5abee16b49430222,307120: field accesses in itds of private fields
649f3b2a8598d9872791be6eab6c0099dd32e78f,change to 7 from 1609
852e1e1e925fcc1bed8a1fa582954f0f49fc2c47,better message
c1e348cf6d4ab9b7072de00bd67b622ba44fb380,refactored generic type handling
44e5de95094e70098bc64872efdd0a3237f90740,refactored generic type handling
ca7ff6d5d499067c7abe5d6536598e70d793d37b,refactored generic type handling
83a479f572838e5055745d87573d1c2f412d210f,refactored generic type handling
62d0b33b8d0c681d1465330de3c4aaeba148f0de,refactored generic type handling
8a5ede2498244d3938d2d2508ebf2bb3a4179abd,307120: field accesses in itds of private fields
70eb59751815d16feddae8207b68d112f07623e8,292264: declare error/warning with type patterns
7fab7a382c435b3017fad8e3f0a9cf423a689720,292264: declare error/warning with type patterns
99c77b69d5e754b1054aa3b76b5622a3920ff1f1,292264: declare error/warning with type patterns
1721259b71151976df2026186cb78c731709dab1,for maven upload
9241e2ec7ae17268ce607df83855e067298820b5,291206: declare error/warning with type patterns
83f581de834d25ede699d829ffa9fed531ef25de,can publish to maven springframework.org
d490604ec4490e0335722373319f31fdbe6662d5,"remove check  - is type variable bound is a type variable and that then has an interface bound, that can trigger this check to fail"
28bce901a7aade25cc749be2884c5f89a9373d48,*** empty log message ***
9de8934023a9ef9308c31773de042e9fe3b627ab,1.6.9 readme (m1)
6014378077d97a3c235160dc210ab7e1e1a8f466,avoid npe
94d0a4e9eabd5b1d807ae95418cda47a9d8f4371,308386
40604fc14bc345ce828f1dcb3d8b285540312299,307120
d67fa4a88535afb0e9cf44b816147e34fd8d461c,307120
49da1e2edb3fa396405620a9930f33b14d7045a1,308773
71e9eb0193883c01669eaa9c874330381899b54b,308773
b21eb05a252a83b5a920430d733bed1b4dc97d52,309402
e15ff536953b9936d700050805498d9ff0cbaceb,309440 testcode
f2c6356a17f3d9e18a0e2403f33e9cbff74740b2,309336: testcode
d21f81cbe558d07bdfcb29e7c90d025b5140b2b7,309336: faster isAssignableFrom
a4096978856a39dce1a1298d815509ddaad1b105,309336: faster isAssignableFrom
a8f7c205c20ec089c13d8ee276731376af8aa2fe,309336: faster isAssignableFrom
a4e9e52f6094b282bcfe81ec0f3f59380f7c5ea9,309440: backported jdt fix
b1dc0e64a896f37b62cf2522d56ecd78984a629d,309440: backported jdt fix
cf620ee7e46161bf2f1b95ff7e7e0f455c67372d,get build to work?
73140583f9917882d1cbd8857f97e7a66a40d8c3,kick build
d97c25a05bf64f8c0c60e3efb6a7a1ce8a140531,no override
e09e0b5f728c71dd2a06803f04eb566b53390004,309743
f97adb2888cf3fb5583af0013fa0e583ed191944,309743
ef9124cf8c379663c9cd477384983f03df7e7263,310043: override final rogue message
0ca15bb18dde892f599a1b2c8ae06cbcda847c7f,310043: override final rogue message
cee6b8b8cb6c7f4e6501d1cb054d6586f7ff128b,307120: more damn fixes
279239d196c0fc29152832956d54e38e79ead40a,307120: more damn fixes
fa002ad43894b51d91ca84b723c0cd05c8bba4d3,remove rogue import
f9a5f971f17179173889a0dc0be533a7d2180234,improved annotation handling on ResolvedMemberImpl
4d4b30fc8865354bb1224167fa83108208ad2aae,improved annotation handling on ResolvedMemberImpl
a502da8b5a1b2fefa0d57ffbcc950ebf88ae497d,310704
5f81da8c4b466c2c183831999077f5f8518fbf94,remove override annos
038008d277b0e193dcff8b10ab9f6497940cc3ae,298665: fix!
7ee351ccc468bc6890e6c6358d0e094246809d06,298665: fix!
616df116630470ff93b2a6c5cfdae7cc6386f38a,307009: test and fix: declare soft and call joinpoint (matching on annotations)
66625fd29e1c4e075415dde4740adeb44b811c40,307009: test and fix: declare soft and call joinpoint (matching on annotations)
728ecb8806b154c20f7b1248ae994a93a514f7a2,310144
999f15a41b72aa10f05dd8762f70a2f4de00f30d,122460
96a6307844c5d51a0ee2d135ddcc7a289cab05cc,122460
b8d22ad7b1b0304154ba631e9e5c71097dd55717,122460
f36300f8ce14d6d971144a62a784d11c9540379d,122460
84226fc188d2e5deb532d0d49841ffbd019670b1,311762
09917832851764deb4de33cc8ed97d30d50996cf,311762
3be69a2d115996e70903880e50c5bb897f53b887,null guard: 311910
825fe64f7a96de84e93519d8ecbde9452209bd28,can choose to print the test output
2cd5a64b612a1059759bfad8942c6f48a44bc476,cope with broken system properties
1008b33051021dc8eb050d77a9c6f109cef4b465,removed test for now
16e78c12d3121b5abf06d6a2be62f447ee06bccc,more overweaving tests and fixes
e4e47c617dcb9e4aed78ed25b586b7806222f3c2,more overweaving tests and fixes
d32c38fbcfb44c2c63fb7648a00723356a97360e,more overweaving tests and fixes: cflow
461888cce1cfc9b2bc4c09792485e9e175be88be,more overweaving tests and fixes: cflow
7208920b6796a083a83231851f77fddf74f3b8ad,more overweaving tests and fixes: cflow
4245893a0efebd1bc5c20b0bd5ac3ac668c89f93,formatted
c9ddef9fd762835484653acd5434ee366a3bc04a,more overweaving tests and fixes: method call/field get/set
8764d5f36d7acb2c2af4051accac4f9c1b7e830d,more overweaving tests and fixes: method call/field get/set
27fa7e935696eda000b944d163ce1f3c4fa5afa5,more overweaving tests and fixes: method call/field get/set
50b9cc3c0afda97d251f884e4173e04c6c8c25ac,more overweaving tests and fixes: method call/field get/set
0fdf5483d94c50119dab88c35dbaaa62650bd7eb,declare precedence to make results more reliable
511e100a81fd864f2f989becfe1405f1be9bb3e0,overweaving and tjp
b07cb6eaee9681bf8ee9a38d389005425ea9ffb6,overweaving and tjp
aa8a1d26e3080ba37115ffb3bbadce5d2fef6cc0,m2 updates
a33781090dc20b1744b01ea6199a2d8b51e677ae,312839: smaller class files
505717ac1e3be982a0803248800e57d4c1cb2e55,312839: smaller class files
82b3b52bb3d4f6c22e5a70f5c4dac8859d7cd6c8,312839: smaller class files
fa9ff459559dfcf440b0ee662879222b15045147,312839: smaller class files
3b76e3c76c7518fe2ce1bb97a8201f08e5ef9382,change all relevant DataOutputStream usage to use CompressingDataOutputStream
f4b1f8502f3a64c01374d15e4bf2c2830503c55b,change all relevant DataOutputStream usage to use CompressingDataOutputStream
853d23511a444b55b3ca750722465bc51f677ace,change all relevant DataOutputStream usage to use CompressingDataOutputStream
df847b0d5344a8bdc91e31e551422a151af40354,change all relevant DataOutputStream usage to use CompressingDataOutputStream
80a05d33ee3e5003952bae928c9d0bbc2cffec38,change all relevant DataOutputStream usage to use CompressingDataOutputStream
ccb9dc3c39591d7d2e29e4fe0b0ace12ea6ff9ff,change all relevant DataOutputStream usage to use CompressingDataOutputStream
4f36eb7b1e823369b5889fde41caac54907fb138,formatted
2110e068685c3fbde6f5a56bd448bcd0792df386,312839: smaller class files: compiler change
f2df9e4d82faf7f3577bc1efd49115eb9c02f336,passing the correct compressors around (for small class file sizes enhancement)
4955acd14b35597625c16b5021ecda78b0667163,passing the correct compressors around (for small class file sizes enhancement)
8b51469050c426ab87cbca1e5f938d4faa8bae76,passing the correct compressors around (for small class file sizes enhancement)
6fd6926d8da11b1fdd22a8b426f75ec38af08a1b,312839: smaller class files
2383d48ca019c3ea17a565d4d13953a011bcc931,generics
5982acfce0e2794845f47bc709961d990523c5ae,312839: WeaverStateInfo compression and move to signatures in 'aspectsAffectingType' rather than names
fcfdaf918a394323a94fece363f50e521a7fc049,312839: WeaverStateInfo compression and move to signatures in 'aspectsAffectingType' rather than names
4af64f4bb0b9120d86ad766964626ccc6941ebec,312839: smaller class files
3c9cca125ec2faa04c1f9c7e117ec7668ffbfa1e,312839: smaller class files
5bfb1c03c7b1c192d7b748ae024696367546b886,312839: smaller class files
32284aa74065421fcda4d7cbb36b163242a2e528,312839: smaller class files
cad41dcda5ce81127234513678dedc7833227c92,312839: smaller class files
9f6834aeba9dd27c41a0ebf06ea56ad8987223de,upper casified
b7ccd103d080e9f9a4c03eb1f618b5a89bd3b058,312839: smaller class files
a88533cb8759e1c7d39cc0fc4d13e2c41c987184,xmlConfigured respected properly during an AJDT build
1e28b926584c406e4822ec153f6bac07af47771d,314365: reliable rewriting
814f51e439ea568f5360e437781cee3192d671ed,309710: unnecessary full builds
b20b41c2dbe41b189b4bd78fbe460b2be1c8fc02,309710: unnecessary full builds
e000e1e7513edcc7877094b070cb32537d2cb80c,change drive
277cc4d2226147d213681e6e2c66dfdc03741f28,built with AspectJ 1.6.7.20100105084524
cf0ee0c1ee5af17d91fe81e68b059665fe824bcd,314130: hotswap and ltw
0e5ecd3dcd9e4fb7a4e82f1f96b9439c4c613a16,314766
406e19599f0305b8405cbe4ac2e36199820fb89d,where to sort
ae2c1d7e25dbacbfe10374bb02caa9d0ae47642a,314840: test and fix
892b919484658dab5a06f00b84767131491c3cca,314840: test and fix
a580a6fff505b5e8d725060ec969d7d43f19ed03,314840: test and fix
540672aeba6bceadb44b381b49dcae14825b0d13,314695
e288ce7cea063de3570c7f1a68dcaaaf8a17f9f2,314695
873ae927114ab5a7f694e56a66c2ddbbc340ac0c,314695
193e5449c987e952f5feeec47f76e3944660a0fe,315651
e54ac87be2877bffb2bb107e0817403a2d4e62b4,315651
9e6629c40e42dbd6711209278b33ec44f2789100,formatted
65993866835efcf54ff9b4ac0f3294efabd13e5f,313026: testcode
86c0bf1c58db42e9b34918b0f354528b5ac1e085,309710
ec091a1fc1c4e12693c628cf6a2c8f4c791141b4,itd inner classes: partial
bdbacca60c8075ef073dab65f52d5cbc7c5e1344,intertype inner class
03f257a9257bd0c82d610d62f70cc8c05faad9d4,pushin
5adbb9cab3648180111a362dab7e5fd15d2ee7db,PushIn
46ff894460de891313fe758260498f88fa319933,PushIn
e67b60892fdf1014ab067feba3083a44772d333f,PushIn
b0921a5df52e81596dd64a011c62bbe8458d4d3a,PushIn
3b0f31d722f946601a2b30750bfb9aa2d5479f05,itd inner classes
504d9e04700f51f21c236f911c882bace3dd2052,itd inner classes
7e211730f897a31022b4162d7ae5ba2cec342ed8,itd inner classes
0a9767cda824898846c6c815008ca384feab91da,itd inner classes
c23f4a9bbd3aa38b86c9a3d8eb0a353af4eff9c5,itd inner classes
081c304b4afb2112ee208d93a5ca141c2e74fa02,dumpUnchanged flag
6050a69f38beeb57bd72663d44cebb0695bd1dea,dumpUnchanged flag
676208f954d93130e873a78c94a1934a4170cf8d,generics and ITD inner class updates
b66fddbb4931784d27f2299a0d695f556ff2a836,generics and ITD inner class updates
b647286b2267935b6a7ba60515e872de647901f8,generics and ITD inner class updates
80136da5b557b8deb4522710136d1f169a83ac73,generics and ITD inner class updates
1e177eeb15107bd62748e0e7277fce0f06ef847b,generics and ITD inner class updates
b58d2c1d47be6eef0d017e45a49c27946bce4b84,itd inners: testcode
9f636c13c87ace2bf0405061f8ce99bcfc6dc649,itd inners: testcode
c4e4c3706e1ac7aae2e4a5032aa8e91cb6b14c95,itd inners
9a8ccae0047890eb6d9a12334e90c8d56896c456,itd inners
81019060126ce96cc33509b49e7fc0115e7e8f43,itd inners
263a678094115922af081cad32aa059fd62cb8d1,itd inners
b666bd033fd9df5b73ab8e20cfa34d4f68b53f9b,itd inners: new helper
66b6a5ae73deb0c770723061f3205e228cca399c,built with 1.6.8
3dc83d6cc87aa78071d95568a596a1eebd48e88a,itd inners: testcode
9a73bdb1c732b129cb05ce06e61f6505f6e078ab,itd inners:
41912b84c9ad745c105186c39f5b17b2ca2d0306,itd inners:
4e4b0a27d207fa3b1aa9c6316f7467328365cb55,debug logic added (but currently commented out)
ab171e8594489882d9681ae7591a646614f00357,generics
aadb8b8a596c5321b4dd1b3b21d355601c72379e,310506: optional aspects
c756375b4ad63b4dfeafb94abcd30fd64d2d99c6,310506: optional aspects
52c4b84db0281b3a393179d6ea14618d04467ca4,310506: optional aspects
1e617a5a4a1e0eded7b7d924a4a4b9f0c033b9cf,310506: optional aspects
4663836a13bcd71211a227c69a43b332c11d18a4,310506: optional aspects
2251050afdb26ea2521c584fa79d74bd4698ebd9,310506: optional aspects
d42a8436ab49b85b446b6bb13434719c96088c47,declare annotation and multiple annotations
98cb0219ae1990d3dca3b4bdc654d342f224b232,287613/315820: testcode
2c2d5aceb5e4b8284dc6fd61fe4deefb80e0b7d6,287613/315820: declare annotation compound patterns and infrastructure for declare annotation with multiple annotations
0df8a4fd58fb3d82b60c46e91a92b000dfc72101,287613/315820: declare annotation compound patterns and infrastructure for declare annotation with multiple annotations
1897eb9b767ed300b801e31b59c8b6e58439653a,287613/315820: declare annotation compound patterns and infrastructure for declare annotation with multiple annotations
f049f611b8acbcf6de11612c47c834fd5409226a,287613/315820: declare annotation compound patterns and infrastructure for declare annotation with multiple annotations
9934539e236b6e0aebe4d1bf2e35898752ff86e1,1.6.9 readme
926678e266223f81ca727433a393f6ba36e12bde,intertype member types
d0670c44eb69aeae547e2028b7ff629f2f0b0cb3,"when type parameter type cannot be found, dont return null, return problem binding"
92a52a21be71734cfe05dc6a8fdbc8a14beba467,317139: guard on NPE
64940fd90b5a86aa4dfb1b4d5e271d5018e09b18,318241: resolving annotation values too early
7a2f0c64f6454510b1d1933c85e93bc95c16ccea,318241: resolving annotation values too early
767bb859f169094181618e45651ed04697e735b4,317743: import handling and type lookup issues
921c8dac0fe8663f4bceb7b8851bd5fd0e97dfa8,maven poms for milestone upload
8659ce4fd4def30f97ba40c5f39f174ac9fda2ce,length check
fe049eacaf0c2befba6e617aac2d7387548f5f24,318397: clear cache
788daaf384a83c38ddcb2822b6013186b785b13e,updated with a target that can upload a milestone
a369bf2ec8cef42e73bd5d6113f428ff9d202764,318884: incremental: throws clause change
6b02aaf5929ea866dc9ed9e20c77613118fdfcca,318884: incremental: throws clause change
00c400c7b67c4d5cec0bc3bc3e187fe73972fa26,318884: incremental: parameterization change on method/ctor
1db258cb459d514cc1528ba0578257aed145635e,318884: incremental: parameterization change on method/ctor
88e6c029ab9e3292605f6243b3fc057f2fc09db7,318884: incremental: parameterization change on field
02510e70ef410c7148f674da5a94a354e9ee65d9,318884: incremental: parameterization change on field
2550fb71eb0d396c7ad2b786eb6193a5de62c5f4,318884: incremental: member types
4516c307d3f40f24120a872de1ccd471fd31694c,318884: incremental: member types
d75bd040745be26d5557c378be64696e97e680fa,318884: incremental: classes
ef26771ec1468be1314d0d1a9397e3a69661e294,318884: incremental: classes
30a11420fd8313e2c92fe563ffb5d77aaa6896d6,removed unused field
d0c72683fea4a4d0b8bdd936e1865e48ccafe718,319114: removed nodes map
f098442ef04c66d039d1a55312d3f5d2fb431209,319114: removed nodes map
0b783f76f8dfb6901ca46244641c7fe97c3187e2,release poms
7eab0b78df5c048339609816d1e5013c9d172ad3,generics
dc34940150f311eecacb8524da0ca9090c210827,generics
0cb91f239c9934f7b4d5e0968d6205f7d347bbdc,generics
550e9ec9e6c9efa09c9d53385bb612e4c0022d86,generics
7b5b7a3b6807b610a79b30a1d96cad327cae0c0f,generics
806cd5ecfd33827e25a2ec6907d8f1a4ea63a451,generics
78f3cea0b721fee69e57f6b5d5ccb810bcd53ad2,319190: AND precedence over OR
5e0a814ced9785a122148a4c55bc00dbbf7e4096,319190: AND precedence over OR
6d0ea631ace962ece7c54dd59ea0d18371503d11,java5
33be9db1670cfceb7fa3b480e9b3e03a892fc716,java5
9c7c7a283552645bd2b431f846fdc8faa5384c52,java5
346c44fdbfe801bb481af0041bf3d00ba4a999e7,generics
3bce86674f9afba44b389a44ad724b44d3fb5e47,319312: uncompress the weaverstateinfo (unless turned on via sysprop).  Fix in deserialization of uncompressed 'aspects affecting this file' list
2bcdbacf5f2278ad559d186935f3e9529e5412ff,generics
75467d52b8c68812895b437ec2d2e41fe95adf43,generics
c4ae4d34a17e3760d7c4230fca985fe598436f25,319595: -xmlConfigured in ajctask
fdbd12e319a0c18c40906780b372fa3cfb573fe4,319431: test+fix: reweavable state names and signatures
b390592ea35dce3207ea6a4c85a240447284f539,319431: test+fix: reweavable state names and signatures
dd9a71bc77cdadd818589ed55805ee4f50d1abb9,kick build
f134b1cde4e17044e28855168165adfc42064478,generics
e8de3dc7d910fec7065bdafd9c0a30e6a8f5e64a,generics
8b1628b65f7dc5931768859474bea963e404b4ed,generics
499ab8f9709d5c0e9f99b0247d0989e441dee4bc,generics
8a156a38d994a9de5bb65e29b78ef00cd8b66be9,generics
ddd395e47b211e9988018f26e0684640c8f67471,278496: model deletion
df99ea375110176aec3e8aceb8a0a87107cdee06,generics
877d250ffcd1e941e6b09989780b7d9ba72ae0eb,generics
f2c35f45b406ac6ce92eb0145276dfea8e662b8c,generics
401f693bf9fbdd504c081d6e1f93b3ecf8fa79a8,278496: model deletion
c718506cc647c311d3956c2408402a09a627509c,possible changes for intertype inner types
46f0d562cd0126307678985c89956750d20c901c,java5
b8a3689766433ec8990db7b5e09e6a491136f912,generics
06e0ac6d789ce814d76c809c6b74835cd8981f7c,generics
4def7d519e25d3a66c810530827ea9d206a00e77,generics
d11300518bbfcfe9ac10e397dace8edfed9dac08,generics
b38e0f133ab326b156348712efc91b7ecc06a5b3,generics
f30275711ef5d5a4d452aab2959c5d27e1f11e90,generics
c3c897ca5383602fae3248b6df6250324609b3b1,generics
11a0bc2918fa71472dc6bff0185a52d4ec77af32,generics
aca2ea3b7cc0d6b18a62c8c1819067bcf864a742,generics
237fc636c51b92e4fc4307fda73b0660da59bbdb,278496
d340d6c25bc00afb117d99c96c554769d1b6d8b2,278496
c320a727941abbee6367d25e4f343ea174c6b2c6,278496
4974bbd7e679033c878c09d7a92c0d56a34dfdd7,278496
6342de47beb26b21339d2ad92641fd67a6e004cd,278496
6eda3fda2d76231499506416fa279e99dc389bd3,correct assertion
883ae88ebade558388f349ade9d356d99ca0b4cd,278496: testcode
b3a2c080204f65a6dc653926c230f74723925a30,"278496: model deletion, allow for inner aspects"
95ed7c77f622111e221824c20d3d6a2bbb62b360,"278496: model deletion, allow for inner aspects"
fa60f96f87865a217beb7b0a5bfb38100a2cedc5,278496: testcode
e67c657e6e83759fa489d2426da4e74859c8a560,320425: handle changes
e343ea135576347411a5379f4391cc728ab66c7a,320425: handle changes
0e0df92e06802d6da2b4c6bbfc23368bfad4b87f,320425: handle changes
3f281a1935b5b237be4d0d18d95af563b6e13893,320358: type signature changes
34b6b7ea43e739b9e70fb3f64e94e50f420f095a,320358: type signature changes
bf7650f3df9a9d15380c28026edb01ad4e2a35bc,320358: type signature changes
129d18350080d21ea8d2eb99a6a342f4f8c48cfa,320358: type signature changes
22fa178ecdb555da7efd44dcf2cbc0843cb3af04,javadoc
5a5c2f6b1feaca1c01a4bbde4676d70876bcc0e7,javadoc
5f2e71caa9e55d921d64967628cf749429486c1e,278496: don't use hasAnnotations
2e48780fab3f98d36811ccb12d4b17509f0bcc47,278496: toString modifications for expected output testing
d6ad92e41106de6441bee3d9b3bcb88c13df3627,278496: toString modifications for expected output testing
20b3ee96a123e0bfa4f87aa92f778242f22accc2,278496: testcode
0afd13ba01529e94c95b63fd818b172b69c11a25,278496: removed hasAnnotations
31a844c89743ed4c43ee9f96f8e75f100af32288,278496: removed unnecessary interface
fe1ea9ac99478bdde0a1c29f0a4a713ece323b35,278496: removed hasAnnotations
a6e0e6b6e20137af302773daaa29302774eadaf5,278496: toString modifications for expected output testing
0a8fc56aacd9abc1af745c1bc0162094eda7199e,278496: toString modifications for expected output testing
95a0bad0ccb6714bff752a4bd0365829a566f14b,278496: toString modifications for expected output testing
f492b6fc2ea21bb97af5855842384730513e4941,278496: toString modifications for expected output testing
75b983436c75eb0d1d40ba6d61df1ff6ef78aee4,278496: toString modifications for expected output testing
d6f04399f61ca8156968edffda9a39ec276d97a2,278496: world managing a set of type delegate resolvers
1962d6402fd2394a61b7ae8ab1fb4ef25279003f,278496: refactor pull up
d45da121a741668b70692c171623cce460dc62d9,"278496: type demotion, complete!"
9fccaf99b683d50cb50aef00b680a6ca75b796c4,"278496: type demotion, complete!"
52598b935aa710833c8376d2838f7ec272ee75d3,"278496: type demotion, complete!"
b1a13ead72056fce6dd6228dd310dfcec0f6f5f3,"278496: type demotion, complete!"
45c229253163fe781a660d68206292f673dd3e4a,remove rogue println
47b1728bdce19ddb5339aa492464765cc1bb4982,278496: anon inner types affected by aspects
db423fea1bfc5f7a3fcda442fcad64a442c0eff0,278496: anon inner types affected by aspects
b700ab3bfb4ac02f78d093a190afc0def383b4bc,278496: corrected demotion activation
782187124b8390eca6e45f189dd7c46a1bf3c900,278496: some attempted improvements
1e11adf74b412556f1f1bfe0a46500bbb987e20a,change this to see if build machine can pick it up
19a0acd18c64bcbdb64deceb1daf5387abb983e8,remove generics for now - will build be happy?
85fd25dc91475e6b9926b5c740f73b994eb84a49,321641: test and fix: exclusion for double dollared names (eg. cglib)
ffce77e376a836295d2ff69ee61eb3c617770fc1,author tags
6f56350c8e95d8a9df4dca4a86cdad2668bfb0fa,spelling typo
3e26fa139931011feb52d7a542deecfb97401ab0,"175814: fixes: chaining preclinits if they are too large (too many tjpsps) and on error define original form of class and proceed, rather than failing completely"
d266e547aca31ae96fd8d469620b036ae9430989,"175814: fixes: chaining preclinits if they are too large (too many tjpsps) and on error define original form of class and proceed, rather than failing completely"
36c91148128afe51181cea40c70866e6e21dd64e,322272: declare annotation for incremental compilation when used through abstract aspect.
499b7ededbc7e9ef38ac0173cb56483ad6a6610f,322272: declare annotation for incremental compilation when used through abstract aspect.
f9486487380eae369bffa959aba0be4d1bce81be,get it built with JAVA FIVE
adbcc5d4e2d07c03e26f7abeeea1eeb4b33fec43,save array construction
b1cc39f2dfdbed072a90c54fbd440a68c7931201,322446: testcode
67189542cd8d2718de8b545c8bea0c8d81cfff9c,322664: fix
0170fac8a1199a062341860b96dc06c4c061b44b,doc
49882ea605398854ab802789c8e1507d27477ad8,getClassName copes with generics
75e49e9ae3c50f2ab1d267e742939ac3718479f2,322446: parent type munger remembers declaring aspect
90b4071e6152377e85bd8fd47a9afee08a26c81c,322446: parent type munger remembers declaring aspect
4c3d4d6f69bed5bb16f4ff3effc8675c257a188c,"322446, 322664"
a1d8ced910d9f69fa1095731f64b37c26fa768f4,322446: mechanism for a concrete aspect to remember the actual effects of any decps it causes to apply
a07de9d1fdf35d0bbc4d7ce0c75b4717163eccbe,322446
04bf119a6f52911c47e3980aa201bc8443c2f2d1,322446
922f3f7be7b5e7c321eeabc3a719b82f06817993,generics
f3703cbcc5da1c3ea777d038131243cad04db0c7,generics
16adee6b2928350a3c469de0d051c6d9c10dc5a3,322832: intertype munger application triggering early resolution of parameterized fields that require the decps to already have been done...
55cd615ec9a8d68653d45b0d7407f43d357c6ecd,optimizations: working with Abraham on these: this one avoids trailing ':' which will create a CP hit more frequently.
41cc31ad1b8a989f553fde81e14741f360eb520d,formatted
643b654a4114e4d7fe3427c8ebbc07c5546c0865,need a build through
c8ac6b6a4ecd2a4b45b466377b11478c022b9eff,source locations for declare annos (not persisted) and fqname of handles for itds
e2dafb1fe9ab49d9fdd95b998e78da8104daa07e,source locations for declare annos (not persisted) and fqname of handles for itds
c1ba48332b7fd500574910e9633a883295cc3402,source locations for declare annos (not persisted) and fqname of handles for itds
6b35ea418d5523a05eb591eec4cb30742b6649b6,322039: testcode
f83c431923287cad220988407848a092e53e9c66,test fixed for non-windows - uses correct lower case dir name
26a5a7ea4a834fd989d04613e8b0a4358ba11060,just latest versions
eab15393e510aeb107faa10f45d9d6b0d4ad4b17,source locs
bc0c22604c3c1e273f071c0ae1afa06bd835d1b5,improvements to the positions for a type pattern - more to do here no doubt
11233625c4e591a76fb7283a31fc38457fe1f3ad,323438
3a3dff2a4957873bd3e362f22823bac5063639c7,323438
cbdbc8b60f8aa741c8d080bff504a28d71304879,323438
068d72d06654b192bbfd1203699efe5501107bbe,323438
701e6bd6988b9a60b68a45c9d750605c873c26c2,323438
e3e9be9ad4e035ae65de845c0a8cfaefe5c8b822,323438
f631ad6e4e37f43bfae556fc966e6ab0d7ee38bf,"323417 ""Sometimes StackOverflow is got while weaving"""
eaf3ee32a5887cc90c5570202067fb87be74369b,323438
cfaebc1c190e838c7db4e913ef1796b8d4d45345,323438
ae625640ffd91e2aad87aba572a831cddde322ac,create writable map before writing to it!
ce16a06749d562fd123e4ecb984ec3a5a8cf5a94,323634: only parameterize if there is something to parameterize
e0e1330c6e01a878d365bff112f1c6505c7e6ebd,320468
7bcd31c7d5866f396446e1d9b997f105ebc4d16f,319315: aspectj.multithreaded system property to force it ON
88fab6ad42f17bce86217d0b0fd6525dd5953bc4,324135: npe fix
2a8d684a678b1761acbe081bc1ddad3d3c9c405e,318899: null to instanceof
03c43f5ca578273b8f94d5caf7b92718f84cd911,324190
6b999e08f6ac6b6038ce5fdb55b891589f943855,contains the new methods
6249672405e8d1303ea9087f35b72114586f0aad,324804
f5b659a650404dae44b9d1056e9ab819e3dfd661,324767
b72bc1728c41181f3ed32828b32897f557f4fdf1,324932
923190c40b9f5a794167ceff5cf3f0c5b21c2d7b,324932
1263e05644a62c6f12178575dd8abb81a2cb94db,324932
1371942fc8b07fa86cb7f927027b024bfb3e5e2b,1.6.10 readme
e56f7c4fb6847e624dc2dc63b3e3c6bedaf3b7be,328649
a0f5ba865e9eb1affcd83d04bb36fc6a2e066cad,328649
244c5e8bd6cb42c45da0cff7ed3fe91509814ec3,328649
3ab5a5a1dc6073e5d9451df87a8184b54bd79ca9,328649: addDependencies for Compilation Participants
9ab4df758611740cb2f20467a80a6a66e7e5228a,328649: addDependencies for Compilation Participants
ac595a6c0ecaae84fe38cdf7eb1e7104c45fe79d,328649: addDependencies for Compilation Participants
ad50f31097edb3451483b9ddc15c24d06df11d90,328840
9c8d91a03593d28e516294f4bc47e378a6149d10,328840
6c3063b50f9b34b3103e738122034b81c483f7ff,328840
4b1b50e2fadf8ca95925f255b57ddd7ce1066454,released 1.6.10
ba6a61bbbf9016fc40c195b2704743717951b4c3,updated for latest milestone released
49b7bcba4455b3a8be486b28516e6cddf827aa69,329111
118f91d2a1db46cf94024a76dc16ebd7a480df26,329111
267155239fe000c6069bbc937bb2023296bf2aca,329111
f7591388d9bf2cd4edb9a450ca690e4e82be5319,329111
ab0c79c20898a5d0c19fd6e054561a3c55158f10,329111
9b2e89b52ba1a421839b18f9be3aaac523fcd665,329126
0156c1305007bb128eec80be7c6fd6b781fcf23d,330170: debug added
a1e726277cf2b98c1238f18efe9b221946468c6a,"remove those tests for now, suite not committed"
34959ca9032e8f78923fd66cd0c1a30613c526e7,https://bugs.eclipse.org/bugs/show_bug.cgi?id=329268 from Nieraj
0414d23e74ec44d7aebdc4033e80bab4abcb8c32,https://bugs.eclipse.org/bugs/show_bug.cgi?id=329268 from Nieraj
8a0954f7a241ece8c339709b97cec2cb889e108a,329925: declare @field remove annotation
8ddfb89436782ad76210b6a68ac7a30945795551,329925: declare @field remove annotation
c91e57a549c18d8e8735351fcf92c8aebc165f6e,329925: declare @field remove annotation
624e0ac0c2e931d00a8261e79af22af2ba720fc7,329925: declare @field remove annotation
2832d267f287d6b846e7af1b56140e640886ca5a,329925: declare @field remove annotation
8cd8ce9101f1d04c0d12d8319a6b276f158ec762,329925: declare @field remove annotation
5c0585e80dfc83a69652b657ecb395e482657403,format
a10c68cd874faf0f790da2db144fadcb4d5bb550,329925: declare @field remove annotation
6d5d6bf4d7b86c691fb391884890095c55847ba0,329925: declare @field remove annotation
1f657dbb00884ad4e0cbb4e1a1c8f1a837862196,intertype inner types
fb6b9b16f800be2d534d7205a287fbf422f07df1,intertype inner types
d6d80e8f072e199a70283bee27f7d3ffb3a8a3a6,intertype inner types
ba1db7de28aa4218214f98c33368b1c5a7133d44,intertype inner types
affd2cc672dc4463e8be4abf8329b0d14a9d0581,annotation removal tests
ea9cfb2f1619e40f708cbd596495e68c1d0b8d8f,annotation removal program element support
94256803f37d6e60c036582144b1bd33c4524973,annotation removal program element support
4e62f8457437c54fdfec38bbdfbd58f088a5f1db,innertype intertype
e0c5f78bfd02521698a045b27277ee72fc099fc1,innertype intertype
37c473f0ec3cd02daa75b572b60cd89fe10ddb62,innertype intertype
f55ef741d7246cfac8f5c02754c0e4c9698fd310,extra impl
03de7d656faafc1ac55d9994b9e311c860d97a52,annotation removal - extra checks
edfe7deb9e56272d31c8dadfa15c1907cad5e4da,annotation removal - extra checks
06ce7bea9ee83d72d1d55cc81f0a2f0cd87a4618,bit more testing
f8dba516fa4d9e614769a8f3d7a7abb7238832c4,it itds
eccb4e5b719b387d853e9f42442a0519f2cfa434,it itds
3b6a7cf320f279dab39222e4e87dcd3655cdc16f,itd inners - fixed: needed a reference or wouldn't create the attribute.
12eed0f91f89eacd174db55382e1b2e5ac61ddc8,itd inners - fixed: needed a reference or wouldn't create the attribute.
2ed7e181bd56c9922862a5a5545273c76c2f3b29,fixing tests on linux
d5bdc443275fd228910e8db43ad5dec04a996de2,fixing tests on linux
8fb5b352ea72386eadae1a6386e1dc0c8762b99f,fixing tests on linux
04498787f71678fc2d486bb1ffc04ffaef3c1e17,fixing linux tests
62f91e15d4d7d746d59bdaa24f980686f9f00180,fixing linux failures
a3884ae5554167076cce80c997477a1c641a34b0,generics
11345ebd0e1c548b7a0f1839193d945da9c6c283,kick build
3377f2c31176c7da63650559ab5046472b6d430c,trigger build
bc176af6edfd6318e66e7e207bfaaac9be4088e0,version rev
34730c68dad99f92d5c5b9d502caa2edfef93e8f,1.6.11m1
b1bc04f163ab7c1c0440df1b23842dcc6f4e3f52,332388: test and fix
13fff7553a5871b06c8497d5093dae051a3a570a,332388: test and fix
bd5cd17934f61a9e626455b424f4004127f38d94,332388: test and fix
0247be6dac03e2f96a23cdad7d8ce0f120c62f89,332388: test and fix
ba4db3c42ad0ed268e3f7dd70a09c3ed30179b5b,332388: test and fix
08d4b6c276e973edba180366ea41854d3ab640a5,332388: test and fix
1c970bb02cfb2f4706e0ad636147d583413690fa,332388: test and fix
56056248ac9416df92d62a547d676d80419454b8,330170
75e44f31e461eaca930a2f662eadbbfa3e7c93a2,333469
d15ad6f11f9beb58de925f812bf7506127d27e27,333469
cd4d7e707121f719bc6f5625341b30c11c3d3bfe,333274: testcode
91c176061b3941ade42081732a04ed8bbecb1bf8,335619
ecb01f75fdc9ad3e0fcff013437a549398f87788,335619
0e41055181ef493d028281486bbd118db8697159,335783
0fb3c077c71da5a112c71ad44c62552fc725477e,335783
8667e7ad76f65341a87d399d92a00aaa51da3367,333123
bf1d8e2fad7b8112fae9780ba344420eb7111ec3,333123
50b404c520f5ffb80e6849aa3498733beb74ca36,335682
a135fc78cdc2ae02688b285a4898ec4cd10bdf73,335682
c602bff8e9c0025a8042de9549f6df731c6d896d,333123
835f31af6fe633ace7c710e59c49316a373fba7b,335682
ba424355222a08bdc0f9d98e8b0e2050cf6292af,335682
5270506186cf468fd0fc12d73cbe15327968e3dd,335682
1386abb444d0f2e5dccb22c511f3063a569a4701,336136
09c63f45156bac42bdc7d03014fdbe224e31ca27,336136
fd15b7814e52fadb177624a16f45c20bff927e1a,336147 - tests
c584cedda7f4b25f3d6661f39f4b88f432cf63b4,336136
edaba5751fe4faba5ef1f9c9d79b6c0e95963f86,336158 - testcode
3a89b2ebd552af57d1e2b1aa1ad97c38cda771e5,rebuilt to ensure consistency
5648105b8450a0f0121bd49b65eae21eb135398f,282379
09af5acb0c35cfcc90b85bb465313c7903d32c20,336471: makeEJSP
bd5d90c9d205a1d8d5da7b37e540375c0918d267,336471: makeEJSP
8b5b7a8ae42525da2c46cbaa7b5ffb938bf62a82,minor refactoring
1083a1d359be9ac539de0b0d18414598c80c8c92,336654
01be71f629baedd6cc0018b8b4305093c6c91c8a,PR336880 PR336774 PR336745
294a06e02714412faf8f9a4dc2c5944050dd83a9,PR336880 PR336774 PR336745
79eb505b547930a0791d037012705332606ed85c,PR336880 PR336774 PR336745
80785bfd5347e6bf06b3202013d435f68727c910,PR336997
f7e5b6d7cf264cf677950310506710317c24b8fc,synchronization to allow multiple threads to start using the world (see Thorstens post on the mailing list)
d761a2167dfec4c00193fa68ad64d5939e0402c7,1.6.11.m2 readme
eb005c9bbc20d0e3f4757eb57c780e36aec8ac42,1.6.11.m2 readme
b4a46fa012214350e9577dc0054655622c8ad1c6,1.6.11.m2 readme
4e6ff7fec6bf7f16bfc36116b8fe01656962e821,329126: own our XML parser!
197990bf582ce3098ecd00b5ec7d2c49449cbf73,329126: own our XML parser!
945402f177906a2a421b092050c2baab31665c59,339300
b5b32039e130c3b5534cdc4c71b067810594592e,1.6.11 readme
df25267806381e84bdf17ab25ef88b28e7f3abc2,"diagnostics - currently hardwired off, but might prove useful to make configurable"
0ff946aff9ce150707a375437fe7270a5095792f,1.6.12 infra + 292239
f7a44908e788419368618c6ad6c491b6e34dc0c3,292239
a8e6797a9268d9fb041c075ee7701831f7e848b4,340323
8b322ba8aece6db9ddab83fdaa87baa29f7c8527,338175: coping better with bad code
8b2d3861e5481fb2f80c98c3fc7651d54f8c69aa,338175: coping better with bad code
293a0756b25fd1e9c7cd2623d2e28e78aa797f06,341446: adjust test structure to avoid inclusion of incorrect (level50) classes in packaged jars
2ed62701a123c51cdf53e1ae55e957961c834589,removed import of MXBean - fails on build machine
3e56015b4d7e460170ce5fe9a317a47c44bb3279,341788: check two new versions of windows
5c8be646652e20eff7b2c18608b5b051c650d943,341788: check two new versions of windows
aa9173848323f62db93ba2b011468f5c148cc82f,290741: encoding option on ICompilerConfiguration
365882f2f263f03439760f05226bbffa587116c3,290741: encoding option on ICompilerConfiguration
72615f4ecc7f5ecab5653ec207d478183761b34a,290741: encoding option on ICompilerConfiguration
df3b7a35392b8cf1aa408e99355ac2dc78aa7380,290741: encoding option on ICompilerConfiguration
766083c477c47ae7de6d8799c3e44b2b1ed0f1b3,290741: encoding option on ICompilerConfiguration
c7c8841b2efaa4ba6f35f1b005542d5242561693,290741: encoding option on ICompilerConfiguration
eda49e25eadfed864174d4b158860ce44dab5327,290741: encoding option on ICompilerConfiguration
eb60d6856fbd7dbb865e37e74c7c2e7ab817a168,290741: encoding option on ICompilerConfiguration
a22a779db63c06825b111041d0848b8caeb6f97e,"removed com.sun references, even though they were only referenced from Javadoc"
46e149916b753af75934d0781f887664b807a8e4,"removed com.sun references, even though they were only referenced from Javadoc"
978d4a69385d283b761c472b3fa3ec3b7c54d61a,"Changed from Exception to Throwable, to catch 'Error'"
cda3a429ec876021856ac343d91f81db0a1a39b7,xmx/permgen
80ceb419315961eae603911721155dfb560e99dd,342323
de6fa109f148e2aa9014e78dcde438bac81e8285,342323
31b69183e2ffd591a1e457cf3a93e6dc3bd3f1eb,342323
249f832fef29f56e23134a7e38f0bce8e9e209eb,339974: testcode.  342605: testcode (but deactivated)
2b0e478845697017de62ef8e430ca30837407c47,343001: testcode
813c038cb5bb67faa82bd34bde9493766968c25b,"343001: testcode and fix: when faulting in binary aspects, fill in decp parents"
a1c251df1f0ade186946b18d68a16c10bcbc84f2,"343001: testcode and fix: when faulting in binary aspects, fill in decp parents"
4341109730bdb423b0eecc5b01327febc4f0b230,343051
8db64a9d53d8c051b3296b3ccb2c4715463cb4c0,343051
2d9e07c042e5e64506fe85e38546b302bb14423e,343042
d1ad6dc8e8291d7f9c7277cad206a3e57eb5cd59,refactor
f8ff09094b862b63ec44f8215f8e70337b93cb57,344005: fix.  Tests are in here but unfinished.
63b41bcc254ccca230d910396ebc36ec6ab7845b,344005: fix.  Tests are in here but unfinished.
25cac9205ccc64b5c175d72a555b5c1f0389c09d,335810
1fdec320f16004df3427f4b0d6332f1dc377219d,335810
199299c195c2e24edab2990e1cb9004b2d712ac3,327134
88eb9effb789e318078462630632f80da757ff7c,338571
6bfec8fd15f67679d6073cf6ee555d18253c4ef3,325731 debug
4e8c139e3ec3aba077608eb8d7375651a5979d76,315398
a9e14de36139605ddb6e9fae9e06ade456590937,refactoring
a8f2bae7a095e502ac4053f31ca0d781f60e8991,315398: remove dirty hack from the olden days
2d239289d269387f6f45087607ffe82054406320,318237: diagnostics
5edfa227e93303c531a3224d58d02179fd4f7e7e,1.6.12 update
464d48469d8cf1255daae2eecb2f1b9d453d1616,315398: remove dirty hack from the olden days
35409d862033981f275c9150f97023de411c1048,328121
de4cb627334096469737f8c97dfcb3984cb88bb3,328121
ef6ced1071b44dd3f6cb3eb784f2925958d8ab42,328121
dce63a197ff966562cfd7ee4593eb1c40d93d398,refactoring
48becdbb7dfe8c781448c32282112ab2b9de491d,polish
901c3192a53d8b97e47f8d9846c61304eb4f0526,344326: testcode
df8d0534cd22effae9dfadc68f7c4bd553f9bb24,328099
e9acae115e163c11ce5a009d7a5aeb2f41f9f31b,328099
1421c37dad11a8fb405339e90d7c91deb3d016a4,344326
3decd2febd39af216545ad334fee060be06609fb,344326
bb422ca92588a3dbdb4dbc78af0e881364a98d77,328099: currently inactive examples of how we might turn on a security manager for tests
a4d3035b38c750194cec4385f4c9724c1d50f145,328099
dc9f97563b3dbf45ad22091cb80bad30858cbcdd,328099
1d1d8ca788aaf2764c0f07c32ea3fc0e3f1a9485,328099
4315578eb607ee2df7282964cb88760f406c23bd,generics
ce86ce3d485d61798572370b13c8e817145e0598,polish
6e85a485a17d6cb19996f5e16087b5ca20851354,polish. vmargs added (now obeys dtd) but unused
f04fa59934567c4a8772509886b2185d93381b5f,328099
bb6854506626d0375a6fa8bb9be271601f8c366b,327867
2b7b3d9fecae0a9360b6a2c14991d3d2db6a6997,327867
5d6a3acb74c631bd4e16cb5195ae9e71be006488,generics
aaff2d7b37944ba496412cbd586ef3efeec5692e,generics
1051d6079548485d055eb224ae8aef8f13fabd9e,345172
999d3836f0b541f619f50580d2aca8316485ecb7,345172
71608e1577185ba16a587a09f1e5bd60e08bf307,345172
fadf06e67932195f5e14f550cb12e36356d20ba2,345172
eacb4eff973bb9b8160871aecf7374f332296e26,reduce to just failing tests for one run
e4f67df5e2efb3c03d45e8b2e99511176501083f,"don't use prot domain for one run, tests ok?"
fe6263f9f3261b53ada5189d0cb8f68a1e58dca2,collect output from forked java task !!!!
94ca1dd5aa9b5f4fe837e035ce9388e57b65e6fd,rebuilt due to prot domain changes
79bb70535251caee53b717cb122c9bf817c58079,reactivating tests
fcc37e1bb28e8721e0a3e0dd17b1204e32cd9262,extra diagnostics on bytecode problems
9d7f8969fc81fbe85729a03a0d1643cf59901fd1,extra diagnostics on bytecode problems
4585adab31f535c248500187de0b8261d2df542d,pass formal name through
a98d17d36ad7667c9f5c65dc65c62a572b040e17,pass formal name through
f7956943289caa2c39c7787c84a1402411c3c31a,serializing formal name
04b202690dc428ff0d380fda0c5971d3916e0420,serializing formal name
b1e8f4d8bc96d3cd83e093396645152b0cffdf70,347684: testcode
abbf983fae6fe4f2b5f61f4a77b5927c8bcc7b01,347684: testcode
9002c6a3436d18d5223c050bde12e9c9bddaf3a7,347684: testcode
f70135e0dc694afb98d7bcc25167b64f8562329b,pass protDomain through
5b4fa2296be8a35ca767088f754f79e5fc791307,347684: testcode
95e70d2a23b64e7773d8edf909b1365c19752aa3,348488: guard and debug
ff7bd9e0fd0a4c78d9b9d85b411a3ee92b0fab70,347185
039b9ddc950d6c841626e55dedf1efb53e7f3a3e,347185
679b2f8ad3808b2d58b7ae89e6512e81ff1f031a,1.6.12.m1 readme
5566ff2eabfeb4deeaddd3eb849dd9c216d64171,1.6.12.m1 readme
4238f44d731cf8c3473d6a3aba97fbefbb36eb4b,1.6.12.m1 readme
194371f23eca6d571b4d7c47e1a42a8824833047,1.6.12.m1 readme
a326711a635965bd823d9e1b6fa7ba3813f8a658,1.6.12.m1 readme
32cf97195cd7b4f2500fe5154f0813c9dab0421c,1.6.12.m1 readme
2edb246d417ecf9be28add687e03c5712b29b710,348979: testcode: typemap and aspectpath
001e0c01f5d2e194ac2c3c2d0d9e6f82b0ce8580,added test for multidim array primitives
e655bbdb8b7d18309296e4d86b2f01c5fbc23a9e,activate test!
8f51ad05977b8f056225a07fdbf25e8f9b4f3fc0,type demotion fixes.  -Xset:avoidFinal=true to avoid final methods for around infra methods
ba10175fffd15edec820de7db0ce76d900b77722,type demotion fixes.  -Xset:avoidFinal=true to avoid final methods for around infra methods
9f1b97eb6fc1040442b4f0a1398611cb410dbe49,type demotion fixes.  -Xset:avoidFinal=true to avoid final methods for around infra methods
1939b950303f6e5cf417be3cdde605812fd95343,349398
77da838587dd23523cba21f2e8b77f391f54601e,349398
2d7f334c06d8a3ac185fcf2e609a35d27eef465e,fix cp
ca64aad4cf4c55ea28a6dff6429d35c95dbcfc48,fix cp
cbc4553d7af7b36d2acc97c7c78e631d3fd4e42f,when demotion is happening we also need to put the jar on the classpath!
f7b11932d5e3bdbb2de85fe21af8443ad9351530,349636: debug
9bfb220fc9dd84207340aba97e5c365b12918250,refactoring
d6a202098312dcf7070dae3c4afef65a9f6c3225,1.6.12.m1
c24d25f5abf915d6ac14a66975d20cf68f68a6ad,1.6.12.m1
72030e668b3e3ef015b61082d568abdcffd8f467,kick build
7ec1a06529960d5d13a100a393e3245bb85d843d,trying to get these tests to pass on the build machine
bb2aea40a61fd4bd91d8a0b67cf7933ee728942e,349764
7dbb9f7d56b887cbd82021d5c3a3c5e8c1f3cfa7,349786
07c850f315070a7c4df63b120b1b54691f7e84c3,347395 testcode (not active).  349961 testcode (active)
42c4195b5b5fce9240c739ae8b5e432c016ea4c2,349961: fix by retrieving parameter annos
01cc1b5d054696726a7be5ae08746376ab0e9a8a,revert
2302e94e25862a540ccab34b8f4707081ec7fc06,350855
654dbbc6587f8117e7e2e7daf9bf6eab1bfba39c,350800
9c81fadc1f72d45e858e81cc55be06932b3f3007,350800
3a739a4b275f9809ad833affbde5ea155cc76852,351592
c473028a94ea438238b19738b65355aa5f067966,351592
b0b3baa481e5facd1fe1fdb7136e2f237d935834,351592
222fb3431bcd39f98e192a21de77a9b9abedb875,to 1.6.12
7ff02e4ff631243b0870f148deedf7d96ecf46be,352363
01f1141b8257a6b15817c3153ed2eb7ef38c6445,352363
8553b30c9211a49b225e6c6bc81abda849263740,352389: fix
c6fb752d7ca6910bcb825cfd5ccdf8d39e419408,353100: warning demoted to debug info
e8ef5bfcf9faabf99c443572dca0ddbde545d832,353349: avoiding NPE in deleteNewAndDup
167b801c5c71bfa1e0667e85429e097f03d7e849,340806
a9d59bdaf387565f88b4a5926e273430ea6d5aeb,353936
03a96ff817b81466690c048de08f604d73babd78,353936
529dc748a63e8ff0358bacf04ee23f6e2f3a43f4,353936
0c801473689968a031b976eb553f2771c9623967,353936
5101e1eddc1f8c570c705c621c0e716992670640,353936: refactoring
2ef23bfc6f47549965f1acdbcdef8520a7da92fc,353936: refactoring
62e0378eae5a23c7ba62f24914a19066c0aac7f8,353936: refactoring
b554b68dc6c778c0bd03ab4d81a26314c41e5fbf,353936: refactoring
7e88eedcce8fdf6b83134ed1bc0f7ea72781649e,refactoring: some progress on the issue to do with clashing accessors (where the key into the accessor map needed to be more than just the name)
6ae463a7494a0e04878e2d265a3505dd0d32cc4a,354022
fd895352faa077e7b9e67e23b82b52f03b682e60,generics
816abde05d504d408425f490afe4d0150603029c,experimental meta anno matching syntax test case
be14485b795b8a31b6a7f4680bb7a28321be4b18,refactoring: pulled testcode up into this class from subtypes
4b9ef3b0e35fe2acce66e2084eb182a3be401296,refactoring: pulled testcode up into this class from subtypes
2699eb1ff8714142dedc9c61c916dbc3bc09fc43,use valueOf
3b83eaeadfb08db55db04497c7a22478058e01a0,minimalModel ON by default.  demotion ON by default (for AJDT as well as LTW)
b34895092ae0708fa0a0a251505601186774a5a0,minimalModel ON by default.  demotion ON by default (for AJDT as well as LTW)
a53143e61fffa71f497de40bbc6a5627a46a3a33,minimalModel ON by default.  demotion ON by default (for AJDT as well as LTW)
4679b001323a7836a0935ec3a09c4bb40b3f5c57,minimalModel ON by default.  demotion ON by default (for AJDT as well as LTW)
22d9fca43abb8b97abd0f81d3b5919c98501a9f4,minimalModel ON by default.  demotion ON by default (for AJDT as well as LTW)
baaa16f087bcfbd7408aad29025ca2e20ec2c650,minimalModel ON by default.  demotion ON by default (for AJDT as well as LTW)
ac5602484565d32102b6ef090f7f8689dd8ff25c,slight name change to target to indicate snapshot
c5ef507c772e857836b4c2298f4350100b5774a6,asm3.3.1/jarjar'd and activated auto stackmap creation for major version 51 classfiles (java7)
0c541f6694765385f516f6d79034b492b982c362,asm3.3.1/jarjar'd and activated auto stackmap creation for major version 51 classfiles (java7)
96c36dc38385049da37901df868ac3c2bbbf37f6,generics refactoring
241a346ba80447482d7a34993c9b74c6710a020f,generics refactoring
d05a18f50a36dd99c3abb03e11cd97d99d4edbb9,generics refactoring
22b6f012cb3c2b03b77d043a6234583bf2a417a2,239649
c6dbe6d1c446b40fc063e0587f0f3c2e7ac34237,generics refactoring
5c22094479023f2a1d0804c9b82753e72150931c,generics refactoring
8a64b5fcd37c6f67f9e339f6fe34714590052ed2,generics refactoring
cf25e81e270720c86740cc18f6656f731af3b1f4,239649 and primitives no longer all resolved by default
640fdf57df62873a2877be528c00a60001df067e,239649 and primitives no longer all resolved by default
eb5a3b19f342142e1ee5d5543de59b273fa17de5,239649 and primitives no longer all resolved by default
43c230b3c87108e131b9e49cb2e66b3ccc1b5d27,239649 and primitives no longer all resolved by default
6909e5567dc57f68a931490bb6ecfc4adfe8a7f0,239649 and primitives no longer all resolved by default
e43bcdd6a0ff7f4e10b749770d62bc481c6f5de4,239649 and primitives no longer all resolved by default
58848a0b1fde9cb77e5f04c675c62b985e3e5944,239649 and primitives no longer all resolved by default
26cd6dddc10c884ad4b88e105d53886cf3600e67,239649 and primitives no longer all resolved by default
f5b6bc47127e5e656b65e22b49d61a9f755b2b98,java5 module now
9cf7c54c19d30a897d0888685adb4a03bc177222,353900: Java7
0f506abfabde7877848e3cdac925361e1d134455,353457
0f89f9cfb5c249f9b9322e8d17733e30fdf4f909,make ajde module java5
997e351ea069dd8607501adfbbd681c1787fd41e,generics
7f993999d7e16bfeccfe01e280db46636596ca52,generics
5547d017938a46a05346b7874fd11509d8860a70,generics
ebda2ae7303eac60fcca51e14f08254320305ebf,remove groovy related test
9b5b731ed004703c148340059496f8b5eda76928,354683
e71e287b8c6c18370b79f7f8bacc734274573267,354947: remove unused code that created an NPE than ate it
dbd781c9be2c9c635799a2c011ab96bf09d0f43c,354683
66e8e199fea4bbcb81c3d407f9c9d90b12ed2305,"remove one test for now, need build out"
4facad980963f930545b2ee7cd21d5ba916e326c,1.6.12.M2
d68cd624251ff1cddb1bed856bc1d1151162ee59,1.6.12
11f0639de5913d78ef8a83421dd2afa06a6fd792,356612
481a2b0d10eea16364bb7edcd0bd3a214948f5e0,356612
09d62cfc430b911d96ab80e889f6e7c8aee827a1,356612
49a7b98059209f2454dde2b32875f8809d9f4fd4,356612
e5ed164a438cc11f4ec55a68f28f62fc14ade0ac,pointcuts and annotations - testcode
668a0fbd632c4d4862f06d10fa01f2d10fa4689f,357012/357013
6398f8e61d6ccffe14cdf62bfbf9b737fb25eddc,357012/357013
476b222ee32dbb61177a58cc764d405c89b6db4f,357019: message to lint
e3ec5bdcf25e6a3e9385c856085575365873af2a,357019: message to lint
be04c1a089ca3758f65277e035b5efd39a64103f,357012
034b211f7ff93068a8a810b7868f285de486b59e,"357012, 357013, 357019"
950868d6c436e2ba44dab96be5b32aa9ead7fc1c,"357012, 357013, 357019"
e72228e3682ad8cb6503d2c0b1c06ac059ae7e1a,354470
363c363afffc7152e96da039ef767db111bb8245,354470
88235739345c01e4c173950488b7b92fedb8646a,can run tests on 1.7 vm
fdca1771f01be020b9f8e1daec5726447d170d5e,351085
7a17cff55ff7d19fcbce6246ae9ef036d639d8b7,351085
997bf891fadb2186b55ab7703f153cde753b8fc3,catch security exception accessing property and return false
18416b4f2473d4e94c8df906b6107cbc8319b9e2,359159: modified Constants initialization
e22468a36bdecbd516fdc53a375870c60962ad93,359159: modified Constants initialization
151977f0d858b2081da6971b1a6ae1b39a570689,359159
411539e85159e80ca12a8ee2e2f01a7d52284abf,359159
d05437b0261d3fc8435c0c283aa04bf3d24645c3,359159
443dd2314cc8ae2af84f6c493fd19bc5369c8aba,359159
98cd97eaad6384815eeed3740854528107e7ff92,359159
c1994e5b9849adf420d4c83edcc7f570db016d4b,Remove debug!
d825f323f51c5308f37df6027eb214374b0e055c,359159
14a6eac32a20c81682e9b6875e8c3a4a8d9e8897,359332
04de50018188c4602ea3af5298715544f6f0faa1,327141
dc7971c698397c4cf8171e346a883cbfaa6eafc0,327141
034f9adbd6a404009c26acb1c255045ce1fd7dbb,327141
de7f2892de50d92f11c73fb4c89dfabd02f7f748,1.6.12.RC1
289a692299190ea032348fb0f8243a025245a55c,360331
614124ae3f56cff23b27a8d1ef7d7794481bde5d,360331
06cfd903ddbdc01ce91a21b1b6670527f1b22f1b,1.6.12 final
ab5ba855f0617cec75211b3e5613afcf9d5776dc,add developers section
942da06faacec35b0aab76eb2729e55b174e3c97,362956
e8a2793d601e0ee47f1f7a491ec657aad5add5de,"missing impl for annotation value handling, time to fill it in"
2a53b0a7b9655a7026527db21120f5724468c4c0,"missing impl for annotation value handling, time to fill it in"
49e0427bb885251ed491c5e243f2f5995149f57f,363979
fc7ad6de88c19c4e39d72a7c92f65aafb2e86484,363979
fc95d9e3cb3524abc45cf0fc1a3cd5952ee033c6,363979
7f5af3ab0a71ad330667fa15bcaa373ec2de968d,363979
74e9c7af2b24e2d658f4677a1d8d7f02e9b0a087,moved to 1.7
6e0ff8f48b26623ef111aaf4fab2e9ca27353a3d,363979
c683091ce2887b8d5f406cc019c0001bf695434e,363979
51632439ca42fc130148eaa8715d406416fdda6d,363962
061afbf70e6f64b1e8a3c034cc5ef6d1652df76d,363962
0026293b68150e3b268bfe65c493f5061addefdd,364380
e097ad55db592adf773f8cfd30273b22a0e9aa0a,364380
023c215ef63dec33bc96068d7dd1d691080b393f,formatting
866c5d1ab37df0d082b1fa7c0dcf3c3c2f755b31,formatting
e077d061cf225611d8e5ad7de507d708611249b7,Java7 merge - in progress
c09ff5a063238b1eaf241573506a88008f7a8a30,Java7 merge - in progress
0a812fa86f631e589a6be69890f0f3d0005d930c,corrected usage message and added new eclipse 3.7 warn options.
ed319e3d0272a724e0c08a03219c53755186d0ec,enhanced to tell codestream more information about exceptions/local vars - to enable stack frame creation
7b44e495af85f30704b1a5d6625762f4093164ef,"moved this check into here, was in JDT before"
5229a770a19081ab7bcc478210a6992c9cf13ada,added var declaration so it doesnt get skipped by jdt processing
7b18920d09044f2bbb74a2cf6da532e1d2c83284,"1) cope with the new MissingTypeBinding (so set parent to Object rather than proceeding with a missing one - the downstream infrastructure cant cope right now)
2) use raw form of binding for new parents otherwise the methodverifier15 triggers about a problem (previously methodverifier was used on <1.5 projects but not with e37)"
b72204bd4f5775380bef3c5dc268fa854ad04376,catching new errors before proceeding to problemreporter
8116c118f6a03f248f79bc45e3975a40be8233cd,cope with change to package bindings (import without the .* now)
76fde797193b245593663e7dc455dc4b8af30430,"very messy due to all the copying from the supertype, sorted for e37"
8bbddd9948226d6246fb03d9350283d166339688,cope with new messages in test
837896f01bac522e7140d6765709980580a18173,force java 1.5 in test
2c58ec6329beba858f71d064f5d43ea24a240e32,generics
4a73d4d572e474275ebbaec299094fb830184492,minor refactoring
6df6cef16298e1a0687880a955c28ae64eb61006,New e37 based jdtcore!
6f10470e3deeed9756072b5f5cf8cd741bba7681,e37 related changes
922154d9fd9eead86f435714726652917b708ce7,message changes for e37
ae9e53958f75d836ebd5b60eaaec618b09a65b06,message changes for e37
b393330149c68f42b1de8fa7cf6b3dcfb0665272,message changes for e37
1cdc647a337e4551d9efc85c2b97dddcc31bb61a,message changes for e37
7c5e1804f222ab8934ea73f98b2f0512e02f737f,message changes for e37
38610b85affafccdb6cfc7d0c5b22a59b33f62fa,message changes for e37
fc8d86cf86112a99455878a40ac0a3aa6ae80f33,message changes for e37
40fcaa1e19cdc9c402d54a9070755880363efe46,1.7 sanity test
d6928317c260ad73667495229d66ff38310623bd,message changes for e37
b50ff0ca3a815d1ebdac72de24ae1532e1bfd54d,message changes for e37
15c66c9800bdd242a853e277f179421cbf318abe,message changes for e37
b3e51b0628dc871a8b2059c0c67e6091c82c2def,message changes for e37
3bffe3bda11e8cb06e4e32d5137825547b860ad7,generics
13475b2ce5f6ebdfd9656ca7a5b40c2d28d5c4d7,170 language tests
7a25c049fab85b86baf081e9d2380c4f7de5da5e,where to do the work for handler+multicatch
b5e615c6723182982279bc2c2ad1988cef1b5fff,generics
bdd17ca45ec2fa33bdee48ed1ee71f82204a488c,1.7 added
24221c560ca4536ca00904ece7542198e528c852,per clause tests for stack map generation
5034251ef94927ce003fa1bfac0c9471c472eb1d,per clause tests for stack map generation
e1de567f06bd4e2304113b69fba8cafc697d0517,more language tests
e3242eaf288060be381b241f5736f2269475eeaf,1.7.0.M1
322eaca79a5ab7a02b91b35c7ca166c4922172f8,per clause tests for stack map generation
09c0b3f63dad496b8088bb104eea23e54e9ce476,up to 1.7.0.M1
bd70bd2a8ce2c95d0768ad7786031b8cb068b2f5,spelling
f66393ae36fc65882be9810d0c8100aee7739521,adding description
89756cdfe58319d4e8e29b88de6fd8810d84244d,371684 - wildcard generics unpacking
b5835864bd821f0069797118cac017e39e893118,ignore bin folders and aj-build
0cf0cb2dfb690891fe5eb7f4219e383ed666a0fc,support -Xset:makeTjpFieldsTransient=true
ac0d0829758c207077cdc737c80277dd9c17b489,generics
e07c4112d8a6161f110a3752158abcc0e1d290b2,"AspectJ Caching w/ CRC Index File

Signed-off-by: Andy Clement <aclement@vmware.com>"
332cf905059a605b2788c2839ca0d3ee03886c60,unused imports
3fa7416111b06016398973d144ddc29cf360ef34,generics
548f8b6a118d06874d511ffcc13602b4ec756d9a,generics
f37c56e02982a1043e7821bf033b58495f8a6b74,"fix for 371998

Use resolved type pattern rather than re-resolving"
d4a8cc90482cb538a88f74a9aae99a323e547c84,generics
eec87199cd0fbba7a16a63b7db61d3a0a0fd58c6,373130: transient tjps
6defb4e5a2565f5568cf6c1346001abf99305d51,373195
a044c8dc4cb66e81f32e2fef7c3b215ce75d7df7,373461 - attempted restructure of nameToSignature
2a944dbb2cd25a31c93d3e945f0cf07b406a3090,MethodVerifier NPE fix
42035aea54234894721cca2858035002c7bfa9c7,pr73507 - wip
80de31e4da0415134aac8ab2fc492de58fb6bd03,invokedynamic support in bcel
f259133f31dc96885b1a800ea25d195757ee44a2,removed old version
3632df8d96f210577c2d86c0b184737a59db23aa,testdir
1c0f36ea2026aff22afd9c9d22782db8233c8b95,call jps and indy
afae1fc59a4d857b1e19f282b7a38fe061afe738,invokedynamic tidyup - handle calling getClassname on it
5408b2446e12432486800cf5a35795ab8d942de3,additional test to show all joinpoints in code using indy
549d227a8ded88d708415162b36cb273ec496b77,374745
f85631fd2fb2e0f3213abb9c5a7cd86eec2c9ab5,374964
096b004fda4d21cca0e1ee4c776e5824715d0ecd,375881
e0e08d764baff374fa8c3251b72c4e6aeb7699c4,fixed up testcase field sigs
f340cea270dbc56dde9a938bd9c88c89f88e4db5,376030
62fca9a2dd7c7a0f9eef9b2186f82fd8e695162b,pr376139
f41062267162351ad1e213ab86057a3d3863bc91,missing MethodVerifier change
6e1704d3e20367a0b3327a7544417d5a3291ac27,375777
be063b851651ebcfe1e147198842e28ea7dbbb26,376351
45cbaf5e89474b34b9804bf8387d2189a6bc2eb6,375777: ClassCastException
724823aa185922c9d2fd13a0c56049862d3ec0bb,declare annotation on type XML support
463c5f1d3eab245424929395fc7239fdc04e1eaa,declare @type xml testcode
503bc62a4441ca925873b92a6d27170673461ebf,376918
ca84e4c23db3f6b9c3bb17d3e884ed6d628a91e6,assert in test breaks a test run using -ea
9fb822729054bd82c327945a531ba8ff160bbcad,NPE guard
89c178fba21e32dd3a7d1ab23c8f8fc3e822c881,376990: iajc does not support source compliance level 1.7
80ce56ea366dd81da7354855ef2a2e2ca65a4f93,Fix up J7 stackmap creation
30c38582eef681e4a8f1098a298c143a190fd840,generics
0435426892c16b1b86f526ca4d4cfe62bbd3376b,375777 debug
58685c4fd075e55aeb5a8c5eafda20f1c24d259e,generics
7aad69eae7052e328ef156200e7ea82a386eed13,377130 tests
f0ca363a58b8d54e5313f4e56e68f116afb2c27f,fix install location to 1.7
4b101d9686d97db694585c94d742c4dcb8417aaa,Rebuilt build.jar with 1.7 update
ba9d43ccaf2660ddc9916ea48f79a77ba60d435e,382723
a7483038e86dd39894d9b347f227eb6c3a33e09e,382189 and 382435
5d0e1860cb5069b266ba70d33bc356d36e285a90,384189: actually respect dont dump on exception setting
bf949d3260232dd69a5fd3a2b81a19cb3dd1a6a6,384398: some fixes for generics/itds/inner classes
5debcf0ff92272eda7acbadc577df866002487f8,final 1.7.0 readme
41e9afc080f029f580d57e47399989d9d090ecde,fixing generics warnings
bd0f94bfe1fde96900130a1bb4c70cea2de52e48,386337: SimpleAOPParser support for declare-annotation
8758d5566e4fc1ee2ce14de10548f36f88ed2de6,Merge commit 'bd0f94b'
5378e48a474c14a59a2e0b76cf7404655f8875a7,generics
993cef1c34849b5a3c92f5ddf4839ccf9047da77,386337: more missing support added to SimpleAOPParser
d0c81b74d7c2254cea2b8820a1cabda158978e83,73507 - it'd fields on interfaces no longer get mangled names by default
a20da6131659ec460fb37d91020804daa82655ab,bump version to 1.7.1
911f5e939194bc3a4638ac7e504bb7e95033a191,1.7.1
7c6e9361dae7f2ee4cf15b68eccdf54e889d1f75,386049: test and fix.  387568: wip test code
cbb6f5a7d50075dbb4482ff1a112463661aafe19,387718
5ef30bda739949d9f01b2b1792322382018e2be1,387568
76d695ff1a6f8863a1b64f17e38a5ffee170f09f,387444
55ebaa15305cc686c6ed5915ff1115071b3c80bd,384401
77d14748c35ced62f5c14f34389cb2bc942c410f,386888
63684e55e0fbad7087b8991aea9286c2695a065b,386888: ensure annotation added
024de8c6544bb6cc3d66dbee73f06670b458a563,386888: always attempt to use generics in comparison
107d8e037ac3bfd93c7fd35f6d79caa36c89fc21,generics
a847c704cd50e382dcd47cef44e8ebc1efc94ae2,generics
c2ff74fd569ea2ef0c4abdc06e3f36a77b1ddd2c,388971 - fix for double synthetic attributes
591a7e657dffbf63e11c4448e0555056bc295764,Merge branch 'master' of ssh://git.eclipse.org/gitroot/aspectj/org.aspectj
6cae3ed57c66d0659492ab1d12bc42cc10ad6f71,1.7.1 readme
b9c7a190f452cf888854e4fa6599269a5a2c0212,389750: fix for ITDs that use generics made on generic types
0d69bd3eba361bcfb1ba013466841ee3611b3531,389752: annotation value matching fixes - multiple anno values correctly resolved now and enum values compared correctly
2fa04b8a04b3527c5111918d8dda23121928473f,1.7.1/1.7.2 updates
b8ebdc33c75aa081ac3bf9b1a45f79e4177467a6,389456: avoid checking if the target is a binary type binding (probably already added the ITD on previous build)
0bbb4f252a1efa7408f55e06fc062baddce0dcba,390269: fix for multiple bridge candidates in hierarchy
9a3cc2bc5c824d252140fb3d1e2e27f2163e6d53,389967
8a6608f4d5d1a2aa8aa49a0a38da66a54d53c917,386341
df1823b297d7b543c1917804ac650502bd4601b2,391123: ltw cache improvements
fc554310bc0268244c001a421d2868d14cb45fb1,394234 - stack map correction to avoid generic sigs in stack map attributes
3e5af0fdccbe49653ddd59f05e14e33c177c5fc4,395221
43166c3e88e824e8709d50b243121740b0a1e81b,325731
efef2f31fe1b535e156332909d3e5ef47ab4a1d9,remove JRE14_LIB reference
96ebaaed65fe5d507cae3d56126d76f217a9f13a,398588 fix
f54f44a104806b06ab72b223c55d71476c95415d,Allow code generation hints for generated compiler names
83df4c5194b159f6113aade3e73549d59972fd4a,add more years to license checker
8dc8d1e0b897d9ab515ed3d99abaee930b45c9d5,more changes to make if point cut generated names stable
f1a8813c3b200f7564f5247b4f02143fde35f0c6,390269: fix for gc'd raw type refs
25433050e15c2b6dd2b0af046f7c0c380383667a,better exit code for out of memory
538ab026d392dfc778cacc1fa848bb9ce62db055,377906 debug
59b8e77965f0b92d869b803706386d7c22aeb94c,corrected to 377096!
d524403d64f7d5d8f84ddb3e91afa4e3b91fd958,399408 fix
4af4b1e634c9dbb8af1741aad22a2c3441aa1751,399590
46f90792c01a4333eb62bc2ea6a1dcfb3efb0d23,394535: fix
edb41e385f232f7aebe1f6517d9a201221175a55,391384: fix
b997ebb2bc653f50ac54da93f0e669ff1d051919,1.7.2 readme
350b77ecc14fe63b55ca261b7c7e0a2041b29c73,improved AdapterKey uniqueness - 400649
be5a53001fda264fc8fdebe7d2b64c20e748e51c,pr318878: synchronized perObjectBind
0660ad3b68a396993723b3e66b20bc467e6fa982,avoid potential multi threaded issues
f8c2a9aff1c7cad6a967bd26734be31fce628e96,debug for problem in hierarchy builder
dd41751ab24f1e37318c6ee03b036bd5361995fc,Cleaning up thread locals when counters/stacks hit zero
1afe1016d04389da4918b3d91f0d8125183dd040,rebuilt rt jars
99414d4203fc52b93dfa8ecb69211766609137ad,"Fix for 404601
Added 1.7.3 test suite"
290b3be75f72e7373a17ad7f110a8d41d51192ba,missing import
4e34477ab6aa6701b93f0f331f2c6874e70b424f,Fix for 404594
eb529eb53df379baa55288cd1f78bac57dbb0a8c,generics
ff0859d6f529a17c851dd774488ee7b0ca8391d3,fix for 404600
d6e95662492576829120f61c096b5fc1af5bd269,fixed 404848
60ed8e96cdb41ed3a3bd3ca542d6c2336d2eeeb6,Fix for 404848
c45f818fd6dc3b6a7869c5567ea574840459847e,1.7.2 release pom updates
1d315c1fd6ca7d1b8820725384c038f585fce655,copyright text
4855f74db6aa5b9ebf4c0e19bb36614929ab3175,1.7.3 build snaphot pom updates
6afb281ef0a0f0afcfcf0c77d6b6ebcead15c363,405016: class literals in annotation matching
e9e4852b10a10e1fa1b597d471cbafc693f87e15,utility class for dumping class files
5546077efb5d6a7013cd35719e82bf177ca1ce6d,1.7 updates
f32426df49c42772c5ab57904209e04a26cb0361,added local.properties
0a01bd478349676a87a6afaa71a77a04de3f27a4,"Java8 support: methodparameters, typeannotations

Can read/write MethodParameters attribute.
Can read/write type annotation attributes."
6f4140ac7028b9074e694e4c0b9de8b05e4b048a,More java8 support files
31d8e259e5cd8b1b4810d69bbf4b9ea45ae4a4c8,"Use class file attributes to find containing class

https://bugs.eclipse.org/bugs/show_bug.cgi?id=407494"
5b0b6b07d2b581cddd1bac4a2a6b12cd4ac02b07,"Preserve ordering of declare annotation when removing and adding annotations

Issue: 407739"
04b948151cc8eebcf70824aaf773a7b3443b2ec2,1.7.3 readme
3f6e16677d20489a6390dde825608e0d2e29f5d7,Bug408721: sync blocks around collection access
e6cb5086ad825e8df5f182aa0c5586b0b4af9d21,Fix 407017
302c14ee680d5782cba619d8cc748e60afd09561,Bug413378: ctor itd super call: test and fix
38206a5304739c5e986c26e71186b74db0a5af5b,AspectJ 1.8
704032e3aef48fb102fee301dbbe8bdfeb551689,1.8.0.m1
0c0adc560d413ad0ec2a6dcd076e3ab292d12806,Fix for 368046: exclude certain loaders
e51636db502218e63f3125b59087de93dd299c73,fix up for mac dev
3b8fac4dbc514eb2965a6271a0a833832fee9958,ensure we do have a working local.properties
7716a15cbe03d6bd518ac013c4d9ffd7b9f05a3f,improving ITIT support
d82db7bf44e2e0d5f68798c22cd7eb373452bc54,Fix 415957: annotations with 1.8 flags
2393befbdf0ef3842b838591f7af08e7d1467e34,418129: annos on top most implementor method
9e992d6e5e2809afdc18ee4ce4e3bc42b9883e00,415266: ltw jmx fix
07735499f752e0aa8988a8953f11ac72d576afdc,1.7.4 snapshot update
aba10968da43b517e68308e14681a14311a76d42,Fix for 368046: exclude certain loaders
2314eaf48a35a249e63fae12151ce926ea98c97c,418129: annos on top most implementor method
f68fad1168cb96b6dd5402b4778a25e8b4d0acab,415266: ltw jmx fix
b2cd5fa175facc39bd0d1af5a4646b9b39c8bcda,419279: more configurable lint options
9319e343d54a65bcfc4a8c19e4305147ce9e27b8,420210: additional message keys for declare warning or error
06f4b223d5a278ff956ee22c86849eca8b85c070,wip ajdt marker issues with declare warning and itds on interfaces
7d8b14cc98a2f377c83156f099598623f4623a49,174 readme
dd88d21ef6d515bbc7034ca429d392f62101802a,Fix for 423257
ff06e6a03015ac031edc03ecb8015704e07c730a,fix reference to 1.7.4
672b4327cc39cb05b4f81c8dd2db096540114099,pr422943: better diagnostics when structural changes detected
3030eb6cfde33d57de3fb28220defa91deb6cfe1,pr422943: tweak to avoid npe
a9da693f8a3016edf96cfe4b29d304afdfb6b1b8,testcode for 430243
bedb85ee870c2c0dad34d68662c83ff7033dd746,Upgrade to JDT 1.8.0 compiler
c1c4a4d41f3173bb72040d91d42d07662ab703bd,merging 1.7.4 fixes into 1.8.0
27d0255ee76d31d71a4ce6e2c917991a6a23b326,update build jar so suggests 1.8 as install dir
23e88aeb340426118648c9121d06cb22d521ada0,1.8.0 polish
bbc514a031fe0f9814b29d0199b5caef72e7cab0,Polish 1.8.0 and optimized fastmatch for and/or pointcut
f1f350f2bbc39241e67d5e350017f93d50468c6c,ASM 5.0.1 plus polish/formatting
49f7b55032e2cacc68c01bfc1a1967633e6e8e9d,Fix 430684: correct text for 1.8 compliance
022196c5cb5fce666c6f746e4f698d4b03081e7b,polish
4ffb0fd285609fa955450964e54fc3f8fd2996ad,Fix 431541: Proceed expression not setting resolved type
331399f82b33cc4cff8239aab18e405dfe0dd2b9,Fix 431976: thisJoinPoint considered uninitialized variable
5aaca752afa424015f81379dcd0a69e737340e56,Fix 432714: stack map frame and generics
c641ffdbb6c04956a7b1a6d6c89c9c6c67be0761,Fix 432178: percflow concreteaspectcodegen problem
1d087b1c72156822c5076d7769417dd05125589f,1.8.0.RC3 upload poms
6771f63f1606120095057ee17f5dbc8110665640,180 readme minor updates
5a5bef1efd1026ee508fddff9be0632af68ba984,tidying up tests
144a6294884029d2a5a2a67d0e792b8507a7e897,"Merge branch 'BETA_JAVA8'

Conflicts:
	build/usedForMavenUpload/aspectjrt.pom
	build/usedForMavenUpload/aspectjtools.pom
	build/usedForMavenUpload/aspectjweaver.pom
	docs/dist/doc/README-174.html
	docs/dist/doc/index.html
	lib/asm/build.xml
	org.aspectj.ajdt.core/src/org/aspectj/ajdt/ajc/messages.properties
	weaver/.classpath
	weaver/src/org/aspectj/weaver/bcel/asm/StackMapAdder.java"
b4592485d2358cffe07e9fab6578e8764734dd44,Fix 433744: default methods and itds
4187b5f4f63254990957a120951281de851b8150,pushed test method up
e5d3d2fa37191a77c003a1a4c6a5b867f3e549cb,updated for 1.8.0
70f2e6d63556b1ca0158021045348fca2ea4fc86,377096: Fix for corrupt annotation creation
2334f629a16a1623a222bc12de10a85ff9abaa04,Update to new eclipse compiler version
6e5c19b7529d637084564d155d1515f6c4058e05,fix for 435446: ensure size of invokedynamic correct
4f89239adb00058765f874be1e0800c5d40fa81c,Fix 431976: invalid unused warnings on tejpsp
0cb32f4abac25e989766684b48d1cbd280916ba3,Fix 431976: avoid uninitialized messages if tjp used in if
4750cace2d5d2adc817ffe1ff192027b9def283a,upgrade to JDTCore c0f9341
c4f9f951c35f7b7645696ffded594e2dded07476,436531: fix for weaving when method parameters around
3c2b8b77881c721b5c274db939a30bcb3130a401,433351: first fix. inpath weaving of decp on generic interface
f0d71519f53ee5bde96393c7cb61bd26fedf1855,fix typo
f19d0c99af300388a4d01437f53dc168bb9307eb,433351: second part of the fix: cope with PTBs for parent weaving
93c58e39cf0512d0920c37a40026a6aa5f1ff26b,doc updates for 1.8.1
3c1c536e93ee51a9a720b2b0080840b89c35cdee,"annotation processing in aspectj

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
c94c9a21ad4bf9f41c45c2bad0209115310fd1bb,"[apt] revert ignoring -proc:none

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
a7f617d3d69822f6383d9ab18561b22b69436000,"add last apt fix [apt]

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
9f791a0f70cbc4833b5f48937598334860ea407a,"add apt tests

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
9552d0e7dc5dfc8f05614fd44307fd86ef21972e,"[commit new jars] delete step

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
cd74697aa7273537f92414e8266b001699ccaa0a,"[commit new jars] add new jars step

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
dbcd8691f40e29a49f15465716e137d439d2268b,Tidy up post APT changes
a040ec74209f82203f0f3aef1694c8a924f48216,up'd version to 1.8.2
25f3a34a0c1e2db9b34f00afdbfb2d15d89e6418,Add toString to BootstrapMethods in BCEL
b09622f37d7c6d10eb3331097e2c09d670db61fa,Fix 440983: RuntimeInvisTypeAnnotation unpacking
7ca261cce0b5cdb5bcd31249002b35b948604b9e,Update JDT to 2b07958
277634685030ee9d6bc12262da06144cf64a7c9a,updated version string
44642d61cce6f3fee45699c821b8da38ddfed642,Tests more reliable on 1.7 and later
0419c01193d055b77a9ba2ee408a5dcbba4162b0,fixing for Javadoc differences in 1.8
ac48f780a46720f201ac893c8fbf9b1e17cc60d4,"add apt args when calling from ant (AjcTask)

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
66469244e4aa352f0db6d91854541a85d68e7032,"add APT test generating Java files

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
343c3129c672a4c13447e46001c00d532b39d6a6,"[commit new jars] delete step

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
9b06a745a7623a5925b67e8bddcdb135686f7042,"[commit new jars] add new jars step

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
e5e126f4dc2f608d4124604033f49ec699eadcc2,"-s arg is not necessary

Signed-off-by: hsestupin <stupin.sergey@gmail.com>"
c08f5da1c53fad069357327b2d3bf7b654b6b232,fresh jars with recent apt fixes in
14f0eaa577b2802473ac23235e7986762d955cd9,1.8.2 readme
fbbf0ce7acb1fbe59d614a7894dc42bb76a04dd1,Updated for 1.8.2
6395756b3bacb9edc5d38bf7b4e142e08f85ce4b,1.8.2 readme added to index
1da68158a802f47b42194dcb040be47526703ed6,fixing paths so that distro build isn't huge
1e2744d37cd2ac3438f8f1e6b8aae7c4a6c6b8d6,enabling AJDT to use annotation processors
62b5e69a857ef64c71c39176d3fadc51c308ea02,tidy up after tests finish
d929114a6659d64d71c47f7bf8f70e9973e5c857,442425: fix error on attempted annotation style decp
d0b8c7a1bfbc2b2f92b22bcf63598ab2442781b6,Fix for 444398: annotation style abstract aspect extends class error
e26c781374ac7afeaf8859baf4fc55d7dfb7b3a7,445395: more support for invokedynamic
102173fc11fc6648ed8f2283d3c5ad535e412c73,445395: invokedynamic in around advice
c8e951296c5f95e82d4c7c3f8eb9b0a647014e20,"Fix 436653: conditional aspect activation plus various polish

Modified test expectation system so it is possible to say
the test cares about one particular message and the rest
do not matter (prefix message string with '*') - crude but
quick.

Polished many places to exploit generics

Upgraded all the tests to work on Java8 - some serious changes
regarding ajdoc on Java8. Hopefully it has stayed backwards
compatible with earlier JDK versions (e.g. if using AspectJ 1.8.3+
with a JDK less than 8) but no explicit testing done for this."
34cff6034e44295417149fdb85dd2cebac8c983f,Fix 443477: remove pre-init from cflow to avoid verify error on jdk 1.7 later updates
48eac479f6526b41a5960fd1574020d0eb645532,Polish generics
170b1cef3f6f2c4792eb4c07c76ab19bee9daca7,Fix for 445968: caching
b6aec92d1ec73033130ecbb5552bf54ceb1cb85f,Use generics
dddd1236cd21982a07f887ff7fa5d484ebc3b86c,Fix 443355: interface super references
0df90e175b316d5a8e6189c2d89725cd8afd7bd3,Support for @RequiredTypes and abstract aspects
8cdb3719000767d8ed670631b1ff1920825eabbf,updated for 1.8.3
54ff2a442fbd2b3574e4547154b6b67644214d4a,make tests tidy up after themselves
cb32bead6100265a0b493ea14c5af0872241c6a9,make tests tidy up after themselves
9a1aa6dc87c29253f488535c68de7c4c4ff0e40a,Fix for building on Java8
e91fcabde7a38787ac03b5f98c6588aa8b3e411c,Fix 449401: thisAspectInstance compile problem with -1.8
11fba64f400694713cc6571c97e194eaf3b99f40,Fix 449739: support is(FinalType)
eebad3cf57ea68d2711d5e4d8449383b644ba70e,1.8.4 docs
df7c649b09aec710c62ec10b456e56bef1cf5550,1.8.4
bc35a4b7df1cb6562fcd9e3981c99ec6e0f1ceb9,testcode for 451966
42c2269b2995336ee80e802753d7a311edaf4b98,Updated for 1.8.4
934f0b86c5543737d4859131024cf73995fdc347,Fix for 451966: privileged aspects and itd on interfaces
ec91e93ac09fa9a347a8e8d0f99db3585dd93060,Further 451966: privileged aspect and ITDs
32aa13acb574980321acc80bacc936c9b2bf505c,455277: pull across JDT core fix for 300408
7569aad932296bce469e719e67a67a8d1bc8bc8b,"456457: unresolvable member fix. Testcode for 456801,455608"
b45ec3291d0f7380e747c59c30262fb5b68d1743,456003: == to equals
fa8938845f03855f59fff155b1e0d118e85ead7f,456374: == to equals
8db5893d03d4bdcdf7bcfe7409cd3b1b66dc406e,450634: support Windows 8 when computing best batch file format
aa57d565adae30b8a95efb5bb2e8f8e86b00c056,458660
3869f363bc6e473f4063faf2c296825283a21f1a,1.8.5 readme
c4d7b61ef3f9e5b54f3216b049a106f2523a60a4,very early java9 support - can resolve classes in jimages
a1cfe944a602101d144c8efd7df217ab20e4b9ee,462821: invokedynamic detection in hierarchy of aspects
0c9521ae358073133859d9bacbf269cee56258cf,462146: -parameters option on iajc
c6753a8aaf104ddd8e3d50ea493ea3ab579fc2fc,406167: cope with rogue generic inner type signatures
ad445b570dcd02f6f84013a0759619eca671a67e,"464749: Fix, remove Play class"
3ad0706d16c0068aca1fb5ef2d8ef1c78bd9e975,APT and missing declaring type in BTB hierarchy
f7ae7fb012e540252ff03e1a8e1dff022fb19027,weaving generic types
e7c66d3794b07c1a44df75b5baba4ac2937c6eb8,Fix 463926
ef453a5ff86b4cf84e0d7845f7233fa1f0b3907b,Do not attach INTERFACE modifier to methods from interfaces
066dc11d46731d5a60866dc1ded2dd3e3ef2fcd0,Bug 467415 - Weaver created bridge methods missing ACC_SYNTHETIC
e1f6d1fc52d329b018ed11c08cab5011f267c3d0,"allow reflection world to resolve generated types (e.g. lambdas)
1.8.6 release prep
1.8.6 pom updates
Fix rogue chars in javadoc
rebuilt with javadoc fixes"
6b93a91e234dcf4286b168421fd88484d1c855ad,"Doh, forgot 1.8.6 version in this messages file"
451a29f0fd2e55e7e2c1e54a6ae9d01a42b7b128,AspectJ upgraded to Mars compiler
cfe754597f1d872497a84ef9a14200936f858e57,"Cope with Java9 b74 changes

The jimage file format changed slightly, introducing
an extra level of nesting. These changes support that
new structure (b74)."
9f19c3d57acfe94b07fcb060abef1ad0e63fb4eb,Fix Bug 473555 - File descriptors leak in ExtensibleURLClassLoader
7a61a0d50d7371ef0a8e9904e8da7e93922fe8e4,"Support annotation conversion for class annotation values

Issue: https://bugs.eclipse.org/bugs/show_bug.cgi?id=474165"
5219b4af2c6ed2c477d91d3ea0a364a0e5fc3652,"Add option not to generate local variable tables in some scenarios

New Xset option generateNewLocalVariableTables defaults to true
but can be set to false. In some situations incoming bytecode
for weaving doesn't want them adding (e.g. android situations
where the bytecode is a bit funky).

Issue: https://bugs.eclipse.org/bugs/show_bug.cgi?id=470658"
532544cdcab41c478ed5bc061c925f1eefa44a93,"Update Asm to pick up fixes for stack map generation

Issue: https://bugs.eclipse.org/bugs/show_bug.cgi?id=452056"
e7f817ca3a13f44836116dca2380475f2c6b66c3,Update version to 1.8.7
415ef622d9435806ef0736341402772487deed23,"475728, 432874"
a9ea7010ab7075d934aeb49d48dec33d48b722c4,Bug 475152 - infinite loop during build time weaving when more than 2 aspects in hierarchy at org.aspectj.weaver.bcel.BcelAdvice.canInline
2233cf023bce0168435795ab5747dae59fbd9a0d,307147: missing joinpoints for itds invoking private methods
0095636d6bb3bf50d33104df7460f28ab3a76f4d,476245: compile error already fixed in 1.8.7
09b57263e817325b7e9505060e8aca9ecd464096,464604: ajdoc SIOOBE on Java7
83acbdaf168b82f227c6307436ef90e7fb71155d,"458871: dynamically attach agent

Patch from Alexander Kriegisch"
67448004cccae49b5dc05dfd71b6bb35e848e0b5,Basic 1.8.7 docs
12d0a8268abb5100d7982e5be13c6cb0f8cdbf83,Fix 478003: declare parents with generic itd npe
0c818ae090e583cfa49407a0af17d1f1498f0a1f,Version up'd to 1.8.8
af8a5a2ac9a64e6f48101d7442024a685450285a,Fix 461323: around advice on default methods
fd1888b49c109ad97d539060b61dd38ceb8d7151,Fix 482990: throw exception if asm missing at > 1.6 java
f4095941510acb644e66cd77a5d1936643bafe90,Add 1.8.8 testsuite to 1.8 test list
9b220fe52ad9bb117140692f7cf455d78a17be11,482945: obfuscated class file finding outer class
9de03491abb6af7f7539674a05044b917805c066,Cope with java version becoming 9.X rather than 1.9.X
87de66e902d8fa1818f9debd12cd5195ccdb19ac,Up'd version to beta3
d9029474077ebd405ec34d44913eed3051f2691e,Fix 484941 - NPE AnnotationDiscoveryVisitor
482995299ca0078f67c6a6038d3ce7e3745663e9,Fix 485055: declare @field failing for final String fields (see also Bug 327141)
fd87bd57bd3c0b1533cc2803f06e7569b2f363b6,Fix 470658: Corrupted Local Variable Table
c59054c24783df26d85990dcfbb86a4875f54586,1.8.8 readme
e3d5df726f39207ae93de93e4389dd004c93984c,Fix 485448: Building Roo projects NPE in AnnotationDiscoveryVisitor
448dc83571dc16c8b087e2d5e2242474c02ff819,Fix 486203: NPE in IntelliJ since 1.8.7
f194d50476030da1590250fc3f5e9d0d084128c9,"refactoring to use generics, reduce warnings"
ee41a3446c1b678dfc8afe5842c17c2c96cc49dd,updated to 1.8.9
9be47cc3a9ead4208d6247fcc5da7216c231278a,"Fixes for compile time overweaving

In writing a testcase for 352389 I discovered overweaving
just wasn't working for a compile time series of test steps.
This was due to a guard preventing secondary calls to
addOrReplaceAspect. Without the secondary call the crosscutting
collector for the aspect had recorded no mungers from the
original aspect because it was still using an EclipseSourceType
delegate. Later when it was using the binary BcelObjectType
delegate and mungers were available, they weren't collected
because of that missing addOrReplaceAspect call."
4bee355d22f5dd4bb2120ca725f0c8b9eb904976,Fix 486612: Can lose a super type bound when weaving a type using generics in its declaration
b54540d9a4843a46d6c2a25f6d2e7470648ef7c7,Fix 485583: NullPointerException in org.aspectj.ajdt.internal.compiler.ast.PointcutDeclaration
a17b28a1a9a0756cfc2181bf2b095650e186425a,Fix 487694: Race condition in annotation unpacking can surface through Spring AOP
f4c8433cb046e343b8491d04f0a10bd150924507,Fix 433351: Declare parents fails on interfaces on the inpath depending on directory structure
3274cbbc06a28ceea357acdd2538f4cf04e95d2e,Fix 487927: ClassFormatException if LocalVariableTable data cannot be fully read
bead7e3a57b0f41c49365b37a5eb431dc5faa081,additional diagnostic info
9216ef518ac4c9af48c559ee8a6966164ddbb237,Fix 488216: Load-time weaver loses class changes of preceding -javaagent
d496a970e3fa1c2bb84173c6b7f0cf57265db9ae,Fix 489596 - upgrade jdt to mars.2
dd331b08b39384132ea4aef15f4bc58f36086554,added logging
f61b515bc0cb2bc5862e48e326beb3da04031b7b,1.8.9 docs
ca093c254584afa382d073abe04144e968cdbccb,Corrected version for 1.8.9
9eae797dd9c96826c7ab23f1ed9d3c26552c5c88,Fix 490315 - InvokeDynamic.java:126 there is no classname for invokedynamic
318abf5c887102af8e51337a75fa910449df86b9,generics
d8ccdb732982e855a9d1a17c844a9d85a3a82866,Fix 493554 - Missing InnerClasses attribute for nested interfaces created by AspectJ
784906d2ee0cb1b432a9aff6973c12cfd865db6e,Code polishing and extra diagnostics around types and parameterized types
f8b86ff2c03a77e47e87573b59bc43c57cfdee38,[j9] Basic read/write of Module attribute
34f33f6948799dd57aeef1d8422f796fbd6d416d,Upgrading to latest 1.9 compiler
b784ef4eb56c4aa29d68833f964aa5148540b4f1,Remove diamond usage
386fedf3f7902893df8c4a0ba47dab60c6720740,Java9 jrt-fs.jar helpers
fa03c791aeb9a4d16c9f0d87e2fe6702e08e0411,Change to support new packaging of modules in Java9
92a9d99937725875881b691085fdbf3332917f6e,Fix classpath for tests on Java9
cc8ae26fe024c99bd4c6c54c9e64f0f804144349,change to latest j9 commit
285390b07b96b297ebe9f337e58dc2eb854b4a7b,ensure modules on path in build arg parser
07401bdd42d60e90ded263273ea856685fc9f4cf,add asm v6 for stackmap creation on Java 9
f282ad80a29cec905333caf13382a8aa9887df2b,create copy of 1.6 sanity tests for use at 1.9
9977d30072435fe0ae71eb49bfc28787c0310383,Further 1.9 changes: better handling of source/target
a1a934845e6086d43c87af993d4d99d55c974298,infra changes for 1.9 builds
87856659869b9dbf72e1b329986fb2d727cfad18,"Fix ambiguous binding problem on anonymous types

If an anonymous class calls a method ITD'd onto one of its own
supertypes (e.g. new A() { xx(null); }) then it can be reported
as an ambiguous method invocation on Java8. There is different
handling for Java8 that is revealing an issue. The intertype
method declarations are recorded in a member finder attached to the
target type (A in this case). When the local type binding is
built it gets all the methods from supertypes added to it - this
unfortunately includes the ITD method.  Then later when something
asks for all 'xx' methods on A, it finds the ITD method from when
A was constructed and an additional copy from the member finder.

The quick fix is for the member finder to use a set rather than
list when answering 'what are the xx methods'. If this proves
a problem down the line the deeper fix would be to avoid including
ITDs when the local type binding is built."
64c97807a20105644f604fe9b5263acdb63bd41d,Fixing generics warnings
de34df77ea7f7372894cf1e2352766118a798e98,Upgraded to new JDT compiler - neon.1 and a bit
611e04a9e1f3f2368f3ce3237b6288b119ac9943,Fix 500796: Allow for kotlin creating 'synthetic' local variable table entries
f33db67c2e3d840b19896f4ec45dd1078eb412dc,Fix 404345: another occurence of broken annotation building in JDT
e8be95bbfd291f93319d1a1e9920e44cd7eb7569,Fix 502119: InterTypeFieldBinding.java:122 - NullPointerException
b6f2b6337fbaf95b78c20862cd90f0e027509531,Fix 500035: handling target only binding in @AJ pointcut
821f7d4c71c1025dae6990a65fb9549a8530b1ac,added 2016/2017 to years
b5df397fa8f28c52bb02e489d0e1f821c0054a48,Adjust from nasty exception to messages
2c9e594e4c55230e120c3af55ef68ac8dcf309c5,Update to latest JDT (neon 2)
2365f957eea267377b703d6c35e678d55a87ae2d,"Polishing for 1.8.10 release

- reduced build level from 8 to 7 so that the weaver can be used on Java7.
- minor readme tweaks"
90aa179e2c0b2870d8678f8e9948bf631840c93b,508661: testcode
3714f91628b7c83e2333895370b7b9a3a160a8a9,fix warnings in build - support .isJava8 option in build
8e079ecde2315294e16de8304899d19acdd15c36,"509327: Minor fixes to improve the situation, wip"
ab4df7e110b0a4ddfc9cc1ec1653d3433c9605c4,1.8.11 test setup and wip tests
4243d0e9edb48b03746657a8e419944faf3c62a2,polish
4a07d09f36126bc829204644536ed29b864cef46,reduced min Java version to 1.6
6d6738cfece6328027916681e67e54225531db38,509327: extended the test slightly
7bcc14f620e9bfc7f084cc8e009344e8634c2ee0,"Add guard for clone()

clone is saying it is protected rather than public and so we need
to add a guard to avoid creating accessor for it."
400c36af1b739478a14f4bbca02dc39a4953de4b,Add version of jdtcore with proper APT support
001b055f3a9c7a6cc0cb9eed1fa826e13e0d1cf8,Add ability to recognize an intertype scope
52f101b0e05c04419a108e2341b47dc76a646239,"Add resolution of argument types

Some new code in JDT is using the information in here, so need
to resolve them."
4a6c01fe423b05e35df150cdd5a818d177bf046a,Corrected version for latest update
0d99d7bc78c5d076bd1c5ae06c00d2729b3f93c7,Adapt to JDT changes
df1ac897f85ae9050b226e4c82ab603156408155,adapt to JDT changes
dd4b87b91c025ada89ee76e623c49051eb23d5da,fixup tests for 1.9
618b262077737d09afbcc7cad9b825092c59262c,pickup latest jdt core
d159d8d96ba83edca8ca7aefdd1ad785912f9164,compatibility with JDK 190 build 175
951295ab099c5243640d4b349403289578ea5a1b,Upgrading bcel to latest J9 attributes
819962185c7e0cf809a31fc552aad8d8fc773b1e,latest JDT update for Java9
82a73926006bef5e9f42470be3edb450f8f1f488,minor tweaks to better handle J9
ee99996fb7f727d34a5393374b5661dba1ec9f9f,latest version
03752862ba3bc6ef132195673903dcf9109e8b93,Merged post 1.8.5 changes into Java9 branch
9b6febc8f10eca37e2cd7e644aba95f67f183937,rebuilt bcel
39b70af69b0b086f82da8ac032de5e5a5e0cdc45,add constants to list
26712118bad08e60c66237e6aa2cfbd6f275cbbe,Bring Java9 branch in line with 1.8.11 progress
834577ad971a2ad56335b4b83501c6af71ea945b,polish
9012c03a92a1fd9041899ac3f81113a426942bd9,rebuilt
64c85b63cac0845e83bc4a376dd08130064bb3f1,rebuilt bcel
f9398f0105fa533d3798025cf8a7302a8e08d382,Upgraded to ASM 6 BETA
b74846a946d8cb36c8d6acd6cccf9b28bfb36373,polish and ensure warnings set by group
0939402656bc26d1d2a4b58cdfa8eb1234195434,refixed now that target bits don't overlap with JDT bits
4b51c7a9d3f196b91e57357c170aeb6ae39ef95b,includes fix from aj_18 line related to 507372
b76f1c79df5479712c4354a02cd3a7d9803a63c8,latest jdt related src zip
e136805cb6db5243307cb6579cd2cfe84f87c2e6,tweaks to 1.9 tests
faac3d84e254d747076dc258f9a059839946a274,various changes to make more tests pass on Java9
ad514d54b1014bbfa085096419080c9fc6e1642b,add missing testdata
ab8339852515f04236d41b9af486ea9f0c50c6c7,Various changes to get tests passing on 1.8 and 1.9
a79709a8d52f49c93b0b7ab18c0a4fe84087bf50,more testdata for 1.9
eae468d794cf215e05ec80d7be7d09a88e18ebe9,Make the 1.8 slightly more tolerant of Java 9
b1ce395b9b55c74f9a6db9787ed9b382d022d710,testcode polish for 1.8.11
5b36d19d18b61ffbf8400deb36e3098e50910cdb,Ensure interfacemethodref can be built for invokestatic calls on interface methods
189eb5a07a3120ac1c89222d5e01e47c0b730f33,1.8.11 release info updates
6aa57fe2eb264274cd1fa255df5de9e97e181635,Rebuilt bcel with latest changes
e756597a317915e01a3123deacc93abbc1092be1,Clarified expected message
a664389a1df42fe4d910621a212464a8c720e4f3,"Reduced expected performance difference

JVM improvements seem to reduce the difference."
c39bd7440cbc3f0d845d3f885b9d4827af4d481f,per singleton field no longer final to satisfy 1.9 verification
d7cb30379a1da09c2a60a906816f6f6ba29ee103,"Added commentary on a strange bit of code

I don't want to change that code until I see more evidence of it
misbehaving but I'm having trouble working out why it is there!"
647ab7aba5eda88e8e0e762073da251263a7240f,"Better handling of classpath discovery

Some alternate behaviour added to work better on Java9"
e0cb106a33b8e4b8dfe0918a3b71b31f122b0627,"Adjusted test expectations for Java9

Annotation toString() changes on Java9 so need to include those quotes
in expected output."
94bd02aa881f9edd245cc1d73ca567623eed6449,"Skip test on Java9

Added test commentary to link it to the code that is causing the
difference in behaviour compared to Java8."
341f2261e3111539ea4c6ea925deee97c8814197,version bump to 1.6
7f629046739ecb763f266609257d4bbe7bb03ade,More actively print diagnostics to help future debugging
37d2d9fee30a34afc407fb69d9e310639a353e47,"Skip tests on Java9

Issue it due to split packages (see comments in code). Don't want to
debug this further right now, possibly needs a command line flag passing
to the JVM that runs the test, so these tests need forking."
af8a6482cb4fe8f15d54e98c37187e3e70279335,Activate test
7020be7deec5f90712959f0a7f7b9519b5a632c4,"Ensure version of generated class is correct

Important to ensure we generate it of the right version as it may
end up containing code derived from a particular class that needs
a be run with a certain level of verifier. In this case if
inserting invokestatic targeting a interface method, we need to
be using something later than a java 1.2 level class file."
069a891403e7b36519766400da91867ff47ddb53,Ensure version information get/settable
40fa8c710f916d3b44a8d133fc15b70f3cad813c,"Pass explicitly whether it is an interface target

If you only let it determine it from the INVOKE instruction this
can make a mistake when using INVOKESTATIC with an interface
target."
23ee46988073b56e041aaabc05ff9d436732d6fe,"Smarter classpath detection on Java9

On Java9 cannot rely on URLClassLoader being found from which
to determine classpath so use the environment variable. This may
have issues if loaders are being constructed that specifically
deviate from the java.class.path."
742fe8641e9982fe8dee4c4a8d7ccaf351eab61b,Update project source/target levels to 1.7
81031f0768ffc516b66b3d61964fb839be1ec91e,Update project source/target levels to 1.7
229d26961115c51aad86f36048a02878bfe8ba04,Update to beta 7
847c41e81122d3cf9ba6dd14bf67672aaef793d3,Update project source/target levels to 1.7
7c9da61f0c14e1e57058a37154e379af294930ba,Improved Java9 option handling
7df9ef96d3155110ede053578608ca97b3078f52,"first pass at using Unsafe, needs review"
7e72843ec68f666d8bcb78be9e27bbf00143c14f,corrected test now that compliance handling improved for 1.9
b279bb80956893cd8adc8b9236d86bc1ee81474d,Polish use of Unsafe
eff02a97e082afdcf07210631bac7754707b572b,polish - generics
245f369c3ef1945cfe92be90977017657126b91d,polish - generics
286504b70fd0e195cff74a6271c7a0b03c93f542,"Optimized type lookup on Java9

Took the code from the patch submitted by Mario Ivankovits
in bug 520597 and made some improvements to make (hopefully)
better use of memory. Some basic tests added."
5de8a570d2add37c85261d14b7d18b7ac4d21eb0,Fix for Bug 518698 - typo in AspectJ Notebook: excetution
e3721c8ca4d80bee07d96fc2fb292b782dd3de7c,Polish javadoc
50422cb5dece5859f5f2bff3027bfa33d8bf4cde,Basic tests for JImage access
b7e4aff1c15a0984d4ca772ffb82cdd9b0f6fa57,Reusable SoftHashMap utility class
ba551b09e4c873f30c0675193e70e0a0eb62c3ca,"Fixes Bug 525293 - Spring AOP could be faster

Multiple changes here:
- annotation unpacking is smarter and if it only needs runtime
  retention annotations it uses reflection and doesn't unpack the
  bytes to discover class level retention annotations.
- Reflection worlds are shared if for the same classloader."
849de5f2072cec3934ecaa0c123fa9549f5cd7ec,Latest build of bcel
62024412b0efe3fe153cf02e460785d7137876ba,Tests for smart annotation unpacking for reflection types
5e86980fa0248cd94012416eda7fee581245f52a,rebuilt internal dependencies
c28e943df7c1d1de9300a0209ec3cd2245a951e7,Fix use of diamond and update versions to 1.9
8dda42d0272eb4fdc157282880caf915a9e33ea1,added support to avoid weaving module-info.class
d6025b5d3d6d37b026e91fb1a32f3b214d881bf4,1.9 test changes and new module tests
7706e05dc5ea183b16dbf14297737418e9b3e3d0,Upgraded test infra to support building/running modules
332f3b9f46039745d98c8e2ef2ceff498c1945f6,Added automatic module name
8bbf29f6f15d97131b3ae2a5ac0da8ae449263cb,Temporarily removing world reuse - needs a bit more thought
487a7203c0d4a324ef9bf95a0bcb97721bccee16,Latest jdtcore - with visibilty adjusted for classpath manipulation
5c9f929872d93f5202e134b702a7e2645cf87307,Added automatic module name
58eda6fe744630a0007b48bd43adbf470483cdc6,Added automatic module name
e966a1fe5e1e6b10f546415378b862205448d889,switched from diamond operator
fb97139465471e7964062a7af6721be4592237a3,Added automatic module name
d56414bb670df56c2d98b4b5288a7b059ebee01a,Switched from diamond to specific types
923a1f48ceecfefbcf8e2bf46da71c38a70854d6,removed shared reflection world test for now
a3626e21102cba1c4c30d3872cfd0f5055b8f4f2,added module/modulesourcepath to compiler configuration interface
2b2dbe74aeee05f1e35341eff4685f7164464e79,Set version to 1.9.0.RC1
41a5b8077d1bfc1b7fd4fa614baabd0cd38e0873,wip allowing flexibility in test infra for using modules with subdirs
e9c279bc3e974f57053b718c895ad69194cd1dc0,Moved to package
a24d15f5e7538985ca9718d9e78635bb53372736,"Adjust how classpath entries manipulated for Java9 support

Prior to this AspectJ would discard ignore the ClasspathEntry
objects built by JDT and just work with the classpath as a string,
driving the JDT FileSystem to rebuild classpath entries again at
a later date using the string. This is more complex in Java9 because
the string representation was losing whether some entries came in
via modulepath.  ClasspathEntry construction for modulepath entries
is non trivial (since the module-info must be processed).

The new version will cache some of the ClasspathEntry objects (those
built for modulepaths) and do more work on the AspectJ side building
classpath entries in general. It now passes these entries to a
different FileSystem entry point rather than the entry point that
takes a string path."
f515b0cbaae3937be42d220c092c6e5a1fd22be2,1.9.0 update
5b4bb42e5c918dcf7b0f4c8142931bf564d1e9b8,1.9.0 docs
9308a8cbc1dd7531d45900bc32bdeee8fcf21705,Fix 526382 - damaged manifest.mf prevents LTW running from jar
98602bc67ccc288070530970f4474c0fb86ceee3,Fix 526381 - Log-Message for nonReweavableTypeEncountered does not include class name
c3142b62c00a162fdba5d29ab5176b510065d586,Fix 525972 - java.lang.ArrayIndexOutOfBoundsException: 2 (at org.aspectj.weaver.ResolvedType.getMemberParameterizationMap(ResolvedType.java:970))
dc89660c13270539cf9ff71d288086631a658665,fix typo
7f0dc0dd21115bfcc9d0ba830e57cc369054d3d5,"Fixes Bug 526594
Compile error: ClassCastException thrown: org.aspectj.weaver.MissingResolvedTypeWithKnownSignature cannot be cast to ReferenceType"
6765fdc34c775e99799b36d88cff8ab88dffc8e7,Fix 526734 - Incorrect generic override decp validation when binary weaving
d92319c43f5723d57887e09f2a839ee5b595fcfd,"Updates to better cope with future JDKs

The version handling in LangUtil has been overhauled
to cope better with post 1.8 releases (JDK9 and JDK10 or 18.3
or whatever they call it). As part of this moved
to treating JDK9 as '9' rather than '1.9'. Also removed
duplicate version processing logic and had that defer to
the one place in LangUtil where we now deal with it.

Includes some generics tidyup in ajdoc. More ajdoc work
is necessary for Java10 because it removes the standard doclet
(old style). However trying to invoke the internal Javadoc
handler in Java10 is failing due to module visibility rules."
636462fb9c40b77c867dcea2344737ab13331451,updated readme for 1.9.0.rc2
51bdd256c1ac67c5135e5f5c1208a532aefbd8d8,bump compiler.name for rc2
37814d4d64f187c60ee7996af4a0186c2303bf80,"Merge branch 'master' into earlyJava9

Switching master to the earlyJava9 branch. This merge
with strategy=ours should give us a common root so that
anyone working from master will be able to absorb the change
easily."
381ccd8684cc181451d44fda4e3044098367fb52,remove rogue println
d6378eeec8c1928462f8561d23fafda5012b790c,merged
68ed282a061b875e0a5be4e88d10f76d7d9a0bbf,JDT Upgrade for 1.9.0.rc3
031b2ed1aae5d49a3b9a393a3d0dcc01b2bbe34a,avoid <> for now until build changes made to jump to right java version
19cfe0e1caa611180f3513400c31507ad924cae6,Add missing cases to bcel constantToString
4f0f49924f6058c615c335a049af8442eebbc8ea,updated for 2018
0ba9fa19f7b14b70f0c02060a9de27085d0d62f5,Add missing key for invalidModuleName
1337e1a9a9491d147e90c36090149d95baa9ac68,tidy up comment
ed77301971aa745f2a37b4f7b9bf2f9cb4d20919,Add missing Overrides
83bca73bb98e6e90a9ef2778f1654df2e21e70eb,Add basic rename functionality to file step
9f84167fbca3c07fb11b761e8accf13bcc97890e,Add missing overrides
4d81108f378e12fa516acd6da3b8c1bf5c609c7b,Add intermediate test class that ensures the tests are on J9
187390be4bbc4e3755a5981e2e5bcc4dcac678d6,Latest JDT changes
2e09f8fc29bd3f2d84f807b39df76dd8e782d397,Adjusted to refer to ASM 6 non beta
d76bf4639626c9981c9fdf243833cc1215619295,New simple tests for buildconfig
0beba191741575756c5316bbbb27c2111a5d5d7b,more generics and missing @Overrides
a5495d637c74706d61e42d64db9c09cd474ba729,"Fixed up path handling, including implicit jmod inclusion"
53262b4d0ba9b01de0979fca222838dd846396e9,better handling of modules
cf7484b3d30f12ea64eb2a936e1cbd05f2da8291,more tests around module options
323a9c2b24df0aa92dc40137de98e106f9dc18ea,add generics
9e4928968907207a1a0557b1db8475690d921f39,Fix Bug 531179 - Add compiler arg support to iajc task
77390782355564e492fc0e33ef24d58dde14ab78,Remove modules from 'full classpath' for now
e44df275cc97a24d56dde0139f3a9cbdaff9032e,add generics
489a3246acb10f845d772b660f45a5a2ef21c75c,temporarily remove dodgy test
5c6d9b239f14d245c35eec6ea3650d290e9ccb9c,"oops, really remove dodgy test"
4d129674586cbf6cef232e5ba1a74e75708103b1,Updates for 1.9.0.RC4 - latest JDT
6b620ba3aa4b0c9d29560dfa42f8c67dcafb1229,Fix for Bug 531819 - Negative parameter annotation matching not behaving
7d47cba01043c93bab95b59e66b727580351e85f,"Bug#531694: generate more optional thisJoinPoint construction code

This commit introduces some new methods into the
runtime Factory class and modifies code generation
to use them (and to use the form of the LDC bytecode
that loads class constants)."
d575da7bbb675d6d45c1c319f12a4bb0f2cac20e,reset to 0 size to trigger it getting built
f8d82161e3b5c5ddcc6ec16540c3e1ab637bd04c,Add checking for env variable ASPECTJ_OPTS in addition to sys prop
a796ce3823c112a5de213320c0696c60be4443a4,docs for new code generation and factory methods
3a9d9ca0eac6938503acf6a92dfad1fc1c65d567,Fix 514062 - Failure duing stackmap generation of @Around
7cf155bdac345fca67a14d7c1552d78ff4a7ee00,533038: Clear some generated class entries during class redefinition
8054f3e003564386dfcf990a8585eb8f35c7b37e,Updated to 1.9.0 final
57f0cb10bcd7f5a28d3d40796e3924a89c0877d4,Updated readme for 1.9.0 release
9d63ec3f8a2654ec7ab78ddb7450cc42d3462e37,Fixed release date to 2-Apr for 1.9.0
b2cb18ef127097ad2c258b9d061cc70b5fb19432,tweak title
836beab108ef4be8b59c1ad9c8596ce959bdf1c7,Support Java10
3876a7dfcc371e3be43276c58bb792a09ed23c40,Working towards 1.9.1
e5300c899245d98cbb97327aa6a879d379706607,Rebuilt as a DEVELOPMENT version
a024df9675409344ecdf232d6ac3a283602323d5,"Initial cut at bug 535086 - pertypewithin and non vis types

In this version unless you specify an aspect is privileged then the
pertypewithin clause will not match types not visible from the aspect
(private types or default vis types in another package)

Debating whether to change this to not require privileged."
8c6b3ae13b105ce9bb9559de0ee4752cab5ba81c,testcode for 535086
43fab006f4e9d6d0b0c8e637d3aec101c3688fbb,"Fix some generics warnings, add overrides"
a5c0fc936fbbe65f31339395aa8e369ffda7b136,537825: Remove FINAL for cflow related class elements for Java 9+
deb181f01c43d03e41b06cddf383503bfe943d8a,Fix 538393: Allow for toString() to fail on some classloaders
8aeb774d210a42240f2d6d89dd89e947a084fd7f,Generalized exception that might occur
f6d9aaaf05eca3aaf06d3a769a83f302b0501dca,1.9.2.RC1 changes
749b9cb3ca8e4680fca4252b0d782b7154eccb75,"More fixes for 1.9.2

- update to more recent JDT to pickup Nestmates fix
- bcel updated for NestMembers/NestHost attributes
- testcases for nestmates"
95a9c5db0c9b4b0011f12eb0df93beac5278aa0b,Up'd commit hash to correct one for 1.9.2.rc2
46a1172aac0b24ccbcb38083ff66d8e8e4ff2d17,Reverse default - behave like 1.5 (support annotations) by default
f92ea896c1978011c827ed0a2ab0fd658fa23bb2,513528: Fix use of lambda in ITD
c2b80ea9e24eb61385eb69e426650773cf5a7c7d,polish
a913ec7fb308c794bd53f33f1d5b7163d144cf23,polish
ef7411136acfe9dd531d8e9faeb439025cd3c3c6,Remove class used for debugging
b0bd12a6f1efa815445ba3c9356d9781b4f1baaf,"Change the mehtod name ""containsField"" to ""findsField"".

The method implements finding a field object in the 'fieldsList' with a given name. If found, return the found field object, otherwise return null.
Thus, rename the method as ""findsField"" should be more clear than ""containsField"" since ""containsField"" is prone to ask whether the ""fieldsFile"" contains a field or not and return true or false.

Signed-off-by: Kui Liu <brucekuiliu@gmail.com>"
5eea7c541aeb642f0c35cab2c6a16cec779b8b72,537678: Lazy initialization of jrt filesystem
de731d49baf5d37a835da3e0140625f3b5101ba9,polish
41a27118c9eef2033baab0dfce3fcb1cc5dfde1a,better handling for 1.8 modules
10b2f3bfac7e4de7f5620923f631b2e6df5d5cdd,polish
28dfb7737d25788e12db01555641f9c2dd31521a,typo reported by Emmanuel Bourg
432d4845cb8e460b9e46c2a422179416728289ad,polish javadoc
73fda8dcbf5db6739654848fe4a0ec29ff003f7d,adjust to allow clean merge - attempt 1
a1953b55458304e99b90124925c3b7c4aa88ebe3,"Merge changes for 536782

Changes contributed by Manfred under https://github.com/eclipse/org.aspectj/pull/5/commits"
675be223821fad1e8953526d05fb06c58d580cb6,wip 1.9.2 readme
2bcf229024608c411d8effa248e63c8742b35508,Minor tweak to avoid NPE in BinaryTypeBinding method source location lookups
c0c675321782f88aee7828c40ec0776bcb30e527,Add missing .classpath change
29996dac09ab6394357dda48d83bbf4a3c636ceb,Exclude delegation loader on JDK11 too (it has been renamed)
0a552d812d962949be88b9d1bbab558dbebbca54,polish
49ea3fa06fe01630938ccff53bfd2f83ea3d60c6,polish
450c1fe05731c1084bfabb22d7595f39ac19b8c6,Fix 541325 - Support is(AbstractType)
b21a59365261d248f36c77446ec2b011dffd9a52,better infrastructure for checking pointcuts terminate correctly - inactive right now
380ef0ec470fcf02820bde4d22d3bd1a9efaf999,Include JDTCore fix for APT classloader closing
5f594722aa770bd1cc763a313336c06bc19a8f7a,Diagnostics for https://bugs.eclipse.org/bugs/show_bug.cgi?id=543023
a11b07517aa85fb5c4e856f475050a4136ed36e6,"On JDK11 call the defineClass variant with a ProtectionDomain param

This alters the defineClass used when loadtime weaving and defining
'extra' classes (e.g. closures). This change causes us to call
the defineClass() method variant on ClassLoader that takes a
protection domain, so it should share the same protection domain as
the class for which the extra class was generated.

Issue: https://bugs.eclipse.org/bugs/show_bug.cgi?id=542421"
3abc52595deac0e9cd4a427a7eb6fe81170dc618,Cope with unusual local variable table per 539121
1a819be178964e0ec0c1caf5c515e3a9b9aa0df0,"Dig deeper to find WildTypePattern in DeclareParents

The existing check crudely only checked the top level, failing
to find nested WildTypePatterns.

Resolves #542682"
98ea8917c608861bdd14042fdb435a15090b0907,1.9.3 snapshot updates
c194226895d50a9620cfe272e4e269625fa4bfd3,new infra for accessing weaver state info attribute from tests
f6d0013eb2cddf9946ab07d0a4e129cc9c0869bb,389678: overweaving test resources
8755f774ae286eefbe3826dab592f1a22d0f6b95,"389678: Better support for overweaving

More testcases for overweaving and better handling of WeaverStateInfo
to avoid the dreaded problems deserialized the 'special key' used
to store diffs.

With these changes once a class is woven via overweaving we switch
the diff we store in the weaverstateinfo to 0 byte array (indicating
overweaving happened for later weavers that see it). We also stop
writing the special 'key' into the attribute and avoid looking-for
and attempting to replace it at the end of weaving."
5719d79c2b162b6e09f9f6df18364b5cdbe76d87,543657: overweaving declare parents fix
02337b3edca74530cd523f099915757a29a4fcdb,overweaving decp/decm tests
6245346ab0fe0f19db977c86389e31517ed068ec,mavenized util module
68e9bc60f98ece8557eb6499326644a956d2dcf9,mavenized bridge module
27f3a1ceb20f5515962151e57dca7c3798e71f48,mavenized testing-util module - wip
74dcae875f1c89b7e3fa2ffa6b524a3c187a597e,mavenized testing-util module - complete
afaa961b294eca20fa9d54359c53a1de2d3c41fd,mavenized org.aspectj.matcher module - wip
9803f22ec4337779057f4ec2ace35f2d6483d6dd,mavenized org.aspectj.matcher - finished
d9cd0d44e8c42f06e13b033ae1cc269d3e7f7c29,mavenizing asm module - wip
44f6584f48c77f58ad80115bff0dd637831df939,mavenizing asm module - finished
a303931ebcf72494bdb75395b350ff640a0ff1f3,mavenizing testing-client module - wip
38a5e6c8f6ac969a71b91de3a572fdcd4fb22b1b,mavenizing testing-client module - complete
e01e4369b4c60775d679d8de678f54097fdc3120,mavenizing runtime module - complete
52c4cbfa1b8bcc0d2c7ac50c77203e516b335205,mavenizing runtime module - merged in aspectj5rt
9659cfe976a424a20e7b840152a13d266e794226,mavenizing bcel-builder - complete
7758d629f9bc6818709d5ae97bbb98a27c908f75,tweak matcher for weaver module requirements
d3da67c03dc7d19782d60d82fdf8fc7c7895280e,mavenizing weaver - wip
789efd11e9057ef1de2d2b8879c1ddb6e10a5fab,mavenizing weaver - remove unnecessary files
c5af77504b05532946434489fcc2f741e286f9f4,fix version
b30dde96344652cf514342b0ca597e37fe9181a0,fix pom version and minor improvement to classpath calc
38a19ea6a0b864447883328fe1103fd991a308f0,mavenizing loadtime - wip
a46d7f1cfdf9828116cdd1b065dde35bd5f06cb6,mavenizing loadtime - wip
8deb80454be1ea220f7d2296323fbb29a6f088a7,Merged loadtime5 into loadtime
6fa7ee1a67699219bf91339582eff594f6bc67f3,mavenizing org.eclipse.jdt.core - done
c17032a561dc4b7643c2d1ee667482c18093b6df,mavenizing org.aspectj.ajdt.core - wip
e770fb965370b4c4daf15b3e0f03b8ce77f75c0c,mavenizing ajde.core - done
be07484b4a9da8ba8399080c182bf095ba62a2fe,mavenizing ajde - wip
e8436048b1667bc2d1d7c9a48070fb73a281daf9,mavenizing ajde - done
89739bc1ff28a18fadcb27dba7fd26d27ea7b343,mavenizing ajdoc - wip
bd6a4b2b2fc1633ff2e64cc2d61c88918cc8c1ea,mavenizing ajdoc - done
6572625c98dac283d6711e644b7320a02a38deaa,mavenizing taskdefs - wip
06733da053901eeee363a05f8fbe6b9c27056a77,mavenizing taskdefs - done
2ea72e189303b144ac28fd665c667da984a56a0e,mavenizing ajbrowser - wip
b4e0f23248e09079f646bcc4f036e3c688b93f5e,mavenizing ajbrowser - done
cda73a6a5864b76e252ed0d3b69ff4b55a6def4b,mavenizing testing - wip
f4d5e9485ae910220e06b0b6c778587ed6b4ebb3,mavenizing testing - done
24676e3ad3d20ad7d9e7ce1d3e03347883c1ddfd,mavenizing testing-drivers - wip
d60de8d0b3e62eb36b612a824bb9345d865c0155,mavenizing testing-drivers - done'
2b24e7377da7c849fe7f9f4fa06a701664f9d27d,mavenizing tests - wip
65203fe6d322fdea276a0d6d2943cb6fa39aa9d1,mavenizing tests - done
3070c95f8c61802fda781c8eb21b333ee5fc2c19,various polish to previously mavenized projects to support newer ones
8fb9480558a7490563dc1acb7c4507f697ed92c0,make paths maven aware
762b9c287285fd447dfeb17eda6ab65e0143b39e,various polish to previously mavenized projects to support newer ones
1f66dac4c201c23c624cff7cf0751c2aa811e27b,various polish to previously mavenized projects to support newer ones
b5a9f23c80222f8d68985173c50016ab66c69115,various polish to previously mavenized projects to support newer ones
241ce080c1c4a625ebcab1108663b74271a8eae1,mavenizing run-all-junit-tests - wip
bfd990aedf2a91fa83e8d2221a9f448ce77d84a4,Add module tests back in - but streamlined
e98f07fb4dada3f81706cf3a7481aedb252161c0,Add module tests back in - but streamlined
ed7044613ff4efb0fb6947f49a0b506e0490b410,Add module tests back in - but streamlined
8fd7e45c452bbf22e10936a559abbc7e033ddb23,Add module tests back in - but streamlined
155495c4d85bbb26bc957861eff69c70ad07eb7a,Add module tests back in - but streamlined
506bbf311a82dc75075548b70504a2ac0c18906b,Add module tests back in - but streamlined
8f01a3063e2fe84e9ab7a8730a88c191d878dead,Add module tests back in - but streamlined
b358a5d95e4e54d47e1e3e4a98745607dc848d81,Add module tests back in - but streamlined
ef3480573b33191f91d378472fdbee4272dfa0e0,Add module tests back in - but streamlined
8f6b407d531396d85bdc34f08e251efee4cd1d1f,Add module tests back in - but streamlined
ce2634b7a92f2f9a2b2b5a00f361789a4efae1cb,Add module tests back in - but streamlined
456c020a72ae6c83e84e5832210acb6d48eb7d3f,Add module tests back in - but streamlined
6311f723a282acee125eb467f55c1ba6cb10a04e,Add module tests back in - but streamlined
822faa5c49c6df66898968e5bd4b14d5c1edf98e,Add module tests back in - but streamlined
546a876ecc7cc3d20b4553b06b2cef16c3130b6b,refixed name and changed surefire exclusions in parent pom
81eac679eb89859ee11f0fec7097113ec43d42d4,Add module tests back in - but streamlined
593e1c772c28577a414c05ae218574b6df88f3e3,Add module tests back in - but streamlined
5eec03130695a6b918792ec7b87a2f69a20ed778,mavenizing org.aspectj.lib - wip
aac7e58448f0e5a961075baca670dac1ae53ce98,mavenizing build - wip
45a255c029a4ea6e67d18b43593b36fd53d146db,mavenizing build - done
ca79c1d20c9a45376286aa781194f9ac5047ae7c,temporary fix for jdtcore deps to get mvn clean install behaving
fe22dfbf7029248eb8a55f94572e92ea14419b6b,Able to build run-all-junit-tests with maven
bda75bf79a058acc8e71449d7f77d83a82f4a5bf,wip - packaging up the artifacts we distribute
9b414afb3b8ad686a127306900c12b8445ea0dd7,polish javadoc in runtime module
5634171540aac3c52c40cff6cb1c22fb1ad66e6d,move resources to resources tree
f90f899aa718fe326cbe98fc6f3e30b7aa516524,Adjust generated jar names
0f08737d9e960b1e40c9504f66a312d80f1178a3,removed manifest templates
f36afdd5c9939c78becc409ef2f755d2c613c7ad,maven wrapper
6b63a80806dc6016a1fb9231a5912844a27336d7,move aspectjTaskdefs.properties into src/main/resources
5a2463c0d9e391cb28e826f2e24353dbcad20cd1,Real aspectjrt creation and packaging module
505e45c27d7d20f16bb2248a0d79a28505fc4ade,renamed to aspectjrt from org.aspectj.runtime
66f6e011d251d84250c562950f491cab31af0ad3,add aspectjweaver producing submodule
635f0ed47ffe11e93d96e4d24e4411eedfa1ddc9,tidyup retired modules and add aspectjtools submodule
ce1533d8493277d1111005e890f076ef90b32eab,Fix getSpecFile() to work with URLs and adjust installer unpacker
c89830fe880f329b6289be06314684edc094012c,tidyup
f47f032abaaa72bfdb694c11075a5a97c56ca25c,tidyup
704a0ac3321dd3bd3f56e52216de0643d0dab748,tidyup - last bits of maven stuff
de2f7c753232c9bb4c8e602ac841206a0b72260a,Fix version tagging for info strings
bccc86c25ab72358697dc5bc1185fc836d154125,ignore problematic lifecycle for IDE
eeb2111c00a1229e443ca8585d830c56703b445d,Add note on eclipse import
2d7ddbfe87a2469e66132749641d9ffa309182cd,better test tidyup
b1772c28d0f025525b9baef62ddf948e39f60c11,polish
237503e895830c57e27877ac062fdeda9a773da1,add missing license
b1dcf8207f328c91ad3ae462d104f24854f67856,fixing test failures running under eclipse
2f2ae93c68d45f929ce213e3175940aada4a3350,polish - fix some warnings
90c187454f1bd6af5d7e591cefd36861fd4fb342,Testcode for 333274
9ae43a52cdf549a4c29f3c0c73b46918d5a76f8d,polish
044ddbb7f93e7234cc849e3092454e9f3d9ac3c3,extra util for finding suitable files with mustBeJar option
35c4a7d9d8418e100fe9338b7191a05a9f073bdc,Adding ProceedingJoinPoint built in type
b858c788515524c2224165fc615638b75266954f,improved test harnesses for working with runtime
8819fad9f47fe572c45e601d7f321fe4ddf50b9e,333274: more tests and fixes: nested @Around advice with proceed
59177efcaf7fe9e9570ec337393191bbecc495ec,windows fixes for closing jars
f3623cc56e6b6bf03164e1b5cd03a31be5bacd47,windows compatibility in tests
febe314b376fbfa093e2fa9b0cd6819c1a071dfd,fixes for tests on windows
e1ced25c962794111ca4579ec1b70316e071282d,Fix path separator for windows
eca9069c8f670a2ef29f9be97c029810165110c2,extra check...
7d2e6a2aee648599c19a0fb4d84bb787704b3bc2,remove unnecessary classpath entries
370f291c359cd159c5f3f0abd6e9e53e81234a07,1.9.3.RC1 final bits
dbb2c59fcfa6837f1fde9e0c1f0d04751c9268ee,1.9.3 inclusion
0e2c95a36900fe913f5d768e7f4632034ddf005b,Updated with Java12 support
c53bdfe303c4d0187da7859e1f18d8c7577f7828,polish for 1.9.3
154c12703a761b2dc3864753cfb63571643c0be6,pushed versions to 1.9.4.BUILD-SNAPSHOT
cef7d981ed3df324e37a20442f6bd0d1bdda3def,Fix 546303: correct entries in weaver manifest for ltw
2db13f12ae14385abca81f2c32e63e9295e5dbed,Final bits of AspectJ 1.9.4
eb04dcf7a182951c37ff6448536c9f815a776d90,1.9.4 POMS
7aa5fe4edc27b77b2d23d1dc72fe761cbef38313,polish 1.9.4
01f7d8ba8e3ff34ffacb95ae25787b0f0ce9f1d8,Update to 1.9.5.BUILD-SNAPSHOT in poms
ff7f5a5441d4e2e8744a10c8f7c733fa208e0b89,Fix 547808: npe regression for multi @Around
c2fc1564f0280e6e97a83d4a5f0ce21037740dd2,Fix 548860: don't pass lowercased string through
08861eb882ccc2c068411c8443d7329d5549d19d,Fix 548785: Check level is >=1.8 when looking to skip inlining around advice lambdas
74e0b8b1775fdd1d5cf07f30e3f0e78061242eef,polish
8c0ba7e6a60a79ba8e8689be76afa68f08012fc5,polish
589e3dc730d57c4d9c63fa79db97653a8e30c898,Fix Bug 550696 - ClassCastException during load time weaving: InstructionHandle cannot be cast to BranchHandle
af640d2d8809a76f87519e09b5db1f3ce9a251f7,Fix Bug 550290 - Lack of TypeSafeEnum#hashCode may lead to non-deterministic bytecode
226df51a0cf61f8a1de5d1a7973de7f2fb7c0ff4,make test a bit more reliable
d8821e28d6e4b59ab451dc166e96698646a6e750,"- dont't weave synthetic enum helper method for switch
- add test for switch on enum with around all advice

Signed-off-by: Semyon Danilov <samvimes@yandex.ru>"
aa4e441fca78dfc36f6a78c0f7b922718f352b04,Moved tests around for avoiding weaving switch infrastructure method
feacb252cb69a1ae7b0faeb0951847346f73c61d,543657: tweak to use current data rather than last known packed data
7215c4599ea90b46b2712838d7af36a796776567,Fix Bug 387122 - threadlocal in weavingadaptor is potential memory leak
066840a1a51e216d545f185554ff2beb13562417,Fix Bug 551084 - NullPointerException at org.aspectj.ajdt.internal.core.builder.AjBuildManager.checkRtJar
41c7347b064093b531b04004d42665582ba0fff0,Update to an ASM for Java13
2704db20ecca12d3bbe514a4f7b84d297937de86,Java 13 support
dda1ef9438ba73f35f9c50359705aa6e48c342a6,first textblock test for Java13
accb931da432b000c34523fcc1da20e43d701a0d,552724: fix typo
4d6668df0ce64175c209333705f457ee47376ef0,Fix 550494
30bf21cc26933e2e0b1c21cf024b77f68c5b5f25,fix comment
ded957880d146cd57ab73b9ed254882d6c4e855a,Debug for 551732
823f2522f150a78c20fe79e74a7e8849e4a37ef0,organize imports
282c5d2d07b013963a94bc94ad3c7331147610b6,polish
d709a2a55e51f63dff9af02eae4b6fe701286eb0,1.9.5 readme
2dbe85d6a38f613d56e6ef544d36dbc33df2aa9d,polish
355b79ad65fc6af650b1d5d6253401b8edbff395,1.9.5 release versions in poms
a3e5e4104ff31c9f06d90bd0f6876bef305831dc,Move to 1.9.6.BUILD-SNAPSHOT version
cc88d52fb6c60fbc79a59dec61365b7864baa942,polish
c3c07fdb4b93cc483317d8a314233f0b9dcf4d8b,polish
17026e35243f229c2e3c07c292f2caaac65503a4,polish
4471ba76ac755b504d99e514a1cf5a375e7d02d1,Include JDTCore for Java14
322aa52b55c4dd2a89a6162809a99072e08f0932,polish
d7216bd5f7070edccaa6455bad9e6b8b50284cab,Corrected links inside poms
ecc1c4706d489a25067e6c1ce2a58c42603f27fb,Fix support for -14 on command line - was missing from JDT
f2c96de9622b1dbe4ba762dbfbbf4737ae959ace,Exclude some linux created debug files
ac787bdd1ad423b501a5c91bbee179738470fb95,"fix tests running on windows

This caused checkRtJar to return an error, which led to some tests to fail

Signed-off-by: Eli Finkel <eyfinkel@gmail.com>"
74f05309ce6fd6126e6e415a6f5c69d5a9e14f99,"Reorganise + comment .gitignore, ignore IntelliJ IDEA projects

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
fdd79adcffd53c15ec9664237935bc47179e923f,few more bits to ignore
8fa573040ff3e4caa6d0e2a1cf63bb0c62dd3ad9,Fix for 558995: NullPointerException at org.aspectj.weaver.ReferenceType.getWeaverState
4803a9abdddce387188640308e9ce1d7b61471a8,Added basic ThreadLocalAwareRepository - groundwork for 561819
7e0b21d1326d5180ba64cfe4b0b3c440e5fd55d8,Polish
869b7cccd343d3771964f0f198522a0fac64d808,Fix 550705: tricky intermittent verify error
ebc1e849d3ebfb67645816f356e4b99b4d22196c,558995 testcode
4f6619ca4b0a5c0b86bd0024fc618c5303567b38,polish and new test for 550705
199aaba33af3874bc5b27a7af2ac60a2dadbeab2,Update ASM and fix packaging for matcher artifact
3d7bc042885bb01697fbd5004fe36cf6c274cfea,AspectJ 1.9.6 final bits
9187ffd3f0d9f8000f4e38c350dbdc0bec5723b6,Fixed a misplaced <para> element in the Docbook documentation for ajc
1dc58988d1b1048b268bd3d9df870b16ddea8045,Rev to 1.9.7.BUILD-SNAPSHOT
5c82acb58e2d665a46529290ae85ae717cbf2bd3,"Fix serialVersionUID initialization for java9+

Move initialization of static final serialVersionUID field to clinit, since as of java9+, the runtime won't allow setting final fields outside clinit

Signed-off-by: Eli Finkel <eyfinkel@gmail.com>"
c3289ab86bfb2c97cf34147239b3dde46de92a7c,Polish
72194b7982ddfa8e9864d0a9934905bb76b90f33,"'for' loop replaceable with enhanced 'for' loop

Reports for loops which iterate over collections or arrays, and can be replaced with an enhanced for loop (i.e. the foreach iteration syntax).

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
a508fd5315c6330f2057c219aebc35b15d0ea497,"'while' loop replaceable with enhanced 'for' loop

Reports while loops which iterate over collections, and can be replaced with an enhanced for loop (i.e. foreach iteration syntax).

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
c1c373f4278426308689db61f7758185e8f0401b,"'String.indexOf()' expression is replaceable with 'contains()'

Reports any String.indexOf() expressions which can be replaced with a call to the String.contains() method available in Java 5 and newer.

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
f33600d4d5507f3aa02d7cacfc34fe910d6b858f,"Unnecessary boxing

Reports explicit boxing, i.e. wrapping of primitive values in objects. Explicit manual boxing is unnecessary under Java 5 and newer, and can be safely removed.

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
93ce335dc0dad2f420d1b7b1d426ad7bfa3574ad,"Unnecessary unboxing

Reports ""unboxing"", e.g. explicit unwrapping of wrapped primitive values. Unboxing is unnecessary under Java 5 and newer, and can be safely removed.

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
cacc9d5602b7bbe6192d5ff1351605dc180cc108,Add a debug flag to workaround issue until we can sort it (565713)
29f947156e58f3f0c60e721d42e7f3e98de7180a,Merge branch 'master' into feature/java5
b6eee2e1052116aa22ebbd3c2baf05c2b709bee5,"Merge pull request #1 from larsgrefer/feature/java5

Update the code to Java 5 features"
e1bff9a5703baf17ec650b173bdfe776bf87125f,"Use the diamond operator where possible

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
0377c66272ec5375bc5be59460880fafcb60b4f3,"Create maven.yml

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
85ccda9262dee2446eb53ceb5fc07b1d36ff6630,"Fix Testcase

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
cd2eedb6f5684e47c0cefa6c2f4bab9868b9e772,"Fix Javadoc generation on Java 11

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
a9c5b9f80cb565cc960632b7754a9f00646972cb,"Merge pull request #2 from larsgrefer/feature/diamond-operator

Use the diamond operator where possible"
3e7baa39cdb7af2da7a474a70e12512aecca94be,"Merge pull request #3 from larsgrefer/feature/github-actions

Create a simple CI Job using GitHub Actions"
242631cf8cc8480a065b260fbaaea001008064e2,"Fix compilation on Java 11

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
621169bc7e1ddce8f542268510078928741b0ab9,"Print used tool versions

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
551039d920aab19cc0ed926b5372b3c0cd9796a2,"Test more Java versions

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
31d2091f89ac5bfd3be705b7912ad6ea8b402f88,"Fix JRockitAgentTest for Java 9 and 10

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
60b7a300df7068430ec193d2a52c6876e1891afa,"Fix compilation of JavadocRunner for Java 13+

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
4f027bd94fe71756894f13a4a82123eda4f28b98,Adjust ASM version number used to work properly with Records (J14)
d7ba05ce26dd8f72c1d0695ece2cb03d035e3cf9,"Remove checks for old Java Versions

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
1e2096910fc68c01f0be634721020ceee88d797c,Trying to reduce test verbosity
f70aeb5ed94ccdfeaa8ab7b1260a6fcceb490b5a,"Always run javadoc using the ToolProvider API

`com.sun.tools.javadoc.Main` isn't available in recent Java versions (13+)

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
05f797adde987f614684cb70999be99c549d6826,"Simplify checks for Java 8 to true

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
26d18421daf10c69858b8a5745d9d7473fac9981,"Merge branch 'feature/simplify-ajdoc' of github.com:larsgrefer/org.aspectj into feature/github-actions

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
7e8259b0d477e65e5f957dd1ee86eba270aca267,Making tests behave on 11
e5c41da8638f924a6ba5ed4acd2da45784412fa2,Attempting to get J11 build happy at github
b0b2f50a27499227580852496964e037e9204f22,Fix up tests and reduce verbosity on J11
6a9b1b729373d774423f45d179cb01b40812898d,"Merge branch 'master' of github.com:eclipse/org.aspectj into feature/github-actions

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
dbbbac8dbd25a19c56568623b823eba4e6e2906a,"Merge pull request #4 from larsgrefer/feature/github-actions

Fix and improve the CI Jobs"
17c4c44c4cd0051b2a0884cd70bdbd9ac3d15b0f,Merge branch 'master' of github.com:eclipse/org.aspectj into remove-old-version-checks
91ad0de3701771b94ad96f2373f810f701e78c21,Test on LTS versions and most recent non LTS
2722e60770c5418fa3cb372b00eab3eba53e037a,Merge branch 'master' of github.com:eclipse/org.aspectj into remove-old-version-checks
54f35a5dd028ae9603eede66b9a0b0a75f68c291,"Merge pull request #5 from larsgrefer/remove-old-version-checks

Remove checks for old Java Versions"
50e1d8e5a1c66197dc7aadc4a12c8abf294e673e,typo
71d2ce678f653f93d5cfebc9f442c956d45fa1d6,"Add a basic .editorconfig file

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
28374bd02b647c8e0314227913a3a4df71d76f9a,"Use the Maven Wrapper for GitHub Actions

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
8fb374ceba1832e5beb77f707f5709ae32d04907,lets have maven fail if those tests fail...
9cab74717265239e03d1aec53c5ec60a6d7d9718,Fix the serial version UID contribution to work properly
5580db6c5c28eed18fbee4b9b889ebb554baf9e7,"Remove project.parent.relative path as ../pom.xml is already the default

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
574dcd8478225de2fd62cc8ad09bf99c085341a4,"Remove non-existing dependency

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
a85308ec103a69a86a8e02adf02112d472b00568,"Manual array to collection copy

Reports the copying of array contents to a collection where each element is added individually using a for loop. Such constructs may be replaced by a call to Collection.addAll(Arrays.asList()) or Collections.addAll().

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
7824e7d3045b9db278a96a21e69110976767b32e,"Replace List.indexOf() with List.contains()

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
efa2e5ce8c9cc2d20ab7479d1caa4a2ae1de6e8a,"Collections.sort() can be replaced with List.sort()

Reports calls to Collections.sort(list, comparator) which could be replaced with list.sort(comparator).

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
d66bec041a857bc3076a20dfeb1aa6037b020db1,"Manual array copy

Reports the manual copying of array contents which may be replaced by calls to System.arraycopy().

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
2debfa05f43a6fe71e7bc141f4f78c66f85c95b0,"Single Map method can be used

Reports common usage patterns of java.util.Map that could be replaced with Java 8 methods: getOrDefault(), computeIfAbsent(), putIfAbsent(), merge(), or replaceAll().

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
3641f1626df6b9b1c11dd3f16b01a01495f4662d,"Collection.toArray() call style

There are two styles to convert a collection to an array: either using a pre-sized array (like c.toArray(new String[c.size()])) or using an empty array (like c.toArray(new String[0]).
In older Java versions using pre-sized array was recommended, as the reflection call which is necessary to create an array of proper size was quite slow. However since late updates of OpenJDK 6 this call was intrinsified, making the performance of the empty array version the same and sometimes even better, compared to the pre-sized version. Also passing pre-sized array is dangerous for a concurrent or synchronized collection as a data race is possible between the size and toArray call which may result in extra nulls at the end of the array, if the collection was concurrently shrunk during the operation.

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
2409bcbc7c9606b055e23f52d688eecda84351d6,"Redundant Collection.addAll() call

Reports Collection.addAll() and Map.putAll() calls after instantiation of a collection using a constructor call without arguments. Such constructs can be replaced with a single call to a parametrized constructor which simplifies code. Also for some collections the replacement might be more performant.

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
ea517776902a0e7def31f8b38f1cfd654ba2c118,Fix test on J14
639f5030e0391e831138f9786cf831c3374449e7,"Weaken Collection declarations

Reports on declarations of Collection variables made by using the collection class as the type, rather than an appropriate interface.

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
591afb3a599dc2b3dd5811c6c7e74e7e5f3c5c01,Reduce test output for incremental comp tests
dfa04a0104f7b0d7e59c7fb3ba5f43b06e49e29f,"Merge pull request #7 from larsgrefer/patch-2

Use the Maven Wrapper for GitHub Actions"
48522f987fb2247a190c842e871edd70ff63df2b,"Update to JUnit 4.13

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
fe6953a2ab3136dd85b7e20dcfdfb190e78795fc,"Update to Maven 3.6.3

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
702f3fa5bd0b79e6d87d703318807a0e1ae4d479,"Cleanup unused imports

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
75edfaf6f96addfad1b7a912044f8639020b432f,"Merge pull request #11 from larsgrefer/feature/editorconfig

Add a basic .editorconfig file"
4a290496c07f0944a52191c8b1d7d2037a3a15f4,"Merge pull request #12 from larsgrefer/cleanup/unused-code

Cleanup unused imports"
d5dada81e503e257d20e2aa829716fb5c3934072,"Merge pull request #15 from larsgrefer/update/maven/3.6.3

Update to Maven 3.6.3"
d93bacd2e16e7ee13bd4c4e48a89ef8646fd0d68,Merge branch 'master' into feature/collection-performance
02257f178a8675de0603dbe3b3b442c2ac47870d,"Merge pull request #13 from larsgrefer/feature/collection-performance

Improve performance and readability of collection handling"
884ced970ee8d04bfb89a53ec1a40fcb848db2b6,Reduce test output for incremental comp tests
4a2ecf60ebaa4a5ad097da45ef912e1af3cd0dce,"Merge pull request #10 from larsgrefer/cleanup/pom

Cleanup the Maven pom.xml files"
e0adab7d8f01c38ef2650a9f726be4ac853ee721,polish
21c64cb9d276dceb6b85ca8ddcf1830e55d12f01,debug for test failure under github action
c5be7f17349f1e7ea5d3da4be09b5f3e964de19b,"Remove unnecessary enum modifiers

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
85ad27ee704fa8c17345bbe46c959a3e6ccbd179,"Remove unnecessary interface modifiers

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
2490aa1584ae2de1911ebf3d55cace9f99eb1166,debug for test failure under github action
60786f94a4f279adf16d3c4ac3e1390221b56414,"Merge pull request #16 from larsgrefer/cleanup/modifiers

Cleanup unnecessary modifiers"
4a5660b33fe768958ca505a04e4fb964c0e45435,"Update to JUnit Jupiter 5.6.2

The ""old"" JUnit-3-style tests will be executed by the vintage-engine

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
9e794ed21cd5e1435c129628021cf46149898524,debug for test failure under github action
fbeea7db4756ea35ab08e7c094133cd26f7089b4,"Split tests in a separate step on GitHub Actions

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
b3a4a5f5d2acf9efb28394adcc69f3e2db204df3,"Merge pull request #18 from larsgrefer/feature/github-actions

Split tests in a separate step on GitHub Actions"
b20196924eba2d42a842d9adc62f523fa181ffbd,1.9.7 milestone 1 published
611e94990f628999c99c75e112d065608cf9df11,Revert to 1.9.7.BUILD-SNAPSHOT
4b2e7df5d368ba4d5eb79a6da3599e6836d3461f,Give docbook IDs unique names
a6b0448a0ec9ce353d0e95d90759037a5425f304,"Merge pull request #19 from jamesjer/master

Give docbook IDs unique names"
f7f7656f81f9a84f92920492ab619accfaeb1ccf,Fix incorrect HTML entities in javadoc comments
f8f117808bef16efd520803636c6841332e83c49,Fix misplaced or incorrectly nested HTML tags
de14ca22d72be35e59ce370ef0edf8626db6cd82,Fix misplaced or incorrect javadoc tags
3255a3c562ce8dccd4abaf2f30bc04d4d7085fe2,"Fix javadoc references to nonexistent fields, classes, or packages"
192083a5670a328d9ea383d9a9fba2b4e5d8a12c,Typo fixes
730b1be2ce29813f0b473a9c60a574a3813d97f9,"Merge pull request #21 from jamesjer/master

Fix javadoc errors"
c4dfe11021191b05f7bb6606ed07b41b0b90f0ee,Fix apostrophe in the license
e6d502b0e79f291e0fd6da7815670da0b161ecff,"Merge pull request #22 from jamesjer/master

Fix apostrophe in the license"
bc6acdad7da5e779fb6fa21bf117aab7704d58f2,"Update GitHub Action from Java 14 to 15

Signed-off-by: Lars Grefer <eclipse@larsgrefer.de>"
f560b861758b9a6a2076dffbab1292c9a99a653c,Remove call to System.out
96447b0d8ce9d5c79a8505db06723361277fb9ad,"Merge pull request #27 from capgen628/patch-1

Remove call to System.out"
758b994dbe762b92da2561ad99e931426df5dfd1,"Merge pull request #23 from larsgrefer/feature/java15

Update GitHub Actions from Java 14 to 15"
af28600e2652de14933a17c71d66d74245842920,Update the URL of BCEL
2e1ec2bce6912783a4fdef2afa54045e81c17374,"Merge pull request #29 from ebourg/patch-1

Update the URL of BCEL"
087d965cf6c0e4183fdc76a9650025d5edc70ac9,"Support Windows 10 and Windows Server 2016/2019 in installer

Those versions were not detected until now, which lead to bogus Windows
batch files forwarding only 9 Ajc parameters to the Java process via
""%1 %2 %3 %4 %5 %6 %7 %8 %9"" instead of ""%*"".

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2868710fc6fbc55cb40f6d812f153de4d95e3ee9,"Merge pull request #32 from kriegaex/installer-windows_10-windows_server

Support Windows 10 and Windows Server 2016/2019 in installer"
5a415f27aea587b7d74ced2a48b35db6f8e6973e,"Fix path separators in ajc190.xml, make tests run on Windows

Replace ':' by "";"" which will be replaced to the platform
separator automatically. A fixed value of ':' does not work on Windows.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
35acb11f77a4649fc844676693e1b6a5adc7fab6,"AjBuildManager: use try with resources in 2 places

I was debugging something in ModuleTests, trying to find out if there
are resource leaks. They were not in this class but in FileUtil - see
next commit. However, the little refactoring here does not hurt either.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f996d0247c3f695cde7d220289438d6c8e89bd0c,"Fix resource leak in FileUtil

This made ModuleTests.testBuildModuleAndApplyAspectsFromAspectPath fail
because a file delete job for a module JAR failed after a previous
compile job had called FileUtil.isZipFile(File) in which the opened zip
file was never closed. A try with resources fixes that.

Maybe the corresponding test worked on Linux before, I did not try. I
just know that Linux is more forgiving about deleting open files while
on Windows they are being locked, which makes Windows the better system
to search for open file leaks.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
afb35f52be29d62aabaed41402481a8fce90b085,"AjcTestCase cosmetics: surround command in failure report by quotes

This is the same for successful tests in class CompilationResult.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2bde9d992502006b3c8864920f34b9a106de8577,"Try to fix MultiProjectIncrementalTests.testAspectPath_pr265693

Check if path vs. package name discrepancy makes test fail on Linux. On
Windows it passes. So let's find out if file p/Asp.java vs. pkg.Asp
causes the problems.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f7d471f68281185566a3454dc6ac89cfa0c72f10,"Fix MultiProjectIncrementalTests.testAspectPath_pr265693, 2nd try

Do not assume a certain element order for tree nodes if there can be
more than one.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ee2817f3e100444b38ed60a39bd745823985bc3e,"Unify classpath handling in CompileSpec & RunSpec

Replace directory separator '/' and surrogate path separator ',' by
platform-specific separators File.separatorChar and
File.pathSeparatorChar, respectively. Also make sure that replacement
occurs during write access, not read access. This was handled
differently in both sibling classes.

I am not sure if that helps to fix any Linux CI tests, but it is worth a
try.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
021ad3e375d1fe124906e25dbbeb7bf05874097b,"Replace path separators ';' by ',' in XML test specs

The goal is for them to be canonicalised to platform standard during
test execution. I am not sure if that will fix any tests, but at least I
hope it will not break any.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ee5274fa7e0f82f6f840346aa969f618682dfdba,"Set maven-assembly-plugin version 3.1.1 explicitly for each POM module

Background: There are CI tests failing because the version is not taken
from the parent POM, even if set in the 'pluginManagement' section.
Instead, it is resolved via the Maven Super POM, e.g. 2.2-beta-5, see:
https://maven.apache.org/ref/3.6.3/maven-model-builder/super-pom.html
That assembly plugin version in turn requires plexus-archiver
1.0-alpha-12. The latter cannot be downloaded from Maven Central,
leading to the problems seen during builds.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f08cdc3dfb187b99233d01ec5f9b531e9dc33273,"Merge pull request #33 from kriegaex/test-fixes-kriegaex-20210311

Test fixes kriegaex 20210311"
42b1e6f09e00194ba2ec32e0972b91e19b9161f9,"Add missing '-options' values -1.5, -1.9 to ajc{150,190_from150}.xml

When trying to find out why ajc150.xml and ajc190_from150.xml look
almost identical, I found out that only in many cases the 190 version
has '-option=""1.9""' set where in the 150 version it was '-option=""1.9""'.

Unfortunately, in both files source/target versions are not set at all
in many places, which looks unintentional. I tried to search & replace
all relevant '<compile ...>' commands for 190 first, then ported back to
150. Only cases in which clearly compiling to an older version like 1.3
or 1.4 is necessary were left like before.

I am expecting missing or false Java target versions in many other of
the legacy XML test suites. For now, I am just committing these two.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a78abecee0a116336cc9ae604c2a7fbe9d11d621,"Fix: WeaveSpec no longer ignores the '-Xlintfile' parameter

Some tests in ajc150.xml and ajc190_from150.xml contain '<weave ...>'
build steps with 'xlintfile=""...""' parameters. Those parameters were
passed through to Java and aspect code building steps, but not to the
final weaving step, sometimes leading to spurious ""type not exposed to
weaver"" warnings which occurred for some local and CI builds, but not
always. Very strange indeed. Anyway, by making method
WeaveSpec.buildWeaveArgs() pass on this parameter, the tests seem to run
reliably now.

TODO: Why does Ajc report that warning if the application JAR is on the
inpath and the aspect JAR is on the aspectpath? Is it because a marker
annotation is defined within the aspect JAR? But actually, that should
not matter, especially not work once and fail at other times. I guess
there is a class loading order problem or similar involved.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8ea523635a79807c9b9db79f0c90ff3e2d2d29aa,"Merge pull request #34 from kriegaex/test-fixes-kriegaex-20210312

Test fixes kriegaex 20210312"
07af5d416e94791eb92ae1123e87394e8d22ad80,"Make BCEL classpath utility recognise Java 15, fixing many tests

Inside org.aspectj.apache.bcel.util.ClassPath.getClassPath(), some JVM
version matching occurs which previously did not include Java 15.
Technically, AspectJ 1.9.6 does not support Java 15, but on GitHub
Actions there is a build job running on a JVM 15. This change should at
least make the weaver tests pass, making that test job more meaningful.

This fixes test errors like

java.lang.ClassCastException:
  class org.aspectj.weaver.MissingResolvedTypeWithKnownSignature
  cannot be cast to class
  org.aspectj.weaver.ReferenceType
  (org.aspectj.weaver.MissingResolvedTypeWithKnownSignature and
  org.aspectj.weaver.ReferenceType are in unnamed module
  of loader 'app')

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
cd83adc724c3779cc688405cc475ca5bd1e13bfe,"Make MoveInstructionsWeaveTestCase.testFancyHello pass when run twice

Reset counter, just in case this test runs multiple times in one JVM.
This can happen e.g. due to ""run all tests"" in IntelliJ IDEA, which
directly runs this test class and als WeaverModuleTests, both of which
implement junit.framework.TestCase. In that case, during the second run
the counter would start at a higher base count, making the 2nd test run
fail.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2fd6804db8aebfe6634e4df7d5e5c71fe856d4f6,"Fix 'ajdoc' tests for Java 15 build

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
052bd66fb22b11cc53f4379f53dc4f894257470b,"Improve text matching in OutputSpec, fixing some failing Windows tests

Some Java 14 text block tests failed on Windows because a
StringTokenizer was used to split by LF, but the Windows line
separator is CR+LF. Because a multi-line string ending with CR+LF is
printed via 'System.out.println' in the test code, another CR+LF is
added to the output, resulting in trailing CR+LF+CR+LF. Hence, between
the two LFs, the tokenizer actually found an additional line consisting
of CR (only on Windows, of course). Despite each line token actually
containing a trailing CR token, that did not matter much because
'String.trim' was used everywhere before comparing values.

Anyway, the improved OutputSpec uses text.trim().split(""\\s*\n\\s*""),
which takes care of leading/trailing whitespace both around the whole
output and for each separate line.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c337029c75830531ddfef4a9bfe9c649efafbeb0,"Move documentation generation into Maven profile 'create-docs'

The profile is active by default, but can be deactivated via
'-P !create-docs' on the Maven command line. This helps to speed up
'mvn install', maybe in combination with skipping tests, if we just want
to create a new set of AspectJ binaries.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
bf48d9dd07a7ebd5ac61b66df5c478b59fca831a,"Allow year 2021 in Checklics.License

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ef21abde05b925df6774f872437812fff1b3f9ee,"Make sure Java 14-only tests using preview are not executed on JVM 15+

Some Ajc196 tests are using preview features (see .../ajc196.xml), i.e.
they will fail on Java 15+ because code compiled with '--enable-preview'
can only run on the same JVM version, not on a more recent one. Hence,
the preview-using tests are now being excluded in order to make the
build run on Java 15, even though no Java 15 features are present in the
current 1.9.7 snapshot.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
544f836d7e9b18e85b7a8940d06fd3538706dbf7,"Fix OutputSpec corner case (test empty output) from @052bd66f

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0cec8aea6f60a72a1a12b3a5781b61268b20360d,"Fix outdated ajcTestSuite.dtd and lots of XML problems

Now there should be no more inspection warnings when working with XML
test definitions. Only the strangely looking XML files used by
PureJavaTests and KnownLimitationsTests are left to be analysed and
fixed.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ee2bec7cbcd81659b6944d81b0d6e9ac36c8d28a,"Simplify execution of PureJavaTests and KnownLimitationsTests

Getting rid of XML includes and two superfluous files, merging them with
their respective including counterparts. As far as I can see, the two
test suites are not part of the automatic build process, but can be
started manually as easily as any other test (suite) now.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
32b2585c55ba8dbc5e1ee5fa522e7074f76040fb,"Merge pull request #35 from kriegaex/make-aj196-tests-run-on-java15

Fix all tests for Java 15 runtime"
8348a8f6536971b8c1261923f5a5670c97bf1dcb,"Upgrade JDT Core to @3caefb80 (4.20 snapshot, date 2021-03-09)

Add methods isRecord() and getRecordComponents() to class
CompactTypeStructureRepresentation

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7fab8259c448aa3185bab27e7bc813bc3512b8a3,"Upgrade to ASM 9.1, delete obsolete ASM binaries

Keep only ASM 2.0 binary because it is still used in UnweavableTest
which uses an old ASM API, e.g. with a ClassWriter constructor which no
longer exists.

Also add JarJar 1.3 library because it is needed by an Ant task in
lib/asm/build.xml.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
fff8eef683e8b7e426319101d3bb9dec56c7d7d6,"Add Java 15 class vile version to BCEL constants, adjust test tools etc.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
798ee65035142594c43c8c154baaafd557d5d11e,"Use static import for HtmlDecorator.TYPE_NAME_LABEL

Mini refactoring, making the code a bit less verbose

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
173855359653486178e7e0a7d7b8918615e6deee,"Restructure Java 14 / AJ 1.9.6 tests

- Java 14 feature sample classes moved from 'bugs' to 'features'
- One test case using a Java 14 preview feature was moved to the
  Java 14-only tests

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5bb8f42d3b2b65bf8ba12e9aaf6c892b5134fa36,"Do not run tests using Java 14 preview features on this Java 15 compiler

These tests need a Java 14 level AspectJ compiler, because they use
version-specific preview features. This compiler has been upgraded
to a Java 15 compliant JDT Core already, i.e. it does not support
preview features of a previous version anymore.

An error message similar to the above explanation will appear when
trying to run any XMLBasedAjcTestCaseForJava14Only subclass, such as
Ajc196PreviewFeaturesTests (currently the only one).

When running AllTestsAspectJ196, Ajc196PreviewFeaturesTests will not be
added to the test suite anymore.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
58830078585fd045c92737ce56cb693b903f5545,"Add 'yield' usage to Java 12/13 switch expressions tests

So far this was a slight oversight, no test using 'yield' existed in the
'features193' test suite. Better late than never.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4e5430011fc9283074339b39754b0f07ff5d8a04,"Add Java 15 / AspectJ 1.9.7 test suite

Also fix some minor details in Java 14 suite

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
263d25ac28052dd2e7723c0275c05da8cd2e2c40,"Begin migration to 'aspectj' locale for compiler messages

Renamed messages.properties to messages_aspectj.properties and moved to
a path identical with the Eclipse original resource file. Therefore, it
is now just treated as a localised version of it.

The new jdtcore-for-aspectj.jar already contains logic to use the new
locale. Hence, BuildArgParser no longer needs the static block to
initialise its own resource bundle, Eclipse JDT will automatically pick
it up.

The version string was also updated to the new Eclipse merge commit
hash + date + ""Java16"".

TODO: Strip down properties file in order to only contain delta to
Eclipse.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f0cc6138f97014bd578c8edc6cb052409abb66a5,"Strip down compiler messages to AspectJ-specific ones

Delete all properties from messages_aspectj.properties which were just
copied from Eclipse and basically the same. This not only gets rid of
duplicates but also eliminates differences found between upstream and
AspectJ strings which were just cause by errors or oversights during
manual upgrade.

TODO:
  - Find a way to print the '-X' options as info instead of yielding
    'abort', making it seem as if compilation failed and print the usage
    message to stdErr instead of stdOut.
  - Eclipse also has misc.usage.warn, not just misc.usage, i.e. usage
    info specifically for warning options. Make sure that AspectJ uses
    it consistently.
  - Find a way to merge AspectJ-specific options into the standard
    Eclipse usage text instead of completely replacing it, further
    reducing the need to merge and copy upstream content.
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0b182d606732d77ece079e20de6458c33a8413a3,"Fix invalid manifests leading to ""Could not find or load main class""

WARNING: Please avoid line breaks in manifest values! They are passed on
like this: Assembly Plugin -> Plexus Archiver -> JRE java.util.jar
.Manifest.write(OutputStream).

The JRE Manifest class inserts hard line breaks always after 72
characters, no matter if those 72 characters contain line feeds, tabs or
spaces. Hence, it can happen that unwanted blank lines end up in the
middle of a manifest section, making the manifest invalid. Calls like
e.g. 'java -cp aspectjtools.jar org.aspectj.tools.ajc.Main' can then
fail with the absolutely unexpected error 'Could not find or load main
class org.aspectj.tools.ajc.Main'.

In IntelliJ IDEA you can deactivate wrapping text inside XML tags like
this: ""File | Settings | Editor | Code Style | XML | Wrap text -> off""

The problem occurs in Maven Assembly in versions higher than 2.2. More
exactly, it occurs in Plexus Archiver after in more recent versions it
switched to using the JRE Manifest class.

TODO 1: Either add a test step in phase 'verify' doing something like
this:

new Manifest(new FileInputStream(""MANIFEST.MF""));

This would lead to ""IOException: invalid header field (line xy)"" in case
of an invalid manifest file.

TODO 2: Or file a JRE bug at Oracle or OpenJDK, wherever appropriate.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e51c43b9e3970aab098a8d17c1057f660732a584,"Improve batch compiler usage messages

- Use spaces instead of tabs for indentation.
- Document parameters bound in Eclipse JDT, e.g. {0} is not the compiler
  name there but the system's path separator ';' or ':'. So if we want
  to display the compiler name, we need {1}.
- For both normal usage and '-X' usage, compiler name + version are
  printed now.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
31b2d60b897d318bfbffde2d78dbc288f85db191,"Improve usage text, error and warning output in batch compiler

- Usage texts are now printed to stdOut, no longer stdErr.
- 'java ...Main -?' no longer prints usage text twice (once to stdOut
  and then again to stdErr).
- AjdtCommand.inferKind: Usage texts are no longer mis-identified as
  warnings or errors just because they contain substrings ""warning"" or
  ""error"". Matching is now more precise, looking for ""[warning]"" and
  ""[error]"". But in that case the method would not be called anyway
  because errors and warnings are identified in other ways already. As a
  fall-back, the categories IMessage.ERROR and IMessage.WARNING still
  exist in the method.
- In case of compile errors, no usage message is printed anymore,
  because previously the user had to scroll up a lot in order to see the
  actual messages. This is also in line with ECJ. The same is true for
  warnings, but it was like this in Ajc already.
- AjdtCommand.inferKind: There is a new category IMessage.USAGE
  especially for AspectJ usage texts, which will be identified by string
  matching and then correctly handled (i.e. printed to stdOut, not
  stdErr).
- Usage text printing is no longer done in AspectJ but in the AspectJ
  ""shadows"" fork of JDT. This helps to get rid of some now obsolete code
  here.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
29acb9063ace3558f9c8280b3f418a17ae15be8d,"Fix test relying on JVM warning being stripped from output

The line in which warnings like ""Archived non-system classes are
disabled because the java.system.class.loader property is specified""
appears can start with e.g.""OpenJDK 64-Bit Server VM"" or ""Java
HotSpot(TM) 64-Bit Server VM"". Therefore, an exact match on the former
worked on Linux, but not on Windows, or maybe the difference is
generally between Oracle and OpenJDK. anyway, I use Oracle on Windows
and my build failed. Now it is fixed because I made the match more
generic using a regex.

I also removed a now obsolete check for the occurrence of the stripped
line in test ""JDK14 LTW with XML"".

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0b866816fa45166c8b32859ba4090504d5b1da56,"Fix tests expecting usage texts as failure outputs

This is a follow-up on commit @31b2d60b. Some tests were actually
expecting usage texts as failure outputs. Because that was fixed, the
tests no longer see those failures, hence they should no longer expect
them.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2a2f4e20b413c12a634bb6c3732da4da598bad96,"Fix tests not finding project base directory 'org.aspectj'

Several LTW tests using class TestServer failed on my machine because
there was a hard-coded project base directory name 'org.aspectj' in the
class. This class has several other problems, but my quick fix for now -
I did not want to rename my project base directory - was to match on a
regex '(?i)(org[.])?aspectj' now. That also works for my root directory
'AspectJ'.

I also moved the code determining the project dir into a protected
(hence testable) method and added a sanity test case checking if the
directory can be determined. If not, the test will fail with a rather
lengthy warning to developers about the need to have a matching project
root folder.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
fa8369ebb82cd9668943173b4f04868b55ab4260,"Fix MultiProjectIncrementalTests.testInvalidAspectpath_pr121395

It failed with ""RuntimeException: I never heard about what kind of build
it was!!"" on my (@kriegaex) Windows machine, mostly because in case of a
failing full build the corresponding status is never set.

TODO: Ensure that 'MyStateListener.informedAboutKindOfBuild' is set for
failed builds, too.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a1867b05ba6443d32abc4049c26b92fc226d6f78,"Remove module 'run-all-junit-tests' from root POM -> speed up the build

This module must be a relic from a test runner module once existing
during the Ant build era, but transferred and kept alive in the Maven
build. Actually, it almost doubles build time by running virtually all
tests in all modules again when doing 'mvn test' from the project root.

For now I only removed the module from the root POM, leaving behind
comments there, in the module POM and in the now @Deprecated class
RunTheseBeforeYouCommitTests.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
68ad86eb6ed70c15ad4209295903a9a977b001f6,"Add Java 16 test suite for AspectJ 1.9.7 + test refactorings

- Test all features which were preview in 14+15 and are now final in 16,
  compiling them with language level 16.
- For Java 15 we only have sanity tests (and of course the Java <14
  tests), compiling Java 16 features to target 15 does not seem to work.
- Test remaining Java 16 preview feature (sealed classes).
- Instead of overriding runTest(String) in several base classes like
  XMLBasedAjcTestCaseForJava*Only or XMLBasedAjcTestCaseForJava*OrLater,
  we now override setUp() from JUnit's TestCase base class. This will
  run before runTest(String) and make the tests fail much faster, if a
  user tries to run them on the wrong VM.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f280ff3efd643b17e88d0f7814b81ff62fa3770b,"Upgrade GitHub CI workflow from Java (8, 11, 15) to (8, 11, 16)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
01283150755102e2280e8a864a436a91a8e50278,"Java 16 fix: ParseUtil.fileToEncodedURL(File) causes IllegalAccessError

Migrate 'ParseUtil.fileToEncodedURL(f)' to 'f.toURI().toURL()'.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e4a2a5a5d274bc16bae3d1178789752dba043730,"Fix + improve some tests regarding Ajc output (usage messages etc.)

After Ajc usage text output is filtered into its own category
IMessage.USAGE now - see commit @31b2d60b - some tests in module
'org.aspectj.ajdt.core' were failing. I fixed and also improved them a
bit.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ecb5320c7b61d72edbf4a440e4996171a9c8f7dd,"Fix some deprecated Java and JUnit warnings by using newer API calls

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0012982c7e012903ffdb5dfe5fa84ccf270b3b9d,"Set explicit en_US locale for build timestamps in Build Helper Maven

There were warnings that builds were dependent on the system local
(de_DE in my case). In patterns like ""EEEE MMM d, yyyy"", parts like day
of week or month names would change otherwise.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
fa8dc8d9bf1dde1a07c9d012490745ce0679bfa7,"Fix OutjarTest regarding Ajc output (usage messages etc.)

After Ajc usage text output is filtered into its own category
IMessage.USAGE now - see commit @31b2d60b - some tests in module
'org.aspectj.ajdt.core' were failing. I fixed and also improved them a
bit in @e4a2a5a5, but forgot to commit this one.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
72a092fcd925ccbcd5579a168a690ca44236eb12,"Fix AjcTaskTest regarding Ajc output

Another follow-up commit on @31b2d60b

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
cf72b628c50fb296b38e559eff744bd829b61865,"Make BCEL classpath utility recognise Java 16-19, fixing many tests

This is a follow-up commit on @07af5d41:
Inside org.aspectj.apache.bcel.util.ClassPath.getClassPath(), some JVM
version matching occurs which previously did not include Java 16 (I also
added 17-19 to the regex matcher). This fixes test errors like:

java.lang.ClassCastException:
  class org.aspectj.weaver.MissingResolvedTypeWithKnownSignature
  cannot be cast to class
  org.aspectj.weaver.ReferenceType
  (org.aspectj.weaver.MissingResolvedTypeWithKnownSignature and
  org.aspectj.weaver.ReferenceType are in unnamed module
  of loader 'app')

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
354212214df5afff0bbd1534ffbea1295201796b,"Add diagnostic output to HtmlDecorator if AJ-Doc generation fails

HtmlDecorator.decorateHTMLFile is where after Java version upgrades
(i.e. also new Javadoc generator version) usually tests fail for the
first time during builds because strings no longer match as expected.

There now is this log message on stdOut: ""Something unexpected went
wrong in HtmlDecorator. Here is the full file causing the problem:""
After that, a full HTML page is logged. I hope this helps me identify
the new error on GitHub Linux Java 16, because the same test works on
Windows and I have no idea how to remote-debug a GitHub CI build.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ab85eea3a337662b2c875b96ad5eb057995dbbe2,"Add Java 16 Linux matcher variant to HtmlDecorator

The Java 16 Javadoc generator has changed the HTML structure once again
even compared to Java 15. I adjusted the matching in HtmlDecorator and
also fixed CoverageTestCase. Most methods there I just made to work
quickly, but method 'testInnerAspect()' I actually refactored. Some
other methods could (probably should) be restructured in a similar
fashion, but for now I just wanted to understand what the test does and
see how much work it would be to refactor it. But finally, I just want
to get the GitHub CI build running on Java 16.

TODO: I did not check if the decorated HTML actually looks OK and am
unsure if the tests cover that sufficiently, I never reviewed the tests.
It would also be better to do regex matches instead of looking for
variants of fixed strings or maybe even to operate on a DOM. But I am
not in a mood to refactor that tonight.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
37cd358d32af3fd8a1b1e09057ae007d2419282b,"Add link to JDK-8263924 bug ticket to POMs using maven-assembly-plugin

This is a follow-up on commit @0b182d60. I have just received
confirmation from Oracle that my issue was accepted:

https://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-8263924
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
eac253e74682f126147f1c80ed818e171feea22d,"Revert ""Remove module 'run-all-junit-tests' from root POM -> speed up the build""

This reverts commit a1867b05ba6443d32abc4049c26b92fc226d6f78.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
acdf4ffd9d4c6ee0b8d8595a112c5331974e08cb,"Deactivate test run in 'run-all-unit-tests' module by default

There is a new Maven profile 'repeat-all-unit-tests', and the name
already implies what a comment in the Maven module explains like this:
ATTENTION: This profile is inactive by default, because when active and
running a full reactor build, it makes almost all tests run 2x, doubling
the build time without any added value. This Maven module only exists
for convenience: As a developer, your IDE can detect and run
'RunTheseBeforeYouCommitTests'. That way, you do not have to use Maven
and get the test results reported within the IDE's JUnit user interface.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6be777e71708df5a62e41c6ef95da66bfd02f447,"Fix AtAjLTWTests::testLTWDumpProxy for Java 16

Before Java 16, JDK proxies were given a virtual package name of
'com.sun.proxy'. Now the packages are numbered 'jdk.proxy[n]', i.e.
'jdk.proxy1', 'jdk.proxy2' etc. This makes the package-name-derived path
name here less predictable. In our simple runtime scenario, we can be
pretty sure than the counter starts at 1 because it is the first and
only proxy we create.

TODO: A better solution would be a recursive filtered search via
Files.walk, ideally added as a recursive search option for
CountingFilenameFilter.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
79e44360cd95b14fa255daaac069f9b76c488451,"Make all tests run on Java 16 via '-add-opens' JVM option

Due to JEP 260 (Encapsulate Most Internal APIs), aspect weaving on
Java 16 now requires '--add-opens java.base/java.lang=ALL-UNNAMED' on
the command line. Otherwise there will be illegal access exceptions for
some internal API calls AspectJ needs, most prominently when trying to
define classes in other packages or modules.

This had to be done on several levels:

  - Maven Surefire: running tests in a JVM directly forked by Surefire.
    In order to make this backwards compatible, I added two profiles
    with JDK-level-dependent auto-activation, one 8-15 and one 16+. In
    the latter a property containing the JVM parameter is defined, in
    the former it is empty, i.e. the JVM is started without the
    parameter. In Java 8 the parameter did not even exist, in Java 9+ we
    could use it, but we need to test how users use AspectJ.

  - RunSpec: Whenever an XML test is declared to use '<run>', we need to
    determine the current JVM version and again dynamically add the
    parameter when forking the target JVM.

  - AntSpec: Whenever an XML test is declared to use '<ant>', we need to
    determine the current JVM version dynamically add two properties
    usable from within Ant scripts: 'aj.addOpensKey' and
    'aj.addOpensValue'. Unfortunately, Ant needs to use two '<argLine>'
    parameters, because the two parts of the option are separated by a
    space character.

  - Ant scripts: When triggered by an AntSpec, each Ant target using LTW
    needs to manually set
      <jvmarg value=""${aj.addOpensKey}""/>
      <jvmarg value=""${aj.addOpensValue}""/>
    for each '<java>' task. It was quite tedious to find all(?) of them.

TODO: In the AspectJ 1.9.7 release notes we need to document that this
parameter is now needed for LTW.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1337e1a5fbc5f671e1a66c1e0d1e7bc9d4b4ebd8,"Try to avoid 'HeadlessException: No X11 DISPLAY' on GitHub Actions

We have 84 times this kind of exceptions in 'ajde' tests in our build
logs on GitHub, even though the tests seem to pass:

  HeadlessException: No X11 DISPLAY variable was set,
  but this program performed an operation which requires it.

I found this discussion:
https://github.com/juliangruber/browser-run/issues/147

And then this GitHub Action:
https://github.com/marketplace/actions/gabrielbb-xvfb-action

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1b7147bac95a35795d03029e00082a2695a99e95,"Add developer info + sample config about how to work with a RAM disk

There are two files:
  - docs/developer/ram-disk/maven.config
  - docs/developer/ram-disk/settings-ramdisk.xml

The latter contains info about how to set up a development environment
inside a RAM disk. Both files are to be copied to the project's '.mvn'
folder in the root directory and adjusted according to the description.

Just in case, .gitignore ignores the files if they exist in '.mvn', so
they are not being staged and committed accidentally.

An additional screenshot shows how to configure the Windows Recycle Bin
to immediately delete files in order too save space on the RAM disk.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
918063dba17c4920662dc14542efc3b184d933a5,"Fix JRockitAgentTest.testJrockitRecursionProtection for JVM 9+

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f8eb13d524bfd44f5275938f083169d79268bb41,"Unzip dependencies in phase 'prepare-package' before building assemblies

Before it was phase 'validate', which was way too early and somewhat
annoying and time-consuming when during development we just call
validate in order to check if the POMs are valid, as the name implies.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
bc4ff4b9398750b1e95f069842d963de0a3e024a,"Reformat org.eclipse.jdt.core POM

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5f6b3c1a068848c7a76df92c2570e6508201f51f,"Install module org.eclipse.jdt.core in 'install' phase, not 'verify'

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
48a36355f62ae2cc77f3eda7704799a4d53669d9,"Bump maven-antrun-plugin from 1.6 to 3.0.0

This is not strictly necessary, but probably does not hurt either. While
upgrading, '<tasks>' tags have been renamed to the new standard
'<target>'.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
464b8c1987f362ba3f6350e267c03a77955ac09c,"Add POM to download libs (WIP) which previously were committed to SCM

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ea78c80177c79edc1426f8d573b04fd26ec6e53b,"Recreate lib/ant from Apache source/binary downloads

- Download Ant 1.6.3 binaries and sources ZIPs from Apache releases
  download server
- Verify expected SHA-1 checksums
- Unpack binary distribution
- Repack main sources into source package as it is checked in now
- Redundantly add JUnit JAR in order to 100% replicate existing
  directory layout
- Move downloads from 'validate' phase to 'generate-resources'
- Unpack/repack phase is 'process-resources'
- Make sure that download, unpack, repack only occur if necessary
  instead of overwriting existing artifacts during each build

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d574f1c039c92108fd0845f7c6775588b69041a0,"Replace Ant and Xerces system-scopes libraries by normal dependencies

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4a9828250970cdb4ac303a393cd516cf6be3ce7e,"Recreate lib/commons from Apache Commons downloads

Project archeology, binary and source code comparisons of contents in
lib/commons/commons.jar and lib/commons/commons-src.zip yielded the
following results:
  - All binaries are available on Maven Central in 4 different legacy
    Apache Commons dependencies:
      * commons-beanutils:commons-beanutils:1.4
      * commons-collections:commons-collections:2.0
      * commons-digester:commons-digester:1.3
      * commons-logging:commons-logging:1.0.1
  - Those Maven Central binaries are not accompanied by source JARs,
    i.e. in order to recreate lib/commons/commons-src.zip we have to
    download source archives from the corresponding Git tags. All
    projects are available on GitHub, so it is possible to download them
    using Maven Download Plugin.
  - Both the compound binaries and compound sources archives currently
    checked in in AspectJ can be recreated using TrueZIP Maven Plugin.
    This is rather tedious and involves additional Maven profiles in
    order not to generate the compound archives during every build, but
    fully implemented now.

Unfortunately, all of the above does not make the system-scoped
dependency on commons.jar obsolete. In order to achieve that, we either
have to publish the compound files on Maven Central or GitHub Packages,
or we find out which AspectJ modules use classes from which of the 4
individual Apache Commons packages and replace the compound system
dependency by the relevant single dependencies. Probably I am going to
try that in a next step.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
883c07f8187fdca69527fcbe4e2b50bda861611f,"Remove JDiff sources + binaries accidentally committed in @c89830fe

The deleted files are just the unpacked + content of
lib/jdiff/jdiff.jar.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
887cb2d8849f21f25a840674ffbffdc4ae4a8a8c,"Replace system-scoped dependency on commons by granular dependencies

There are only two direct dependencies used in AspectJ code:
  - Commons Digester (module 'testing')
  - Commons Logging (module 'org.aspectj.matcher')

I declared those two and experimentally removed all the other
system-scoped dependencies, as it should be. Let's see if the build
works with transitive dependencies.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2c9374c807dbdf256df2c6bb365802916e8653c6,"Remove ASM 2.0 dependency from AtAjLTWTests::testLTWUnweavable

The test class UnweavableTest used ASM 2.0 API. I upgraded in two ways:
  1. Now the ASM 9.1 API is used. Probably works with much older
     versions too (just not as old as 2.0), as long as the method and
     constructor signatures are the same).
  2. The class now uses the AspectJ version of ASM (i.e. package names
     aj.org.objectweb.asm.*) and therefore can just use ASM as it is on
     the classpath for module 'tests' already. There is no more need to
     manually add '<pathelement path=""${aj.root}/lib/asm/asm-2.0.jar""/>'
     to the Ant build script for that test.

Consequently, asm-2.0.jar can be eliminated from Git SCM completely,
because it was only used in this one test.

BTW, I also removed some deprecated API and other types of warnings in
UnweavableTest.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b09a61f361a74f16d11a41cb1f27cbcc139dd019,"Get rid of some Maven warnings concerning plugins + dependencies

Duplicate dependencies, missing or mismatching versions

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5c34265be69ec2e0380c4b9dcc2553b08ddd6bd8,"Enable CI build to be run manually and add download libs step

Via 'workflow_dispatch' users with the necessary access rights can now
run the GitHub Actions workflow from the web UI.

Still in testing stage in redundant module 'libx', prepare for the
future situation that currently committed binaries in 'lib' shall be
replaced by downloaded ones.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d98f01fb7e8f275395214f78d64e03733e6b3970,"Build libs without additional profiles, add Enforcer rule

Because 'libx' no longer is a submodule of the AspectJ parent POM, it
will not be built automatically each time an AspectJ build runs.
Therefore, is is no longer necessary to shield the zip/unzip steps from
repetitive execution by profiles with auto-activation based on the
(non-)existence of files. An AspectJ developer knows when to build the
module, she does it manually anyway.

A new Enforcer rule makes sure to warn the developer if some files it
expects to exist in the libs folder are not actually present.

Now we also have a Maven Clean rule which wipes away all downloaded and
(un-)zipped files.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
fe91fe26245d1f20b9ee1b4bb163969a89993a3f,"Replace JDT Core system dependency by deployed one

Get rid of system paths. Instead, rely on JDT Core Shadows to deploy
both binary and source JARs to GitHub Packages. The former module
directory was deleted completely. Instead, the JARs are redundantly
copied into 'libs/jdtcore-aj' in order to be found there by tests and
other Ant scripts.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b6779de5d76af4cf89de19943324b592bb067c2d,"Module 'asm-renamed' now deploys to GitHub Packages

This means that instead of a system-scoped dependency we now have a
regular one.

The 'libx' module also downloads binary and source JARs redundantly into
the libraries directory in order to be found there by other scripts and
tests.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
060bf4c3c66841237a5acafbbe211e360c9d920b,"Improve 2 tests do delete temporary files

There were some problems in file handling: One file in was not deleted
in case an exception was thrown during the test. Another case was a
JarFile which was not closed before deletion, which might work on Linux,
but not on Windows where the open file is still locked after usage.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1ed026071e9f15130274f6123c3cd9e009f4d2cb,"POM cosmetics, e.g. plugin version management

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5e2e7a5229d234ed1cf4ae1dadc51f5f5c964fe2,"Fix missing ASM version in 'aspectj-renamed' POM

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
63d17d0ab2c6e2895891781433750fe7d4747e16,"Remove duplicate Maven Clean declaration in parent POM

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
95d6d5a1ee4df410820c838e70b073638f845e22,"Centrally manage ASM version in parent POM

There is a warning because 'asm-renamed' uses
<version>${asm.version}</version> in its artifact descriptor instead of
a fixed version. but as long as Maven still permits it, let us use it
this way. Flatten Maven plugin replaces it by a resolved number anyway
for the dependency-reduced POM.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e476249a14932e86e1f0430438b3814d026f6ca5,"Use flattenMode=defaults for 'asm-renamed'

On GitHub CI, there is a very strange error while downloading the POM,
which does not occur locally. Maybe this is due to the usage of
inline XML tags inside a CDATA section in the 'description' tag text.
The default mode removes the description.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5e1551b46f734a0ee877119eef1de652edf6f77c,"CI test still failing, try 'mvn -U' in order to refresh

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a618e29cf3449adc38074a020adb270ca9865138,"Make sure to clean up temp-dirs in 'weaver' module

Maven Clean now deletes '' directories if it finds any. Furthermore,
AsynchronousFileCacheBackingTestSupport now not just deletes directory
contents but also removes the empty corresponding directories
afterwards.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
569ac18874b6cee33cf8ad6dd9f89bc34b75f4f2,"Use additional Maven Clean execution in 'libx'

Before, the Maven Clean configuration overrode the one from the parent
POM. Now it leaves it intact, adding a separate module-specific
execution to delete the downloads and libraries.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7e3e616607441e086cdd383661a296f2074d8e71,"Use special Maven settings with access token to GitHub Packages

The access token is for the 'kriegaex' account. Can be adjusted or
extended in order to support other Package registries, too. for now, I
just want to see it this solves the authentication error problems during
GitHub CI builds.

The new file .mvn/settings-read-github-packages.xml contains additional
information and links to online sources, explaining why this is
necessary.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e1a806fe4d5f7c86b6dc82d90775bc5ed45bbfe5,"Download correct JDiff binaries and sources to 'libx'

This enables us to replace the original file from SCM. There is even an
improvement, like in other packages before: We create separate binary
and source archives, copying files from the compound download archive.
This way the library should be easy to use in an IDE.

TODO: This still does not get rid of the system path. Maybe it is better
to upload source and binary JARs to GitHub Packages.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1664dbf1fc27e59e0783f8956dae3f09739988ad,"Replace JDiff by regular Maven dependency from GitHub Packages

One less SCM-committed binary, one less system-scoped dependency.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2b0b1a98959bd0d569f1d04bd3b25dac8ef0bb7a,"Move lib/ext/jrockit to just lib/jrockit

It was the only subdirectory under lib/ext anyway and somehow always
irritating and difficult to find when just using a directory browser in
the IDE.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f3ff0752b8ee68583fb5a90687ddb5943c2df25b,"Remove JRockit LTW support, particularly JRockitAgent

In two places, the documentation now contains this text:

""Since AspectJ 1.9.7, the obsolete Oracle/BEA JRockit agent is no longer
part of AspectJ. JRockit JDK never supported Java versions higher than
1.6. Several JRockit JVM features are now part of HotSpot and tools like
Mission Control available for OpenJDK and Oracle JDK.""

The decision to drop JRockit support was made during a discussion
between Alexander Kriegisch and Andy Clement:

Andy Clement wrote on 26 Mar 2021:

> Yes I think so.
>
>
> Alexander Kriegisch wrote on 26 Mar 2021:
>
>> https://en.wikipedia.org/wiki/JRockit
>>
>> Can we get rid of that? AspectJ requires Java 8, JRockit never
>> supported more than Java 6.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
34cda077348a5af1f9ec85b60803bb067ef33d38,"Clean up remaining references to system-scoped dependencies

Now there is no system-scoped dependency left anymore in the Maven
build, i.e. the corresponding warnings are gone and we can focus on the
actual build log.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3612f72740b56204ee0d3563171a2c0209c3694c,"Switch from 'libx' to 'lib', delete all obsolete binaries

Because 'cd lib && mvn compile' can now download and (un)zip many
previously SCM-committed third-party dependencies, the following 'lib'
subdirectories have been deleted:
 - ant
 - asm
 - commons
 - jarjar
 - junit
 - regexp
 - saxon
This one is new (but not stored in SCM):
 - jdtcore-aj

For each of them, there now is a .gitignore entry, so as to prevent
developers from accidentally committing the downloaded binaries again.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a9f15df25ac40199c629def6a80db2e5b2e1b9c3,"Completely delete Jython in lib/jython

AFAIK, Jython is not used anywhere in out tests, also not in combination
with Ant. So I have decided to delete it altogether. If the build
passes, we should be fine and be able to travel more lightly in the
future.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8896350ca3681693afd4e500ba91f828e4e6f582,"Fix faulty path in docs/progGuideDB/progguide.html.xsl

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
79c272eb9c158a976b7b3313c50759dd87b1b5fd,"Add comments about wrong classpath entries to docs/build.xml

Of 6 classpath entries for Ant taskdef ""fop"", only 2 are actually
correct. That might mean that the others are not necessary, because docs
generation works correctly anyway.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
92edca3ea7a482d59a9086b1cb61413ed8604b67,"Remove indentation from <programlisting> blocks in docs

Many dozens (hundreds?) of documentation code blocks were indented to
match the surrounding XML or just arbitrarily. The thing is: Inside
<programlisting> tags, similar to <pre> tags, line feeds and leading
whitespace are being preserved, which looked very awkward in the HTML
documentation. While a few files were mostly correct in this respect,
which shows that it was meant to be like that, many others were not.
This was tedious, stupid work to fix, but it had to be done.

Please note that the documentation was in no way updated content-wise.
This is also overdue, but not my focus here.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
062cd2ef86a66fe3219d3c315685bbe62a07ae62,"Delete docbook XSL + DTD directories from libs, download instead

It was kind of difficult to identify and find the vintage versions used
in AspectJ in download archives, but finally I managed to. Docs
generation looks good visually, tests to be run on GitHub CI.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
51198de4ddc7521530ad49058df3f2e8c80ec981,"Delete all remaining docbook contents, download them instead

Actually, only fop:fop:0.20.5 and batik:batik-1.5-fop:0.20-5 are really
used in addition to lib/saxon/saxon.jar (saxon:saxon:6.5.3). So the rest
does not need to be replaced and can just be wiped.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9c62d17de4f69c5cd4c4c35a3ab2d1263109e163,"Fix image formatting glitch in docs/devGuideDB/ajbrowser.xml

An image which should be in its own paragraph was shown inline with the
text, somewhere to the right in the middle of a text paragraph. I
noticed while visually checking if docs generation still works as
expected after the last few commits, so I quickly fixed it.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f00f547d7b37647880e7f8fc030f9f96dbad9848,"Clean up Maven dependencies using 'dependency:analyze' goal

Notably, this change involves a partial revert of @4a5660b3, because we
are not using JUnit Jupiter yet but still JUnit 4 tests. See discussion
under commit at https://github.com/eclipse/org.aspectj/commit/4a5660b3.

Many other warnings - concerning both used undeclared and unused
declared dependencies - were eliminated by adding or removing the
corresponding dependencies from the POMs. Furthermore, I tried to make
sure that some clearly test-scoped dependencies are now actually
declared as such, so as to avoid unwanted transitivity bleeding into
compile scope and maybe unwanted classes ending up in uber JARs via
Maven Shade or Maven Assembly.

TODO: I am not so sure why modules other than 'run-all-unit-tests' would
depend on test JARs. I hope I broke nothing essential there. As of
today, the other modules where I found '<type>test-jar</type>'
dependencies are:
  - ajde
  - testing
  - testing-drivers
  - tests
  - weaver

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ce3b936892d215a25dbf6e04cf2e6eb143ac291e,"Fix undetected runtime dependency usage problem from previous commit

In module 'ajdoc', our tests need tools.jar when running on JDK 8 in
order to dynamically compile during runtime. Hence, dependency
com.github.olivergondza:maven-jdk-tools-wrapper was re-added to the POM
(with test scope this time) and Maven Dependency plugin configured to
regard it as a used dependency and not falsely report it as unused.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
57350269423de6efcaf42e2f06825110afef4612,"Fix undetected runtime dependency usage problem from previous commit

In module 'tests', our tests need Ant launcher. Hence, dependency
ant:ant-launcher was re-added to the POM (with test scope this time)
and Maven Dependency plugin configured to regard it as a used
dependency and not falsely report it as unused.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
bd1efcf9a5fbd17aa277c720c4d378e7e3cf0ff1,"Upgrade JUnit BoM to 5.7.1

We are not using Jupiter yet, but this is nice to have for the future.
Thanks to @larsgrefer for his initiative to prepare AspectJ for
JUnit Jupiter and for his other PR which also contains the same change
in the parent POM. :-)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8d2aa7417fa837e8b3a147b45c1b824797ca0b33,"Add lib/docbook to Maven Clean

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7ee0f70ce7e50e61daa41b124c7837d45bfd386f,"Remove remaining usage message duplication between ECJ and AJC

The resource key 'misc.usage' is completely gone from
.../jdt/internal/compiler/batch/messages_aspectj.properties. Instead,
JDT Core was adjusted in such a way as to patch the new resource key
'misc.usage.aspectj' into the upstream 'misc.usage' in the right place.

Now finally the properties file is as lean as I envisioned it to be,
without any loss of information and without the need of future manual
synchronisation of duplicate texts for every release.

At the same time, usage text detection in AjdtCommand::inferKind was
improved and also adjusted to the new situation.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0be7475fac44a1cbf30e5e719bc4dbd7b4df32c4,"Remove redundant 'name' and 'packaging' tags from POMs

If 'name' is identical to 'artifactId' and 'packaging' has the default
value 'jar', we can just remove those tags from the POM.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2f981bdde6263a1ab9f5e26ce202cbd8ed51ca70,"Manage version version maven-assembly-plugin:3.1.1

No more manual version setting everywhere.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d35885bc5faef4936aa5c4207da8f9a3a855630a,"Use dependencies instead of copies under 'lib' for assemblies

This is one step to get rid of org.aspectj:org.eclipse.jdt.core and
org.aspectj:asm-renamed in the 'lib' directory.

AspectJ tools + weaver uber JAR builds now use dependencies in the POM
in order to deal with creating binary + source assemblies. They no
longer rely on manually updated copies under 'lib'. Details:
  - Binaries are copied via 'dependencySets' in the assembly descriptor.
  - Sources are unzipped via Maven Dependency Plugin before including
    them into the source uber JAR via assembly descriptor.
  - NEW: This also includes ASM-renamed sources which so far were
    ignored. It is a positive side-effect from the fact that for
    ASM-renamed Maven Shade automatically creates a source JAR.
  - Maven Ant Run is no longer used for unzipping binary + source JARs.
  - While working in parallel with JDT Core and AspectJ it is now much
    easier to produce up to date artifacts, e.g. for consumption by
    AJDT, because it does not matter anymore if we forget to run the
    build in module 'lib' in order to update the JDT Core copy.

Status quo:
  - Folder lib/asm is no longer used and will be removed in a subsequent
    commit.
  - Folder lib/jdtcore-aj is no longer used by the Maven build, but
    still referenced in a few UNIX shell scripts and Ant build files.
    TODO: Find out if those are still actively used. If yes, refactor
    them to look for the file in the local Mavven repository. Otherwise,
    delete the referencing files and also lib/jdtcore-aj.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1602d79a829c060c37d0e9627909a8f3638bfd79,"Remove managing obsolete folder lib/asm

The new string AjcTestCase.CLASSPATH_ASM_RENAMED dynamically determines
the 'asm-renamed' location from the classpath, system property
'java.class.path'.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0e7ac59f24f449d6d54d31634075f9bffcb57588,"Remove some cruft from test classes Ajc, AjcTestCase, AntSpec

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
116406fbbc665f6ea6d8fccf150389d808751642,"Fix: make sure that source assemblies are attached to build

Previously I renamed the source assemblies from the uniform name
'sources' to something more individual like 'aspectjtools-sources', not
realising that the magic name 'sources' in combination with the default
configuration value 'appendAssemblyId=true' results in an artifact
classifier equal to the assembly ID, i.e. 'sources', which is exactly
what we need here, but not quite obvious. Therefore, I documented it
with comments in both the assemblies and the POMs.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f1f46b4e8bf743c0ade1a26e96591b819108d5af,"Remove build/scripts/*

These scripts look pretty antique and obsolete.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
18f3385e23b13b385edcbcc81dbb52623607dd8f,"Prepare main artifacts to be deployed via Maven, step 1

This change affects the following modules:
  - aspectjmatcher
  - aspectjrt
  - aspectjtools
  - aspectjweaver
  - installer

They have in common that they all use Maven Assembly Plugin in order to
create some kind of uber JARs with constituent modules and/or libraries.
Except for the installer, they are all available on Maven Central today,
but I think it would not hurt to deploy the installer to there, too.

Changes made:
  - Use Flatten Maven Plugin in order to create simple POMs with only
    basic information and - most importantly - without dependencies.
  - The new dependency-reduced POM (DRP) or ""flattened POM"" gets
    attached to the build, i.e. it will be installed and deployed as a
    replacement of the original POM.
  - Attaching the DRP only works for 'jar' type modules, which is why I
    changed the packaging type for each module from 'pom' to 'jar'.
  - Deactivate generation of the default JAR for each module. This is
    necessary now, since we have the 'jar' packaging type.
  - Make sure that assembly descriptors using 'dependencySet' entries
    have set option 'useProjectArtifact=false' in order to avoid
    warnings about the non-existing main artifact.

TODO:
  - Explore option to migrate from Maven Assembly to Maven Shade,
    because it does not need descriptor files, can also generate source
    JARs and can automatically create and attach a DRP which is less
    fragmentary than the one created by Flatten Maven, basically the
    original JAR minus the dependencies.
  - If in the future we want to make sure to only deploy the modules
    listed above, e.g. to Maven Central, if simply calling 'mvn deploy'
    for the whole project, we could use 'maven.deploy.skip=true' in the
    parent POM and override it by 'maven.deploy.skip=false' just in the
    few modules which need to be deployed. See also:
    https://stackoverflow.com/a/29574812/1082681
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
48e1b14cb46f389ed7cb78312d8c8ab61f1fba05,"Merge pull request #41 from kriegaex/libs-refactoring

Libs refactoring (remove libs from Git SCM)"
3f127347ceeb042f6624c9ce956cc31555bc376d,"Fix missing dependencies in module 'run-all-junit-tests'

Some runtime dependencies are reported as unused in Maven Dependency
Plugin goal 'dependency:analyze', but actually they are needed. I
noticed by chance when running RunTheseBeforeYouCommitTests in IntelliJ
IDEA for the first time after a while and dependency modules could not
find classes.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
bdb89385dd387464ab02d7655ac8d5486d32c2fc,"Merge pull request #44 from kriegaex/run-all-junit-tests-dependencies

Fix missing dependencies in module 'run-all-junit-tests'"
99476f7d8231d0c78c43057767397f1ff5964ea9,"Provision libraries in 'lib' automatically

Upon special request by Andy Clement, I included 'lib' as a child module
in the parent POM again, making several modules which refer to
downloaded library files dependent the 'lib' module. I am not sure I
caught all of them, but I hope so.

Now after cloning the project and configuring the token for reading from
GitHub Packages (sorry!), you can just run a Maven build for the main
project and no longer need to fail the first build, read the Maven
Enforcer message and run 'cd lib && mvn compile' as a first step. This
convenience comes at the price of a more complex POM and two new
profiles:

  - Profile 'provision-libs' is auto-activated by the absence of a
    marker file, kicking off the library provisioning process and
    creating same marker file at the end, if successful. Therefore,
    during subsequent builds libraries will not be re-provisioned,
    because the marker file exists and Maven skips all download and
    (un)zip steps, which saves build time and bandwidth. Otherwise
    offline builds would not work either.

  - Profile 'clean-libs' needs to be activated manually, because by
    default 'mvn clean' will not erase provisioned libraries. In most
    cases, even after a clean a developer does not want to re-provision
    all libraries if they have not changed (e.g. new JDT Core build).
    But if you do wish too erase the libraries and the marker file, just
    call 'cd lib && mvn -P clean-libs clean'.

Please note: The Maven Enforcer build step, which additionally checks
for existence of other files, still exists and was moved from the parent
POM to 'libs'. No matter if provisioning was just done or skipped
because the main marker file exists, a quick heuristic check for that
list of files is done during each build, failing the build with a
comprehensive message if an inconsistency was found. The error message
says which files are missing and tells the user:

  ""There is an inconsistency in module subdirectory 'lib'. Please run
  'mvn --projects lib -P clean-libs clean compile'. This should take
  care of cleaning and freshly downloading all necessary libraries to
  that directory, where some tests expect them to be.""

This should cover the topic.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2bc4985745f9568436a47e74feddd5a90f1bf4d7,"Remove obsolete separate GitHub build step for provisioning libraries

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
45cf22e08c42573c0da63f1486059e2eb6348f51,"Bump download-maven-plugin 1.6.1 -> 1.6.3

In the previous GitHub build, there were warnings in the log because of
failed downloads. Actually, the default is to fail the build, but that
did not happen. Let us try a more recent version, maybe it fixes an old
bug, even though in the diff between the versions I did not see anything
obvious here.

Anyway, I created an issue ticket:
https://github.com/maven-download-plugin/maven-download-plugin/issues/185

BTW, our build only failed later during the Maven Enforcer sanity check,
because several files from the check list were missing after a seemingly
successful provisioning. Actually, I am glad I added this ""redundant""
double-checking step to the build, otherwise the build would not have
failed in the 'lib' module but much later in a hard to detect spot.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3134e569917ce3f8c8054fd1b4c05e9bd981a365,"Improve 'name' tags in POMs

I tripped over not finding aspectjtools in my IntelliJ Maven view many
times, because it was listed as ""AspectJ Compiler"". So I renamed it to
""AspectJ Tools (Compiler)"". Now it resembles more the artifact ID and
still retains the information that it is the artifact containing AJC.

For the 'lib' module I removed the 'name' tag again, because it is not
one of the main artifacts we publish. Now the POMs are more like Andy
might have intended them to be, using a human-readable 'name' only for
the main artifacts.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a57efcafcfbab31635048cac9e02bbc55276573c,"Move Enforcer Plugin to 'compile' phase in 'lib'

There is a strange effect in Maven builds: Depending on which profiles
are active when building the project - even seemingly unrelated ones
like 'create-docs' or 'clean-libs' - the execution order of plugins in
the 'process-resources' phase can vary. Specifically, Build Helper vs.
Enforcer in module 'lib', which both were in the same phase, can
sometimes be executed in lexical order, which I expected, or the other
way around, which makes the build fail if the existence of the marker
file is checked by Enforcer before Build Helper even had a chance to
create it. Probably, this is because Build Helper is defined inside a
profile and Enforcer outside of any.

Therefore, the safest way to ensure correct ordering of the two is to
place Enforcer in a later phase, in this case 'compile'.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
891aee0d8c96ae1ce550b25ddc303870fb7d5de3,"Prepare main artifacts to be deployed via Maven, step 2

This change affects the following modules:
  - aspectjmatcher
  - aspectjrt
  - aspectjtools
  - aspectjweaver
  - installer
  - asm-renamed

Set maven.deploy.skip=false in parent POM, i.e. Maven Deploy by default
will *not deploy anything. Only in the modules above, we change the
value to 'true' in order to deploy those artifacts.

This setting works for both snapshot repositories (GitHub Packages, soon
to be migrated to aspectj.dev in a separate PR) and release
repositories, i.e. in the future also for Maven Central.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
47b9a0dfa872a316e8668b718fbdd63346e88fca,"Merge pull request #46 from kriegaex/lib-auto-provisioning

Provision libraries in `lib` automatically"
1fc5195245883d306e2da3877b4fe4362ff0def9,"Merge pull request #48 from kriegaex/deploy-main-artifacts-only

Only deploy main artifacts, default to no deployment for all others"
e27f605eb49f830286a4e115a44b24ff1d676ff8,"Migrate deployment from GitHub Packages to aspectj.dev

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ab208cde4276e58334f92f7607b31e77dde8a52d,Remove jdiff
4cca5efb7856245a80beb6be84dfd96584850cb5,"Merge pull request #49 from kriegaex/migrate-to-aspectj-dev

Migrate deployment from GitHub Packages to aspectj.dev"
95fc5eec2de1b46c069f805a0a8657427a1a0a0a,use the alternate maven settings by default
a9852c226012e5dc1cdfee08b25416e708dfe6fc,"Revert ""use the alternate maven settings by default""

This reverts commit @95fc5eec, because that commit was only helpful
before merging branch 'migrate-to-aspectj-dev' with PR #49, but was
actually committed afterwards, making it obsolete.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ff79bc71ab32c429a8535f30dd9dcb2b3a7ec3fd,"Remove obsolete .mvn/settings-read-github-packages.xml

The GitHub workflow also does not reference it anymore, which I forgot
to do earlier.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
49ae298d31859132fd61f187d53b91f5ec2c1d4b,"Replace links to aspectj.org by links to eclipse.org/aspectj

As discussed with Andy Clement, domain aspectj.org seems to still be
owned by Xerox, and currently no website for it is online. Therefore, it
is better to link to the AspectJ Eclipse homepage.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
de12ea9f2c59f4654c36e291e1f8160948d533eb,"Add information required by Maven Central to public artifact POMs

This is another step away from manual deployment towards Maven-triggered
deployment for both releases and snapshots. The 5 main POMs (matcher,
runtime, weaver, tools, installer) now contain information required by
Sonatype for Maven Central deployments according to:
https://central.sonatype.org/publish/requirements/

TODO:

  - Add corresponding 'distributionManagement' section and necessary
    release plugins for Sonatype OSS repositories to parent POM.

  - Enable Maven to also use Install plugin in order to automatically
    set release versions, commit to Git and tag releases, then upgrade
    to a new snapshot afterwards.

  - Make sure that Flatten Maven plugin does not strip off the required
    tags we just added to the POMs. It looks as if the chosen
    flattenMode=oss already retains the exact tags we need, only
    slightly reformatting (hence ""uglifying"") the POM. But an ugly POM
    does not block Maven Central deployments, as long as it is complete.
    So it looks as if this to-do item is already done.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c6155643d6576449f7f721e0ca26a7be9c9dc93a,"Create javadoc for all public artifacts, fix dependencies

Sonatype OSSRH repository rules require source and javadoc JARs in
order to create staging repositories for releases to be promoted to
Maven Central. So I added build steps to unzip the source JARs and then
create Javadocs for them.

FIXME: This configuration works with JDK 16, but throws errors on other
JDK versions, e.g. 14. It looks as if the Maven Javadoc plugin does not
do a particularly good job applying the plugin settings in a way making
it work with different JDK javadoc tool versions. I am saying that,
because when using the tool directly on the console, it works with basic
settings and the correct classpath.

In order to enable creating uber JARs via Maven Shade in the future, I
also added missing dependencies. Maven Assembly descriptors just assume
that all the necessary class files and sources already exist where it
copies them from. But several of the dependency modules were not
explicitly listed as such by the uber JAR modules. I fixed that.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f9bd419b71a6071d8ec5c903b1ea8e79a841b8b1,"Only sign + stage artifacts meant to be deployed

Even with the 'release' profile, it is not necessary to sign each
artifact, because only the ones to be published on Maven Central need
signatures.

Similarly, make Nexus staging deployment to Sonatype OSSRH dependent on
'maven.deploy.skip' and skip staging for non-public artifacts.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
fcb563dee0a426645cc9c1935869ac8e79f2426c,"Fix selective Nexus deployment to Sonatype OSSRH

Other than Maven Deploy, Nexus Staging plugin cannot just be added to
the 'build/plugins' section of the parent POM once and (de-)activated
with a simple property like 'maven.deploy.skip' on a per-module basis.
See also https://issues.sonatype.org/browse/OSSRH-68966. Consequently,
we do not add it to the parent but separately to each module meant to be
published.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
45254f588150c944dfde84821308d27cc9d34a37,"Replace use of ASM-renamed by original ASM

This involves replacing references in weaver application code as well as
a few tests.

In order to make AspectJ weaver + tools contain a relocated ASM version,
I added a Maven Shade relocation step after Maven Assembly created the
uber JARs. Relocation works for both binaries and sources and also
encompasses Class::forName calls like in class AsmDetector.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
221c3948785b28e842af7c6ea4662a2ea33d24e5,"Completely remove module ASM-renamed + references

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2c0079126c70d843e49efe626c9ac673a5054e27,"Delete all release POM templates in 'build'

In order to keep developers from creating AspectJ releases manually or
using Ant script 'build/build.xml', get rid of all POM templates. This
step does not involve updating any build or release how-to documents or
any other clean-up work under 'build', but it is a first step and a
simple, implicit reminder that now we can build and release using Maven.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d2d5533f8f2f7b8116d6e171cc4e7d39f6ce1a29,"Merge pull request #53 from kriegaex/remove-asm-renamed

Remove ASM-renamed, replace by dynamic relocation via Maven Shade"
bd854373aa6e10a1fd472ec191c2072ec307ec75,"Merge pull request #51 from kriegaex/remove-github-packages-references

Remove GitHub Packages references"
f748de9445d0327b8d4fa8c24fd14743cbf0a328,Merge remote-tracking branch 'xander/maven-central-deployment'
07405dcd77d801bcce1b91a489f56fd1cdffec08,Fix pom.xml problem
ca7cbda04dc3fd28e426570f3f766098ea6e8b3a,polish
9ba62b64fb2fd3a8b20d259189d392d9a4b30b72,polish
da333d21e0a5e6fb052803abe9c08984c7386905,"Revert ""polish""

This reverts commit 9ba62b64fb2fd3a8b20d259189d392d9a4b30b72."
2ea1a6e46f056ec0fc80eb1abf2eba6669d7157e,"Use canonical snapshot version 1.9.7-SNAPSHOT

Before, we used 1.9.7.BUILD-SNAPSHOT, which according to Andy Clement
was originally an intent across a group of Spring projects he was
involved in, to ensure that SNAPSHOTS were sorted alphabetically ahead
of MILESTONEs and ahead of RCs.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
269fa294abb8c0d1209ca76b15327f41df0bae9d,"Merge pull request #56 from kriegaex/canonical-snapshot-version

Use canonical snapshot version 1.9.7-SNAPSHOT"
1333bdd6fe57fbe004506b34c9e51cb010033529,housekeeping
27c38e104eeb473996547c9777ae9790834549fc,ECA reference
9956a10af338a2007469f49eac0868bd24da5f8b,Slightly more detailed readme
35a99d625f957c378496ea55ccf2f0adaefae55d,Documentation links
86a026c81399be570d96a4ceb901dcd5c649c60e,"Upgrade Maven Shade Plugin to 3.2.4.MSHADE-252-391

Unfortunately, the issues fixed in the aspectj.dev fork are still not
available upstream (MSHADE-252 is merged, but unreleased, MSHADE-391 is
in review).

Also use Maven Javadoc Plugin version from parent POM.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e6458de6e48a7add4843a4df5467fb3084a3f526,"Fix Javadoc generation by also unpacking relocated ASM sources

Suddenly, for AspectJ Weaver + Tools Javadoc generation started to fail.
This might be due to switching from ASM-renamed to dynamically shaded
ASM. Either way, the Javadoc tool complains about the missing source
files. Therefore, we also unpack them from the source uber JAR now via
TrueZIP before generating Javadoc.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
08c6b70963e778bf2d12f063b833a2f544b9d37c,"Set version to 1.9.7.M2

Also depend on JDT Core 1.9.7.M2

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f56a3a6f3366e1d84fe0871e5deeb81a49681129,"Set version to 1.9.7-SNAPSHOT again

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
aa9f29695cdb35250c90e027cb53cda9fb158586,"Add ""how to release"" guide and point to it from README.md

Also fix a few minor wording and formatting things in the main read-me.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
520ed7b623263927b30fe1898b36f411490ba34d,"Merge pull request #58 from kriegaex/release-1.9.7.M2

Release 1.9.7.M2"
cfca36da03709be5c0d9d010a8cbd6f67816fa6c,"RELEASE.md: Deploying AspectJ installer to aspectj.dev

How to deploy to the aspectj.dev Maven repository, mounted as a WebDAV
share.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
94499e06295b4d3754c7228ad4e5710d2ac5ba42,"Revert ""Always run javadoc using the ToolProvider API""

This reverts commit f70aeb5e, except for some commented-out parts of
code and an unused method. I also simplified the code, e.g. with regard
to exception handling, and did some more cosmetic stuff, but basically
it is a revert.

In order to make it compile on more recent JDKs which doe not have class
com.sun.tools.javadoc.Main, I used Class.forName in the method being
called on JDK 8 only.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9721f936bd8c7b8e95c100d7b2d0261950f8a80c,"Set version to 1.9.7.M3

This is a bugfix release, reverting the essential parts of commit
f70aeb5e, because it causes AspectJ Maven integration tests using
javadoc to fail on JDK 8.

See commit discussion on
https://github.com/eclipse/org.aspectj/commit/f70aeb5e#commitcomment-51417353

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b9b13b7b5a46529b4ddd5ac1ece5a31f9886c57c,"Set version to 1.9.7-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
39e93564bd831f74675f7917fc2746b71b510424,"Remove duplicate command from RELEASE.md

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6d1b57b0abafebd7bce63a7e16cb6eb9e0e369cc,"Merge pull request #59 from kriegaex/deploy-installer-to-aspectj-dev

RELEASE.md: Deploying AspectJ installer to aspectj.dev"
82df3f0fc9842758f15f12299c9113e48f1ccb5c,"Merge pull request #62 from kriegaex/release-1.9.7.M3

Bugfix release 1.9.7.M3"
e09d968326ee53f903ceaae086735698b6ce7109,add synchronization to LocalVariableTable
49cb924f5402c9d24379ae1af62def6fa5892649,"Upgrade license from CPLv1/EPLv1 to EPLv2

This was required by the Eclipse team as one precondition for the next
release.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9131c030bd77797b3593dee984ac75821055a44d,"Add release notes for 1.9.7

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
67b1c353a02c335074a736ebf76a49bf24eefb19,"Merge pull request #65 from kriegaex/licence-upgrade-epl2

Upgrade license from CPLv1/EPLv1 to EPLv2"
635cfd1f2e8d9fbca4bd1ac384aa03e5eb424be7,"Merge pull request #66 from kriegaex/release-notes-197

Add release notes for 1.9.7"
d2c3c52c5284af9d0d07bdc061a7d0a05def0883,Added issue tracker links
dc5be1281341230ce7d0f34cc2cf71c1bef95837,"Detect previously failed downloads by verifying existing file checksums

There was a helpful option hiding in Download Maven plugin, which we use
to download artifacts unavailable on Maven Central, such as the Ant
installer and several source packages: 'checkSignature'. It has the
effect of verifying checksums of existing, i.e. previously downloaded
files too, not only newly downloaded ones. This helps detect interrupted
downloads from previous runs or generally invalid files, whatever the
reason. I was looking for this option before, but did not notice it
because of the name. This is about verifying checksums, not checking
signatures. Anyway, a maintainer just told me about it here:

https://github.com/maven-download-plugin/maven-download-plugin/issues/186

I requested that the option be renamed and described better.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1f76a06276b1dd44d70b78854bc9fea1268a0bb0,"Build readme whitespace cosmetics

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
437b348674bb90e9b226a559d3b2736845e20d20,"Merge pull request #67 from kriegaex/libs-improve-download

Detect previously failed downloads by verifying existing file checksums"
33846f488645d1821122f3aeeba6a8085adeeffe,"Document build profiles and properties in docs/developer/BUILD.md

In doing so, I also noticed a few things in need of improvement. So,
documenting the build also drive those enhancements, such as
  - the new 'fast-build' profile skipping test compilation and execution
    as well as documentation generation,
  - an option to skip generating source assemblies,
  - to skip unzipping source assemblies if javadoc generation for them
    is to be skipped too,
  - activating the 'create-docs' profile by property which is
    true by default instead of using 'activeByDefault=true', because the
    latter does not work reliably if other profiles are activated
    manually according to a Maven bug that was closed as ""won't fix"",
  - no longer generating separate javadocs for the 'runtime' module,
    because that module is not deployed and the main artifacts recreate
    Javadocs from scratch for all of their constituent sources anyway.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a2482c83a09833ac0f6cf03643b32777b77e4219,"Fix minor indentation issues in org.aspectj.tools.ajdoc.Main

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e2797e51b64f63f3b13820e4c5543d0bcbde21c2,"Add link to BUILD.md to main README.md

Plus a small enhancement in the build description.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d17189c430a7ffd1ec966759a93b3ed348766650,"Merge pull request #69 from kriegaex/document-improve-build-profiles

Document build profiles and properties in `docs/developer/BUILD.md`"
e7c98e473a9890565952f78df78490b641834394,"Merge pull request #64 from SmallGiantGames/bug415838

add synchronization to LocalVariableTable"
0c5302714d9a1a38289f23f40392a967a5a90434,"Update RELEASE.md

Fixes #71"
8a8434b6ea745f0b19babd9031338819fbb17c5b,Update RELEASE.md
3d1921a50ea83c7f654cb60436b3068bb1dcdb62,Finalize 1.9.7 release date
5a1102907304fa142785302eff88bf7a988bddbe,Merge branch 'master' of https://github.com/eclipse/org.aspectj
a22efad2542a2252c8803d0083b80855826b97a7,1.9.7 release
e22903e16945d127827a491034212bffaabb7067,Set version to 1.9.8-SNAPSHOT
89f9bea949a7d51828f545da1ad80c049b9ecb6a,Update RELEASE.md
378a1e44531f308a25fadde2a8c09c1fdf9e2b74,"Minor build + release read-me improvements

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e220e5166d7adbdc968db8a322a00a1d55f33eae,"Minor code clean-ups

Add a bit more type safety and accept some minor refactorings suggested
by the IDE.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f347cea0e8ece60051302306e7665d0f58295117,"Merge pull request #75 from kriegaex/minor-code-cleanup

Minor code clean-ups"
4960952bc2b6f253a9763534b5a492074d69318c,"Merge pull request #74 from kriegaex/readme-cosmetics

Minor build + release read-me improvements"
18b5bb07747084fb0857148139260c085bfb196f,"Quick fix for AJC '--release' option

Work in progress, relates to #70

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
dfcf1d77a65344934f0e642907819f16b5a3af0a,"AjBuildConfig: simplify null classpath removal from path list

Use removeIf(Objects::isNull) instead of old-fashioned iterator loop.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9de03c3ea52f78678d8c47296395d5f01d031a48,"Add AspectJ 1.9.7 and Java 17 test skeletons

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
68a8916c9bda92df9fb31d4fa8988511a2294d04,"Add integration test for '--release N' compiler option

Relates to #70

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c973566f543122c56b06b82fae4671dc880dc05f,test for failing synchronization in LocalVariableTable.unpack
82f13664d0fcc9a392486724c5e1278dc8d9a408,"Merge pull request #73 from kriegaex/ajc-release-option

Enable AJC compilation with `--release`"
91024728dc6033889507f6c5d7510931761fb1b8,minor improvements
a8239df4c8485b36916d1dfc2ec4b73820629e65,"Merge pull request #77 from SmallGiantGames/bug415838-test

Test for 1.9.6 concurrency bug in LocalVariableTable.unpack()"
4b2be42d2e9d1c979803f6e2d9a0a1673bc285d6,Set version to 1.9.8.M1
14d58cb7675662c075cd6b7b31a4bc873cc9bdfc,Set version to 1.9.8-SNAPSHOT
3fcff275b1eb526a4f49230b864669281fe2af2d,"Merge pull request #80 from kriegaex/release-1.9.8.M1

Release 1.9.8.M1 featuring `--release N` fix"
4796e6457fee592fca5e1dbea7a03ce6599b725f,"Add ""Setting up an AspectJ development environment"" guide

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
cec3fc86cb886165d049ff242d7abdf7c8608e61,"Merge pull request #82 from kriegaex/readme-dev-tools

Add ""Setting up an AspectJ development environment"" guide"
e634db03482c8620f2ce39484501bb23e0a74471,"Stabilise flaky test in Ajc1612Tests

By increasing from 10,000 to 1,000,000 rounds, the times compared for
performance become considerably longer (but still in the tens or
hundreds or milliseconds), decreasing the probability of the test
failing due to CPU load or some other random effect.

Closes #83.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
dd712993651f9f314aa6cb9a58fbcce90a175868,"Improve flaky test in Ajc1612Tests further

By using System.nanoTime() instead of currentTimeMillis(), the flakiness
even with the original 10,000 rounds is significantly lower than before.
Making my IDE repeat the test until failure, it took on average 150 runs
to make it fail. So, the more accurate timing helps. With 100,000
rounds, it was even more stable, but eventually I could make it fail.
With 1,000,000 rounds however, even running the test 500x could not make
it fail. So for all practical purposes, I think the test is reasonably
stable now.

Closes #83.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e18f5dd41b3f390883d8d127b086a3f58f929e7e,"Refactor AnnoBinding test class used by Ajc1612Tests some more

Improve improved general logging, error messages, variable naming and
indentation, making the code of class AnnoBinding a bit more readable.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
18fd62a4e35fd582935265656ccffce0f91373ad,"Remove logging dots per test step in AjcTest.runTest

Methods AjcTest.runTest was logging something like ""TEST: ....""
(4 dots), i.e. one dot per performed test step. Not only did this not
add much value, but due to usage of PrintStream.print for line
continuation it also messed up test step logging by scattering seemingly
random dot characters across test step logs. This looked quite ugly, so
I simply removed it.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
17f883483198cfe3330e4472b010738c2cc1d0cd,"Merge pull request #84 from kriegaex/test-issue-83

Stabilise flaky test in Ajc1612Tests"
acfffe259d890a58da7f78079c675b0fba7b7f74,"Bump download-maven-plugin to 1.6.7

After my PR https://github.com/maven-download-plugin/maven-download-plugin/pull/191
was merged and https://github.com/maven-download-plugin/maven-download-plugin/issues/186
was closed, use a new release containing the option misnomer fix in
order to make the POM more readable.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
eef058c4c5a70359a35da51b77e638a57126081f,"Merge pull request #86 from kriegaex/update-download-maven-plugin

Bump download-maven-plugin to 1.6.7"
c953f9aad859285290b87208c89a2ea7d06b679a,"Bump ASM 9.1 to 9.2 (Java 17+18 support)

This is a first, preparatory step

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5265e1af8a13cb55215aea7cedc23784e4108a4b,"Bump JDT Core from 1.9.7.M2 to 1.9.8-SNAPSHOT

Not Java 17 compatible yet, but refreshed from main branch for latest
Java 16 updates in compiler (mostly about records).

Let's see if CI is still green before trying to upgrade JDT Core to
Java 17 beta.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1980df92d866ed4c047971da6706661e1b65ac4f,"Add Sonatype OSSRH snapshots repositories

Otherwise
  - JDT Core 1.9.8-SNAPSHOT (classic OSSRH snapshot URL)
  - AspectJ Maven Plugin 1.13-SNAPSHOT (new OSSRH snapshot URL)
cannot be found

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0a1a66397b71d0e81270856db8eb30c55ec7adbd,"Add AJDT support for printing switch expressions

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
665d6a9498360104c662d138df79304210df66f2,"In ITD processing, use setter instead of assigning Scope directly

Change calls like
  pre.scope.parent = newParent;
to this pattern:
  // Use setter in order to also update member 'compilationUnitScope'
  pre.scope.setParent(newParent);

This should fix lots of failing tests after updating JDT Core.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c80551f1d36e288b4b3be658e70c0560b7e04c9e,"Test comment cosmetics

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
620add3a3c18dc3e126a03254b6482ad9ab7ef36,"Add + activate some Java 17 tests

- Fix one fault sanity test configuration
- Deactivate Java 16 preview tests (no longer supported by Java 17
  compiler)
- Test sealed classes as final on Java 17 (no longer preview)
- Add tests for JEP 406, pattern matching for switch (preview). At
  present, the beta 17 branch of JDT Core does not handle the tested
  features and expected compile errors correctly yet, so I had to
  temporarily deactivate test execution, only printing TODO messages.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6a4ab3cbaac58eddedc88b2a78f61a94174b6af2,"Activate Java 17 build in GitHub workflow

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
bee1f38f96469b5cc4eb6d61e895d401bf3f4d8f,"Add JDK 16+ workaround for Nexus Staging Maven Plugin

Plugin version 1.6.8 does not work on JDK 16+ without special MAVEN_OPTS
opening certain modules, because the XStream version used needs it. One
workaround is to use a more recent XStream version.

TODO: remove plugin dependency after OSSRH-66257, NEXUS-26993 are fixed.
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
61fc75678c7ff82e0dae1f496dfb7cf28a464f9b,"Merge pull request #91 from kriegaex/nexus-staging-new-workaround

Add JDK 16+ workaround for Nexus Staging Maven Plugin"
30773df20ff88e4fb5ba76a1e0aadc4b02ba0d58,"Add Sonatype OSSRH snapshot (plugin) repositories

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
93e3bd515e5244a2d365862f07aaf7a449b6d510,"Update ECJ version, activate Java 17 preview features tests

After JDT Core (ECJ) was updated to the final Java 17 feature set, the
tests now pass as expected.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d9c96991b813b0a95a950e51e8f6149b9cae5ed7,"Bump GitHub CI build from JDK 17-ea to 17, remove 16

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1dd6a2d47cb409e6f932728e58b41d15c3cf980c,"Rename DOM AST class TypePattern to AbstractTypePattern

Since JDT Core 3.27 (Java 17), there is a name clash, because the new
class org.eclipse.jdt.core.dom.TypePattern (JEP 406) gets relocated to
org.aspectj.org.eclipse.jdt.core.dom.TypePattern during shading.
Fortunately, this made tests like AjASTTest and AjAST5Test fail with
rather nasty errors like:

java.lang.VerifyError: Bad return type (...)
  Type 'org/aspectj/org/eclipse/jdt/core/dom/TypePattern' (...) is not
  assignable to 'org/aspectj/org/eclipse/jdt/core/dom/Pattern' (...)

TODO: Update AJDT references to the renamed class in the following
classes after refreshing the AspectJ sources:
  - ExtraPackageReferenceFinder
  - ExtraTypeReferenceFinder
This also means, that for Eclipse 2021-09 (4.21) we need a new AJDT
update site, because simply deploying to the 4.19 one would probably
lead to problems in the IDE.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f7b7843748366c7310b165b2c3fc088b2c65d245,"Remove Java 8 from GitHub workflow (ECJ needs Java 11+)

Since JDT Core 3.27 (Java 17) and Eclipse 2021-09 (4.21), respectively,
ECJ no longer works on JDK 8. Even if we backport JDT Core classes, some
of its dependencies contain Java 11 class files, which ultimately also
means that ACJ no longer works below JDK 11 due to those transitive
dependencies, e.g. org.eclipse.core.resources-3.14.0.jar.

For now, I added JDK 14 to the build matrix, i.e. we currently have 11,
14, 17. When JDK 18 is released, we can switch to 11, 17, 18, i.e. keep
the two LTS releases plus the latest one.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4ebacb393999f12ed80baf96c376b09226a46779,"Fix Java17PreviewFeaturesTests (locale-specific floating-point output)

The test worked on my local workstation with German locale, but not on
GitHub with English locale.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f53a1b6eff89c7e0a54ccb72c46d35b9219878d9,Merge branch 'master' into java-17
25d4a1a3d730828a4b5f98e7af89e04488882f01,"Bump JDT Core to 1.9.8.RC1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e16efa31d44591dd2a14e552a1fd71cd809d42a0,"Add AspectJ 1.9.8 release notes

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7eeb27c73003bff73ccf4829310097a540926f98,"Release version to 1.9.8.RC1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
29b024efe4cb4db803103aa099d60b9bc85bac6c,Set version to 1.9.8-SNAPSHOT
4ea11b44eca0f45f37e0f652506f1a426ecca733,"Merge pull request #93 from kriegaex/java-17

Java 17"
87fc651c50dd13b46c0cd869af2150ffa8b94a5f,Bump com.thoughtworks.xstream:xstream to 1.4.18
8bdffe89915fbfe7460231dd3f328826b4ee09e4,"Improve README-198.html

Adjust both content and document structure.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b1ef6737054f21c26f273aa88cb0826d0d0d10f6,"Revert ""Bump com.thoughtworks.xstream:xstream to 1.4.18""

Reason: 1.4.18 causes exceptions during deployment.

This reverts commit 87fc651c50dd13b46c0cd869af2150ffa8b94a5f.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e1cf947a2186b3d1b3f0531f7ba533a196ec5e7a,"Bump JDT Core to 1.9.8.RC2

Fixes JDT Core bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=576093
and related AspectJ issue #95.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5d4f2c2a6b5df574360e5c5fac6ce6a5cbea833f,"Set version to 1.9.8.RC2

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
32f4401c34c10dba6aa16d63f2456740d80f4ee1,"Set version to 1.9.8-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0f85ca109b9e6ab849e201e76f62d5023cbfcb98,"Merge pull request #96 from kriegaex/release-198

Release version 1.9.8.RC2"
904056b5f1e186d6f34f6a6f0d1f05b2a22280fc,"Remove redundant OSSRH snapshot repositories

Background: When only consuming dependencies or plugins from OSSRH
snapshots, there is no need to differentiate between the classic and
new URLs. This is only relevant when deploying snapshots, i.e. in the
'distributionManagement' POM section.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2998309ea2f8e746a55926ff73215b93bbadfb80,"Make AspectJ Ant task compatible with Java 16, 17

Closes #97

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
37773d026ac7d3de2e7cdb8a946a8c57a5050439,"Merge pull request #98 from kriegaex/release-198

Make AspectJ Ant task compatible with Java 16, 17"
99f1df6dc8cd4ecbe99bb7950cac570d6efe025c,"Minor 1.9.7 to 1.9.8 version bumps in docs and Ant script

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
bc2c65717d96e5e9cc1a454e5b0f8f258f2d802e,"IDE.md: Add Eclipse update site for AJDT compatible with 2021-09

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
793a015abbdf77e20052362db626d9aea855c16b,"According to javadoc File.isDirectory 'true' if and only if the file denoted by this abstract pathname exists and is a directory.
It means that separate File.exists() check before File.isDirectory() check is redundant."
b1c52e2f5eb624037b8c799c20fbd1b4fd611d9a,"Replace uses of StringBuffer with StringBuilder.

StringBuffer is a legacy synchronized class. StringBuilder is a direct replacement to StringBuffer which generally have better performance."
7cec6ee4dae90cb30d750cd1e0451665383d871f,"Trim trailing whitespaces.

Trailing whitespaces are useless. Most of code-styles forbids them. Most of editors always trim them on save.
I propose to clean up project from trailing whitespaces in all java files at once."
bfd6fee99d2685751a6d49eb29a0173c3f825c09,"Cleanup redundant boxing.

Methods Integer.parseInt/Boolean.parseBoolean should be preferred over Integer.valueOf/Boolean.valueOf/ if final result is primitive.
They are generally faster and generate less garbage."
c4c3ceac6928d57df13684d713933867729e9d64,"Update org.aspectj.matcher code to use generics.

Generics make code more type-safe and allows removing ugly type-casts."
8b42ec9980b5a03c3d189156deb4b1212b26b793,"Merge pull request #99 from kriegaex/release-198

IDE.md: Add Eclipse update site for AJDT compatible with 2021-09"
cbdb8e067c1c2b0d8ac19015ea4f7aa224eb54de,"Incorporate JDT Core fix + test for #105

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
90ae35226e9bc9b06c1c8315cce0ced98fba3686,"More minor 1.9.7 to 1.9.8 version bumps in docs

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
99448ba57290ecf76384a2a778532f362399e50d,"Document bugfix #105 in release notes

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d2588d086ff61d65cd90a376732ae1b9b4d646dd,"Set version to 1.9.8.RC3

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
846776147b46a26b352d1d364d19d08ef48cb464,"Set version to 1.9.8-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2544ad77d9ec7751ca298b4a09848487305a27d3,"Add forgotten Bugs198Tests to test suite

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
90cfa088f5a2c0c8eb2b04553e14c560f472512a,"Merge pull request #106 from kriegaex/release-198

Release 1.9.8.RC3, fixing #105"
27aba3f4dfb18600f6b83e8cdf4e268d63d48ec0,"Merge pull request #100 from turbanoff/File.exists_before_File.isDirectory_is_redundant

Remove redundant File.exists() check before File.isDirectory()"
5abc2f1dce1e97b92acc5562b3c5fa32cf0abb5d,"Merge pull request #101 from turbanoff/use_StringBuilder_instead_of_StringBuffer

Replace uses of StringBuffer with StringBuilder."
7a10203a7c9c846b6778c269cb529242b893149d,"Merge pull request #102 from turbanoff/trim_trailing_whitespaces

Trim trailing whitespaces."
80e0c5adc8f534bee0914c5f9e4b82ce417aaf69,Replace more usages of StringBuffer with StringBuilder
3f6f25d6a1dd41632dcdfeb98f455aea2737cb7f,"Merge pull request #107 from turbanoff/more_StringBuilder_instead_of_StringBuffer

Replace more usages of StringBuffer with StringBuilder"
4021ffcbfe320a1b91bb2bcee7a112f7122ef82d,"Merge pull request #103 from turbanoff/redundant_boxing

Cleanup redundant boxing."
4c8c90de69b4e3cdeea0f598fea5a5358ac2c861,Reduce empty array allocations
be522b7e8a591ef54f71d574dd5c76799a2b5136,Use StringBuilder/StringJoiner for concatenation String's in loop
92779d0829d41d55cae300d4d4d5a67cff72916d,"Fix ConstantDynamic to use the right tag.

The class ConstantDynamic was incorrectly using the `InvokeDynamic` tag
during construction which meant after reading in code containing a
`Dynamic` reference, it would incorrectly be written out as an
`InvokeDynamic` reference. There is not much code out there using
Dynamic so wasn't uncovered before.

Fixes #68"
de63b63d8264efc9c81aa667546d028859b7a90c,"Add test for Java 11 constant-dynamic

Relates to #68.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
250aa63cb28f3915d32ad67b881bd1dad8222320,"Update README-198.html with condy bugfix info

Relates to #68.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
254ba9e8bb201a912a326277b29a602b0054a826,"Merge pull request #111 from kriegaex/release-198

Add test for Java 11 constant-dynamic"
605b700abfb1cffcc3d39ae768d048bf6a8fef2a,"Merge pull request #110 from turbanoff/use_StringBuilder_for_concatenation_in_loop

Use StringBuilder/StringJoiner for concatenation String's in loop"
04b4ff08535291ac111884320661ae23f1d7a3c9,"Merge pull request #109 from turbanoff/avoid_empty_arrays_allocation

Reduce empty array allocations"
8cdc6f3df73d831105fdb19e1ac308b627dcf8b2,"Merge pull request #104 from turbanoff/use_generic_instead_of_raw_types

Update org.aspectj.matcher code to use generics."
a877b48c51518844f847e953bc80c356609766f8,Update 'runtime' code to use generics
1b3cead1715cd4f233d81c88ba7a33dc1aa59886,"Merge pull request #112 from turbanoff/use_genercs_in_runtime_module

Update 'runtime' code to use generics"
0e58847d8d341b70734576aa813f755d9a716a18,"Optimize class loading

In our project we found out that during the build up of the spring context
the class loading takes a very long time.
Root cause is the huge amount of file I/O during pointcut class loading.
We are taking about ~250k file loads.

With these changes we managed to cut down the starting time by around 50%.

What we found out is that IMHO - the clear method of the ClassLoaderRepository
is called far too often -> in our settings this resulted in not a single cache
hit as the cache got cleared permanently.
Therefore we de-actived the cache clear calls inside the ClassLoaderRepository.

Secondly we changed the Java15AnnotationFinder in a way to not always create
new objects for the ClassLoaderRepository but re-use one static instance.
Otherwise we experienced >100k objects being created.

Last but not least we introduced a cache for unavailable classes so that
they do not have to be looked up using file I/O over and over again.

The whole behavior is configurable via
+ org.aspectj.apache.bcel.useSingleRepositoryInstance (default: true)
+ org.aspectj.apache.bcel.useUnavailableClassesCache (default: true)
+ org.aspectj.apache.bcel.ignoreCacheClearRequests (default: true)

Signed-off-by: Stefan Starke <stefan@starkeweb.org>
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4ee5489a4ad8276895e35bb382d84075aff9c11b,"Optimize class loading - make backward compatible with legacy behaviour

Now the defaults are:
+ org.aspectj.apache.bcel.useSingleRepositoryInstance (default: false)
+ org.aspectj.apache.bcel.useUnavailableClassesCache (default: false)
+ org.aspectj.apache.bcel.ignoreCacheClearRequests (default: false)

I.e. the new caching optimisations are opt-in instead of opt-out as
originally designed. This might change in the future, but for now
without any additional tests and experience with the new feature let us
be conservative and make the build green first.

I also added a few more code review findings concerning backward
compatibility, which was less than 100% even with all three flags
deactivated.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3227aad604f040cdced47d7a8462acf563f52ef6,Couple of basic tests for the repository optimizations
ffda2dde2ddcafc429cc36f19433cdc39401ea1e,Update 'weaver' code to use generics
08414a740dc00b3b3d08fc01e2d1a5b947395a45,"Merge pull request #113 from turbanoff/use_generic_in_weaver_module

Update 'weaver' code to use generics"
a66d6da148455ba8485a2272b4efcb83092735d6,Update 'taskdefs' code to use generics
b720626100766ec0c34985404d774eccb51efdc0,"Fix annotation style support for if(true) and if(false)

The documentation specifies annotation style pointcuts
can use if(false) or if(true) and not require a boolean
return value and body for the @Pointcut annotated
method but it doesn't work without this change to validation
that recognizes the situation.

Fixes #115"
372b53f3b370031339b04926470ed60bd9e2c49f,"Restructure README-198.html a bit

Move usage hints about compiler preview features and LTw on JDK 16+
towards the end.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
068381dcb7181badd021f842d77b5220936e2e9d,"Add more content to README-198.html

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
065a854ee6e551667e03a74f772f4bc097cfff6e,"Merge pull request #116 from kriegaex/release-198

Add more info to 1.9.8 release notes"
a6697eca3069ba13fea85827b86c6bc98b0df7be,protect against NPE for inheritance and annotation style
ea734d7e5d9b54415d049699494fa095c324daf9,Try to improve error reporting when Asm access issues
f1cb850e40b98dadfcaf0c6ea27531399a307529,polish - typo
fab59b5d20ee3ad5d49920c4e9fe785f58820614,"Improve annotation style if pointcut handling

This fixes:
- negating annotation style if() pointcuts doesn't work
- annotation style if() pointcut not able to use a binding
  that is not exposed

Fixes #120,#122"
c4d819539764d4c7da5a72cd04c6ac405b188582,"IDE.md points to AJDT Eclipse update sites

Because the Jenkins builds for Eclipse now exist and deploy to the
correct update sites, we no longer need the AspectJ.dev ones."
812ebc15e056d100e9b6b22d008a4c7d9d2be607,"Update README-198.html and set release date

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c8da9556e21be5b919c3f74d868202d7e564e17c,Set version to 1.9.8
8960bf2b024fd2ba39e45c07424f52c7a735bba2,Set version to 1.9.9-SNAPSHOT
0fe9c68ec1aecdd80798b0113bb02325162e2f36,"Merge pull request #121 from kriegaex/release-198

Release 1.9.8"
133685a5429967aca56f24ddf667e718d2f90097,"Move some tests from Ajc198TestsJava to Bugs198Tests

They were accidentally stored in thw wrong test class, not just because
they are bug regression tests, not 1.9.8 features, but also because they
are meant to work on Java 5+, not on Java 17+ like the ones in
Ajc198TestsJava.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0fb70c99cfc6432ceb8357f211722ca0be2dc9c4,"Regression test for #125: Bugs198Tests.testGitHub_125

This test fails when run against AspectJ 1.9.8 with JDT Core 1.9.8.RC3.
It passes when using the latest JDT Core 1.9.9-SNAPSHOT. It sets system
property 'org.aspectj.weaver.openarchives=20', provoking open classpath
JAR file exhaustion when compiling a simple class with AJC, i.e. JARs
are being forcibly closed and automatically re-opened, as soon as they
are needed. Before the JDT Core bugfix, this test causes:

java.lang.NullPointerException
  at ....compiler.batch.ClasspathJmod.getModulesDeclaringPackage

With the bugfix incorporated into AspectJ Tools, the problem is gone.

Note: New test dependency 'io.github.bmuskalla:scoped-system-properties'
helps to test compilation with the temporarily changed global system
property in isolation, saving the environment in a thread-local
variable and later cleanly restoring the original values again. If we
ever switch to parallel test execution, this would otherwise influence
other tests and potentially cause weird side effects. Better safe than
sorry.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f34c101b67aae84c53e792cbc31ab45f6303c6d7,"Bump JDT Core to 1.9.9-SNAPSHOT, incorporating #125 fixes

This should make Bugs198Tests.testGitHub_125 green, fixing problem #125
in AspectJ.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7405690d0d8ab63bc45cc1fc79ad9141b5a0ddc1,"Merge pull request #127 from kriegaex/gh-125

Fix classpath JAR close & re-open problem in AJC"
102e0617a4bbcf0bd232b4f64995161db8681099,"Merge pull request #114 from turbanoff/use_generics_in_taskdefs_module

Update 'taskdefs' code to use generics"
2301b3677678e86673ebd0cbe7bb9740ebfba84a,"Cleanup redundant type casts, due to too weak variable type declaration"
c2de53913d15eed07e8eb8c56a0d065ad7fb2ebd,"Merge pull request #130 from turbanoff/cleanup_too_weak_variable_types

Cleanup redundant type casts, due to too weak variable type declaration"
e039fbe8d650122c895cbd194f9c3cf5805f47c9,Fix poor variable name
b91a93f32673840b894e1c46604df400b2f4e7da,Update 'org.aspectj.ajdt.core' code to use generics
4ada4f156f269dca3d64a51d9f09f1d1db830da2,"Add GitHub Dependabot

It will create PRs for Maven and GitHub action updates. Of course, we
cannot simply merge the PRs, because Dependabot has not singed an
Eclipse CLA, but at least we know about updates and how they affect the
build result. Then we can decide to clone the changes and commit them
manually.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
eef799dcced81dc6dc5e46b8ac24b7ee99ad764c,"No automatic builds for Dependabot PRs

Otherwise, Dependabot would run builds whenever something is pushed on
master and it rebases its PR. It is still possible to just click on the
skipped workflow in the PR and then issue ""re-run all jobs"" in order to
perform a build.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
99c4ebcc2d0cc936e0e56c5e3c53e061b2794e9b,"Bump actions/setup-java from 1 to 3, use Temurin, drop Java 14

Adopt OpenJDK moved to Eclipse Temurin and is no longer updated. Temurin
builds for JDK 14 are however not available. Therefore, we drop the JDK
14 CI build.

Bumps [actions/setup-java](https://github.com/actions/setup-java) from 1 to 3.
- [Release notes](https://github.com/actions/setup-java/releases)
- [Commits](https://github.com/actions/setup-java/compare/v1...v3)

---
updated-dependencies:
- dependency-name: actions/setup-java
- dependency-type: direct:production
- update-type: version-update:semver-major

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
efdcca01d9afa6a3c5e99fdc956f46f81644041b,"Bump actions/checkout from 2 to 3

Bumps [actions/checkout](https://github.com/actions/checkout) from 2 to 3.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v2...v3)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-major

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d3a06a6942b6f69ce9b5b4403d3c1cf1803cf01e,"Docs: add AspectJ Java version compatibility table

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6dc09db0ca1589f8c53c4dca054e3a852eaaecba,"Prepare code, tests and docs for Java 18

- JDT Core dependency in pom.xml
- Constants.java
- LangUtil.java
- AjcTask.java
- messages_aspectj.properties

- XMLBasedAjcTestCaseForJava17Only.java
- XMLBasedAjcTestCaseForJava18*.java
- tests/bugs199
- tests/features199

- JavaVersionCompatibility.md
- README-199.html

- GitHub CI build

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
09d5772dba8fa81ed6ee1a74ae7e7721cfc3787c,"Use '-Djava.security.manager=allow' on Java 18+ (JEP 411)

JEP 411: Deprecate the Security Manager for Removal,
see https://openjdk.java.net/jeps/411.

As of Java 18, the new API for blocking System.exit is not available
yet, see https://bugs.openjdk.java.net/browse/JDK-8199704.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4075a0bd136c083a67d6ddf7c2e73bddf345af5a,"Use static imports for file and path separator constants

It makes concatenated paths a little more readable.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1ff8e0915c4a47e63415069d1cee33e6493a638f,"Use 1.9.9-SNAPSHOT AspectJ libraries in libs/test, libs/aspectj/lib

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a385d8b6613b4dbdce81880a84cd709fb09026d6,"Fix broken 'useFullLTW' test mode

It was referring to a no longer existent weaver under
aj-build/dist/tools/lib/aspectjweaver.jar, which now has been replaced
by the new file lib/aspectj/lib/aspectjweaver.jar.

Several tests were broken, not finding the agent. But because those
tests make no assertions, nobody ever noticed. Only when I had to change
some LTW tests from in-process to full LTW mode (see next commit) due to
them now obviously calling some code paths which need '--add-opens', I
even noticed the problem.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5288ef1c1c8be2df85e59740f41622f4cfb9d899,"AtAjLTWTests: 4 test cases switched to 'useFullLTW' mode

After the Java 18 JDT Core upgrade, some LTW tests are failing and
have to be switched from in-process to full LTW mode due to them now
obviously calling some code paths which need '--add-opens'.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
356ab9a26ec3dd307e5beac3988d8bc6a4f00e16,"AJDT Core: use JUnit 4 from class path instead of 3.8 from lib/junit

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8c15d83a466843b5dba8ba454329baaca0080cc5,"A few dozen more tests need 'useFullLTW' mode

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
63d5e3e893bd149245465de1610716930998dec8,"Fix more LTW tests

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2d2110f364609d3002643947fc89a9dc10a7c97b,"Introduce AjcTestCase.DEFAULT_FULL_LTW_CLASSPATH_ENTRIES

In 'useFullLTW' mode, aspectjweaver.jar is a Java agent. Therefore, what
is contained in there does not need to be on the classpath.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2337e33ea1f3b0ab3610c62e7c426f27538ff53e,"Make sure that program arguments are passed through in full LTW mode

This fixes e.g. LTWTests.testDeclareAbstractAspect, which passes on
names of ITD methods to the test program, which in turn executes those
methods via reflection.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f75b7deda8aea78e78335387dde42ba9b5938201,"Add TODO to maven.yml for switch to JDK 18 final

TODO: switch from 18-ea to 18, as soon as Temurin offers the download
on https://adoptium.net/releases.html.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3c80a365273b39c299cfdbc80c194cb9508e91a4,"Make Stack<AroundClosure> in JoinPointImpl InheritableThreadLocal

In case of asynchronous proceeding for nested around-advice, child
threads need copies of the original around-closure stack. Otherwise, the
target method thread will have popped the stack empty after unwinding.

Fixes #128.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
af0e70f1615f256a43e798ab7b7fc3d53089f588,"RunSpec: allow '<stdout ordered=""no"">'

Previously 'ordered=""no""' was only permitted for 'stderr'. We need this
for tests with asynchronous log output on standard error.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
72e91478f44129d92716807742cd7474265ff5da,"Add test ""asynchronous proceed for nested around-advice chain""

Relates to #128.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9d35aceab5f642c8d8eaa59ddae4ed2c66a081ed,"Expand ""asynchronous proceed for nested around-advice"" to 4 scenarios:

1. @AspectJ syntax, threads created inside advice code
2. @AspectJ syntax, submit runnable to thread pool
3. native syntax, threads created inside advice code
4. native syntax, submit runnable to thread pool

Scenarios 1, 3 and 4 are passing, while 2 is failing.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e18c4f92938b117eaea32a340ea1ba65fa0585ae,"Name annotation vs native style aspects uniformly in github_128 tests

Trying to find the difference between byte code generated by AJC for
functionally identical annotation vs native style aspect, I move the
aspects into subdirectories in order to be able to name them
identically. This way, when decompiling them with javap or Fernflower it
is easier to diff them later.

Why the decompilation? Because for the thread pool testing scenario
native syntax passes while annotation syntax fails. I.e., we need to
find the difference. That can be done by reading source code, if you
know where to look, or by starting with reverse engineering in order to
first understand more and look at the code later.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
bd663a7e645a1cb6f357259dfe880855c7016e21,"Ignore testAsyncProceedNestedAroundAdviceThreadPool_gh128 for now

Out of scope for PR #132, future work for issue #141.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
948ad9f39537d9cc9d38e8b5fc6fcb9bd685ed0f,"Merge branch 'master' into java-18

# Conflicts:
#	tests/src/test/java/org/aspectj/systemtest/ajc198/Bugs198Tests.java
#	tests/src/test/resources/org/aspectj/systemtest/ajc198/ajc198.xml"
8ba1445b28ad396c34633aebd334e5259f815a55,"Move GH-128 tests from 1.9.8 to 1.9.9 bugs test suite after merge

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6403cc20326190dbc9646b0f9b1819f1bb47fc39,"Rename testGitHub_125 to testCompilerCanReopenClosedJARs_gh125

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
50190a1918e66769e0037542054645add1ff8204,"Upgrade to latest JDT Core Java 18 changes, activate J18 preview tests

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3ddb113287f28521ee3471ec4fce99253dbf58dd,"Add JDT Core and bcel-builder to test classpath

At present, no tests are failing without those resources, but for good
measure, I added them anyway, because then the same path could in the
future also be used for stand-alone compilation tests which are not
triggered in-process via AJDT interface but, not unlike ""full LTW""
test execution mode, in a separate JVM.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3cd4e9e248df841635c59ffb23e6c5d82af7c4c1,"Add AllTestsAspectJ199.suite() to AllTests19

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b7d3e96ea778b48a5b3bbe445ecaa90ca97a5094,"Update README-199.html

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
486b22487379b1a788433ebb8b206a30fde15ac0,"Bump JDT Core to 1.9.9

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f25573c72a9016204c32205633a7014a8b2bb99b,"Set version to 1.9.9

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1851f96e25a2037faacb3373a357d523c7e202e1,"Set version to 1.9.10-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8b83f579fe653ebaa452239eb40c3b666494adf0,"Fix AjcTaskTest by correctly identifying snapshot versions

This avoids the corresponding ""bad version number found in"" warnings.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
cde74b890dc45e6523b895dda71f87287bdc933f,"IDE.md: update AJDT update site infos for 4.23

Also add some Eclipse, AspectJ and Java version information to the
existing update sites.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ad4a42ce1d7d2110f0b9cda5c97dd43215062802,"Merge pull request #140 from kriegaex/java-18

Prepare code, tests and docs for Java 18"
dddefd99b1d5e7078e0212343fdce3230f2aec18,"IDE.md: add download info for AspectJ installer

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8a933427ec77859a40c5cd9c55226bbe6f9d736a,"Add test case + experimental fix for AJC option '--add-exports'

I am expecting the test case to pass, but other tests to fail. This
temporary commit is meant to create feedback from GitHub CI test runs.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
33bd2b4a2e30de544ec2bb8a90997e8b6595b13c,"Use upstream method to generate '--add-reads', '--add-exports' info

and copy it into our FileSystem instance. In order to be able to access
JDT Core's FileSystem.moduleUpdates field, we had to make it public
there first.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
dbb6a9e1496cce5d9dace197f96cd13de047e2dc,"Make sure to always print commands when running Java test classes

In some cases, the 'java ...' command was not printed, which is
especially unhelpful when tests fail.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
35e93cf9dfc51aa8b47bc798c375b0ee01e24d42,"AjcTestCase: be less verbose when appending to buffer repeatedly

Also put 'else (if)' and 'finally' on new lines rather than after the
preceding closing curly braces. This helps IDEs when using code folding
(show/hide content of code blocks enclosed in curly braces).

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
417a0224e5f585850593ebac55b6083636a25fd9,"Add some smoke test cases for '--add-reads' and '--add-modules'

in order to show that the compiler options basically work. The test
cases are by no means exhaustive and simply verify that it works at all.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
aae62efb0a338bafbcc17187bd21778191993a7b,"Merge pull request #146 from kriegaex/gh-145

Make AJC respect `--add-reads` and `--add-exports`"
3dc53e0351a37fc6d3f6a6e311df0320987edc48,"POM bug: separate jvm.arg.allowSecurityManager from jvm.arg.addOpens

Before, this was in a single variable, and for JDK 18+, the security
manager setting also falsely overwrote the '--add-opens' command. This
was the root cause for a few dozen LTW tests to fail on JDK 18, if they
were not run in full LTW mode, i.e. in a separate JVM.

After this fix, it should be possible to revert the corresponding
commits, at least their non-cosmetic parts.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f80addbd89a6c15bb208c9f931913e4ca0c0d221,"Revert ""A few dozen more tests need 'useFullLTW' mode""

This reverts commit 8c15d83a466843b5dba8ba454329baaca0080cc5."
7bd69575fd362e132fb3f6af948d608ec36ac8c9,"Revert ""AtAjLTWTests: 4 test cases switched to 'useFullLTW' mode""

This reverts commit 5288ef1c1c8be2df85e59740f41622f4cfb9d899."
020aa0361baaa9bb228c40ab88169edc135c160c,"Revert ""Fix more LTW tests""

This reverts commit 63d5e3e893bd149245465de1610716930998dec8."
a0b680a167082c86c55ac5f32fafb7d3459f5703,"Merge pull request #147 from kriegaex/revert-full-ltw-java18

Fix JDK-version-dependent test JVM arguments in POM"
5eb286d3c281a711d0bfd6effad7bdbc03f6f61c,"UseJDKExtendedCharsets.java: add ""how to fix test"" comment

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0abca536907b05dec4aba6de8190d11e873adeb0,"Add AspectJ 1.9.9.1 delta to existing 1.9.9 release notes

The minor release from a user perspective is just going to be about

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>
#145, so we are not creating an extra release notes document."
2a50eb41cb0704ecf4551a06fb382d02c78dd2e6,"Bump JDT Core to 1.9.9.1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8d33cfa5274720b7e72effb3f20ce09628b79787,"Release AspectJ version 1.9.9.1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5034f9966437b96cdb0419af92d721572e4dde08,"Set version to 1.9.10-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a87661e0321d7666700a92169e80491d2beb1e34,"Bump Maven Shade Plugin to 3.3.0, add TODO to remove Flatten Maven Plugin

Fixed issues of concern include MSHADE-252, MSHADE-396, MSHADE-391.
TODO: MSHADE-36 is in Maven Shade 3.3.0 -> it should be possible to
include the dependency-reduced POM there directly. So maybe, we can rid
of Flatten Maven Plugin.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d8cdb2d67216e2540decb6d9bf68fb6518400cdc,"Remove Aspectj.dev artifact and plugin repositories

After having removed the custom-built Maven Shade version, there should
be no more references to artifacts in that repository left. Let us see
if the build passes.

Furthermore, since being a committer, I can also attach AspectJ
installers to GitHub releases.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
cefa5d6bfcb92ea66e6fccd68fa922dba914a420,"Delete unused directories org.aspectj.lib, shadows.org.eclipse.jdt.core

I have not used those directories or any files inside them at all. I
hope I am not taking away anything helpful from people who prefer
working with inter-linked Eclipse projects instead of Maven, but I think
we will notice if anyone complains and can revert in case of an
emergency.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
651e92a3285606537cfa47913adc17ce90bc22c8,"Remove AspectJ Browser (ajbrowser) code and documentation

Closes #148.

TODO: Should more AJDE stuff be removed?
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b35e5bbfc39dafb9e109849fa881305366112b23,"Merge pull request #149 from eclipse/148-remove-aspectj-browser

Remove AspectJ Browser"
4878866c98e0d0f5dfe8e0551e92d5581e9573a6,"CI build: use Maven cache

Relates to #150.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
532450373b29d4c254ccf3a6ea3b43d21d2f8ae7,"CI build: create docs and attach them to build

In order to create the docs separately, running just a single module,
add 'install' to the previous build step, so the 'docs' module can find
the 'lib' dummy JAR in the local Maven repo.

Relates to #150.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
495f0ec6597ee7d892efd855592be7dbf19ead1b,"CI build: attach main artifacts to build

Relates to #150.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ea43aa5ed8e64ad20672f38864e0d53a5e855e2a,"Merge pull request #151 from eclipse/150-improve-ci-build

Improve CI build: create docs, use Maven cache, attach artifacts"
72552a8934a077640c918ff6e6077b901a5f36f8,"Remove obsolete comments in POM mentioning GitHub Packages

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
48edd62b2331904425944ed605ee8c1d4956b3b7,"JavaVersionCompatibility.md: add link to ""Java language changes since Java 9""

https://docs.oracle.com/en/java/javase/18/language/java-language-changes.html
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1ecda93436b7e4e3736601a648a9f55ad19d67e0,"Make TypeSafeEnum immutable

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
238af52f840946000bf102e7fde72a426de4a402,"BcelWorld.reportMatch: handle 'kind.getName() == null' correctly

Fixes #153.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
caa2c39be10775a8772a27eea8b9a673dd0bab8d,"Merge pull request #131 from turbanoff/use_generics_ajdt.core

Update 'org.aspectj.ajdt.core' code to use generics"
1c487b2e0f54eeb4c2630940e7d57c279ba5a032,Remove redundant casts after generics update
28396ed60f92c3a55a1981738cb90ef64cfcf0af,"Merge pull request #155 from turbanoff/cleanup_redundant_casts

Remove redundant casts after generics update"
047a93c24f4eef3b2ebf254be9332d4340adbd04,Fix suspicious Map.get call
2091b6d1ded90bfeb29f8d74bd17f05ec8fc983d,Reduce 'Object' class usage
57dd44a35a6a60aae5576cbd35c110ae82505dac,Do not use String literal as synchronized lock
816f585d541f51ab106d67a617cbb01f52169fb0,Cleanup redundant null check before instanceof
ee9d532b1ad6bad267ce2d796f3979074e6122cd,"Make IStateListener.aboutToCompareClasspaths use typed lists

Before, the signature was:

void aboutToCompareClasspaths(
  List oldClasspath, List newClasspath);

Now it is:

void aboutToCompareClasspaths(
  List<String> oldClasspath, List<String> newClasspath);

AJDT will also use the typed version after generics refactoring.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f66a4f9b083cf8cf59cce160a5109677d4ea6009,Use System.lineSeparator() instead of hand-crafted method
aeb598cda1165c076eae78c12b9a69405b5d59a2,"CI build: upgrade from Java 18-EA to 18

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
208eafba3245da6e3eed1b22269e13c6f9920544,"Improve condy (constant dynamic) support

Relates to #170. Fixes the ""Unknown constant type 17"" problem.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a792bf94ba3b7c101aeec25fec6f77e328dbc5cd,"vuln-fix: Partial Path Traversal Vulnerability

This fixes a partial path traversal vulnerability.

Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.

To demonstrate this vulnerability, consider `""/usr/outnot"".startsWith(""/usr/out"")`.
The check is bypassed although `/outnot` is not under the `/out` directory.
It's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.
For example, on Linux, `println(new File(""/var""))` will print `/var`, but `println(new File(""/var"", ""/"")` will print `/var/`;
however, `println(new File(""/var"", ""/"").getCanonicalPath())` will print `/var`.

Weakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')
Severity: Medium
CVSSS: 6.1
Detection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.PartialPathTraversalVulnerability)

Reported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>

Bug-tracker: https://github.com/JLLeitschuh/security-research/issues/13

Co-authored-by: Moderne <team@moderne.io>"
21d651573103fee74dec9b01c36ad3932d355bcf,"Add docs/dist/LICENSE-AspectJ.html to all public artifacts

The license file will be included right in the main directory of both
binary and source artifacts for
  - AspectJ Matcher,
  - AspectJ Runtime,
  - AspectJ Weaver,
  - AspectJ Tools (Compiler),
  - AspectJ Installer.

Fixes #185.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c540b0f60ef5e46b33cad1b23c36d1c51af82aef,"First Java 19 version, barely tested.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
15cef016830bc16c7c51afd41782f6ac061bfae5,"Set Java 19 compiler version after JDT Core merge

In messages_aspectj.properties, set compiler.version to
""Eclipse Compiler 5fd28398cc7aba (21Sep2022) - Java19"".

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
dc2863a18e0547bad726f12755f6418c389b5613,"Set Maven version to 1.9.19-SNAPSHOT

It makes sense to indicate the Java version in the minor-minor of
AspectJ artifacts.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c05db1e68c0f268641612403d1069e0f97beed59,"Bump ASM to 9.4, supporting Java 20 class files

Even though we just upgraded to 9.3 for Java 19, it does not hurt to
have ASM recognise the Java 20 class file major version.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6bffb284511bd7b4153e8c578076c83c38cb01db,"Do not run Java 18 preview feature tests with Java 19 JDT Core

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d2b81de3244d47476923be07f1f822e5ccb7cb98,"Cosmetic fixes in Java 18 tests (e.g. copyright year 2022)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7ef7cd245b2d62581d67c122a95cb29d8b0dbb76,"Remove Batik path entries from test classpath

Firstly, Batik is not needed for running AspectJ tests.

Secondly, the fixed Windows path separators led to GitHub CI/CD tests
failing under Java 18+ on GitHub. Replacing ';' by 'File.pathSeparator'
would have fixed the problem, but removing the paths altogether is the
cleaner solution.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2548a8ab0b3649ed3fc8eac331ebeb1f28f02c3d,"Deactivate Java 18 preview language feature tests

and enable LangUtil to parse Java versions like '19+36-2238'.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ec67725ea41ae69453d4ee2624b311746aab3c26,"Add the first few Java 19 tests

For now, only the ""pattern matching for switch"" tests from previews 1
and 2 were adjusted to work in preview 3, because guarded patterns were
replaced by 'when' clauses in 'switch' blocks. Therefore, existing test
classes did not compile anymore and had to be replaced by syntactically
upgraded versions with content merged from preview 1 and 2 classes.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8cbfedcde9cda3f09784ff7fae2b1981154e0488,"Fix tests due to changed JDK 'toString' methods in Java 19

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0ff75f28fe7a0b7b4757c02b533704354c1dd46c,"LangUtil: improve Java version major/minor parsing

- Ignore everything including and after '+' in versions like '19+36-2238'
- Add minor '.0' to Java versions like '19', '19+36-2238'

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c84a35837e194f5ac8f38cee2998afb5ec631078,"OutputSpec.matchesThisVm better supports version ranges

vmVersionRanges might be a single version like ""9"", a list of versions
like ""1.2,1.3,1.4,1.5"", an equivalent range of ""1.2-1.5"", an open range
like ""-1.8"", ""9-"" (equivalent to ""9+"") or a more complex list of ranges
like ""-1.6,9-11,13-14,17-"" or ""8,11,16+"".

Empty ranges like in """", "" "",  ""8,,14"", "",5"", ""6-,"" will be ignored.
I.e., they will not yield a positive match.

Bogus ranges like ""9-11-14"" will be ignored, too.

Existing XML test specs using '<line text=""..."" vm=""v,v2,...,vn""/>
have been adjusted to use version ranges rather than long lists of
consecutive versions. Furthermore, ranges with a trailing '+' like '14+'
were replaced by using the new canonical format '14-', even though the
parser still correctly recognises '14+'.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
063d3cc59aad88f02bc82bc6e417a828dae9ef2d,"Address upstream BCEL vulnerability CVE-2022-42920

Fixes #192.

See https://github.com/advisories/GHSA-97xg-phpr-rg8q.
See https://issues.apache.org/jira/browse/BCEL-363.
See https://github.com/apache/commons-bcel/pull/147.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
40909022f425500692ef9a2ae4907f07aac8ae42,Merge branch 'master' into java-19
9be61fe259dfd3340050f0c4d80ee9e9555583e1,"Bump ECJ version in messages_aspectj.properties

Eclipse Compiler 19f448f47c9e3e (15Dec2022) - Java19

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5239ae0480d4f623aa9c9491b6bf75e3e568cc89,"Add tests for Java 19 record patterns

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b781362e746e41fbdcce442410fa66adb32ba05b,"Add release notes for 1.9.19 (Java 19)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b08d7d2a31f6d6444e4fea980a7d85f2944055b3,"Merge pull request #187 from eclipse/java-19

Java 19 support"
65f1ec72c2fc9446a162780dc3f6dee625704c02,"Fix #366085 concerning declared annotations with source retention

See https://bugs.eclipse.org/bugs/show_bug.cgi?id=366085.
See https://stackoverflow.com/q/74618269/1082681.

The issue described in the Bugzilla issue is about 'declare @type', but
similar issues also existed for 'declare @field', 'declare @method',
'declare @constructor'. This fix is rather superficial and leaves
things to be desired, because it is rather hacky and simply ignores
errors source retention annotation declarations during weaving. A better
fix would drop the corresponding declarations while parsing and also
issue compiler warnings in each case.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7373dbd5f301c464873d687c170170f87fe0c366,"Update release notes for 1.9.19 (Java 19)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ffacda77227a11da3bf53ddba1c0fa5746d3e73e,"Bump JDT Core to release 1.9.19

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9161b23b47c5046bec7f27c53145b1ca2fabf8df,"BCEL: use MAX_CP_ENTRIES from internal class, not from JRE

Instead of importing com.sun.org.apache.bcel.internal.Const, use
use org.aspectj.apache.bcel.Constants. The former class is from the
internal JRE module 'java.xml' which is not exposed by default.
Actually, no existing test failed because of it, but javadoc generation
for the AspectJ weaver.

Relates to #192.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
271ff0f6404acf44d8ab5e5893bdf6b02374ebec,AspectJ release 1.9.19
cfeda34565a1a2e302f7cb3c3401f190a2029d71,Set version to 1.9.20-SNAPSHOT
a1ce3d6bb52093cfc3de3756a420526b78e7c132,"IDE.md: update AJDT version info

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
39b6f35570dcdfbe2ececcf0624bba43538eeddb,"Improve code and documentation for #366085 fix

This commit is a follow-up for 65f1ec72. The SOURCE retention case is
documented now and considered in a few more call sites. The
previously already similar code structures in
  - DeclareAnnotation.ensureAnnotationDiscovered,
  - DeclareAnnotation.getAnnotationType
have both been streamlined and still remain logically in sync.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a570da916ab0f656f151261fde305ee0efa2f202,"Fix indentation in ajc1919.xml (cosmetics)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4b46caabfc7aec455df6173a73d10afffddd8831,"Regression test for #190

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c6a1bc127a9464bb1831fb04120123a62b100946,"Fix TABLESWITCH weaver issue with Integer.MAX_VALUE

Fixes #190.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5f46d44017d020822cf145ce0ff23cc44ecfdfad,"Fix parenthesised AJ keyword compiler problem

Fixes #20. Needs JDT Core grammar fix.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5d0533b8903d5604883fbbfc95ccfda7ca4c1467,"Add test reproducing problem from #198

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0ea66aedba0ab3c275255a64f1f5d76c2f39ce1f,"Improve BcelTypeMunger.mungeMethodDelegate to avoid race condition

Fixes #198, i.e. test DeclareMixinTests.testCaseEConcurrent from the
previous commit now passes.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
290fcf85cf872ec1e2d305a64c1febc9058dbac1,"GitHub CI build: upgrade GabrielBB/xvfb-action to 1.6

CI builds started showing warnings as follows:

Node.js 12 actions are deprecated. For more information see:
https://github.blog/changelog/2022-09-22-github-actions-all-actions-will-begin-running-on-node16-instead-of-node12/.

Please update the following actions to use Node.js 16:
GabrielBB/xvfb-action@v1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e0a1525ebd9f0f3b806c323223d4776c1275e899,"Test cosmetics

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
438eb9301014ffb63bbcbae4df684a2907ac91d5,"No more compiler errors for implicitly static inner aspects of interfaces

Fixes #162. Contains regression test
Bugs1919Tests.testInterfaceInnerAspectImplicitlyStatic.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c8b9568a8577d2af0f1449eec729784b0dcaa484,"BcelTypeMunger.mungeMethodDelegate: only use 'synchronized' when necessary

Relates to #198. Now, we create a delegate method body which basically
looks as follows:

public void methodOne() {
  if (this.ajc$instance$MyAspect$MyMixin == null) {
    synchronized(this) {
      if (this.ajc$instance$MyAspect$MyMixin == null) {
        this.ajc$instance$MyAspect$MyMixin = MyAspect.aspectOf().createImplementation(this);
      }
    }
  }
  this.ajc$instance$MyAspect$MyMixin.methodOne();
}

The idea for the outer null check is from @aclement, see
https://github.com/eclipse/org.aspectj/pull/205#issuecomment-1371556080.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
09ada8dd884eb66911d58d1b76d7e1ae4ab145f2,"Remove some old, accidentally committed class files from tests

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0e3d9f0dbc853b168cf84118490ddcb487f2aa0f,"Refactor, comment and reactivate Ajc183Tests.testAnnoStyleDecp_442425

This test was always inactive and did not add any value other than
during development. No it runs, passes and documents the status quo of
  - what was fixed (regression for AJC 1.8.2 core dump fixed in 1.8.3),
  - the current limitations of @DeclareParents and @DeclareMixin
    regarding generic interfaces.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
be60722eab5c7f95d55df6f16baf41eaba671d85,"Add regression tests for GitHub bug #24

Relates to https://github.com/eclipse/org.aspectj/issues/24.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9198f15f9bef7becb7dbce7c1a73e1e04b60cd18,"Expand regression tests for GitHub bug #24

More test cases were added for
  - multi-dimensional arrays,
  - primitive type arrays.

Relates to https://github.com/eclipse/org.aspectj/issues/24.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5a8cdee463d63f9f3eaf0a40dff26a54a814121c,"Fix WildTypePattern.isArray

The method falsely determined that a one-dimensional array was not an
array due to a one-off bug.

Relates to https://github.com/eclipse/org.aspectj/issues/24.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a0bcb6ba4b4b81eef4fc95d949cd81538b17aa8f,"Simplify if-else in WildTypePattern.matchesExactlyByName

A simple boolean condition is enough.

Loosely relates to https://github.com/eclipse/org.aspectj/issues/24, but
actually it is just drive-by cosmetics.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6e79467e0a24c9e903d0d06948615b6fe9250efa,"Handle one- and multi-dimensional array return types correctly

Fixes https://github.com/eclipse/org.aspectj/issues/24, both the array
return type matching as such as well as matching dimensionality patterns
correctly. E.g., 'Foo*[]' is not the same as 'Foo*[][]'. This also works
correctly in combination with asterisks, even for primitive types, i.e.
'in*[][]' correctly matches a 2-dimensional array of 'int'.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9cf956c2838cbb4f5fd3ad46064e579df3752456,"Improve array matching for all TypePattern subclasses

Relates to #24.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c9afd2ee1b1a701bffbe1d79f2a186b96c7e4f45,"WildTypePattern: fix hashCode and toString methods

Especially 'hashCode' did not correspond to 'equals', disregarding
several fields, array dimension information being only one of them. This
led to parts of pointcuts being ignored, because they were regarded as
duplicates. Example:

execution(Foo* *(..)) && !execution(Foo*[] *(..))

Here, the negated pattern was falsely regarded as equal to the first
pattern, leading to an ""A && !A"" situation, i.e. no match at all.

Furthermore, 'toString' did not print array strings, i.e. instead of
""Foo*[][]"" something like ""Foo*"" was printed. This false information was
also present in annotations generated by the weaver.

FuzzilyMatchingAspect was adjusted to actually match exactly once, as
expected, for the ""Foo*"" return types, i.e. exclusions for the array
return types have been added.

Relates to #24.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
91abb82c15a0ce80d37fd66e90c114147acbde04,"Fix PointcutRewriterTest, add LogicalPointcutStructure test helper class

After WildTypePattern.hashCode was fixed in the previous commit,
PointcutRewriterTest started failing, because in many places it was
falsely relying on a specific order of hash codes, which cannot be
guaranteed, especially since more instance fields are part of the hash
code now in accordance with 'equals'.

The new test helper class LogicalPointcutStructure is able to recognise
chained '&&' and '||' pointcuts of the same logical nesting level,
un-nesting them from the actual pointcut structure and making them
comparable, disregarding their order. I.e., something like
  ((A && B) && C) && D
is actually recognised to logically be
  A && B && C && D
and equivalent to e.g. either of
  D && B && A && C
  A && B && D && C
  C && A && D && B

This helps to compare rewritten pointcuts, as long as their logical
structure has not been altered.

Relates to #24.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a3523e3aaee535e59bc437514d6b3c8e038e65b2,"Remove old, erroneously committed binaries from tests/bugs193/543657

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
43cb1e2fc4dc127c39e550bdcd2efaf84c4b7a0f,"Fix failing tests after previous commit

After the changes, the weaver's behaviour is now slightly different, but
not actually buggy. Actually, in one case there is now a weaver warning
for a non-matching pointcut which should have been there before, but was
not. I.e., things have improved and the tests are even a bit better now.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
53837367b0f04a20aab530741ea7a24a42e309e5,"Comment on newly pointcut parsing found problem in test class

A pointcut like

  execution(*..Collection<?>[] *(..))

leads to an AJ core dump, which is something I noticed while fixing a
test in the previous commit. I am going to create a new issue for it and
link to this commit later.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
782cd415e2ae2c314ffbeec05ee303dd7bdf6a81,"Add regression test reproducing GitHub #214

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
953a8313c3a9b464c34707485b143a9152500c78,"Fix GitHub #214

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ac2b81c3f8ab0a7af7c5078656547f1c7a9a9499,"Bugfix: caret error marks in compiler output too short

This very old bug in EclipseAdapterUtils calculated the '^' caret error
marks incorrectly. The marks were too short like this:

  void m() { return vax[3]; }
             ^^^^^^^^^^^

Where the correct result would look like this:

  void m() { return vax[3]; }
             ^^^^^^^^^^^^^^

This was due to the rather complicated way in which first surrounding
context code - here the leading 'void m() { ' and trailing  ' }' - was
first added and then possible leading white space was cut off again from
the left. It is difficult to explain, the code is a nightmare, trying to
work with char arrays, counting indexes, repeatedly using
System.arraycopy and using lots of counters and offsets. I would have
liked to simplify the code, converting char[] buffers to Strings, but
decided to keep the basic structure for now, not sure what kind of
memory or performance considerations led to this design.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
827115335ff1269df28085e215b081e24596ff1d,"Fix indentation of compilation results on the console

Whenever warnings or errors were printed via CompilationResult.toString,
indirectly also using MessageUtil.renderMessage(IMessage, boolean),
messages containing context info such as code snippets with carets
marking erroneous tokens - see also the previous commit - prefixes like
""[warning 1] warning at "" were printed right in front of the code
snippets. I.e., the carets marking erroneous tokens in the second line
were not indented like the first line with the code snippet, leading to
(simplified) output like:

  [warning 1] warning at after() : execution(FooBar Blah.*()) {
                      ^^^^^^
  xxx FooBar [Xlint:invalidAbsoluteTypeName]

This was fixed to now correctly indent lines 2 to n according to line 1,
yielding the correct output:

  [warning 1] warning at
              after() : execution(FooBar Blah.*()) {
                                  ^^^^^^
              xxx FooBar [Xlint:invalidAbsoluteTypeName]

Especially with longer, more complex context lines, this helps to
identify the erroneous section. BTW, for one-line messages, everything
of course looks like before.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
dd3177909ec52e89e5e3dc10125c3527ce6e73dc,"Further improve indentation of compilation results on the console

In CompilationResult.toString, no longer indent like this:

  [warning 1] warning at
              after() : execution(FooBar Blah.*()) {
                                  ^^^^^^
              xxx FooBar [Xlint:invalidAbsoluteTypeName]

Instead, always just indent by 2 spaces, saving screen real estate:

  [warning 1] warning at
    after() : execution(FooBar Blah.*()) {
                        ^^^^^^
    xxx FooBar [Xlint:invalidAbsoluteTypeName]

Also further streamline/simplify the code a bit.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e43fa758f360bd5cb29c653c3ff23bb581ef99e8,"Add traverse methods for pointcut types

Relates to #215.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6585b9ef46e9cf6402a2d2ec5107443218488dc1,"Add traverse methods for declare and pattern types

Relates to #215.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
53bb964c3021b18dc94c4dfb66b212bd0060449c,"Add safeguards for And/Or/Not pattern node types

Affects *PointCut, *TypePattern, *AnnotationTypePattern.

Relates to #215.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9e0d2bc02474a9549093d57fa4a0d321c2739198,"Sync HandleProviderDelimiter with JDT Core & AJDT

New constants:
  JEM_MODULAR_CLASSFILE - '\'' (single quote)
  ANNOTATION - '}'
  LAMBDA_EXPRESSION - ')'
  LAMBDA_METHOD - '&'
  STRING - '""'
  MODULE - '`'
  DELIMITER_ESCAPE - '='

Updated AspectJ constants due to JDT Core using constants previously
used by AspectJ:

  ADVICE - '&' to '§'
  ASPECT_TYPE - '\'' to '>'
  ITD_METHOD - ')' to '°'
  DECLARE - '`' to '´'
  POINTCUT - '""' to '©'

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9c86c75cf838eb9ef5dbe66089cd064d9a738780,"HandleProviderDelimiter: rename JEM_MODULAR_CLASSFILE to MODULAR_CLASSFILE

The other constants do not have the JEM_ prefix from JavaElement either.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
bd35fb6662e06e08a20ed2294a1208bd27efdbd8,"Depend on JDT Core 1.9.20.M1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9f1701fb3e0ac9e06db8378af0dfae5c44235291,"IDE.md: Add new AJDT update site for 2022-12 (4.26)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a7c8e972e2bd4e9f307a448434b823ae884b59af,"IDE.md: add link to m2e AJDT connector for Eclipse 2022-12

The link points to aspectj.dev for now, because Mika Vesti has not
merged my PR and published a new version on repo.t5.fi yet."
45d3cc7e26a92a5ef25851ea04b07c46c080598a,JavaVersionCompatibility.md: add Java 19
a9a7d94b60cc20fee2dc0fbd804732dc371dc1ed,"Added MIll to the Build tools section

I'm the author of mill-aspectj and Mill maintainer, so i might be biased. ;-)

We use Mill with the mill-aspectj plugin in commercial projects, so I'm rather confident in it's reliability."
a8a2f82fda825b36acade534f876f595b6566919,IDE.md: change 2022-12 AJDT M2E connector link to upstream update site
7fb9f8690c6ec7fe7864cfd79a4f2e45c8f2e6a1,"Add null check to AjLookupEnvironment.hasAspectDeclarations

Fixes #240.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
89597d34eec7cab349a1c00a5a2bd85795b9a8f4,"Fix XML config for Bugs1919Tests.test_GitHub_214

The test started breaking on GitHub, but ran fine locally, which implied
some kind of classpath ordering issue. As it turned out, for XML tests
all JARs found in the sandbox directory are added to the classpath
automatically. So if we do not want them on the classpath, we need to
delete or rename them before running.

In this case, however, it was enough to make sure the classpath order is
correct, so that the duplicate 'Application' class is found in the woven
version, not in the unwoven one by chance. We therefore need to use the
correct syntax,
  1. separating classpath entries by comma, not space,
  2. prepending '$sandbox/' to the JAR name.

Now the test reliably does what it should have done from the start: run
the woven code. Until now, the output assertions were adjusted to the
weird result of no aspect logs being present on the console, which was
wrong right from the start.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ab65cbdd5887a1ea4b4e96db044584e347265f9e,"Add null checks for Shadow.getResolvedSignature()

Fixes #243.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
808c1cbeac49480fb1c0c0a68206f7389f6caab5,"Use ASM 9.5 for Java 20 support

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ba7d763d2b20aef47cf03dfcea50f51b1487c154,"messages_aspectj.properties: update ECJ version string

Eclipse Compiler 40fa81de93d65b (24Mar2023) - Java20

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a9b5715d8150eaf66b77a5a89d2e1d3f81c2d956,"Bump jdt.core.version to 1.9.20-SNAPSHOT

Let's find out if the tests still pass
  - on Java 19, except for J19 preview features,
  - on Java 20, also except for J19 with changed syntax.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f9f7615c4adfb2bf3f43a128170328b9766cd3df,"Temporarily build both Java 19 and 20 on GitHub

Let's find out if the tests still pass
  - on Java 19, except for J19 preview features,
  - on Java 20, also except for J19 with changed syntax.

TODO: After having added Java 20 preview feature tests, remove J19
build.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
fbc79b2de7d6742883d41d7a8c91268bd1da3f55,"messages_aspectj.properties: update ECJ version string

This update includes the upstream fix for
https://github.com/eclipse-jdt/eclipse.jdt.core/issues/911.

Eclipse Compiler b15e5c75653358 (24Mar2023) - Java20

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ec5e94cc188bfb54ff96b8312548176c3c02c80a,"Add basic tests for Java 20, deactivate Java 19 preview tests

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ba520d6cfab3b968bd020d1e965e18aa72819813,"Improve Java 9+ version matching in ClassPath.getClassPath

On the short term, this fixes the failing weaver tests on JDK 20. On the
long term, the improved matching heuristics should make it unnecessary
to update the regex again.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a45705fdb8dda6cb76ba15e7b4adfb81ebff70cc,"Fix javadoc generation broken on JDK 20

Firstly, Javadoc 20 cannot handle source level 1.7 anymore, so I bumped
it to 11, which hopefully will be around for another while. It also
matches the ajc minimum of Java 11, i.e. ajdoc and ajc are synchronised
in this regard now.

Secondly, as of JDK 20, the javadoc tool renders HTML pages with section
headers specific to the JVM default locale. The workaround is to set the
locale to English before calling javadoc.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e17017cd3652393047e4c5e736868492cb646643,"Fix tests using Javac using source/target 1.7

Javac 20+ no longer supports 1.7.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
72d6e59171eb4d0ed60c2491390a5e52f2e223df,"Build on JDK 11, 17, 20 (remove 19)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
944010edcf45615d0427e77b3afbff92272148dd,"eclipse-jdt/eclipse.jdt.core#919 has been fixed

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e0534cb48581c0c3edfbc6c32a5126870fee62bd,"Add AllTestsAspectJ1920 to AllTests19 suite

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7618d3dea8bcb1e3a9bfd2ab67fe8f4d55db874b,"Switch CI build to coactions/setup-xvfb

GabrielBB/xvfb-action is no longer maintained and points to
coactions/setup-xvfb. The switch should eliminate this warning in CI
builds:

Node.js 12 actions are deprecated. Please update the following actions
to use Node.js 16: GabrielBB/xvfb-action@v1.6. For more information see:
https://github.blog/changelog/2022-09-22-github-actions-all-actions-will-begin-running-on-node16-instead-of-node12/.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a920edd998df600cfeff615ea5ce067ca8f4bb46,"Improve SystemPropertiesTest

- Fix quotation error in console output
- Throw RuntimeException instead of Error. Maybe this helps to avoid
  the prominent error message listing in the GitHub build log, which
  always looks like something bad happened, even though it is simply an
  expected error.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ba9ac235eea72de6b040166a098db183a5b04a6e,"Adjust expected error message in switch pattern tests after upstream typo fix

See:
https://github.com/eclipse-jdt/eclipse.jdt.core/issues/919
https://github.com/eclipse-jdt/eclipse.jdt.core/commit/b681dfb5
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1e2d9683b4b0d75dfd9830ebeb482e56cf40fd8d,"Add failing test reproducing #246

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c0a48634088f7f894ab998dfcc5b7ccf7df88b42,"Correctly identify ITD method signatures in weaver

by removing faulty condition 'if (isCtorRelated)' from
BcelTypeMunger.getRealMemberForITDFromAspect, see comment
https://github.com/eclipse-aspectj/aspectj/issues/246#issuecomment-1605999896.

Fixes #246.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
00998fd4b23ad0d3e0cd292127297e0fb249c36f,"BcelTypeMunger.getRealMemberForITDFromAspect code cosmetics

Relates to #246.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
db76c175037c10ce21fc8f7fe681162e31082445,"Add method ArrayReferenceType.equals to fix failing tests

This also fixes a bug. Previously, ResolvedType.equals was used for
equality check, and in there is a '==' comparison, which does not work
for two different ArrayReferenceType instances, even if the component
type is the same.

Relates to #246.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b86246b87cfeec95e70122ad877d17fbf2e96b08,"Use relocated ASM class names in BCException message

Fixes #251.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8170ae6ffd7068a3f224de0df2008d74d6b9d35b,"Add regression test for #250

Reproduces #250.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f44dc75e6b0e9a80b41dce7b43fa1a393a4a2adb,"Fix inline accessor method bug in BcelAccessForInlineMunger

Make sure to create one ajc$inlineAccessMethod per identically named
(overloaded) private aspect method in
BcelAccessForInlineMunger.createOrGetInlineAccessorForMethod.

Fixes #250.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d6685f6aef7edc92a14173b45fd62126acd58b28,"Improve error message in LazyClassGen.getJavaClassBytesIncludingReweavable

No longer report ""Unable to find ASM classes"", if simply an ASM
processing error occurred. In that case, report ""Error processing
class file"".

Relates to #250.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
364059c00f2393b8221cea29bdb6b7eabfd5b5c0,"Fix tests using Javac via Ant using source/target < 1.8

Since JDK 20, targets older than 1.8 are no longer supported by Javac.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
565f37b1970268234d9a823e2631ba3ed3e03037,"Move 1.9.20 bug regression tests to the correct spots

Originally, I had intended to release a minor 1.9.19.1 release to fix
some bugs. But then, Java 20 support was implemented and merged, so the
next release will be 1.9.20. Therefore, I moved some bug regression
tests to the 1.9.20 suite.

Relates to #254.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7c4d697add8f8d82323bd89f1b091b9128e76000,"Add 1.9.20 release notes and update version compatibility matrix

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1a0c6bbf3cbb55359f872a803ea073e3b4be7110,"Bump JDT Core to 1.9.20

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d2b302955c7d239fae238ba2b6f0f6b5d10c334a,"Add more info and set release date in 1.9.20 release notes

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ca61ec221abd336c757a070b44a9cefe8a1606b4,"Release 1.9.20

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1060d22a5c62c7c2651e7f2d1825536809d4dd05,"Set version to 1.9.21-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e6c06bdd6ad18171efe5c76b83b62c247832a156,"RELEASE.md: add info about creating docs for installer

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e2a355b37935faf9a8de1ce7ca1f134b5a9df891,"Regression test for Spring issue 27761

Relates to spring-projects/spring-framework#27761.

The test needs an ASM-generated class file with reordered methods in
order to reproduce the issue in plain AspectJ. The test fails now, but
should pass after the fix.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d2c35707aeb1f0c950bffb2ff6c88ef449642ec8,"Fix Spring issue 27761

Fixes spring-projects/spring-framework#27761.
Fixes #256.

Bridge methods are now ignored in favour of their overriding namesakes
during method matching.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
41849751a83203a89d8cc982951887ee2ffec9c6,"Put ASM on classpath for Ajc in tests

This enables compiled source code to use ASM. This way, it is possible
to bootstrap tests needing specially prepared class files by
  1. compiling an ASM-enabled byte code generator class,
  2. running the generator, writing out class files,
  3. using the generated class files in subsequent tests.

Until now, such classes always had to be checked into the ASM directly
or inside JARs. Now, this is no longer necessary.

The next commit will be the first example.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2af1b06b6a9439109520b249b5e44dfc1375c199,"Improve bridge method test, bootstrapping ASM usage

Instead of using a pre-generated JAR, the source code generating the
class with reordered methods (bridge method first) is now compiled
directly before usage. This is possible, because in the previous commit
ASM was put on the Ajc classpath for tests.

Relates to #256.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c708962d7e0341133790bf7315257db7aa5acc86,"Add regression test for #257

Relates to #257.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
73e86eb9dc6825e8d8bade57a04e0e5289d78f8a,"NotTypePattern: Fix matching problem for negated type patterns

The implementation for boolean matchesArray(UnresolvedType type) was
buggy.

'!String' should match anything but String, no matter if it is
an array or not, e.g. int, void, int[], String[], String[][].

'!String[]' should match anything but String[], no matter if it is
an array or not, e.g. int, void, int[], String, String[][].

Fixes #257.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9a16240a2cf62eb594de05b6cbffe9a36d3d9e19,"ajc162.xml: Fix test failing after previous bugfix

A change made to ajc162.xml in commit 43cb1e2f has been reverted
and improved after the recent negated type pattern fix. Relates to #257.

The pointcut 'call(!void *.*(..)) && this(src) && target(dst)' actually
does match method call 'payloadClass.getPayload()' within the
around-advice in GenericClassInAdvice itself.

Improvement: Activate '-showWeaveInfo' and verify weaving message.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f815c6482a87f1c21f31f04ecda2ba1dca4b61d6,"Update 1.9.20 release notes for 1.9.20.1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
91e3dbf0e19bfa7f53088552df14b0923300dc49,"AspectJ release 1.9.20.1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e3fb063ce078bd4bce2717831dba462aa06fb9da,"Update AspectJ libraries in 'lib' subfolders

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4accdcda5c990b19bb485aa3c22d61ec8afee921,"Set version to 1.9.21-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b821bedc716e04847314cc6c3bfae30c8fde838c,"Update compiler.version to latest Java 20 merge

messages_aspectj.properties:
compiler.version = ... d23a141971a37b (27Apr2023) - Java20

Too bad this version string did not make it into 1.9.20 and 1.9.20.1.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
70ba99c31121897c44e31ec236df54474e523049,"Upgrade CI build to JDK 21

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ff92343e7ab763941180a66df5b956cb971098ff,"Bump JDT Core to 1.9.21-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
1bd4f92c4c39d86344ea48a76dcd1c865fb0a043,"CI build: remove JDK 11 build, switch 21 to 21-ea

Background: JDT Core dependencies now contain hundreds of Java 17 class
files, i.e. Ajc now requires Java 17+ runtime environment. :-(
For more details, see:
https://github.com/eclipse-aspectj/aspectj/issues/260#issuecomment-1736540176

Adoptium Java 21 release is not available yet, so we need to run on EA.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5988c287c7e7348c083847732408cb0b32441a6d,"Remove old '.cvsignore' files

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e39b13fccc0b6898b90441ffc2759239e1502a37,"Ignore AspectJ core dumps

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
319e153eeddbeae9133ed5af28da1b85f638cda2,"AjLookupEnvironment: add new phase CONNECT_TYPE_HIERARCHY2

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3e81ed505a8c74c073197ef9c8368b7e9f6dc02f,"AjLookupEnvironment: readability refactoring

While trying to understand the code a bit better in order to fix failing
builds, I applied some cosmetic refactoring and reformatting. This
commit does not change any functionality.

Whether the static import of CompilationAndWeavingContext.* is a good
thing or not is debatable, but I like the code to be less chatty than it
was before, assuming that every developer uses an IDE helping to find
out where static methods and constants come from.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
73b36b1a2532cc33e746c3ccf751713d875897f1,"AntSpec: Improve filter for warning ""Archived non-system classes are disabled""

In JDK 21, the prefix has changed once again, no longer being a JVM
specifier like ""OpenJDK 64-Bit Server VM"" or ""Java HotSpot(TM) 64-Bit
Server VM"" but rather something like ""[0.016s][warning][cds]"".

Even worse, before J21, the warning appears on stdErr, but in J21+, it
appears on stdOut.

Fixes LTWTests.testJ14LTWWithXML, which started failing on Java 21.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
19a414b7153c05197ac7d6c74dd3de969cf4a349,"Bump ASM to 9.6 (new Opcodes.V22 constant for Java 22)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3533dcd043ca31e6988fae714882328d23543a65,"Beautify sanity tests using bytecode level constants

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
78ee9cebd81f1496d69bd0c933e3ee16fa02a96f,"Add test infrastructure for Java 21 (WIP)

The tests and their XML definitions are still copy & paste and need to
be cleaned up. Separate Java 21 feature tests do not exist yet.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
39c5da6eb973ce31ad90c30c1b4156988d6b9bf8,"AjcTestCase: Make sure main methods can be called in Java 21

Since JDK 21, a public main method of a non-public (e.g. default-scoped)
class can no longer be invoked without making it accessible first.
Because many test sources contain multiple aspects and classes in one
file, this is a frequent use case.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
99f426e351b62310ce3c31348594b106a4bf624e,"Move some 1.9.20.1 bug tests to correct directory

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
72171c3724100618bf2c733316d23ff7578eeaa1,"Make all existing tests run on JDK 21

This mostly affects pattern matching for switch and record patterns.

Two tests which were working before for pattern matching for switch
(preview 4), started to fail, so the corresponding code was commented
out and https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1466
recorded.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3bca8528f33a3648f3646aeeb2f0b55576b0fc64,"Adjust to latest changes in JDT Core

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f0c0088286c17f8a5bf6fa8a00b01a7f46568cf4,"Switch CI build to Temurin JDK 21 final (from EA)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
70f3c09bcdd80f682b098f22da8b6285211e46da,"Enable some tests after J19 problems were fixed for J21

Two test classes which had redundant default clauses for switch with
record patterns were copied from the java19 to the java21 directory and
the redundant clauses deactivated, i.e. the test now run as originally
intended. For older JDK versions, the old tests still stay active in
order to document the old state of affairs.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
05de091a064ffc7e34f288ee5542900f47e982de,"Release milestone 1.9.21.M1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8e8d81cae8b098f3289253aeda20e77a43939866,"Set version 1.9.21-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
021fcf16f1828e311621d172dfb084fe309144f4,"RELEASE.md: Add '--add-opens' info for Nexus Staging 'rc:release'

Sonatype has not solved the problems in Nexus Staging Maven Plugin for
years, so it makes sense to document them.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9e09610f1ab49361c68c7d3d6f40ad71fb267f79,"AjcTaskTest: unwrap redundant if statement

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
37f3f6c11135d0d6cac6ec2511f8d2baefdc8457,"AjcTaskTest: Be more lenient with aspectjrt version warning

Filter out a warning which occurs, if the current release does not match
the stored binary in lib/test:

  bad version number found in aspectjrt.jar
  expected 1.9.21.M1 found 1.9.20.1

If e.g. we run tests for a milestone release a.b.5.M1 and afterwards
switch back to a.b.5-SNAPSHOT, we do not want to update lib/test for a
single commit, just to make this test pass. Hence, we ignore this
warning here.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
93511aeb022abcf550124f7e7eb4ed5f7d917cd2,"Add missing file RecordPatternsPreview1ExhaustivenessOK1.java for JDK 21

This file was missing, which did not trigger an error in CI builds,
because AllTestsAspectJ1921 was not part of the AllTests19 suite before.
The latter will be fixed in the next commit.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6f2702e535185cdfabdc3f61f3d864954277d89d,"AllTests19 suite: add AllTestsAspectJ1921

Until now, the CI build did not run Java 21 tests, but they look OK
locally. Now, let's find out what GitHub Actions says.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4714dea05beb8f5b5ebba6277baa1ca440281d46,"Reactivate some tests on JDK 21 after upstream fix

https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1466 has finally
been fixed.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e761f6132299702b6b19efe09e1e09530d4a64e8,"Bump AJC version string to c13b03ceabf0c1

More exactly:
Eclipse Compiler c13b03ceabf0c1 (26Nov2023) - Java21

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
853208768355097f98ab9531aa1314c63a0e04a1,"Adjust to API changes in ECJ 4dc7b558 (01Dec2023)

Mostly StringBuffer -> StringBuilder API changes

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
00b87d75dff48ea56d69edd2826d20c1bc307af6,"Bump ECJ to 23b713ce (01Dec2023)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
dfd6e38768ceb4450e9a08b5c9c488d4c0e2c6fb,"Bump JDT Core to 1.9.21.RC1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7eedc60e7610fcd47cbe514c782ef3bda86a89f1,"Release candidate 1.9.21.RC1

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
52f52bdc22339fc4c8680780b7d1260de7c44591,"Set version to 1.9.21-SNAPSHOT again

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8bed465e2629faf8180825d33a14ecfa3f2edb8d,"RELEASE.md: simplify '-DskipTests' command docs

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6d72e7a60a64eb5c282ec39bcb5ba51ce1c7a471,"Set exception root cause in ExtensibleURLClassLoader::findClass

Fixes #266."
3ae6e989a4ee2c808452d0984811cfd963286fdd,"Simple regression test unit test for #266

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
920e9f5f15dc8e4e2962357f351bf74c7d9b666e,"Make OutputSpec::getTrimmedLines work for empty lines on Windows

Improve the regex splitting lines to actually remove CR characters on
Windows.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6be5a0a6a62e9afefad53a27f4c75d95ae7dac74,"Add tests for Java 21 string patterns

TODO: Due to eclipse-jdt/eclipse.jdt.core#1719, one line per test is
currently rendered incorrectly. After the upstream fix, change
""\Bill \Duck"" to ""Bill Duck"".

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8c72d2da438d06885d48ffd3ade30b89a782b874,"Add tests for Java 21 unnamed patterns

TODO: Activate after
https://github.com/eclipse-jdt/eclipse.jdt.core/issues/893 is done.
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
05de3c05c3619c0aacd5b47a80ac1c6767deb39c,"Add tests for Java 21 unnamed classes and instance methods

TODO: Activate the unnamed class test after
https://github.com/eclipse-jdt/eclipse.jdt.core/issues/1106 is done.
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
433beb72ccbc609d6d4bd9cee07d8a8985286830,"Add AspectJ 1.9.21 release notes

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
bac644ec1b26210fc08d170eb0bb1048bdb0fa85,"Release AspectJ 1.9.21

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e13d569d24242f85ca5418a48325dc60b7dc9453,"Set version to 1.9.22-SNAPSHOT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
2cfb11f3d66737c3f0d7d94bdd94e8731ced4e20,"Fix typo in README-1921.html

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3ceea2484a9de250b0e8e8931784b5b7ddc50a96,"IDE.md: Add Eclipse 2023-12 update sites for AJDT

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
65645a2770acd7b0d662e10c0a394465ff050518,"JavaVersionCompatibility.md: Update for AspectJ 1.9.21

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3b81ea114192b5850867a0a6c49aed5cd93a922d,"Add info about #269 to 1.9.21 release notes

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
696aec651b6f8ee85a7d51a1692b6eed8e36727e,"Remove some TODOs from tests after upstream JDT Core fixes

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0bece5e3e1872d40e65efa76f80b29bf9c07e0b3,"Set version to 1.9.21.1-SNAPSHOT

Currently, the situation looks more like a Java 21 maintenance release
than directly a Java 22 release.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9b77839fb2e1eb120179513293b6fe4d7754934f,"Depend on JDT Core 1.9.21.1-SNAPSHOT

The new version is compiled to target 17. This should avoid the strange
""NoSuchFieldError: RELEASE_17"" error message in AJC.

Closes #269.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0ba9f25b0e5deb638f6e7472141f4edc4450c99b,"Add minimal JRE version check to Main.runMain

Use new constant Main.MINIMAL_JRE_VERSION (currently = 17) and
SourceVersion.latest().ordinal() to check, if the minimal JRE version
requirement for AJC is met. If not, then exit with code -1 and error
message ""The AspectJ compiler needs at least Java runtime 17"".

Relates to #269.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ebbc41255384e85db03c4eb6aae4e6464803d0a9,"Add initial set of AsciiDoc files, converted from HTML/XML

Some originals have been deleted already. Others, especially the user
guides, still exist in both formats because they have not been
proof-read and probably lots of links do not function as expected. But I
want to see what the files look like directly on GitHun.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
fa63feda31a6a9656173a63dc057993d98469305,"Fix some AsciiDoc links (WIP)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a6a1dbea46fd4829189b23fb900da6a586a8151a,"Fix more AsciiDoc links and code blocks (WIP)

- Add Java syntax highlighting to AspectJ and Java files
- Add XML syntax highlighting to XML files (Ant, LTW etc.)
- Dedent and remove empty lines, where necessary
- Enclose in-line line numbers for Java code in /*23*/ comments in order
  to enable Java formatting

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d851d3f377a8c4b0c5f8056f9dee22f29dc349c8,"More AsciiDoc improvements, mostly about code formatting (WIP)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6450c7d744c2be34767105626b70df518ac38631,"Finish AsciiDoc improvements in ADK Developer's Notebook (WIP)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ef87efb9056861980104c9bad63223590e29bc44,"Improve release notes formatting

Also unify the way copyright and release date is displayed

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6803c91210f78e6024109c8b9b46ae823131dc19,"More AsciiDoc formatting improvements (WIP)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9ddd317779717bdb8f4eb1d61b7bca596a1846e3,"Remove outdated JDeveloper links from AsciiDocs

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8518fcf96e52edea67b862ade95b64f63607e605,"Globally replace HTTP links to eclipse.org by HTTPS

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e71a30312433f65c41caeaa4973a9956c53f8ad9,"Globally fix spelling error ""dependancy/dependancies""

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d2f3dea7e26c7850addea7747b3f0d0fe06e8b3d,"AsciiDoc: updates in main index and FAQ (WIP)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
65545672f931445a954a900f7335269f33aff245,"Remove all references to AOSD, but mention Spring

- The website is just a front page.
- I failed to contact anyone via:
    * fb9553b7471df638478bbf918044bf52.gdrp@customers.whoisprivacycorp.com
    * info@aosd.net
    * admin@aosd.net
- The discuss@aosd.net mailing list had its last post 6 years ago and
  the last one concerning AspectJ 11 years ago according to the archive
  at https://discuss.aosd.narkive.com/.

Mention Spring support for native AspectJ an Spring AOP as a real world
example in the FAQ.

Also remove an FAQ link to a no longer existing PARC website about
AspectJ and fix a small typo.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9735e858af48ff0bce152ea489800a86a151b08d,"Experimentally add asciidoctor-maven-plugin to 'docs' module

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
d4a6906b3012fac6e4dbaca5854fc59ba0d67e47,"Rename '*GuideDB' directories to their actual HTML site target names

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9c37014d62687a5083b1810185469ed8f0f94eda,"Add README-198.adoc, README-199.adoc

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ce4fa2d3c52e77cd5d4cfa0e4c07e596e91e8ae7,"Add asciidoc release notes up to 1.9.21

and fix some minor punctuation issues in older release notes.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
62031324a74d83cd2e4a492acbfdb1f471bf110b,"Move main documentation index for website to root directory

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
451cd62eac71a02f653521c6a40bdd7fb530df5f,"Fix most xref/link URLs in main documentation index

To do:
  - API docs (javadoc)
  - all-in-one guides
  - Eclipse website links
  - add links to markdown files (maybe convert md to adoc)

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
217df7e0bfef4aea30453ad2595702abecca57d7,"Remove 'imagesdir' from Asciidoctor Maven config

User relative paths for images instead.

In one case, we need to copy images from a subdirectory one level up,
because otherwise the images are only found in the included document,
but not in the single-page one including it from the subdirectory. In
all other cases, included ADOCs are located in the same directory as the
including document.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4403dd934b17ecec6fee95906d0ffa3187759811,"Remove references and docs about obsolete tools

- AspectJ Browser (ajbrowser)
- Forte IDE integration
- JBuilder IDE integration
- Emacs integration

All this information was old and outdated. Ajbrowser was removed from
AspectJ a while ago. If the other tools even still exist, any possibly
existing AspectJ support is not part of AspectJ itself.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ac71008e59b83d24ec5985e9e557c5cc6bd84c00,"Adjust design overview docs to other multi-page docs

- Link to other pages in index.adoc
- Include other pages in design-overview.adoc

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ba6058a4007f937c3d32a6022446edaa149a0d1d,"Fix/add more links for multi-page docs

In each case, link both to multi- and single-page docs separately.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0065b755292708d6fd27c067564ecef2b10ede04,"Delete 50+ XML DocBook resource files

in favour of the already existing asciidoc ones.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
f7962810eca3ddda75d64b85caab2449eeff480e,"Bulk-rename release read-me files to version numbers with dots

Also rename references. E.g.
  - RELEASE-11   -> RELEASE-1.1
  - RELEASE-1810 -> RELEASE-1.8.10
  - RELEASE-1921 -> RELEASE-1.9.21

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
61ceb8a58ea72d4c07ff0b2f669d5f84b75700ec,"Move docs examples directory two levels up

Now, the location more closely resembles where it is on the website.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
5896889327c680c84981542fb7ba95f015650f82,"Move quick reference DOC/PDF files to separate directory

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
947108b8c15b6434b05b2c43fb55ba014ecc3b11,"Move release notes README-*.adoc to separate directory

Also move two more release-related documents.
All referenced images are now in a common subdirectory.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
994a8fd9bcc96cb890439d9598cf47db8a661882,"Fix referenced images in README-1.6.7

Before, only one image was referenced, consisting of a screenshot of two
diagrams. The other image file, containing just one of the diagrams, was
not used. Now, both images have been cropped correctly and are both
referenced separately from the release notes.

Better late than never...

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
afea9e8be3869f0100941ff6eff67eaab7029004,"Move JavaVersionCompatibility.md to release directory

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
c719423b9106462bda1291d18d35a96448e6e2ba,"Rename JavaVersionCompatibility.md to .adoc

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
3fbc9fdbc128673e47a1c1eda3c8a037dd5cdf38,"Change syntax in JavaVersionCompatibility.adoc to asciidoc

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6cebbda04e11c3e2dc75d1b73a3673fbf128b55e,"Link to Java version compatibility matrix from main docs page

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
807007c3b6e4eb9979eb69f82e1d77bb8f555453,"Reformat asciidoc source for main docs page

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
947324ded33722861f3ec9d9a6cac06de3043686,"Move main license and readme files to docs root directory

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
32eccc458582cf8298047f6ac3ba1936d4c02854,"Move compiler-weaver.adoc up one directory level

Also rename ADOC on the way and move images to subdirectory.
This makes the Maven Resource execution superfluous.

TODO: Adjust image links in compiler-weaver.adoc in next commit.
Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
536b969a132793db66d733b65833a8df7856b158,"Adjust image links in compiler-weaver.adoc

After move in previous commit, now the paths have been fixed, too.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
04efbfa25eb0a805879ebc702b5beb21fff186b5,"Rename Visio files for images used in compiler-weaver.adoc

to match the GIF file names, so it is easy to recognise which Visio file
was used to create which GIF, even if no Visio viewer is available.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a45f10e33c32b0312f3dc6b842427962643583bf,"Move progguide images to subfolder

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
9f4494f708ec19d4ccfcab68b12e2a10c72c411c,"Delete some unused images from docs

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a70f0664a07103dd124a1a7fdf9bb6edd111961f,"Move image used in IDE.md to images subfolder

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
6763c1e92971eb7d06749ad4d947049c4b7314f6,"Fix warning in Asciidoctor Maven by JRuby version bump

Warning ""Native subprocess control requires open access to the JDK IO
subsystem"" can be avoided by upgrading JRuby, see
https://github.com/asciidoctor/asciidoctor-maven-plugin/issues/553.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
8fd01b37fcf14ac417f99e40cddb6a4b9ad62666,"README.md: Beautify link to Maven Central

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
22299adb890b87d40d7b7229cbc751f1545ef49d,"Fix some broken/invalid ADOC links

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
0e8205bf1bf37bf685c52d0466e85ee025198f0c,"Rename docs GIF to PNG

The files are still GIFs for now. In the next steps after the rename,
they will be replaced by real PNGs.

Background: The Asciidoctor PDF back-end cannot handle GIFs directly
without an additional Ruby Gem. It is easier to only use PNGs and JPEGs.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a67fd6fe0df6aec9ed97c85e4d72b97a6358d3be,"Replace docs GIFs by PNGs

Follow-up on previous rename-only commit. This time, the binaries are
real PNGs. The asciidoc and other references to them have also been
replaced. File figures_classes.png in the teaching materials also was
rotated by 90° to display it correctly.

Background: The Asciidoctor PDF back-end cannot handle GIFs directly
without an additional Ruby Gem. It is easier to only use PNGs and JPEGs.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
66fffe032f2fda4851e83c55385199feeeee31be,"Asciidoc: Create PDFs from multi-page guides

Using Asciidoctor Maven, we now produce PDFs (which are also linked to
from the main documentation index page) for
  - Programming Guide,
  - AspectJ 5 Developer's Notebook,
  - Development Environment Guide,
  - Problem Diagnosis Guide,
  - AspectJ Design Overview.

Attention! PDF generation alone takes 3+ minutes, almost 4 minutes
including asciidoc to HTML conversion. Just deactivate the 'create-docs'
profile if you do not need docs during the build.

Closes #272.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
ab957f165e1b9109772c36bd1df201f10b0ba42a,"Rename doc generation profiles, making Asciidoctor the default

The Docbook etc. Ant task profile is now called 'create-docs-LEGACY' and
will go away with the cut-over to the new doc generator logic.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
e090edbfb42556d49f7a618ceebb3f64b2341a30,"Minor changes in IDE.md

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
a8eab70a29dc55514fd523371762d286ca7082df,"Bugfix: AspectJ installer extracts text files as US-ASCII

When extracting text or HTML files, special characters like German
umlauts ""ÄÖÜäöüß"" or copyright symbol ""©"" were destroyed while unpacking
the installer archive. As our files in Git SCM are all UTF-8, the
installer now also uses UTF-8 to read and write text files.

Fixes #270.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
41b8bc56dae8e1cb021c9e52d687951ea4cd765e,"Docs: Create separate CSS files, do not embed into HTML

TODO: There still is one set of CSS files per subdirectory due to the
way the docs directories are organised. It would be better to have them
just once. But to achieve that, the ADOC-to-HTML conversion would have
to be changed, e.g. using one central directory for images and
reorganisation of the overall directory structure and build options.
See https://github.com/asciidoctor/asciidoctor-maven-plugin/issues/729.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
cbe376dab2172f70c0b3650297e416c8a89d04a8,"Add runtime and weaver API javadocs to installer again

Closes #271.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
4d884aac75b99f92c201b14fd4b4879a0fabc597,"Add local Maven site to 'distributionManagement'

If we ever decide to add Maven site docs to the AspectJ website, now we
can deploy them locally using 'mvn site:deploy' and publish them on a
web server or even incorporate them into the binary distribution in the
installer's belly.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
610d0ccf29f72757ec516f11f720405a8d2b695c,"Remove obsolete DocBook build config in favour of Asciidoctor

Along with the Ant and Maven build configs, downloads of
 - DocBook DTD,
 - DocBook XSL,
 - FOP,
 - Batik,
 - Saxon
also become obsolete.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
7c0835db41d336c6978ae57ec4ce6b845016ac2c,"Rename readme-lib-module.html to .adoc

In the next step, the content, which is still HTML at this point, is
going to be converted.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
fa2be12bae6619d39c7c7b571e495303c1381f83,"Replace HTML content of readme-lib-module.adoc by asciidoc

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
b5c483628aab4894132ef66e19f68a825b472472,"CI build: fix ""create docs"" step

Like the javadocs in aspectjrt and aspectjweaver (if the releas profile
is active), for docs also copy the docs in the package phase to the
aj-dist directory.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
81dc828653c9c3f01341ad9defdfaef3cec1d5d2,"Fix docs links to example source code

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
939e81e6babc20852fe1d6d1fa490c95e1aa8b56,"Update assemblies to include AspectJ licence

The former HTML file was moved up one directory level and converted to
asciidoc format. Therefore, include the ADOC file from the correct
location now.

Alternatively, we could have included the generated HTML from the
aj-build/dist/docs/doc directory, but that would have meant adding a
dependency to the 'docs' module to several other modules for this one
file. Actually, asciidoc has become a widely used and accepted format
for documentation and is human-readable by design. Therefore, it is OK
to include the ADOC file. The important thing is that the licence
information
  - is contained in each published artifact,
  - can be found easily,
  - its content is human-readable.

All these requirements are still met with this change. Arguably, ADOC is
easier to read than HTML and does not even need a web browser.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
96b15962f93d7e8400a1a03d20f2bc6939c7ad8e,"Delete obsolete files

- Redundant copies of HTML files used in AspectJ installer, which
  already exist as resource files in module 'build'
- Null-sized AspectJ library JARs which probably were used to trigger
  certain build steps in the former Ant build
- BridgeVersion.java.txt, which has been replaced by a regular
  org.aspectj.bridge.Version class which can dynamically determine
  versions from a properties file instead of relying on them being
  hard-coded into the template.

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
75a9c663ab7b382cdd97f39acd2588cfe1f76f03,"Attach installer to CI build

Signed-off-by: Alexander Kriegisch <Alexander@Kriegisch.name>"
