commit_id,msg
853f5db290708f2337f6fb9cea691e0f052ec702,Initial commit
6bb8d0ab4dd8351fa8cc577e88204f69ddac5312,Added LICENSE
50a9ada2fffc5580126c87975bf13d352373147d,Rename app to LotteSample
1462de75a9318198bb03824b54ba9791580e47e0,Added lotte module
97b43d867080726f0dfbb6f1581adb2075594c30,Added a list of assets
aca23da58ec6977f0110a3a2d7545bbaa972cceb,Added AnimationFragment
212b06da41be2b1b1e6e555b322e0908c585ab8b,Moved assets
ede9a3de4619b09d376e7eb6275d614adc986907,Created a bunch of classes and some basic implementations from Lotte iOS
dbd85ae0ad986412969ee8e2984e8b639a865c3b,Added lots of json parsing
aac688c1b5626e234c63ad4bac7f441beed48faa,Added shape group json parsing
6a79b02b4c8bbc8388e9801417d89e9d9574382f,Parse LotteShapeFill json
ce64b0e6410a66f5d8377aa3d2769d3bcc99fb61,Implemented more of LotteAnimationView
515c6a15cc13a17c5a449188da759165de201e20,Lots new new boilerplate
dea9714e6680287044d7f268696c32be520e2ebb,Successfully drew a square!
f1ff244c6acf10fd678e559ea53f4c0d9fbb836b,"Solid Test works

Added some debug logging"
ff7dc14c2d70f0ca0a2b4aa43c5be90edbce7ea0,Added a bunch of toStrings
188f439b685d0d7e3e89b2e959c8cd29ea00cf55,Bezier fill with color works
9fff6898ef5a5731c2b5dd3c5407ccd379179c36,Stroke works
06498cb0b36885d9f30d793eb9682ed7d2186f8b,Two shapes works
0c8c74aee2470a19d0100885c2911a5873fdbb8e,Ellipses work
41b6b3abfee61db4f20e29773398a176896064b1,Implemented rect stroke
8bab13ee2f5d08c6ea38a06d2bff6b71c299ba87,Added some working parenting json
a9d66aa7c1a7ff0c507c96d0875962e941296a1d,Set LotteAnimationView size to match the composition bounds
e5bf70285422a4bd43564c90008a37a65382ebbf,Shape path trim works
15c65c4b0bd6e68a26ffc1269c767d832c68eaaa,Ellipse trim path works
a694a677d8d2d0712df5f01fff30d417dd31746b,Added sublayer transform for rotation
2ecbe72f05cb9995fd78cfb8b7ad1dd321818adc,Added line join type and path effect support
1ec996fca7fdd779e0bf5e9331bcefdee9d88d3c,Scale shape paths instead of their canvas
3ea2ec58108cf20484e98576a8bc0937b715adb8,Some setup for Masks and Mattes. They don't work yet though.
113676eed7e67a85adb45d6e684ef199df1d9310,Added Facebook screenshot tests but they don't quite work yet
f1012c9e86793186c9ffee376d61936a8a70ae03,Render each LotteLayerView on its own canvas
060586c6e6ca38cd1d6522addd0b5c6c5f66e17c,Shapes now exist at the correct level rather than always being parsed into a ShapeGroup
ba88a78c735ed56ca0fee32906d92366a785b2ef,Simple masks work
1f35b7ec9ba5d1b39730896fc3be4d4abca762cd,Alpha mask now uses ALPHA_8 for memory efficiency
ac1e324a20ea06c920ad477de249304eca3a50a6,Replaced JSON with a smaller set of sample json
ce01cffd98b0a673986a570e752cb46380506cd6,Fixed the drawing of layers with no masks
cf4aab75f83acc68346bc8a29aa9b73a1cea4f5e,Mask 5 and 6 works but uses less efficient mask bitmap and masks 1-4 are translated too much
eab0a6ecbd84a9e2fb7a17c6dafe700d77468956,"Moved transforms from childContainer to LotteLayerView

Masks work but bigClock doesn't"
a446a643762658a1b0fafec46027419c178420b6,WIP bigClock works again but masks are broken
ac458a9b501a0c5823d3232006342f89da200357,Draw the mask with a bitmap shader
661c8895ce21c674b5a13aa0d40d01f4e010f3b8,Another attempt at masks. They all seem to be working but the mask is argb8888
c93c6e0a0e5273afa95a7ffee7988b0ef4fe110e,Updated mask to use ALPHA_8
1f53f4ed673efa96d6cb7872242cfb5259444d14,Cleaned up LotteLayerView
645d5eab971cd6a5fa09d92b62b7d4285404398f,"Added a grid option to the list fragment to display multiple files at the same time

TODO: implement the fragment"
85ed7cf7d038299cc025afac554615842d6b2c97,Added a grid fragment
67c486a5cc1f26be29d8b92d054cbc2414848131,Load JSON async
7571d499150758c4e3ad36b8d1adbc68744991f9,Reuse and anti alias mask paint
a2e6e2568941ea36ca56af0825d621697b837927,Renamed canvases in LotteAnimatableLayer
4a3d2caf0e1a07459e45fe3924442cb4f9be22b2,Parented masks work
98a6b81ff7aaf2c41207a027df3661d45e44c31f,First attempt at Matte's. Not quite working yet
9a2091283a80004843ec8e67fc0ab214e3254a54,Mask22 works (simple Matte)
c8575033bc6acad94862b8e38a9f2225a6ebd03e,"Created a bitmap for mattes.

Moved matte and mask into LotteAnimatableLayer"
18c04ab3e6d1efb8e51a21fc00b00e7a9222866c,Reuse matte paint
3963fe2fd2fa38317d720d9abc9eae5717bde1f2,Updated lightbulb asset
a950a508022788afe71f3acc181e381234b7fd0c,Cleaned up some logs
9fe78a11aa4ca38c498f1ae3d432e5f9b220d5d2,Changed default line cap to be Butt
8a7eb5d112d74077aa565878fa65af9628816fe9,Added parsing for LotteAnimatableNumberValue
21cb52bd6676c056187fe7ada1d18f54465c0754,Mattes work but use an ARGB_8888 canvas
9918d58741b592dc4dbd9fbdd32d1527e7ce226a,Added support for rect join type
143595cd460886a0fcd5975ecbf9930bd244274d,Fixed dashes with only 1 value
c400f8e69fcedaea5d172b8813cb9d078abd429c,Added support for line dash offset
5641333cc5919cd7c840d97caf914af62de91fab,Removed test json
2b00ef014de2851cf3b322a14ab1080e97fd41ed,"Implemented value remapping for animatable numbers

Put in some frameworks for alpha but it doesn't quite work yet"
cb29add9ceb07ffe4ee0933b4b28e1b930526eb4,Created LotteKeyframeAnimation
7b440d8ece936a4dcf9f482f0bd87b6f82b1e834,Implemented of LotteAnimatablePointValue but not tested
3b1f6b2353daf04ca6414377a42a2a932b017c86,Implemented LotteAnimatableShapeValue but not tested
2d1cceaf751554c9b72c3019fb7ad2ae5721a710,Implemented LotteAnimatableScaleValue but not tested.
4e21ede1eefc5a3b733f0f91a72e1493ac91417c,Ported a ton of the animation code over from iOS
4c0bbcbb3f69703a69874819244078139f6d6aa9,Created an animation package
37a920ff3d3f9e7a480957a802fdabd00856e633,Implemented LotteAnimatableColorValue and LotteColorKeyframeAnimation
7818a5845fffa305a29f7b386a1978dba6d8d252,Minor cleanup to LotteAnimatableColorValue
37551b6c269bd6f2d92a8b64a72952abd29941b2,Implemented some hasAnimation properties and a few other missing pieces
ef8bae0cbf168f726a52b098218c837660a4d81e,Alpha works much better. Not 100% yet
dbca538d0b9144ad53b181d9b3e401ecc33e0498,Added support for shape and transform opacity
dfca71943ae15abba2d06d2ed819f5c0bd793e9b,Implemented buildAnimation methods on layers
1fdc654e20cd3be57f69c95beb1c012bfc4b89c8,Added missing line in LotteAnimatablePointValue
9d3b07c6657e7714485d3b4593fcc2e23ec007aa,Created observable properties
460fbab46c7a3b8163455339ac1d74aa69d41635,Basic position animation works
85a0b396f6d2a31e59e74972a53090c5efa249c5,Prevented static shapes from crashing
efe0d54cc128d2d017dfd4591c4f0f0a184b01cc,Implemented observable properties for other animatable values.
5e4663dce9be2d7515439ed83e731426fe8115b2,Removed a png from assets
827931b200b65533842e78de37c6035832fdf288,Fixed a crash with GroupLayerView position setting with a transform applied
5ce0fe768a169f92ada084624390e334f78bf1c9,Bump gradle
c25a73c796dd18508f1ffe6d8bb5674adc710606,Fixed scale animations
3ef7a3e7f73442092164fdddd7b97387641352d5,Trim path animation works
75d239737f396a18e409a2db50761dcf422cc578,Reset trim path Path before drawing
bd835fabbd4844fb00258a9fc963843c67e78ad6,Fixed LotteAnimatableNumberValue number parsing
0dcf846329e7d2ca785828248841336c20c4eb4f,Fixed a few bugs in AnimatableShapeValue. Doesn't quite work yet but close
8e7efb9c9a03b0ab12150c61c9ed58b525425e3b,Shape animations work
d0526c4fe4ca19cc254b01fa9ab2a5c5e0eda64b,Fixed a misaligned block in AnimatableColorValue
c65211f7c8ec8ef017707938a754329e2e4998d3,Fixed a few typing errors and opacity animations
62966475bfe44c9a0793f9b81e7606d67774a4cd,Made rotation use observables
4a6d9a80d5c963612bb37fb4d0e5117838d74517,Switched some more initial values to use observables
55c94c77645ff610642e82a7b5cfbca44e9d27b4,Converted even more things to use observable over initial point
fcf70435546786210fe26a33acaa76c29cf97eaf,Added more observable listeners to Ellipse and Shape layers
4ade66991935240d7d4a74e06ced6fa117a878cc,Fixed a test
501d8b9e4e26d28b8926f7e0aaca00981be1543d,Added a TODO
f3c775cc9da63cb4109bf2061ab0a8dfee054de5,Fixed ellipse line width
0b203d4724f5af56c0bee151b782dad49eef99d4,Added support for inOutAnimation
13073ebe409bc09aa71afec25f391fd3a340588a,Reuse bitmaps across layers!
7ed1adb5124d0704085204abf73385e46cb44af5,Update the initial value of the inOutAnimation
69aa8bfe1ab9699de714bc9e0a798d81d150173a,Added some missing animations to group animations
b176a4c08252f39354f6e5451c36e9f5db5ab677,Fixed the layers some animations were attached to
299e67741b0788b0f27b05bfb9d7d918c9d1abe6,Lazily create Matte bitmaps
75aa5c30de3d9116b29066403bea175466e534e6,User lower quality bitmaps for mattes
fa2257fd28abcad4c647ade9a391d5cf50e71de1,Use even lower quality bitmaps for mattes
0dd6a55210fe1f8ab9daa3db524cac9becaa382e,Remove transform from root layer
d35d1c1aa2e386ee4b3b07331819c1a6c2f7f8b9,Fixed animation startDelay
f48023f0176cb51e4500813c3d1c578e908284ab,Prevent ever creating a mask or matte bitmap when not necessary
637acec3d72385bd60c4c2c7c53d3c83328eaff2,Added a seekbar
1b0fe32eb4d87605b630d386d258d0bc1d6dda45,"Fixed some animation timing and rounding issues

This made some animations better, some worse but it's more technically correct
and closer to a working solution"
69ae8ff353bfb96c31938137feb1ffc5ae0dfa2b,Fixed path animation measurement
183b15af319b8fa1fa5f4e978b7fdd71ec642b67,Minor cleanup
8052caa2e6e70377efeeacb7d743262630c5cfea,Use the same max duration for all animations so that progress can be set uniformly
c2e7086f199e1b8494b81456d5d20ed441517fa0,Fixed path keyframe animations by creating a segmented path
48798bb993eeda3094ebb45f07fd1dd368a3cb15,Added support for in out animations
95bf6055a9c29c707b0a498fd78d95efe51a7cdd,Added support for animatable dash patterns
20ef72bb503e762affbf752e8a100f20c8304ea3,Fixed support for 0 width strokes
22d8169c516feddb3681e3d733bb2644f5b40c08,Added support for ellipse and rect strokes with 0 width
59c874b64ead4c1e658a962779bb267d355e3303,Fixed parented animation durations
60541ec6464b18d75275477aa672decb99c21a22,Fixed a crash in dash pattern listeners
27fbb671f8a7452504c75adf365d37211b0e4184,Fixed another crash setting listeners on dash patterns
6c4d227ed8fefea44943ab273f55e35679ed3511,Fixed a bug where some in out animations wouldn't work
87c0cff7196ea61483b128bd457f61e7957276f9,Minor nit cleanup in LotteEllipseShapeLayer
b47cefeb0b946f7add98d832fb50bd887bda04f2,Fixed dash patterns not working when a value was 0
842d28477dfb19368e6f70df2b234b6d9fd9576f,Added some new json files
8cd1101798dbb32fab529e21ef1400543f129680,Use comp duration instead of manually calculating maxDuration
08a167b54e6663f449ff69b8657f16da16afdc75,Wired up some missing calls to matte layers
880e678baa596d132ef3e68e177780980b3f0f40,Renamed json and removed unnecessary ones
ed0f69165b6429ffb8467d3596ff0e6391f98a35,Add a change listener for shape scale values
d35ca074f4efb6f449015f244d595e0a7645a93c,Added some screenshot tests
f6237f2fa120e86700246962d572a568544b3702,Added city and check switch tests
ba41e69d96c7bd9b51bd162b90a0a07aeb781345,Made LotteCircleShapeLayer extend LotteShapeLayer (DRY)
3eab742bbd775f83b6a11fff2416be82e019919c,Added some json and an alarm test
b39627c6cd7153b9d048c2aff33966b191402a39,Use a single animator and compDuration for all layers (#1)
a13660d508e880a3fd071e1671db77926cf2a9fe,Added tiny dancer
f524f9452d97342f8ea7991bd09079671d6159e6,Add animation listeners to RootAnimatableLayer and LotteAnimationView
79900f15d59e8730d3362bdc4ca04af841b57025,Make root animatable layer final again
7ea6b50b39b6058d423d71d30ed4068fba0f0342,Limit invalidateDrawable to once per frame
bc75984779ad7037efe1b8339eb7f3bb2f80fe84,"Replace all foreach loops with fori loops for performance

According to systrace, the iterators for the foreach loops added up
since they were getting called so frequently (setProgress for each layer
and observable updates for each layer)"
31bb0d7a87646abc346061807c647561dd431ea5,"If there are no masks or mattes, draw on the original canvas"
d18c13704282fc6658a49f3a94451176e762a586,Fixed root drawable creation on pre-Marshmallow devices
c8c6f1132f987549e8fca88f47dc33b0e4fd1f31,Readded a missing import from a merge conflict
e5ff2ed9002620b03d7623e5ae01b43f3290376a,Cleaned up TinyDancer init and positioning
027a6218e713ffe56786e615d67f11e9abaef672,Added FPS debug information to the sample app
92cfb5a7352751ff4e71c492d7ebb42e46468881,Fixed a regression in mattes
d28fb3574a94e2f587a4b2eb3aa0a5ef95c097e2,Treat a main canvas paint with alpha 0 the same as not visible
8074c81919bcc4bfe9a916e931bba05b2568b03e,"Set the fps counter target framerate to 60 rather than to the composition framerate

Android's target framerate is always 60"
e4a81255e9f33fa62af46ae875ae3d8a8e0f39bf,Cache keyframe indexes for a slight performance boost
3a9af17ff07264e2d88dab9741617ba237a49139,"Cache small trim path deltas for perf

This looks good with stars but it may need to be tuned for other animations
to look good"
6c24dd8aae6dabbdaf1a58cee30c01f9b16a6a82,Cache duration range progress. It was surprisingly slow on systrace
77c5f29d9017fe685d4e5c60b634ce9ef4eaf1c3,Prevent doing many canvas operations when their values are 0
1494ae21dec3a0f28fb516d12cfd2ad7d810c88a,Recycle bitmaps when detached from the window
9b7dcab9cc46486fd5a0d5d65cc2cd99facaee55,Fixed a scale perf optimization
0b3506bed35fae5b90015a00cd18e5d006972ef1,Removed trim path caching because it causes some animations (like alarm) to look bad
2b097d7ff858b850e55d1e4674a1b997d0308b40,Don't udpate progress or observable if the value hasn't changed
9db17514a828f4455442086b81766d60b09bcd5e,"Update the seek bar when the animation is running

Press play again to cancel"
20abd832eeeef7bc41b70c3fa9cd50275e633ca2,Add LotteAnimationView atts for autoPlay and loop
f7403f445cd3d9897d683dd2b59ec8d2804de17b,Annotate composition as nullable
808a5e8a742fab6156093b96ea651e23e31c40be,Updated grid fragment
e892251411c095b70aae319f6b075f615392d3fb,Turn off debug mode
7894c245ed9cf745f2ea0d62840bec042249caee,Dramatically sped up and simplified screenshot tests
13be6c7cf20140b8c0bf216bab81a405d9b54e66,Optimized bitmaps for compositions with mattes
1bd63e28e51fbc476122a038427cb5936b81ff7c,Cleaned up logic for initializing bitmaps
db78c5c72c392a8e2f019111264b86f674deb0d5,Created BaseLotteAnimatableValue and used it for LotteAnimatableColorValue
fa96bed47856219f736bde74134ebe6d65733ed0,Stops animations from autoplaying
e577a32a6280c76815d1825809abf52afb8ff1b0,"Properly set sublayerTransform and anchorPoint

They were never getting set properly to have change listeners so the
optimization to drop observable events that didn't change had no effect"
9129a03737fad78e29c35689477267a64a8c7797,Ignore repeated observable calls
71f32379c52041ba212ace6979a525c985aa8864,Added LotteAnimatableFloatValue (tested) and IntegerValue (untested)
94dea1cbc9a0f29061c25b9da2815d3ba752971a,Added hosts.json
524d9f7c9c04751698f0860e0142b7b38c078f38,Added animatable host json files
4ecfe36050fd177f170c3ab2ddbefcb95b7aa375,Removed LotteAnimatableProperty
ad73595b80bc7454c9aafc0b755eaf55b18bebf3,Cleanup
b67670858a22cfdfba4ec5e940dc832f02732563,"Merge pull request #1 from airbnb/cleanup

Set interpolators in some missing places"
2ca576aa8d3ec2761e239bc431b87d6d324d3c16,More IntelliJ inspection cleanup
193372ba70e6768db1c97d1a16fc6e83297ee273,Added TODOs
e963ab76550da4c95184ee390622e1d5878222a8,Migrated LotteAnimatableScaleValue to BaseLotteAnimatableValue
eaa3fd56f3841fa0b47d653b28ccd33c4c05026a,Migrated LotteAnimatablePointValue to BaseAnimatableValue
e76af4817fd486b5b3a1d76c80f7e65fed130a06,Added a bunch of new screenshot tests
d21469eafd2c5784c84cdcdfb8b8b6e49b54f9ca,Migrated AnimatableShapeValue to BaseAnimatableValue
17634a736dd584b68a66dfcfd8718a13da9d5299,Moved opacity to LotteAnimatableIntegerValue
7f14282c76d909e1fa45c3d12a106f2e4c7c960e,Replaced final usages of LotteAnimatableNumberValue
58613e4b1b1cef2a11382de8483914e4e1516749,Deleted LotteAnimatableShapeValue2
551f3dc6a2a4f66b5159b347ecf53630da73b7b6,Removed redundant field in LotteAnimatablePathValue
1250a99730408365f0879d5a568f4db22bc22328,Renamed lotte lackage to lottie
5b9bd239567df9d7935b949ef27f9c40ffee9745,Renamed all classes from Lotte to Lottie
648c008d4ea801b94a0e1731823cb19c5da66164,Renamed gradle modules from Lotte to Lottie
701ddfe5c9ae76bd211a0e57297493b7465413e9,Rename more things to Lottie
f82aed6f2248444c008da658ee73335c4d7bccaf,Updated gradle version
9f0bce820ded5f666e1f3b48fa97c0e7c94d916d,Scaled animation by the device dp
14ea5d74cc311318783c7a1c9bfda57d86a56a46,Updated max size logic
181620ba3abfecc6bf4a87fc35773da7057dd0d8,Reenabled shape start-delays
2b4e1ce6d08b71140534f69dad45e6fb8d586fcf,Reenabled TinyDancer
b0b7ddac80b9770dea2ee53783cd812c4fd67ccd,Updated JSON
433ef5b2313e898e32bcda8b550cd17e375e0bee,"Partially fixed rendering on JB

For some reason manually setting the layer to sofware actually forced
it to use a hardware layer. Removing it fixes some rendering but if
hardware acceleration was triggered by something else, it will still break."
b591e69f612abf3d979f4eb6c94955949882751b,Reenabled forced software rendering because it makes some animations janky
ad30062811b0214ca6595164e8ed23f59fd0b685,Allowed LottieAnimationView to be used when not attached to a window for tests
79cd11e26e1c70f812501a7770b213b126fdf6ea,Only set the mattePaint xfer mode once
d597d90291caa8e8f7729c6dba7f4b40f456fee0,Added some LottieAnimationView javadocs
1f57841e0229da74cf79b43cdcefec62bc35b902,Lots of intellij cleanup
02fb8cbf9fc8914859ba044d9015e9e608c074a4,Removed extra padding from larger layers (#5)
ac19c4be8f1cebc0f0018450a9ddc45650968099,Updated screenshots
d8d4e7aa371f679e88391e5816ce113106f7ed94,Cleaned up PointF usage in LootieEllipseShapeLayer
9f62d092bae50d8c5d2a9a5b79dafdabc6cec4bb,Prepare for maven upload
6b1300c3869c3784937b4750be035bea21731099,Added 4 new json files. The first ones that will be used in prod
fd379392de5333e0d64c91c01ecf78194e82ce47,Add saved state
98adca0149694bfff20221e4e027b3b2fad6cf61,Bump version
c4483ffeddd584b7280386a7f268c5f9d81d2ede,Slim down manifest to not break manifest mergers in other apps
2eaad2becec176f3bda10108e12db53b672fcb58,Bump version
4af7e74adbeef407a30ce1c2dbbf87393c21d6da,Don't restore animation name if it is empty
0752167e15c94a18a2928dc2b3c04eb48d8fd799,Delay playing an animation until a layer is set
a95024b24d2b16b2efbbe118f45ca027470bccb7,Bump version to 0.9.3
d1eda30e5bf5ee501702e92e3370beeb031178a7,Removed Lottie prefix from animations
ca1626229340a19fc171f74119eb4f4619062ef8,Removed Lottie prefix from model classes
25e33d63e1402df890eabf2fa4e7954052d334fa,Moved animations into animation packags
02b301fb5d5453bba56c2c6cf96436ffc913a34d,s/sublayerTransform/rotation/
fec7a46dee53b10fe8e1e28f89e00cca90adf0d3,Renamed LottieTransform3D to ScaleXY
88d12c01bc78b6d3d274bcb74a9eb3130652bcb1,Minor scope cleanup
aeeba9dedd93a44cd3ac39b5207df324a349f5e2,Create README.md
9ead8e1101851402b5366ba7fe5d1e432624aef8,Made setAnimation(JSONObject) public
c8239c749d9c52ed5c9bd9af3bf2dd1900380101,Added example gifs
356a46f2760f392fda5e3523ae2bd3a9761ac6e6,Made gifs smaller
2254f1c710b84db8805ddc2d6a7aaea567ef22eb,Update README.md
0575abea3fbda1e76498c7e9b1bcc205352b2077,Updated alarm gif
45273dc673ce24843ae6248e7ab9e21a24e63538,Update README.md
4902a9a8963a2c050b94af3d5df15d3bf210f67e,Updated setAnimation(JSONObject) docs
34a8714340931844a2a46496b99aea30e7242527,Update README.md
adfa22c1f868e12b07c61756ca6459e3bbd4ea5c,Update README.md
0eca9b516ca75bdc10c738fad14b1cbac762e2d9,Make LottieAnimationView reusable
f26c1ebebbf48294ee6523eaf96215bc12be2666,"Merge pull request #7 from airbnb/nsilverman-reusable-lottieanimationview

Make LottieAnimationView reusable"
3ad920b6011b0abc9192f03c985d77976498f5db,Bump version to 0.9.4
3464f33e6c426ecd84643a225a487382f061ab5c,Remove app_name string and bump version
de498aa4289058278cea4e60bcf26d10f967f2d0,Delay setProgress(...) if animation is loading
747a811757cc7a096f8db844f27b6a3a92d7d42f,Sample: Fix grid files
1d3c920215c43449bf3dfa3b6b8eaead06a37b79,"Merge pull request #8 from airbnb/nsilverman-delay-setprogress

Delay setProgress(...) if animation is loading"
1912a1904fe9f2f51fa942dcfa67ad986490f1d9,Bump version to 0.9.6
928e18a7fb2dead2f0c22dcd7039527efcde2fd2,Fix a NPE and bump version
5112832efac0c96ebcd7ae88d3d5a9a283b4666f,Rename Composition to LottieComposition since it will be exposed as an API
5be751beddd0a22da6e506f82845e351e56feb4d,"Refactored Composition parsing to be handled by LottieComposition

This should pave the way for LottieViewAnimator"
89387281373760cd157e0cf79b6b7e1a20186806,Created the first pass at LottieViewAnimator
3e1f3e3bc6cc2fd93ff778adde91203ca5e2ee31,Added new json and fixed animatable path values (#10)
be89adc3ff00bbcf03854e7feffdf63bb1c14525,Fixed alpha on background colors
6042db4b1ea1cfc70fff2ae57e21b35b6d2522d7,Added price tag
b8fe486f73f2c34cd3bf3b5ce9e71203b2593a22,Bump version to 0.9.8
5bbf61b082b73ea9257aa4be13a852b23bea6865,Added a caching strategy to LottieAnimationView#setAnimation
46a05b13e15d6d300ddd263d32ee018cd49ec748,Copy lists before reversing an allow anonymous callbacks when loading compositions
b0dec4749704ea35007f86a6946656cdde5e5991,Bump version to 0.9.9
8fe24c309238b5f3d28b65e3c70604e7f71c0a59,Added keyframes logo
c972ebe82505732733be70052f45b466039e53d0,Reverted cache strategy. Compositions aren't reusable yet.
25f4336bfbf072275ce698e3fde611fa9299a5a3,Added JSONObject back to the public API for network requests
0f8ac6881c9c01345b6a3b5be797b101fc48108b,Bump version to 0.9.10
1a1d76edc097f61a306aff1dd223509567fb078f,Bump version to 0.9.11
d34cb81404cda841b39fe69ace6320608406edd6,Fixed a bug that caused empty paths to not be part of an animation (#12)
e7d9cd7960e76bd73a0c53a833d4a6d431136c89,Bump version to 0.9.12
dba080497e999e8dcc5467606f58accaa79a7b0a,Added support for bodymovin 4.4 (#13)
eb735844852afb21d1ce4298ca73d6f19ee8fc4e,Move getValue() out of loop for performance.
0a197c2e6ce540fb0ab269f73bcfcaaca06ad149,Ignore trim paths that go from 0 to 100
9302b80bea1b0f143b60910353cd8ba46efecd56,Refactored ShapeLayer which actually fixed some bugs
74f5653785005ddcdabde8742f30ab4bdd2457e4,Cancel loading tasks when a new animation is set
a48910c900a72226d43fca9f9de2d617d2fb690f,"Merge pull request #14 from airbnb/nsilverman-loader-fix

Cancel loading tasks when a new animation is set"
c40ebc08eba930befd42a1fbf18360c0d18c2f1f,"Merge pull request #9 from airbnb/nsilverman-fix-grid-sample

Sample: Fix grid files"
fadf397e78debc6d223ae633628acae30bd552be,Bump version to 0.9.13
629b7eb0dcc2a1b32e4dbc0292acdc364b4cae4a,"Added anchor point support to LottieViewAnimator

Also fixed a crash when a view animation had non-animated properties"
5554e6b770e9f72f5b900e2217dc8df40dc9d129,Renamed RootAnimatableLayer and RectShapeLayer
e371caa6b1d9df80372ea0e50d813e5c01d590e4,Removed RemapInterface
c1b7b1103da910297db4ca0046762d0b40ea2e0a,Added a TODO to Mask opacity
109efc6862254d225b3a2c9d7928aa7e5f0a8f33,"Moved scale from a static field into LottieComposition (#15)

If you had many of the same composition on screen, when LottieComposition
scaled for max width, it would affect other compositions and cause them
to render in the wrong place :("
d4a356b68b5e385918e11873d4e2423b4f9d1b49,Bump version to 0.9.14
57faa56c7f595c9e047851a98285966c997f3092,"Major refactor of observables and parenting (#18)

Removed Obervable completely in favor of animation listeners. Previously, a single observable was used in the model layer which prevented a Composition from being reused since the Observable would be reused too... This should allow Composition caching.

As part of the change, I redid how parenting works and removed the need for ParentLayer or ChildContainerLayers which should be a big win for simplicity.

Also created some better toString methods.

TODO: the end of LoopPlayOnce is broken. It will be fixed in a subsequent PR."
ccd5c32c713dcc6e5a504f4e4ab89fa9e24872df,Added 2 new gifs
5ba6694e70e62ff718e341ae8a86ea0d1ec7dbe2,Updated gifs
b0980cb8d1095cbfe7ac87cf990c0477426fb44e,Update README.md
7947331594b3aa6898c3c22d02c9b2f35c6b3ee6,Update README.md
fd78f70f0d786a2e25bfc56b2950c00cfe68f2df,Update README.md
803ff0daea908a5f2fcae05eafd5ee0539c5901d,Fixed AnimationFragment play button state
e686cb75ac099d87d974c1393f83b28f5ebee871,Reverted ShapeLayer#trimPath because it was broken
3e1a3e83eed5c0d6f992c3623a56f0c801614664,Add a preview to list items
9dc6a968092fdf99a7a8893afac1f76a15f7d128,Added composition caching back
c7e08452abf8c1ed34816672d0fe63743fc916b5,Removed a bunch of json
087324bcb799e7c5da9592026b2cface75fbc94f,Moved a bunch of lottie parsing into RootLayer
4446243a892440119e706b4516c513b69e351550,Renamed RootLayer to LottieDrawable
1e29b6ecacc5e0e68076fcc8aa8b230242832f44,Added a font demo
d1464d701114e788e9884ed50ad32c97481b264e,Improved the font demo
6c13b337ef662c145542728c8a3e5e3b9d019a68,Removed grid and cycle fragments
fff81d43021ed0991277371c4c5c4d7da97193a9,Catch OOM in AnimationFragment
9d32fff550929d7938fee68d8e7b0348f0e7aedc,"Updated FontFragment so that it's actually performance (#19)

Also updated screenshots"
99aaab50e1e45d65f3d376e9eb6f52ab09fe5bd7,Added local file fragment
ba48b8233d8ad3c6b427fa55d9150d25a67272a3,Added icons for demo rows
860db6a990a02304468b35b0df3f46e21c093fa1,Update README.md
3b56f1e698a65f08f6da5576e1be9f94c7cf22bd,Update README.md
7fbbc9a2cde82791fc14e4386bf5bac5aafefa7f,Update README.md
d55f9c33b3372084595add173f1e456aca53dc3d,Added some documentation and cleaned up LottieDrawable instantiation
d4665a8978a39658a76cb40c77ae40d5f63b444b,Removed animations from list fragment. The scrolling with masks caused too much memory churn
9cb9df64540d53d271fabea3f5119eb43d423ced,Fixed an invalidation bug
5616b6a1f4230f44d02985efe4d8599791079ae1,Update README.md
e6f9e65e537419ae3b9495f90761884b3241530a,Update README.md
16c5c88800e4f84c0a0386e5771f0863f815a204,Updated dependencies and added @RestrictTo annotation
6dcb159cab4a93ab23605adecf010ddfc5b4e65a,Enables shapes outside of a group
e4fca353601e8847612e1bfdc888bb7b301c13f5,Improved view animation
a9d3c0d70e710e2b9fd734bc06fe26a40eee3f82,Add layers that are in assets
77da89ca91647d721b846245723ed7ac50fd1097,Updated readme and descoped some methods
f1ac31fc8057c88a8254024293d6ff68b940b336,Added opacity to view animator
911def80d8ce7265e9ef353a8d58a872d9908001,Updated view animation
eef376a8168a342397bfa5fcddc8d3d0162f5892,Fixed trim paths
d5d66c2b7724d512f51bc258a80cbbc7e44bc8ae,Moved font handling from the activity to the view group
15b817f077c6f6cd07fd335331adba1e62db5dd5,Added an app intro fragment
156a0ce18b75eacf87b361d00831c0ff60e44e2b,Cleaned up AppIntroFragment
9faa26516779ca40915c9a015859a3b12a8f746a,Updated README
24e6be6557f5e96bfee92c2fdd1452186dfaf056,Fixed an issue that caused there to be a dot at the center of some paths
0a2a3201cfc637eb68146b3ca4bca084d5554e3c,Added some new json files
4ed7b81d1ae33c7c0591d0b120da68339af09103,Removed some unnecessary json
15abbcd5c95a6ae4f1f533e4501a381bcd5e7e05,Added a blinking cursor to the font fragment
80760c06f9ff6cd64ebd41a0a4872dac01be39e7,Fixed layer opacity only applying to background fill
7d148e8825f548a4d16848f44104c2f2ab7c0457,Disable animation fragment fps features when L.DBG is false
40d5ab3da9713e10c6095f4c2bb0ab104caa5fcc,Updated json
8af17ab35d3d577856a11c4c28d4b8e31ee5e75b,Improved the app intro activity
018425f68aafbf061bb189c3d00745503d07e073,Fixed a bug in inheriting layer alpha from parent layers
dd56b8b1e765614401adfd00e3ec7abfe8275334,Prepare sample app build.gradle for first upload
a4c38a7aba69d8e0d99d3647680b14c63f836397,Fixed a remaining bug in layer alpha
e3bc18689377505e66e3dcaa7f33784ae25a534f,Fix a bug that would rotate things the wrong way
0a22eccaed4b39bc0d39d1592bafcaea53c6754d,Fixed a broken keyframe animation test
35b37d027dd1a0545b1b82ab9bb1c83e4ee01586,Fixed a crash in the typography fragment
54c3c1990feefcf1ed5781c29e4556f276439728,Added local file and network functionality to the animation fragment
8ee92de6f5c949eaffccacc1eb97a983b2fa54be,Added an animated lottie logo to ListFragment. Needs an updated asset
484686e9711e3772ac9b1fcc1ddfd9f59a11a6e3,Made AnimationFragment much prettier and presentable
ab19ed474c6ed36ca8ee5f7a2c5c8b9c3dcc986d,Made AnimationFragment toolbar prettier
585632b5b096c256fd2d420cfeb58712e66f76a7,Updated launcher icon
e61c4e234c9a7ecd61477c8fdddf553159b2a5a7,Fixed a bug that caused path properties to not be reapplied when updating a path
02c8e96c284c101c6e3087f602d84f243760bb8e,Updated small logo and colors
f419444e3e775afd8cb239d83e65408b8c684a81,Allow loop to be turned back on
31dfed32ae99023717d4ff64205278ae0c099f2b,Updated to latest sample json files
0b41009365c59c0c6a096514bbb6c58ee9fe3691,Updated test files again
afede635489fa5c50bc5165896e92284af7a47c8,Added sample After Effects files
d14d2a62055b4322d050c2f1613bfcca68ae52c9,Bumped version and added changelog
1a96ad5276fa94adb0703731877dd89eb975ff03,Updated POM description and year
4105c51fa6409c86efdac7cbc8f124bb900ed066,Added POM developer email
6a05e93edcb9e9bc23871a75cedf4d31a24efa6d,Bump version to 1.0!
770a916b26c2bf82442dbd81ffe2caa9571b9da0,Don't fail the build on javadoc failures
eed0ec09b9a4ddf17ffeda2fe85f7d7ce7914a67,Revert build to 0.9.16
39b2c06983e15ecfab2655f6cfc276c3c08dd00c,Replaced Amelie font with Mobilo
c7d54091ade67fa9cb4b59c53d77687a9e36fd8f,Updated Walkthrough animation
4a327f66004ebb26768e8404c155ed01fe7f3842,Bump lottie to 1.0.0!
d3835f45e39677b6978ade40af5b515e85dd40d6,Updated Walkthrough and font
f0eb16906660caf5deae6d4ce278ea3ebbcbf328,Start and stop the list fragment animation in onStart and onStop
b90bc001336a64eb69b2fdf2a667fb7499ff387a,Restart the Lottie animation when returning to ListFragment
e65fb9c8541fb5dbe41c58be6dbe2f27fcb15dda,Updated gifs in readme
eef02b215ced7a9174db313d323d7ef9965b1be8,"Update README.md

Fixed gradle name"
5ecf34b51cba7c94e94c69114f617da010258b60,Updated readme
65e0c9c9f7214d0a03b2be6c5f5bc68b5694441d,Added react native link to readme
29b5f30f53837ed383468ebd01e91a5e540351fa,Update README.md
f2c608b5f5a073adf02656bdd46b7d0f9a177bed,Update README.md
554dc16ccf0dd8db64f9a289bb0efdbdd4f7738b,Update README.md
1a179c1532f7856ec7b389f73f5050b587447d16,Added supported After Effects features to readme
216209966dc76003075059a78d43c2085c90937d,Auto loop AnimationFragment
8713dc7fa52623dfbbfd13b5ed99f1ddc2f5ba9c,Bump sample app to 1.0.0!
8606ec75298d2c417bcdab21f6c276d3dabf026d,Add another gif to the readme
fb735be1a7f8b54ef070b2bb711eda9f33d5b601,Update README.md
5bba4c2b71cb2be873aa1cb07c597d145cc52e16,Update README.md
617299549ab91d7cf6213848938ea1f3d1866368,Update README.md
d2639d66eea7386870a788b3a58756c39bd48ea5,Update README.md
b82838c05b04a9c6a7da23f44fd8548020f4913d,Update README.md
28baa2150b6985f5301c704195d63d89aee879f5,Update README.md
ba361a6706857b63857f9e8a6eb699ada1eb2ecd,Update README.md
4297bcc192faea4ad8187d99cb50f687ff00c620,Update README.md
cb9ab00edb752fdf31bea222e8326b3476a7f6b8,"Miscellaneous gradle and project fixes (#20)

* Miscellaneous gradle and project fixes

* Moar tweaks"
f2f319bbaa26c65d806e49575f1df0658792e4e5,Remove play services lib from Travis to speed up builds (#22)
be0df2070cf5395cb976af186c6f05a4bec365a4,Fixed typo in readme (#24)
8adf9942ff06c90d10d11de6b0112dd47f391b66,Remove support lib and play services from Travis (#25)
637289d279ad2b57139bfa9ea624188c05312eda,"More project cleanup (#23)

* Fix deprecation warnings
* Make fields final where possible"
e4f92859f06912aa4b5a87e4b9465d465a487697,Fix small typo in README (#29)
665854ad1d2b9da09e75f7d3c4642c30712fb5a3,"updated assets folder location in readme. (#30)

the assets folder is located in app/src/main/ therefore res/assets will confuse some people."
0966d1bdeed35f55ed9456b3047555b36d8f490f,fix : close AppIntroActivity when DONE pressed (#32)
864198bb204e48b843eb27f28c1b4e53e6405231,Fix small typo.
d74aab32207d0de24a837ca34055e1814d53a0a0,"Bugfix - Render LottieAnimationView in edit mode (#42)

* Changes the init() method of the LottieAnimationView so the animation is only set if the view is not in edit mode (e.g. layout preview).

* Reverts code formatting."
2c37cafc950d1345f405e869cc496154facf4772,Prevent parent layers from overwriting child layer's alpha (#48)
9ebb33d12cb70bd466443c1a0578b166d1ed450f,Invalidate LottieDrawable with itself so that it can be verified (#49)
708722c395b8316aafc750591b3e9f5d54e6994c,"Add NativeScript and Xamarin the readme

#33 #44"
3369f326f8089005b9c84ffab7b9ea99bffa592b,Support rotation when it is set on the Z axis
a1b0d934dbc0c7c5fb826459f212f25f26393006,Bump Lottie to 1.0.1
509eb8f9e19e2084dbf5a0b0c0152e9667918ec6,Rearranged build.gradle
f4d1a35153a81408878b4f2b3779335094ca461e,Allow LottieSample to open files with a file:// or content:// scheme
ba648a60d225d940b5008c0d0711f9839c278d8a,Bump LottieSample to 1.0.1
cb0e48af9b405b0638cd5a4fbfae16f5d186cc00,Update README.md (#50)
d8ff4b979f2c34b7795d457f022e38a5e6b6003e,Reformatted code to follow Airbnb's styleguide (#52)
a148130b9f5264a3ad6d2a9602393ef25915be86,"Add a cast to the findViewById call in the readme.

Fixes #55"
4219149a11a92c9b3804a876c99ed6abffcd1a1f,Flatten all classes into single package (#54)
e5ee0d28a8031b7c83536935b6d7e477c79158e2,Update README.md
0bace80fc86963e19ad7b17c2bf9127e8b4a48c8,Added support for split dimension positions
35378bceb626cd05d37f40c7f11bea803cc1bde3,Fixes #51 : Locked screen orientation to portrait (#53)
49783f23f93515b40a0ba81a0540242ea27b2b4c,Added an issue template and pull request template
6e0574e2fd552ad4ccc110781b5b2489a95ba17b,Replaced checkboxes with bullets in issue and pull request templates
a1c707bb642fa1cda37b8b37a7d9cf9e4ad9ffb1,"Ignore characters with modifiers

Fixes #63"
820f78b6f3e95d2bc3a2b85f1319746b2f6513c9,Update README.md
bc81bb5119b575b08f9d20fa5678df17759c169d,"Adding Titanium module (#68)

Added a link to the Titanium Android module for Lottie"
f0add914409e3c2368dab72aa684b69a1b908e9c,"Update README.md (#76)

Fixed typo"
151a1e0379513281e5b1be0db6c23b2bfd42fb55,readme spelling (#67)
e7664e2c5e2b6d2588f36216248cb4a72d523dc2,"Allow AnimatableIntegerValue to parse decimal values

Fixes #72"
d0d8f422ccb384d3e9ad4d7813d37d26aac96447,"Fix animations to 1 if system animations are disabled

Fixes #79"
bf9b5cabd15f786760ebf41f1fbb2b01ec22293a,"Lower the minSdk to 14

NOTE: neither Google nor Genymotion has ICS emulators so this is untested
Fixes #64"
f4d7e2f5418a3a7497abb48af3e11f463df9d9fa,Updated readme
aa77c155c0babb6a67b02816cc46b0a8a15ef7c1,"Allow AnimatableIntegerValue to parse decimal values inside of an array

Fixes #34"
43278eea6e5a8e7f34f0c63509968c01b56e2364,"Initialize caches inline

Fixes #59"
335b06861dbcf23a8a1eb0ab821bf915f6b594db,Fixed looping in AnimationFragment
db354f5b4f8f5a2945967eafbe5a72650bd4d99c,"Allow trim paths that have looped multiple times

#80"
216d0d1fa2defbaa9aef790a84d8c46d6d016202,Added a test for TrimPathsFull
df285545f099256b7ed13eb33ecb76110a8eeb37,Bump Lottie to 1.0.2
3a4de7122d8baf1778e5a8e6e57c05588b219483,"Properly close paths (#83)

Fixes #43"
0ca8ad880ae565a4c67ea849b89f37b38de0cc21,"Expose reverseAnimation in LottieDrawable and LottieAnimationView

Fixes #93"
2a8a0226932e527d9b11b264086563feacff04e0,"Make LottieDrawable public again

Fixes #93"
ac8a49d43e89e3de90dd7ab6e8a66c9655e1e860,"Apply trim paths to shape fills

Fixes #85"
b8f8660385c51c377df244ac6fb492376120638e,Bump Lottie to 1.0.3
e4ad706e2a5107b329ceea3a4d7fa3ef9169eb42,"Throw if an animation uses polystars because it isn't supported yet

#98"
02fd8dda61054988779195646ec8928cbb84ef86,"Switched Rectangles to use a ShapeLayer (#104)

* This enables rectangles to leverage all benefits of shapes such as trim path"
958e27c7b5110c62d0658f31e0f9e97666a78ca6,"Let LottieDrawable handle progress and loading states

Fixes #103"
e6f37cef2dd7904a7113b4c0bccd50f77009dc04,Prevent a feedback loop between an animation and the seekbar in the sample app
d8de815b7bdeca1cf8a967916a210cd2c6b145b7,Close square paths
39c16bb18a6a7b9592f431ac189cbd86f7aa0a90,"Add support for variable speed (+/-)

#92"
44ff69a149b964ac1224e09d4d4d958903ba1c67,"Updated example gif

Fixes #93"
07430f15907a101bb9f498e4b90763ef711c8608,"Major refactor to store all animatable data in keyframes (#110)

Prior to this, all animatable data was stored in lists of values, key times, and interpolators. This cleans that up significantly and stores it all in a new Keyframe class. The new code is much more readable and maintainable."
c2618cea27b4a75fea8ebdfcaa40c6b21e989e2b,Animate colors through the gamma spectrum (#111)
b55666bb08344e512e758496a9ea46bf6ee236b1,"Only update shape paths once per draw

Previously, shape paths were updated every time a property changed.
Now, it will only trigger an update on the next draw call.

Also removed some dead code."
23b663add2ba25705ceda4a0072139004765123b,Cleaned up dead code and fixed inverted background border in AnimationFragment
a0925b0089761fdf399ba6aaefcf519263a3a3bc,Suppress lint warning in ShapeLayer#draw (#117)
e132624362bd818e6fa5d26708f178e82521ff64,"Add basic polystar support (#115)

Supports:
* Stars
* Points (and partial points)
* Inner Radius
* Outer Radius
* Position
* Rotation

Doesn't yet support:
* Polygons
* Roundedness

#98"
a5d57e69f312c54347ddbd44a668f148399a11fa,"Initial precomp support (#114)

This adds initial precomp support. It works for most relatively simple precomps including precomps with parent layers but doesn't yet support masks, mattes, or start delays.

#61"
fb5514ec7eaa90ac50f411c5eefd9211a3d0cf6e,Prevent Lottie from drawing a ~infinite number of paths with 0 dash patterns (#118)
dbad2cf93136a3456d72c33e19c7ddf83afe7e2a,"Added support for rounded polystars (#121)

The control points involves a magic number that works best for 3 points. More work will be required to get it right for all stars."
88ca527613280f46588e06fe5b9351c1825b0010,"Clip rectangle radii when it is set too large (#125)

This matches the After Effects behavior"
2b2876eff4a507d75fabf1ccabc17e3b351098f4,"Added support for roundedness on polygons (#124)

It's not 100% accurate but it's very close and shouldn't be noticeable for most cases."
c10f32690c4bee313829c4db4b08d0a848c38143,"Reduce memory overhead by eliminating some unboxing and iterator creation (#126)

More can be done but this is a good start."
e228bbb51fd7106ec4481dda602193efce9b266e,Fix parent view iteration in LayerView
a330e4676e02c58bd3c0a26e294924b4a02a15f8,"Created an AnimatableTransform (#127)

AnimatabeTransform encapsulates anchor point, position, scale, rotation, and opacity into a nicer interface

Also use opt* for parsing transforms which is more performant than get*. This only covers a small portion of the json parsing but it's a start #123."
c5c8a381ab3b11e231a2f935e9e8a813e3113fff,Add update listeners TransformKeyframeAnimations
edb7e5bdf247a71b96dcfda06bab167778b39f57,"Converted all json to use opt* instead of get* (#128)

* The parsing code is now cleaner.
* There is a slight performance improvement using opt* instead of get*. I did some tests and didn't see a significantly measurable improvement but for large files or on certain devices, it may make a difference."
cf517f4bb8a39185ef2398034d2ac6b760fc8525,"Significant improvement in matte and mask performance (#130)

This is a very significant milestone in masks and mattes.
* Reduces dropped frames by 25-60% for animations with masks or mattes from my testing.
* Reduces memory usage by up to 300% due to allocating 1 bitmap instead of 3+.
* Vastly simpler code to read. Layers can now handle their mask and matte bitmaps on their own. This fixed several issues with masked and matted precomps automatically.

I'm not sure what the deal with mask and matte screenshot tests are. They look fine on a device but are missing sections in the screenshot."
16d0fac5e14693abeede43eb1ac32072218aba42,"Make LottieDrawable constructor public

Fixes #93"
cc285e59d16db8d79ebd1f352f8bb0f5e5db84f4,Added support for precomps (#131)
16d37fc3b33dc4b575ae5f495b50a5299cb583cb,"Added support for alpha inverted masks

Fixes #102"
4bb193dd51fefc3873b6a514ae6dbab4965231fb,Prevent a crash when trying to load an image layer
aa2e33ac1b1d3e8b04938eb5dc66aa7c25d3570a,Fix porter duff mode of mask paint
126106c5e0768558ccf184518776ea85226c7cd7,Added support for subtract masks (#132)
a89288a3af3e205a3fa63616ee70431fbbaac762,"Allow matted layers to establish their parent layer inside of a precomp (#134)

#61"
719002332a520a6fa705729dc18ba72436cf587f,"Made a few getters on LottieComposition public

#93"
1927fc4d20cb68128bdc069e0ddf4336f23a2ac2,Add a null check around getCallback()
1c9921e5b2057f3df73ad3bd1e3b2d1b3562a192,"Add support for images (#136)

#71"
c5a6daf095c34700cc5b04aa1404f854354ff8bc,"Pull out LottieComposition factory methods into inner class (#137)

This is part of issue #3. Pulled static factory methods out of LottieComposition into a static inner class. Made all fields final and initialized them all in the constructor.
This will make it easier for follow up refactors where we'll modularize the parsing logic and make it pluggable.
Also upgraded the Espresso tests to JUnit 4 so it no longer uses the deprecated ActivityInstrumentationTestCase2"
127ee1456e1b8289c0d23443d17baf92029b321e,"Extract more factory classes (#139)

Another change for #3

Pretty mechanical and straightforward change. Extracted a bunch of constructors into more static inner factory classes with a newInstance method by convention.
Later on we can pull out all these factories into a separate module that provides the default json parsing implementation."
92cf6ed59c6f5329a74d6120dc129f6638c0feb0,Anti alias and filter image assets (#140)
67aac9bf74ada5e4d7825217e70a547e8d8f1c35,Added hasMasks and hasMatte to LottieDrawable and LottieAnimationView
c796f641db7a438f6b8091f3ad136d181df40ab3,Bump Lottie to 1.5.0 (#144)
ffbc236d459d0e170257b41904556b021a6a338b,"Use Thread Pool executor for AsyncTasks (#146)

Fixes #89"
9bec4ce41c32ca627fc0fce5ae59e1fb731f68ea,"Decouple more json parsing logic (#145)

This was a bit more involved as the JSON parsing in Keyframe and AnimatableValue classes is a lot more involved.

Part of #3"
7d25209609e8ca67104704f5e16a50b7aafc4938,"Cancellable is returned by public functions, but isn't accessible (#157)

* Cancellable is returned by public functions, but isn't accessible

* add cancel into exampl on README and fix fromJson example to use Factory"
46904fc462a4c3cf32a92460ed49506396769e9a,"Extract factories for Animatable classes (#152)

In this pass I've converted BaseAnimatableValue and its subclasses.
Created a AnimatableValueParser with the common logic to all subclasses.
This change caused a ""chicken and egg"" problem where the AnimatableValueParser calls into Keyframe.Factory.parseKeyframes, which needs the respective instance of BaseAnimatableValue. This caused a circular dependency issue. I've resolved by moving AnimatableValue#valueFromObject() into a separate interface called AnimatableValue.Factory which contains only that method.
I think almost all the relevant classes have been refactored by now.
Part of #3"
080f03c2744e2c767f80d5cebfdd374330a5dfb9,"Scale bitmaps for the screen density

Fixes #71"
99d578754d314414c5c816906ea73c645e55cb23,"Use an iterator to iterate through bitmaps

Fixes #148"
9303221dc33820f3197d96625eceafb3a572285e,"Allow setting a default CacheStrategy in xml

Fixes #156"
f55c7c348b8c837f20a5ea20e2f3c70ba1bf4933,"Prevent a crash when the json contains no assets

Fixes #147"
3ed9af9fdf5fabed69e167afabd8fa23a00afb04,Removed some tests
1e62ad33071c332d528fa31c99d31adde29eaed2,Added new test files and more test keyframes
aee20ceaf04a20561c731c6a71d32557e614a8b2,Only update lottie drawable if composition changes (#150)
55cc8e3ba3c6acd42f0316d412ed528790c5f600,"Remove MAX_SIZE restriction (#160)

Use large animations at your own risk.
Fixes #112"
34f13f5b0eba95cf8085b3f670be87a73314c3f8,Bump Lottie to 1.5.1
b5339e5237326c7412f805d3ebdce9aac8ef7e83,"Update README.md

Update minSdk in readme.

Fixes #163"
4cb01105adb7a7c9730b818bca7903aa91047126,Moved community contributions up into an other platforms section and added bodymoving as the web platform.
09f459c5eb3d5fb279e45dd3a87894eda7498bac,"Add tests for changing compositions (#164)

Adds a test for running one composition, and then setting a new composition on the same view and running that one.

Adds a second test for setting the same composition twice in a row on the same view and making sure it runs as expected the second time.

I refactored the robot a bit to reuse the test setup code."
13fec294f248fbb5cb34a46cfd03aa4296b32ac1,Prevent a crash when there is a shape with no points
29a482bdc757323078d0945d01bff49956631fda,Update a couple dependencies (#166)
a83c26a45269d4e72cdb854ddd65fa98d53b6581,"More masks and matte improvements (#169)

Uses multiple levels of offscreen buffers instead of a bitmap to further improve mask and matte performance. There are now no bitmaps created for masks or mattes! Performance is comparable but memory is greatly reduced.

Multiple masks were broken because they were applied sequentially rather than together. Fixes #161."
f9690d7dc371f021e56dc1b07f88407369df78ac,Make LottieDrawable#setComposition public
da271dba66c5e76a6b2481ec942545536006225c,Use the precomp size to save precomp layers
e50e4e6f5fb6b7de4d9a0e9316a8aebc1f25d822,Bump Lottie to 1.5.2
2f94d58f515e7e40d44a4e3b781bbddae84aff6e,"Save and restore around drawing the content of a matted or masked layer

Without this, the canvas transformations would apply to the mask
or matted layer."
6ad847f7b10f795b42a9c75cb8335f290a953d78,Add an attr for progress
5412ccfc5b600b94955ed72c7dd4f23b0200277d,Combine all progress images for a test into one image
fd91083c16bc26c229541e4d0ae79cc237a75412,"Apply layer alpha to images

Fixes #172"
eae74363b2165ee296463b83690121759dc1c4e0,"Separate API for playing/resuming an animation

Fixes #174"
e72ba6c417b211eefb4eef4466434f83b443352c,Fix a NewApi false lint error (#176)
c925806ae1887b4722291a610437c02fbec8e361,"Added the ability to scale animations (#175)

This can be leveraged to:
A) clean up the dp scale code
B) Improve performance for animations that are larger than the view they are being rendered in to"
8122a833305ccb772e1ec9f03c713d2fd609ab80,"Clear offscreen buffers before rendering to them

Fixes #171"
01031d26993c60557130fa9b1f2cc4181ed2b12e,Automatically scale compositions to the size of the canvas (#178)
b9dc5baa0ef22bf201f235de877e643dd72d3dc7,"Check for lottieDrawable in some ImageView methods

Fixes #159"
1b2d5e906d0b2ecf777dd458810270765bfcdd93,Ran tests (#179)
8439bdc370a9ca9a8d6f9e9272fd24774aacacfd,"Add an image asset delegate

This allows the user to provide their own bitmaps from wherever
they need to retrieve them from.
Fixes #177"
7577e732b21de1ecebb3372908a8942d096d6158,Add Google Play link on README
95febac0b58ad456fcb027ace2a1cec9d58d1899,Bump lottie to 1.5.3
f060c13dda43ae96c2385d5f4119e9b57eadcd01,Fix invalidateDrawable method behavior for non-Lottie images (#181)
7dc1ac85ad6808a38a34a5c0679e7f03f92c5b25,Updated gradle
53c14ab32322e4d2e6bb3f50b587b70ad2c79623,Renamed GroupLayerView ContentGroup
1b9de944874f75903334ed8038ba98583180fc14,DRY LayerView and ContentGroup
38da4bb8d1aa7a5819a761669f454a9eea7c974d,Moved away from drawables and began splitting layers into content
f1316fc359cc56083f63322d2dba91fadd210bbd,Renamed RectLayer to RectContent
70efea2e0ac59d22e5ebb4192757741453d8ea8e,"Ground up rendering engine refactor (#184)

This is a ground up refactor of the rendering engine.
At a high level:

Layers now map much more closely to the way they are structured in After Effects.
ShapeLayer, PrecompLayer, NullLayer, SolidLayer, and ImageLayer are now individual subclasses of BaseLayer.
Everything is now a drawing and or path content and has the same layer structure as appears in After Effects.
Drawing contents are fill and stroke not shape like they used to be. This allows features like fill type and merge paths.
Cumulative parent matrices are now sent all the way down to the shape instead of scaling the canvas. This allows a single transform to be done on the shape itself. It may also improve the ability to use hardware acceleration because shapes will be properly scaled up rather than being on a canvas that's scaled."
50ffc1aa1bba3fe61d07107c1d9e4d451d087a4c,Disable hardware acceleration
94306ec63197c538a10ccf11e45a6c997a94358f,Update README.md
49acb812c7c11e99dd49166eb2abcbd8f72a9d7c,"More work on merge paths (#188)

Not ready to be turned on yet."
2e5faf2726a374bb66c95a72f8d3dd4d829e5522,Added a bunch of animations from lottiefiles.com (#189)
f56030dc738ad69e4ec82caa6177e8d6da0a1b37,"Exposed some more methods on LottieDrawable

Fixes #180"
cf8463d2e1366bfc32c6b46965f0d48a5317af75,Added app version to AnimationFragment
75cbda6b0616bce1b263e46ece0f1f9ab5f1352f,Updated Octopus file name
aee7eb45a55e22ecde135b82c4a558b6badbd9bc,Code cleanup
df4c46fd17a83208ac3af10f625818b7ef0ba8c4,"Expose cancelAnimation on LottieDrawable

Fixes #180"
6f2ec2fc10a86dbe29486fe94ca7b3d250295399,Simplify animation listeners
c1ab74e5551bff856cdf98e37439421debaf83c4,Rename SimpleAnimationListener to AnimationListener
ad3b75cc82b7fd75c7d89c767b0d5c3ea1be43f5,Add a link to open lottiefiles from the main screen
be8c9f85ef693c70b36fe4e08b2ba8e11b3b3062,Properly validate paths once they have been created
0cb4f51f0c4776a432b0887fe16b7a0b660be00b,Added Spider Loader
7dc47206744326bea056518be46ea5a71fc70401,"Cancel and play animations in onDetachedFromWindow and onAttachedToWindow

Fixes #193"
413fe8c219fb89a9dcbb0f84f8bd080689d72825,"Allow experimental hardware acceleration with a disclaimer

#151"
78c65202e53b1e15e93273cce7bc5004db8601c6,"Initial support for linear gradients (#199)

#47"
a02e1caf3820d7a8919c9c6ce66629177d219c2b,"Cache gradients in rounded increments

#47"
2807b1124eb8732f3f92b3174adce9520664b2f0,"Add an option to enable merge paths with a disclaimer.

Fixes #16"
d4eaa83da9355f08005b37a1e52d07f8d78ca75a,Add I'm Thirsty from lottiefiles
0dcde28542ec12ff9a0bca6279ab207949ae23f8,Prepare 2.0.0-beta1 release (#190)
c89c05a1ceab0e34929d5b4795265e0f925c41ea,Update README.md
081833f41c8fdc8246a22c7b595d8e30f17cc7a2,Update README.md
f59deca516d5f05dd785c097c3a1893be58b0f3a,Bump support lib
f027871b112a63502ffabb446331bcae411ec6aa,"Improve the performance of mattes and masks 200-1000+%  (#201)

The largest performance bottleneck for mattes and masks was the saveLayer call that redirected rendering to an offscreen buffer.

Perviously, it would call saveLayer with the entire bounds of the layer. However, it now actually measures layer bounds and only saves that small region. All compositions with a mask or matte should see a very significant performance improvement. For animations with small masks or mattes on a large composition or many masks and mattes, the improvements could be even greater.

Some of my test animations went from 5 to 30+ fps.

Fixes #167"
ca592f28caf1f398fa2f81d76343b086e100fab9,Added more animations from lottiefiles
33e9dbe915e985019d04d3d67f4260d0b897e342,"Fix bitmap scaling when using hardware acceleration

#151"
b90164e41ae212148501655ba7d15fe4b31abb17,Added an option to toggle hardware acceleration and merge paths in the sample app
593a05a0baab4d9fbebd4a19f476a4a027a844a3,Disable debug mode
315f12e7076b7cca5bb662ce8107f8420d6dab81,Set the merge path menu open to be unchecked by default
d8f74e06607f5e889d97f65934961f3b23faa0c0,"Only resume animation when attached if attr/autoPlay was set

Fixes #202"
18a8f92e00be49229775b7a1739546ea6ae192d4,"Add support for radial gradients

Fixes #47"
245d06888d48aa1b9e3e9169404bf0f53114aa50,Added initial support for trim paths individually (#204)
d356aae5ccee034c41786781dabda472dc69f258,Support TrimPath when set before the stroke
aa3f8de4e12546b7c7c2e72f8c8726e1ae9965bd,Bump version to 2.0.0-beta2
64792cb5fa43d9132c8f0cbbfcabfc2c412a3389,Bumped versionCode on LottieSample
6e1afcb30e06d0c43c01f31dd7e644f69c785305,"Added support for gradient stroke (#205)

Fixes #195"
0f231f62f9caa6c5217cec8cd69dacdcfb302761,Added Permission from lottifiles
1408fe9ba63b2f40181a33ff6deff0004b75b3b6,"Assert LottieDrawable when recycling bitmaps (#209)

recycleBitmaps gets called from the super constructor of LottieAnimationView when a drawable is set from xml and causes a crash."
7c15f42bffa5f92556d72ad3610919c46697bad3,Only reset the drawable in setScale if lottieDrawable is the current drawable
39bd03029ab3809517a83ab5b04b532a625c5fdf,"chore: update README to indicate playAnimation (#212)

(suggestion for us lazy copy pasters) if animation file specified through xml it starts playing automatically, thus the true equivalent to setting this in java, would require `playAnimation`"
2a4903bf50c2d0714cfb20967bdb98474a08b813,"Ability to set color filter (#207)

This change allows you to set arbitrary color filters or an entire composition, an entire layer, or even a specific content.

Fixes #138"
b7bd9630384e427b4fc3b40a84a65de193ba63f7,"Use ""t"" instead of ""r"" for gradient type

#47"
bd8818896b0cecce41e0540b831e31466f4ecec2,"Only add the first path group if it is non-null

Fixes #210"
a2e67b6bf8764107d831f8f57e9dbfac3d0139b5,Bump version to 2.0.0-beta3
dbf70939aee7473cbcff3bd9474e34ac3838272f,add color filter documentation to README (#219)
aa7485c164a8579b953c02f6f79e5e81eccb0af5,Update README.md
065f7eb5ba863e8c722659486f1577937ced3cbd,"LottieDrawable: {play/reverse}Animation: Assert progress and update setSetTime properly (#228)

* Allow playAnimation() to mimic behavior of resumeAnimation(), if and only if, progress has occured.

Signed-off-by: Brandon McAnsh <brandon.mcansh@gmail.com>"
336486e203406295e019fc076c924d58d635b59d,"Offset trim path by length if the start equals the end

Fixes #232"
3d202b0190c7cd613ec8c8905a3e93a67db38b89,Update ISSUE_TEMPLATE.md
7814d04359a98dabf0bbf9424e2533b07c1e30d7,Update ISSUE_TEMPLATE.md
246b2565327a5bddd9d3f7f1afba31038abab70e,fix crash if either layer name or content name were null (#234)
a621fff578ebbe02f8c9222304f379e58ef6e9e6,"Fixed a bug with path animations on Jellybean

PointF didn't have an `equals(PointF other)` method until jb-mr2.
Prior to that, you had to use `equals(float x, float y)`. This
broke path animations which relied on that method.
This commit uses the backwards compatible `equals(float x, float y)`
method.

Fixes #227"
f5cb5ec0efccd71bc1f93328f35339499892d2e9,"Improved support for negative trim path offsets

#226"
86446d01ee53e173189c6b7aef2139652599092c,"Apply scale matrix to trim paths

#226"
de9dc175ecee39f4eba5a7462c1b8fdd7a0167ef,Added DESIGNER_NOTES.md
2ceeb20b895595e07dd00ef2e2c915ec0744094c,Added a few designer notes
57f8b733d34f74d0d508a24f02fbdabaf32eccc2,"Prevent hanging when a control point has an enormous value

Fixes #224"
ebb61868874554717b1fedd96cb34edf28105293,"Prevent a crash when receiving an unexpected gradient length

#236"
5e676df8d6e5da93f3b6d329682600b5d0d5d047,"Added a comment for why equals(float, float) is used in PathKeyframe"
4930bbc6ba9a385a58cb02aa9628b6e4ba22d8b4,"Bumped gradle, build tools, and supper lib versions

Also enabled Java8 features"
091bcdaba064604bfcba751530ec1e826170af60,Add `@Nullable` to ColorFilterData constructor
80424713e199c719fb2c6aa62e03bdf67ee64e7a,"Expose setScale on LottieAnimationView and LottieDrawable (#241)

Also show people the ideal scale as well as a slider to change it
in AnimationFragment.

Fixes #240"
6730b475d099865e5cf6b00d647e8c85340848cd,"Add support for opacity stops in gradients

Fixes #236"
edb54996c61722b154ee2930e81f3f95fb5dfab0,Prevent a crash when using certain layer types like Camera
fb40cab87e9b3072eb79db1c267ba777bc2ba2d4,"Return null instead of NullLayer for unsupported layers

This should also prevent strange crashes from unsupported layers."
a9f92cb0edf1ee0bd990153cd0045d848e089395,"Use PorterDuffColorFilter in example in README (#243)

The example now illustrates how the color can be changed without having to implement a ColorFilter (which is non trivial as native code is involved)"
51a4c7088c9b51daa3e27f14e944a4b4ddb6345a,adapted QR Scanner from Lottie Preview (#248)
fa2390e11ae8a82941ef06033b2da34529d53491,"Revert beta gradle

People were having issues building and installing. Bye lambdas for now :("
e711fcd2f16bc6c6c3654b54792fba702bea509e,Fix two minor bugs with stroke and trim path
2281a22aaef6ead001b87a13c0119075cfc27c96,"Fix an issue with rounded rectangles

Fixes #242"
c00b7ec4fe71a7258af9ae956a625a8f91c440f8,Decreased the sensitivity of the scale slider
780a3f600f43671af1991d2ef2798288873570d8,Fixed an issue with trim paths in which the start is just after the end
63252b2b9085b02275d8c1ee6adc62abf5663c90,Bumped version to 2.0.0-beta4
e618f37ac48b3d64b0302165a0e8417e7512d569,"Create a path when either control point is non-zero

Fixes #251"
2bbbae2028aa94c472483099db07e44005837266,"Use the proper PathGroup when calculating stroke bounds

Fixes #252"
78b118a519f5f0e37a17c6494e3abfe9147402f8,"Fix sample app on Android below Lollipop (#258)

It was crashing for two reasons:

Some TextViews were using vector drawables as compound drawables
Fixed by getting the drawables with AppCompatDrawableManager and
setting them programmatically

Some vector drawables are referencing other vector drawables
(example: ic_invert references ic_invert_black)
Fixed by calling AppCompatDelegate.setCompatVectorFromResourcesEnabled(true)"
384d0065d9960a0788d313193a934815b03cb848,"Fix trim paths from 0 -> 1 when there is an offset

Fixes #232"
f890dc2a1dfebce5819c13bb2299548163964574,"Disable hardawre layer when not animating

Fixes #255"
903a192a90640058ac287b5aaa1a2c6dce3fd84b,Attempt to fix traivs build
b4bff5ba1f226a25dbc32c1c8de6711a6f7f3cc1,Add styleable attribute for whole animation color filter
6658a95974f494aed851efbe31e188ff7a996c69,Add XML color filter documentation to README
452de51c5eabedbf70ef0a01affb44b9b72e08a7,Add tests for XML color filter
640f8ee856782ac00b4a03879e89ea6c00e6ed17,"Make Cancellable interface visible

This is a regression since https://github.com/airbnb/lottie-android/pull/157
Cancellable is returned  from the composition factory but is inaccessible."
938b3f6af17830146097c96aab56f662c0068240,"Save imageAssetsFolder in SavedState

Fixes #285"
404653c47efa5effdbbc75154048aeaf06aa7658,"Expose LottieComposition#fromFileSync

Fixes #282"
abe58452ec6ff24f869f02fdd9a63d4aa65a1209,"Use a software layer instead of no layer

#260"
25a89d0dc98e43021c415b1a09f47c5d2221c03a,"Add a small value to zero value control points to avoid artifacting

#275"
1856292d65cfe22bf485cf4facb266bb0c693efb,Added Fill Rule to supported features
25b80ba46d9c6b7f68e0e21d1b5da7691d3fd5ff,"Prevent invalid control points when creating a keyframe

Fixes #288"
c1fdb47a3d2b3c6cf73f934ae23ac74e69584ce7,Clean up keyframe control point clamping
5d0a44c746eb6a59d42e36e2f35b0903f5943619,"Apply transformation matrices to gradient fills

Fixes #273
Fixes #47"
2732c7651df63ffbdf812d9546f459082505a5f2,"Clip precomps to their bounds

#281"
630acb3e0f3026ceaebf6b02168c11d36d8cd268,"Prevent a crash when empty array is demarshalled as null from React Native

Fixes #279"
75a30a0000b0069c13b82d842c24df5e29f6b6e5,"Prevent animations with mattes from scaling larger than the canvas

Doing so causes the content to get clipped since the offscreen
buffer the matte renders on is too small."
7a6d138aa5db03fe67b769619199a0224ba30a87,Take scale into account when clamping keyframe values
83955b7842feda5183511acc0928b6f2652bbe53,"Use a safer way of avoiding artifacts

#275"
03f4dc1abde23a006dd620344d72258d1959cb75,"Another attempt to minimize but not entirely eliminate artifacting

#275"
12840d078162dad4b4ed7fcba51841a272f83680,Bump version to 2.0.0-rc1
23e85298f764cf7d3cb397aac6c70b78ac91253e,"fix NullPointerException

If a null is returned in `ImageAssetDelegate.fetchBitmap()`,` recycleBitmaps()`  method Throws a NullPointerException"
0f10be00f5795943d4b9fabd620ad45f87997e34,return null in bitmapForId then just don't put it in the map
c127e40e75b42143f517d85233b30274acb9ba10,Fix typos in documentation
70658113e53111888997f77789e15e52a6a9a8d3,#305 Set scale with xml; Retain composition scale previously set.
f61d85d9fb1938ec13311573487f85c83444e1bf,Format code
7f4df2d50f923c58f5f18491d6bcbd35b5151d04,Updated gradle
661b460933bb6d297b6b08f4eb0c55d9197b816b,Added a full screen example
9cb48b0972dd141e9610418fb2d7cf32fa176e2a,"Allow pasting json in the sample app

Fixes #292"
7b46c3430e1a0ea43bf3bbaa3659bfb0e255e4e8,Updated dependencies
ee71393acf578cf040a69c30743415a30d0fd223,Remove restricted vector drawable compat API
2ca720a16a1345b3b65079e285dcc1ee152c0545,Be more lenient when getCallback() is not set
012cbc5b1405b8555b93aa95c85c33d9d5b4d3d3,Default the scale to 1
33c6370ad9891efdafe591c502f3bd41be8bee9c,Removed a sample
14bb09fd9b39c31cae5418328ff14d6f8915f913,"Set play time after calling start() rather than before

Fixes #310"
db3a251b527e4a830a5baa5eb2ecf0992841a493,"Load cache attribute before animation so the cache strategy gets set

Fixes #296"
604bd25288743f6b6c9a45a1c78172717d61c104,"Allow you to update the Bitmap asset dynamically

Fixes #294"
17104285671cc6a171f751ea8328a8ead66a525e,"Ignore update listeners for StaticKeyframeAnimation

This reduces update listener calls by ~10x depending on how many
non-animated properties there are.
Fixes #283"
3da9067eda846aa2ca0a359328bd683b8795ef73,Fail in logcat instead of throwing an exception
27123744c81f91c2ff4bddf8d4eafbe9dab6a92b,Updated version to v2.0.0-rc2
b8e0191c5ff949967f458b157731b962db4fae6e,Warn when there are expressions in the composition
f45a9dc1ade6925e80771fa4f027ad9a3a42ef85,Prevent multiplying the gradient hash by 0
a84dbe5b3e414963cb226e070e51b6ade8ee8858,"Fix a trim path bug

Fixes #324"
c1fdae0b7a962ff5e0b936274ef5559eef47f9e7,Remove junit asserts
90d90a4443dedf2bea13e875381f570ca162601c,Update build tools version
16a55f8c0567789577e661aef56be73095a2dce1,Added more animations from lottiefiles
2541683e8a0a416c54fdccbf5f3f775d475cd73d,Bumped version to 2.0.0!
9155e20a0f8cda60f7860fa5c66c66b10a31886b,Detect and add warnings to the animation viewer
f522d6dcb351462b310a36b73eb22ba935d7d76b,Static Shortcuts for list fragment options
b02e45856dcdb2ae0cee8daf288e1329dd1e43bb,Created vector assets for shortcut icons
d5f141dbbe6c7e1ab90e7ca94bb0b38af561fec5,Only update an animation when the animation value actually changes
7afc1185b2844f91edb70efe1ee61fd26ce5f54c,Basic text works
b9f3d85d2e382540428ab8265d893532987978b8,Color works
6afe27ddc799c60ee08590f67325357de3833c3d,Properly space letters when scaling
6626a9a88fa749035ff5964bb3196bc7b087732f,Added support for static font colors
77dc37cc24c130934e67058f26474a6024286cae,Added support for animatable tracking
8bbb062f433f260fc5e41c3851b43e1a8feab7dd,Bug fixes
a627b63413272a2d739d027e6729fc47f499b97c,Cleanup
e0db63bf05e8d109076b9f086e11291852cd6a6f,Access fonts through the actual exported fonts list
41e525985514b77133f0d271134683f32d34f97b,Added a test
eadef3b2d77fe3fbd08286b4eaa938f26502f890,Lower visibility of Font getters
7bc0b5ec0c6c23eec9970d09b20acfdd7b853098,Upgrade to gradle 4 (#351)
ecff6a1e707aeaa4c480451251459877c2615fc2,Added travis to readme
8d0fd88ff945008747c7d9d7f5eb968f687a6692,Rename ImageAssetBitmapManager to ImageAssetManager
1232d1b5af3923cf6d4e64b8ab7f309a627c9311,"Fix full screen animation

Fixes #354"
85cd652521feaf848f4725069c480ab09cff413c,"Add support for rendering fonts and dynamic text (#353)

This support builds on text glyph support by supporting rendering custom fonts as well as custom text through a text delegate. This enables Lottie to be used with translations as well as interactive animations.

All text operations such as fills, strokes, tracking, etc are supported by this.

Fixes #173 
Fixes #349 
Fixes #350 
#352"
0f2539cf5ca19d1dc578388d39871ca1f846e442,Added tons of method traces
0e4b4d48933897322fe15aa6eb25e5b46e5664f1,Default layer name to root
5cf67028e882659af366b4504096d77427a879a8,Adds a performance tracker to track render times per layer
9d3e45b7e4230b1483cf26cde8c7e0d42215ce23,"Fix unbalanced trace endSection call

Fixes #357"
61f609c6e382f7968c179ccd335eafdc09dc59a8,"Parse framerate as a double to fix animation duration (#358)

Fixes #323"
8a4a3004b046198bd3b58a4a19d0a9c83f3b6c07,"Reenable mask opacity

Fixes #359"
8d55bc15477c26a0e07cf9a1b4850b8ee1734bc2,Removed animated graph because it has expressions
331cb02a3ce2a7eb3d5949b8804fe107c97990d8,"Add support for time remapping (#360)

Fixes #330"
811993f56df83b3b845958e3c70e65e3308cec5b,"Added a ContentModel interface (#361)

This removes the needs for Object type generics and instanceof checks"
9e8e9bb7fc048edec4f871da3530e69d3e394e56,Created GreedyContents to clean up merge path handling (#362)
810ac8e72da5498c9024f67ae44d6a115295fad9,"Added support for repeaters (#364)

Fixes #194"
5dc7d6ce0533c01aad3599bb13e598ab5f9a0c16,Fixed an issue when tracing beyond the max trace depth
533fa91a6979df61df8d9b09c070b405c09672ae,Updated hello world animation
8228afbbc8de2bc46cbc8c94e9bab88a262b57f7,"Added a warning for bodmovin < 4.5.0

This is necessary because the closed property on shapes was in a
different place"
90e21ac3cc38f9c8157595ca4daaa44ce2f80516,Set the minimum version for text to 4.8.0
e61383405cdc62991330584ac50da89482425267,Updated type tests
df5b4b813ec23e79b2b6184b300709f7436b7a1b,Enabled Kotlin support in the sample app
629fbaba72941e40f4f0bdcc3196744cc085d631,Converted MainActivity and ListFragment to Kotlin
4b8ddb3cacee4c1a95615d7d3a51cdbb1d4652ac,Converted AnimationFragment to Kotlin
084d0ce8d13cc8255c73c7621a629abac672fb26,Converted AppIntroActivity to Kotlin
f1a8bc13410c38821685f0ee79ec2b5d4969e7a3,Converted ChooseAssetDialogFragment to Kotlin
8a52aa4d782293f92ee0ee630943fa3329db6d49,Deleted ChooseUrlDialogFragment
4a5393436678f44d4d20040feb4006d14e3909a2,Converted FullScreenActivity and QrScanActivity to Kotlin
ec1f948fe9cd84dc86c73179c69f715d13b9d00c,Converted TypographyDemoActivity and WarningsDialogFragment to Kotlin
9cb7446c0fc9108c829436e9b3f5303ccd0c5d67,Moved src to kotlin/
5fc8c5a2be317135a030cc9c3af42ec05be12d69,"Simplified trace markers

No need to record the layer name for every marker"
22adbca34094d90868dc4c375914bbfa22bf1511,Added more systrace markers
f95b9d4bcf4c2b1b1c9e3b6ce2ef07ad11f2b57b,Added a real time graph of render times
018e8498162ce9a05003d3412b753f6ba0a0ec92,"Factor composition start and end frames (work area) into progress calculation (#366)

#257"
34a433b5ad5bc358c1c2fa93c5e7457e79017d57,Added support for time stretch
43aa2da7ba65eb76a8007a8aa3cdfab278b93341,Saved TimeStretch aep
3e53a74ab69c91e72693725ae24d5f0d9bb8955c,Updated changelog for 2.1
52d8da42119b4d630eac55876fce30d3ce5453a2,Fix small typeface error when drawing texts (#372)
b47c196d978ef38b39d7c345b93f8e8c3b08592b,Reset paint alpha after drawing mask
e30c8f5e9a3eb91bde2aeb96cff6a6bb87832c16,v2.1.0
d73039f6ab1491b86b00de3561922919ad1ef8bb,Fix a crash in the sample app and lint
6eddb049792a67c2466cd2e15b0a3cf1d9657c5f,v2.1.1 sample app
d82c9258c6a7579b8f2bad070aace8e3ae4d6f3c,Added City animation
3ecbb5c89ed5ba05bef9a0fbcf17be353249d558,Updated city animation
5e069e8d158673257a7585571d577604a8aa305c,"Don't trim a path when length < 1

Path lengths get casted to integers. Lengths < 1 will round to 0
and causes a DivideByZero exception"
298081109b4ba4c133b8703a602c9fb47e20f8e6,"Fall back to gradient array length when p is missing

Fixes #309"
a8f3896ca5fc5fb42ad098af2f399f0945c8ec69,"Cache PathInterpolators

PathInterpolator builds an array of quantized interpolator values
upon initialization. This requires many float arrays of ~25
elements to be created. Reusing them with a weak ref static cache
will have significant memory savings in animations that use the
same interpolator many times.

#385"
cbd88e93ac83c5b6515c94c7984893a9e0cfec77,"Fix hashCode calculation

Fixes #394"
895f75af226ae6eb459d58a6146e97f2c7f47c0e,Updated Kotlin
4e3412c52a292f53df96eac0b89ec61a64c5a9aa,"Update hardware layer when setComposition is set

When the `LottieDrawable` composition is set, it may autoplay the
animation so we need to update the layer type.
Fixes #383"
fcdac57b1918fb500d10f21bba7a02b8a8b597a1,"Allow animations with masks and mattes to scale up

Previously, animations were given a max scale due to saveLayer,
which is used for mattes and masks, only saving the canvas size.
This is problematic when the scale makes the animations larger
than the view because the masks and mattes get clipped. This gets
around that by scaling up the animation up until the size of the
view then scaling the canvas with the remaining scale.

#395 #301 #161 #326 #315
Fixes #404"
d5bef71fecfbd470d434c930172f8ce3877d952e,Added missing override annotations. (#408)
54c2775bf2c8b67c8d24840424c13968255caea7,"Make ref strong before checking it (#406)

Potentially unsafe WeakReference handling"
d0797f4d652941ffdb8ea70fefd1f1e5e6403312,Remove experimental from hardware acceleration API
edf490bd6b1c8163ea7fc2acccf32e4c43d5dca0,Bumped version to 2.1.2
2e3251c483be50402ac791a9c653c2fbbb1ecb0c,Updated README to point at new docs site
50dcbe3fca8230c2450827c906bc68faba4cb4ec,Update README.md
a78062e26d6fe5b76fedd1c811adff080eb544d4,Bump a couple deps + minor cleanup (#430)
62d3d1b1273f15edbf5ba343e092715c0319866a,Respect parent alpha for solid layers (#420)
1a0e0d7f214a8b40bf02bb99de4793a7d007876b,Make Weak the default cache strategy
6c30d483ca23434f8eae23dc66a9a87f3b277edc,"Cancel loader tasks when drawable, bitmaps, or resources are set

Fixes #405"
004c7081ee0ab57946511ea15836af39de14b2ad,Created lazy composition tasks in LottieDrawable
2f2cbb8ddefac640968c7f3ee53896911f7c3b12,"Added support for setting the start/end frame/progress manually (#433)

Fixes #415"
1c1e26aec4ec4c98caf6282a4004e93ddacc461a,"Only dereference interpolator cache WeakReference once

Fixes #432"
9f8e004421437fdd7f43a226b2d2745e5b3e312d,Bumped version to 2.2.0
723335377cc70cc3a7f9c9ec5bf6890e07695b0f,Updated Kotlin
151fcf9d067d554281d676d16b67c9ed0d7bee1c,"Don't cancel animations animations are disabled.

Canceling wasn't necessary and actually caused a crash on Jelly Bean.

Fixes #382"
0e9ee819cbc9e9831d61882db5057cbbba4b5083,Upgraded build tools to 26
cca9b388b075776bb43412946ccbda2b63314bc6,Throw if setColorFilter is used instead of addColorFilter.
2df1c2bac1cb886dce38d64e0b3a80d603e8dc51,Organized classes into packages with @RestrictTo
cf92c21e8bb3b8e74c6863f17d6de8fbffdf3977,"Added a second generic type to AnimatableValue

This is helpful for dynamically updated position"
1d0d8f164caed6699d985193503434f703c65c24,"Uncomment systemAnimationsAreDisabled.

This was accidentally commented in 151fcf9d067d554281d676d16b67c9ed0d7bee1c"
c7f4abb89fb10ec84085aa9760d52dc23225c1dd,"Catch an ArrayIndexOutOfBoundsException

Fixes #452"
51381075077d0d0914b4b668e12a498fed4e433c,"Prevent a ConcurrentModificationException

Fixes #449"
8e5887a5320946a262a036d46bb0d736436035a1,"Prevent a crash for letters that have no shapes

Fixes #445"
aa8aec8077e8055ff2174091ab6b0ea8e63b4817,"Refactoried the way progress is handled in LottieDrawable and LottieValueAnimator

Previously, progress was held in both the drawable and animator. This made things
really confusing when min and max progresses were set both because they are in both
places and because of the difference between animated fraction and animated value.
This refactors progress to be wholly owned by the animator.
Fixes #448"
933f8bfe86857e33365200ce6f0fc3b7c0517f8c,"Apply transform opacity to text

Fixes #453"
4eeb73ab4664c80da269ac6ddbda7e15ac8ac42c,Added missing import
91103eb241ba46a8534c7ce41bec312131af584a,Fixed two bugs with text alpha and stroke
739fd337842e07421c2d11754940a71a16f519c2,Ran screenshot tests
0e39eafb374e98ce499fde613d5c604e177272a9,Force update the animator when a composition is set
cbe120783b3b2c25d066cc9195e755e955093978,v2.2.1
e8b16f739e3df30290bc1c2dcfb45ea157d6e960,Bumped :lottie to 2.2.1
1c8d25a1cf1741d781bef4600028dad93c1761a8,Fix a StackOverflowError when system animations are disabled
885c781dd1b0b8a69ae143b2b5300d0e53bca0f4,Fixed a crash in LottieSample for pre-Lollipop devices
509da1bca7f5b363574279c9f0633c24b4ae5faa,Moved more progress logic into LottieValueAnimator
f1bdd94704018792be0e3e10841ad20cbbb06b2a,Suppress a warning and use edges of trim view
1be535fd142bfae82280845ef9cc361b8b5a99f3,v2.2.2
6669e4d41b7c3e69c7597fb7be2c5e05e9b03df7,Fix a NPE in Keyframe.Factory
930bc6fe9d39a5cf53e4ee2836441ab15b538365,v2.2.3
9e37d755c5ed95e522c5cd8d429a0e7c7c7689ad,Fixed changelog formatting
5c29c96cd7fd11adc4763c244c592158ee876dd4,"Fix build (#470)

Also bumped some versions and fixed some other lint warnings."
b226b33398d4b3eeea3b4ca4695e0905b41ec818,"Lots of scaling improvements (#461)

Lottie should now respect scaling and scale types much better. Things like centerInside and centerCrop will now work as expected. The only limitation is that if you set the scale to larger than the canvas then it will only scale up to the maximum size for the current scale type (centerInside/centerCrop). If you change the canvas scaling from extraScale * extraScale then it will scale larger but it'll also end up scaling when you have a fixed width which you don't actually want. For now, I'm optimizing for the case where you want the animation to fit the view."
88d776e81b17db586a5f14643383e8b3246b9699,"Use save and restore instead of manually restoring clipRect

Views/drawables/canvases are not supposed to be able to expand their
clip rect so that views can properly clip their children.
See these docs for more info: https://developer.android.com/reference/android/graphics/Canvas.html#clipRect(android.graphics.RectF, android.graphics.Region.Op)

We were relying on undesired behavior before to restore the clip
rect which seemed to work fine for software accelerated canvases
but not hardware accelerated ones. Swiching to save/restore is not
only more accurate but fixes clipping issues.
Fixes #457"
5af69e7f81877a465d10718450c3dfa65891cdab,"Synchronize path interpolator cache

Fixes #452"
0215e37850eadc2aa1b43e6b132b3306483d226f,v2.2.4
b9f4ab81cf1364eb6ad761b3ef21788afeca9365,Bump versionCode
9c4f7e36aff0d9d6c1fbe4f77cd6b5e486daa82d,"Call end() when starting animation with system animations disabled

Previously, if system animations were disabled, we would jump
to the end of an animation when calling start. However, end()
was never called so no animation listeners were updated."
8c122422f1040e9ba8c002a56b79f096ed9b66bf,v2.2.5
3867cdd91a18186fd12a3f96ec46a1d7849b0548,"Various cleans (#498)

* Remove a useless this prefix

* Do not set the animationName twice

The assignation is already done at the beginning of the method and the argument animationName is final and hence can’t change.

* Fix tiny code style issues"
610487c3d44791a0efa3d678c0fd68b1182e617f,"Significant animator overhaul (#496)

This is the second major LottieValueAnimator overhaul. The first one wound up being overly complex and didn't work great. This cleans up the logic and adds a bunch of unit tests.

This is a breaking change because it removes some confusing APIs such as resumeReverseAnimation. You now just set a negative speed and call resumeAnimation

Fixes #492
Fixes #483"
c694b7ef242e2ed6ace7b830edbbea03c2c98932,"Set progress to minValue not 0 when setting a new composition

Fixes #492"
f48ea2ca72c95a52eda448f1ce28ed99b845a99d,"Introduce a new lottie_rawRes XML attribute on LottieAnimationView (#499)

The new API follows the “file from assets” API:
  - New setAnimation(int) and setAnimation(int, CacheStrategy) methods
  - If both lottie_fileName & lottie_rawRes are set, an Exception is thrown"
de09f985ecdd61917933a9cc08c89fc90e18182b,Improved warning for layer effects
823d76961cf458d58df74c1e21286e7f63840ca3,Dynamically set AnimationFragment version from BuildConfig
5477874abab82c49518a5163812b310ed48af647,"Add setFrame and getFrame APIs

Fixes #506"
b8246a9917b6b14a20894809d67c504b836b09fd,"Reverse the iteration direction for keyframe finding

Bodymovin only specifies start time for a frame. The end time of
the previous frame cam be implied to be immediately before that.
During keyframe creation, we set the end frame of a keyframe to
the start frame of the next one. However, that means that if we
iterate forward to find a keyframe, if you are exactly at the
beginning of a keyframe, it will be detected at the end of a keyframe
rather than the beginning of the next one.

This also fixes an end frame calculate which was one too short
for layers with in out animations.

#506"
8c67322a59bdd8f3f27a8510498930f09a344aba,"Use ints for start and end frames

Bodymovin has some floating point errors in its json that cause
frames such as `51` to appear as `51.0000020772726` which means
that if you set the frame to 51, you'll get the previous keyframe.

#506"
ae4699f9f56f0d5624507d3e92e3bb4b45917a20,v2.3.0-SNAPSHOT
27b2dba23b6bde9936ce419c52e6ddcfecd098e5,"Add support for ellipse shape direction (#502)

Previously, ellipses were drawn forwards regardless of the specified direction in after effects.

Fixes #500"
9ca25a6f29a7d6e269871935fc0966d6c5913cdd,"Fix time stretch double calculating for matte layers (#510)

Fixes #478"
77066b6618e884e8d3287a1000544ddc75144f51,Update README.md
7da8247e67954a909c6251cb0be39b662cb8763c,"Expose image relative directory name (#508)

Useful with custom image asset delegate"
f1ec4cbc404abef88496587e98324ab134a5419f,"Warn instead of crash if setColorFilter is used.

This causes reusing LottieAnimationView with non-Lottie drawables
to crash pre-Lollipop

Fixes #477"
01c315f4661d192a6a0ea9e65f0ff504a99d9a4e,"Revert ""Use ints for start and end frames""

This reverts commit 8c67322a59bdd8f3f27a8510498930f09a344aba."
fd225f687ac93884d07265cf645de6e4efd3cbe7,Ran tests
2072a710582a0ab0b6360ac37aafca76a1c0ee61,v2.3.0
3b779b89691b26a142f0c909134495bf004a2cde,Bump one more version
e41aac2c89776e3f2acbc1b269869dd44ea3ef34,Bump LottieSample versionCode
cc4107c4e63d90e934c384caa9ad28c5f22df9c6,v2.3.1-SNAPSHOT
0d3b4124053516197e3080a0cca2e161ecb8b966,Expose LottieComposition#getImages
cd317d41e484a862c890822fb3b001a299cf515a,"Set min and max values at the same time

If you set min or max first, it could fail due to max < min or
vice versa.

Fixes #530"
759dbcc78e185bf66322b0a9c85d03e87712e6cb,improved input stream reading (#532)
7b5e052ca3964dccad1aabe7c147f9191122aa0f,"Fix copyright ownership

Fixes #527"
e8dedbda434b73c2b59a5c1fc872fc70cd250d9f,"Improve support for subtract masks

Fixes #421"
84fde6bf296f06c3c296fcad5618b60bc6dec3df,Add support for text baseline
15abed0f015ef1479d33e06c194e0aa66d949728,"Fix precomps that are time stretched and longer than their parent

It is possible to create an composition and then precomp it into a
shorter composition but time stretch it down to fit the new shorter
duration. In this case, at the end of the animation, the progress
for the precomped layer will be > 1 because its frames extend
past the end of the original composition. This fixes a keyframe
from clipping at 1 to clipping at its actual end duration which
may be > 1."
0c1fa5a92295546874011392a48caace0fb07f5b,"Don't apply time stretch to a layer transform

Fixes #548"
8d14938757b0a13bbbea9e9cef86ef5cae69ac46,Added a version bump script
491273be37f31a6bfdb810b14472897e3776c5da,v2.3.1
f495e6706f9490ad1827be728c43ebc0197efc1e,Updated changelog
9bdfcb146c8ad70a152f5f7a68a9c4d0168e9ad6,v2.3.2-SNAPSHOT
fda3cb081a5cf4c5b11aee56b727eaa02566c05d,"Add setRepeatMode API (#525)


This PR allows you to define what an animation should do when it reaches the end. This setting is applied only when the loop is enabled.

The supported values are:
LottieDrawable.RESTART - The animation restarts from the beginning.
LottieDrawable.REVERSE - The animation plays backward (and then forward again).
The default behavior is to restart the animation.

You can use the new lottie_repeatMode XML attribute to set this value too"
69ab3f150aee12b699b55a558a5a37fde5ddf3e3,"[WIP] Run instrumentation tests on CI (#549)

This change runs happo.io visual diffs on Lottie automatically on push/pr. It will also post the results back to the PR."
3c9e39175c0d9a1d8ab0031fafbc20dabf66db8c,Add lottiefiles animations to happo tests (#560)
40eace73c1102477c4bb7b86a5e9843c230ebf11,"Use a different method for splitting the version string

I think some devices have a broken regex function that causes
split to fail on the current regex. This version may work better.
Fixes #559"
814f3b388555816ad3c0df63d92ab1a2c3f5036f,"Clamp alpha between 0 and 255 (#561)

Fixes #558"
6b6aa9e81002edf6418830b440daea59936e491c,Add logging for #524
6f8bdd27d686205646032686e6167d9ddcf90cbf,Upgrade to android gradle plugin 3
31fd71ba309de377cfaa1606cd6257a37d25549d,Upgrade butterknife
155c796077fef60b62be35f7795e55c5f9055cc1,Upgrade robolectric
85bc2f3b5b67fbb1b2115514391ffba8fe51ced8,Upgrade Kotlin
263508e9fb54074f2ebf5ad3a3d4d9007ed5fd04,Bump build tools on travis
fa0b55e97d163b4b42eaf8cf711c3c0230e2b5a1,Update travis apk location
780e630fde2606f15a7da7564c5d0b25f700c62d,Clean up LottieSample build.gradle
7425710169a89391139c542e3e1f3b97732b1892,Cache google cloud sdk on travis
623cf7d2fad5a6d47e3003291bade2edefd43e15,Use travis lts
e8d47093e82547aca59d1fe3be608f710605ff8f,Fix the build (#563)
7efb9f16bc24dd588d50dfe323184c837e89ef6a,"Create a KeyPath API in preparation for dynamic values (#562)

See KeyPath docs for more info.

This isn't functional yet but puts the foundation in place for dynamic properties."
d8fcf0ab1fca5aff58c797d6e85917d21a2f5cc1,"Dynamic properties (#564)

This PR adds the ability to dynamically change properties at runtime.
The key parts are targeting content(s) with a KeyPath and then updating their value either with a LottieStaticValueCallback for a single fire and forget value or a LottieValueCallback which will be called with the current animation value information every time the animation is rendered. See the docs for relevant classes for more info."
242b4413d71c6e579ae3470105fa57cee0840453,Fix lint warnings (#565)
ceaab4a21374f02cfcbdeb79ddd7aa988f2ae97a,"[Breaking] Added support for ColorFilter value callbacks (#566)

This is a breaking change. All previous ColorFilter APIs have been removed and should now migrate to use the new API.

To migrate:
layer + content -> `new KeyPath(layerName, ""**"", contentName);`
layer -> `new KeyPath(layerName, ""**"");`
everything -> `new KeyPath(""**"");`

It will be slightly more efficient to use a fully qualified name rather than a globbed version."
3e469588a2e36df4f6d8ce330cac631389ea54c2,Deleted some lottiefiles tests
7d1288fad3eb5e653240af68d3e352c71ff659c8,Allow larger tests
bbfad48e5bd208c5f5b5ad85510fe91b312db31c,Add many more tests from lottiefiles (#567)
9bae2d8a705833c06ba43980ceaad320fd5f3918,"Removed InitialValue code (#568)

Internal optimization.
Cleans up code and should make switching to JSONReader easier."
a53ffe65985d3d84333433cd9b330004412b3dcd,v2.5.0-beta1
7ddcf8a580953c1985ab67589671fceaac7ccbb8,fix broken link (#573)
36a436326cac89826068c7c0026b8c2d32aefadf,"Scroll the assets list to the current animation

This will make it easier to move to the next one.
Fixes #577"
09fc30d7f1aa1be2ecf4d66af3e51bf5ad7ed484,Methods for removing all of animator listeners (#581)
91c181a5e3d898648e7e7dabb8162481c616e9ea,"Make lottie drawable implement animatable (#580)

This pull request updates LottieDrawable to implement the Animatable interface. See #579.

The implementation behaves the same as it does for AnimatedVectorDrawables: https://github.com/aosp-mirror/platform_frameworks_base/blob/oreo-mr1-release/graphics/java/android/graphics/drawable/AnimatedVectorDrawable.java#L893-L945

TLDR:
* start() calls playAnimation()
* stop() calls animator.end()
* isRunning() calls isAnimating()"
90242f646f5678bbfccd672141d2dd71f0177902,"Use JsonReader for json parsing (#572)

Previously, Lottie used JsonObject for deserialization. That meant that:
1) Deserialization is not guaranteed to be O(n) where n is the size of the json file.
2) The entire json string must be loaded into memory.

Switching to JsonReader has the following advantages:
1) Reading is guaranteed to be O(n).
2) Large files can be read in buffers.

However, deserialization code is much more cumbersome because you can't query for things like the existence of a key, the length of an array, and you can't re-walk the same part of the json multiple times.

@felipecsl Did some work (#137, #139, #145, #152) a year ago to prepare to decouple parsing logic so that people could use jackson or some other method of deserialization. However, JsonReader is now the most optimal solution so some of the factory code can be simplified in a future PR.

## Performance
Most animations deserialize ~50% faster than before.
I was also able to deserialize a 50mb json file in 10s that couldn't come close to completing without OOMing before.

|Animation|Old time (ms)|New time (ms)|% improvement|
|----------|--------------|--------------|----------------|
|Tadah|107|55|48%|
|Nudge|100|51|49%|
|Notifications|85|48|43%|
|Star Wars|74|41|45%|
|City|65|24|64%|
|9squares|17|7|59%|
|Empty State|9|4|56%|
|Hello World|6|2|66%|
|Hamburger Arrow|2|1|50%|

Fixes #39"
905a2ff449e823c2f6fd147e9721037b14df8a6f,"Prevent ImageAssetManager entries with null bitmaps

Fixes #586"
4aa141125bbc12cc08778a368980e5ecc46b6a89,"Added a setValue api to LottieValue (#588)

This makes it easier to use it as a declarative API."
cca6a20309237b08ff9607ba872485f8d8cae9ac,Added an interpolated lottie value (#589)
eca9c7025e305226e4fee91172ae641942d9104f,v2.5.0-beta2
8e9c76eba57f6b01530865f36144e1433b0d10a6,"Cleaned up and updated LottieComposition factory methods (#593)

### Added
* `LottieAnimationView#setComposition(JsonReader)`
* `LottieAnimationView#setComposition(String jsonString)`
### Removed
* `LottieComposition#fromJson(Resources, JSONObject)`. Replaced with one that takes a String and one that takes a JsonReader.
### Deprecated
* `LottieAnimationView#setComposition(JSONObject)`

This also removes context/resources as a parameter from several methods because it is not needed anymore."
482f5f00a856c4ddd2315c3d1f4ae1d4a2a46c7d,Improve setAnimation docs
1f02e0092694fffdd4fff078be9c62130394c073,"Default to MaskModeAdd but warn if another is set

With the new way Lottie handles masks, each type is handled explicitly.
The existing behavior defaulted to mask mode add so this restores
that behavior."
12f191c6ed51027d03ad2c0e22d19e3323f6142a,"Round a frame when setting a value and retrieving a frame

Previously, frames were casted to ints/logs. However, this caused
them to be successaptable to floating point issues in which a frame
may be 49.99998 and rounded down to 49. Rounding the number should
produce more reliable frame calculations.
Fixes #591"
1a4a949c1a9881869547ae0c66b5acada0d4c316,v2.5.0-beta3
dcbff626e31ed90a2a025b5ebd5e694fd83f73c9,"Moved LottieComposition parsing to Parser classes

This required setting up a init() method on LottieComposition
to avoid exposing the fields directly outside of the lottie package.
This also removed the bodymovin min version check for text layers
because the layer parsing can no longer know the bodymovin version.
This check can be moved to render time if needed."
6572a0cd9d66b564e0dcff70b4294821250efbf2,Moved Layer parsing to Parser classes
162b7ca5d2c15388be30bd7eff40d69813628f87,Moved all ContentModel parsing to Parser classes
41e3b84d14bbbe2bb5fd89c37c99a988609922e9,Moved all Keyframe parsing to Parser classes
0a9307b239bcdfb9529c99d8d8597b96a42358dd,Moved AnimatableValue parsing to Parser classes (#596)
4eda1daf29a9e099b1e30555bad08501d6e2b83e,Moved more AnimableValue parsing to Parser classes
afaee424bb0e91e419035de28973df6e514dda2b,Moved remaining AnimatableValue parsing to Parser classes
9679d0e22d96103ffb76fa3e0f1366f4f849ac7c,final and scope cleanup from IntelliJ inspect code
51af99a5f69e6fddb870bd0c1192f808bb39c333,Removed some unused code
6c6f249f20cac16ff2210fef28c3927d4a838f7e,"Fix rotations on solid layers (#598)

Prior to this, the transform matrix got mapped to a solid layer's bounds. However, if there is a rotation then the final shape won't be a rect so we need to map the points instead.

Fixes #587"
d23140cdb3a99c83751717284382417be41fa0c4,Add time reamapping value callbacks as animations so they get callbacks
6c1c525e450363185d7bf5949ebd92a7d99aedcb,Enable value callbacks for PathKeyframeAnimation
d0f7015c0d027c40cbeca9603723dfb0810427c6,Add a simple dynamic properties demo
2ca857063acce10b883d3095e2b4aa55cef50182,Fix min bodymoving version check. (#605)
eff7947ca58aa69aa584764281339b17291439c0,"Fix a crash when a precomp has no layers

Fixes #590"
1dad1e9f8006f4f0fb64d4b56ac851ea7dedd4a6,"Treat intersect masks like add masks (#607)

This is not always correct but can be very close and is at least
better than doing nothing.
Lottie will also log when this happens.
Fixes #601"
9f2c187e2136e95ead311ba9042fd8912a9657ea,"Ignore null parent layers

It isn't clear what the actual issue is here and it may actually
be a bug in d8. This should at least prevent the crash.
Worst case, in these rare cases, a layer may not be parented correctly
but it could be resolved in future d8 updates as well.
Fixes #524"
5e06e191ff990ad2aa8e31b9305f9236a1035d43,Update changelog for 2.5.0
e5625792f598faf728423008bcdf5de8d860b4ba,Fixed a typo in a BaseLayer mask warning
9a79436abeb6df2ea6e61d596700feaee0534cd5,"Simplified dynamic properties API

* Migrated 7 params to a single data class.
* Added an overload that takes an interface and enables SAMs in Kotlin."
abf6855dc28a5397d8cb62cdae5593f4489cf2c3,Increased right margin to 150 in IntelliJ
e1290aaefc3f43557fe2d5357cb330aeeae57f89,v2.5.0-rc1
91a87a044edb7e7e3455386ecd1f86b7e4d82a9b,Updated Changelog
aa1aef49c2dbad4004c7b39d6d5da7fb77fe9043,"Cleaned up LottieValueAnimator classes (#608)

Reduced the number of LottieValueCallback classes and added optional constructor initialization."
58659eb6f68224261ad11e58b11c17e47fea81a2,Fixed some line wrapping
6b6047a5290f6aadc9f6866adada00d745b111d8,"Add back but deprecate fromJsonSync(Resources, JSONObject)

#612"
f7ece7c029a1cbfe7adda74bbdbe2210f0863eaf,"Move Keyframe from the animation to the value package so it is usable outside of Lottie internals

The model package has a @RestrictTo annotation."
b413b1ee8630150979d293e60bcfa98103c19af8,Clear the composition when a new one is set (#625)
a212bc8d8c5737a46deafb098e273937d77477b9,"Reimplemented LottieValueAnimator (#624)

This version of LottieValueAnimator replaces all of the animator looping logic with a self-managed Choreographer callback architecture. 

There are two primary reasons for the change:
1) The conversion from setting frames to setting the currentPlayTime of the value animator often led to tricky floating point and rounding issues (#491, #610)
2) The ValueAnimator APIs and implementation have changed in different platform versions. For example, in some versions, the animator will report as running in the update callbacks and for some, it won't. (#555, #615)

There are other benefits as well:
1) Animations can now run independently of the animator duration scale setting.
2) Frame rates are now respected. Animations will now render at the fps specified in After Effects rather than 60fps.

I had to bump the minSdk to 16 to support Choreographer."
05df617dc2c1656b0db2dc5f24f2bde0eb4c2c8c,v2.5.0-rc2
dd0b6e8c767d7c0bc74b989842221209604ec5a9,Fix setProgress when startFrame > 0. (#629)
06fdee274958c57f6550da0cc6a9dba71d27d3bc,Prevent CI from trying to run tests without access to API keys (#631)
74278e178cc14e1b6bb2986da2c972462a422fe3,Fixed a bug in which the initial value of a split path transform was never set.
eac1103f2e630eec5ae947c1b2fb16fd1ba06e81,v2.5.0
17c94cd9144f7b6804b0136fec80e09117abaa01,"Removed unnecessary ArrayList wrapping (#637)

Arrays.asLists already creates a List."
95706c8470e1d5909a83786863104dfa6b8acfa9,Fixed link (#635)
a96904f137ff72fc94134c6e05f4891a1483c3ba,"Remove unneccesary @RestrictTo modified on LottieValueCallback

Fixes #636"
4b4a57b4928c5a04e232a19bfe0eaa497bf81220,Use thread-safe set for listeners. Closes #639 (#642)
c6c1a966b746881a22732ac93dbddf90be101ac3,"Fix rendering graph & instructions in black (#644)

Fixes #594"
3869e29ff221b586580a1e6a30e2ed0c36aac53b,Fix minFrame when composition has a startFrame > 0 (#657)
8afb6f4a3c19d67927e39e023bf4c8c5d6b65a01,Bumped support library and kotlin
2770c3dadad5a6027f75c56338d50bf07ee8d4ca,[WIP] Beta version of new player fragment
6371bac4f2b67b5f1de59f4c7dece0b18faca8cc,Added bottom navigation
cf845fe1c592b2bd1f0b75c4d5f8d3a9f739ef60,Added a bottom bar interface and preview fragment
25462196771e2c5993718b981190f2eb642345c1,[Sample App] Added PreviewFragment
73b819820255c979d454ca039380aa9dcaed1583,"[Sample App] Added a ton of refinement, warnings, and render times to PlayerFragment"
79c6471e843a9112f8244a0b7eddff42e973169a,[Sample App] Added a LottieFiles fragment and CompositionCache
5503c34aa1af482db77033f4b8b61798d6cd4809,[Sample App] Many more improvements to the lottiefiles fragment and player
7dff5e8d541fcc9c0024623672e828fef1bcec21,[Sample App] Change annotation processor of butterknife lib (#671)
f3c3e42c3426f9ae7abeab86c5920a7cfe3916b2,[Sample App] Major improvements to the showcase tab and other screens
9bd3f87c0405cb3ecb32b0ec9780185d026d67e5,"Added an option to setDrawable without recycling bitmaps

This prevents scaling an animation from recycling bitmaps"
6ab007fd9a3982d9347c16330846d3f7d2671884,Added an api to create a composition without closing the InputStream
fce63140e55b9f7d94a75d26069371863c603425,[Sample App] Added an adaptive icon
5188c18863c8b2c79ee49ede3e884da5d7304ac5,[Lottie Sample] Began the bulls eye demo
cba23c340b62b7cb549dce858219767ed4ce2abb,[Sample App] Added search and polished other screens
bab2c95a40f05a026ade75a52182df1ddddbab79,[Lottie Sample] Fixed app theme for <v27
6a8d42197ad31c680949c0f8dbeeb041f91bf36b,[Sample App] Prevent the seekbar from updating the progress when it isn't being dragged
8c3339906ef8a6349e7efed60923097e5fcbe425,Prevented min/max frames from invalidating the animation
36345bf183897ab3294e706bd9297ad1e5c76476,"Switched internal setFrame/setProgress calls

This aligns better with the new LottieValueAnimator"
951e1189f63bd398c9c0c8d0b192136c679619cd,Exposed getMinFrame and getMaxFrame APIs
0ea93a16e36d94b4f25ed561d0ed49f7a1274ef9,[Sample App] Added a control bar to trim start/end
f1bb2b1d7611464873ebd30eea6ea7fa3983e0f3,[Sample App] Fixed intent filter + lint
a76c73ff00723b0c52b04501235a24ce56e871ed,"[Sample App] Removed info menu icon

This will be implemented later"
488620eb0ee7d9df233473fbdb072e32340d3683,[Sample App] Deleted the old animation and list fragment
0babb2c0abe0edaedf6cf960cbde74014b61e667,Update travis config
c0228361d63b7d87a2a34c893913e3662e93636f,[Sample App] Added App Tutorial to the showcase
d2c47a78f4579b1eb25a3417a3a8902521263994,Ensure that the starting frame is set when setting a new composition
7f70524a53470f7a3573330cd2068a2486a11fd0,"Render every frame instead of matching AE fps (#673)

As of 2.5.0, Lottie would try and match the framerate specified in After Effects. This ends up just making things look janky most of the time. This reverts that to the old behavior of rendering every frame.

Fixes #647"
3c89e5d3771aac0f348097a10a9db62d734ccb5c,[Sample App] Reduce marquee top margin
7c65f1f0913000e160121e495e76eea3958fbd1e,Reset min/max frame when composition is set (#674)
c7677bccf55ec2f6323e74213fb51c5a38fbe01d,Properly update the frame when starting an animation
9fdf21af247f1b5e29feccf1a8eb28f5eb0ec1a2,Added a warning for merge paths
f886de12309badd31e3298e7e33f94c8ffa2425d,Fixed looping when the animation speed is reversed
3aaeb63315304f3627775ee18e5676537e9c3d89,[Sample App] Hide speed and trim when toggling visibility
16062cb69f65e43eb1227e4ee4a926a8ef219487,"Set the value callback value even if the animation is not set yet

This fixed an issue where the original addValueCallback has been deferred as
a lazy composition task while the composition is loading so the animation has
not yet been set on the value callback.
Fixes #640"
be98b3d9c7bb97a5d6c0fb6af541e18beaaa9885,[Sample App] Added a bottom sheet to show all keypaths
db1fec20584d16444c6f8f743c165b82453775c8,"Remove null restriction on value callbacks (#675)

This prevented you from clearing a ColorFilter
Fixes #638"
5084f6e956fbe0e77e1b207c22c59399efce9840,"Update the drawable when the composition is reset to the same one (#676)

Previously, if you set an animation, switched to a drawable, and switched back to the same animation, LottieDrawable would report that the composition was the same and it would not update the drawable on LottieAnimationView.
Fixes #648"
e0f5c862b6fae8470bb675bfffddc5e7ed0791cc,v2.5.1
7b236e30544123a0a79a63a52d14afd557832cd6,[Sample App] Update theme styles for api 21-27 and fixed a crash
f29ed5fc0b0abed3c04afc04154ee0af075c63e0,"[Sample App] Fix sample app pre-Lollipop

Fixes #677"
a306ae9acdf6f269bc5cdefb33294f60590a2791,"[Sample App] Fix id collisions

Fixes #684"
947b954bd9d8ddfbfb51e954ce689f600546fb2c,Fix ellipse shape direction (#687)
6815d7de952ff34ae889862daaf17d6103a3afae,Allow happo to run for pushes (#688)
9d77268f9bb1d42c9bcc3ac1a8af7c9c80b4328f,DEFAULT_CACHE_STRATEGY exposed. This is needed in order to make more sophisticated and efficient update for the react-native plugin for Android. (#691)
928d7a8b0bd42859f2c38f6da53a8454dcf97a66,[Sample App] Handle camera permissions and prevent it from launching the player twice.
1a83a3a983e758f24bf97fa71c78c06f7e9cd60f,[Sample App] Added a disclaimer for lottiefiles and the current lottie version to the player
1215da2282a1f6d674400cfe8e8742e2c5f2ab39,[Sample App] Added a hint to the bullseye demo and rearranged showcase demos
c8cd302fec221fd3f084f5c4cccd09c2717f7818,v2.5.2
1835b403428e86e7d06e9cab6f9d4bf230ff3c6f,"Fix race condition with min/max frame (#694)

Composition can be loaded after we have set a custom minFrame and/or maxFrame.
The composition will override custom values."
da17ae26f336321a422d06d576c6512033310786,[Sample App] Fix editor action crash when searching
c1ba6bf0eced03e015fd44a40636e288d948c123,[Sample App] Bump version code
e366d2140e351fa0f63f582dfd1a55ef31cb71b6,v2.5.3
3cd936344ea8bdf72d90f05f6e142ff48ce05e68,"Clip min and max frames to composition min/max frames

Fixes #716"
54dc47f89addc7b68f46b04df5193091ead0bdd7,Bumped support lib and kotlin versions
e526dc1ad645781ac5d1cfb06d0dea15653b3f03,"Removed a warning from gradients

When this happens, it is often due to an opacity color stop but
hardly effects rendering. The gradient detection can be improved
if it becomes a real issue down the line."
458b37b80ed04e8de2df7b8a989ead78bcf918e0,"Prevent hiding the keyboard from crashing on <API 32

Fixes #709"
2e80ad95d014e3d5b31e2b4d83a62c20ddbaf616,"Correct animation speed if it was reversed due to repeatMode REVERSE

Fixes #705"
2ba29e14f1e6975620b0db25eaa98c3f3b6a84c7,Fixed lint
ca7e4f06a51edc62c49ab4954e48abdcd9056a3c,Fix small test issue. (#722)
06cc92bbc0f6d1b5c81f0a7c1cb3be46c98b4690,"Two value animator fixes (#717)

* Take into account start and end frames for min and max progress
* Remove the frame callback before notifying the end listeners so that if they start an animation, the notification frame will not be removed.
Fixes #703
Fixes #663"
d1a2fb52d0c7cefbb3267601dac00a33c781588d,v2.5.4
e8dc98b1a2f68f8af79ae36d7afdeaee0be0e33a,[Sample App] Fix some colors when there is a dark background (#729)
c4502c147864aa3ce8e38caff47fd07c44445af6,Code copied from SDK refactored to comply with project licensing. (#732)
bbab4f48d1c5130eb5599a4d1bf99a8891ab7c8f,Add basic support for base64 URLs. (#749)
1f00d1bd35d30cc89bbfbae1de6fa50bb659a55e,Updated dependencies
e0350492ded22d8dbd381d2c33c4967d5e4d40ff,"Make FontCharacter size a double

Fixes #727"
2f6ece824b4c86810030be0f5ec47d2f9e4551a4,"Make intersection mask log less noisy

Fixes #742"
c9bb8384fd0ccc33dafe775487e045a865f34921,"Fix KeyPath visibility

Fixes #728"
fae4379c1e52a71d8a7e8cb552cca64299d253b4,"Reset min/max frames unless no composition is set (#752)

This should handle both cases where:

1) You set a min/max frame while the composition is still loading #694
2) You change the composition to one with a different length. Fixes #750
Added a bunch of tests to confirm as well"
80f6c89a2c66ba0fefbd112cc53d3bbabd5bc89f,"Properly register ColorFilter animations (#753)

ColorFilter animations were not properly registered as animations so they wouldn't update the animation when changed.
Fixes #690"
d8daf70d9a5b8ee6461edebfb2bf55bf7a14aaba,Updated Happo url
6b291eb66b699aa40807a1e5af39e490778b3b1e,"Fixed min/max progress (#754)

The order of parameters was flipped for lerp.
Added tests and did an audit of all other lerp calls to make sure they were all fine.
Fixes #739"
c360f7cc0a1cc1bb197c0cafd8ec6c7448d02d44,change compile to implementation (#756)
a692b2b44787b1ef33e45ba3a59c73a4bec7a706,Updated codeStyleSettings
d88ff2aeb8fd012186820150a8a1d60730721832,Use lerp calculation to get the min and max frame. (#764)
24d005475621588014eb1d7676def6dd62ee0e96,"Fix: Tapping on seekBar would be ignored (#760)

-Change the progress by dragging the finger was working. However, tapping on the progress bar to change the progress was not.
I merged the ""progress in 1..4"" condition with the checking ""seekBar.isPressed"", so it will be ignored when user is not pressing it.
Also, in the animationView.addAnimatorUpdateListener, I changed the .toInt() into a .roundToInt(), because toInt() was always giving the current_number -= -1, creating a race condition that would set the seekBar to 0.
I tested my solution on a lot of the Showcase examples and I'm confident there is no regression."
b4913b5138de5eefdad4ab26192060d22a8067ac,Added an end frame test (#765)
1d45e4dc4b8c7c1759375ffadd4ac742cae97efb,Fixed end frame calculation (#766)
f490a68d7dd630d2368af4198229600c6d3ad745,"Prevent autoPlay from playing an animation before it is attached to a window

Fixes #762"
95f07d18ba24b36c114ecdc1d7274971ad490172,v2.5.5
6906ad530616d110983d853ce0fbefb922774ac5,Added a changelog for 2.5.5
b0064c3da245c3ccd0e4b0e15c9d6829b2ab2d25,"Update build.gradle (#803)

Change google() repository & jcenter() repository access priority so that the gradle build would not fail to resolve dependencies as per latest Android Studio update.

Reference: https://stackoverflow.com/questions/50584437/android-studio-3-1-2-failed-to-resolve-runtime/50758769"
8ce2bef08477279a25cf357bf7ce4d325b0aab97,Move to using only ALL_SAVE_FLAG with Canvas.saveLayer API (#748)
42e776f2740129e3e19bac77c919113cad0f9992,"Update latest version in README.md (#809)

2.5.5 has been out already for a few weeks"
cd547e41a623cafd3d7c2918fbb43ff7bc93f642,Use correct retrofit rxjava adapter and update okhttp timeout (#790)
ed3a018b7df48f7019226d876fef9b4718a15d07,"Fixed danglign choreographer callback. (#775)

**This patch fixes the performance issue.**

I've seen the cases where the previous version of the code was re-adding callbacks to the choreographer in case of cancelation/pause. Now it is designed to make it impossible. It looks like there is a copy of the callbacks stored somewhere in the stack. I've been able to reproduce the problem on Android 6.0 and 7.0.

This issue caused application performance degradation and battery drain in the background for us."
86a8f396c3e09da913ce27f90eaca9044b25271d,Target Java 8
5293ac55bb9e5d53036fe73119b305d83e328a49,Replaced anonymous classes with lambdas.
1926e58226518d3b11ea986aa940927aa0d082da,"Added total frames as well as current and total seconds of animation (#814)

Fixes #721"
0ccaba54f146c0b2b3371d45c62e8bc03be64b6d,v2.5.6
e6cad9a3e6d0da9ffa21440162348deaea48cda8,fix min & max frame not apply to loaded composition (#827)
5e47d7323ec0b28bab94c1bb64611384fa5c9062,"Update ImageLayer.java (#828)

Use a recycled bitmap may produce a crash"
e003f34c73dbb7bdb3ccc8d15c6fcaaedd1f23dc,Fix changelog formatting (#823)
b1291e557114422970ef27eeb29df14b68713e10,Use -Float.MAX_VALUE instead of Float.MIN_VALUE (#820)
17b64db1b082b11397b122f43179de7e9ddf791c,"Revert ""Target Java 8""

This reverts commit 86a8f396c3e09da913ce27f90eaca9044b25271d."
9d9a2e3928feed0a2b5752299e9055dd552eb21a,"Revert ""Replaced anonymous classes with lambdas.""

This reverts commit 5293ac55bb9e5d53036fe73119b305d83e328a49."
ddea81ea20defd94c6d0e32131c16dc14521f05a,Reverted some remaining java 8 blocks
9414eb502d91c840471c82b89f9a642b367ea215,Safer lottiefiles color parsing
dc3442ce098cfce09a00f7ef6ec98c03ba8436a9,Updated Kotlin and gradle
ee7962628204f30b51018aa5ec138b9fec8073a4,v2.5.7
406e60882d800ccf9699c6ad8d75e5561734df7a,"Remove buildToolsVersion

Fixes #805"
45b5adb62fd62d2aef10784f53ba03f2e1c2462c,"[Sample App] Improve input validation for trimming

Fixes #781"
e07d6727fc273359b250110d8d476008d3e8a495,[Sample App] Additional threading fix for network callbacks
44cd5011948d1a576de2ddf4e69e385b88acf077,[Sample App] Added the ability to load a file from assets
4ea04fd194649d48b217f91c260735f7d0852187,Removed unused assets
c32f18ede7873f4c5e16493456340ef9878830d9,"Refactored LottieCompositionFactory APIs (#830)

Replaced existing `LottieComposition.Factory` methods with a new `LottieCompositionFactory`
The main purpose of this is to provide a clean way to handle exceptions. Today, parsing exceptions are thrown on a background thread and impossible to handle. This replaces that with a new `LottieResult` which mimics a typical `Result` class in functional programming. It either has a result or an exception.

The composition methods now return a `LottieTask<LottieResult<LottieComposition>>>`.
You can add/remove listeners on the LottieTask. The listener will be called with the result that contains either the exception or error.

This also deprecates all `LottieComposition.Factory` methods because they all have an analogous `LottieCompositionFactory` API.

This PR also extracts LottieAnimationView's cache into a separate class and added tests which found an off by one error.

#710"
f11924da41056a5a8129e157695f64ca287353c8,Readded hamburger arrow asset for tests (#840)
3f3fdbd95ac4f9915ccd98da7456145600e8e028,"Added support for miter limit (#839)

Fixes #797"
dd05077e8430e056dfcf351945a86fd068d14c62,"Fixed for time stretch applying to masks twice (#842)

Since masks are inside layers, they should not have the time stretch double applied to them.

Fixes #825"
3f78dfccf1df264f2cd502f9edd1369e78b6ec14,"Add an intersect mask warning at parse time (#841)

Fixes #784"
9ce2cc88edd35925d0e3a9be21970fabb2047231,Fixing issues in Lollipop introduced by #748 (#824)
6f2645a233c71c8c8c65f2fbc6c3928c8e572e2d,Split up CI jobs (#854)
12de9c5e830fa32dd5eef74f35cfd4adda6e8d25,Added logging for happo tests (#855)
94aa75328ce3b79e17a463f9b60ac7559204f997,Updated issue and pr templates
73805e4bf70fcae1eb53f8f478a85b3e437e9049,[Sample App] Handle null preview urls
ee8b95409c3615785ca86aa47a52a2ab8e977943,"Added support for zip files (#846)

See code docs for more info."
3f9ee24b530d21414fbc5eddc7c52f2d23fc89cb,Replaced Strong/WeakRef cache with a LruCache (#861)
4750fbd71bddb2b7f7303bf7ec2ed877cf0a542e,"Allow shapes with different point counts but warn (#865)

Previously, Lottie would crash and not even try to render animations with shapes that had a different number of vertices. Now Lottie logs a warnings but renders the first n points where n is the min number of points between the two shapes.

Fixes #856"
afef4edf2e982da814c3afd7970754a221aca111,"[Sample App] Run Player network response on the main thread

Fixes #867"
f675a5575db138e759f09e71806d1a913539ecd0,Sign and create releases on CI (#866)
1718548f6eb9ae5fce15b543c4a2484b7d742ff9,[WIP] Sign lottie artifacts (#877)
1db1a0be1449fc0c952ad2d337b153807edcfef3,Updated README
9d233a0f9ce099c2bc0f44116a48e330befa01b2,"Added the ability to fetch an animation from a url (#868)

Fixes #869"
416d637b9795c0827dc0a27fb359173c80f9ecce,"Update PolystarContent.java (#881)

fix copy paste mistake"
76b76e7a6d8ee65339b86a65a4f41ea2db75fd1e,v2.6.0-rc1
d45382f220ef16dfe1c169a9a7f0f3f53fb26fa7,Use maven badges for the readme version
8ce8f8da667571c5126e3e01fd56f7a5574607ed,Fixed gcloud account
0e6a65b3a6d175b27bc3ac178ee415309fde91e1,"Automatically reuse tasks for in-progress parses (#887)

Previously, if you tried to parse the same animation multiple times in parallel, it would start a new parse unless the first one completed and was cached. Now, Lottie will retain in-progress tasks so it will just join the first task for that animation."
89dff1364d70ca8d8f3034ad7bae0b408a50e156,Updated changelog
df1beca376fe06f0d80ffce8db6215126c4c18c4,v2.6.0-rc2
6e0b13adcbb3dac5ddc720a0cbfa354d7f30d4a5,Fix signed apk path
add5015f88675d75630cdd10789045b8d811a448,"Added the ability to set a url on LottieAnimationView

Fixes #888"
f4f47a815a662f33d9732c3b56771004afc08c1f,v2.6.0-rc2
fbf00bc8c14515e23ec68b948b783b454eaf0971,v2.6.0-rc3
9be40fb1c03f3bba53597f5cb2db823dbd8c97bb,Add secring to gitignore
f71402c8959cf7e65b8674d39112de2dc43ce0a2,"Gracefully degrade when null bitmaps are set (#912)

Fixes #586
Fixes #900"
df59c11ce2628a0fb687dedce7769eded0637582,Make EXECUTOR non-final (#916)
2695bc625bfeb89d5d0dd3fb247ef203eca659d6,"CompositionLayer: Add support for targetSdkVersion = 28 (#919)

* clipRect is deprecated with a Region.Op other than Region.Op.INTERSECT and Region.Op.DIFFERENCE

Signed-off-by: Brandon McAnsh <bmcansh@powerley.com>"
817e100bb01f9e6e14e92697c935cc3786315935,Converted sample app to MvRx (#917)
3f58e5842daefd6298d86b578fb345d3fac601dd,"Revert ""CompositionLayer: Handle invalid Region.Op on Android Pie"" (#920)

@bmc08gt

Reverts airbnb/lottie-android#919"
b82850ab09cb6fdb1b5818f41319adfb58b5bcd0,v2.6.0
27e228fb1182041e3f56cecf2133ab804343a289,Removed signing section from gradle
871abd0def51af9ae862fefee3911259d0943a88,Fix typo (#924)
604299aa4f15a191cc7f8247dfd0724d8324aed0,fix recycle asset bitmap improperly (#935)
e0c22eeb8db663067f9dd1b688d811c5e4302724,Synchronize task threading (#933)
073bf89653b3f6871018802f7912c8119a93643f,v2.6.1
074176b4574ce41fadf3fba09213e902ede914ac,Add on composition loaded listener (#928)
4a6840b5495baa422e7a485621c01d47a66fe37d,Fix Typos in LottieAnimationView (#938)
c567cbb970b747ce29a8f46ca115934a4a2aa9e3,"Make text strokeWidth a double (#940)

#397"
e76e4454f8031c13c8773759b13d68fdc83d45bd,"LottieCompositionFactory and Caching Cleanup (#959)

This cleans up a number of things related to the LottieCompositionFactory.
It:

* Handled task caching at the LottieCompositionFactory level so it is guaranteed to work everywhere. The existing architecture left several instances where compositions would not be cached.
* Simplified the way tasks are handled in LottieAnimationView
* Fixes #958 in which different cache keys are used for rawRes animations
* Removed deprecated factory APIs"
5922b3660cc0ae8b18fea51a67946e40465d9bfc,"Make LottieTask#EXECUTOR static

Fixes #943"
56640b09df56270029afd0c5fff6e93b41009815,"Default layer names to UNSET rather than crashing when unset

See code comment for more info
Fixes #951"
7d95fdf61a0aae87abb7319eeeb504fb0c5b03a0,"Allow returning null from value animator callbacks (#960)

Fixes #879"
354b7561e9a88a602aea50f55a9949c8a0001037,[Sample App] Fixed play button icon not updating
c862c56bf85a08ceb5040556260d7cf9331ef595,v2.7.0 CHANGELOG
49d94b859943d754d6c7b8a1843c3302aba2b9ec,v2.7.0
e9675e5bf48784d4d4da1afa255d337421ac5b92,[Sample App] Fix Lottiefiles tab
c476cc65bf9abc9f2a1e371490112d558b465a58,"Migrate to androidx (#962)

Fixes #898"
523705eae1405009f18a47a61604a66e2215d73a,Updated changelog
7283e03c08776e542352166a1edcedf2adc0ef48,v2.8.0
65c5ee8ccb6c7258e644a99df729552890706108,Improved README and CHANGELOG regarding androidx.
8f8da11969ebc821824f3dd4d4044f6dbd8625c4,Don't allow minFrame > maxFrame in LottieValueAnimator (#969)
3cefa99e461b1dab54b50fff40a4202bb365ef30,[Sample App] Upgraded butterknife
89839861debcba45fa7d7f39b179c3350de7f563,Fixed test
d88282489ac6c269fa82a9b72d97453f87a989b3,"Fixed the bug of ImageAssetManager.updateBitmap not return the expected result. (#982)

Change-Id: Icd78af15a5c82b9b58270ade8906dd971d2738ad
Signed-off-by: dongshangyong <dongshangyong@bytedance.com>"
83c6f1ee2a1d918362483c12c7dd95b10df808ed,Use film strip snapshots rather than individual progress points for visual regression tests (#983)
8442c814baf89bfbcaff1ddfdb14cbc04ec0dbf1,Added an attr for speed (#1012)
d736d2180ccc25798a28cbb3c0db653950112d50,"Remove bitmap recycling (#1013)

Fixes #1002"
c30a2acdc7e1499e0c1e2e94e40bc0ea9338bba8,"Added support for hidden layers (""hd"" property) (#1024)"
b707b8a8fe37c3a354ef782c4b1c822170925728,Added memory cache layer for async network requests (#986)
0a980ac7a1220539b444e9854f2d64c51018c191,Added a bunch of lottiefiles animations as tests (#1026)
3a7f0a1ad231858d574889855b4135a23a304032,Prevent interpolating before the start color/after the end color (#1027)
366206a3113c8639e971f7332141faac8dca2d9a,Added prod animations from S3 (#1031)
1f9ebfceb8f212b4e67fbe128ccf2562a85ff852,"Use the correct bounds for saveLayer calls (#1023)

f027871b112a63502ffabb446331bcae411ec6aa was supposed to dramatically improve the performance of masks and mattes by only saving the intersection bounds of content with their masks mattes. However, one additional line of code was left in and undid all of that work:
https://github.com/airbnb/lottie-android/commit/f027871b112a63502ffabb446331bcae411ec6aa#diff-1dfdb6e89340ceb7e433b6e150edb39bR171

Removing that line wasn't sufficient though. There were a few bugs in getBounds() that were caught and resolved thanks to the Happo tests in this PR.

Animations with masks and mattes should perform 2-10x better after this change."
ef330316af45ea383732ed9e0c183a8b171ca190,"Removed most object allocations during playback (#1033)

Used memory profiling to remove all autobloxing and allocations during runtime."
393afd5acc4c608b1c082412fccd2f710589de1b,Only update listeners when animation changed (#1035)
826503b3071f39f4f3dff8ac2d523dcbb382c12b,"Annotate fetchBitmap as @Nullable (#1037)

According to the example in https://airbnb.io/lottie/android/images.html#providing-your-own-images, fetchBitmap() can return null and Lottie will keep asking until a non-null Bitmap is returned."
bdbb2cd8e49101dde476c14a9340f244673f1ece,resove bug local cache not working (#1040)
75504741d5f24ead3b13652c2543a1229c14708c,"Add a default gradient fill type (#1042)

Fixes #1032"
7a656054b0104f1b737d3b389764c2131d1503cd,"Clean up docs and add documentation link to LottieDrawable and LottieAnimationView (#1043)

Fixes #1029"
fc64b267046a7559f12bfc1fd311e9e91beada2b,Created LPaint (#1045)
11d87e957ec41bb2f7e55d4938a0f4e78f637910,[Sample App] add util buttons to SimpleAnimationActivity for testing
7d025d039b473971632973d7668d87137c4c3620,Optimize invalidateSelf (#1047)
0d14e919f5423599e04b25519841e429de86ec61,[Breaking Change] Automatic hardware acceleration detection (#1048)
ca28d432eefc335f6228af0922858366ddc1763d,Optimize start and end progress (#1049)
a22efcad2873b4bf72a9d42c6964b404490617e9,Optimize identity transforms (#1046)
72943d883bfae22fd42d61ef0de3dba887676c87,Flipped equality check (#1050)
a61e47f0a6dc52b4cbfcbfe515c111baeea899d3,Be more lenient with shapes that have a different number of control points (#1051)
fa7625a426a1a4c6cf751243e636a1f54387c676,Added 4 lottiefiles tests (#1053)
57c4746ce53656f194bbed0e636c69f63d562d28,Fix grammar on README (#1054)
3612a1c7150d3b16232f2dfe4546fbc0ddd7cefb,Ensure animator updates when a new composition is set
72f25bffb497612f28bbd481a3d7d96b92b56b57,Allow text to be used as a mask (#1052)
a9dcdf8d0ce8dc56b0f3f2e6a1b619fcde93207f,Skip listeners based on keyframes (#1061)
cc7a43c9fbbd2e4112874ca104c01fde33153889,Updated testing (#1064)
0ffb71613661ff27ba2989f3f21cb523f11cfef0,Disabled travis (#1065)
20dc13ceec718a9d4eb402a12410d8bda5c14c82,Enabled travis for tests and lint (#1066)
e8f4f381b3760a58cfae407a9e0801f910f1ed58,Remove decrypt step from Travis
52e4d63419a311559c55f63d06fd91a545ece795,"Add support for naive text alignment. (#1067)

Fixes #388"
88bed53078a691b2f0b1eafb3d32071ab5cdb779,"New RenderMode API (#1072)

While testing, I discovered that animations with lots of/large masks and mattes perform significantly worse with hardware acceleration than software acceleration on pre-Pie devices because of RenderNode#textureUpload. It is really hard to detect this dynamically so I'm leaving the default on automatic (with an additional heuristic for >4 mattes and masks) but having an option to set it to hardware/software manually.

#381"
6a5d8e3bdcb6812db857b59b9cd2d2ee405df6e4,v2.9.0-beta1
3c0df996cbf5afbac380f4974bf668c33cc8e818,v3.0.0-beta1
a17e7fdf91027203e153102f44d19ffaa2426a53,Prevent an OOBE (#1084)
204336f3b58ec971bd1b81b2abae6ff961a9f5c9,"Prevent returning cache values when null cache key is set (#1097)

Previously, setting a null cache key could return a cached task or result. This explicitly prevents that from happening. The new tests failed before and pass now.
Fixes #1092"
a6d4f34c10c14c7c87c91cd851a997f915984b7f,"Pause Lottie when visibility changes (#1098)

onAttachedToWindow and onDetachedFromWindow aren't sufficient for LottieAnimationView to properly pause and resume. We must do the same from onVisibilityChanged as well or we risk Lottie animating when the app is in the background.

Fixes #987
Thanks @florianPOLARSTEPS"
b412da75fa257883315d6449e8f2672cba54e02f,Switch from happo to bitrise git branch (#1099)
b52dce3872e06d7888c424d0ec320cf55a15f670,"Properly limit LRU cache size and make it configurable (#1100)

I also added an API to set the max cache size and tests.
Fixes #1077"
f970d3a8947e2f5eeaf8c852ec3648137f343732,"Close JsonReader after parsing (#1101)

Other streams are closed so this makes it consistent with that.

Fixes #1068"
2a73d550e6845d34a70a8db6998e41d40aab822e,"Added support for markers (#1105)

This adds new APIs for setting the min/max/min and max frame based on a marker comment name.
Fixes #487"
88dd91bc24411282bd67b4b0c02213e3b2acd292,Fix adjustment scale for text alignment when drawing text with fonts (#1115)
779d389678c5b9d86da7a6cbf94175f45e32d57b,Cleanup travis.yml (#1117)
4c575a432d58d21f41e9d99ef260533908361d80,"Optimized test coroutines (#1110)

Downloading, parsing, and snapshotting now all happen on individual coroutines on with the correct dispatchers which allows things to happen in parallel. This should also prevent the wrong bitmap from getting snapshotted which happened before."
3bfcc3ded8642bec338ee98d5e46f9581eb890e8,Updated issue template
48aa7583984dde5aeab63012245e750ea1a849e4,Add link to Lottie-Windows (#1119)
a38bff9372c36109caf3a9e66484764c37e194e0,Add information while waiting for jobs to finish (#1120)
f87b1fdd8fb1cb4fd0e0931e53330caaa386da3c,"Added support for Skew and Skew Angle (#1118)

Fixes #409"
5f8f4861868fa578238a4cc05034fba1b1bfb7f3,"Allow multiple trim paths to operate on the same content (#1103)

Without this, multiple trim paths would overwrite each other. In the case of #1087, there was a trim path inside the content group and outside of it. However, the outside one had the desired visual effect but was overwritten by the one inside the group which had no effect.
Fixes #1087"
51188e6119f432e250f3d0a671bde8af77a796d4,"Replace task observer thread with FutureTask subclass (#1083)

I noticed that the observer thread approach that was being used to check when LottieTasks are done has indeterminate delay for reporting finished tasks, since the thread polls the task. It also adds overhead to create a thread for each task.

Digging into it, it looks like we can simply use FutureTask's `done` function to know when the task is done.

With this change the sample app seems to run perfectly, so functionality seems to be the same."
2ca335a47fc97835b7c3ceaf44301b13e2bc0283,Support animations without end values in each keyframe (#1104)
60a7912604bf2dea39beddd555d2c12f12bfe83f,[Sample App] Use new lottiefiles url (#1124)
6078d2f47710cc3820348c77fb6e2074a8847fee,Fix not animating the first time (#1125)
deb6e2208721902d6057ed88f18361e0c77eb6d8,v3.0.0-beta2
3a4eacdac8ea921ed9b32d0e5dab18cf4b6d9d2a,"Prevent setMaxFrame from truncating the last frame. (#1126)

Lottie should render the max frame. However, setting the max frame truncated it to an int so the frame itself would never render.
I can confirm that this fixes #1034. Calling `getProgress()` from `onAninmationEnd()` yielded 0.996 before and 1.0 now. The animation attached in #1034 also fully disappears by the end of the animation."
c15c126a6da9c53c277b67462ae128083215ef1f,Use idiomatic enum constant naming (#1133)
c3f3a885b087dc897444596d0a271d701eb8e9b0,"Reimplemented masks and mattes (#1135)

This should greatly improve the compatibility of multiple add and subtract masks and adds support for inverted masks and intersect masks."
080a5daecc3e2a3d183ceba17f390dea4e95f81d,"Added support for inverted intersect masks (#1137)

Also cleaned up some stuff from the original masks PR."
7a7a954e6eb5171dabc708f4917020f38d5318f3,"Allow transform properties to be nullable (#1136)

Fixes #1121"
0794b3c46d542eebeb8117528518e470b8d6bd3f,"Add support for multiline text (#1138)

Fixes #401"
47d1d57b6b2720de555f62fa05750812744bf570,"Prevent a crash on older versions of Android (#1148)

Fixes #1143"
be651048a4b74db64cfe75a7fe1cfb6c8df1365b,"Prevent zero scale strokes from drawing (#1149)

Fixes #1142"
77ebba9924cab8cd0c6f69646ed04640c1388c57,"Added radius, size & position value callbacks for rectangle (#1146)

Fixes #894"
95978b2e4ea66e72a9432e231794ec4dddddc00e,"[Sample App] Include a default font asset delegate (#1151)

Now, animations with fonts will render using the system font rather than crashing."
34195c2e3ab5576e30fad4bd0826acf160636bde,Added support for emoji in TextDelegates (#1150)
3ef34b8ef6b4ee5df98092c4bb007276d1f586f9,"Added support for dynamic gradient colors (#1153)

Other dynamic properties can be added later but adding support for colors is the most valuable right now.
#905"
e3bba6cbef78f1883e320ae2268e01b2889a073c,v3.0.0-beta3
6bf6b8c71e36e6cc7f84ce8da86bc1700768d870,Added support for gradient fill opacity (#1155)
e69160e59ca5945638c5e02a2467125a9e0d715a,v3.0.0-beta4
d58a39dfd59ce588865d80b7fdfe4090236a4736,"Match trailing carriage returns and ignore case for marker names (#1164)

Fixes #1163"
d7e044f21ee2fde0b69dde068f76503aa23fa5a8,v3.0.0
a483b7695e2a9ec5e8ea4b50b1223f806e890ca5,"Fix issues about visibility changes (#1174)

1) The animation could be played although it is not visible.
onVisibilityChanged callback will be called even when
the visibility of an ancestor of the view has changed.
So we need to check the visibility with isShown(),
not with visibility == View.VISIBLE in onVisibilityChanged callback.

2) playAnimation() and resumeAnimation() could be called while not visible.
playAnimation() and resumeAnimation() should be blocked
if the view is not visible, and the animation should be
resumed when the view goes visible.
So, we need to set wasAnimatingWhenNotShown=true
in playAnimation() and resumeAnimation() when the view is not visible.

3) pauseAnimation() and cancelAnimation() were not worked when the activity is in background.
The animation could be resumed by onVisibilityChanged() callback.
We need to reset wasAnimatingWhenNotShown=false in pauseAnimation() and cancelAnimation().

Fixes #1173"
423c336e8c30e063b0f8f233820f8ec8eaceafaa,"Respect disabled system animations (#1187)

If systemAnimationScale == 0, the lottie animation will play then immediately jump to the last frame, or only jump to the last frame if it is a loop animation.
This solution handles if the dev move the animation at some percentage, change first or last frame or play the animation in reverse.

Really useful for testing purpose in order to not overload the main thread

Unittest are OK, I couldn't start the uiTest as it require the AWS key.

I couldn't add unittest as it obviously doesn't try to start the animations in it

Fixes #1129"
451181551dbe8029856d946e1e6efc17dafbfb94,"Have software rendering fallback on hardware acceleration when too large (#1190)

In cases where LottieAnimationView is large and software rendering is used, Android may not be able to generate a bitmap large enough which causes nothing to be shown. Rather than have this happen, fall back on hardware acceleration which is supported > api 11. Potentially taking a perf hit and displaying is better than a blank screen and not displaying at all.

Encountered this where upon rotation on a tablet, the view became big enough that generation of the bitmap failed."
46f88fe7d1260ded135af8a00f53190c38ff8624,v3.0.1
126dabdc9f586c87822f85fe1128cdad439d30fa,Added WebP support to ZIP asset parsing (#1198)
3004a3b9b6f6b9039ba2af68c640129f7b0bca2a,Add a customizable logger and try/finally network connections (#1162)
c88485c1b655c49807f28e5136446d2b40856f3f,"Refer to the frameTimeNanos from Choreographer (#1215)

This is to fix #1214 . Please check out the root cause analysis in #1214 ."
bd04ebc835a52c174acf173b69b35ba6c7ed5ffc,Set wasAnimatingWhenDetached to false at pause() (#1217)
0c138f8fc2ea5ed5ae4d725cbaeab5131a933d36,v3.0.2
9e8d64081e941f5fc29a31c0a9e1088bfa8a3197,invalidateSelf after setAlpha
a143d345a22c49288febb7c999a32962696a3e37,"Close url connection at the right time (#1221)

@dloic, #1162 broke all url loading because you closed the connection before it was actually done being used. This fixes it though.

Fixes #1219"
174ce16ec59b1ab11b074460c23b0286f7da08eb,"Set correct frame when animation ends and speed is < 0 (#1222)

Fixes #1207"
39e2a3b21171178f6b44ca0194f18dd97f07b7a7,Default null content type to application/json (#1223)
7371eabe326ac70991cf237da423b03ee52caba8,Resize bitmaps to the size specified in JSON (#1225)
21d1573898da088efa81b1de91faa55108d5057f,"Fix: incorrect System.nano() usage leads to the animation to end prematurely (#1227)

Setting System.nanoTime() to lastFrameTimeNs outside doFrame callback may lead to negative timeSinceFrame value. This causes the animation to end right after it started."
6bef284ac9b23c215364d2cd5221a29120c0e889,v3.0.3
9cdff7fb9cf33ae07d87a83ac01098d05f3f529d,Updated CHANGELOG
5a5ff800b05ff735df2d7341ea63fa44a527b927,Prevent BuildConfig builds from ever being on release builds (#1232)
2d39d0f174c61e033618ad34cbf7da4576cfdc89,"Fix old platform behavior (#1244)

The platform check fixes #1243 #1241
The other logic makes wasAnimatingWhenDetached work even if autoPlay is false."
891e73fa1146196b4cde7c7873ca1a352fc40a58,"Fix copy paste error (#1245)

Fixes #1242"
2354bad616c417aa246ec72a95aa372274d31250,"Use moshi implementation for json parsing (#1234)

There's a dependency on OKIO & 8 classes copied from Moshi. Need to figure out best path forward. Ideally we don't depend on all of Moshi but still get the gains of the new JsonReader & Options api. This should fix the random Android 8 crashes.

Performance
I ran the snapshot tests with ~1800 animations and summed up just the parsing time. The old parsing code took 13,145ms and 13,645ms on each test run (avg 13,395ms). The new code took 12,858ms each time. There aren't enough trials to deduce statistical differences but if these numbers hold, the new code parses ~5% faster.
It does reduce memory allocations during parsing which may contribute to the performance improvement.

I'm leaning on merging this to hopefully fix #667"
77401c58972d6a60b6ee530b58459df6b84f0991,v3.0.4
db1a93dd884d6ced1110eabe53e547db1c0a3a49,"Clip masks and mattes to the canvas (#1246)

This fixes #1199 and improves performance by never saving a layer outside of the canvas. Thanks to @pmecho for the repro steps!"
da11cc72295d6bbf70035667d9dd1871d248cde5,v3.0.5
cb8428940088994d6b48650b7c0819d77cba379d,"Fix another visibility bug and added espresso tests (#1249)

Fixes #1216 and adds tests so hopefully this won't happen again.
I haven't had time to get these tests on CI yet but they pass on API 19, 24, and 28."
35de50dd3bbe1b11aa6e983209c26ec0bd99d359,v3.0.6
f2d6e608637684b0a957370fe0edb4be7bf93652,"Fixed renderMode attr (#1263)

Somehow this was never implemented when adding the renderMode API
#1254"
d4affd4f0f723a2c090e5553273ca29e19902d3a,"Allow progress to be set in between frames (#1261)

Fixes #1250"
47fc0dc23d9088bd3c9c0174a86e1a8edb3c0beb,Moved espresso tests into LottieSample (#1264)
6b5fc3b756f7e241a8092da133e64fe91621ce00,"Use non final init member to work around Proguard removing null check on final field when optimizing. (#1274)

The null check added by #1148 gets removed by Proguard optimization (as it is overly aggressive in removing null checks on final fields.

Use non final init member to work around Proguard removing null check on final field when optimizing."
99dea0e0e3bc9d0b0b4b1cbf8cfa08163964e816,v3.0.7
d3bb0ccce4973e93950f3332c487bc3493a1d0c1,"Apply scale to dash pattern offset (#1281)

Thanks @karip for the animation and fix.
Fixes #798"
7e64a9d68a7e58b6ea490fa9f8c8526612b02ad1,"Replace LottieAnimiationView JsonReader API with just InputStream and hide visibility of the Lottie Moshi JSON parsing classes. (#1279)

This PR also hides the visibility of the Lottie Moshi JSON parsing classes.
Fixes #1270"
3e7b460e249e423da8bcb3d16d38ba38c27d2d7d,"Fuzzy match content types (#1320)

Fixes #1288"
10ba93691848f570c20720e37680462c2dd8ed52,"Clear mask canvases on pre-Pie (#1327)

Fixes #1253"
40bc7483a48efa7b71167741419d2e2100c51b84,"Enable snapshot deployment (#1328)

Add new deploy script for snapshot deployments"
5124894d68de45145e854683f086a8cb8a68e5a9,Create RELEASE.md (#1329)
68aed6a46fc7f663553a6420e6910698ff586e68,"Add custom failure listener support to LottieAnimationView and log network failures (#1321)

This changes the default failure behavior for network errors to log instead of crash.
It also gives you the ability to set and clear failure listeners to handle this yourself.
Fixes #1302"
1661c2673bc4d9e632bc1599978f803ac457505f,Create FUNDING.yml
292b5745e3553d908ebc015e46f2876390554485,Update issue templates
ac09fd469bd5948c1d781d8e95a0ac32fb5074c4,Update issue templates
9ff969e3150ad34598807433776b99ae8cdca903,"Apply parent matrix to gradient stroke (#1333)

Fixes the second half of #1188
@Moes81"
474586a6e992a521e78abe65ff25b43c7f4d3588,"Prevent a StackOverflowException on 4.4 (#1332)

Fixes #1298"
1a5c3661ef146e97f61fbdf9f1d4adc77df451ae,Fix android Learn url to one that doesn't 404 ;) (#1348)
b8136dd294fcee3ad491d755454a06146822833a,"Don't resume animation when system animation is disabled. (#1349)

While the playAnimation() api call respects systemAnimationsEnabled flag, resumeAnimation() ignores it. Add the condition check to fix the case."
d052572d53e4f4bd8f104036c5cdf51badb4d519,"Fixed endless recycler view animation. #1340

Additionally - adjusted ""testPausesWhenScrolledOffScreenAndResumesWhenComesBack"" test.

See more details: #1324"
ec92421db174041e13b2313d4b705967c6bfb71f,Added issue-repro module (#1351)
ea3a2dcb08533671334cb4fe4b72185dae288611,"Prevent removeAllUdpateListeners from breaking the world (#1354)

Fixes #1337"
d9c982ece3a9cb5ec6fe6244ce9087c1ff5ab012,"Include day/night mode in cache keys (#1352)

Fixes #1305"
c51935570494e3c8cb1b263177cbef206033c2d3,"Add nullaway (#1355)

It won't do much right now as most errors are off but they can now be turned on and fixed one by one.
Fixes #1330"
e2b0041a285c08ecb34d4055e66650664aef92d2,"Allow dynamic properties on text without animators (#1353)

Fixes #1342"
ddd1ac0a7f1929d59c4b5bd2a84aa16ca947ef75,"Fix progress calculation logic when the layer is time-remapped layer (#1368)

There are 2 problem on progress calculating with the layer that is applied time-remapping.

If the layer with time-remapping is placed on the way of animation, the progress calculation becomes wrong.
The value that is got from timeRemapping is already adjusted with layerModel.getStartProgress().
If the root layer is started from on the way (LottieComposition#startFrame isn't 0), the child layer with time-remapping is drawn wrongly.
The value that is got from timeRemapping isn't adjusted with LottieComposition#startFrame"
cbd3d55ba78c11ec550792e8ca64ed51bb60112d,Fix rounding-off error on progress calculation with time-remapped layer (#1372)
036224ff7116c870eefe20397f9caf17ff4f8b23,"Fixed render mode (#1377)

This change (https://github.com/airbnb/lottie-android/pull/1190) was supposed to revert to software rendering when the device can't allocate a hardware buffer large enough for the animation. However, this would also trigger before a composition loads and the view was set to wrap_content. The width and heigh would be 0 which would cause Android to noop the drawing cache. However, the previous logic here would think that the drawing cache failed to allocate because it was too large.

I also added some systrace markers and added a default animation view to the issue repro module.

Fixes #1374"
5e12628a0ded9eb37473a3b7b54d0cccf8ef86be,"Fix rendering issue of translucent object overlapping (#1362)

As mentioned in #223, #606 and #902, there is a problem that when some translucent objects are drawn in the layer, they are not drawn as expected.
Fixes with off-screen rendering with minimal performance overhead.
In addition, make this feature toggleable to minimize the impact on the existing environment."
9c71373c0dc6352f35842309764ef199eaf3bf8b,Remove unused code #1380 (#1385)
8215f5de8620b409e9e8c9a474094da4c9898cde,"Add a fallback resource when compositions fail to load (#1350)

This may happen either with invalid inputs or when network loading fails."
2fb3143fb54b9f65d0bf7d2ad5667f0a77147117,Fix build (#1403)
1d8eb6a60bee43066a76a89efabb658de2c41bd8,"Always use original context (Activity) when obtaining cache key and resource stream to correctly load and handle raw-night resources when the dark mode is on (#1361)

Application context isn't reliable source of information about dark mode (uiMode is UI_MODE_NIGHT_NO when the dark mode is on - Activity carries the correct information) and can incorrectly return default resource instead of the -night variant.

Fixes #1305"
3e6c56d9aac17fb277196f0313ee53ef27016263,"Add sourceJar task. (#1406)

Make it easy for user to build sourceJar file at local environment."
3aebde47f27336a231bfe850a6560060ccccbd75,Filter out empty environment variables (#1409)
e8048147c8ed33254bb603ac1d8b52649db5b205,"Early return for GammaEvaluator.evaluate() (#1397)

If startInt and endInt are same valule, the method always returns startInt (or endInt) value."
2786b1d5c66c02b9c219b57e7d1724badd5281ce,Prepare for 3.1.0 (#1408)
6e915173866200ba3fbfc2dff45c85d7ed6529f6,Prepare for 3.1.1-SNAPSHOT
1b5057217421430a6ff07c3dfcce947a3271a4f7,Updated issue templates and funding file
3cf8ff4e79abefeb18dfa0c5d73ed72bfe5318b9,Updated issue templates
3a5d706bad862a4eec9e3b4bc10a0c693077987e,"Improve testability when systemAnimation is disabled. (#1420)

- render the very last frame.
- call animation end in case app listens to the callback."
9abda9fd97800d02897513a7a19bb3f050e02bad,"Support ScaleType.FIT_XY. (#1418)

Fixes #801 
Fixes #1384"
fb2b6cbf9f09e57debd14eb22bcab8d5206054e0,v.3.2.0
63ad54bb6881900c27dbb345874c0919abf07e0a,Prepare for 3.2.1-SNAPSHOT
da96f5c8d8d1ef530d6632e94a42933a739786a7,Prevent a NPE when creating LottieAnimationView (#1434)
c0f723b4b540aeb28fac00c484bd2d43871fc259,"Fix NPE when set ScaleType in xml. (#1433)

Fixes #1432"
1ca49d3cb45f12600e0d849bbf38c44bdb5f652d,v3.2.1
69b9b53bc49aef9bcd6ee6a9e8e4fd0a7596a99e,Prepare for 3.2.2
9b375440adf3a8c89e4cfaf7f4ddac03ca5f698d,v.3.2.2
a92b460cc4bc73b7fc338b897f0a8f1331d19cc7,v3.2.3-SNAPSHOT
1e3f4130977f6e5d1ede8588a79430e84b2bf57b,"Add KeyframesWrapper to improve setProgress() performance (#1426)

To improve performance of BaseKeyframeAnimation.getCurrentKeyframe() called by setProgress() of BaseKeyframeAnimation who has only one Keyframe, SingleKeyframeWrapper was implemented with KeyframeWrapper interface.
At LottieLogo1.json, processing time of setProgress() was reduced about 70%."
d20ca24f95c678544eda7b2c7d9545a366ac1da1,"Add support for mask mode none (#1440)

Fixes #1427"
a27c48bcec35dab7619673905fa578f957e325d3,Add Duolingo to the readme (#1441)
c302150c8ccb52595a6c3bf68a9d3068af766a19,Solved TODO of Utils.getScale() (#1446)
c1a967d03e5e6b5d9a5a5cf824e14c8ad7cca2d2,"Save play state in SavedState even if view was detached from the window first (#1442)

Test failed before but passes now

Fixes #1428"
639bebab349b07bc241d0361b8038e4f50a38c2e,"Add a safeMode API (#1449)

This allows you to wrap draw with a try/catch for specific problematic devices. Please read its doc before using.

#1422"
2c4530bd6e69917a6dd99c98b13128232de71023,"Add setMinAndMaxFrame with 2 markers (#1448)

Fixes #1395"
8d676e1f08a99d18e1d09fa347435e3ff476c27c,"Added a dynamic property for text size (#1447)

Also made DocumentData float values to be more consistent with the rest of the codebase.

Fixes #1421"
ee942249214dd6bb1540b746ca0b678a6382b5ee,"Add the ability to set custom cache keys or set non cache key (#1450)

Fixes #1289"
329a515751c1cacc1aca1819bb17483d9b7624a8,v3.3.0
a974e2d8a0504da48f135a222189b3fcf73d1071,v3.3.1-SNAPSHOT
b5fbe0f5877132bae66316b2d4e80b7bf73d08c9,"Fix opacity used in save layer (#1458)

contentPaint.alpha is changed multiple times without reset it back. This will lead to Utils.saveLayerCompat call with incorrect alpha.
In our case it should be 255, but if last mask was applied with 0 alpha (e.g. in applyAddMask), next draw will be transparent, because layer will be saved with 0 alpha.

Fix is to set proper alpha before saving layer."
085a7cf8f629a3a15848657aa9f40b28febc0fed,v3.3.1
4c8ec85f6820cf0134bbe6725f05c90ea0424a32,v3.3.2-SNAPSHOT
8b606cac676575d7f9d207b1fce9643685e00499,"Add unit test for XML initialized Lottie view. (#1437)

To prevent issue like #1432 from happening again, add a unit test to verify the Lottie view initialization process via XML.

One nit of this PR is the XML test file is included in aar. If there's better option to exclude it from release package, please advise."
9298ee2a1c165761346fce10650eafea50f2dc8d,Fix the build and upgrade dependencies (#1473)
cf19d4be2ac21285c0443cb666d449f53a6cea14,"Fix progress for ValueCallbackKeyframeAnimation (#1469)

Progress was not getting correctly set for value callback animations which made it impossible to do dynamic calculations based on progress."
353c83496b950711a04439bf1fbef5cfb4c5ea3e,"Clip interpolators so they can't loop back on themselves (#1471)

Fixes #1457"
8a115534e559b2baf9343ac7f0ef019b0b2e94e6,"Remove value callback animations when they get overwritten (#1470)

Fixes #1464"
257d1a52d96b0520be8c3ab1c21ef3b487abf4a2,"Official Gradle Wrapper Validation Action (#1493)

See: https://github.com/gradle/wrapper-validation-action"
9660f061fb5b4c0ea02c9c854f94613b1b65314c,Change bodymovin url to lottie-web url (#1499)
081da44146a1e892effc6be8899fed496a4973ad,"Fix time stretch and time remapping when there is a start offset (#1472)

Fixes #1454
Fixes #1456"
8f9848ad81adba4e8534ac88f237ee81987b3652,"Always notify update when a composition is set (#1501)

Fixes #1498"
58b6b758b27c0a8388659112eb10e0be22d2a71c,"Two cache fixes (#1502)

Add the ability to skip the network cache
Add the ability to clear all Lottie caches
Fixes #1289"
a709ac66770b615e862e5ee444afdb3c1481bdbd,"Accept alpha [0,255] (#1503)

Fixes #1478"
e82e63c79fbdeda06b7a9caeb870872583e0801b,"Ensure ImageView updates Drawable bounds when not using LottieAnimationView (#1504)

Fixes #1492"
0ca5227776c9057911ffdbc8448f7fbfd441b38e,"Properly clear canvas for masks pre-Pie (#1505)

Fixes #1489"
28f4e5a5087196e2ebb0923bba35c84175b3b39a,"Play, not resume, animation when playAnimation() is called when isShown() is false (#1521)

Fixes #1517"
b56509c83a1025ea714ad90dae3aaae832f554cc,v3.4.0
afaedba3f5d45bfe810c60bd83f85390e76c4f5a,v3.4.1-SNAPSHOT
1330634a058fb32012e190dd1b6dab6c10069674,"Updated LottieSample libraries and Lottiefiles API (#1522)

Also did a bit of cleanup and converted LottiefilesFragment to epoxy-paging."
708b54b2e3c605cc429906e47015f5a075f54b72,"Add lottieAnimationViewStyle attribute to set a default style in themes (#1524)

Fixes #1523, with an enhancement."
848a86cd84976aae8a1bdd49aac9859523cfca7c,Fix tests (#1563)
b7bd15c7a7bbd9f0f576170937b11a69be485527,Add COMPOSITION in KeyPath to target root composition layer. (#1559)
1d4652804c145b11e3e0fb89c28f8e62cb1e50b4,v3.4.1
6e3928471e829b47c21d4678aa3ab9047fdcf2df,v3.4.2-SNAPSHOT
617334ba6fe3dd2581d34459ab5f1449ffd9d831,Fix typo (#1579)
65ec4f568182e240457e8191a8c617f887d1c009,"Disable hardware rendering for Android 7 to avoid native crashes in libhwui.so and libc.so (#1586)

Co-authored-by: Orit Malki <orit@yokee.tv>"
e119d053a3765eaf886f9ffc5dc533a19c78c4f3,Fix typo (#1603)
937f5352229db1034c46e7be4e48fdc90ef0b65e,"Fix crash of sample (#1589)

Fixes #1580"
dfe7ced2cade8c94991ef9712787cd6c7e88e94a,"Fix blinking black in multithreading mode (#1575)

Co-authored-by: Nikita Bukhal <n.bukhal@corp.vk.com>"
7297d96c97566dedaf556407be732cfa41887218,Enable xml preview in Android Studio. (#1572)
2d5ca7184c7d0fb805c41825ef4ccd0507250f14,"More leniently parse opacity (#1613)

Improves support for Telegram animations

Fixes #1600"
8e6b39a7a18af9adff97eb7b8a782ec5a9cf147d,"More leniently parse colors (#1612)

Fixes #1601"
ba6d6ee11822e55571ce6e7864ca361b677d5bae,Switch to GitHub Actions (#1616)
ae9317b3f6e7fc2818ea1d50cc798cafd3188461,"Add cacheKey to LottieCompositionFactory call (#1617)

Fixes #1556"
bb518009c47b5f93d505d86f6365404f822033bd,v3.4.2
6ebd653e7d16896df1964f7861de75b48e82dcf7,v3.4.3-SNAPSHOT
752f9cdc71322248a67aba29b8500a6d0bab5681,Remove extra space that was breaking link (#1618)
3462d78dbddadb6a8d44c45a0d2eb7e93e72b049,Update deploy_snapshot script for GitHub Actions (#1619)
0bd4fa3defe42fa876f47d39c0e0cc8f45320acc,Update deploy snapshot script (#1620)
2b9ef30372321022bf6ffa328b34c609a0efa027,[CI] Add env inputs to deploy step (#1621)
6e90fe5454c538d25c54139656ccc0667df4c3aa,Fixed some typos in the CHANGELOG
1e40a1ffb5f744cf7ee92f8c06192de27218c937,"[Sample App] Modernized sample app (#1622)

Upgraded all dependencies, migrated RxJava to coroutines, and ViewBinding"
06274f494053255abf62577a84cf31cc57a00c4c,"Clamp gradient color opacity (#1636)

Fixes an issue where color positions that came before any opacity positions in a gradient color array were interpolated to negative values, throwing off the conversion into a color."
f5517cd29b8ee5b3c60a7e27d97f4e8ee5088027,"Fix scaling and tracking for dynamic text (#1635)

Close #1183. Close #1310.

This has a couple of related bugfixes.

Fix the scale/positioning of the text relative to the parent (from PR #1583, thanks @pikaMouse)
Include text tracking values in the line width used for text alignment
Scale the text tracking values based on the font size rather than the parent size (parent size adjustment is already handled when we're calculating tracking values)
Include all bytes for multibyte characters when calculating canvas offsets for characters."
a110c30b3c5c17d06b534e7a4667bc6583033580,"Added warnings for unsupportd matte types (#1638)

Fixes #1633"
edb4c2297ed4b1e2b22f4a3269617d2b7a0ff363,v3.4.3
516f87cd52f5de5c0f616b46e9a622f0e1fb78f8,v3.4.4-SNAPSHOT
6e189af80d3034d48bd5a1cf32ab52de0117da17,"Clear hashed gradient objects when a new value callback is set. (#1639)

Fixes #1608"
18bbe72caa7c0f2368cb72ddfccc33ba85a0348f,v3.4.4
ae030bb5aa76b35901411c00ac384081e1d88510,v3.4.5-SNAPSHOT
81b4e7873bd00312775a34c0ab9a2a3d2a641ae8,Added LottieConfig with NetworkFetcher and NetworkCache customization  (#1629)
b27f6d32cc10580c95019df82a9b606b1c5e49f0,"Initial implementation of Lottie Compose (#1652)

This PR kicks off the work required to use Lottie with [Jetpack Compose](https://developer.android.com/jetpack/compose).
The API here will almost certainly change over time but I feel confident that this is a solid starting point with which to begin further API discussions.

The three primitives are:
* LottieAnimation: the `@Composable` that does the rendering aka replacement for LottieDrawable or LottieAnimationView.
* LottieAnimationSpec: a specification for where an animation should come from, whether it be from resources or the internet.
* LottieAnimationState: the current animation state (playing, progress, repeatCount, etc) and the ability to control the animation(start(), stop(), etc).

Its most basic usage is:
```
@Composable
fun MyComposable() {
  val animationSpec = remember { LottieAnimationSpec.Url(""https://..."") }
  LottieAnimation(animationSpec)
}
```

Or slightly more advanced:
```
@Composable
fun MyComposable(loaded: Boolean) {
  val animationSpec = remember { LottieAnimationSpec.Url(animationData.file) }
  val animationState = rememberLottieAnimationState()
  onCommit(loaded) {
    if (loaded) animationState.play()
  }
  LottieAnimation(animationSpec, animationState)
}
```"
19cf3f0bc18a03be40106512fae053afd561beda,"Cache compositions loaded by url in memory (#1657)

Fixes #1648"
8a10f96181f892a19c4e56867124741e561b0536,Docs and LottieConfig cleanup (#1656)
d0f006fd28044792216e609035322c86d2d8cb7d,Added the ability to outline masks and mattes (#1658)
d3dd2c87b2ec61b202c9837d1aa7c2a3f61b22f6,"Add support for dotLottie  (#1660)

Fix parsing .lottie files
the dotLottie format  (dotlottie.io) is a zip file with animation.json bundled along with image resources, and manifest

**Changes**
* update zipStreamSync() to handle dotLottie use case
  * ignore manifest.json otherwise lottie will try to use it

* update network loader to check for .lottie and treat it as a .zip

* add support for .lottie and in rawRes
  * use magic header to determine files and use zipStreamSync() instead of fromJsonSync()
  * this has the bonus side effect of allowing .zip files in rawRes as well (which doesn't appear to have been supported before)"
e7bb35e1e44b7f9808f8b985703a54a98c8e6eae,[Compose] Add another overload to LottieAnimation (#1659)
8a978ac459833c0a835c3df1c9a08e9e7c43d963,Upgraded to Compose Alpha 6 and Compose Navigation (#1663)
70fe2f89fa118045fdade501c289bd6182742ee9,"Add Animator.AnimatorPauseListener support (#1662)

Resolves #1644 by adding methods to LottieAnimationView and LottieDrawable"
348b604e9e3f39733dbf59fec5440e450169bb20,Renamed LottieSample to sample-compose (#1669)
c5261b83ea3f57f1fc20df84467b0e7183dab26c,"[Compose] Added more functionality to the player and sample (#1670)

Added apply opacity to layers, outline masks and mattes, and enabled merge paths by default. Also fixed some bugs in the sample app and added the ability load a file from a url."
97286e34cfbb401bab4c813f9efb40cf93452f10,lottie-3.5.0 and lottie-compose-1.0.0-alpha01
82a7bb6d7b5fa29ccea971709ec194b62bcb93a2,"[Sample] Fixed a few bugs in the sample app (#1674)

Fixes #1671"
74254b4b8d40327f4dd07741344ea9d128a23db6,"Add open_collective to FUNDING.yml (#1677)

Announcement:
https://medium.com/airbnb-engineering/continuing-our-support-of-lottie-open-source-community-9e50e66ebb04

Documentation:
https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/displaying-a-sponsor-button-in-your-repository"
900b1fef823e5958136e2dd901fb4ca9dc91a8ec,[Compose] Upgraded to Compose alpha 7 (#1680)
08691b27335a345dc1437ae5ff9b4b2422758dfe,Fixed lottie-compose POM dependency
f0d830a58e19be94c271c25c7bd8a57c34bbf51e,Compose 1.0.0-alpha04-SNAPSHOT
7384bf934629d7dd0bc95092c0f7e06f60e6f9d3,v3.5.1-SNAPSHOT
5e9119ec5a2a756e68d7704f41235f8a87ef0067,Fix lint (#1684)
6259afbd530ba3352f613608b526a5b52b5f14db,"[Compose] Cleanup (#1685)

Some cleanup from a code review with Leland Richardson"
6ac86a7e4dff12308bb2100feb510687cc30049c,"Display last animated text value (#1689)

When using animated text, the last value was not shown. Issue can be reproduce with this json: https://assets7.lottiefiles.com/packages/lf20_fteywrno.json

Co-authored-by: Frantisek Nagy <frantisek.nagy@erstegroup.com>"
2cf9b8501c0ae3b1875577e002ce758875c1f04e,Add more info to setMaxFrame docs (#1690)
3afc72c60b9880a011f21ed91fee459fe33880cc,Use the correct env vars for uploading snapshots (#1691)
da74b6c13701496af0afa00a927a38a9be7bee78,Fix snapshot uploads (#1692)
8d80e6361c2e6cc746e41cc6b6af3dad3e6e8504,[Compose] Upgrade to Alpha 8 (#1695)
c24f581d277924ade1ec0939465ea76ece08a05c,Compose 1.0.0-alpha04
517ce461d31337c0ad163e06bba7b6b769a2489b,Compose 1.0.0-alpha05-SNAPSHOT
43679e313eec2d3104e51fc453541c8633c70f84,[Compose] Upgrade to Alpha 9 (#1699)
4bebcd9c2f38461090fc068d1b488ca87d780029,Compose 1.0.0-alpha05
937148baf9fff6ca593a3b3d3d382020dbcab8ba,Compose 1.0.0-alpha06-SNAPSHOT
5ebcdcf44bdbb1fc2663cab043208c06ab3eec8d,"Reset LottieDrawable when setting the same composition a second time (#1703)

Fixes #1696"
9b0857df91aa7e81e649c05cc33a596ed8afb19d,"Don't render masks or mattes of <1px (#1704)

Fixes #1625"
adb331b1a911bfe27a778870102e302335b68e17,Cancel animations when LottieDrawable is unschedules
3f855d9ed63ccf953d0a9c4bb200c6ef5b13af6b,Minor cleanup to the issue-repro module (#1707)
4ff1ebba2e7962dcf8c7d91c0961124067a15665,"Add support for color state lists and theme attributes in color filters (#1708)

Fixes #1551"
7d8b5def510aa3e2dacf33761dacd9438f669b65,"Allow targeting mattes with KeyPaths (#1710)

Fixes #974"
accd634bd25588e4f0ef90c83194e54291e274a6,"Allow points to have independent X and Y interpolators (#1709)

Fixes #107"
5038e4a7ea4e46d150b15e34bbf02675005188ed,"Wrap lazy composition tasks with a null check (#1711)

I can't figure out why this would happen but if it is happening, it's better to potentially have an undesirable animation missing some lazy composition tasks rather than crash.

Fixes #1702"
d93942341f6c01bed6fce158e5f2e71c85e42c18,Resume animations if the drawable gets reset (#1712)
8bed98c276192350c02d83e98895054939afadc5,"Allow controlling split dimension transform positions with dynamic properties (#1714)

Fixes #1645"
c9c920340bf2f458b49120f1ef5ca519448c3f00,"Don't set LottieDrawable bounds from within itself (#1713)

Drawables should provide intrinsic bounds to its consumers and should respect the bounds set on it. LottieDrawable was not conforming to this because it was settings its own bounds to the composition bounds. This caused issues like that reported in #1542.

Fixes #1542"
b277b57fb21f19afefa0076fe3772a166de7a71a,3.6.0
a71a9fbb5042de5610758654f05b3d4f09599399,v3.6.1-SNAPSHOT
1d3fca2fbb1aee5c3ad2926a21d55b59bb032549,Cleaned up some javadocs
03760ad2004b8c22cd1b4892f40c3e40bc296aa7,[Compose] Upgrade to Alpha 10 (#1728)
5989f6777d481a8c833578bb399f2c149e7c65b0,"Fail quietly if ImageAssetManager fails to decode a bitmap (#1729)

Fixes #1718"
2ccdac06f95f68752abdede79770f5a8904e7e12,"[Compose] Upgrade to Alpha 11 (#1732)

Upgrades Compose to Alpha 11!
I migrated some deprecated APIs, mostly related to effects. Also wrapped the player controls and toolbar in the AnimatedVisibility composable so toggling focus mode feels a little less jumpy."
0d6dd816a37f9c3b3f5a3f6cf4ce0f6550db26ef,"[Compose] #1733 Add Snapshot Dependency Documentation (#1735)

Fixes #1733, also see airbnb/lottie#151

Adds a bit of information about how to include lottie-compose snapshots."
2719be7d0f2abc20f745d90ec519c3415f48c04e,"Ignore unscheduleDrawable when updating a composition (#1737)

Fixes #1727"
d230cfd784f7fa92e3c1cfd1f51892582a304d90,"[Compose] Upgrade to Compose Alpha 12 (#1743)

Also upgraded Mavericks and Dagger in the compose sample app"
446d588db77bf2c2b42a7fd69be1371a71929dcc,v3.6.1 and Compose v1.0.0-alpha06
67f3af1d30fe05d1b6e46d1346e136446f8acf7e,Updated changelogs
4b69bc1423e6423d7e5ddd4281c5ffef5b0e115f,"[Compose] Add merge paths flag (#1744)

Fixes #1734

LottieAnimationView had merge paths disabled by default, but LottieAnimation enables them by default. As long as merge paths contain known bugs, I think it makes sense not to change that behavior - what do you think?
I added a flag for it to the state. If you want, we can add it as a constructor param too, but I feel like that's not needed as it's not that commonly used."
033be0df698371848a622e73e864919fc51989d2,[Compose] Update to Beta 01 (#1748)
c1152c6265c28a59219712c17fe00fb03281ebd8,v3.6.2-SNAPSHOT
81ad033a2d8b4cefd64adb15da7b326cb90679df,[Compose] v1.0.0-alpha07-SNAPSHOT
0809f914480996a6ec2568c280eeeb5c3577dc78,"[New API] Added override for system animations enabled behavior (#1747)

Allow overriding the default behavior of respecting when system animations are disabled.
XML: app:lottie_ignoreDisabledSystemAnimations=""true""
Code: setIgnoreDisabledSystemAnimations(boolean)"
88f7b59525f34d2c7ec2b2af9f7afbd79ebec6f1,"[Compose] Update to Beta 02 (#1760)

We can't upgrade AGP to 7.0.0-alpha09 yet because of https://issuetracker.google.com/issues/182468430"
e38ca5c0a6f661dec1603773c61c2867dfb6625f,"[Compose Sample] Mavericks and Navigation cleanup (#1763)

Use the official mavericks-compose artifact and pass in NavController rather than using a composition local."
dcdcdec2a2f2812eecdd7576b088d86874cf4081,"Check in .idea files and reformat Lottie Java code (#1764)

The Java code style was never checked into the repo which has led to some inconsistent formatting. It is now checked in and I ran the formatter on the core lottie module."
f2cd59c4f1538ba08e800e841fc9151f1e71b2f3,"[Compose] Swap Modifier order (#1765)

This makes LottieAnimation modifiers behave as they are supposed to given the Compose guidelines

Fixes #1761"
4deb885590cc61d8b857b94144973e0071299134,"[Compose] Add support for images (#1766)

Because this requires a new Lottie API, this will only work with a 3.6.2-SNAPSHOT or newer.

Fixes #1730"
8ed95695211c5e5aa9cfd027cbcf32bfba9edbb3,"Prevent duplicate positions in gradient fills (#1768)

Fixes #1675"
8d0ea7d98bbd8a83d81ffed1d4f5febb9009cac4,"Add support for jpgs in zip files (#1769)

Fixes #1767"
7900ebc32a55a09c52d1fd4b184e920c81936e63,"Improve animations exported with Flow (#1771)

Flow exports split keyframes with single values for control points. The intention is for you to use the same value for the in and out point for them.

Fixes #1750"
c50f672cbf0ce3ebbfceb8309a9c20c42b5120fe,[Compose] Beta 03 (#1775)
41d741e836a019ad3d574d361eca74e7c038c7d7,"Update to AGP 7.0.0-Alpha12 (#1776)

Fixed robolectric tests."
336effb2de6ba8b8f68acabcef4ed685155398f4,3.7.0 and Compose 1.0.0-beta03-1
ad6e59192e41ce7a51dfc583bc344504bdf48e30,3.7.1-SNAPSHOT and Compose 1.0.0-beta03-2-SNAPSHOT
e8edca26669f7a861ef785bcbc90b4591f45f6a0,Upgrade to Compose Beta 4 and other dependencies (#1786)
8efdbd7e345ee6c6c9cd5b5fa61c9ba107e97036,Upgrade Dependencies (#1791)
188dee2cb37d5092ce6c4c91719f1bd9890b2a08,"Made TextDelegate.getText public and updates its docs (#1792)

Fixes #1774"
4b0eca2d4022f74de0301188bcc8a3f732194c7c,"Revert ""Fix copyright ownership"" (#1804)

This reverts commit 7b5e052ca3964dccad1aabe7c147f9191122aa0f."
43f560a22a1539489920d7e1064ba9cfead21e8c,"[Compose Sample] Add bitmaps and dummy bitmaps to the sample app (#1796)

Now, when an image is missing, it will be rendered with a gray box"
90b37098b6bccda371bf0a1e810ce1611959284d,"[Compose] Upgrade to Beta07 (#1809)

Fixes #1808

Separated the upgrade from #1793 so the larger PR can be more carefully reviewed.

After this lands, sample-compose will be broken until mavericks-compose for beta07 is published but getting the lottie artifact updated is more important right now."
a256638d2885a06eae72f1b3c1148610e2d779ba,[Compose] 1.0.1-beta07-2-SNAPSHOT
875cecc395936962c8782193c8e2a98b4b4f46ba,Fixed a bug in time stretch (#1818)
17e40388c0e1431238cb04e1f6bb1f6e15cf7271,[Compose] Beta 9 (#1826)
a30a2ab145393f3d19de3409e633fed9df7cf3fd,"[Compose] Breaking Change: Major Compose API Refactor (#1827)

This PR is a major update to the Lottie Compose APIs.
Notable changes:
* LottieAnimation composable now just takes a composition, progress as a Float, and base properties such as ImageAssetDelegate, mergePaths, etc.
* Animating the composition can be done either with a manual animation, gesture, etc or via the new animateLottieComposition() function or LottieAnimatable class.
* LottieAnimation contains overloads that make it easier to just pass in a LottieCompositionSpec or animation parameters and under the hood, it will wrap lottieComposition() and animateLottieComposition()."
34dc62322962b6ba8e7bf0d1a7248162ceecf775,"Use app context in NetworkFetcher (#1832)

Fixes #1798"
dd5ff8fb0815b98d79804af625c0e47a7b68489a,"Upgrade Compose to rc01 plus other dependencies (#1834)

Had to fix a Lottiefiles model because it was NPEing calculating the hash code on a field that wan't being used anyway."
7150c6640efcf523519adce2754140ce9f1f341d,"[Compose] Added the ability to set dynamic properties (#1831)

Example usage can be seen on DynamicPropertiesExamplesPage.kt.

Thanks to Compose's impressive snapshot system, states that are read during the drawing pass via the dynamic properties callback are automatically registered so invalidation happens correctly by default."
1d7f556ea4c2561e7088adc5bd2d8b9b7f765f01,"[Compose] Updated images API and add an option to not cache compositions (#1836)

Removed the existing imageAssetDelegate parameter and moved imageAssetsFolder to rememberLottieComposition. Images are now loaded from assets or decoded from the base64 string embedded in the json file during parsing and on the IO thread pool rather than upon first render on the main thread during animations. If you want to supply your own animations, call composition.images[""your_image_id""].bitmap = yourBitmap. This lets you control exactly how and when the bitmaps get created and set. The previous implementation of calling a callback on every frame encouraged the incorrect behavior of doing IO tasks during the animation hot path. Check out ImagesExamplesPage.kt for usage."
6ab1d035db5ec3179860c5018dcc09ce53456a09,"Add jetbrains maven repo and upgrade the publish plugin (#1839)

Let's see if this fixes the deployment issue
https://github.com/airbnb/lottie-android/runs/3002049947?check_suite_focus=true

May fix #1837"
67662ffd8b65bcd449fcca82ea2863a852994fef,v3.7.1 and Compose v1.0.0-rc01-1
5a0a867887fbfa4af2d1d4710a5a0f596e2dfa59,v3.7.2-SNAPSHOT and Compose v1.0.0-rc01-2-SNAPSHOT
79cc077e4ba6dffc08bfea66755cb02166bfdea5,[Compose] Upgrade to rc02 (#1843)
f6a75698e7c6438792d30ec76403aa7505f9ef8e,"[Compose] Allow setting and remapping fonts (#1842)

This PR adds 4 APIs to load typefaces in lottie-compose:
1) Using default paths. Fonts are in /assets/fonts/FAMILY_NAME.ttf
2) Overriding the assets subfolder or font file extension
3) Remapping family names to font files in assets
4) Dynamic properties

The dynamic properties API can also be used with lottie-android."
954f7d5d3ed2e3f9d543e2daf720836e2dc11ece,"[Compose] Add support for ContentScale and Alignment (#1844)

LottieAnimation's behavior now perfectly matches the behavior of ContentScale and Alignment in Image."
e2aaf91b150ad05e65f52fb72071622e545c368b,"Add cancellation behavior to animateLottieCompositionAsState (#1846)

I added the option to set cancellation behavior on animateLottieCompositionAsState instead of relying on the default value from LottieAnimatable.animate. It's a pretty useful setting that allows me to easily implement my loading animation that includes success and failure transitions."
194d96df4d50d5c4376a6547f72698e81abb28d0,"[Compose] Allow custom cache keys, dynamic properties for images, and remove font remapping (#1847)

This set of changes is all around composition caching:

1) Increase the caching flexibility by allowing arbitrary cache keys.
2) Remove the cacheKey parameter from LottieCompositionSpec.JsonString because it was ambiguous with the new cacheKey parameter.
3) Add dynamic properties for bitmaps. This is helpful because it allows you to set a bitmap on a single LottieAnimation without overwriting the bitmap for the cacheable LottieComposition.
4) Removed fontRemapping for rememberLottieComposition because there was no way to know how to handle caching. Instead, dynamic properties can be used."
4373eba71309bf437f80daa6692058132744cf33,[Compose] Ensure LottieClipSpec is always respected (#1848)
dd34e8adae0811bd40a4efbfc65555d96e51030e,v3.7.2 and Compose v1.0.0-rc02-1
a062a5365562c89702b06be1021d132099fea325,v3.7.3-SNAPSHOT and Compose 1.0.0-rc02-2-SNAPSHOT
7e44570f203f516185be88c09b6eaa2bddf5afc3,"Fix loading animation (#1852)

Initial loader would stop after a Single iteration."
de7515dce3387fef997cd3afcd1c93eed9a837f6,"[Compose] Make LottieCompositionSpec an inline class (#1855)

Also update to rc01"
cead08d81744ec3d3081917402f8593d6d9b5d95,Bump version to 4.0 and upgrade Compose to 1.0 (#1856)
73c28977411ebee91e5f9c79afa20a035d950bb1,4.0.1-SNAPSHOT
cf45385380ac661cbc83bc9da28540153b368bf7,Fixed version in CHANGELOG (#1858)
c52e752ce93b27af56483dce23600d5edb587a14,Added support for gaussian blurs (#1859)
ea36953ccbe9a5b0b8cf0fa755a4ada711031cfb,"Fix blur scale (#1861)

Fixed empirically. Probably needs more tuning though."
7d80f43caeb1822a1a34e361b2708a8ba01bb745,Added support for drop shadows (#1860)
1c797b75d2229748c7b5b24427ffa0b82d33b53e,v4.1.0
432f3646d3126a7b9fa8645dc7bf717f07390886,v4.1.1-SNAPSHOT
ee795bfb8ef086f9d9911bf676ca08e3107f9cbb,Disable deploy action in forked repository (#1871)
677430275580cb2ff8cea07bf082f74a38849a5e,Update dependencies (#1874)
dd50d87cace3ca833b87deaa3ebfa0e4cb03ecf9,Update github actions (#1875)
74d5544dafd0aa6a97d0199d91d222db700af6df,Updated README
cc28f592cfa793535a838d59ed93f90c1af8ba55,Updated README
7c3dfc071785686ff8cf62f81a93541960e54fff,Bump gradle to 7.2 (#1872)
05cb71817682b2f5361af5b98fb4a0bf2fdc82ae,"Code cleanups (#1876)

Remove unused imports.
Use proper syntax.
Add final & val modifiers.
Inline variables.
Simplify conditions."
6cb5440c771b13d4d60e0e6d2df9969785446161,"Downgrade espresso and AWS (#1885)

#1874 broke instrumentation tests:

Espresso broke with this erro. It can probably be fixed by upgrading androidx test core but then there is a dependency conflict error which can probably be fixed by upgrading androidx.fragment:fragment-testing but there isn't a version of it that depends on test core 1.4.0.
The upgraded AWS SDK returns multiple status from the listener which caused the await continuation to be already resumed. I don't have time to debug the full behavior change and the old one was working fine."
749e3491c912e97578a63f41fe0cf0247839b8aa,"[CI] Only run validate workflow on pushes to master (#1886)

Fixes #1875. After this change, workflows were running twice on PRs."
c8c699714cd62766e04d210d0ceabf40e2ba2b9a,"[Compose] Parse LottieComposition synchronously instead of using LottieTask (#1888)

Using LottieTask under the hood incurred several extra thread hops including a main thread post. Switching it to a result like this is both faster and also enables custom factories to be used. From my initial tests, this cut the parse time for the heart animation in the repo roughly in half.

Unfortunately, LaunchedTask takes a few ms to start. I tried with rememberCoroutineScope().launch and the initial delay was the same so I'm not sure if there is anything else that can be done here.

Fixes #1880"
8947be8fa582d8a55ac0b568ed14db5dcea6c1ae,"Revert ""[Compose] Parse LottieComposition synchronously instead of using LottieTask"" (#1890)

Reverts #1888

This was not a good solution. It lost task joining so requesting the same animation multiples would parse the animation multiple times."
ac17e0f977ad8f59463bb96085937923db6e862a,"[Compose] Warm the task cache before LaunchedEffect runs (#1891)

This builds on the revert in #1890 and leverages the task joining behavior of LottieCompositionFactory to synchronously initiate the task when the composition first runs so that it can then be joined to immediately retrieved whenever the LaunchedEffect runs.

Fixes #1880"
962d5d24a50aca563cb0414db6a0439d4a43eb32,"[Compose][Breaking] Constrain unconstrained sizes to the composition size (#1892)

Before this change, LottieAnimation would fillMaxSize() by default. this isn't really expected. Now, Lottie will set its size to the composition size. This is still compatible with fillMaxSize() and all other constraint modifiers.

Fixes #1866"
2a1a10e89ce83448df7a5af7aaf0040dd8ed7336,"Upgrade maven publish plugin (#1893)

Fixes #1865 due to a typo in the maven publish plugin
vanniktech/gradle-maven-publish-plugin#252"
824683afb310df98ee793651bb0ca359b25af7b6,Add .gitattributes (#1873)
565298c8159de60c5b9a1026e0723bdacd23fe65,Update publish env variables (#1894)
8743922b838553e5c11f8d231c1b053f72405220,Another attempt to fix snapshots (#1895)
315ac568ca0cc3f37b64dea882821fd5f892d13b,Fix publish credentials (#1896)
12748d4d7a41f1a7797819334538fe52261779a5,"Enforce order of operations to avoid rounding errors (#1897)

Previously, the calculation of endLength could suffer from rounding errors. While most of the time, these errors are not a big deal, when the end value is 100, this can result in endLength being larger than totalLength, causing unexpected behavior where the animation reverts to an initial state when it should be showing the final state. By forcing the order of operations, we can get the answer we expect / need.

Co-authored-by: Scott Weber <sweber@duosecurity.com>"
ea5cd72eb8c67db880ea82d18f64cdb0e5fb9a4e,"Optimize gradle & Remove redundant .gitignore files (#1877)

Co-authored-by: Gabriel Peal <gpeal@users.noreply.github.com>"
c93974ae70e9968a057589c07636143dc0fbaf9b,Update dependencies (#1909)
077cd3dd2868554be3cb36a0474db13d48e26845,Remove codeStyleSettings.xml & compiler.xml (#1912)
fafc17e1f890f06836f4abadd5ca0df28e06607b,v4.2.0
c3dd693140532abb8cae07469aefce4802a18754,v4.2.1-SNAPSHOT
ca98cf2f8efe610c2fe04b2229483077b369a7b5,Upgraded Compose to 1.0.3 (#1913)
8ae55a9b0877036dbebdb75ebf122db377677487,"Removed unnecessary int cast to avoid Integer allocations (#1927)

This pull request attempts to reduce Integer allocations when using an animation that has a ValueCallback to change some colors.

Resolves #1926"
8fd567bd85b5a5b7e84e4925a73664240da8fc65,"Provide a second overload to TextDelegate.getText that provides layerName (#1931)

If multiple text layers have the same text, it is impossible to disambiguate which one you are setting the text for. This commit adds a second overload for TextDelegate.getText that lets you receive the layerName in addition to the text.

Fixex #1932"
aad36c9ffe449172a0c8b978b08b95fc6ce01d20,Fix a typo in the Compose LottieAnimation docs (#1934)
156e48541bf7b7f88278662eef23eec4fe1b24fe,"Fix a few potential NPE race conditions (#1917)

Although me and the reporters are unable to reproduce these NPEs, it's not impossible that they would occur if either:

LottieDrawable's composition is set multiple times from multiple threads
Dynamic properties are set from multiple threads
This adds some thread safety to variable access and should resolve these.
Fixes #1794"
456332497619eee69fcf82a8005ed58c95761a5c,Clean up default errorprone warnings (#1919)
da6cbe3af892f9fe43f1e33b7120fa5fab3fc590,"Add kotlin-android back to issue-repro (#1938)

Fixes an issue in which Kotlin code wasn't being compiled and the issue-repro module insta crashed unable to find IssueReproActivity"
2e91789dc962c709e1d91075445e8da31bf463d8,"Prevent two rare crashes (#1939)

Fixes #1632
Fixes #1879
Fixes #1815"
06571dadac861a34e22d960013da643403b991e0,"Move snapshot tests into their own app and improve performance (#1914)

The dedicated module prevents extra code in the main sample app modules and allows for easy creation of compose snapshot tests. I also found a bug in which the rendering of animations was not fan-in when it should have been. This increased the performance of the test suite locally by ~4x."
da7d284002fccd4226877ea3c4107e2c7246f107,Removed some unused code (#1942)
4a7b81815e5f036a5af493030499fdfc32b06b44,v4.2.1
af9c3b5e8640af14dddeffce437bfd30b8416031,v4.2.2-SNAPSHOT
9e9208111237d2f2df8710936237bbf725ad3d57,"Replaced Paint.setAlpha() with Paint.setColor() to reduce unnecessary allocations (#1929)

Resolves #1928

This pull request attempts to remove ColorSpace.Named[] allocations when calling Paint.setAlpha(). These changes will fix the issue only when using RGB colors."
047019ace9393b3d582f3eb8c64f73e222562ef5,"Improve the reliability of snapshot tests (#1943)

Fixed a couple of race conditions that could cause crashes, extra, or missing animations."
37893c8b2913de93388be35f690a24aa298b556c,[Sample App] Reset performance tracker on each iteration (#1951)
d884a67d525965d369a73659b9a7a0164c7ea06c,"Add x-zip and x-zip-compressed as recognized .zip header mime types (#1954)

Fixes #1950"
0bba13ea34270360f1125259e8a0a3cba825d2b7,"Fix a rare NPE race condition in TransformKeyframeAnimation (#1955)

Fixes #1945"
fd3ddd185f4ac78aa782f946cb08bfe08b601e97,v4.2.2
6d8fd33a1c992d073c14d6e0d632fe5c8b67836c,4.3.0-beta01-SNAPSHOT
3b5387ab6a95e59f6c3f44ba9fd97c986982b33e,"Replace LottieAnimationView layer types with internal bitmap rendering (#1952)

This change marks a significant change in the underlying rendering pipeline for Lottie.

Previously, Lottie would always set a layerType on LottieAnimationView. For hardware accelerated animations, this meant that a separate graphics layer was allocated for the animation. The disadvantage with this method is that the texture has to be uploaded separately to the GPU on each frame.

For software rendering, Lottie would depend on Android's view caching mechanism in which View allocates a drawing cache bitmap which it then draws to a canvas. This has the disadvantage of the Bitmap always being the size of the containing View even if it's larger than the drawable.
It also abstracts away the Bitmap so that further optimizations. When software rendering is enabled and it has to be redrawn without getting invalidated then it can skip re-rendering and simply redraw the cached bitmap.
It also upstream the bitmap rendering form LottieAnimationView to LottieDrawable which allows it to be exposed to lottie-compose which is important for the same reasons it is important for the base library and wasn't possible before.

While working on this PR, I tried rendering and then drawing only the bounds of the animation. However, I found that calculating the bounds for the entire animation was slower than drawing the entire bitmap (which is very fast).

Fixes #1387"
f38d0df5b1ea7403ad08789955580f8df974852a,"Fix a potential NPE race conditions (#1959)

This PR addresses the issue #1958 , although the crash is pretty hard to reproducible, the enhancement will definitely make it more robust.

The issue was in com.airbnb.lottie.LottieDrawable#buildCompositionLayer method.
The related code is:

  private void buildCompositionLayer() {
    compositionLayer = new CompositionLayer(
        this, LayerParser.parse(composition), composition.getLayers(), composition);
    if (outlineMasksAndMattes) {
      compositionLayer.setOutlineMasksAndMattes(true);
    }
  }
The crash exception stack prints:

Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'java.util.List com.airbnb.lottie.LottieComposition.getLayers()' on a null object reference
       at com.airbnb.lottie.LottieDrawable.buildCompositionLayer(LottieDrawable.java:298)
       ...
As we can see, the exception occurs at composition.getLayers(), but before executing this statement, the LayerParser.parse(composition) statement also refers to the composition object, which was fine, but after that this object had been set to null, thus caused NPE.

I think this issue is very similar to the issues resolved in PR #1917"
3d6f3b2285b4a2e2063a4d575e8a52f3efc38cf6,"Added support for rounded corners on shapes and rects (#1953)

Supports shapes and rectangles (animated and static). Ellipsis and Polystars are not supported but they have their own roundedness properties.

Fixes #106"
c02983a48daea0db4c04040a218be7de62f8c1d3,"Reduce the memory footprint of software rendering (#1973)

As of #1952, Lottie now handles its own bitmaps for software rendering. This was causing an issue for very large compositions. Lottie was creating a bitmap at the size of the entire composition which was often far larger than was needed.

The most common case for this to happen is when people make 1928x1080 compositions in After Effects thinking it's 1:1 with displays. However, Lottie treats dimensions in dp which would cause a 1080p composition to have ~6000x4000 pixel bounds.

With this PR, Lottie will now calculate the largest area that the bitmap can be rendered in given either its bounds, scale, or scaleType and then render a smaller bitmap to a larger area in the original canvas."
fbea07d24136d75e45981db4345f7cc5a9d6b6e4,"[Compose] Use the correct type for dynamic gradient properties (#1969)

Fixes #1966"
a51606cd8116f61923610d1569c05f0460305582,"Don't cache dpScale in Utils (#1915)

It's possible for the screen density to change when moving between windows or screens. In this case lottie renders animations the wrong size. Android already does a pretty good job of caching and updating the system context so just let it do it's job."
e73ad507b87372087c24ec9fd0b6367cfb95ee93,Update Stream attribution link
3ee8813ed7cd43ffc15499b1fd1d377c592cb58f,Fix FragmentVisibilityTests (#1979)
80966783c724dc017c8ddb46a524d60c150015a1,"Update FragmentVisibilityTests (#1980)

No behavior changes but in an upcoming PR, pausing/resuming on attach/detach will happen in LottieDrawable instead of LottieAnimationView. The drawable gets notified slightly later than the view so I've changed the idle resource lifecycle to make it work with both."
7f1e643bd9b573369f3f99332f445b1359378632,"[Compose] Add LottieCompositionSpec.ContentProvider (#1982)

This adds a new LottieCompositionSpec option to load an animation from a content provider URI. This wasn't needed pre-Compose because you could get the input stream and parse the animation using that. However, Lottie Compose doesn't provide a direct API to parse an animation from an input stream. It doesn't expose that because a closeable input stream isn't a great candidate to put in a data class and makes LottieCompositionSpec stateful and closeable.

I also noticed some inconsistency in the way cache keys were handled for other specs so I fixed those as well.

Fixes #1978"
67cc7d7ce1350d13181c46a9bded7053dd06c0cf,"Fix Android Studio layout preview (#1984)

Fixes #1974"
adf993f86432fe04f904acd9712c974b1340f63f,Cleanup warnings in LottieAnimationView (#1983)
b1b58d21f89c99a682f4520ef62662b322126afc,"Handle cases in which the Lottie file only has a single color (#1985)

Fixes #1967"
0d1c96f0e10528e34deb9f68cd1f73480e37bb63,"Fix a rare LottieTask leak (#1986)

Also did some routine code cleanup in surrounding code.

Fixes #1971"
c9cb92f1dac0b1ee62267516c6de0590308b2e8c,"[Compose] Prevent infinite Lottie animations from preventing tests from going idle (#1987)

You can see how androidx handles this in AndroidTestComposeRule here.

Fixes #1907"
f79c12f81dd683cb0d509ded37a6bfb8f2d5c5b4,"Move window/view visibility handling from LottieAnimationView to LottieDrawable (#1981)

Previously, all of the logic to pause/resume Lottie animations on events such as hiding a view, backgrounding an app, etc. were handled by LottieAnimationView. This logic works fine for the default cause. However, LottieDrawable had no notion of visibility handling itself. As a result, if somebody were to use LottieDrawable on its own, they would have to get the lifecycle exactly right or else they could risk leaking animators and impacting the user's battery life.

This PR combines all of the logic into Drawable.setVisible. This also simplifies things because it is a single API vs views that have to deal with window attachment and visibility changes.

I ran all existing FragmentVisibilityTests and they all pass and the intention is to maintain backwards compatibility."
b3488622a7606354e514c2741935831012cd53b2,"Add a test, remove an invalid test and add sample animations to the issue repro apps (#1992)"
700aace914a3e8d37e6c43c9f4c3d16cee147e65,"Allow Lottie to render the full animation, even if it extends beyond the original composition bounds (#1993)

Since the beginning of time, Lottie has only rendered the bounds of the original composition. This PR adds a new API to enable rendering the full animation, even if it extends beyond the original composition bounds.

This API defaults to off to retain backwards compatibility.

Fixes #1825"
c5b8318c7cf205e95db143955acbfc69f86bc339,"Add an API to always render images at the original size (#1706)

This allows apps that set custom images to provide images that are smaller than the original image to save memory.

Fixes #1968"
c82ed2f5a4df0846033410cf1360c64052122923,"Notify AnimationListener onEnd when animations are cancelled (#1994)

Lottie now behaves the same way as ValueAnimator in the platform.

Fixes #1963"
ca94498932878b6e46c1cd39cfbc637f0efba766,"Add support for text in dynamic properties (#1995)

The original TextDelegate API pre-dates dynamic properties. Compose only has access to the newer dynamic properties API so this PR extends dynamic property support to include text.

Fixes #1903"
516ecba16679aa9992c17451fa595214a81637bd,Update changelog and bump version to 5.0.0-rc01-SNAPSHOT (#1996)
1c1fe2981367d77ef8057116f92ecea6ca4a66c9,"[Compose] Set merge paths before the composition (#1997)

The correct value for merge paths must be set before setting the composition.

Fixes #1970"
ba067ca43b12494950c8166d7896b51aed8c69f8,"Add getters for Marker fields (#1998)

Fixes #1990"
a226747d159268650ecfc09974eb89891c6ce1b3,"[Compose] Respect system animator scale (#2000)

This will only automatically work for animateLottieCompositionAsState(...) because accessing the system animator scale requires a Context and the coroutines LottieAnimatable functions don't have access to that. Apps will need to manually handle the scale if they aren't using animateLottieCompositionAsState(...).

When animations are disabled, the speed becomes infinite and Lottie will jump to the end of the animation.

Fixes #1906"
f9afa10ed13c2d496a11839803b3334f164af81f,"Improve stroke with offset (#1999)

Fixes #1784"
eac5647f021c58c6338d3c5942d6ba6c264e43d8,"Improve support for Hindi and other languages that use DIRECTIONALITY_NONSPACING_MARK (#2001)

Fixes #1396"
757db12798b6a0e7081faea3bffed7f208fcab0a,"Prevent LottieAnimationView from overwriting user actions when restoring from saved instance state (#2002)

Fixes #1841"
1a4ff2aedf3cea8b52fa9f63e7c32fccb8753eeb,Add support for reversed polystar paths
73b74456412c52706279a539c64d56c59c7ea036,"Revert ""Add support for reversed polystar paths""

This reverts commit 1a4ff2aedf3cea8b52fa9f63e7c32fccb8753eeb."
6725498ff22acca724e89a80a2a48ac82064aef2,Update changelog
1a5f7de98468c6c0750e004ffc7706b062036e6c,"Add support for reversed polystar paths (#2003)

Fixes #1863"
c4fd44d9b7c81f90e548ac4b8d827de97583f263,[Sample] Reformat code and allow null Lottiefiles preview (#2006)
663dd8dbfb77a7f2baf9e43eb2f7a2b44c81b9d0,[Compose] Make clipToCompositionBounds API consistent (#2009)
ad54dde205992851195b3eab4558535f70e98bd8,Add a benchmark that can generate Baseline Profiles for Lottie. (#2005)
6034500d6c52f65b896f221286b69c255f9f7fb6,"Move full setRenderMode APIs to LottieDrawable (#2008)

Instead of asymmetric APIs where setRenderMode is on LottieAnimationView and useSoftwareRendering was on LottieDrawable, they now have parallel APIs."
794ffa58a2e1fa27f016201c1ac7d30f7639c910,Fix clearing dirty flag (#2023)
db4cf41057a224908fe3d352bb8a128ed79480fa,v5.0.1
52be9f49fa04e2b2289860572405ee054ab54a33,[Sample] Use centerInside for PlayerFragment
d3d870b5853098e23c910afc224c795a410e1132,5.0.2-SNAPSHOT
9346684d2cbf3e0cbac57ed0b158c8d1ed4ecc1e,"Check composition exists when using software rendering (#2025)

To reproduce crash, add the following to the IssueReproActivity:
```
binding.animationView.setCacheComposition(false)
binding.animationView.renderMode = RenderMode.SOFTWARE
binding.animationView.postDelayed({ binding.animationView.setAnimation(R.raw.heart) }, 1000)
```

When it tries to render with null composition, `getIntrinsicWidth()` and `getIntrinsicHeight()` return `-1`, and both `renderWidth` and `renderHeight` end up being negative, which results in a crash:
```
    java.lang.IllegalArgumentException: width must be > 0
        at android.graphics.Bitmap.checkWidthHeight(Bitmap.java:378)
        at android.graphics.Bitmap.createBitmap(Bitmap.java:684)
        at android.graphics.Bitmap.createBitmap(Bitmap.java:653)
        at com.airbnb.lottie.LottieDrawable.ensureSoftwareRenderingBitmap(LottieDrawable.java:1452)
        at com.airbnb.lottie.LottieDrawable.renderAndDrawAsBitmap(LottieDrawable.java:1400)
        at com.airbnb.lottie.LottieDrawable.draw(LottieDrawable.java:515)
```
It does not crash if renderMode is hardware.

Fixes #2026"
84458b038039098d084f8b673603d83870403b0f,v5.0.2
490b24122d538186159a28c1f941b28d7f5b5ad7,v5.0.3-SNAPSHOT
a506bc121909e94963bec030964d383ad4d15599,"Use the Apache License Url in the pom (#2028)

Fixes #2027"
5c3c860c0704dc841616ff753c8b5d1b1b5a8e8f,Update sponsors
1effb29e86078676229a94ae917e22144e502d93,"Allow software rendering to be invalidated when dynamic properties change (#2034)

The test case failed to re-render before but works now."
4d65f550b025299709cd481f4ad75ee0ed6ff243,v5.0.3
fa7840e0c21f05c8094884fa18a18ca054a2cb8a,v5.0.4-SNAPSHOT
00a761238af041d14d3d5963fafaa0d4873c0af4,"Fix RestrictTo permissions for the networking package (#2049)

Fixes https://github.com/airbnb/lottie-android/issues/2046"
ca2f8a58f23b603f3cd765d951d8d1efa202ae67,"Support completable animations in Compose tests (#2051)

The change in #1987 to always use `withInfiniteAnimationFrameNanos` prevents non-infinite animations from completing in Compose tests. 

I added a simple check to use `withFrameNanos` or `withInfiniteAnimationFrameNanos` based on the number of iterations. This fixes tests that wait for animations to complete, see sample `WalkthroughAnimationTest`. And `InfiniteAnimationTest` still passes.

Let me know if I'm missing some other use case."
bda22a1c6fa26926cb8913ba7a809a37c4e8a305,"Fix references to Store in Code of Conduct (#2057)

I assume these were copy-paste errors, so I just replaced the mentions of Store to Lottie, since I assume that was unintended. :)"
318b8ea21c220924b2f65ebfcf43bb225acbce5e,"Fix LottieDrawable#start for non-View callbacks (#2056)

Previously, the start function would be a noop if your callback was something other than a View instance.

With this change, if you use a non-View Callback (such as a Drawable), start will still call playAnimation; if the Callback was a View, it must still not be in edit mode to call playAnimation."
0f0bc6f028b98a8ba3c9f7c77029814809aa2b46,"Fixing memory leak of ShowcaseFragment  (#2030)

This PR fixes #2029 which refers to two memory leaks leading to the leak of `ShowcaseFragment`.

## Changelog

* For fixing 1st memory leak in the issue we have used `requireActivity` inside for each loop as an explicit field outside the lambda which introduces a synthetic field of activity thus avoiding leak. You can compare this with the previous screenshot attached to the [issue](https://github.com/airbnb/lottie-android/issues/2029). This is inside [this](https://github.com/airbnb/lottie-android/commit/5d0893a82ed376967900bdb9323216994ee64de0) commit.

![Screenshot 2022-03-02 at 5 02 11 PM](https://user-images.githubusercontent.com/12881364/156354519-8feb7dfe-d26e-47be-9e8e-9f58f4632cbd.png)


* For fixing 2nd memory leak we have added explicit context as a parameter in `clickListener` high order function field of `ShowcaseItem`. Correctly passing the application context to this removes the memory leak. This is inside [this](f2186776d123398272133489430a02bb15aa4224) commit."
d612830619904e733d12f6e5d3dd6c8eedbfb616,"Fix a Xiaomi specific crash (#2061)

Fixes #2050"
47745aa278448a895cdf5a36d9a4f29906bba220,"Make LottieDrawable.setSystemAnimationsAreEnabled public (#2063)

Fixes #2052"
b2f216165b1b2ee0a015e63c24880ef3629e1ea6,"Remove rounding from setMaxFrame (#2064)

Fixes #2042
Fixes #2044"
1ddca7188cf7ce16595680861daea4f7d48c22a8,"Add support for gradient opacity stops (#2062)

Fixes #2054"
f0ff8a30d265ad883a4cb6a3c77cd0855d5c9cdf,Improved docs for gradient parser (#2065)
61e88448d5d32c363cf06a12d3eb81aa763dc4f1,"Clear onVisibleAction once the action is taken (#2066)

The root cause of #2053 is that once the fragment was paused and resumed, the onResumeAction was set to RESUME and never cleared. The compass view in the linked project triggered a relayout on every frame which caused the visibility action run over and over again. The animation itself happens to have an empty first frame so it appeared as if the animation disappeared.

Fixes #2053"
7dfb1f404b221a054f341a4a5fecaf575ac49ff6,v5.1.1
282ef5e08d8dfc7e42d32d612b0d9beb25022075,5.2.0-SNAPSHOT
122b95057548bcd8bb0ddff35a92c789f13479a3,"Fix LottieAnimation recomposes on every frame degrading performance (#2078)

Fixes #2077

This issue can be fixed by a very simple approach mentioned in [https://developer.android.com/jetpack/compose/performance#defer-reads](Compose performance docs - Defer reads as long as possible) by deferring the progress read to the draw function.

Also, I've updated samples in this repo to use the new approach."
a054ca2d664b81699142ae6ad05cce651dfffbc7,Fix lint
3a429d85d79498f45253936c0c1c3a455e2a6db4,De-dupe gradient stops (#2081)
572bf30531d4e813cd6093926942a586bab58ac5,Update Compose API docs (#2082)
b3014306a62ebea65324a5a0f3930f5bf91580d2,5.2.0
8939a349653e98393f0d8e7116c079a3d0941a6f,5.2.1-SNAPSHOT
50aa0bc0434c8af90b2440dd9e6cb128c32c911f,"Fix WalkthroughAnimationTest (#2101)

Fixes #2094"
660d8d5330a66f209bc67cb3d62d83ba50f11726,"Allow zip files to contain embedded fonts (#2102)

ZIP files have never supported embedded typefaces. They relied on you setting your own via a FontAssetDelegate or having the font in assets/. Now, you can embed fonts in zip files. However, Android only lets you parse a Typeface from a File, not an InputStream which requires the LottieCompositionFactory zip APIs to require context now.

Fixes #2092"
42b486156b654bace262d3437ae9d775804e3811,"Add fontStyle / fontName argument for FontAssetDelegate (#2103)

New functions are fully backward compatible."
d2a1857065b239254d5b301a23d6f5171bd93568,Update README.md
adbd366b1d8fb6ee99420ed239ed74686a8c0b60,"Allow animations in zip files to include base64 encoded inline images (#2110)

Fixes #2111 

Co-authored-by: 子贺 <hepenghui.hph@alibabapictures.com>"
108b1be70f115cda3c62d46d9f9808e6d465a3c0,"Fix ImageAssetManager.bitmapForId NPE crash (#2117)

In Android docs, BitmapFactory.decodeStream may return null so it must be handled correctly.

Co-authored-by: TechQI <TechQI@126.com>"
7275e64cc4bfc0c50548ed49729323f60dc84cad,"Allow decimals for precomp size (#2138)

Fixes #2121"
c553ad392e62f29de7045f4e5c9ed116d951c454,"Add reverseOnRepeat option to LottieAnimatable (#2128)

Resolves issue #2125 - `LottieAnimation Composable: support LottieAnimationView (XML) repeatMode equivalent`.

This PR adds a `reverseOnRepeat` boolean option to `LottieAnimatable` (defaults to `false`). When set to true the effect is the same as using `app:lottie_repeatMode=""reverse""` in the Android XML lottie implementation."
78487c6a108a808ca77703d5614d3711ff2db5e2,"Update documentation to be in line with behavior (#2152)

This PR updates the javadoc of `LottieAnimationView#setRenderMode` to be in line with the [implementation](https://github.com/airbnb/lottie-android/blob/c553ad392e62f29de7045f4e5c9ed116d951c454/lottie/src/main/java/com/airbnb/lottie/RenderMode.java#L27-L34)"
8093687d166ddc5703169396e26927f6ac81adcc,"Allow interpolating between gradients with different opacity stops (#2160)

Fixes #2104"
592c5f635e7b9f6fc1ae1f2f162c4535430283b3,"Support box position in Document Data (#2139)

Fixes #2131"
17126835279e87c14c714d5de927d387e653cbe6,"Only store application context in ImageAssetManager (#2163)

Fixes #2108"
def619c139b5bca5fe95dc3dbee459948f8b633d,"Fix rounded corners modifying already rounded corners (#2165)

Rounded corners should noop for corners that already have control points

Fixes #2149"
5512f3d76839919bb48d76daf4ca38371a49b2cd,"Allow repeater contents to have dynamic properties (#2164)

Fixes #2143"
c3581e0705b51da9bd7658d712e7f036f68a9c4b,"Enable configuring a global idling resource (#2161)

Fixes #1972"
dc552f24959b9f05e117ca6cce344dd3d7e7d90f,Allow setting a default font file extension (#2166)
84893f89858b0e087d8c170d4ab9b8a3487c59de,"Add the LottieConfig.Builder.setEnableNetworkCache() method to completely disable internal network cache if needed (#2158)

**Rationale**
We'd like to implement more sophisticated caching strategy for animations fetched from network. This could be implemented on the network fetcher level e.g. using the OkHttp's cache or the ""stale-while-revalidate"" strategy.
For this to work the internal Lottie network cache has to be completely disabled.
The option to do so is implemented in this PR.

**Implementation**
By default the internal cache is enabled to maintain backward compatibility. 
We've added the `LottieConfig.Builder.setEnableNetworkCache()` method to override the default behavior."
ea4ec68da6f52182d83b23450773a7ec6569d655,"Pass LottieComposition to all content when it is generated (#2167)

This allows GradientFill to access the composition directly. Previously, when accessed through LottieDrawable, there was a potential race condition that caused LottieDrawable.getComposition() to be set to something else externally before the GradientFill content was able to access it.

Fixes #2159"
26c9089d30e2492d9fb6455fbcb1f1875b72bcaa,Updated changelog and bumped version to 5.3.0-SNAPSHOT
9dde5b09718163ee2aed00f530871dd04744e2b1,Fix LottieAnimationView.setProgress called from the view init method prevents the progress from being restored from the saved state (#2072)
596219be1d0cd2aa9cde0b95e5f3bb962aee104a,Migrate gradlePluginPortal to mavenCentral (#2178)
373aa6c62e9d7bb0f3931fe3c082a5cf4ff7a55f,"Add NPE protections around transform opacity (#2179)

It isn't clear why the underlying issue is happening but if it's isolated and device specific, it's easier to add this harmless checking code rather than get to the bottom of this one.

Fixes #2083"
e8ff07e841fb63735f36d4d49795f8fbf54d25de,"[Snapshot tests] Only set a font asset delegate when there are no glyphs (#2181)

This should give better test coverage of glyphs and font rendering."
ece75b504316690ce0c6ce0931150d4cb176ddfb,"Allow setting a map of typefaces instead of a callback (#2180)

Fixes https://github.com/airbnb/lottie-android/issues/2119"
81b639e049527400c53dc1501398e96bafe79d68,"Take left/top bounds into account (#2182)

Fixes #2098"
c5dee61b742baccaed8005853424ddc7074b5a42,"Allow ImageAssetDelegate to be used with a LottieDrawable that doesn't have a callback (#2183)

Fixes #2112"
1cfb73e3646fee951237f68c8eb6034075e3499a,"Overhaul text layout (#2162)

This PR completely rewrites the text layout algorithm. It should be more accurate in most cases now. Center and right justifications as well as alignment of paragraph text and text wrapping should all be much more accurate.

Note that there may be an outstanding issue with the y position of paragraph text which affects #1758 but I have been unable to reproduce it with an AEP file for debugging.

Fixes #1479
Fixes #1758 
Fixes #397 
Likely fixes #2135"
bb23817c8d45170fd775c6cc3ce60d8831ef6171,"Make Layer name and refId public (#2188)

I'm running tests against my animation json files and I want to make sure that all the layers I expect to be there are actually there, but I'm hitting issues with the visibility of these two functions."
1b153b8be2ab8b874cfc417f70f3ece4011d010b,"Allow rendering at the composition frame rate (#2184)

Fixes #1206"
92166a1ad4d76de42fd54d864bcee9dc13dd51ff,Run snapshot tests on emulator.wtf (#2186)
c428cdce758f653a009482f8a07000d218b75e5a,[Snapshot tests] Update environment variables for GitHub Actions (#2189)
5a987aa4a0346be16b9259c6fe5692d96bd3879c,[Snapshot tests] Update environment variable (#2190)
121a89c10cd69daf8dbb5193c105462192ae87d7,[Snapshot tests] Update environment variable
a0721870ef14474b92b0feda0b90536de6ca98c3,[Snapshot tests] Fix comment API version
3c7f33dfbf1d3f566ceab4e2ac6e0ca5ca05d0c3,"[Snapshot tests] Disable the path interpolator cache (#2195)

This should prevent the large diffs in the snapshot tests"
64a4d7babcdca2149fde35b070be53b92364c0b5,[Snapshot tests] Add API 23 and a message id to PR comments (#2196)
e752a109a4ed15d127eaaf38c5237157cb62f95a,"Add an extra null check for transform anchorPosition (#2197)

Not sure why this is happening but it seems similar to #1955.

Fixes #2194"
2ca5196e77e0a42136d11a416d69b3fe201b193b,"Use the correct cache key when parsing NetworkFetcher animations (#2198)

Fixes #2187"
ac0c6d4c3f18a8e7d1b5beb705fb4becc0a90cd3,"Change PR workflow to pull_request_target (#2217)

This should allow secrets to be used in PRs"
7479ebb2847365e5ed0575249a9b639d86808dfa,Fix comment posting after snapshot tests run
4794facf7dd7c0710c51db80c9d22153e3cf9685,"Fix AnimatorPauseListener callbacks (#2210)

LottieValueAnimator doesn't utilize a base implementation of pause and resume methods of Animator.
The result is undispatched events to AnimatorPauseListener."
e4401727529bfa6afb6c07c7fc581ea81d91bbef,"Update text rendering y position (#2225)

This PR updates text positioning to use the box position y value (ps)

This already works on iOS, I think this is because it uses the position object directly."
e7383afc846c2ba2b58abe64a03c0c6aab373ea8,Load env via gpg (#2231)
f2387303251dd8b5e6d37fa3dcbb713465f266ab,Use an IP restricted cloud function to store env variables (#2236)
8d6651886b088a9a0d8e7374c6fd5396442e5944,Run snapshot tests on workflow_run (#2237)
cc8b7827f1787ba3b566a3bde7c56cb05c0a8586,Update workflow_run workflow (#2238)
06b608938696a5fad267bef7f753c7db957b8cfb,Update workflow_run (#2239)
f53614fb4cb531ec302b152e8e73c171a6be16f9,Test workflow_run
d130e6150bed9a60680427e6637a9d028fb024ef,Test workflow_run
67cc300072d045eaecc7655b092d0d6e8082a6e6,Test workflow_run
c14b3f5bb6758b85b794c6bade41209ca0566a5a,Update workflow_run
d54e51e18a7c0f8fd8c9dfbb01c0d0b38e1f4f10,Switch back to cloud env (#2241)
67a6c2e58c473930c80c82b9f5afaa6b1ed1278d,Move comment to workflow_run
01ef55a52e50c1bfa950a50be81d29bf97491db9,Post comment with workflow_run
ccad837930676a58a91035f8e6191643ef1bee12,Change workflow back to completed
89e9423f087019f371f18791fb8f772b2afd40da,Update workflow
0a851c3bce567d8d4070cf88445f7bf0b8237447,Update workflow
dd543dbbac3dad329e0ac764f899200430a59aba,Update workflow
60ebe918dd33f8e453c6540cbd40a794155947f8,Update workflow
6deafd82a031be52f689ccce2632bcca8e69c341,"Update point text y offset (#2243)

After several hours and a bunch of test files, I've been able to get the y position of point text to be accurate in most cases and closer in the rest. I can't quite get a hold of the right algorithm to get it to be 100% correct all the time but this is an improvement.

If any external contributors wants to continue iterating on this, feel free to. Just add more animations to the snapshot-test module if you do.

Mostly fixes #2201"
c81fbb1910d9c31b516acf993bd1303530fdb964,[6.0] Bump version and update changelog (#2244)
48e6678489e399ed0f8d4b41ac63556c12c1ba3c,Only post PR comment if the workflow_run is a pull request
83ec1593e78131165bfa9ce3d40166e37fd511b7,v6.0.0
b2608976bdd73d6d503af8252e7e432680cd0e9d,v6.0.1-SNAPSHOT
cb72e02d0b11ac31b0b5ba852476cb7c7c6db770,Update CHANGELOG.md
bb777e8861ba400ed6a5a554d6cbdc64b77b77ab,Added more systrace markers and made LottieTrace multi-thread compatible (#2275)
486930a9d60523c615b08a73624ed3b2e4babb40,"Migrate to version catalogues, refreshVersions, and update dependencies (#2285)

It has been a very long time since I've updated dependencies around the project. This revamps the dependency infra to use refreshVersions and updates a handful of libraries."
2b80daba794ef80dc58a65846a14480c706d1892,"Fixed the stream was not closed when the lottie animation hit the cache (#2253)

This PR fixes the stream not closing when the lottie animation hits the cache."
cb2c4d5a56a37a72bbde992145d0c0b8368f2a81,"Allow for non-closing input stream parsing (#2286)

Fixes #2252"
5850e7259c0f9b5351636270b74a68aa6239f448,"Remove restriction that zip files must provide all images (#2287)

Fixes #2261"
74746cd7798dccc432cd84b2ee8f1c741031a0d7,"[Sample app] Fix loop button position (#2288)

I think Android studio stupidly moved it when reformatting the XML file

#2285 (files)"
bb88807fef0f1fe1720bf78bf7cf843bcd9a0e78,"[Compose] Key dynamic properties based on composition (#2290)

Fixes #2273"
93331f8b519ebb8a2fdcacc56f52d5a51f3d62c3,"Check for Application context when comparing contexts for ImageAssetManager (#2289)

I think the root problem for #2281 is that there are 182 720p images played a bitmap sequences. However, while looking into it, I did discover this Context comparison issue. However, the 182 720p images are the real issue for the animation in #2282."
a0bf926fda3f4111dbc2ff24d62c5d763f8c6d41,"[Async Updates] First MVP of Async Updates (#2276)

This is the first MVP of async updates. This project is being funded by Airbnb Eng and likely wouldn't happen without their sponsorship.

The docs for the AsyncUpdates enum includes details on what is going on here but at a high level, Lottie has two hot paths:
1. setProgress
2. draw

This allows the former to happen off of them main thread _ immediately after_ draw completes so it is ready before the next one starts.

In many of my tests, the two paths were each accountable for ~50% of the total main thread work so this could reduce the main thread activity by ~50% or more.

Here is an example of systrace before:
<img width=""1258"" alt=""CleanShot 2023-04-09 at 15 24 34@2x"" src=""https://user-images.githubusercontent.com/1307745/230800026-d73bf779-a109-46ee-9396-a54753860be4.png"">

You can see setProgress being called immediately before draw.

This is what it looks like with async updates enabled:
<img width=""1258"" alt=""CleanShot 2023-04-09 at 15 23 35@2x"" src=""https://user-images.githubusercontent.com/1307745/230800035-c6a2e02a-f47e-4cac-9394-4239ae27c524.png"">

You can see that draw happens first and then setProgress for the _next frame_ happens immediately after on a different thread.

This is experimental and defaults to AUTOMATIC but AUTOMATIC will default to false until this API is stabilized."
d57e718bb85bd535c6934789b4881ec93c166ebc,"Do not hold strong reference to LottieAnimationView in success/failure listeners (#2293)

Fixes https://github.com/airbnb/lottie-android/issues/2292

I followed `LeakCanary` hints, identified 2 listeners that were kept in the static map and fixed them by holding a weak reference to a target object (using private static classes). 

As far as I understood the flow, there should be no behavior change, other than not having a memory leak. The view can be immediately garbage collected, without altering existing behavior (the resource will continue being fetched in background)."
92fde68fb214fda396351838bdaa740487598887,Update CHANGELOG.md for 6.0.1
fd3845dc865904856de2bd51c7cae011bf943012,"Allow loading URLs that are more than 255 chars (#2311)

Fixes #2309"
cc8fbca4dcda87213ba5f3ccd08a2c2aabe85976,"Modernize build (Java 8 compatiblity, fix build warnings, remove dead code) (#2297)"
669ddb291a362d5ece99c7a48ab9b960b85df873,"Add close parameters to LottieCompositionFactory.fromZipStream (#2319)

Closes #2252"
f794837aa0825b0e29e8a1d33532c63db8ed7844,"Add @JvmOverloads to LottieAnimatable (#2320)

Closes #2266"
1645311b20568448f55dbdc8b8a932485af4819d,"Bump dependencies, remove all deprecations, improve CI builds (#2316)

Another set of build updates. I'll try to comment out each of them. And again, a reminder, please let me know if these are not aligned with the direction this project heads to :)

I have a couple more ideas of things that could be improved. A few examples:

introducing static code analysis for Kotlin files
running more checks on the CI (building sample apps, running UI tests)
Sample app, the one available on Google Play, does not work properly when scanning QR codes
Improve testability by fixing the re-initialization (one of the opened non-rendering issues)
and maybe, eventually, once I get more familiar with how Lottie library works internally, I'll be able to fix the bug reported if it is even fixable 😅"
3e6eac5d4db1a187daf1c1a709c1fded69d5594c,"Enable GPU for emulator.wtf (#2332)

https://blog.emulator.wtf/posts/2023-07-04-gpu-emulators/"
da1c96a714292fd3df089b052c9954794fdc2bf9,Update emulator.wtf (#2335)
e82519d473a87a43beff08db6f1abde981fd6926,"Support re-initialize (#2323)

Closes #2245"
387b7c73962862b6a92adc7badeeaa50e6a7c438,Update README
cd30afd52749b2b94720a5b1f49f276f8dc4db84,"[Text] Apply parentAlpha when rendering text (#2336)

Fixes #2317"
a3a923971f19e6d5aee20396175aff6a6e8498b0,"Add default values for stroke line cap and join types (#2337)

Fixes #2325"
7e037a6692eea6e5551d905270b627ae4842100e,v6.1.0
0c8e05cac841e4d685a8b5f44087c5ccc45aadf8,v6.1.1-SNAPSHOT
6c26b9fe7561df8a651aa7a53a17088137af6aa6,[Sample] Handle crash issue after tapping on the Search Tab. (#2339)
78dd109f2847bd19984beef6128fab9273b003ff,Add close param to LottieCompositionFactory.fromJsonReader (#2342)
0014ef6c3002cbea3d1bb36f13d886e3d2e3a9da,"Fix IllegalArgumentException when createBitmap (#2351)

IllegalArgumentException is thrown when creating bitmap in ensureSoftwareRenderingBitmap() if the getIntrinsicWidth or getIntrinsicHeight returns -1. So, returns when renderWidth or renderHeight is negative to avoid the crash

Fixes https://github.com/airbnb/lottie-android/issues/2350"
423665df93a4717090526b7e6492236c4b93a7fa,"Fix Potential NPE In NetworkCache.clearCache (#2364)

Co-authored-by: Nathan Shurtz <n.shurtz@fetchrewards.com>"
5ca7e90bb518d36f2bb08c7f711b29f856ad340b,"Fix gradient interpolation for opacity stops beyond the last color stop (#2377)

Fixes #2353"
c76b9f00cff28ba9a7c5f319db4aa23b75a8d9a7,Allow configuring a default global value for async updates (#2356)
a808c3f0f404f163502cfe139933b98a5412c17d,Add clearValueCallback and COLOR value callback to solid layer (#2378)
a097aa2b95c5f1dfa525c770f1b23396a7889e10,Check cache for LottieCompositionFactory sync methods (#2379)
5d3763af2f32a766ab2b70192d765b9eaac5b608,"Add an additional null check to TransformKeyframeAnimation (#2381)

Fixes #2354"
3b6bab2b56e243a9d7ac2065adb62ce7d6e08237,"Fix asyncUpdates for Nougat and below (#2380)

Fixes #2355"
34aa06b8db75976f06b134b4fdcdb7dc26e48e07,Upgraded a bunch of dependencies (#2382)
e5ac71e12872ae60d222701ddbd90b2d6a117aa5,"Add support to generate baseline profiles for lottie and lottie-compose (#2404)

Fixes #2338"
638d86b431b00388a4da2ee26d40ffcb2f83e8f9,"Fixed rounded corners for non-closed curves (#2405)

Fixes #2403"
f20394bb686d803d5ff57ddfda9a027eac314772,"Fixe varying opacity stops across keyframes in the same gradient (#2406)

Fixes #2298"
4c805889968bfa2eba6c87cd99a093aa5261beb3,"Fix a NPE in ColorKeyframeAnimation (#2407)

It is not clear to me why or how this would happen. endFrame is technically nullable because of the order that parsing happens but it should be non-null by the time parsing finishes. This should be safe enough to add to fix this NPE though.

Fixes #2361"
2ee2b288b9fd5a684432fe947256dda68fd6c73c,Add a LottieAnimationView overload for ZipInputStream (#2411)
2bb80251ae9fbc113f89abd1ed5c1a5c807c57c5,"Implement auto-orient (#2416)

Fixes #1401"
8eea69ce6429863dfccae7d0c5c22b0d272e3813,"Upgrade okio to 1.17.6 (#2418)

Closes #2392"
1256d26ea1b838d6180c428df40f5ecacc1ddbbe,"Add support for layer blend mode ""bm"" for NORMAL, SCREEN, OVERLAY, DARKEN, LIGHTEN, and ADD (#2408)

Adds support for ""bm"" (BlendMode) on layers. Possibly addresses #1055
Might need a little bit of a refactor. Relies on `Paint.setBlendMode()` available in android Q and up.


## Sample before & after
![IMAGE 2023-10-30 12:28:18](https://github.com/airbnb/lottie-android/assets/141772/faad31e8-2fd7-496c-9304-ca81451c6d46)
![Screenshot 2023-10-30 at 12 27 39](https://github.com/airbnb/lottie-android/assets/141772/746ef507-284d-4eec-a632-ad5fe59eaaa0)

Co-authored-by: Gabriel Peal <gpeal@users.noreply.github.com>"
2b7b03f8e062b1d54a50cf6406170acab01b2c69,v6.2.0
664c8e3537f12a8962474a033f67565bbcf25606,v6.2.1-SNAPSHOT
db452ead07707d25df64358c348d157704dc82f2,"GradientColorKeyframeAnimation does not handle progress outside [0,1]  (#2427)

- Closes #2426
- Improve performance by running GammaEvaluator once

Co-authored-by: Sven Obser <barmer-ecare@obser.info>"
94eabb98942e7a27c0695198a4c621332abcb9e5,"Handle null animated shape end values (#2433)

Fixes #2430"
e85787b34fccbd7bfe0b05067a13c0497f8a8d0c,"Handle null color callbacks in SolidLayer (#2434)

Fixes https://github.com/airbnb/lottie-android/issues/2422"
a855905cd54aa874b3124b4af8c089f08bbabbf4,Add support for gzipped json files (#2435)
a6e416d98d0269f7319442c97bf2fc23f44c1bfe,"Constrain unbounded dimensions when exactly one dimension is unbounded (#2437)

Fixes #2264"
9f8951ae7b4c8cf1ac262e25d388f1f00ce54633,"Scale image if the dp scale changes (#2438)

Fixes #2216"
6e1104022ef8269aa5253c00064eab5a528a2511,"Allow shape contents to have dynamic properties for its path (#2439)

Fixes #2389"
c9c8bb7d44e017c784912e58ce87d90fe8601ec8,"Add an option to clip text if it goes beyond the Y bounds of paragraph text (#2412)

Fixes #2384"
a9a75630c6f39de863e947410b5db99b0e4b4f79,Fix rendering artifacts for large strokes on polygons (#2440)
83833931facab2d30ead7a0d2fc552993347478e,"Make all LottieAnimationView setters idempotent (#2441)

Fixes #2326"
4060d307d84f9aab7a990d6e6576eb01935ffda0,"[Compose] Add LottiePainter (#2442)

This allows Lottie to be used with anything that accepts a Painter (like Image).

Fixes #2193"
351a1aebf1fb207c2bc488247799bbf2ae966c40,v6.3.0
f41f03a13258987ea89e41a17e6df0d3a84adac2,v6.3.1-SNAPSHOT
