commit_id,msg
a18ee58f7a4f56cab6ba4a8cacaa70c4c76379b3,Initial commit
64c349093b948b2dad7457bb0e831b742517cbee,Remove unused string resources
05e250bb960f87d2eefc623a5aa519422a682f33,Fix minor Android Studio inspection warnings
e409cffdb18458d3d9ba9d43a2ef55a16f6fd415,Make git ignore all build/ folders
80794485c00545c27bcb2f150a076f68db17d8b6,Add initial stab at a .travis.yml file
8d87c4ab285341d2f401631c5c60d3178daf7d7b,Use temporary keystore for travis builds
dea7c9d2ceb3060c13c6357e80a8e6b78118ee53,Let travis run './gradlew testDebugUnitTest'
10e4ee88a8b708f36ea7490fa28dd105b9cd3081,Add travis-ci badge to README.md
241139a5f1aae15dcdb0db4689cef7b72cd5c319,"Bump version to 0.17

Also remove the version attributes from AndroidManifest.xml since
they are generated by the gradle build."
cb42c19d76604980e91068d4d3f124e568b43178,Remove <uses-sdk/> element in favour of gradle
9e7ca8b6893acfdfc4940fab46cd1b7bbe31cf24,Make build-jnilibs.sh always clear directories
7db3200c132784609e76924911316d8c0972408c,"Add a file picker to pick files from $HOME

This allows e.g. files from the $HOME folder to be attached to emails
or uploaded when in other apps.

Also bump version to 0.18."
1652c1dcf340bb91f9802289793232932ce94a51,Update gradle wrapper to 2.8
01de6b4d1835b88ca5ed5fdb29adbbc9fa5465f2,Minor changes in README and adding an EditorConfig file
430a98e9ad1c0163d0242d3358f7ba59e0dbc8f1,"Merge pull request #11 from RyDroid/minor

Minor changes in README and adding an EditorConfig file"
7a726c035c214f24b6da0ec6400f3e17b09b788b,Clarify Apache License version (fixes #10)
3b4e3b0e42c53aef14ef6550b238e3ce658b2e11,Update to Android Gradle Plugin version 1.5.0
89912be500187526b1f093377ee0f18212354a10,"Fix crash on installation if activity destroyed

If the activity had been destroyed waiting for the installation to
finish the code would crash trying to display welcome dialogs (on
success) or error dialogs (on error)."
09ecd14764ab31534f0769855ac2d56aa394141c,"Fix crash when using some unicode characters

We should never try to look at characters in a row after those
actually used."
463b927813c5250110c819d10c7b61561d402393,Bump version to 0.19
65cfcffa6f8de0e6d51f4eec139082a0fe7e5e7c,Update to gradle 2.9
0deacd8fc6e889e62774776640ca64b8f201ec00,"Show ""-press Enter to close"" at session exit

This makes it more clear how to close the session after finishing.
Fixes #15."
f7ce2062122cd0b4d06843ba4488d1ab65c79fe1,Bump version to 0.20
9b3dc57447cf449cb4dd6491771feabba6d7c077,Remove junk from app/build.gradle
b1aaf5abe53282e0f43b77bb97f034191e878c34,Add *.apk to .gitignore
36cc010a87c1cbc96f504540f1418c3c5fde96e5,"Show bold text in bright colors

Fixes 17. Could be made an option in the future if necessary."
09fe7e59416eddfd566edee4d29a308474b42db2,Use the gradle source distribution for the wrapper
12ddaccaf7acab3bbe47f48236122aeb5a823337,Extract hardcoded string to resource
1aa439311b520ca54a8b917891cbac3cce23c28d,Remove some warnings
95fbb810e252b65851e0dc7189ab1820b6584b72,Code simplifications
271dd7dceeab5719f1c6e8ee178242064b80606a,"Specify Android Studio ""Inspect Code"" profile"
d6f01bfe9a0cdce533cf7a0532aab663f224e243,Update gradle config and add Support Annotations
a6a83b1fcdfafb044115bc878420be275bf991ba,Tweak file picker layout
1b36c684d68f093b1778f988a2a5974c642021fd,"Add a customized auto backup

Starting with Android 6.0 the system may automatically backup app
data when a users installs an app on a new device or reinstalls an
app on one. After this commit this only affects the $HOME/backup/
folder, so that the user may choose what to backup.

See https://developer.android.com/training/backup/autosyncapi.html"
d982c71efe4fa099a3fb0f744943e001cd8607c9,Url-regexp: Remove redundant escapes and add test
7389dbb56fcb71813f25e977bb81f33a7a1c8858,Fix two Android Studio inspect code warnings
0e4ea95d743e40a508210067bac741a21b0815ce,Revert to gradle-bin to check travis build failure
2a6a3b76b7104ebe9c17cf57266d862e022b6e5d,Update travis config
74dca951016b7e1c715a0ba71f80daed64040d6d,Fix inspect code warnings
3091da64bcb180b8117bec61fc3e9f6642dd2878,Update travis config
9928073e48ba569ebeb40483189d4ebc0182fba6,Fix bitwise operation issue
ab3852d2e4f78b6023883aa5e297e0ac55329542,Add missing null guard for no current session
525985b1f278b34fdcca95077a94f07f3630f010,Remove some dead code
7348820cafa55821784491839a3faa0126d1aac3,Add screen wraparound test
4ccc703fcf46646955db8d7803781f4f2c545293,Remove dead code
b54c7909bd3f9deca6b0ccee6ca8c715d5d025ea,"Fix crash with wide character in last column

Ignore wide character outputs instead of crashing when the cursor
is in the last column with autowrap disabled."
bad6712338a9fd98c1975a46d26a8b94d28b02fb,"Improve motion event handling after long press

When mouse reporting is enabled, do not send mouse events on up
after a long press, since that causes e.g. the cursor to move in
vim when lifting the finger after long pressing for the menu."
625aeab39834aa255ed40978919566f259ea858a,Reformat code
ce82979e2b57d5d87e553c4b4593c4b46f430561,Update idea codeStyleSettings.xml
16273a19816f55383ce0ba299257676b15d95e15,"Fix bug with scrolling down and top scroll margin

The Termux implementation of the ${CSI}${N}T escape sequence to scroll
down N lines (SD - Pan Up) did not take the top margin into account
when figuring out where to place the scrolled rows.

Fixes #28."
e18579164f55b6a353f5e9120732829354341a91,Bump version number to 0.22
bce65f7db140c4ee6de01680743bca31a9d6a081,"Setup $HOME/storage symlink for external symlink

At startup Termux now checks if there is external storage available,
and creates a private area on the external storage if one exists as
well as creating a symlink to the private are at $HOME/storage."
5c03c2d77ecdd0f2eda9e2bfe4f0917be350a28a,Change theme for file picker
b0f4efb0bcd19950cbc65971be5cf32307fb4329,Bump version to 0.23
f153a7259208af75c1476f9286550d9ec6a02517,TerminalView: Make theming work for non-activities
4de0f98fa406a0df3990dbdf901c52d6047c1feb,Fix lint warning
9d37461ac7abb19cbeb2e85ee0d47f964c7030ad,Fix lint warnings
f907684ef2f18b3c5f2f9590a00c00439ba15cbc,"Read support for customizing through properties

By using the file $HOME/.config/termux/termux.properties it will
be possible to configure the behaviour of:

- The bell character.
- Tapping the terminal.
- The back key."
2326c521997e014cef9d88a88f427bfac1a14791,"Implement support for termux.properties

Also some symlink-to-storage improvements and experimenting with
requesting read storage permission."
79d56b778d9d841cd2999f4fe118ccec500c5ac1,Update gradle to 2.10
dd38965c466f4ef569a14b50582ff9303d5b1914,Use $PREFIX/storage for symlinks. Rix null check.
e006e36dd06ef223f44e4edb32c3cf3a1629ce1b,"Do not eat escape key events in onKeyPreIme()

The original reason for intercepting the escape key in onKeyPreIme()
was to prevent the escape key as being treated as the Back key before
reaching onKeyDown().

This seems no long necessary, and may mess up handling the ...+1
combination for escape on the Google Pixel C keyboard (see #27)."
468185efb3e54c2cbdc0f3b1a1c9ad941fa3e4c8,"Transition to https://termux.net for bootstrap

The initial bootstrap zip was previously downloaded from
http://apt.termux.com, which lacked security and was not behind a CDN.

By moving to https://termux.net we improve security (as it's https)
and reliability (as it's using a CDN).

Fixes https://github.com/termux/termux-packages/issues/89."
961e06379bf2ad7ea92cdf390dbca18af2696f07,Avoid prompting for storage permission for now
86e2945069e2b5b1aa71a3aefd1ac36c9d34deb7,Make it possible to reload settings at runtime
bc1b742a36bddf4e6806ec1a35a3cc668a35d720,Remove bundled help in favour of online help
d9ec1bf40b1d50957d4e1284f5703603badba2ef,Add .idea/dictionaries/ to .gitignore
47634ca237fa57518d088cbcf2c4029260655228,Update AS configuration
c3aa9d9662af63b9b42a872c0790eaca1dfb516a,"Updated storage handling

Let the user run termux-setup-storage, which will ensure that storage
permission has been granted and setup $HOME/storage/ folder with
symlinks to storage folders."
96f5ed985a865d8b5cc3ed82ed3bb3d2ad6e5019,Remove unused files
50005bc79486364d58cd117865bbaf2128b47daf,"Fix problem with font and color loading at startup

Using View#post() does not work in onCreate()."
7763931035524ee01d45ee9d69716d4b859beb3d,Bump app version to 0.24
657c270d9703c02b337e35bdd4afed23dfc33f6a,Fix error message
913c474d32db136308d87e7504b9f0fea5ca2353,"Input normal ^ even on other unicode char input

Some bluetooth keyboards [1] input U+02C6, the unicode character
MODIFIER LETTER CIRCUMFLEX ACCENT instead of the more common ^
(U+005E CIRCUMFLEX ACCENT). Remap it to the common caret since
that is what terminal programs expect.

[1] https://plus.google.com/100972300636796512022/posts/f7PKpXWesgG"
5ca82ea095d3446c5beab28bb3b68176412812d4,Bump version to 0.25
207ddf9fdc5a19060a23ea4e000db4fc3c38847e,Change member to local variable
eeb873f4e45f028d2d712b6c6753d646626f3ddc,"Do not save instance state in DrawerLayout

This was not needed, and due to missing CREATOR field caused a crash
after returning to the activity after it was evicted"
60bdaa3bf636d361eee591e3c147e5d9547f5bed,Add test for space handling
845976be0f6e676b7be453ccc288862f8eb5840f,Update README.md
862b461a07d64e3a645b1b1bba274a9159fab35f,"Improve text selection functionality

- Make text selection easier and quicker by selecting text directly on long press, and using standard grip bars for changing the selection.
- Disable the drawer while selecting text.
- Fix problem with selecting snippets of text with wide unicode characters at start and end.
- Remove the ""tap-screen"" configuration option for a more common show keyboard behaviour when tapping the terminal.
- Do no longer map the back key to escape by default - but it's still possible to do by configuration.
- Add new hardware keyboard shortcut Ctrl+Shift+K for toggling soft keyboard visibility."
0c13ea1bd40e64990f7e45070431e5773cdab181,Bump version to 0.26
fe4365c94b0cc375157d0fecba22f22749a1a177,Simplify long press on new session button
54bc1ed7913a64ae657fb230f0bdf09b485abed7,Do not recognize gestures while selecting text
7a659ebd21d9d0416ad5e44c442ad058bf830cde,"Improve session name dialog

- Show keyboard directly.
- Let return create the session."
fa9ea2db5c5cf4162d0bec9dec5a15ede3318301,Do not auto scroll when selecting text
50337cbf9d261d13aa72d9756006b3cb68afacba,"Fix gesture handling while selecting text

Also remove stray debug logging."
8f1ab1bc17e36eb0d5def49ce856397e86d8f5cc,"Use action mode overlay on pre-6.0 devices

This avoids the terminal content from being pushed down when starting
text selection. The drawback is that one cannot select text at the
top rows without scrolling - something to fix for the future."
ed544102bcc16ce9de239bad36bdfd878dfee1df,Show icons for copy and paste menu items
6caaae4fd6bb29260b68fdabb2922a99dc2d068f,Do not start text selection directly on LMB
19eb371d23fd750e3140a300f7c2b9805298190b,Do not force soft keyboard visible when hw exists
c8d2f28ed827749a7f08a79510472910a6919c95,"Terminal emulation: Test ""CSI X""/ECH processing"
bee305e53f236884adf3daebb26b9df76c2d0484,Whitespace/tabs consistency in AndroidManifest.xml
b2b39abacd4572768c8b896d76b7d500a1a8c367,"Recognize '\033c' - RIS, reset terminal state"
497fc3ecd0b1f714a211d881a32f33284e94aa3b,Add VolumeUp+V to show volume control
01a1c6de0f5dcbdcce97de762b577552496402f4,"Change default behaviour of back key to back

It's still possible to set it to escape using configuration"
7256b04317b0aff7d08650a5b106063ef00869d0,"Clear autowrap bit at some escape sequences

Add test adapted from chromiums hterm."
38dd99e8272045c015af9283d4357d17ebfda474,Add wcwidth test for U+2060
54857d5fd446ad0369d363d6ebd5174d1e97838d,"Replace surrogate chars with U+FFFD

Also add some more unicode input tests."
e52cd2dd4114b6022d98abb9f58a7f60a8b626b4,Bump version to 0.27
1b6919bb23d91c66925dd56dfbfb941065dc606f,Add test comment
6405180cb8d84bb650f9bbcbfe5839dbd09b0481,"Wait for terminal size before starting process

This fixes https://github.com/termux/termux-widget/issues/2, which
was caused by the terminal launching the terminal session process
before the terminal size was known.

Also remove the built JNI libraries from source control."
d2c9c5a0f0f238bb0a80adc4ed21305cf2624537,Bump version to 0.28
36e4d9409369e4882e85e5f30b6ad0129c1fd36a,Add *.so to .gitignore
62e229e1846d3963ae7d707a0d791313511dce7a,Fix LOG_KEY_EVENTS=true committed by mistake
a8f7bf1b6e85e8c88ec909fa320bca0f475159a6,Clarify how to find the Help menu entry
048af6409339b91f8ead92e4aa4127ab3256f400,"Map everything starting with x86 to i686

This fixes CPU detection for ARC welder which reports x86."
9e19217f8f9bbc26d362036d257c6da8fd305714,"Force refresh when returning in onStart()

This makes sure that terminal session changes that has happened
while away are visible when returning."
d0015cbe820cea4bebaaf4422f3d7766fb6267ec,Bump version to 0.29
ce7ad530cd48efd9cd43d208b2911178f0ea55e0,"TermuxFilePickerProvider: Small improvements

1. Return true from onCreate().
2. Implement getType()."
6ca055bb25abfd1232279e696e8c573ec67ed927,Fix tabs to not overwrite cells
46c9c4b80e225ae5bd261759a461c06eafdf4f49,Catch IllegalArgumentException from startActivity
ca71265f23276fa6dfc11bee942876652a1f4649,Handle backspace across wrapped lines (closes #59)
c6d6a6363730a1bb49aef4c94ebabc9e4f01606b,Extract variable for clarity
493900d60bbaf1300732fa535ad8834263416eb0,Add PATH environemnt variable in failsafe mode
5b8eca46a1b6143c2f2abfa79a31ce0421ea8137,Set 4 space indentation in .editorconfig
0e942f90a687c31ff96aade9d854d9eb58fc777b,Update gradle from 2.10 to 2.12
f989157f100d340b4db40223ac55e303eba83ae3,Extract constants
480b8a4f7eff8eed01659207f8fd2d5507838b5f,"Recycle a TypedArray after usage

Also add two suppress lint annotations."
51181c2d49a40078db866d5871c1ef2836cb03f8,Fix method reference in javadoc
d6eea83bfc60e2c2966779dc89318907ecbd78d6,"Make it possible to receive files

The files are saved to $HOME/downloads/, after which the user
may choose to open the downloads/ folder or edit the file with
the $HOME/bin/termux-file-editor program.

It's also possible to receive URL:s, in which case the
$HOME/bin/termux-url-opener program will be called."
17382fb190bbdf88352bd905ce34fb895f1d68fe,"Do not have /system/bin in the PATH

By appending the old system PATH environment variable to the paths
setup by Termux system binaries are found as a fallback.

This causes problems with system binaries not working (due to
LD_LIBRARY_PATH) and causing a lot of confusion for new users when
e.g. an Android system provides a system version of e.g. curl, ssh
and other programs. It's better for these users to be prompted to
install the proper Termux package, and advanced users can still
add /system/bin to the PATH themselves.

Certain programs such as 'am' and 'pm' are already setup in
$PREFIX/bin to clear LD_LIBRARY_PATH and launch the binaries in
/system/bin - if there are some more popular ones they could be
added in the same way."
5c024485214ef81112abf29c89c46f14b4459f72,"Install 64-bit arm packages on capable devices

This will only affect new installations. Existing users wishing to
install 64-bit packages can re-install the app completely, or just
'rm -Rf $PREFIX' and exit all sessions, which will cause Termux to
re-install all packages at next startup."
0882ed6470e74a2791ed0a085b28b03149ad166f,"Keep the EXTERNAL_STORAGE environment variable

The EXTERNAL_STORAGE environment variable is needed on at least the
Samsung Galaxy S7 for /system/bin/am to function."
5558f371b4864c177f31460388082edcc1e7aeed,Bump version to 0.31
e7f9647beb6e1b54c7de93c03e1ab2d9885b371a,Remove unused variable
3aaa0ab2675be623cfc596dbb263319ec938f52a,Remove unused imports
421dfcca39bb68fb76778441ddb1362e2abe63cc,"Do not fail with NPE when scheme is null

Also remove some debug logging left by mistake."
d69485b70bf127c0970e4fd6751e77020155a584,Match less files for file receiving (fixes #66)
a67f798f2f9077d502feb2bd697b82a9ffe46d58,Update the android gradle plugin
b2ecae63a83c7567c88fb33b1304869c2b025699,Update to Android Studio 2.0
481339e2f5a657e46836a206b788b3d010182bc1,Do not force chooser when opening url
c8af97485265e5f305c67ddfda650a22232a146a,Bump version in preparation for 0.33
906ff24e7696829f129829e1eeb235d98889dcf8,Avoid repetition of home path constant
395c36ee838610bf8c8be0f66be0630edc92e68e,Fix typo
9686127f81d322356f54f71ad169ff5c6a6fb5df,"Fix installer to check supported abi:s

This fixes installation on e.g. the Samsung Galaxy S5 Neo which has
a 64-bit cpu but no 64-bit runtime available (closes #69)."
9e70ebc2a646a1af242e0ebe2777a63be5168716,Build native libraries for 64-bit arm
2a056aeb2e05420fb87a290542d95413df86f80a,"Match less intents for receiving files

Be liberal when accepting SEND intents, but restrict to text files
for VIEW intents."
dc086a1e0b29847e60f508a0c6e1b6af43a3c681,Tweak button ordering on the file received dialog
533fa60516be8213c31833677e72db29cca2cf34,Remove unused imports
026d0b495efbf2792fae2449d47aba620351fecb,"Expose files through the Storage Access Framework

This allows e.g. external editors to edit files in the Termux home
folder. Fixes #79."
fb7f7d249e99b69df369a400d20363b4177a8a97,Ignore warnings about setExecutable(true) failing
a87cbdd70c872288a7489005ba83510410834fa0,Make VolumeUp+x send Alt+x
fc15bd23553f66e22c160603cf23cd568bfe2fd2,Documents provider: Remove FLAG_SUPPORTS_RECENTS
6e7f777d04ec6c727079329d73b32eeb8d107a5b,"Remove support for ACTION_GET_CONTENT

As we have a document provider now we can remove ACTION_GET_CONTENT.

""The ACTION_OPEN_DOCUMENT intent is only available on devices running
Android 4.4 and higher. If you want your application to support
ACTION_GET_CONTENT to accommodate devices that are running Android 4.3
and lower, you should disable the ACTION_GET_CONTENT intent filter in
your manifest for devices running Android 4.4 or higher. A document
provider and ACTION_GET_CONTENT should be considered mutually exclusive.
If you support both of them simultaneously, your app will appear twice
in the system picker UI, offering two different ways of accessing your
stored data. This would be confusing for users.""

- http://developer.android.com/guide/topics/providers/document-provider.html#43"
b7f3fdf5288500c940933ab3d93561d80254c9cb,Update android-annotations version
7db1f6c5a15609a338295e343b9f156b5eee2a94,Add explicit handling of switch constant
746dc750dfab9813cc5c00a62ce6b2e39a16ab82,Bump version to 0.34
46da1fc833cb74fa688775c25ffb28f453b228b2,termux.c: Re-indent whole file with vim
afaa91b2caa0ccc2766e460d69841d5f07fd36d4,Update gradle
ff2f77c427e2ece31707d8a8e0e65e38608ddce5,Mark reset() private
cc7b6cba132f748b095060e818874a608bdcdf12,"Change minimum cols&rows from 8 to 4

This avoids e.g. the keyboard overlapping the terminal in setups
that can actually happen. Closes #88."
bdd5c80fcac164213a035e80e9599b91fca12f57,"Commit the text on finishComposingText()

This handles e.g. text written with hand writing input methods
as mentioned in #91."
5be3099a5b9067c85b400be68eb3ca0bb909fdc4,Update build tools SDK version
887d7810f63d0b6c2a1dd3bf5f9ac47e2445cb24,Update build tools versions for travis
f86c7a85d3bd9bef706c67f4df72f1de6471c79a,Update .idea config
cf19d43bb72855f4c931d5c5211c6521db6c264e,"Gradle build updates

- Switch to using gradle to build jni lib.
- Enable proguard minification.
- Add the Android support library."
08d6d1706de4bd597d20302519377dbf614e235b,Add pref for showing extra keys
042fbfaea3eddfda01187804c54ed7518d6aa4c7,TerminalView: Start support for extra keys
8714800c6b3de79eb6dfd1c20253c0a5a1afca92,Add an extra keys view
d1c0b6abdcd02618982c0edd234aab025d945860,Add initial support for extra keys
0861be363b831a87aae80f766b5f27429c1b8f66,Remove some inspect code warnings
a2ebcdcf49b6eff5ba9f3cde6689f156e856c64c,Extra keys view: Implement sending text
f047160fd6b4db1b55b196c16260d4943223fd63,Tweak layout for extra keys view
2104252244206ca6788e1f07fda0c19a61c9839f,"Change session exit detection

Previously we waited for all opened file descriptors to the terminal
to be closed. This caused problem when e.g. running ""sleep 900 &""
and then exiting the shell, with sleep keeping the session alive and
had to be killed manually (killing the process group did not help -
the shell had already exited and was in zombie state). This is also
what most other terminal emulators do.

Relatedly, switch to sending SIGKILL to force quit a session instead
of SIGHUP, since SIGHUP can be ignored."
20d57908a7ddd9ed791217304017e8a522451d36,Make cursor visible by forcing to text color
599aaff723ee71d1696e2903741566cbee3a941c,Update android gradle plugin
491240ee3fd217b1d5c401e57ed4ef9f377f94b6,Fix MockTerminalOutput to implement all methods
9be6470d191a480a8d8daebf3bbec549f92b1bb1,Add .idea/inspectionProfiles/
a020d7c484093ae893b600fe34bebe9451699d23,Add a wcwidth test
d17bbab8ee8cae4b1fed2632baab08be5b3fffc6,Strings update for process killing
1cc7829847fd9206c50c0e95bc49ee506a4e20c4,Update version
33d1477d4a7b48f213b2e2948ca01dc007dc37b1,Remove KeyboardModifiers
9519727f38abf876e331fc6ca53a610cf870d5d9,Enable installation of x86-64 packages
5566b1307381e731c04f36809c05054e51f78033,Remove stray character
95a0878e10010f0b4c81cfd046e0c8fe08796a6b,Update gradle configuration
a049ea50d7447a3fc1bcb6bafa785b60085a8221,Update android studio lint configurations
964c0b7b4f95e0c5ec05f8844bd50f489f349efd,Cleanup imports
d72fd579eea1c7d0bdcab0625d214b0a58d6d1c5,Various updates mainly for extra keys
2db6923bc4d946586c061f00d30a0b1678d56fd5,Reformat code project-wide (getting rid of tabs)
f156ce259ebd474ec3d7ce5bee4a56037c8d80ad,Update travis configuration for androi-24
f57232b40e99f8b3c991cbaec0040e44c6d275e6,Use jdk8 for travis build
b16f11cd87bc5a49052beecd6c2c2edc4d473c05,Formatting for .travis.yml
bc158252d698ab6ac4f481d5f032b107c3eaeeac,Use static imports throughout
2bf9e7b2055ea4341a50530abb7fb8ed7cacee61,"Do not send mouse up event after scrolling

This fixes an issue where e.g. in tmux, when pressing the finger
on an upper pane and dragging it down to scroll and releasing it
further down on another pane, the upper pane lost focus to to a
mouse click being sent to the pane below."
ef892fca0b2074b0b3d2157a828bc3944510e3b8,Update versions of support dependencies
962a43743c181115b72fce907159db095c67fabb,Update for android studio file
f9842f22fb2b691afeb24bff9efd19c7bcd49204,Update gradle wrapper to 2.14.1
7e2cbd969a7242faa9877d7bb7a83c0603d44ec1,Update android build tools to 24.0.1
9d7ed21f27d7fd0ce153d2b63fd32fcf503e7a7e,Fix Ctrl+/ to send same as Ctrl+_
0550dbff9d0b04010c253bc0017e2f6541feb1bd,Fix backspace in combination with Alt and Ctrl
d0abd1709145b799a11251f136e80b0f2162dbcf,Add version check before field usage
fb7dc21c183f638c554bba8675b279da6f98f0e3,Prepare for final build
6b62e65154842404b2849fe91da99ed76a4011e6,Some minor AS lint warnings tweaks
8caeab470eb7ed71cd3ff56a5c129d2c2d5b3d0b,"Tweak the IME mode (from password to URI)

This makes more sense and avoids the extra number row when using
the Google keyboard. Closes #87."
95a50096cbb6d4f2d89b6eebc0f87bdc8db54481,Remove attempt of icons at popup menu actions
eaeb0930f46951099157c0c8715312cdc37efdfc,Enable x86_64 and bump version code
a73228b1097b9a1cfd162992b5fada3e482a0408,"Fix Enter to finish session in more cases

Detect the Enter key to finish a session not only on KeyEvent:s,
but also when the IME uses InputConnection.commitText() to send
\n. This seems to be triggered more after switching to the Uri
input type. Closes #124

Also bump app version for a quick release."
b95d84fe137b63d0d3824bebfaff4315810ea31b,Use absolute reference for android.R (lint check)
dfb22e605076b57c076b495bb8ecc1dca308795a,Make user-configurable shortcuts case insensitive
dfdc9b37e1e725985ef37b45b7740dda83501e1e,"Allow predictive text area input to remove session

Fixes #124"
c0a5e5f57a4847ba6b1733e3836cc9db194aa01b,"Switch to TYPE_NULL as input type

This fixes #126 where the previous input type put some keyboards into
word mode (no direct echo). The workaround for Google Pinyin does not
seem to be necessary no more.

Also fix backspace after entering emojis on some keyboards (Swype)."
f9c642c672f6d4bb010a640fa5c55560f29342d2,Support Unicode 9 for wcwidth (don't squash emojis)
c9b49cef58c1bcd57bc92a6c08c55ac997fd3d5a,Bump version to 0.38
c350318c775ddb8dad197a97a6cffbb587e64b8c,"Make ExtraKeysView work on Android 5

This is done by explicitly specifying alignment as GridLayout.FILL
as I have figured out that this was fixed in Android 6 in commit
https://android.googlesource.com/platform/frameworks/base/+/6dafd87fb4174447018b044bc67818d54fab57d8%5E%21/#F0
which set default alignment to FILL if weight is nonzero"
30b05e9ab27412a6a7505b8775d7ee30a6114874,"Merge pull request #132 from michalbednarski/extrakeysview-alignment

Make ExtraKeysView work on Android 5"
d2b27978e2432fa1a4731c4e25acfa55d38b5686,Bump version for v0.39
5532421ab2d87eaf7917b9295d56e2059c838ce9,"Check arches in order of preference

The documentation for Build.SUPPORTED_ABIS says:
""An ordered list of ABIs supported by this device. The most preferred
ABI is the first element in the list.""

Respect that preference when checking for which arch to install
packages for.

Fixes #131."
8d00f22d4c21233331881222e062c75d9bb51283,"Catch KEYCODE_MOVE_HOME and not KEYCODE_HOME

The KEYCODE_HOME event is handled by the system and never delivered
to applications, it's KEYCODE_MOVE_HOME (FN+LeftArrow) we want to
handle ourselves and send as an escape sequence.

Fixes #138."
4609dd71c680d7915c6e564c7bf95dd16c584c39,Switch KEYCODE_HOME -> KEYCODE_MOVE_HOME in tests
7bb64d724cb16bf68f477f4e136e1b9898806909,Update android plugin for gradle
990a957383bd8df1f6570d2d7629a1c6dd8b33ce,Bump android support library version
1dc92b2a12d9d679740bd6483fc603649c3c23bf,Remove unused imports
64c23f498f6f37a39f4f38a9a98c6f8b8a736db1,Implement true (24-bit) color
afb339e9d8b9d93495fd48ce0049c6c5dc7ba23c,Format code
c1a9b7726f2fb897f0e277f9512e85f4e9a55c0b,Tweak InputConnection implementation
166710f14a6bfe22472caa79503a4f208f42101a,Bump version to 0.40
a2cb3fafee925cb08aa327378b3e24eef04b5b26,"Fix numpad 0 and . key handling

Fixes #146."
e169af0447290f9a588bd50cf42fe3dd8eaf2520,"Change shortcuts from Ctrl+Shift to Ctrl+Alt

This works on more language layouts and devices.

Fixes #145."
7e1f8a551f11ddc0dfad1639e91c76a7f603dbaf,"Change VolumeUp+H to generate ~

Using VolumeUp+H to generate a tilde (~) is more useful than
sending the home key.

Fixes #151."
426ddbacbd7c07956bf5af1c175bb8116d0e9e01,Remove useless casts
8e90545c4bca18c76fa710d31dbf657d5c23d6ae,Remove comment from build.gradle
805601308243cb65f94650f0389acd7afcccd875,Bump version to 0.42
26dcd5af882770ee9380803dad82ae7577dc9a6d,Update gradle and Android Studio
d658e16801457aa40482c9bc791634fe9a603702,Use the new cmake support to build JNI code
4de82d9fe0d7809624061d75cae770212b3c918a,Update gradle to 3.1
8314a2756c069b4c55d3c0d3d058f609940e946d,Setup NDK in travis
3480bf7346bf6d87f1a5ad8d34c6d8bd1bbd55be,"Switch from cmake to ndk-build

We switch from cmake to ndk-build to make it easier for builders
in not requiring an additional tool installed. The JNI build is
so simple so we don't really need much of a build tool anyway."
be7cfa603a6720c4babbe2b7379112de8022d1da,Fix gradle syntax for Android Studio
283792af5e866337863642ee8bb997f25eafbaa1,Refresh listview after changing session name
0457ddbc69c7221ffd6d7aca5c702331c5e8bdf2,Update build.gradle with latest versions
794c7ee333d13c40d07029269eefc24c7549d99e,Remove deprecated android:singleLine attribute
44197b90e2c38f6a1f84c434cd7b8005348fd1f3,Update .travis.yml
8d3d5e147fc6786cbfaabcdd60713f16403042de,Remove outdated JNI building instructions
019aa448376d5b330b8d64d31d87594a1a2f4f38,Update Android Gradle Plugin
6aa04924349e9a1de3f19eaa34cc1b4cd08038bd,Add @NonNull annotation
60f7aada9ec118cf697f4c44ab183c2cfc10cedf,Remove logging at info level
8ad7a6669c0c4301266c44da5dfde65f0ba16546,Switch a commit() to apply() for shared prefs
755513bb33e83adef05c4b8ef3d5dddacff050fa,Update gradle setup
a0fa51eb926b478374599320c59c2dde5802cf15,Start work on background jobs
d939d3d927e03af11d72c55f8586a5153a7a2189,Update Gradle wrapper to 3.2
883be37b98aa9cfc48d1d59d16cc6a085cfc291b,Add a shake animation on a terminal bell
07a4607c04c60de2f085f8a2bc2fb0e3c103a784,"Merge pull request #193 from friederbluemle/update-gradle-wrapper

Update Gradle wrapper to 3.2"
dde854eba71b66122ebfb506bac3bf4d169c2dcc,Switch to a vector icon
e1ea68913f52103e80f236f0497bda5e0bf56df6,Use to a vector notification icon
0c8cd90f4e0bcd1d6bc8d70b5cfd3f1e0a47b752,"Use $PREFIX/bin/sh for script file without shebang

Also try to handle #!(/usr)/bin/foo shebangs."
5ecf5d12d1e06acd061b5695fae819724f56f89b,Tweak the icon somewhat
ee7631dfac3b3920949e27d0c0e30305c0fa50d7,Add a round icon for android-25
70245eb78c17f0932d1497234825cf1cab978984,Use BackgroundJob.setupProcessArgs for sessions
cdf0e72145eeddcd6999a9ee6deea0795aebc4ec,Enable coverity scan for all branches
e272e3b3b278820cb7d7e91719d1fb6cf6ae2241,Update README a bit
fcf07f6a19e5e08a2fb4461ef13283dcc3537f6e,"Coverity: Specify ""branch_pattern: master"""
0c6180bbb13d814276177a1892f564ddd57983cb,Update gradle deps
6702846c7c074387835718c32f8af9b949a0fc78,Update build tools version in travis
26457e84439858b3d60ded503da60c4bcf97b042,Tweak fillcolor in icons for easier svg generation
f10ecd4db50f20c8bbb18c13a36e30a98d7e5a7c,Try to fix coverity scans in travis
6cf36fffd7d5407f286fb53b35dcec13bcc9cd73,Fix typo on coverity setup
b8cdd59c68d926a9b038ec966c7b4d5e2de415b0,"Use gradle build, not assembly, for coverity"
6334470f81bdf003b8567af9e3531cec4dce560d,"Try to handle Samsung keyboard better

The stock Samsung keyboard with 'Auto check spelling' enabled may
send multiple backspaces. Note that this auto-correction of
spelling will not work good in general with a terminal, so should
be disabled (or another keyboard used) when using Termux."
357b17e972e706bc166cfbb98b065c8c5c208b2d,"Improve setup of symlinks to external storage

The context.getExternalFilesDirs(null) call may return several
elements, and some of them may be null."
9fe0e494734cf30484c2af14df012c128515f030,"Render cursor color&shapes (underline and ibeam)

Allow the cursor to be colored by the theme, and support rendering
underline and ibeam cursor styles."
9c195407599dcd5f6b088c6e96a66c4c654c0271,"Keep track of background tasks

Also merge wake lock and wifi lock into one, and make it exposed to
termux-wake-lock and termux-wake-unlock commands."
70d58393340e969b2a743f9e159832da7f60c98e,Bump version to 0.43 for preview testing
fcbc036f92fa5f3780f7d9869b12a584ac3ae054,Update gradle to 3.2.1
d12256f5e5d5aeced5d9ba8a187b08d2f47feb6b,"Add flags to imeOptions

Add IME_FLAG_NO_ENTER_ACTION and IME_ACTION_NONE. I haven't
encountered any issue without them, but specifying them is correct."
0501ce924b9e5964966e118dc7a93db921891b05,gradle: Update android gradle plugin
289d58a2f02843cbde8c5f19bd35d47aac978589,Try it with launcher icons in drawable-anydpi
b6ea29d260b87cbe8203a9a334b9f378612ed52b,Remove duplicate updateNotification() calls
34afb9de4397f3d7e34e2029bbcea0713795dc25,"Give up on using vector drawables for launch icons

Instead use svg files in art/ and a script to build the png files."
4c93cb42f175b41671a68d1236fc2495fd748d7d,Use constant for intent extra key
df92896eef85500fd2ddf60afe3f2595cf54c272,Add Android 7.1 launcher shortcut for new session
4f40d5a26aff36fb8ae3f8168889e79bb797e4ee,Bump version to 0.44
e3a1f8224f76ba9bfc4a3116f8884c6fb65152d7,Add art/copy-to-other-apps.sh script
212be59fcae87a3d13867ba891c08c8fa346f24d,gradle: Update build tools
f11644fa51fe4d94afd3f51c921883260eb86b0b,travis: Update build tools
23333c074a2be2786ca2e659edbbdf438221a45f,Fix NPE regression in version 0.44
743b067cae9e87ffaeb26728aa65909d3236be14,Bump version to 0.45
e0e8257f1c633b34c4c545f5e817d0e4b0228c41,Update build dependencies
af21b6dc3eecc71ad84234cf7943f653b415e8cb,Remove unused variable. Use Collections.addAll()
e94f06d0f7ff4173518acf2fc00aa57cf5fc382f,Silence lint warnings in shortcuts.xml
74040dd37f1571f290c868c17e02c1d8c01589af,Add feature and tv banner to art/
7d9d6fb797a190f0bcdb0f3afe5410d4d257ca3f,"Translate \n to \r when receiving text from an IME

Fixes issue with fzf and return using the stock cyanogenmod
keyboard reported by @mklein994 on gitter."
b917acbbfa0e9d81459d13d19c849ea7e21675be,"Do not use IME_ACTION_NONE in the inputconnection

Using IME_ACTION_NONE prevents enter key to be used with the stock
Android TV keyboard.

Fixes #221."
7c0ae4cb54cb98441d797348538e19eb315cfb21,"Remove the bell shake animation

Fixes https://github.com/termux/termux-packages/issues/628
Fixes https://github.com/termux/termux-app/issues/222"
87dfded5e6898fedc1fd5abd5b352fa4f334b904,Remove unused on_bell.xml file
bc96f71a2d6b41ff59b19bfbf3839c9da5a49e2d,Update the tv banner a bit
11afe895e148ad7d6840b9f59797cc256d04dbc9,Try with a bit shorter process completed messages
d48b438c40a00f2f7f57bae2a6f70fa1cab54011,Test wcwidth on two more code points
b7939134819a5ddc53e50b7b36e96fa6c4a89882,Style for android tv launcher transition
d0eeaa9fc30cde3805719f4f98f26412168a82f9,Call completeWakefulIntent() in Termux service
8b6e8d7fdd2f1ebcf63ffd1d6e64107d58f07c84,Bump version to 0.46
cb2f892dc5f242695aee6fe92da0c7563dc6e97d,Adjust text placement on feature graphics
528a05ef6132b873ab2c44e7507cca58b052d888,"Remove the welcome dialog

Instead of a modal dialog to be dismissed without any way to recall
it, the initial information will be shown in the terminal itself."
6e5c04e04f30e29216cb622bb6c2a73a37dc86ee,Remove the travis certificate workaround
57add98e3c9f2f769ed9dbfc10d96414e5a6177e,More attempts to get coverity scan working
a3256ed551bd9be772071410010a1706824a749b,Travis testing
420683fe6543708060bad47e16152761d7d5a079,Add built-in broadcast receiver to open files
8a7f93d72260bba95288ea18213b2056160c4635,"Launch $PREFIX/bin/login by default

The login command takes care of both showing the etc/motd and
launching the login shell."
29e62e608f264534db8b8da741ef023d3e97fa6a,Use standard actions
fc92a27cb26ebfcf6cf79d6cf2c64e99acf84e9c,"Extended keyboard: allow inline input

Ff the buffer is empty, send a newline, otherwise send the content of
the buffer with the newline stripped. This way <Enter><Enter> means
""insert the buffer content and send a newline"", while a single <Enter>
means just ""insert the buffer content"". Fixes #261."
cb60803a807ae035cbab54b94ef430adccaaea5b,Tweak launcher size
ed1874db050cc5aabc2a693daf0c2cbab21eb713,Bump version to 0.47
11ed7e45d8df561c246fb12c356e0bb11aeda812,"Fix crash when opening URL:s in Android < 7.0

In versions of Android earlier than 7.0 the FLAG_ACTIVITY_NEW_TASK
is needed when starting an activity from a non-activity context.

This was removed in Android 7.0 (possibly by mistake), see
https://code.google.com/p/android/issues/detail?id=226647.

Fixes #802"
f6f080955864abf9a7d30d5e3b0ac462dd87376c,Bump version to 0.48
cab6df5c0e194ca97d93f285d19163e26112ff34,Update gradle config
dd6cb5221d6b29eea8b82354ddeb6b22c441e0b3,"Work around Android < 7.0 wifi manager leak

http://tools.android.com/tech-docs/lint-in-studio-2-3#TOC-WifiManager-Leak"
f74a091be69a9b488f73469d6eef5d8276f82be0,Remove useless continue statement
f60316835fa7ac2de9deec57007d249162a83ba0,Fix some android studio lint warnings
835dfc0276e2668cdad13a36aa349deec0ad7054,Avoid synthetic accessor method
12ac0fa73c6ed4dc0434fbcc4aa1363abd1abbad,"Add android:extractNativeLibs=""false"" to manifest"
41d0d6001704f744d9d28e0b9ec09a342841549f,Respect content type termux-open for url:s
009de5a3ee2b06756d8ef49794e8cc867de10c2e,"Split up into modules and add float module

Split the app/ module into three modules

terminal/ - Terminal emulator library module.
view/ - Terminal view library module (depending on terminal/).
app/ - The main Termux app (depending on view/).

Also add the

float/ - The Termux:Float app (depending on view/)."
548b0916b65e04a0d3ad1c4f837dd79c9e6cada9,"Clean up {terminal,view}/build.gradle"
ac0a349ed9401584fe420f8e65a812baa50409e0,Remove versionCode&versionName from libraries
0142e1ed0eb180d4e2b361fb2e953e49cc21e713,Update Termux:Float launcher icon
8c220eaaeaafa96c416c3ca0b2300914f8c71218,Do not call long press listener when scaling
af8b269b516f96ba814ac2995df294cdd3b245b3,Work on Termux:Float input handling
5cd705d6d11afb4d630e055e82b3e0895d6255c4,"Reformat all code in float/, getting rid of tabs"
7d3a988d2fc93e681ed662cc18faa9a8a8171962,"Restructure library modules

terminal/ -> terminal-emulator/
view/ -> terminal-view/"
63adb2b132f72a6c04b81c2f8e479821f9648c97,Rename TerminalKeyListener to TerminalViewClient
19f838e3d13c0325786dada41873e0e354dfcc59,Show window if launched when hidden
eefd504f089f33e7e51a040e7012060036533938,"Use getLocationOnScreen() to calculate position

This avoids problem when the window has been prevented from scrolling
outside of the screen, or when the touch keyboard has made it move."
1a9c38374c0df9b98349bb343464427b3762f3c1,Fix some invalid html in javadoc
5b14124258665a650302a1b9368d5a7f21ff8439,Make GestureAndScaleRecognizer non-public
4aefa5049b8e27de513352ad85d982ce0e924935,Add gradle setup to publish to jcenter
0ac55cd77a42cf30154e0adc9577927d85959db2,"Remove float/

The Termux:Float app has a new home at:

https://github.com/termux/termux-float"
e375f99b0c92ca11d2f7bde5743ba2cda9e71fe3,Remove float/ module from .idea/gradle.xml
779b1ca1f8efeadd3ce59e195b85021370ac6b57,Update the Android gradle plugin to 2.3.1
adc43c40c591ffb498ea26a6c9319a8784c76c96,"Perform haptic feedback on extra keys

Fixes #269."
1be51392537e776644af72dda5fc200fa0ee721f,[Android-things] Launch TermuxActivity automatically on boot
c26315185f0e26db2521dfac64029f797346a229,"Export TMPDIR to $PREFIX/tmp

Fixes https://github.com/termux/termux-packages/issues/1010.
Fixes https://github.com/termux/termux-app/issues/306."
0714e435cbb422b75dd8b0eb20f3e7e745ce613a,"Do not show a Toast on clipboard text

Fixes https://github.com/termux/termux-app/issues/149."
cf06e704296f16b00bacdeb2f13e15882f8dad21,Update gradle configuration
3f0837688194ade55512b98329a343efeddb82de,Bump version to 0.49
61f766b59fb830ff4b3b3532c4a90de40f9ea939,Bump build tools in .travis.yml
9d3f7734a18cefaba6a2199204cbad767d502828,Update android build tools
1a09b6d2a64a813aaf56a209e86100231f36c1e9,"Change android:extractNativeLibs to false

We're trying this to see if that fixes an F-Droid build issue.

See #319."
888802a51977ece2f6bbf8c47f55ff1507c4b2b6,Add test for CSI followed by many parameters
058441dda6f703c15bad9d5ed327a9ec24e78229,"Fix FC from too many control code parameters

When the number of parameters in a CSI control code exceeds the size of
the mArgs array, the code may attempt to read past the end of the array,
resulting in a force close of the app.

Stop the index from moving past the last element of the mArgs array."
58f9f1be71a8da42afcefdc7e687014a35c97698,Add tests for cursor save/restore
2e9383720c44a0c216875f813005095a8743546b,"Make cursor save/restore affect color attributes

SGR attributes are stored in three variables: mEffect, mForeColor, and
mBackColor.  Saving/restoring the cursor only preserves mEffect.

Change the cursor save/restore methods to additionally preserve
mForeColor and mBackColor.  This affects both 'explit' saving/restoring
the cursor and switching to/from the alternate screen buffer."
52a627efc8b44e73b17129cfa6eb111f05fd76d1,"Merge pull request #331 from whydoubt/fix_parameter_fc

Fix FC from too many control code parameters"
c06770c353e89a2f61ae89e62aa21f04e091fccd,"Merge pull request #330 from whydoubt/cursor_preserve_color

Make cursor save/restore affect color attributes"
45bac89298543a9c9ca2e0740777da33dd810699,Remove unused xmlns:android declaration
c29909726cb2c21914b9f1c13a1097d00c910122,Bump terminal-emulator libraryVersion to 0.50
d4be782c03eea8b116bdc97c71c61c4d88b21edf,Bump version to 0.51
c972377bd120c685abe508fc38f02795ecbcb01f,Update gradle config
dc3994d2cf1ddc278b510723f0b264fe4a5bb07a,"Add Multi Window support for Samsung devices

A single meta-data entry is enough to make Termux ""Multi Window"" aware on supported Samsung devices.
Tested and confirmed working on Samsung Note Pro 12.2 running Android 5.1.1.

This addition should not interfer with Android 6+'s split screen feature.
Tested and confirmed split screen functions as normal on a Nexus 6 running Android 7.0.

This addition should go unnoticed on non-Smasung Android 5 devices.
Tested and confirmed no functionality visible on Nexus 5 running Android 5.1."
ed3a3269d86b4708af81836aac7c624ee31f3f53,"Merge pull request #339 from bumper314/master

Add Multi Window support for Samsung devices"
7913e765d5239bac6bb8e2fe49d6811aa1a54eb2,Bump version to 0.52
5b3909cb73b23542734b3315c9c02da7c6a15512,Update AndroidManifest.xml with expanded comment
f9a565d1e03595a6bc9e5dc9fb74f941bb741687,"Ignore C1 control codes

C1 control codes are not used nowadays and just risks messing up
the terminal when they are used by accident."
ad293562bc065f414a1c6b73a74ab8481e405980,Fix possible crash in the copy/paste/more dialog
05ea2ea2389adbe7766e9da21ffe1ae98446a293,Bump version to 0.53
dc9272790bb3bfb5c4c18bbef9e52fcb5540cfef,"Merge pull request #301 from kzlin129/android-things-auto-launch

[Android-things] Launch TermuxActivity automatically on boot"
adae111d5c421da0ebef6354abb821c18b807544,Update gradle config
d7520642de8855b0c8201512e37d5a90dc5fd2c3,Update gradle
edc92bbcbbc7d829caa477b2f07eb53ceabc6706,Start supporting the REP escape sequence
68912139f6a8c8e2527b85d676b83bea5617ccac,Additional REP test
42e3163e927c99089fcd770fd9db33dcfcda8eb2,Update gradle to 4.1
9c42fdb3d6cad2443a42c185013709d4a6e0f450,Added wiki link
1e83ea315107c36fc96204f2688b391d7c95f85a,"Merge pull request #412 from Auxilus/patch-2

Added wiki link"
62b08b3cf15114d27331fa3d1caafc0e511dd21d,"Merge pull request #1 from termux/master

Hello"
4a45b1b617b30472c2f83ad7c19b5780584ce206,Commit on 20170911 at 13:23:22 and at 1505150602 in Unix time.
81fb669d0e24dc271f0d591e91684bd2946c9ea9,correct spelling mistake
f2757fdb76cd6d14ba732716e51a1b11fc6e93e0,"Merge pull request #424 from EdwardBetts/patch-1

correct spelling mistake"
82673d3f823769ea9ff0901c2d7f10824b1a1026,Update gradle configuration
3e05356a69fb0452df19094562384d44d1e752da,"Merge pull request #421 from sdrausty/master

Added two important links to README.md"
8ff72ddd8be23c96e191e60bb6147e13745540b2,"replace help url with wiki url

HELP page wiki changed to https://wiki.termux.com/wiki/Main_Page as it now has more info than http://termux.com/help.html"
e558f824c52d612b1ff6c66e4050865f221a117a,Update gradle configuration
3f04a0a0d5d07ed288f047114bb9f0cce849d46d,Bump build tools version in .travis.yml
9e5293a08e111c6965af7ab2551513511f42dc56,Do not scroll when below bottom margin
d68a0f05be11255b0a3185139be8964c88b51db0,Update gradle configuration
3533b13de81997068522b6d27a3645f2a2a6aba9,Get rid of two android studio warnings
092a83a688416b7e3edb80f99ddb54a09fa983ee,Validate file path in TermuxOpenReceiver
ac338ce2c5a773c1ce455f80fe2de81662b2d4d4,Update gradle to 4.3
d09f70de1e0da8ab938c16b32f6afc653ddd250e,Use a notification channel on Android O
c949940374fc6ce8e9ff78c192e344d1277d00b6,Update support deps
694ccc38c41b47fd7fa17b94ec9f10febde15bb4,Remove WakefulBroadcastReceiver usage
2deb9899bdcb87c73cd95eff5eadac81076e21be,Update buildToolsVersion to 27.0.1
0bdbf314ef08a8a899df6303316fa1c8c9852365,Update gradle configuration
5126f06e0677dfef52480e8bb85e1d0dbeb357ef,Update .travis.yml to latest setup
798125ef7a6bfe0aff27e664d7a342842fecd4f4,Remove outdated comment
dd502e55f839f72407f1deddd4a8668c693334d3,"set default notification priority to low

since we're a foreground service, in oreo we already get a higher
priority; see
https://developer.android.com/reference/android/app/NotificationManager.html#IMPORTANCE_MIN"
367398bafb07ae7b80b6dafa5550266ca3bf42f7,Update gradle configuration
86bd3ca21b3ab2e42856a3dcd41ec2c897f28b3a,Bump app version to 0.54
fc4ef838bfae84b403c2bf12d51ea7cfe977ccd4,Configure proguard to keep line numbers
02af113ddacd3454422f9b5124afd8b1c615a69b,Bump app version to 0.56
a4e4f767753402fc16d7008bc825e63094b98801,Remove some Android Studio warnings
6025afc2c04d554caf73812f74878f73f40abfe1,Update the Android Plugin for Gradle to 3.0.1
85037a75a6a055224ba144bd506a4be154e5c72b,Remove redundant cast
686677ae45b2dcdbcd2539f8cf341e66a8881b19,Update android support dependencies
65f30e77ba897a2bb49a41347559a36b5dda51dd,"Add tools:ignore=""AppLinkUrlError"""
231c02a0c7a627492c2c2f68f5eaac9f822557dd,Check for null mTermSession in inputCodePoint()
8b566485e8a034ec7a2229ed1ca82b35a42ed767,"Do not clear the sessions on ACTION_STOP_SERVICE

There is no point doing so and it may cause problems with the list
adapter."
ab59e0895961690d2402efaab3210b8a281f82a0,Update build tools
b3472e9e62859ce2baaedfbc6721c75dbbe9e9fc,"Disable the ""quick scale"" gesture

Disable the default android behaviour where a double tap followed by a
swipe is interpreted as a zoom gesture. Most people seem not to know
about it and hit it by mistake, see #495 for an example."
b29b24f5079ebae524acc5cb868c40a57185b758,"Add android.max_aspect=10.0 metadata

This is needed to mark the app with

	""This app is optimized to run in full screen""

when run on a Samsung Galaxy S8."
ab205ae05beb742d968ddcc445d068af02878d43,Update build tools in travis
de4f334e24a0676aa21d577f229dfaa4f595f9a0,"Remove the fullscreen setting

Trying to use fullscreen doesn't work well in a multi-windowed world
and makes using translucent navigation and status bars more complicated."
cee0466dd79e41d41307155de32fba32e9e2886d,Bump version to 0.57
0964d835720a32918b80f095d12d76b53fa91774,Bump com.android.support dependencies
d8e6fd21d160595d49b5561e9f1039c2569bdca4,"Set android:resizeableActivity=""true""

Setting android:resizeableActivity=""true"" should AFAIK not be needed
as https://developer.android.com/guide/topics/ui/multi-window.html
states that:

  If your app targets API level 24, but you do not specify a value
  for this attribute, the attribute's value defaults to true.

However, on a Galaxy S8 running Android 7.0 this attribute is needed
in order to have resizeable windows when in Samsung Dex mode.

Fixes #309."
50f66a12da678f1149ad145185c55b819de9b85f,Bump version to 0.58
f802d6001ddc63fad2004ae7903dad638bfa7faf,Do not send mouse clicks out of range (fixes #501)
40a2775f52eb951d6309d2173a05123da58e1ba7,Bump version to 0.59
186b49d429e462a7673f1f995397c15a7bc06d28,"Work around travis API 27 SDK checksum mismatch

See https://github.com/travis-ci/travis-ci/issues/8874."
8d7a67645b89002342db7471768e565718c8866c,"Fix notification icon color

Icons used in notifications/status bar are monochrome and should use only white color and transparency. It is displayed fine on Android emulators but it's shown in black on Samsung Galaxy S7 running Android 7.0.

After the change, status bar icon is white and the small icon in notification still uses the black color set via setColor(). Termux doesn't support devices running Android older than 5.0 but using white color in vector drawables would be also necessary to generate proper (white) bitmap icons."
48fab33b79f6ddad2baef6684a7af0e3acaeff91,Bump version to 0.60
c2ab5bcd50c9ce1e0a5b87e4b46a6ea487ef2f37,Bump some dependency versions
9f36ed06b8e2c3b5e5918444e0c37699e21a7196,"Make TerminalRenderer public

I want to use the renderer with a custom canvas without having to render to an Android View which requires a context and all sorts of stuff.

Can't currently do that because the renderer is package-private"
c444f1fd28fd952d37976a025b4c58a95371f468,Update gradle configuration
31ba36e0fae1c33defc3b405c1ec1e09b5b8e865,"Remove explicit buildToolsVersion

https://developer.android.com/studio/releases/gradle-plugin.html#behavior_changes"
3417e37e8d3244fae904d499a6ed15e55bb11c56,Update gitignore for Android Studio 3.1
0c837796f0489795cac06a9d786bc0eb8533ba7d,Update Android plugin for Gradle
cd9dbac5485c5314c237f472d63c391cf48b0b79,"Add Google Repository

The Google-Repository is required for compilation because some dependencies were removed from jcenter()"
80c81b274d5778b8488432146d92cca156068b6f,Update build.gradle
be6a73d862ab8ae2b7a5cc37f281ea0fbd0d118d,"Replace \n with \r when pasting (Fixes #678)

Termux will now properly send \r to the terminal instead of \n when pasting
multiline strings.

This fixes cat not repeating back lines and nano accidentally justifying
text (because \n maps to ^J), as well as other potential issues.

This matches the behavior of other terminals, such as iTerm2 which explicitly
does it here:
https://github.com/gnachman/iTerm2/blob/f8a5930/sources/iTermPasteHelper.m#L113

Signed-off-by: easyaspi314 (Devin) <easyaspi314@users.noreply.github.com>"
ec1087d56ff9d879256fa55c8a255e888c7a5d5e,"Replace CRLF with CR as well.

This should replace both \r\n and \n with \r now.

""\r?\n"" matches 0 or 1 \r and one \n, which should capture both
escape sequences."
69d954a58392a1fdcc8a943a50166af1500527d1,Update gradle configuration
8472fce8ba513c96c914184e252a08fd64a1d901,"Use lower when looking up mime type from extension

Fixes #721."
6d9ffb69223f6c5bd1a908f8e17644ea32c42383,Bump version to 0.61
17c4a452127a213c571d6edc48c1d9b8791d608e,Bump gradle dependencies
3bb2849a88f278a780f42ad31baabba2adc6fa86,Sends broadcast on app open to notify addon termux receivers
90b6f93697d3e1420d3ec98df7122631e282429e,"Add fast path for TerminalRow.setChar

termux/termux-app#603"
f4335d3824d7a3638c3805a624d08d1640895ac7,add some functional keys
d5e007dbb3148ea1755e1c354577d730e18e4f45,feat button color
594a5dfe25b74f25b9c9ad137404d22b18acaeb7,comment unnecss code
3a16f461e7fbb9e3cd32bc3fd4479b14014740d9,add symbol popup
8c82f43dce134889bafc5a602b620678c3a600bb,delete unnecss code
2e53ef038e5f571dfcd9187eb1beca3c9ffd25d0,fix popup bug
f2f7f963e69a55a37b1e72d419b24b8271e119cd,feat for - ―
ce2d1c0d88c10faa22b194a4ec66c9014116be07,restore terminalview
dc145d65f860510e306d02ad226c5f938ec58d9d,minify long press interval
bbd46a763ce98507c5ae275ac315d4ebd9ad410a,"Fix for #572 using recursive delete

Also see #578"
c5ae5bb06a49b9a931aa89c5157f1be10a31b89c,"oops, should have local Java"
0f20fab02ce03328bc8c8e2a2c28a218656c968c,I think this is it
bafd21bb390ce5fe5fd1fbc359c0cf1a248543b4,fmt indentation
c5923201a449f2c8b30081638f49ed3d4d4acc1a,"fix indent with vim on termux

web interface would have worked, if I had deleted the tabs, first
This vim is adding tabs instead of matching the previous line's
indentation. Looking into fixing that now..."
b4e2c99d467637ad776861767ad01eb392040f86,"Stop exporting PS1

PS1 is not supposed to be an env var and should be shell-specific.
We will set it appropriately with the init files of the shells."
4080f41cc7cff24c419bd2ec1cc81380839ec94c,Bump version to 0.62
d3b4d35b2a1930603795263a2f4ec60b106281de,deleteFolder(): don't treat symlinks as directory
89048274ddea2c1422eb689bd15b0070584d391f,Bump version to 0.63
c80e126b8fc07e8c322bba4c1f277086a962f81f,Add a .gitattributes file
2b6a10712b8ffa4479ccd2a3ea436b2447f72058,fix button background and row height bug in api 21
35a9101f84cf5ab161162e44828e7d50927e8f4b,"terminalview: add contentDescription to the view so accessibility
services can get the text currently being shown."
5652624fc2c0e926234bfb8263026d3e65a5c6cb,"Call setContentDescription in onScreenUpdated rather than in onDraw.
That will be much less expensive."
d1f0c76db3eb85fce74af7aa8e39aecb41e8f8f0,"TerminalView: only use accessibility features when accessibility is
enabled when starting the view"
b7864d6ac2e979e6c299d145447afd1203510c02,"deleteFolder(): check if passed argument is a symlink

Prevents possible data loss when user replaced directory '~/storage' with
a symlink."
fdae272214fdbcd234d7180150bc056d1d514b9c,Bump version to 0.64
365f9723ccf2ad3eae427028bbcdfc20f04543dc,"- in onKeyDown() ignore keys when the Fn key is pressed

- in onKeyDown() return false when the key is not handled.

The above two changes fix the handling of Fn-key combo's on devices with
a physical keyboard, allowing the android system defined fallbacks from
`/system/usr/keychars/Generic.kcm` to be properly handled.

Fixes #731.

Original diagnosis and fix by Konehaltia."
aaa92279ca6382ae23769b52ad2c2959313815ff,Bump version to 0.65
61a44dbfa8052127c5de14fe2dd1924c587f49dc,Adds alternative drawable resource
db13ea02b623e85459face97ad956ab144f3ed3d,Adds foreground and background layers
68a83ccf37d2214cd913dac36e95678528b80746,replaces foreground and background layers with nord color variants
963663e0cdce1fa3f240ac5f622e5578920ab67e,"close sessions without waiting for user input except the last one

An attempt to deal with these issues:

 * https://github.com/termux/termux-app/issues/627
 * https://github.com/termux/termux-app/issues/56"
8df73a30064393b7ee20ef6bbef38675b5a506f7,Set targetSdkVersion 28
57a3a9b111f7f27a725557413aabf415e55286bd,"Request the FOREGROUND_SERVICE permission

From https://developer.android.com/guide/components/services:

""Apps that target Android 9 (API level 28) or higher and use foreground
services must request the FOREGROUND_SERVICE permission. This is a
normal permission, so the system automatically grants it to the
requesting app.

If an app that targets API level 28 or higher attempts to create a
foreground service without requesting FOREGROUND_SERVICE, the system
throws a SecurityException."""
f0eeb4781b8da0bd6b20ff37ab48c93031b4dc0b,add support of configurable extra keys
f88b9c4629ec6342c06ed4e68f0ae88337505640,"ExtraKeys: add possibility for insert, delete, enter and -"
b51dd4f55899c1871b17bd0439cf33c977a9b031,"Extrakeys: show extra key row per default

Might help new users."
b3eabd9bad5f0eb771ff4304cf618b0494d5435f,"ExtraKeys: fix so app doesn't crash if ctrl/alt aren't in extrakeys

Otherwise we get:
AndroidRuntime: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean android.widget.CompoundButton.isChecked()' on a null object reference
AndroidRuntime:        at com.termux.app.ExtraKeysView.b(SourceFile:128)"
7187ed6950b427761dcb05be08230d600d7aebcd,Extrakeys: fix rebase error
244248b1a055455198ae00109abf449a60f1e314,Extrakeys: make ― the same as - in some more places
06968a929591a6f77389053b31f8a634042c70cb,Extrakeys: fix typo
d03e420e75cb25aca57478a0323a6675b36ade23,"Use LEFT instead of arrow keys in config, and include arrows characters for special keys (will be easily changed in the properties after)"
55efdb2f56e5ae435a8642e606cffc9b3c422a66,"Refactor Ctrl, Alt, Fn code"
49c051c8b730c4a0cc0340ec35bb32a167688909,Fix Typo (KeyEvent.KEYCODE_DEL and others)
c24167f6a51d0f0dec32f30917de20160f2ea1e3,"Use utf-8 for config, Activate defaultCharDisplay, Fix Typo"
9db8948f23f4c7606705f5050dd977918c84ddc9,Fix typos and build errors
a854960476839c863f31e84bc6940a451e710979,"Declare buttonText final String, dont't change value inside reload"
ec77be00dc5d6aafd0f51868e825a8d5ba1a1656,state -> SpecialButtonState state
af7515247bbd0c66f4c25bf17f26b7337f77af3d,"Fix refactoring, Ctrl, Alt, Fn keys work again"
b99d09230569293825f83824cf56eaf653544c70,ExtraKeys: Prevent app crash if user specifies different row lengths
f74293e8fb4eca823c5aaf75699008af9b8f42d3,Use extra-keys spelling and correct default setting
0807600a2db2e825c17ce1ac2607493cf0cb556a,"ExtraKeys: use ' instead of \"" in default key string"
99e8ffcf9003f6ecefa78519f0fc6e3a6996a232,Add aliases for BACKSLASH QUOTE and APOSTROPHE
3693e3c1b6da04398cbd73a28b44a764abc9bc3e,Default extra-keys has TAB after ESC and UP/DOWN arrow keys
beb8a004e6ea64e2b3795fc9320da8c8b2e0a871,clean /tmp directory on cold start
4eca639212e44ec7b42e4f2503d6308a3c7ff588,"add some padding for TerminalView

Should fix https://github.com/termux/termux-app/issues/516"
26c95f1397e308b3c54cf1aae85d50102656d037,reduce padding to 3dp (5 dp seems too many)
a9eddce672b6c98bc4ea9a97da5a3fcbe295577a,compileSdkVersion = targetSdkVersion = 28
07d6c9bd5ec1360911b44b47e05cc40f3d2890a8,Remove unused import
221046732ba3d1ee6423037011e4e2377ab95b8b,"Update travis to android 28

This bumps build-tools from 27.0.3 to 28.0.2."
5ff801c914f041e905be4398bda0b2194ac4d411,Use sdkmanager to download ndk-bundle
6dce32aecec0881e73cd99ed64680669e149806e,Use 2 spaces for yaml files (.travis.yml)
7593ddde38c5b95700eacbea8981373bba9596ac,Update README.md
08c72f9a655993e01d95b28d8e39166b7f65d606,Remove .idea/ folder
076176a5f64d085172030118c9b6ec8dc336929f,Add whole of .idea/ to .gitignore
e053cf82ca231f9c06d020d26c1a6295dfdf9934,Update the Android Gradle plugin
a691333c5ea982a3f554f7e21a6143df45bb4e70,Update the gradle wrapper
d584502fef2f6b1fa5c21363811e4383b0f6c0b6,Update .travis.yml
35df3f72c9f6b6aebfe57f2780157fc279868f9a,Revert to java 8 for travis build
b61da23be761a874ccd610835946f0b9b352b22f,Enable java 8
4b52cfbb933444eb8fe671c4b525c1855b4df91f,"Drop the round launcher icon

It's better to focus on the adaptive icon for the future. See #830."
82f977fbf136f3414ecc6155ba519b3ad07996e2,Remove unused function
af445f96184656aeae8047443248ac76eb44f66d,Improve config parsing
095ed8b54f4c4252a96e9a1570c18b4ec280d298,"Use jint as return value from native function

This silences an error from the Android Studio lint."
b4563023f67fcef2372a1897a5c3b1c92d793d3c,Add casts in termux.c to silence lint warning
d1977479bdebf8e146baa6a4458133cda133de7e,Update the Android Gradle plugin
406438e391ec3c9b848c52fc46b542bdc891d5b4,Fix Android Studio lint warnings
6e6e4fd212a2ecf6644fb7605c6a5e457270d638,Use vector drawables for the launcher icon
063ef02f2b5b95efc5961d4fbe90e8196f1bbc5e,"Let the installer create directories when necessary

By creating directories when necessary before trying to install files we
depend on less details in how the bootstrap zip is constructed."
7056945f5d62e9b0df7001ef2e382227725cf38f,Move to vector icon also on pre-26
b54c8276b4e17e070ec20b6c398cbd7f90d8571e,Add .swp to gitignore
cb0710bb83520eb8668461b76b9a24adefe5c91e,Use a solid color as background for adaptive icon
8c7b1a60d2425fd42c712d6157254b9dc184436c,Minor icon tweaks
e2bda2bb524e8e0caf52e48463def77a6cdebca7,Add art/generate-big-icon.sh script
8e0b8623bcf1d58482b739e6636bb34e22950d2b,Update art/copy-to-other-apps.sh
829414ac190377aaf7037989f0f4710debe1d843,"Reduce the height of viewpager/ExtraKeysView to previous height

Commit f0eeb47 introduced configurable extra keys and thus changed the
height of the viewpager to be multipled by the number of rows of extra
keys. However, the extra keys had two rows at the time, so the initial
height should have been changed to half of what it was now that it is
multiplied. This was not done, so the viewpager was twice the height it
should be after that change."
a8c270f3c1be7d1936ca291866c737f4a7b515dd,Use size in icon name in big icon
8c3a30027e9572bd61071f0949b417d66c146b18,Migrate to AndroidX
fbb048ce56324141fee35fb41929606067806ddb,"Add issue templates

Hopefully gives less package bug reports opened in termux-app"
31f2dc35bc1d0f6e36000a1fa3b67cd57b476ec6,Fix Android Studio lint warning
1e4fa8c045a2d8dfd5e8c17346c92de4657fc797,Update the android gradle plugin
4df285013e3e7720933d4be3f01ae9490aa26aca,Use constant for utf-8 encoding
70c1bddae01d5cb706a7607629566b0f700799e5,Use constant for utf-8 encoding
b38ae24908b2cf5a03f3b096c7a7d24528a320eb,Make termux-reload-settings reload the extra keys directly
743225ab6a38687d07d172bdd460b624ec24dd43,feature: allow to keep screen on
d8f066dec47f63d57d0a669731d9b98efc23b063,Minor restructuring of TermuxPreferences
158908a3bf58f269ceeaf32362d495868820bf42,Keep help context menu item as last item
ad1ce585d99b9be17fdedf63cd6528eb77401b8b,Bump version to 0.66
7f4df8328cfd4209b1c98d558e6274fd5a67f729,"Toggle the extra keys view with VolumeUp+K

Using K as a shortcut for toggling extra Keyboard probably makes more
sense than VolumeUp+Q, although we support both for now."
ed8bd4b56956e44d341d829e45ae5c50281ffb6b,Update gradle wrapper
c986a46fb93f44f0eaae0e53b52e6e42011707e4,"extra keys: fix crash when clicking on ""empty"" (undefined) key"
2a36b915cbb201bda9b77431ae6d670961cee67a,Implement CSI 3 J - Clear transcript
330301899ad9ff76c2257e700a09964f512017de,Send \r instead of \n from native input text view (fixes #1020)
e3512c957db2a1022d308c717b2c26d7a21779be,fix termux/termux-app#995 on the java side
85a48a79a34ccf7d2be7d7f11cd20a4ebada008c,termux-app: Fix a typo in TermuxPreferences
ddf5341b8638e26dca923aca1df3520436fd2ae4,native text input: make text selection visible
bd45837d9378b04a257bb875391a1d1192310b71,sessions: do not clear TMPDIR if application was not started
e4220a7ab1c36f61340bae485154d12a75a7a020,Update the Android gradle plugin
70a786613d6708cc49daaa4ac018641d8344a5ff,Install from bintray on Android 7 and later
bda80547ad087cba9dcf131e298e5ff8ded4f0d9,Do not export LD_LIBRARY_PATH if bintray is used
fe41cd486fcd45555996a0f834a63583a0e698fd,"sessions: failsafe session is now accessible via separate launcher icon

Also enables session autoclosing so no more ""annoying"" messages
about ""process completed - press enter"". There autoclosing will be
performed on exit codes '0' and '130'.

On Android TV devices old behaviour will be used - auto close enabled for all
sessions when amount of running sessions >1."
10fe238ddbfdb52b58ab946a025daa5422e16583,termux service: make sure that styling is always applied whenever session starts
6218d0803774de97c32e3b7d5a56066733def823,"Use https://termux.org/bootstrap-${ARCH}.zip

This will redirect to the desired version of the bootstrap zip in
bintray."
42fc0ea1cde1fda30b42d3b8ac9237a64d3d73ce,Bump version to 0.67
3bbd61f9d7c4efc3377ad4ec23ae13e43245549a,"extra keys view: fix crash in some cases

AndroidRuntime: FATAL EXCEPTION: main
AndroidRuntime: Process: com.termux, PID: 15799
AndroidRuntime: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean android.widget.ToggleButton.isPressed()' on a null object reference
AndroidRuntime:        at com.termux.app.ExtraKeysView.readSpecialButton(ExtraKeysView.java:119)
AndroidRuntime:        at com.termux.app.TermuxViewClient.readControlKey(TermuxViewClient.java:116)
AndroidRuntime:        at com.termux.view.TerminalView.inputCodePoint(TerminalView.java:655)
AndroidRuntime:        at com.termux.view.TerminalView$2.sendTextToTerminal(TerminalView.java:336)
AndroidRuntime:        at com.termux.view.TerminalView$2.commitText(TerminalView.java:273)
AndroidRuntime:        at com.android.internal.view.IInputConnectionWrapper.executeMessage(IInputConnectionWrapper.java:341)
AndroidRuntime:        at com.android.internal.view.IInputConnectionWrapper$MyHandler.handleMessage(IInputConnectionWrapper.java:85)
AndroidRuntime:        at android.os.Handler.dispatchMessage(Handler.java:105)
AndroidRuntime:        at android.os.Looper.loop(Looper.java:164)
AndroidRuntime:        at android.app.ActivityThread.main(ActivityThread.java:6944)
AndroidRuntime:        at java.lang.reflect.Method.invoke(Native Method)
AndroidRuntime:        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:327)
AndroidRuntime:        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1374)"
0605fc48436bc034e6435ad3269a0b79b7334989,reformat res/values/strings.xml
f4fb45cbd63a4aa66caa943e356014fa5ab8e71e,"Add the label attribute on TermuxActivity

Should fix the F-Droid naming of the app, see
https://github.com/termux/termux-app/issues/1107"
8c2708408687d57d7c9f49c0d630790172901fe7,Bump version to 0.68
a082c6384936614d472ea76f8439eb2c04cde538,Make am work on Android Q
012ff83a0613e38eac711a5e7eb96f15143c627d,"Add limit for the bell (vibration)

This fixes https://github.com/termux/termux-app/issues/442"
97f01387b95db03b38ad6fba19fdab27f0b8e83c,Update Android Gradle plugin
7a5da83ce2186ba6896ec3a4ee1592f072969af1,Bump version to 0.69
fef0c6686814d7e0a246384e2a82b4fa2f060246,"Tweak notification icon color to make it work with dark notifcations

As the notification icon and text is set to black, ROMs like Samsung OneUI and themes that change notifications to have a dark background will have visibility issues with Termux notifications. This commit sets a neutral color which will be visible on both white and dark backgrounds."
af9f28c0109dc185af4c5dea61e24a18fe45c74a,"Remove the failsafe activity

The failsafe activity were infrequently used while confusing users.

Replace it with an app shortcut on Android 7.1+ and a separate app on
earlier versions."
b0f1773a92f195be4049ae2535fee2af69562e50,Bump version to 0.70
4e1462326c54a11d2826a6d7de4e448aad15f4a5,"remove intent category ""default""

It was needed only when Termux had separate icon for failsafe activity."
e49d51423631caeda5069d0b77b5599d5b7bc552,"Revert ""sessions: do not clear TMPDIR if application was not started""

This reverts commit bd45837d9378b04a257bb875391a1d1192310b71."
9f79393aa58d67a2e6077d1b4ae93ce33589d8e3,"Revert ""clean /tmp directory on cold start""

This reverts commit beb8a004e6ea64e2b3795fc9320da8c8b2e0a871."
514f59258a0dd3841a5cdc00480c9055dc12f526,let $PREFIX/tmp be cleaned when TermuxService is going to be stopped
81b5889a26b71ae2f471089a0d886b4b1b464976,Bump version to 0.71
5fa4f2647b72eb4ed1bb468171e5763d11abbcf3,"set BOOTCLASSPATH environment variable

Required on at least Android 5. Otherwise utilities that use dalvikvm may fail.

Issue happens on Nexus 7 with official 5.0/5.1 firmware and possibly other
AOSP ROMs."
4e761623465fc1de20e01d85d6d63556663d8384,Bump version to 0.72
ff935be54aaca33114c61723105a6b2fd0bb1926,Add versionName gradle task
e6aacc5f08b135f50a88cd453097ecdc83f865c8,Update Android Gradle plug-in
9f2d887ca077878fb5fdebd3bd13db09f8b0430c,minor fix for log message while removing tmpdir
e502b9169fdec30200a631cd42dfd3a092e0948e,Respect failsafe sessions in ACTION_EXECUTE
7d42b07a321f9409dd25445c974c6c12309ebbd6,"Also export ANDROID_TZDATA_ROOT

Since Android Q Beta 2 ANDROID_TZDATA_ROOT is required
in addition to ANDROID_RUNTIME_ROOT in order to run
`am` and `dalvikvm`"
92980824b19e233b6bda27419f29387cc3720306,Add function keys F1 to F12 as keyboard options
445da0c4eaf1c699b10c5963f95440df6c8abdce,"Fix problem with sharing large terminal transcript

Fixes #1166."
dd6a21257b88b976238394d8b7ed5c1b9ecfe1d2,Update the Android Gradle plugin
7041f4198176fa81710f74d43bb5565e43972b6e,Bump version to 0.73
370ac2bd8911b5632933975300e779f722ad03af,Avoid joining lines for shared transcript (#1166)
94e5bc86fb12bdea8d00c00262a48b5e49236f40,Ignore battery optimization settings to prevent suspension
549f09573f4631fb46ce1cbe90ca33805585dfab,Change method name 'with' to 'getInstance'
d5f9cf85c9198ba422197cd73f6e83873d9a6ccd,Bump version to 0.74
a3673d1af5eaf5f51eec97fd111da3cca5590eeb,"extra keys: follow DnD mode and haptic feedback Android settings

Do not vibrate when:

 * Do not disturb mode is on.

 * Haptic feedback is disabled in Android settings."
5b7e40638c7871432b2ec3455940023cd3d51276,"handle possible ActivityNotFoundException when requesting to disable battery optimizations

Related issue: https://github.com/termux/termux-app/issues/1224"
c19909cef16c6a7116e39070f2eb0fdf389c0129,"improve url matching regex

Now it support complex URLs and some other schemes beyond just http/ftp."
deceffad00d81ecb5154c2a1159499e699659084,Update gradle configuration
e206121bbcbfa6aafd7dfceeaeaa80020d62439d,Bump version to 0.75
b6182216d5517b9fe4d2b1eba72f51e09e1921c9,Update android gradle plug-in
243285f7c2c868033ec76b08e26c102b18128494,CI: remove Travis setup
ac8dab70ef086c139cdd23d2e806a2d4721ebe30,CI: add initial configuration for Cirrus
6a95809da3b9a197a9bfc1a8a8a259ce59d4cd73,CI: add test keystore
f19575b94253b9a32e1088d51f7567b385925745,readme: update status badge url
0332779d6a7e52892cfeee8174468dd53cd9059c,update readme
35a4fdacbe4d75bae0d648cf66a6526d0daee313,Add selection mode cursor controller
3b4ece6bd8970df992662c39845add4a1a9a60c4,Selection mode fling
937eb350b28766bd991c6111458f23bdff0a3c00,Stop selection mode on enter
33d390a2286c42d247653a45e038bf8641f7f8d9,"CI: development builds are now signed with publically-shared key

This commit adds keystore which is shared with community. People freely can
use it for creating own Termux app and plugin builds. However, builds signed
with such keystore cannot be proven as official.

Signed-off-by: Leonid Plyushch <leonid.plyushch@gmail.com>"
6f11390cc4078fe939ee90c0e1fbf6a3bae91252,update readme
8c7462678f229353ecdafaf973e2b5d5962ef5b4,update readme
3f83368f422194c55631e40fa6b4cfd866f1dd2d,CI: update .cirrus.yml
cb67e805dedde432478df7fde88030ed95bc1b2d,update readme
fdb3764f5c11cc5a0581d5741938f22f8782f730,Optimize handle view
4189f598b937217cb70494ccda7b39a9d66426b6,"add permission ACCESS_NETWORK_STATE

Seems to be required by some Android TV devices."
c50a3670632c18c6107e2f25e5b9e7d61ff75c2a,Add .cxx folder to gitignore
468f878a382d34cfe102f705c624fca23ab432d6,"Unified UI colors across the app. Dark sidebar and dark app theme for
dark Alert Dialogs"
5ba3f7cf6d8b2c29eb4f4d51a6a8961db502500d,Made Black UI an option to configure
c76cec186af4df7b1020cd1471ea50dfcb25afba,Include bootstrap zips as shared libraries
08b08d1c4792bf5a3489968572884a84cc21c2f4,Bump version to 0.76
c0a0822843969affedbf9760d44234caf46c8cd5,"Do not set LD_LIBRARY_PATH by default

See https://github.com/termux/termux-app/issues/1286"
6c55c3c1bedcd72c679c38868ae9f4ea6daaa385,bootstraps: update to v18
ae717d8f5fccd76c696f5520d97283ae88a40810,"do not allow to backup data by Google

Why:

 * During backup process Termux is being killed in most cases.
 * Backup data is limited to 25 MB.
 * Backup may not be performed/updated in certain cases."
3b969a00770fc45fe966cb7f91fff7d803c4fdf0,Bump version to 0.77
e930ac08aa78ee5cd9f0aa57ff4d193789d033c2,Bump version to 0.78
29815fb3f054f7e1b9460d6bcf8bfe7bb6ec23d5,Fix gradle deprecation warning
e5a8c0eb4af5e7f4b86fef000948386cb073f7db,Cleanup after requiring Android 7.0
69ded4b33e97f70b75991792c75669e5a2583bad,Update Android gradle plug-in
070436a6edb338bf82ebca8bfef21348058d2ad9,Bump version to 0.82
cdccc2c43350acdbf612117f2901e121f7b52938,"Do not limit cursor movement to scroll region

The scrolling region set by DECSTBM should not affect the
Cursor Down (CUD) and Cursor Up (CUU) escape sequences.

Fixes #1340."
677d75e173e44c38e4d4e02d160d15afd5b81928,"Remove outdated tests

Remove tests that asserted that Cursor Down (CUD) and Cursor Up (CUU)
escape sequences were affected by the scrolling region set by DECSTBM.

This was incorrect and recently fixed:
https://github.com/termux/termux-app/issues/1340"
cf883f5f0504686aa1424733bbbfb1a095f64253,"extra keys: handle actions UP & CANCEL separately

Related issue: https://github.com/termux/termux-app/issues/905"
87841886d4bf6c4a60d48774333dba6609c97f1f,"extra keys: improve handling of DnD mode

Do not disturb mode is now handled only for SDKs pre-28. Extra keys will
not vibrate only when total silence mode is used."
f4db9ff212a672572c2a8fbf2f494e67d38a6d27,Bump version to 0.84
fcd3bc113331c138778a1d04051b0e55f688efb6,update gradle wrapper
951df6b4e2386458fdf5b8089e9c58ac9c1dc9f9,Add selection mode cursor controller
e47bd3168199a845f54d29752a21ce67e3681171,Selection mode fling
60e1556871592adc97e8d969e3d6e5f7952f5f96,Stop selection mode on enter
c238c8bddb690404305bc034fe940f006cf5432e,Optimize handle view
6db51bdec03ad2f0654b89eb9da91bf1596890d5,"remove SDK_INT conditionals

We are targting on API 24, so conditionals for Android 5/6 compatibillity
are useless now."
3d2756f3762103f65692e935aba6743aeebea242,Optimize handleView move.
82730d9e08164ae47763cbb4bc7ff8e87b6569f5,confict
9ebedc4740eec55a7fbda71f856e1dee86ae8fd4,Merge remote-tracking branch 'remotes/origin/master'
490853e42720c4e1299cd1e82c56f823c2a7c02c,"terminal emulator: clear scrollback buffer when resetting to initial state

Fixes utility 'reset' not being able to clear scrollback buffer."
37b3a9f8db3e4b8577f9f5df969ca06eb75f0252,Update Android Gradle plug-in
9e295b105c80316e24e3e029cd74e1516bf6f3ad,"terminal emulator: clear scrollback buffer when resetting to initial state

Fixes utility 'reset' not being able to clear scrollback buffer."
c987ff718af1171f9f420b0a1ad7d56686f49d24,Update Android Gradle plug-in
1ce2db9929f8937d83dae2c2c6afd80c217c0a10,Merge branch 'maoabc-master'
3c01b09fff0b5999074d49e26f327e07492df869,Bump version to 0.85
662b5cace6fdb5daa8d62786e5ba94a1e0949b32,Update gradle wrapper
269c3cafb0c3f610746fde3be2510501b87f942a,properly set bootclasspath environment variable
fd13f3f98d4c3ab99a9b31d0c79fdfeda95e6101,"Handle magnet links with termux-url-opener

Fixes #1339 and #1382."
76df44e6bb9cea197c075e174493e61b15b2c2d1,Start stderr BackgroundJob Thread
7f7c1efac1af19badae86c39118903c4da383838,"Add PendingIntent in TermuxService to return data from execution

This commit adds an optional final argument to the BackgroundJob
constructor for a PendingIntent to return the results of its
execution to, and also attempts to pass an optional pendingIntent to
it from the Service start intent"
e28be01dc23d480d3938ac26e7fc2cff39379c3e,"Create new terminal sessions with directory of active session

This mimics the behaviour of most tabbed terminal emulators.

Fixes #1009."
a94bcb02f16b638c7920b16a49bdfe65650fa1d2,Bump version to 0.86
b729085d524e7727cb092a1b36f62b8601bf56ea,Bump version to 0.88
566d656c16e9e8dae7040c7e6b5d08f142d2ce69,Avoid trailing slash in CWD (fixes #1413)
90e6260d5e05211ec3e6dfeb9e6e631b56062281,"Allow the user to disable virtual key emulation.

Use volume-keys=volume within termux.properties to disable."
b8f04306993e4461c7011202b65773a126ae2f46,Prevent kill by Samsung Dex on plug/unplug.
36db64d585526d6dd5f544f429b9c84aeb6c64ca,Bump version to 0.90
f928efed4e70e7e8affc30f3dbdc07508d7e9a98,CI: switch to Github Actions
b75cf0bb84357c09418526fd17210f71eea0b4d3,CI: add configuration for running terminal emulator unit tests
d92e80646114710b395f60a9b1ffc2fab79d72c4,CI: update workflow labels
4647beb0d239a7947aa5531554a0ebbbc7b7b788,update readme
a240f4cf45aa3eee31da1994f3bd8192ff0e28b7,CI: fix job name in run_tests.yml
3270506bff040762e47e3dde775266e1cad67b42,update issue templates
9fdf2a49fd53ab5285466734c2d42b0906128e14,update readme
453b838b242baed8a5bc3e92c9294f4f693273ab,update bootstrap archives
9749f25ebabd47ef6504219fbcbd827fc7344c59,"update bootstrap archives

v19 had a problem with metadata which broke the package manager."
9703bd31ad9db1083eb2fad646c5a67921db5b40,Fix #1424: Support ACTION_OPEN_DOCUMENT_TREE
ed9afa082a0756678b4b56ceb2b17bda9d35bad4,Fix #1350: Support createDocument(...)
5d06f040e80a16cd93cca256af3498d72d219e78,"Fix deletable flags in DocumentProvider

A file is deletable if the _parent_ is writable, not the file itself."
93724b7aa634109974f10699891b351c1df85f8d,Bump version to 0.92
d28939810cba4b1c2f75d84bc88965b293766deb,Update Robolectric from 4.3 to 4.3.1
2cde9864194556e72e6a6c3eac96139c492a8d06,Update Android gradle plug-in
0e23315c41a864b9b01b294ecf4fccc84f5b6a98,Add android.useAndroidX=true to gradle.properties
537f2ed97e78bc6bfefb21749ac5d88c2e4deb15,Update gradle wrapper
8c8fa961339fb26f07cd13ab8f5c1043383c624c,update bootstraps
6e224cabcfaef6248d97e8760b6b481db64e2c2a,"set ndk version in build.gradle

Fixing CI builds."
366a61f052b21a87d3fea8c67bc58249798bed3e,Grab fragment when extracting URLs for selection
1819087ca092f6ea113f188fd853fe682b5b4952,Add tests for URL fragment
9b7c7102b2ad0f97381656a3e8a2c99c1859fba1,Bump version to 0.94
2659c06c5dbf5ad61c87227cff3d0707829c1ee0,"Remove irrelevant message from bootstrap installation error

Bootstraps are no longer downloaded from the Internet."
6dca19ae0011f9514efa6a5380fb5a097149351c,Update Android Gradle plugin to 3.6.3
7e13b8aa2e232f17b3962bf174408fb1bc18b5b8,Verify Gradle
38a3319ca26c73a29faa6ccb6dd8f906d628d2d2,show result in pull request
c4c4912a7e65c5a16bd78b9caf0aa81dd86004aa,Avoid specifying ndk version
c2843897ac7738b27b7423adc34e219d136bdf5d,Fix build by specifying ndkVersion
d212198e307c9f41beffed11fe1230cc94767f76,update bootstraps
b6d7831646bb0ea0223946fdac2f5943610e8118,Fix CI build and see result in pull request (#1565)
f794bfcadc0fcacdac42d38eae63fb7713f4656f,"Handle all exceptions when loading termux.properties (#1590)

* Catch all exceptions which can occur.
* Print short description in toast message about occurred exception."
9f438e29124f173d9b5853128393f9f8df229fe5,update bootstraps
58440bc88d16c48de4c6385dda39f7aa5c4bba8b,"update bootstraps again

Added few more packages to bootstraps which are replacements to
some busybox applets."
f39f06a540169994e8e53218e188de35a26010c0,"update bootstraps again

* Reduced archive size by using nano as preinstalled text editor instead of vim.
* Updated command-not-found and termux-tools."
b086270a5a72278b3cc1fe1c1917264f61cff07a,"Support auto detection of dark theme

By default it uses the system setting. If use-black-ui is set to either
true or false, that overrides it.

Fixes #1351 properly, fixes #1354"
35842cf4a626ae6d57aadf62a7ace937cb4d18d0,"Set orientation of HandleView in show (#1477)

* Place long press menu above selection

Previously, the long press menu would cover the first line of the
selection.

* Flip selection handle at different positions depending on drag direction

When the selection handle changes direction, the selection jumps to the
new point of the handle. When the handle changes direction at the same
place when you come from the left as from the right, that makes it
impossible to select the characters which are at the position where it
changes direction.

With this change the handle remains pointing towards the edge further
into the line when you drag it from the edge and against the center.

* Set orientation of HandleView when showing it

When you hold down on a word that starts or ends at the edge of the
screen, the handle will appear outside of the screen. This happens
because the orientation was only switched when the handle is dragged, so
when it is shown it just used the same orientation as it had for the
last selection.

Relates to #334, but not sure if it fixes it completely."
669c336e2f8ab90affc5d2844aaea7a45c62d861,update ndk version
9c32935ca28662a90c3754a1d9c7f602b3b8efda,fix ndk version for terminal-emulator module
4d9c0c315eb6029cdc99314ae1a34b3f5ee103b9,"Update notification icon to match launcher icon

This is the launcher icon with a circle around it. I added the circle
because the icon has a transparent background, so it looks a bit weird
with just the >_."
0af823607ac5d6ff282c4eee175e4a533176196c,"Improvements to extra keys (#1479)

* Make popup keys for extra keys row configurable

This makes the keys you get when swiping up on a key configurable. You
can configure such a key by using an array of strings instead of a
single string in the row. The first entry will be the normal key and the
second will be the extra key.

This is a slightly breaking change, as people that have configured
custom extra keys with ""-"" or ""/"" will have to change the config to keep
the popup keys. The default config will remain the same in terms of
functionality, i.e. it includes the same popup key for ""-"".

* Make popup keys interact well with long press keys

This stops the repeat action when the popup is shown, and makes sure the
popup is closed when you release even if there has been some repeat
actions.

* Support configuring the style of the extra keys

This adds a setting for choosing between the different ways to render
key names that were already present in ExtraKeysView.

The available setting values are ""arrows-only"", ""arrows-all"", ""all"",
""none"" and ""default"". Other values will fallback to ""default"".

Can be used as a workaround for #1410

* Support using modifier keys with letter keys in extra keys

This allows you to use the modifier keys on the extra keys rows, e.g.
ctrl, together with another button on the extra keys rows, as long as
that button is a normal letter and not a special key. Support for
special keys will come in the next commit.

* Support using modifier keys with special keys in extra keys

This allows you to use the modifier keys on the extra keys rows together
with a special key on the extra keys rows, e.g. CTRL+LEFT.

Fixes #745, fixes most of #895 and possibly #154

* Support mapping extra keys to other actions

This adds a setting called extra-keys-map which allows you to map a key
on the extra keys rows to another action. The value is a json object
where the key is the button text as configured in extra-keys and the
value is the action. Multiple actions can be used, but if they are
special characters (like ESC or LEFT) they have to be separated from the
other characters with a space on each side. If you want an actual space
character, use SPACE.

For example if you want to add a key to go to the next active channel in
weechat, you can use this:
    extra-keys-map = {""weechat next"": ""ESC a""}
And then add ""weechat next"" to extra-keys. The name can of course be
whatever you want.

Or if you want the button for the UP arrow to show ⇧ instead of ↑, you
can use this:
    extra-keys-map = {""⇧"": ""UP""}
And put ""⇧"" in extra-keys instead of ""UP"".

Modifier keys (ctrl, alt and shift) can't be used in this map yet.
Support for ctrl and alt will come in the next commit.

I think this fixes #1186

* Support CTRL and ALT in extra keys map

This allows you to use CTRL and ALT in extra-keys-map.

For example if you want a button to exit the terminal, you can use this:

    extra-keys-map = {""exit"": ""CTRL d""}

And add ""exit"" to extra-keys.

* Support a KEYBOARD button in extra keys

This toggles showing the keyboard input method.

* Support specifying macro keys in the extra-keys option

Instead of specifying macros in the separate extra-keys-map option by
matching the key name in the two options, you can now use ""macro""
instead of ""key"" in extra-keys, and it will be a macro, i.e. a sequence
of multiple keys separated by space.

* Remove option extra-keys-map

Now that you can specify macro in extra-keys, there is no point in
having this separate option. Instead of specifying the value to display
as key, and the macro to perform in extra-keys-map, you would now
specify the value to display in the display property and the macro to
perform in the macro property.

* Lookup display text when creating ExtraKeyButton

This will make it easier to support key aliases for macros in the next
commit.

* Add support for a key to open the drawer

Fixes (I think) #1325"
3e04ea4cb038e15a7ed8575362d332497a6a5291,Add Log file to view intent #1497
5f71e3e73ae9c0381650a922f45a241fc75a463a,"Join lines that fills the width when selecting urls

Some terminal applications, like mutt and weechat, prints a newline at
the end of each line even if text is wrapped. This causes urls which are
wrapped to not be selectable in full.

By ignoring newlines when the text fills the entire width of the screen,
those urls can be selected. Many other terminal emulators do this as
well.

A drawback of this is that if a url happens to fill the width of the
screen, the url selection will include the first word of the next line,
but this doesn't happen that often so I think it's an okay tradeoff.

Fixes #313"
db3ff7b24a2cb8c84b00cc5cec083361018569a1,"Provide a service for executing commands by third-party applications

Re-implementation of https://github.com/termux/termux-app/pull/1029.

If Termux has property ""allow-external-apps"" set to ""true"", a third-party
program will be able to send intents for executing custom commands
within Termux environment.

Third-party program must declare permission ""com.termux.permission.RUN_COMMAND""."
5b32540635d9243e573f2ef3ca126150424ab712,minor refactoring: RunCommand => RunCommandService
2c5534e2c1fc90ee2cd35099b39151b45d6ebc52,RunCommandService: update information about usage
72981fb9816fa39462f88c8bfc382ed3761f4e31,"Use vector drawables for text selection handle

https://github.com/termux/termux-app/issues/1036"
6cf742460c1d99027ab5c8393a3665a919dc684e,"extra keys: make popup & pressed button no longer transparent

Fixes visual issue when popup overlaps text of upper row."
664ec43f94d3e7f3227b216a65bbae80c889114a,version 0.95
2224d917a331b2e77dd299b9d02c87d8f4ab7610,update ndk version
8d302aa9fe03ebb61fa729cc03336fd49fb0db68,fix am on Android R
fc04a93990eae1ac8b78d216b853f753b93a7bcf,"get rid of Android 5 legacy stuff

We don't need LD_LIBRARY_PATH as of Android 7.0."
33def928cf9bada2a6d44101f20ee4d8d4e71085,add DEX2OATBOOTCLASSPATH environment variable
930029b5d273cfeebbd095c27d0720b78a03fa89,export COLORTERM=truecolor
f33ebf810f9fb62931c07eca8134335fcc92ed99,"Fix selection rendering with alternate cursor styles

There is currently a bug where selection rendering is broken if the
active cursor shape is anything other than the default solid box.
Selected text is normally highlighted by effectively rendering a cursor
over all of the characters in the selection region, but if the cursor is
a bar, the resulting selection highlight is too narrow to cover the full
width of the selection. Similarly, if the cursor is an underline, all of
the selected text will be underlined instead of highlighted.

To fix this issue, treat selections different from cursors in the
rendering logic and force the renderer to always use the block cursor
style for rendering selections. That way, we get correct behavior
regardless of what the current cursor shape is."
0910844896475418dc28ebfd2d3bae43528d5b26,"Invert selected text instead of highlighting

Highlighting text in the terminal often makes it hard to read, which
can be problematic for users who want to adjust or review selections
before copying them. For example, the default theme makes white and
green text hard to read on its light gray selection background, and
there are plenty of other themes where the choice of text and cursor
colors would hinder selection readability.

To fix this issue and make selected text more legible in nearly all
combinations of colors, invert selected text instead of highlighting it.
This is more common among terminal emulators anyway:
    Invert:    xterm, fbcon, kitty, Konsole, Alacritty, Tilix,
               gnome-terminal (7)
    Highlight: Termux, Terminal.app, iTerm2, Windows Terminal (4)"
51370799c765d1774abac61a6f2eedf09156d211,update notification icon
9e7029b76ad63091a5920fbec0d08fe94c1f5785,"Receive ""RUN_COMMAND_ARGUMENTS"" extra for ""RUN_COMMAND_ACTION"" intent
as a string array extra instead of a string extra since TermuxService expects it that way.

Added ""RUN_COMMAND_BACKGROUND"" boolean extra so that Termux session can be started in background
when running a command.

Updated usage docs.

Check #1029 for details."
b2ff0e4051867959de6d615a66df12aa700468d6,"Changed static string ""EXTRA_EXECUTE_IN_BACKGROUND"" access to public"
debbe4480945ec9db59ea9fdec88abfbf479e29c,update bootstrap archives
6f24628fd221d8aeeddc125d686d27a23894865d,version 0.96
04268f4c20e4fb87b8c5c0bd44dd5111979635d0,move sdk version configs to gradle.properties (#1685)
507527336234adb9146aad40a3d5160f71ea2c91,Android Studio 4.0.1 (#1687)
b68bd107c11f24c70c702bd989844a68a20a8a6c,Gradle 6.5.1 (#1686)
bd7ed289811a570601cdfa4e3998996856df37d9,"update WcWidth.java, add note about c version"
f191c35851f9dfad6d87ffc7c9734b4f3da93c2a,"Merge pull request #1693 from landfillbaby/patch-1

update WcWidth.java, add note about c version"
70580abd50aa6e7bdc541d7bac6025c82947c749,update bootstrap archives
619552ec5c1a6fd1dfb0eb735b67d645c5dc19ff,"version 0.98 (v0.97 is non-release, so updating from 0.96 to 0.98)"
5a70be152346958009fda0419d77502c6e52391b,terminal emulator: flush remaining process output data when terminating session
332f1104a3e35123a8f9500b367072adb9c48c3a,Update drawerlayout library
b486d29d2342583dbaad42787ae47cd7a8d499b4,"fix RUN_COMMAND permission description

See https://github.com/termux/termux-app/issues/1713."
784affe39cf609bf1d062e6163be8b39e6ed2aa9,"linter: fix wakelock log tag

See https://github.com/termux/termux-app/issues/1670."
db2f50c76e61b25d5ff17168407d17f3c05aec71,"extra keys: use TextUtils.join instead of String.join

String.join() is available only on Android API 26+ but our current
minimal is 24.

See https://github.com/termux/termux-app/issues/1670."
531c32f3c91b9ea9edf1c84a0867fbc5de31948e,CI: do builds for android-10 branch
ba9c118b5029895b5aa36c3aec96be0dab68f638,readme: fix a copy-paste typo (#1720)
382da7e8f7374d9c073abe0a6ad94c0174830074,"terminal view: provide a workaroud for issue with some keyboards

Issue https://github.com/termux/termux-app/issues/686.

Note that there can be a better workaround which I don't know..."
b95823d7a8ff5a48751eacdcd3c4f0f9cb503af7,update bootstrap archives
a108b2bd6b9cfdf58be80326003d6fbd59e82bce,gradle 6.6.1
850faa25ddad64c82a5768ff921c2cc1bb71bc34,version 0.99
cba80b6c0b29525536b52bdddd02845833d6cf15,add gradle distribution sha256
216cc10f3c679335dbe4c4a2e09bb4e85e395370,"Revert ""add gradle distribution sha256""

Was initially added to try fix F-Droid builds but appears missing
distribution sha256 is not a cause of the issue.

F-Droid maintains own set of Gradle SHA-256 checksums.

This reverts commit cba80b6c0b29525536b52bdddd02845833d6cf15."
8faa5b21515851cd2d8dfcae109abace80b49701,"TerminalEmulator: fix bug in DECRQM handling

Reported in https://github.com/termux/termux-app/issues/1752"
f91168eff44d528e82588b7e6d9f786a1ba0a1bc,"Fix issue where termux crashes occasionally in android >= 8 because ""startForeground()"" function is not being called before running ""startForegroundService()"" in RunCommandService."
52ce6cc94bbe59dc8d95cae00e83a2c663963ee3,"Add support for ""$PREFIX/"" and ""~/"" prefix in ""RUN_COMMAND"" intent extras for paths."
9aae665bfca0ea401ef4582165c3686d347ef9d7,"Fix issue where termux session does not come to foreground automatically in android >= 10 unless user manually clicks termux notification for ""RUN_COMMAND"" intents and ""Termux:Tasker"" plugin actions that have background mode ""false"" because of new restrictions of starting activities from background. This is done by adding ""android.permission.SYSTEM_ALERT_WINDOW"" permission in AndroidManifest.xml so that the user may optionally grant ""Draw Over Apps"" permission to termux to fix the issue."
6e02b99ff6fe9091eb16e19ac97982ed8884f070,Update RunCommandService docs.
7063a3a9da3cc1534c190b79ecf40b144fd6663f,Add @override annotation to onStartCommand() function of RunCommandService.
eb7fda28df0067c68b5a1c8bf2ac59e29b4576e1,"Merge pull request #1764 from agnostic-apollo/termux-run-command-crash-and-foreground-patch

Fix RunCommandService crash and foreground issue"
665adb68950d9490e2927068798d6650ff1566a2,update bootstrap archives
25523ae2248541c355096022e17690bda83ca2cd,"fix bootstrap archive checksum for arm

Due to leading zero issues, SHA-256 checksum for ARM variant will
have 63 characters instead of correct 64..."
af95a99854247da901c3b8170aed7257e5285ae0,version 0.100
63bfe9584883f792d933304fe8cb35c2cd96560a,"update bootstrap archives again

Fixes faulty dpkg https://github.com/termux/termux-packages/issues/5858."
5b6fd9b88c3bebb68b88a187e8a5d31012037088,version 0.101
564079c7e939b356ed0347661e3333e76f2baaae,update .gitattributes
8c80efb904b023cfafab23083df8d5881f201dd3,"Add an ""Autofill password"" context menu action"
dfc4595ec53139bd32ead2069850a8e7064e6cec,version 0.102
ad64dd7c3dcec93d94c135fee4bab5e90965a72b,update bootstrap archives
2f04a6186b105d88e8f315cab110162ca3590343,"add READ_LOGS permission

* https://github.com/termux/termux-app/issues/873
* https://github.com/termux/termux-app/issues/1821"
3a8f53a54c4b9a402fc787304b85dc6687804b22,"add permission WRITE_SECURE_SETTINGS

https://github.com/termux/termux-api/issues/211"
4479de4b9bb8217517d2d9d1ef7677f451057eb1,update bootstrap archives
e1f799f9a1f9e4dd8eaab4c8b3205b73c7455424,version 0.103
20aac6aa72e958b9ef61eb6d8e58ca81e7793551,copy FUNDING.yml from termux-packages repo
4066c5df4214e14b256af7d989b3edd43371a684,"don't add $PREFIX/bin/applets to $PATH

busybox doesn't use that folder anymore, and is deprecated anyway"
8925ae67bb0fe4b6f96aff94a95ca0dbb80d3835,update readme
2820f6a7b8b8ca9e28306f5de01ef745cda61bc1,update readme
1b3283bd69610b509733aac49ef0c758c4e9a73c,update bootstrap archives
6b0d531758358b70cc5235488ef6ee7d2d3ea657,"Revert ""update readme"""
5ca67dd8851b5631703ea24866fde97e24781874,update bootstrap archives
d267843e36cf6a8039f3f1c50fec2113f4a8a260,"Don't exclude hidden files from document provider (#1220)

Credit to @johnmellor for requesting the document provider in the
first place via #79, mentioning this limitation in a comment on
that issue, and creating a commit like this one to address it."
cb13a5a5314f1093a6f828a930aecc448453657c,version 0.104
eaea0f74a511c8f54ce636d4e7d53f5f36ae6d78,"Fix github links for terminal-{emulator,view} jcenter packages"
43bbef9a11a483a106dbfab2daf45bd6c62837f2,Update plugins and gradle to latest versions
7fe5bd32c8fbca2dae8a99dc43197c329ce748ac,Update ndk to r22
b1d4c0c7fedcd073623d61aae05ab1340fe4fbb4,"app: disable test for ""ProtectedPermissions""

Needed for tests to pass after READ_LOGS and WRITE_SECURE_SETTINGS
were added to AndroidManifest.xml."
fc30eba2477fbe7bf37ad6369d3e8a5b23ff9fb7,"terminal-view: silence warning from use of SHOW_AS_ACTION_ALWAYS

```
Prefer ""SHOW_AS_ACTION_IF_ROOM"" instead of ""SHOW_AS_ACTION_ALWAYS""
```"
b895cbbb1e2367a918a1d95c7c341664f1b2f5ba,"app: set importantForAutofill=""no"" for extra keys input field

Fixes warning ""extra_keys_right.xml:2: Missing autofillHints attribute""."
b467b68f7b47a2c65fc4530221223f07bcd9a37d,terminal-view: mv code to get properties to its own function
f1e973f0d2000957a21387a8ee2f65bd08c776fb,"terminal-view: add ""ctrl-space-workaround"" property

Makes it possible to run ctrl+space with hardware keyboards on
devices/ROMs where it otherwise is broken. On devices where it already
works this workaround breaks ctrl+space though.

Where to add this fix was investigated and found by @5bodnar."
538a1d5cdf286bb11ba46285217524cd41d52448,F-Droid URL for Termux:Styling
a0298285e3897f53f632f1c1435064bf5b97efc6,"terminal-emulator: tests: avoid error about methods not being mocked

unitTests.returnDefaultValues = true fixes it.
More info: http://g.co/androidstudio/not-mocked"
7d31b7f480ad0df5b27d9415e603cfbe166fbc0e,terminal-emulator: tests: change spaces to tabs for consistency
b805f1486ce1b79988a4f21a1af2585e8ea7d7a3,"Merge pull request #1869 from termux/ctrlspace

Add workaround property to fix ctrl+space on devices where this does not work"
38114784f1a8f88f4477e2109bb944b5e4979ceb,update bootstrap archives
922898263275776b3a7e8e8870d5c88de78a3409,"remove restrictions from viewable file types

Fixes https://github.com/termux/termux-app/issues/1872 and
similar issues."
a56cba68432e5147f11faa70e8c34b647bc1996d,version 0.105
831aa69da86e7f9a832072d123c4f3af6af8075a,"Merge pull request #726 from dkramer95/OpenBroadcast

Sends broadcast on app open to notify addon termux receivers"
7b4a69f839fa5fc65821a1ca55bba80ac4356522,"when num lock is off, have numpad keys works as their numlock-off functions (arrows/home/end/pgup/pgdn/insert/delete)"
78cdaef6d249833905868a2d64257691b6dbbdb4,only send PF1 for num lock when in application mode
fe584940e121a7ae500d9ea1f126aa13bf6d8527,fix TerminalView possiblePropLocations IOBE
05bb399893994d6cd596687fa7b4fedc294ef2b4,terminal-view: fix array indexing
92570bee06fc86573354d5c1f0e3eb61d7f0d864,version 0.106
32c3ffd57b3a9042d2083e030af1c583c77a2180,"readme: still need to clarify that app is ""not maintained""

Please note that I do not review changes made by project collaborators.
Before submitting changes to branch 'master' ensure they are working
properly. I may not find the issue and fix it in time, like in case
with v0.105 release."
f6822d6c24862fe61944d3840029809cb8ba7839,"Merge remote-tracking branch 'origin/master' into numpad_arrows

# Conflicts:
#	terminal-view/src/main/java/com/termux/view/TerminalView.java"
b5d491a54ca20f1e46f470c29b95c380f36dde5d,"Implement full screen and add FullScreenWorkAround to fix ExtraKeysView
not displaying properly and inconsistently between various devices"
096dedffb1dbc028be7818c4fbe47caecf33b73a,"Remove height offset workarounds / config
    * Use WindowInsetsListener to get nav bar height and use that
      instead for calculating adjusted height for extra keys view"
0e94d520940679e54644e602b487369d6bed891a,"readme: remove links to Google Play and Nethunter stores

Both offer outdated builds."
7be1fe5555d0673a5b17ad6bb34bc18627de7684,"icon: add regular png icon for compatibility with some launchers

See https://github.com/termux/termux-app/issues/991.

Adaptive icon will continue to be automatically used if supported."
6e2a2ed94637c98ad8035e37742595395d436cd1,documents provider: fix application icon reference
58b7a26b33c654a0e40504d79aec552519ee5887,"add basic metadata for F-Droid.

Fixes https://github.com/termux/termux-app/issues/622."
2ef45c85b2b52550c7294ca16579211f3b10e037,"terminal-emulator: bump library version

Needs to be updated on Bintray: https://bintray.com/termux/maven/terminal-emulator"
fa5117a098c982d7fbaf21c5f3ce36c3d3941cae,"terminal-view: bump library version

Needs to be updated on Bintray: https://bintray.com/termux/maven/terminal-view"
a7eb17317837868f4ac8962dd48459c608ee3653,"app: enable split apk builds

Currently we build a single APK which handles the four supported ABIs.

Therefore each user, downloads 50-75% more than they need - adding
towards both client/server-side network as well as device storage.

Use a split APK approach - it costs nothing from build and server-side
storage POV.

Note: We're removing ndk:abiFilters - they're incompatible/superseded by
the splits:abi:include list.

Signed-off-by: Emil Velikov <emil.l.velikov@gmail.com>"
5b084f08512e5507e9831e35ba00ff8915492b13,github actions: include split apks to artifact archive
f3a3a89f93f5347b7110d9e2f13b64f205790878,github actions: use hardcoded list of debug apks
fec61d315f575853a2f9d966e7b603013b04c71e,github actions: debug_build.yml is fixed now?
407e4e003ad64fd9fae4631323e4eed3ca420774,github actions: update actions/upload-artifact to v2
496da3f877c5f8f3ea52429b36719de6de95211d,"introduce a property for configuring default working directory

Issue https://github.com/termux/termux-app/issues/1192."
01929397cf4f4a990a7616ccf672ae054f2dd4f7,TermuxPreferences: get rid of unnecessary switch()'es
e03858f0659c108f12d44b5c162586a66d351765,export app version in environment variable
6d1b0efd3b245145d9444386aa9e9f56080df600,update bootstrap archives
2b6e9ade075d9365ae5bc4092ee51e2845f8c8c5,ExtraKeysView: Handle multiple and popup SpecialButtons
866da75fa943172012f9b1b863b774c8bbc88ca1,ExtraKeysView: Use Set instead of List for special buttons keys
a4381b78272b206c5ec369d487f52a27f00ff5b4,ExtraKeysView: SpecialButtons use Button instead of ToggleButton
94deecb7b1109efe4a5eebeb55598b7ee9c17a14,"Merge pull request #1889 from rakslice/numpad_arrows

Implement numpad arrows/home/end/pgup/pgdn/ins/del when num lock is off"
4139bf94243d1f593ee668a633d5dc75c298d39d,version 0.107
8baf53b09afc13e45b9880fcc5f319ddc782f264,update bootstrap archives
397a78f24803fd4bb11142d8dddea36ccf6fbb2d,"publish termux-view and terminal-emulator on Github Packages

Moving from Bintray."
d8fcc1f221e1e7857d2cc0bdacafdf7232323a11,github actions: add workflow for publishing terminal-view/terminal-emulator on Github Packages
7884cb3bea6fd6f431eecd7df3716ea46e28848a,github actions: test run for publishing maven packages
ce5e9a90421da9aaae06c6e150afe3e6c09df944,"Revert ""app: enable split apk builds""

Not compatible with F-Droid.

If you can fix F-Droid builds, send pull requests. For now I'm disabling this.

This reverts commit a7eb17317837868f4ac8962dd48459c608ee3653."
fcfd131ccdf5720d5886eb6349eb1bc7beecb863,update bootstrap archives
edcebf13365a66da96b88e7d929f63fd652a555f,version 0.108
f50d15d353aad36b043b16c6b7efef3058fd2a6f,"Fix ""Duplicate finish request for ActivityRecord"" errors"
00194ebb902230c2f238c886c0a864f852cfc191,"Add logcat errors in RunCommandService

This commit adds `logcat` errors if an invalid intent action is passed or if `allow-external-apps` is not set to `true` while sending an intent to `RunCommandService`, so that users can detect issues."
80858bab6b4194cce0371d7181ee65e531c0d72e,"Fix path expansion in RunCommandService

This commit fixes `getExpandedTermuxPath()` (previously `parsePath()`) not expanding path if exactly `$PREFIX` is passed and addition of extra trailing slashes in some cases."
108e4cb3916895c4e9a8702b5cd59617796e43a0,"Fix workdir logic in RunCommandService

This commit fixes the workdir logic to not send `EXTRA_CURRENT_WORKING_DIRECTORY` extra to `TermuxService` if workdir is empty, since that will raise `No such file or directory` exceptions if `cwd` is empty when targeting sdk `29`."
85b2c44ac74818d659ca106a151edb1a20190845,"Fix current working directory default value

This commit fixes the issue when `cwd` is empty and is passed to `Runtime.getRuntime().exec(progArray, env, new File(cwd));`, it raises the `No such file or directory` exceptions when targeting sdk `29`."
5a960750256398f4de762023b9c253e96d47ef2d,Update RunCommandService documentation
9fd2cf9834eb9faf56011669be3fa91c52fc038e,"Fix NoClassDefFoundError exceptions for TermuxActivity

This commit fixes the non-crashing exception `Rejecting re-init on previously-failed class java.lang.Class<androidx.core.view.ViewCompat$2>: java.lang.NoClassDefFoundError: Failed resolution of: Landroid/view/View$OnUnhandledKeyEventListener;` on termux startup due to `setContentView()` call by `TermuxActivity.onCreate()`. The recommended solution seems to be to add `androidx.core:core` dependency, which has solved the issue.

https://issuetracker.google.com/issues/117685087"
356a442c6fc06582a4e24c6461fb30e37f4340d5,"Request android.permission.DUMP permission

This will allow users to run `dumpsys` command after running `adb shell pm grant com.termux android.permission.DUMP`.

https://developer.android.com/studio/command-line/dumpsys"
93a5bf8d2905e227fac07630b30fb4a6da4e1145,"Request android.permission.REQUEST_INSTALL_PACKAGES permission

This will allow users to access `Android/obb` on android 11 after explicitly granting Termux the permission by going to Termux `App Info` in Android `Settings` -> `Advance` -> `Install unknown apps`.

https://medium.com/androiddevelopers/android-11-storage-faq-78cefea52b7c"
ada5087f677cc15dea446d66343294c96a7fbaf8,"Partial refactor of the mess that is TerminalView

- Decouple the `CursorController`, `TextSelectionCursorController`(previously `SelectionModifierCursorController`) and `TextSelectionHandleView` (previously `HandleView`) from `TerminalView` by moving them to their own class files.
- Fixes #1501 which caused the `java.lang.IllegalStateException: The specified child already has a parent. You must call removeView() on the child's parent first.` exception to be thrown when long pressing the down key while simultaneously long pressing the terminal view for text selection."
395759cc0aea9a6c2f89142cbfcb18bbf2ee3503,"Restore keyboard input into terminal view when toggling extra-keys slider input with VOL_UP+q

Check #1420 for details."
14c49867f706c12b27d007ccede1c799041e857f,"Define `TermuxConstants` class to store all shared constants of Termux app and its plugins

This commit removes almost all hardcoded paths in Termux app and moves the references to the `TermuxConstants` class.

The `TermuxConstants` class should be imported by other termux plugin apps instead of copying and defining their own constants. The 3rd party apps can also import it for interacting with termux apps. App and sub class specific constants are defined in their own nested classes to keep them segregated from each other and for better readability."
324a69f7fa4e7c81892086d3819da49f2deb905f,Move terminal input related classed to com.termux.app.input package
dbf84773d4c6d67dbf2bba005c97d02bd0c7adb5,Fix potential null exceptions
7b4acb53c9da03c31960979313ccb0a7d5f045e5,"Move Termux Properties to com.termux.app.settings.properties package

The termux properties handling was mixed in with termux preferences. They are now moved out of into a separate sub package, the following classes are added:

- `SharedProperties` class which is an implementation similar to android's `SharedPreferences` interface for reading from "".properties"" files which also maintains an in-memory cache for the key/value pairs. Two types of in-memory cache maps are maintained, one for the literal `String` values found in the file for the keys and an additional one that stores (near) primitive `Object` values for internal use by the caller. Write support is currently not implemented, but may be added if we provide users a GUI to modify the properties. We cannot just overwrite the "".properties"" files, since comments also exits, so in-place editing would be required.
- `SharedPropertiesParser` interface that the caller of `SharedProperties` must implement. It is currently only used to map `String` values to internal `Object` values.
- `TermuxPropertyConstants` class that defines shared constants of the properties used by Termux app and its plugins. This class should be imported by other termux plugin apps instead of copying and defining their own constants.
- `TermuxSharedProperties` class that acts as manager for handling termux properties. It implements the `SharedPropertiesParser` interface and acts as the wrapper for the `SharedProperties` class."
ef9e40630002829fae66f189be53301ce33d792f,"Update TermuxConstants

The `TermuxConstants` and `TermuxPropertyConstants` classes have both been updated to `v0.2.0`. Check their Changelog sections for info on changes.
Some other hardcoded termux paths have been removed as well and are now referenced from `TermuxConstants` class."
36be41d0deb175f47b2bbbfca43427cfdc38b43e,"Remove function that reads the ""termux.properties"" files from RunCommandService

The `RunCommandService` will now call the `TermuxSharedProperties` for getting current value of `allow-external-apps`, instead of using its own duplicated function to read ""termux.properties"" files."
319446fc15e81bf7456235d03d92716c356fd66d,Disable TerminalView logging.
10d6eaa5d1969180f81ca25255a16a481aeecf6a,"Make TerminalView agnostic of ""termux.properties"" files.

`TerminalView` will use the `TerminalViewClient` interface implemented by `TermuxViewClient` in termux-app to get ""enforce-char-based-input"" and ""ctrl-space-workaround"" property values. It will also not read the file every time it needs to get the property value and will get it from the in-memory cache of `TermuxSharedProperties`."
5fd91b4f921eafe4b40222b74ad825821206eb5a,"Rename com.termux.app.input package to com.termux.app.terminal

Also moves `TermuxViewClient` into com.termux.app.terminal package"
e72841ba276a242694d19feaca680047d51cd57c,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.3.0`. Check its Changelog sections for info on changes."
ebf2e472b3f33ca9af4d98b2cc15371af503d214,Fix typo in TermuxPropertyConstants
93b506a001e579f3211138a55bf4551d176f6139,"Move Termux Preferences to com.termux.app.settings.preferences package

The termux preferences handling was mixed in with termux properties before an earlier commit. They are now moved out of into a separate sub package, the following classes are added:

- `TermuxPreferenceConstants` class that defines shared constants of the preferences used by Termux app and its plugins. This class should be imported by other termux plugin apps instead of copying and defining their own constants.
- `TermuxSharedPreferences` class that acts as manager for handling termux preferences."
d39972b3bfe3361c1437e5faaf6ea8ffbcb0d8ef,"Implement GUI based Termux settings manager and a centralized logging framework

The settings activity can be accessed by long pressing on terminal view and selecting ""Settings"" from the popup shown. It uses the Android's Preference framework. Currently only debugging preferences to set log level and enabling terminal view key logging are provided. The Preference framework by default uses the keys set in `app:key` attribute in the respective preferences XML file to store the values in the default `SharedPreferences` file of the app. However, since we rely on `TermuxPreferenceConstants` and `TermuxPropertyConstants` classes to define key names so that they can be easily shared between termux and its plugin apps, we provide our own `PreferenceDataStore` for storing key/value pairs. The key name in the XML file can optionally be the same. Check `DebuggingPreferencesFragment` class for a sample. Each new preference category fragment should be added to `app/settings/` with its data store.

This commit may allow support to be added for modifying `termux.properties` file directly from the UI but that requires more work, since writing to property files with comments require in-place modification.

The `Logger` class provides various static functions for logging that should be used from now on instead of directly calling android `Log.*` functions. The log level is automatically loaded from shared preferences at application startup via `TermuxApplication` and set in the static `Logger.CURRENT_LOG_LEVEL` variable. Changing the log level through the settings activity also changes the log level immediately.

The 4 supported log levels are:
- LOG_LEVEL_OFF which will log nothing.
- LOG_LEVEL_NORMAL which will start logging error, warn and info messages and stacktraces.
- LOG_LEVEL_DEBUG which will start logging debug messages.
- LOG_LEVEL_VERBOSE which will start logging verbose messages.

The default log level is `LOG_LEVEL_NORMAL` which will not log debug or verbose messages. Contributors can add useful log entries at those levels where ever they feel is appropriate so that it allows users and devs to more easily help solve issues or find bugs, specially without having to recompile termux after having to manually add general log entries to the source. DO NOT log data that may have private info of users like command arguments at log levels below debug, like `BackgroundJob` was doing previously.

Logging to file support may be added later, will require log file rotation support and storage permissions."
0225a8b1fc9ad6f516adadba6b6178dbd7b22a25,Fix hardcoded value in strings.xml
66f15d2a0815ae216d4343fc7c9fbc8e35d9d853,Remove moved files
3b5d3114a6d9a5c514d88fef57f823215cf81bdf,Prefix DEFAULT_LOG_TAG even when a tag is passed while logging
11a236a172ac7d64a6963d369515801ff29dc3ac,Update TerminalView and TerminalViewClient javadocs
7da847a485c1262d7fec3ba8983539a3cbc30401,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.4.0`. Check its Changelog sections for info on changes."
73af5c23264ef347a76fad6d459a7e7a93cbb71a,Move terminal io related classed to com.termux.app.terminal.io package
5e0b29bb6d3b1ee73e7fba1d6c2ecc7446264419,Move DialogUtils to com.termux.app.utils package
c9e18e5b933ca0abb5647b7f69468825791c05e4,"Refactor TermuxActivity

This commit majorly refactors `TermuxActivity` and moves its view components and functions into dedicated classes.

- The view layouts and ids have been given meaningful names, like `termux_activity.xml`.
- The `TerminalToolbarViewPager` class has been created to handle the now called toolbar that shows on the bottom of the terminal view. It currently contains extra keys view defined by `terminal_toolbar_extra_keys_view.xml` file and a text input view defined by `terminal_toolbar_text_input_view.xml` file when user can switch to by swiping left. The input text will now be preserved if android destroys the activity or its recreated.
- The `TermuxSessionsListViewController` class has been created to handle view related functionality of the termux sessions list shown in the left drawer, namely view creation, `onItemClick()`, `onItemLongClick()`, etc. Its list view is defined by `termux_activity.xml` file and each item's layout is defined by the `terminal_sessions_list_item.xml` file.
- The `TextDataUtils` class has been added to the `com.termux.app.utils` package for text utils.
- The design for the `SessionChangedCallback` interface for `TerminalSession` has been majorly changed. Firstly, it has been renamed and moved from `TerminalSession` to the dedicated `TerminalSessionClient` class file. The interface now also supports the termux app centralized logging framework so that `TerminalSession` and `TerminalEmulator` can use them. Previously, `TermuxService` was implementing a wrapper interface, which would then call the real interface defined by the `TermuxActivity` if it was currently bound to the service. This cluttered and partially duplicated the code. Now, the implementation is defined by the `TermuxSessionClientBase` and `TermuxSessionClient` classes. The `TermuxSessionClientBase` implements the `TerminalSessionClient` interface but the definition of the activity related functions do not do anything, only the background ones like the logging functions are fully implemented. The `TermuxSessionClient` class inherits from the `TermuxSessionClientBase` class and provides the implementation for the activity related functions. The design for how this works is that if the `TermuxService` is not bound to `TermuxActivity`, it just passes the `TermuxSessionClientBase` implementation to `TerminalSession`. If the activity is bound at some point, then in `onServiceConnected()` it replaces/updates the client objects stored in `TerminalSession` and `TerminalEmulator` with `TermuxSessionClient`, and then replaces them back with `TermuxSessionClientBase` in `onDestroy()`. This seems to be working for now without an issue."
ff0440d7d239a306d0f3f4a7383795d8b6228d1f,"Allow users to adjust termux toolbar height with termux.properties

This `terminal-toolbar-height` key can be used to adjust the toolbar height. The user can set a float value between `0.4` and `3.0` which will be used as the scaling factor for the default height. The default scaling factor is `1`. So adding an entry like `terminal-toolbar-height=2.0` to `termux.properties` file will make the toolbar height twice its original height. Running `termux-reload-settings` command will also update the height instantaneously if changed.

Fixes #1857"
6f6d11fbb84ea12675f8dcb2c73fe0a169389bd3,"Updated TermuxPreferenceConstants

The `TermuxPreferenceConstants` classes has been updated to `v0.3.0`. Check its Changelog sections for info on changes."
4427c1675dcacd868ff83225ded3617647da17d6,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.5.0`. Check its Changelog sections for info on changes."
9e82561804b08ea04d123eb7feb5e7a0f28e188f,"Added SharedPreferenceUtils

The `SharedPreferenceUtils` class has been added to provide static util functions for shared preferences like get and set while safely handling exceptions. The `TermuxSharedPreferences` class has been renamed to `TermuxAppSharedPreferences` since its to be used to handle only Termux App related shared preferences and not of other plugin apps. For plugin apps, separate classes can be created. However, Termux app and its plugins will share the same `TermuxPreferenceConstants` class that now has per app scoping since `v0.3.0`."
2e7fd480f492400d987b5da72e2d48afc35c7765,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.6.0`. Check its Changelog sections for info on changes."
2a940dfca6daf7f37cf32785c0edc8f4a6e3015e,"Move general static functions from TermuxSharedProperties to SharedProperties class

This will allow `SharedProperties` class to be used directly to get property values and their internal values via static functions instead of using `TermuxSharedProperties` where the functions don't belong in.

The `TermuxPropertyConstants` classes has been updated to `v0.4.0`. Check its Changelog sections for info on changes."
8c1c7ce7277bffddbe1107c99c49494092fcb0a3,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.7.0`. Check its Changelog sections for info on changes."
c1a377d15df42a77b89f490f9a1daeadaaf5de45,"Update SharedPreferenceUtils

This SharedPreferenceUtils now supports:
- Getting `Context.MODE_PRIVATE` and/or `Context.MODE_MULTI_PROCESS` `SharedPreference` instances.
- Setting values to shared preferences in-memory cache and the file synchronously.
- Getting and setting `float`, `long` and `Set<Sting>` values in shared preferences."
fb6e9b69abf5e9f25495dbc15118f472846fb9e0,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.8.0`. Check its Changelog sections for info on changes."
f969c01f7e4110f9b2210acc15329c9c09f4d17d,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.9.0`. Check its Changelog sections for info on changes."
bc02508102b5ffe6f0ed46392585597b70351d56,Fix dependencies ordering
d9b5344b2467ef345276c228c7cf7bf7867ec5ff,"Refactor TermuxService

- Dedicated functions have been created for various actions and commands.
- The `startForeground()` call will be made both on `onCreate()` and `onStartCommand().
- The `stopForeground()` call will be made before every `onSelf()` call.
- The references to `TermuxActivity` will now be removed in `onUnbind()` as well if activity `onDestroy()` failed to do so.
- Appropriate log entries are added to help debug issues."
ae260fad9cff11c40334eb895d1d0e05942b03d5,"Fix old bug where termux app would crash if sessions list ListView was not notified of new sessions

To reproduce:
1. Create 2 sessions.
2. From either session, run a random `RUN_COMMAND` intent command with `am` command and shift to the other session.

Termux app would crash and throw the `The content of the adapter has changed but ListView did not receive a notification.` exception. TermuxService was previously not notifying the ListView of the sessions list that a new session has been added, if the activity was in foreground."
607ba3ee56924aa4a824077c027e0dee597b157d,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.10.0`. Check its Changelog sections for info on changes."
ec7568d28e28a74e2e144ab52bb310d075f690ee,"Add support for session actions for foreground session commands

The `TERMUX_SERVICE.EXTRA_SESSION_ACTION` extra can be passed to define what should happen when a foreground session
command is received for the `TERMUX_SERVICE.ACTION_SERVICE_EXECUTE` intent to `TermuxService`, like from `RunCommandService` or `Termux:Tasker`. The user can define whether the new session should be automatically switched to or if existing session should remain as the current session. The user can also define if foreground session commands should open the `TermuxActivity` or if they should run in the ""background"" in the Termux notification. The user can click the notification to open the sessions. Check `TERMUX_SERVICE.VALUE_EXTRA_SESSION_ACTION*` values to see various behaviors.

This also solves the old ""issue"" that if a foreground command was received while an existing session was already in the foreground, the new session won't be switched to automatically. It only brought the new session to the foreground if the activity was not already in foreground, since a call to `mTermuxSessionClient.setCurrentSession(newSession)` wasn't being made."
b4995ef9a78665409ac8f22b6a4239dc74c61cb1,"Refactor RunCommandService

- The `FileUtils` and `PluginUtils` have been added to provide utility functions.
- The executable and working directory validation has been added to check for existence and missing permissions.
- The `expandPath()` function is removed from `RunCommandService`.
- Working directory will automatically be created if under `TermuxConstants.TERMUX_FILES_DIR_PATH` if missing.
- Better logging has been added. This will later be used to notify the user in foreground.
- Javadocs have been updated."
5d6a98452ac2a527205e6c74298e322b586034c1,Added TERMUX_SERVICE#ACTION_SERVICE_EXECUTE Intent Logging
7d53a147d8e18424c5ed6bb4b26c4345c6b80ad2,Reordered TermuxService.actionAcquireWakeLock()
8612a1d0f8e40c29f2a3391026284d789593b46e,"Added plugin_error_notifications_enabled preference

This will allow user to control whether flashes and notifications for plugin errors are enabled or not.

The `TermuxPreferenceConstants` classes has been updated to `v0.4.0`. Check its Changelog sections for info on changes."
f393e9b2cf5ddbfcef860eebaf51541d850d70e3,"Allow mPropertiesList to be null for SharedProperties

This will allow all keys that are read from file to be stored in mMap without knowing their names beforehand."
131f481750dcea638371ac84f31fb0ac494c3f2c,"Add commonmark-spec markdown support with markwon library

Also adds MarkdownUtitls to provide various utils for markdown processing."
c28990a176b947331d011842c2789ad052a41a78,Add ShareUtils
134e21765c7f9546edb287d6a6f9aeec842380d1,"Update Logger

- Add support to log Throwables instead of just Exception class objects.
- Adds utility functions to get Throwables as Strings and Markdown Strings."
3491956385e58aa4c1d5deaf8744b8daf084ee29,Update TermuxUtils to add support for getting device and termux info as markdown
9d36e9adde543133873d6ea3487091cb713fb201,"Add ReportActivity and ReportInfo

This implements the framework to report info to users. This may include reporting failure or result of commands or any exceptions that are raised.

The ReportInfo provides 5 fields:
- userAction: The user action that was being processed for which the report was generated.
- sender: The internal app component that sent the report.
- title: The report title.
- reportString: The markdown text for the report.
- addReportAndDeviceDetails: If set to true, then report and device details will be added to the report.

This should provide the basics parameters for showing a report to the user. The ReportActivity also allows user to copy and share the report.

In future this can also be used to allow users to easily email or post crash reports to github for Termux app crashes instead of going through logcat."
20d20f42c056ec72f4f486cd73c132b0b7d05b34,"Added NotificationUtils to build and manage notifications

The `TermuxPreferenceConstants` classes has been updated to `v0.5.0`. Check its Changelog sections for info on changes."
bccc35bc3fb19c25580c384d3dfd5f1a7d3daaa2,"Added ExectionCommand

ExectionCommand is a class that stores all data related to an execution command like:

- Input parameters like executable and arguments to be used to run the shell command, etc
- Output parameters like stdout, stderr and exitCode.
- Error info generated internally by termux outside the shell in errCode and errmsg.
- Command info like, id, label, description, help info, etc.
- Other config info like for how termux should handle the command.
- The pending intent if any that should be sent after execution to command requester.
- The help for the plugin API that was used to send the intent.
- Current and previous state of the command.

This allow easier management and passing of execution command data between classes and management of it. This will later allow each ExectionCommand command to be linked to a Terminal Session, to handle post processing and failure management.
The ExectionCommand also provides functions to get its data in markdown format, which can be used by failure or success reports generated for the command that are shown to the user. The commandHelp and pluginAPIHelp can also be specially useful to provide info to users on how to manage failures that are generated."
ef1ab197b6481c9ffb3a29bf0452b7b5d7f87cdf,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.11.0`. Check its Changelog sections for info on changes."
31371b5e3df946fe1b5524e24aadd826b853d6b4,"Fully integrate ExectionCommand into RunCommandService

Users will now also be shown flashes and notifications in addition to log entries for missing allow-external-apps permission or for invalid extras passed like the executable. The flashes and notifications can be controlled with the Termux Settings -> Debugging -> Plugin Error Notifications toggle"
1b5e5b56cbf19809df09b4e90170d2962b4ca0cc,"Partially integrate ExectionCommand into TermuxService and BackgroundJob

The TERMUX_SERVICE.ACTION_SERVICE_EXECUTE intent received will be managed by the ExectionCommand now.
The cwd and failsafe have been renamed to workingDirectory and isFailsafe."
92b804dc9cd7186228f59b7dceaba5fc93240c2f,Add logging for termux bootstrap package installation and setup of storage symlinks
1bdf9bf2e3967315268c947fd98d48ebb7c1bf38,Change log level to warn from error when termux.properties file is missing
b856e16998a136bedc03a766728160f55914dfea,"Move activities and fragments to respective packages

Move com.termux.TermuxSettingsActivity to com.termux.app.activities.SettingsActivity
Move com.termux.TermuxHepActivity to com.termux.app.activities.HelpActivity
Move com.termux.settings.DebuggingPreferencesFragment to com.termux.app.fragments.settings.DebuggingPreferencesFragment"
4eced52c5fa76ec39a123e0f41f1eec9de608252,Fix xml files naming convention
eeb85545354076ce1308bfa3c018b2df4cca0adf,Fix string resources naming convention
7aa957c6840f2a0203bff940f93071b79a0ed999,Fix typos
9bbcc08ff306a93a05eee1fc29cb800f189c2344,Fix variable prefix for intent extra
d3d6731d6fbac984b8614b87193320a066ab1b5e,Fix typos
2b3f6817235a44fd119e209623ef4b08439f03d2,Add SettingsActivity to launcher shortcuts
3e0f74a8949fe8a5874773e343d72dcee4492dc3,"Fixed keep screen on default value

The `TermuxPreferenceConstants` classes has been updated to `v0.6.0`. Check its Changelog sections for info on changes."
dff27945011480e169825aa01c8d5fda5693a0fb,Add ShellUtils to define shell related utils since they don't belong in BackgroundJob
78a99fddfd3d0be58fc478d176f8b93fc1716972,"Add the TermuxSession class for linking a TerminalSession to an ExecutionCommand.

TermuxSession will maintain info for foreground Termux sessions. Each terminal session started by TermuxService will now be linked to a ExectionCommand that started it.

This also fixes bugs where newly created session in some cases were not being automatically selected and scrolled to, like when adding a named or failsafe session or those which were created for executable intents."
249f7c6b7cd427e6f252040979e661a70d932d1d,Remove BackgroundJob
df03f0b7d6cb672c84e6e013e27dc072d9072523,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.12.0`. Check its Changelog sections for info on changes."
922f4f4ae5f201c8737c6d70e3f49ca1b4ab564d,Update TextDataUtils.getTruncatedCommandOutput() to support truncation from start or end and for (truncated) prefix
7ca20fdeb3c7d6262fab9f32b3887d67345bcd75,"Update ExecutionCommand to make current and previous state private to prevent direct modification

- Helper functions are now provided to check for common states. The currentState and previousState must only be modified via setState()
- Some errCode values are also provided to prevent hardcoded value usage.
- The stdout, stderr and arguments will now be truncated for logcat to honour its LOGGER_ENTRY_MAX_LEN limits"
f62febbfb7b2221d66413fe588c7ad5b631d4b20,"Add the TermuxTask class for linking a Process to an ExecutionCommand.

TermuxTask will maintain info for background Termux tasks. Each task started by TermuxService will now be linked to a ExecutionCommand that started it.

- StreamGobbler class has also been imported from https://github.com/Chainfire/libsuperuser and partially modified to read stdout and stderr of background commands. This should likely be much safer and efficient.
- Logging of every line has been disabled unless log level is set to verbose. This should have a performance increase and also prevent potentially private user data to be sent to logcat.
- This also solves the bug where Termux:Tasker would hang indefinitely if Runtime.getRuntime().exec raised an exception, like for invalid or missing interpreter errors and Termux:Tasker wasn't notified of it. Now the errmsg will be used to send any exceptions back to Termux:Tasker and other 3rd party calls.
- This also solves the bug where stdout or stderr were too large in size and TransactionTooLargeException exception was raised and result TERMUX_SERVICE.EXTRA_PENDING_INTENT pending intent failed to be sent to the caller. This would have also hung up Termux:Tasker. Now the stdout and stderr sent back in TERMUX_SERVICE.EXTRA_PLUGIN_RESULT_BUNDLE bundle will be truncated from the start to max 100KB combined. The original size of stdout and stderr will be provided in TERMUX_SERVICE.EXTRA_PLUGIN_RESULT_BUNDLE_STDOUT_ORIGINAL_LENGTH and TERMUX_SERVICE.EXTRA_PLUGIN_RESULT_BUNDLE_STDERR_ORIGINAL_LENGTH extras respectively so that the caller can check if either of them were truncated. The errmsg will also be truncated from end to max 25KB to preserve start of stacktraces.
- The PluginUtils.processPluginExecutionCommandResult() has been updated to fully handle the result of plugin execution intents."
977cb34fc741dc18c04c2cd492dc7e0c97f620df,"Provide better errmsg if executable passed to RunCommandService is null or empty

Previously, the null or empty executable would be expanded to the literal root ""/"" string path by FileUtils.getCanonicalPath and then FileUtils.validateRegularFileExistenceAndPermissions() validation would fail since path will not be a regular file. So a user will be shown that ""/"" is not a regular file. Now we show that executable was not even passed."
023069849445182a022af6cf960804117c920a4a,Fix unintentional wordwrap of ExecutionCommand arguments markdown
4e5d14e4a272ff21ad70a520e755d8d3bb5f7e46,Use NotificationUtils to handle TermuxService and RunCommandService notifications
8e80e889f0c624ccbf8dcd59f1ee00ffed20f272,Set compileSdkVersion (NOT targetSdkVersion) to 29 so that Build.VERSION_CODES.Q checks can be made
d3ddb21716c5cd43141fdea960961733b72e2e60,"Warn users if Draw over other apps permission is missing

For android version >= 10(Q), a flash will be shown to users requesting them to grant the permission if they attempt to start a foreground terminal session command from background, like with the RUN_COMMAND intent. The flash will only be shown if ""Plugin Error Notifications"" toggle is enabled in settings."
1ef8eb92191985b23cb38c230c9f6ca39b8733b0,"Add hide-soft-keyboard-on-startup property

If its set to `true` in termux.properties file, then soft keyboard will automatically be hidden on Termux App start to solve issues for when users use hardware keyboard and soft keyboard is automatically opened and wastes terminal screen space.

The `TermuxPropertyConstants` classes has been updated to `v0.5.0`. Check its Changelog sections for info on changes.

Fixes #1978"
5dee839230179ce0f33426ffb348aac229d5448b,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.13.0`. Check its Changelog sections for info on changes."
2cc6285a81b1d1dc641c081eb8c5f3d5b28649e0,Remove leftover log entry from TermuxSessionClient
a2209ddd5efb26f45c84b0b8401bef9c15b20a56,"Add support for sending back background and foreground command results for RUN_COMMAND intent and foreground command results for Termux:Tasker

Previously, termux only supported getting result of BACKGROUND commands back if they were started via Termux:Tasker plugin. Getting back result of foreground commands was not possible with any way.

Now with RUN_COMMAND intent or Termux:Tasker, the third party apps and users can get the foreground command results as well. Note that by ""foreground results"" we only mean the session transcript. The session transcript will contain both stdout and stderr combined, basically anything sent to the the pseudo terminal /dev/pts, including PS1 prefixes for interactive sessions. Getting separate stdout and stderr can currently only be done with background commands.

Moreover, with RUN_COMMAND intent, third party apps and users can get the background commands results as well. This means separate extras for stdout and stderr.

The exit code will also be returned for either case.

### RUN_COMMAND intent

The result extras are returned in the TERMUX_SERVICE.EXTRA_PLUGIN_RESULT_BUNDLE bundle via the pending intent received.

The RUN_COMMAND_SERVICE.EXTRA_PENDING_INTENT extra can be used to send the pending intent with which termux should return the result bundle. The pending intent can be received back by the app with an IntentService. Check RunCommandService for reference implementation.

For foreground commands (RUN_COMMAND_SERVICE.EXTRA_BACKGROUND is false):
- EXTRA_PLUGIN_RESULT_BUNDLE_STDOUT will contain session transcript.
- EXTRA_PLUGIN_RESULT_BUNDLE_STDERR will be null since its not used.
- EXTRA_PLUGIN_RESULT_BUNDLE_EXIT_CODE will contain exit code of session.

For background commands (RUN_COMMAND_SERVICE.EXTRA_BACKGROUND is true):
- EXTRA_PLUGIN_RESULT_BUNDLE_STDOUT will contain stdout of commands.
- EXTRA_PLUGIN_RESULT_BUNDLE_STDERR will contain stderr of commands.
- EXTRA_PLUGIN_RESULT_BUNDLE_EXIT_CODE will contain exit code of command.

The internal errors raised by termux outside the shell will be sent in the the EXTRA_PLUGIN_RESULT_BUNDLE_ERR and EXTRA_PLUGIN_RESULT_BUNDLE_ERRMSG extras. These will contain errors like if starting a termux command failed or if the user manually exited the termux sessions or android killed the termux service before the commands had finished executing. The err value will be Activity.RESULT_OK(-1) if no internal errors are raised.

The stdout and stderr will be truncated from the start to max 100KB combined and errmsg will also be truncated from end to max 25KB. This is necessary to prevent TransactionTooLargeException exceptions from being raised if stdout or stderr are too large in length. The original length of stdout and stderr will be provided in EXTRA_PLUGIN_RESULT_BUNDLE_STDOUT_ORIGINAL_LENGTH and EXTRA_PLUGIN_RESULT_BUNDLE_STDERR_ORIGINAL_LENGTH extras respectively, so that the caller can check if either of them were truncated.

### Termux:Tasker

Support for Termux:Tasker for getting back result of foreground commands will require an update to it since it currently immediately returns control to plugin host app like Tasker without waiting if a foreground command is to be executed."
2afa4b4351c1c95f762cbff46bb37b962442bec0,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.14.0`. Check its Changelog sections for info on changes."
480bad181b3302c847412c9d701a23f528626a56,Use TermuxConstants for getting urls instead of using hardcoded strings
006d5abb783f926eb18d5387111b93875160f1ab,Disable markdown text selection for now since it stops URL clicks from working
34bacfd5b13752f3a30086da1ee8ae645b9f8ad3,Fix terminal-emulator constructor used in tests
04da4b22686bb4742ab47dc2924579b00cac06f7,"Send PendingIntent back for pre-execution errors generated for RUN_COMMAND intent

If the pending intent is not null, then the errors will be sent back to the caller without notifying the user, since we will let the caller handle the errors himself. They will still be logged in logcat.

However, if ""allow-external-apps"" is not true, then a flash and notification will be shown forcefully (regardless of ""Plugin Execution Errors"" toggle state), so that the user knows someone tried to run a command in termux context, since it may be malicious app or imported (tasker) plugin project and not the user himself. If a pending intent is also sent, then its creator is also logged and shown."
2a8d5e292d26d153691845c741d3193dbe70e53c,"Add support for disabling soft keyboard completely with the ""soft_keyboard_enabled"" SharedPreferences key

Users can toggle the state from Settings -> Keyboard I/O -> Soft Keyboard toggle.

Android phone should also have an internal setting for disabling soft keyboard when a hardware keyboard is connected in Language and Input android settings or from the input mode selection notification, but the above setting will be Termux app specific and will allow soft keyboard to still be shown in other apps.

The `TermuxPreferenceConstants` classes has been updated to `v0.7.0`. Check its Changelog section for info on changes."
d7ea770d47e48f977d54c9e6eb39b5a0876dffe3,Move com.termux.models to com.termux.app.models package
15eb56d4dd2ed23afbea78178a3854ba30bc0323,"Add PackageUtils and fix ReportActivity

- PackageUtils has been added to get various package related info. This will be used to get info based on Context objects instead of using BuildConfig which wouldn't have been available across termux plugins.

- Support for getting Context objects of all termux plugin apps have been added to TermuxUtils.

- Support for showing more details for the app has been added for ReportActivity. This will also allow app info of Termux app to be generated when TermuxUtils.getAppInfoMarkdownString() is called by a termux plugin so that both are shown so that devs/users can more easily detect compatibility issues.

- ReportActivity has been fixed to also include report and device info instead of just the ExecutionCommand info when copying and sharing.

- Moved the generation of markdown for ReportInfo to its own class and added creationTimestamp field.

- Increased markdown headings size for some cases."
49f53f55f31d9852ad1d72f5f3f89df6666c177d,Renamed TextDataUtils to DataUtils
d4653d0590f2de498741514aafa3bded78c737ed,Get TERMUX_VERSION while building shell environment via Termux package context
cdbd38faaa4313da501bbc62a61a53e4a8b83aa0,Move StreamGobbler to shell package
ada678dfe2c50a2781bf411182650c7c73837d56,Move get*LogStringEntry() functions to logger class
a32309827f03c981e13d351bccdc606cd2e98cba,Update gradle version to 4.1.3
c0323fe816483bff6d7af7d435059dbc92a8c6e7,Move ShellUtils to shell package
d4fc34ca2d771a4586098707f32f31400b7b3c6e,"Move FileUtils to file package and define more file util functions

A lot of utils have been defined now that can be used to safely manage files.

The java java.io.File API has poor support for detecting symlinks including broken symlinks. Android implementation also has issues. Check FileTypes.getFileType() function for more info. For this reason, the UnixFileAttributes and related classes has been ported from AOSP to get file attributes and type.

Some file utils and android versions use google's Guava com.google.common.io.MoreFiles library for managing files, specially for safer directory deletion with SecureDirectoryStream.

Some file utils and android versions use org.apache.commons.io.FileUtils for managing files. The library version used is 2.5 and it must not be incremented for compatibility with android version < 8, otherwise runtime crashes will occur."
b2cd20c03554eed10cbeff5d6b888608b0dc87ca,Use FileUtils for bootstrap and shared storage symlinks setup
8598b92dea1665381fd4beddca0cf9e9d62188aa,Use FileUtils for clearing TMPDIR and move clearing function to ShellUtils from TermuxService
8a5442f80dd15f3fd8169d6666a28fb8d10971f8,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.15.0`. Check its Changelog sections for info on changes."
38323b1c2a364556556d5363415975f3861a7e4e,Fix RUN_COMMAND Intent plugin api url
18b004a2ba6f35f2224343eed75621511fb27a22,Fix Logger function modifier order
cf5bb69fc88b9e0c254a1b9ac0eabe7a40782ac1,"Add crash_report_notifications_enabled shared preferences

This will allow users to control if a notification should be shown with the crash info when app is restarted after a crash

The `TermuxPreferenceConstants` classes has been updated to `v0.8.0`. Check its Changelog section for info on changes."
325a6f7d660d66cdafa2238cd227ae698aab0cca,Fix SettingsActivity shortcut not showing on android 7 and fixed shortcut actions and categories
07e6ecd3c35628d27e10aa85841e642152687e0d,"Update TermuxConstants

The `TermuxConstants` classes has been updated to `v0.16.0`. Check its Changelog section for info on changes."
69e4b575a87a21e5895ad48bb38e4f200e982f9a,"Implement crash handler and reporting

Now whenever the Termux app crashes, the crash report (stacktrace, app and device info) will be logged to ~/crash_log.md file. When the user will reopen the app, a notification will be shown which when clicked will show the crash report content in the ReportActivity. The activity will have important links like email, reddit, github issues of termux app and packages at which the user can optionally report an issue if necessary after copying the crash report text. The ~/crash_log.md file will be moved to ~/crash_log-backup.md so that a notification is not shown again on next startup and can be viewed again via SAF, etc.

This will allow reports for bugs that are submitted to have complete and useful info, specially in markdown format, making lives of devs a tad bit easier. Also more bugs that are rare might be submitted since users will have the info to report with and know where to report at.

ToDo:
- The TermuxConstants.TERMUX_SUPPORT_EMAIL_URL needs to be updated with a valid support email once its set up. The TermuxUtils.getReportIssueMarkdownString() function currently also has ""email"" lines commented out which will need to be uncommented.
- Currently, crashes will only be handled for the main app thread, other threads will have to manually hooked into where necessary."
067709bf4bd4d75e904824f1760ef5c8ffc3b278,"Disable obfuscation of termux-app in release builds without disabling optimizations and shrinking

This will allow stacktraces to have full class and method names when a crash report is generated."
939338aaaca61802d0d09b18e3d914e7947bca9b,"Allow users to report an issue from terminal transcript by selection ""Report Issue"" from context menu"
81d97c35840e9292cfcfdbf4df7d93f84b44e167,Fix potential TransactionTooLargeException when sharing text
9cee71004fd8d3eb298ef2bd860f5d45d0adf8b4,"Replace ""if("" with ""if ("""
c9a476caf7d9b5acf4955a0ebc67b07bee1347bc,Add TermuxTaskerAppSharedPreferences to handle termux-tasker shared preferences
682ce083149be145512b11fe4037aa74ccbe0251,"Create termux-shared library package for all termux constants and shared utils

The termux plugins should use this library instead of hardcoding ""com.termux"" values in their source code.

The library can be included as a dependency by plugins and third party apps by including the following line in the build.gradle where x.xxx is the version number, once its published.

`implementation 'com.termux:termux-shared:x.xxx'`

The `TermuxConstants` class has been updated to `v0.17.0`, `TermuxPreferenceConstants` to `v0.9.0` and `TermuxPropertyConstants` to `v0.6.0`. Check their Changelog sections for info on changes.

Some typos and redundant code has also been fixed."
71dfefd4b77fc56132c34c4d2df8a7b3ea2fd839,Add termux-shared library to github workflow so that its published
62a2104adccd98e63ac111c0728922dfae288d5d,"Updated RunCommandService javadocs.

Documentation has been moved to https://github.com/termux/termux-app/wiki/RUN_COMMAND-Intent"
0c9b85a4f97c3e06c29792c4ae4faa2cfac44074,Micro optimization for StreamGobbler
64fb2ce49bea8221a2c22dbc262cfbd389829a56,"Update TermuxConstants

The `TermuxConstants` class has been updated to `v0.18.0`. Check its Changelog section for info on changes."
df4d8ac7e5da79cfc582e0776b21772e8beecde4,Add support for reporting issues to the termuxreports@groups.io email
0cd7cb81622d2abadd8744d028b48523df12c6f3,"Improve TermuxSession and TermuxTask

TermuxSession, TermuxTask and TermuxSessionClientBase have been moved to termux-shared. They are now not dependent on TermuxService anymore and have become abstract so that they can be called from anywhere. TermuxSession.TermuxSessionClient and TermuxTask.TermuxTaskClient interfaces have been created for callbacks, which the TermuxService now implements.

The TermuxTask now also supports synchronous command execution as well to run shell commands from anywhere for internal use by termux app and its plugins.

TermuxTask now also supports killing the process being run by sending it a SIGKILL. This is used by TermuxService to kill all the TermuxTasks (in addition to TermuxSessions) it manages when it is destroyed, either by user exiting it or by android killing it. Only the tasks that were started by a plugin which **expects** the result back via a pending intent will be killed, but the remaining background tasks will keep on running until the termux app process is killed by android, like by OOM. Check TermuxService.killAllTermuxExecutionCommands() for more details on how TermuxService kills TermuxTasks and TermuxSessions.

Fixed null pointer exception when getting terminal transcript if TerminalEmulator not initialized."
24a5493ea5ee090ec6bf5787f7bb4561729f7734,"Replace ""if("" with ""if ("""
f888f35e357c0b01bf5c971b2fb30501ede18afd,"Fix issue where TermuxService was stopped and Termux notification canceled, if background tasks were still running but all sessions had been closed."
a95e187b25ba7e8b4887e5bc107ff2bd27ef542a,"Assure ""Process completed"" string is written to terminal before session is finished"
824b3e657ff20c5db2e47162240e9812716272b1,"Rename termux terminal view and session client classes

- com.termux.app.terminal.TermuxViewClient has been renamed to TermuxTerminalViewClient
- com.termux.app.terminal.TermuxSessionClient has been renamed to TermuxTerminalSessionClient
- com.termux.shared.shell.TermuxSessionClientBase has been renamed to TermuxTerminalSessionClientBase

This was required because com.termux.app.terminal.TermuxSessionClient was in conflict with com.termux.shared.shell.TermuxSessionClient interface of com.termux.shared.shell.TermuxSession."
192b2088835d43201351edcec15aeb93a86a8733,"Add support for stdin for background TermuxTasks

This will allow passing scripts (to bash or python) or other data to an executable via stdin. Arguments are passed to the executable and not the script."
153818f7fb581dd7dc47e72aecab4986720c593d,Fix typos
bbf03a05076ce20afb5f6df0a3d4b097821344e7,The `TermuxConstants` class has been updated to `v0.19.0`. Check its Changelog section for info on changes.
f1034c2e79398ede1a366131f3620def15b1ba24,Add support for stdin for background RUN_COMMAND intent and TERMUX_SERVICE.ACTION_SERVICE_EXECUTE commands
e5c5174f6f6a429eb8514f73e437a0945254e08e,"Fix TermuxActivityBroadcastReceiver wrongly designed intent actions and extras

From now on
- TERMUX_ACTIVITY.ACTION_REQUEST_PERMISSIONS should be used for requesting storage permissions.
- TERMUX_ACTIVITY.ACTION_RELOAD_STYLE should be used for reloading styling.
- TERMUX_ACTIVITY.EXTRA_RELOAD_STYLE which was previously used for requesting storage permissions if its value equaled ""storage"" has been deprecated.

If more actions need to be supported in future, add them to TermuxActivity.registerTermuxActivityBroadcastReceiver() IntentFilter."
6293f5f170d89b3c2368dacf43a2601c76ab8d7f,"Added APT package info when generating ""Report Issue"" text

This will now take a few more seconds due to ""apt update"" command being run."
3d468496735b294a6531ac32bbb077779a7e1114,"Replace ""if("" with ""if ("""
567eeca782fec8971b2682b5ef01c787674ea0b3,Bump to v0.109
b33b906784457cbb038eb75003c23e0c2565ad5e,Merge pull request #1953 from agnostic-apollo/termux-various-fixes-and-improvements
bbb6f4471f6459d01660483c82f682c5ebc5a59b,update bootstrap archives
ffd8687b4cbc9ae9dab8f56384bfecab83a4049b,"Revert ""Bump to v0.109"""
b7b4a0a8a20147d78cbc541d4a88a421a25d2807,Move TermuxTerminalSessionClientBase to com.termux.shared.terminal package
1132028bd20cbff0691d8f1e2cace5f0864816c7,Add TermuxTerminalViewClientBase to com.termux.shared.terminal package and extend that in TermuxTerminalViewClient
d19cf435be6f7f4456400bedde03be5f3ffcb7f1,"Add "".sh"" extension to apt_info_script file"
ae1c9bacd6f58bf550cba28e9a0b66e969307a44,Bump to v0.109
354fe1948eaad1144513db30368f142fcb83449a,Merge pull request #2002 from agnostic-apollo/termux-various-fixes-and-improvements
cde0bd22465cc1e05c6e362910befcc2f1cea628,"Prevent DebuggingPreferencesFragment and TerminalIOPreferencesFragment from being removed during minification

Fixes #2005"
3306c3c2a2691324b67ea3005f08cb5a35a9f306,Add support to include source jar files for libraries published by termux
3af5730354a5f78eb5d1e279a2ca51af9b817e30,Add support for allowing IDE to show documentation in .gradle files
a6ae656c9fa87e0b97e7c7b2ae346f936911b38c,Bump to v0.110
d6eb5e3511587780e0899cde43a7b0760bce4622,"Fix termux-reset

The TMPDIR was being automatically cleared and recreated even if it didn't already exist when TermuxService was stopped. This left an empty TMPDIR in the PREFIX directory when termux-reset was run and on termux restart the bootstrap wasn't installed again because PREFIX directory already existed. This resulted in a broken environment since no binaries/libs existed under PREFIX and /system/bin/sh was loaded.

This issue was created due to v0.109."
107927f5a15028c0be35d28bfe7e188cca655d0a,"Fix cases where bootstrap was not reinstalled even if PREFIX was broken

The TermuxInstaller.setupBootstrapIfNeeded() previously only checked if PREFIX directory existed or not to decide whether to install bootstrap or not. Now it will also check if its empty or only contains the tmp directory, since in that case the PREFIX must be deleted and bootstrap reinstalled, otherwise a broken environment will be loaded since no termux binaries/libs would exist.

It will now also delete any file at the prefix or staging prefix path, even if its not a directory. If the user does not want the bootstrap to be installed for some reason, then any other file other than ""tmp"" can be created under PREFIX."
1d06ff9bf0abe8dd206dcb527979c4fa02eb5e49,Bump gradle to v7.0
5d911ef93f3a71ad59f15f8edf48a74a99027e2a,Bump to v0.111
0fe608f91ebfb1cdc7ac0025e810d153a39fa199,"Revert ""Bump to v0.111""

This reverts commit 5d911ef93f3a71ad59f15f8edf48a74a99027e2a."
b34f60b1b0368666fb2c3edca203fcad74241762,"Fix the bootstrap reinstallation logic for when PREFIX is a symlink

Changes were made to bootstrap reinstallation logic in 107927f5, but it wasn't considering that PREFIX may be a symlink file to a directory instead of a directory file. With this commit, the previous behaviour of termux is restored where PREFIX can optionally be a symlink to a valid directory where the symlink isn't broken/dangling."
8f9771adceb9c2d2b0e59e3422d76f6acf7ebc6c,Bump to v0.111
c9abfe5438761b5f87ba3a7a815b38b761b99e97,Update README
01f2ed089289b01b05c06edfdc1d8095f2770e1d,Update LICENSE
fdcf6cb6e1412e0337dc0bd2139f4aa03adac7d9,Update LICENSE
2e156d462121e0dd2a00593b185130ef2435700c,Update LICENSE
0aa5a123b7adfe4fc01d76d60ce47ed20d382658,"Bump to v0.112

This only reverts the versioning login change done in a6ae656c since that caused F-Droid bot and Github Packages to fail to pick up new releases. The versions must be bumped directly in `build.gradle` file in future and not through other files like `gradle.properties`."
0d4bfb7bd5dfc640fa73e3aa197578e34fa155f3,"Replace jcenter() with mavenCentral()

This is since JCenter is being shut down."
93e1b132786d5cc7b314f2e42fa3430fb0a4103a,Update README
cfebb3358d4c7675a7d69aecad8e05487baa5ef4,Update README
b84854af92b11f4ec3f1ce35483d52953a9ab6cd,Update README.md
b268b6edf742db9d344e5631b1dd134e54a39351,"Disable error flashes when clearing TMPDIR directory on termux app exit

Rooted users were getting `Clearing $TMPDIR directory at path ""/data/data/com.termux/files/usr/tmp"" failed` flash errors when they exited Termux if directories existed in TMPDIR that only had `root` user ownership, since they would fail to get cleared since clearing was being run as the termux app user instead of as the root user. Now errors will only be logged to logcat."
42ad3723fd56c1b3db923eb3617e9107f7905813,"Fix NullPointerExceptions for cases when TermuxActivity tries to access TermuxService when it doesn't hold a reference

Fixes #2026"
4711094614f88ad62c6421e536dcb023119d16fb,"Bump ndk to v22.1.7171670

Will also remove requirement for F-Droid metadata/com.termux.yml ndk version patch

https://gitlab.com/fdroid/fdroiddata/-/commit/1fe5c6b905b725bb17179b5bce01fd06d094dd96#54c3cc576ac595d35a41ce9e4a69e1c905fd6ea4"
f3f58c8fc7966cb55ef9297a306577a935b28f51,Update README.md
3e7b3604a48a1fe312b082d3c19be21ea4b9addb,Update LICENSE.md
bc52a4e90c3a94f56d9aaa0bb775c2cbe787cb13,Update README.md
4850678d557c8de654576ca41fe9e46404cb9b8b,Move Build.ID and Build.DISPLAY to Software section of device info markdown
596aa56b38b469f082e363953b9ff71f599642f4,Update report issue message to ask users to provide details on what they were doing that caused the Termux app crash
4d1851e6beb5afb9c8de952797364fb4ff14faf2,"Fix issues where soft keyboard was not shown in some cases when hardware keyboard was attached

For Termux app to be able to show a soft keyboard while a hardware keyboard is attached requires either of 2 cases:

1. User has enabled ""Show on-screen keyboard while hardware keyboard is attached"" toggle in Android ""Language and Input"" settings.
2. The toggle is disabled, but the soft keyboard app overrides the default implementation of `InputMethodService.onEvaluateInputViewShown()` and returns `true`. Some keyboard apps have a setting for this, like HackerKeyboard, but its not supported by all keyboard apps.

https://cs.android.com/android/platform/superproject/+/android-11.0.0_r3:frameworks/base/core/java/android/inputmethodservice/InputMethodService.java;l=1751

Termux previously didn't forcefully show a keyboard when the drawer ""KEYBOARD"" toggle button was pressed and only did that for the ""KEYBOARD"" extra keys toggle button. This prevented the keyboard to be shown for case 2 even when the user attempted to show the keyboard with the drawer ""KEYBOARD"" toggle. Now both buttons will forcefully show the keyboard.

Moreover, previously at app startup for case 2, the keyboard wasn't being shown. Now it will automatically be shown without requiring a manual press of a ""KEYBOARD"" toggle button.

This may also solve the issue where the soft keyboard wouldn't show even when the toggle of case 1 was enabled."
39c69db820efec991e6bbfef9bd7ea4cc50912be,"Fix issues where soft keyboard was not shown in some cases when hardware keyboard was attached v2

This is an update to 4d1851e6 commit.

The toggle logic change previously was actually being applied to ctrl+alt+k hardware keyboard shortcut instead of the mentioned extra keys ""KEYBOARD"" toggle. However, now it applies to the extra keys ""KEYBOARD"" toggle button as well, in addition to  drawer ""KEYBOARD"" toggle button and ctrl+alt+k hardware keyboard shortcut. They will all behave the same now.

Updated onSingleTapUp() to also forcefully show keyboard.

Fixed issue where ""hide-soft-keyboard-on-startup"" property wasn't respected anymore due to forced keyboard showing done in 4d1851e6.

Removed ""stateAlwaysVisible"" flag from AndroidManifest since its ignored in Android 10 by default and not needed due to usage of InputMethodManager.showSoftInput(). https://developer.android.com/reference/android/view/WindowManager.LayoutParams#SOFT_INPUT_STATE_ALWAYS_VISIBLE

Moved ""adjustResize"" from AndroidManifest into java code (which is also deprecated in API 30) to centralize keyboard logic."
116b9b42d81e0733edd1d66ec80758c5969db844,Bump compileSdkVersion (NOT targetSdkVersion) to 30
4ecea144bb4d3dd511fa551410f9a481ddd43b92,Create KeyboardUtils
fe8c3ba216d2fc145eb33707accb4abfad87125d,Update KeyboardUtils will null checks and add setSoftKeyboardVisibility()
e4e638bd318baf6ad344c898c3baa9093975e53f,"Allow users to enable/disable keyboard instead of just show/hide with keyboard toggle buttons

This `soft-keyboard-toggle-behaviour` key can be used to change the behaviour. The default behaviour is `show/hide`. The user can set the value to `enable/disable` in `termux.properties` file to change default behaviour of keyboard toggle buttons to enable/disable. In this mode, tapping the keyboard toggle button will disable (and hide) the keyboard and tapping on the terminal view will not open the keybaord automatically, until the keyboard toggle button is pressed again manually. This applies to split screen and floating keyboard as well. The keyboard can also be enabled from Settings -> Keyboard I/O -> Soft Keyboard toggle. Running `termux-reload-settings` command will also update the behaviour instantaneously if changed.

Fixed issue where ""hide-soft-keyboard-on-startup"" property wouldn't work if Termux app was switched back from another app. Fixes #1098

Fixed issue where soft keyboard may not show on startup on some devices but it still may fail sometimes.

The `TermuxPropertyConstants` class has been updated to `v0.7.0`. Check its Changelog sections for info on changes."
e6dac9335236f58d567c6e1aa93021b4fb6174de,"Preserve the termux.properties literal string values internally that were being converted to boolean on load time

The `TermuxPropertyConstants` class has been updated to `v0.8.0`. Check its Changelog sections for info on changes."
90c9a7b3bc79972cb3765f7bad2681d7dd58bf1b,"Allow users to disable soft keyboard automatically if hardware keyboard is connected

Users can enable this behaviour by enabling the `Termux Settings` -> `Keyboard I/O` -> `Soft Keyboard Only If No Hardware` toggle.

Currently, for this case, soft keyboard will be disabled on Termux app startup and when switching back from another app. Soft keyboard can be temporarily enabled in show/hide soft keyboard toggle behaviour with keyboard toggle buttons and will continue to work when tapping on terminal view for opening and back button for closing, until Termux app is switched to another app. After returning back, keyboard will be disabled until toggle is pressed again.

This also may help for the Lineage OS bug where blank space is shown where soft keyboard should be if ""Show soft keyboard"" toggle in ""Language and Input"" is disabled. Check KeyboardUtils.shouldSoftKeyboardBeDisabled() and https://github.com/termux/termux-app/issues/1995#issuecomment-837080079 for details.

The `TermuxPreferenceConstants` class has been updated to `v0.10.0`. Check its Changelog sections for info on changes."
d42514d8c958eadb5eb6c59c47b3bf62ea2ab472,"Moved Termux app settings into dedicated ""directory"" in Termux Settings and added About page

The `TermuxConstants` class has been updated to `v0.20.0`. Check its Changelog sections for info on changes."
4629276500a889344ff74d485ded15f337c4b86c,Changed TermuxAppSharedPreferences function naming convention
1e30022ce7d79c26632aba675fe0da999271225a,"Add support for APK signing certificate SHA-256 digest and detecting APK release type and add them to App Info reports

The `TermuxConstants` class has been updated to `v0.21.0`. Check its Changelog sections for info on changes."
af115c996627f7f5000f8036be4e0769c7ed0436,Add generic functions to show a message in dialog and exit app with an error message
79df863b75d1a9c75b65a16714fda7f9318ba038,"Ensure we read/write to/from current SharedPreferences

When getting SharedPreferences of other termux sharedUserId app packages, we get its Context first and if its null, it would mean that the package is not installed or likely has a different signature. For this case, we force exit the app in some places, since that shouldn't occur. Previously, if it was null, we were defaulting to getting SharedPreferences of current package context instead, which would mix keys of other packages with current one. SharedPreferences of other app packages aren't being used currently, so this isn't an issue, this commit just fixes the issue for future.

Force exit will also be triggered if Termux is forked and TermuxConstants.TERMUX_PACKAGE_NAME is not updated to the same value as applicationId since TermuxActivity.onCreate() will fail to get SharedPreferences of TermuxConstants.TERMUX_PACKAGE_NAME.

Moreover, its normally not allowed to install apps with different signatures, but if its done, we ""may"" need AndroidManifest `queries` entries in andorid 11, check PackageUtils.getSigningCertificateSHA256DigestForPackage() for details."
6de3713049e61a838fe094192bb27d0f691b318e,"Add in-app Donation link in Termux Settings for non google playstore releases

The `TermuxConstants` class has been updated to `v0.22.0`. Check its Changelog sections for info on changes."
339b2a24a2a05416cd3b313d94551cc7ba5d59fa,Add support for setting Termux:Tasker log level from TermuxSettings
2f828255eeca61e1e92442c1a48b7c409830549d,Generate potentially long running reports in background threads instead of main UI thread
27dc211e2d7735bb3857d524b3a59e85dd84033f,Update .gitattributes
11f5c0afd105b0647c610e13e39a5f72d9917e4d,Normalize gradlew.bat
31298b88575e12ea73e484cfd760ea3f030dcbd5,"Allow users to enable terminal cursor blinking with termux.properties

This `terminal-cursor-blink-rate` key can be used to enable terminal cursor blinking. The user can set an int value between `100` and `2000` which will be used as blink rate in millisecond. The default value is `0`, which disables cursor blinking. So adding an entry like `terminal-cursor-blink-rate=600` to `~/termux.properties` file will make the cursor attempt to blink every 600ms. Running `termux-reload-settings` command will also update the cursor blinking rate instantaneously if changed.

A background thread is used to control the blinking by toggling the cursor visibility and then invalidating the view every x milliseconds set. This will have a performance impact, so use wisely and at your own risk.

If the cursor itself is disabled, which is controlled by whether DECSET_BIT_CURSOR_ENABLED (DECSET 25, DECTCEM), then blinking will be automatically disabled. You can enable the cursor with `tput cnorm` or `echo -e '\e[?25h'` and disable it with `tput civis` or `echo -e '\e[?25l'`.

Note that you can also change the cursor color by adding `cursor` property to `~/colors.properties` file, like `cursor=#FFFFFF` for a white cursor.

The `TermuxPropertyConstants` class has been updated to `v0.9.0`. Check its Changelog sections for info on changes.

Closes #153"
f8ccbb4953e835c78a5bdcb170121207b5622d6a,"Log invalid values stored in termux.properties file during load time

All external and internal values were already logged and required log level to be set to ""Verbose"" in Termux Settings, but now invalid  values and the default value used instead will be logged at log level ""Normal"" as well.

The `TermuxPropertyConstants` class has been updated to `v0.10.0`. Check its Changelog sections for info on changes."
6524a619f6c759cd1d0d40762edb80c4ec34e40c,update bootstrap archives
89a1e027130811fa8692a9fe0fc8f1e054f8e7e1,"Updates to terminal cursor blinking

Fixed bug where cursor would become invisible when long holding (arrow) keys when editing commands (outside of text editors like nano).

Updated javadocs with info on how cursor blinking works

""Performance Improvements"" and removed redundant mRendering check"
58d577066a03a40e2d7a8c160cfc13c1694ab2a7,"Release terminal beep SoundPool resources on activity stop to attempt to prevent exception

The following exception may be thrown, likely because of unreleased resources.

Related https://stackoverflow.com/a/28708351/14686958

java.util.concurrent.TimeoutException: android.media.SoundPool.finalize() timed out after 10 seconds
  at android.media.SoundPool.native_release(Native Method)
  at android.media.SoundPool.release(SoundPool.java:177)
  at android.media.SoundPool.finalize(SoundPool.java:182)
  at java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:250)
  at java.lang.Daemons$FinalizerDaemon.runInternal(Daemons.java:237)
  at java.lang.Daemons$Daemon.run(Daemons.java:103)
  at java.lang.Thread.run(Thread.java:764)"
d736b1eba5608924080021a236255ba731892016,Implement TermuxActivity callbacks in TermuxTerminalViewClient and TermuxTerminalSessionClient
b711a467c189b21742164ef185416751e3d58d7a,Bump to v0.113
e08e3b536e1b3d0a3d67fa96b182b403379697d3,"Do not close soft keyboard when toolbar text input view is focused on

The TerminalToolbarViewPager EditText was requesting focus when it was selected. This called the TerminalView.onFocusChange() event with hasFocus=false, which closed the soft keyboard. Now soft keyboard will only be closed if both of them don't have focus.

Fixes #2077"
6837db0015d220dbde21fbdd1b38bc419e15c18a,update bootstrap archives
7620800cd5705dfb93c8d684abd7f949a826b6b8,"bump bootstraps again

Include latest changes to pkg & termux-change-repo"
cb8b0225cadaa8f51f32065ee914cb7ce0f38d1e,Add pluginIntent field to ExecutionCommand
1ad038ece54c44cf13d19ad14cbd05a556b649e9,"Fix issue where soft keyboard would not show in some cases

1. If `soft-keyboard-toggle-behaviour=enable/disable` was set, then pressing keyboard toggle wouldn't show the keyboard after switching back from another app if keyboard was previously disabled by user.
2. If switching back from another app, like when opening url with context menu ""Select URL"" long press and returning to termux with back button, then soft keyboard wouldn't automatically open like it does on app startup.

Also fixed issue where OnFocusChangeListener wasn't being set up if keyboard had to be hidden or disabled on startup.

Fixes #2111, Fixes #2112"
7225e2b379b9a753644c51e0ac9e3eb0ca4e049c,"Merge pull request #2114 from agnostic-apollo/fix-soft-keyboard-not-showing-in-some-case

Fix issue where soft keyboard would not show in some cases"
7ef925543739739809d79ddc2dc1c82343b780a9,Remove hardcoded wiki.termux.com url from HelpActivity
e7dd0eeebe98aaf41a31944e0b6eb62d5f4db8bf,"Fix issue where soft keyboard overlaps extra keys or terminal in some cases

Check TermuxActivityRootView javadocs for details."
0b4bbaf23d349e65b2f2c69b53c0a579cac92ddc,"Allow users to adjust terminal transcript rows with termux.properties

This `terminal-transcript-rows` key can be used to adjust the terminal transcript rows. The user can set an integer value between `100` and `50000`. The default value is still `2000`. So adding an entry like `terminal-transcript-rows=10000` to `termux.properties` file will allow users to scroll back ~10000 lines of command output. After updating the value, termux must be restarted. You can also run `termux-reload-settings` command so that termux loads the updated value, but only new sessions will use the updated value, existing sessions will not be affected.

You can test this with the following, where `70` is number of `x` characters per line and `10001` is the number of lines to print.
`x=""$(printf 'x%.0s' {1..70})""; for i in {1..10001}; do echo ""$i:$x""; done`

Be advised that using large values may have a performance impact depending on your device capabilities, so use at your own risk.

Closes #2071"
f545ebf0bd5b4f4ca0ba0c5b163be78b8f168904,"Allow users to set terminal cursor style with termux.properties

This `terminal-cursor-style` key can be used to set the terminal cursor style. The user can set a string value to `block` for `■`, `underline` for `_` or `bar` for `|` cursor style. The default value is still `block`. So adding an entry like `terminal-cursor-style=bar` to `termux.properties` file will allow users to change to the `bar` cursor style. After updating the value, termux must be restarted. You can also run `termux-reload-settings` command so that termux loads the updated value, but only new sessions will use the updated value, existing sessions will not be affected unless you Reset them from terminal's long hold options menu `More` -> `Reset` or restart termux activity after double back press to exit.

You can temporarily switch to different cursor styles with (or add to `.bashrc` but resetting will restore default `bar` style):

- block: `echo -e ""\033[2 q""`
- underline: `echo -e ""\033[4 q""`
- bar: ` echo -e ""\033[6 q""`

Closes #2075"
e119d34bcaf16ffa68300e7dc0140918d01c1622,Fix issue where terminal cursor blinking would not automatically start again if termux activity was restarted after exiting it with double back press
19c690d02ba76133d492479b74340d807b9a24c7,"Fix issue where if termux installer failed with an exception after prefix directory was already created, then try again would load a broken environment."
fd80cdaf23f7d364b7c60717743d818d45f5e2a3,"Change default extra keys style

If a user does not define a custom value in termux.properties file, then by default 2 rows will be shown with all arrow keys (up/down/left/right) for ease of terminal use."
7ac62c984053bd56740b18bd92ccab3220258dbc,"Allow users to disable terminal session change toast

The user can add `disable-terminal-session-change-toast=true` entry to `termux.properties` file to disable terminal session change toast. The default value is `false`. Running `termux-reload-settings` command will also update the behaviour instantaneously if changed.

Closes #2118"
4dfed3320e088cf888ad1600da4bd3148f06c3ed,Bump to v0.114
0fb18c0c8bc978c7487a2f8350ca05ae412c18dd,Remove left over lines from gradle.properties
f0f6927273b964c49a0efeb52badb43204fa0187,Rename variable
5f2ccca4239c8d32436a35798e9cd5a0e0f57568,"Redo fix execution commands exceptions not being logged or sent back to plugins

The f62febbf commit mentioned that it solved ""the bug where Termux:Tasker would hang indefinitely if Runtime.getRuntime().exec raised an exception, like for invalid or missing interpreter errors and Termux:Tasker wasn't notified of it. Now the errmsg will be used to send any exceptions back to Termux:Tasker and other 3rd party calls.""

This however was still broken due to local design changes made to TermuxTask after testing was already done. This commit should solve that problem. Moreover, now a notification will be shown if execution commands **fail to start** that are run by plugins that don't expect the result back, like with Termux:Widget or RUN_COMMAND intent. This should make it easier for users to debug problems, since otherwise logcat needs to be looked. But logcat would still need to be looked if commands/scripts fail after they have started due to internal errors. Notifications can be disabled from Termux Settings by disabling the ""Plugin Error Notifications"" toggle."
f77c88633e78469efe67ea5097941e22b330c5eb,"Fix issue where terminal cursor blinking would not automatically start again if termux activity is started after device display timeout with double tap and not power button.

Fixes #2138"
b7b12ebe84911748b9757d795a8def0d5d6b716e,"Move from github packages to jitpack.io for hosting termux library packages

Github Package hosting is considered a private repository since it requires github APIs keys if a hosted library needs to be imported as a dependency. Importing from private repositories is not allowed as per F-Droid policy so termux plugin apps can't import termux libraries as dependencies so hence we move to Jitpack. Check https://github.com/termux/termux-app/issues/2011#issuecomment-824837387.

Version number of all published libraries from termux-app must be the same.

Importing can be done with the following way.

Add to root level build.gradle

```
allprojects {
    repositories {
        google()
        mavenCentral()
        //mavenLocal()
        maven { url ""https://jitpack.io"" }
    }
}
```

Add to app module level build.gradle if you want to import `termux-shared`

```
 dependencies {
    implementation 'com.github.termux:termux-shared:0.115'
}
```

Check https://github.com/jitpack/jitpack.io#building-with-jitpack for other details, like including commit or branch level import.

If you are updating the libraries as well and want to test locally, run `./gradlew publishReleasePublicationToMavenLocal` from root directory of termux-app to publish library to local maven repository. You may need to rebuild project before it, library files will be published at `~/.m2/repository/com/github/termux/termux-shared/0.115`. If you want to import the updated library in a project, then uncomment the `mavenLocal()` line in the build.gradle and run sync gradle with project files.

Making changes to library after dependencies have already been cached without incrementing version number may need deleting gradle cache if syncing gradle files doesn't work after publishing changes. Open gradle right sidebar in android studio, then right click on top level entry, then select ""Refresh Gradle Dependencies"", which will redownload/refresh all dependencies and will take a lot of time. Instead running `find ~/.gradle/caches/ -type d -name ""*com.github.termux*"" -prune -exec rm -rf ""{}"" \; -print` and then running gradle sync should be enough.

Using ""com.termux"" instead of ""com.github.termux"" will require a DNS TXT record to be added from git.termux.com to https://github.com/termux at termux.com

https://jitpack.io/docs/#custom-domain-name"
7f36d7bbd0bb378b571f65154036fbbb271f5e65,Move ReportActivity to termux-shared so that other termux plugins can use it too
69e5deedc758b16c764c23dc5ddad9e05a05935b,"Move to com.termux domain for termux libraries published with jitpack

A DNS TXT record has been added from git.termux.com to https://github.com/termux at termux.com by @fornwall

```
dig txt git.termux.com

;; ANSWER SECTION:
git.termux.com.300INTXT""https://github.com/termux""
```

https://jitpack.io/docs/#custom-domain-name"
80b495e50b130d26dd2d7b8483b0019875c9a0c3,"Move storage permission logic to PermissionUtils and add disable battery optimizations code

Option to disable battery optimizations will be added in termux settings later."
679e0de04465a152a76fafcae50841a9ee78e029,"Fix suppressed exceptions not being logged and long logcat message being truncated

If an exception is thrown, the exception message might not contain the full errors. Individual failures may get added to suppressed throwables which can be extracted from the exception object by calling `Throwable[] getSuppressed()`. So just logging the exception message and stacktrace may not be enough, the suppressed throwables need to be logged as well.

The Logger class will now log the suppressed throwables as well if they are found in the exception.

This was mainly a concern for FileUtils where guava MoreUtils library was used to delete directories but exceptions weren't being fully logged on failures, like bootstrap failures, so user wouldn't know what really caused the failure.

https://github.com/google/guava/blob/v30.1.1/guava/src/com/google/common/io/MoreFiles.java#L775

The FileUtils will be fixed in a future commit.

This also adds support with ""log*Extended()"" functions so that logcat entries longer than LOGGER_ENTRY_MAX_PAYLOAD do not get truncated by android. This is done by splitting the log message into multiple messages if the limit is crossed. This is specially necessary for logging long stacktraces, suppressed throwables and errmsg of ExecutionCommand, etc."
4494bc66e4be7a46c28d331a7177e9f6cc24f721,"Implement Errno system

This commit adds onto 679e0de0

If an exception is thrown, the exception message might not contain the full errors. Individual failures may get added to suppressed throwables. FileUtils functions previously just returned the exception message as errmsg which did not contain full error info.

Now `Error` class has been implemented which will used to return errors, including suppressed throwables. Each `Error` object will have an error type, code, message and a list of throwables in case multiple throwables need to returned, in addition to the suppressed throwables list in each throwable.

A supportive `Errno` base class has been implemented as well which other errno classes can inherit of which some have been added. Each `Errno` object will have an error type, code and message and can be converted to an `Error` object if needed.

Requirement for `Context` object has been removed from FileUtils so that they can be called from anywhere in code instead of having to pass around `Context` objects. Previously, `string.xml` was used to store error messages in case multi language support had to be added in future since error messages are displayed to users and not just for dev usage. However, now this will have to handled in java code if needed, based on locale.

The termux related file utils have also been moved from FileUtils to TermuxFileUtils"
28f81f2cc78df8e5b98e82f54cfc5b06eefaabf3,Fix minor typos and potential errors
52f18a73fbd57385e2b7a292292517654528aa1a,Bump gradle wrapper to v7.1
1c1af3437465cbd4138077900fc3a465b8ee0972,Bump gradle to 4.2.1
2aafcf8435d288ef370ae2963a61caadcfac096a,"Add support to send back or store RUN_COMMAND intent command results in files and provide way to fix argument splitting sent with am command

### `RUN_COMMAND` Results in Files

Previously in `v0.109` with a2209dd support was added in RUN_COMMAND intent to send back foreground and background command results with `PendingIntent` to the intent sender. However, this was only usable with java code by android apps. But if you were sending the intent with the `am` command from inside a shell, like tasker `Run Shell` action, you could not get the result back directly. You could technically manually save the output of your script in files under `/sdcard` with redirection and wait for them to be created in the `Run Shell` so that you could process the result. However, this was only possible for background commands and the caller would hang indefinitely if a termux internal `errmsg` was generated like it does for termux-tasker, likely caused by incorrect intent extra arguments, an exception being raised when executing the executable/script, or termux being closed with the exit button, etc.

Now native support has been added inside termux to store results of both foreground and background commands inside files, that also sends back internal `errmsgs` as long as result files extras are valid. This can be used to run synchronous commands from inside termux, with other apps that have `Run commands in Termux environment` (`com.termux.permission.RUN_COMMAND`) like Tasker, from pc over `adb` or inside `adb shell` if you have a rooted device, or from pc if you have setup termux `sshd`. The `RUN_COMMAND` intent can only be sent by the `termux` user itself, by an app that has the permission or by the `root` user. The `shell` user of `adb` cannot send it. A script will be provided at a later time that will automatically detect these cases to easily run `RUN_COMMAND` intent commands which will also automatically create temp directories and do cleanup. This can also be useful inside termux itself, like if you want to start a new foreground session and to automatically store its output to a log file when you exit. Support can also be added for this to be done for termux-boot and termux-widget as well but will require updates for them.

There is obviously a security and privacy concern for this if you use shared storage `/sdcard` to store the result files since malicious apps could read them and optionally modify them for MITM attacks if you are reading the result and processing it unsafely. But users access other files from shared storage anyways for other scripts. Saving the result files on shared storage would only be necessary if you want to read the result back, like in Tasker or over adb since non-termux and non-root users can't access termux private app data directory `/data/data/com.termux`. For internal termux usage, this shouldn't be a concern if files are saved inside termux private app data directory.

The extra constant values are defined by [`TermuxConstants`](https://github.com/termux/termux-app/tree/master/termux-shared/src/main/java/com/termux/shared/termux/TermuxConstants.java) class of the [`termux-shared`](https://github.com/termux/termux-app/tree/master/termux-shared) library. The [`ResultSender`](https://github.com/termux/termux-app/tree/master/termux-shared/src/main/java/com/termux/shared/shell/ResultSender.java) class actually sends back the results.

The following extras have been added:

- The `String` `RUN_COMMAND_SERVICE.EXTRA_RESULT_DIRECTORY` extra for the directory path in which to write the result of the execution command for the execute command caller.

- The `boolean` `RUN_COMMAND_SERVICE.EXTRA_RESULT_SINGLE_FILE` extra for whether the result should be written to a single file or multiple files (`err`, `errmsg`, `stdout`, `stderr`, `exit_code`) in `EXTRA_RESULT_DIRECTORY`.

- The `String` `RUN_COMMAND_SERVICE.EXTRA_RESULT_FILE_BASENAME` extra for the basename of the result file that should be created in `EXTRA_RESULT_DIRECTORY` if `EXTRA_RESULT_SINGLE_FILE` is `true`.

- The `String` `RUN_COMMAND_SERVICE.EXTRA_RESULT_FILE_OUTPUT_FORMAT` extra for the output [`Formatter`](https://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html) format of the `EXTRA_RESULT_FILE_BASENAME` result file.

- The `String` `RUN_COMMAND_SERVICE.EXTRA_RESULT_FILE_ERROR_FORMAT` extra for the error [`Formatter`](https://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html) format of the `EXTRA_RESULT_FILE_BASENAME` result file.

- The `String` `RUN_COMMAND_SERVICE.EXTRA_RESULT_FILES_SUFFIX` extra for the optional suffix of the result files that should be created in `EXTRA_RESULT_DIRECTORY` if `EXTRA_RESULT_SINGLE_FILE` is `false`.

The `err` and `errmsg` are for internal termux errors like invalid intent extras, etc and not related to the shell commands itself. This is the same way Tasker actions and plugins system work with [`%err` and `%errmsg`](https://tasker.joaoapps.com/userguide/en/variables.html#localbuiltin). The `err` will be equal to `Errno.ERRNO_SUCCESS` (`-1`) if no internal errors are set. The `stdout`, `stderr` and `exit_code` are for the shell commands. The `exit_code` is normally `0` for success.

There are two modes for getting back the result in results files.

##### `EXTRA_RESULT_SINGLE_FILE` extra is `true`

Only a single file will be created under `EXTRA_RESULT_DIRECTORY` that will contain the `err`, `errmsg`, `stdout`, `stderr` and `exit_code` in a specific format defined by `RESULT_SENDER.FORMAT_*` constants in `TermuxConstants` class depending on the exit status of the command. By default if the `EXTRA_RESULT_FILE_BASENAME` extra is not passed, the basename of the result file will be set to `<command_path_basename>-<timestamp>.log` where `<timestamp>` will be in the `yyyy-MM-dd_HH.mm.ss.SSS` format. The `EXTRA_RESULT_FILE_OUTPUT_FORMAT` extra can be passed with a custom format that should be used when `err` equals `-1` and `EXTRA_RESULT_FILE_ERROR_FORMAT` extra for when its greater than `-1`. The value `0` is for `Errno.ERRNO_CANCELLED` and should also be considered a failure unlike `exit_code`.

```
am startservice --user 0 -n 'com.termux/com.termux.app.RunCommandService' -a 'com.termux.RUN_COMMAND' --es 'com.termux.RUN_COMMAND_PATH' '$PREFIX/bin/top' --esa 'com.termux.RUN_COMMAND_ARGUMENTS' '-n,5' --ez 'com.termux.RUN_COMMAND_BACKGROUND' '0' --es 'com.termux.RUN_COMMAND_RESULT_DIRECTORY' '/sdcard/.termux-app' --ez 'com.termux.RUN_COMMAND_RESULT_SINGLE_FILE' 'true' --es 'com.termux.RUN_COMMAND_RESULT_FILE_BASENAME' 'top.log'
```

##### `EXTRA_RESULT_SINGLE_FILE` extra is `false`

Separate files will be created under `EXTRA_RESULT_DIRECTORY` for each of the `err`, `errmsg`, `stdout`, `stderr` and `exit_code`. Their basenames (same as mentioned) are defined by the `RESULT_FILE_*` constants in `TermuxConstants` class. If the `EXTRA_RESULT_FILES_SUFFIX` extra is passed, then that will be suffixed to the basename of each file like `err<suffix>`, `stdout<suffix>`, etc.

The `err` file will be created after writing to other result files has already finished and this is the file the caller should optionally wait for  to be created to be notified that the command has finished, like with `test -f ""$result_directory/err""` command in an infinite loop (with sleep+timeout) or with `inotify`. After it has been read, caller can start reading from the rest of the result files if they exist. The `errmsg`, `stdout`, `stderr` and `exit_code` files will not be created if nothing is to be written to them, so no do wait for these files.

If you are not passing a unique suffix for each intent, then result files of multiple simultaneous intent commands will conflict with each other. So ideally a temp directory should be created for each intent command and that should be passed as `EXTRA_RESULT_DIRECTORY`. You can use `mktemp` command to create a unique name and create the directory for you.

```
temp_directory=""$(/system/bin/mktemp -d --tmpdir=""/sdcard/.termux-app"" ""top.XXXXXX"")"" || return $?

am startservice --user 0 -n 'com.termux/com.termux.app.RunCommandService' -a 'com.termux.RUN_COMMAND' --es 'com.termux.RUN_COMMAND_PATH' '$PREFIX/bin/top' --esa 'com.termux.RUN_COMMAND_ARGUMENTS' '-n,5' --ez 'com.termux.RUN_COMMAND_BACKGROUND' '1' --es 'com.termux.RUN_COMMAND_RESULT_DIRECTORY' ""$temp_directory"" --ez 'com.termux.RUN_COMMAND_RESULT_SINGLE_FILE' 'false'
```

Use following if in termux and not in tasker/rooted shell.

```
temp_directory=""$(PATH=/system/bin; LD_LIBRARY_PATH=/system/lib64:/system/lib; unset LD_PRELOAD; mktemp -d --tmpdir=""/sdcard/.termux-app"" ""top.XXXXXX"")"" || return $?
```

Note that since there may be a delay between creation of `result_file`/`err` file and writing to it or flushing to disk, a temp file is created first suffixed with `-<timestamp>` which is then moved to the final destination, since caller may otherwise read from an empty file in some cases otherwise.

Commands will automatically be killed and result up till that point returned if user exits termux app like with the `Exit` button in the notification. The exit code will be `137` (`SIGKILL`).

--------------------

### `RUN_COMMAND` Arguments Splitting with `am` Command

If `am` command is used to send the `RUN_COMMAND` intent and you want to pass an argument with the `--esa com.termux.RUN_COMMAND_ARGUMENTS` string array extra that itself contains a normal comma `,` (`U+002C`, `&comma;`, `&#44;`, `comma`), it must be escaped with a backslash `\,` so that the  argument isn't split into multiple arguments. The only problem is that, the arguments received by the termux will contain `\,` instead of `,` since the reversal isn't done as described in the [am command source](https://android.googlesource.com/platform/frameworks/base/+/21bdaf1/cmds/am/src/com/android/commands/am/Am.java#572) while converting to a string array. There is also no way for the `am` command or termux to know whether `\,` was done to prevent arguments splitting or `\,` was a literal string naturally part of the argument.

```
// Split on commas unless they are preceeded by an escape.
// The escape character must be escaped for the string and
// again for the regex, thus four escape characters become one.
intent.putExtra(key, strings);
```

To fix this termux now supports an alternative method to handle such conditions. If an argument contains a normal comma `,`, then instead of escaping them with a backslash `\,`, replace all normal commas with the comma alternate character `‚` (`#U+201A`, `&sbquo;`, `&#8218;`, `single low-9 quotation mark`) before sending the intent with the `am` command. This way argument splitting will not be done. You can pass the `com.termux.RUN_COMMAND_REPLACE_COMMA_ALTERNATIVE_CHARS_IN_ARGUMENTS` `boolean` extra in the `RUN_COMMAND` intent so that termux replaces all the comma alternate characters back to normal commas. It would be unlikely for the the arguments to naturally contain the comma alternate characters for this to be a problem. Even if they do, they might not be significant for any logic. If they are, then you can set a different character that should be replaced, by passing it in the `com.termux.RUN_COMMAND_COMMA_ALTERNATIVE_CHARS_IN_ARGUMENTS` `String` extra.

If `tudo` or `sudo` are used, then simply using their `-r` and `--comma-alternative` command options can be used without passing the below extras, but native supports is helpful if they are not being used.

https://github.com/agnostic-apollo/tudo#passing-arguments-using-run_command-intent

The following extras have been added:

- The `boolean` `RUN_COMMAND_SERVICE.EXTRA_REPLACE_COMMA_ALTERNATIVE_CHARS_IN_ARGUMENTS` extra for whether to replace comma alternative characters in arguments with normal comma `,` (`U+002C`, `&comma;`, `&#44;`, `comma`).
- The `String` `RUN_COMMAND_SERVICE.EXTRA_COMMA_ALTERNATIVE_CHARS_IN_ARGUMENTS` extra for the comma alternative characters in arguments that should be replaced instead of the default comma alternate character `‚` (`#U+201A`, `&sbquo;`, `&#8218;`, `single low-9 quotation mark`).

```
am startservice --user 0 -n 'com.termux/com.termux.app.RunCommandService' -a 'com.termux.RUN_COMMAND' --es 'com.termux.RUN_COMMAND_PATH' '$PREFIX/bin/bash' --esa 'com.termux.RUN_COMMAND_ARGUMENTS' '-c,echo ""Argument with commas here _ and here _ that have been converted to an underscore before sending""; sleep 5' --ez 'com.termux.RUN_COMMAND_BACKGROUND' '0' --ez 'com.termux.RUN_COMMAND_REPLACE_COMMA_ALTERNATIVE_CHARS_IN_ARGUMENTS' 'true' --es 'com.termux.RUN_COMMAND_COMMA_ALTERNATIVE_CHARS_IN_ARGUMENTS' '_'
```

Note that since `0.109`, the `RUN_COMMAND` intent supports `RUN_COMMAND_SERVICE.EXTRA_STDIN`, so instead of passing arguments, just pass a script as `stdin` to the `bash` executable so that you don't have to deal with this ""mess"". You will have to surround the script with single quotes and escape any single quotes inside the script itself, like each single quote `'` with `'\''`.

--------------------

### Internal Changes

This commit also adds onto 679e0de0 and 4494bc66

The `ExecutionCommand` has been updated and command result variables have been moved to `ResultData` and result configuration to `ResultConfig` since the later two should be agnostic of what type of command there are for. They don't necessarily have to be for terminal/shell commands and can be used for plugin APIs, etc.

The `ResultData` instead of a `String` `errmsg` now stores a list of `Error` objects. This is necessary since multiple errors may be picked up while a command is run, like say working directory is invalid and an error is returned by FileUtils and while sending the result to the caller, the `ResultSender` returns an additional error because result configuration like result directory or result output format was invalid. In these situations `PluginUtils` will show a notification to the user with info of each error thrown.

In addition to above, in `ResultData`, the `stdout` and `stderr` are converted to `StringBuilder` instead of a `String`. This allows for data to be appended to each from various places in code like log debug or error entries for API commands without having to create a new `String` object each time value needs to updated. This can be useful so that the caller doesn't have to check `logcat` for API commands. This does not apply to `ExecutionCommand` since only `TermuxSession` and `TermuxTask` set the data.

The `ResultSender` class is what handles the result of commands whether they need to be sent via `PendingIntent` or to a result directory based on the `ResultConfig` object passed. Result will be sent through both if both of them are not `null`.

The `TermuxConstants` class has been updated to `v0.24.0`. Check its Changelog section for info on changes."
53c1a49b5baaa57b8777daeb962fdfee841304d8,"Make TermuxTask and TermuxSession agnostic to termux environment

Those classes shouldn't be tied to termux environment like variables, interpreters and working directory since commands may need to be executed with a different environment like android's or with a different logic. Now both classes use the ShellEnvironmentClient interface to dynamically get the environment to be used which currently for Termux's case is implemented by TermuxShellEnvironmentClient which is just a wrapper for TermuxShellUtils since later implements static functions."
e408fdcc084ce38149e1156f828cb2613e55f34a,"Show crash notification when bootstrap installation or setup storage failures

Sometimes users report that bootstrap installation failed on their devices but provide no details. Since they don't check logcat for the exception or exception is one time only, we can't know what happened. Although, reasons are likely root ownership files.

The notification will show the full stacktrace including suppressed ones for why failure occurred and hopefully be easier to find the problems and we can get reports too."
9c92251595615411da38817401d5cbf7b7ea5c0e,"Fixed issue where back button would not exit the activity if bootstrap installation failed and users dismissed the error dialog,"
59877a08d134d7a56119d7c80caedac89850baa7,Add termux settings button to left drawer too since apparently people can't find the one in context menu
d3c34ad1f546d7d410e36dad20565789c420c1bd,"Fix issue where cursor blinker wouldn't automatically start after session change

The reason was that mTerminalCursorBlinkerRunnable inner class mEmulator wouldn't get updated to the new mEmulator on session change and would still be using the old session's."
00f805f7ec0932012bd273ca692001c77cb3a8b1,Fix issue where cursor blinker wouldn't automatically start after terminal reset if it was disabled before reset
e5a9b99afe021270d3e085d030b496111bbc2b33,"Fix issues with TermuxActivityRootView margin adjustment

Margin adjustment was causing screen flickering due to invalid values being calculated in landscape and split screen mode.

Attempts to fix issue #2127"
321350256eae18e5497236522c41940f95933d80,"Allow users to disable terminal margin adjustment

The user can add `disable-terminal-margin-adjustment=true` entry to `termux.properties` file to disable terminal view margin adjustment that is done to prevent soft keyboard from covering bottom part of terminal view on some devices. Margin adjustment may cause screen flickering on some devices and so should be disabled. The default value is `false`. So adding the entry `disable-terminal-margin-adjustment=true` to `termux.properties` file will disable margin adjustment. Exit termux and restart for changes to take affect after updating value.

In case e5a9b99a did not fix screen flickering issues for #2127, then this can be used to disable it. Closes #2127."
69bebb591635a3d1e5de72f9dc4aaed75ab8a1f6,"Add termux.properties property for opening terminal transcript urls on click

The user can add `terminal-onclick-url-open` entry to `termux.properties` file to enable opening url links in terminal transcript on click or on tap. The default value is `false`. So adding the entry `terminal-onclick-url-open=true` to `termux.properties` file will enable url opening. Running `termux-reload-settings` command will also update the behaviour instantaneously if changed.

This commit just adds the property and doesn't implement the functionality. That will later be merged from #2146."
28b9f93d13fd952ec94397b21333c4367a959d08,"Compile Url match regex once and not on every use

Needed for #2146."
94c5f3674a4c158295aa7bde9521b1caa78ef5a1,"Do not start login shell and load ~/.profile if starting a failsafe session

This is done by not starting arg `0` with `-`

Fixes #2150."
12f910c32ddd280109dfa1b33a3cbeacac0d7ac3,Move Termux app specific logic out of PermissionUtils
6bca378cecbbe6658bc09eed4986c88cfc8b5402,Move Android specific utils from TermuxUtils to AndroidUtils
553913cde13062c097043a5f78507bbd642cf3af,Divide dialog utils
1c7f9166f2b0bbb01e9b222dce3399f5f08d4144,Move Termux app specific logic out of NotificationUtils
70e1accafe4a17e52c7c5364c78287b04564f9a9,"Change license for non-termux utils to MIT

Changing the license for non-termux utils from GPLv3 to MIT so that they can be used by other termux plugin apps or apps that may be released under a different license. Termux is already using a lot of libraries that are not GPL and such general utils shouldn't be restrictive any ways.

Moreover, `TermuxConstants` and `TermuxPropertyConstants` should be MIT licensed as well so that other non-FOSS or non-GPLv3 apps can use them, like for `RUN_COMMAND` intent.

Any code not listed in exceptions of `LICENSE.md` files is still under GPLv3, mainly termux specific code and it will and should remain that way.

All code in files whose license is changed was authored by me as far as I can tell, but if any code in them is not that I missed, let me know, so that changes can be made since I can't and won't change the license of code authored by someone else. If some other objection is raised, let me know too.

Future contributors should check the `LICENSE.md` files and see if they are okay with contributing code as MIT and if they are not, then they should create separate file/package in termux-shared."
49265160f8ace7dec58ae9c25154242dd1cb352d,Update LICENSE.md
dfd32435afd45289a80543a91eec97cd21cdd8fc,Bump gradle dependencies versions
5670128236a4af323b62778b65d285c99628abf7,update bootstrap archives
93a7525d9b8fe61c7f7373443e25c063a98d2b25,Add comment about mkshrc validity when loading /system/bin/sh for failsafe session
23a900c433b55d5376dbbe4dd0221140b05947c5,"Move Termux app specific logic out of CrashHandler

Create the TermuxCrashUtils class that provides the default path and app for termux instead of hardcoding it in CrashHandler. TermuxCrashUtils can be used by termux plugins as well for their own usage or they can implement the CrashHandler.CrashHandlerClient if they want to log to different files or want custom logic."
2034121798823c5283277473d595f61368746312,Fx issues where crash throwable message wasn't been added to crash log
dea8c9879eec393f3d78042d7e6dcbbebeeb89f3,Bump to v0.115
5c50964b1fe3f9d41b84e346ac865102c3de7122,"Revert ""Bump to v0.115""

This reverts commit dea8c987"
5a511a2ba394c78c9bcf771ac45a16dc0498efbb,"Revert some unneeded changes to Logger done in 679e0de0

Logger was updated to get suppressed exceptions by calling `Throwable[] getSuppressed()` but `printStackTrace()` would already log them, even though shortened stacktrace with `... n more` notation, but this should be enough for debugging since main throwable stacktrace should have enough class line info. Manually logging full suppressed stacktraces would likely trigger `LOGGER_ENTRY_MAX_PAYLOAD` and split the message into multiple log entries and also duplicate the suppressed stacktraces, so best revert this unless ever necessary."
bde9d01f766d70007f82d34a68122fc34aa1afe5,Bump to v0.115
8e4da6cbcdde46599f449cf3b2b8492fedb06a48,"Revert ""Bump to v0.115""

This reverts commit bde9d01f"
886e52dcff1e156f28ae1a462059758e51ef8fb0,"Export JITPACK_NDK_VERSION for jitpack

Jitpack build is failing with the following error

```
> Configure project :
Gradle version Gradle 7.1

FAILURE: Build failed with an exception.

* What went wrong:
A problem occurred configuring project ':app'.
> com.android.builder.errors.EvalIssueException: NDK from ndk.dir at /opt/android-sdk-linux/ndk-bundle had version [21.1.6352462] which disagrees with android.ndkVersion [22.1.7171670]
```

So attempting to manually export an env variable for jitpack which uses ndk 21.1.6352462 instead of the termux default 22.1.7171670 and which is also used by F-Droid

https://jitpack.io/com/github/termux/termux-app/0.115/build.log

https://github.com/jitpack/jitpack.io/blob/master/BUILDING.md#custom-commands

https://gitlab.com/fdroid/fdroiddata/-/blob/master/metadata/com.termux.yml#L726"
c621c358276a8863690a0cd023b11c528cd9ff1b,Bump to v0.115
e547c154819572c80de0736b00d4fd04b65a2987,Bump to v0.116
78be0e793eba633f5a3278f20681983877341f7a,Update README.md
dccd155ba689e58bfa5e4ba7c89cbe81f629f4bd,"Enable split apks for debug builds

APKs for each architecture and a universal APK that is compatible for all architectures will now be available from Github Actions page from the workflow runs labeled `Build`. The APKs will be available as zips under the Artifact section named `termux-app-*`.

Architecture specific APKs can be used by users with low disk space since F-Droid releases are universal (since it doesn't support split APKs #1904) and their install+bootstrap installation size is ~180MB instead of ~120MB if an architecture specific APK is used.

This should also reduce bandwidth usage and download time for debug builds users if they download an architecture specific zip instead of the universal one.

Related #2153"
b90d59479a036a4b8bd4175b139e590436b9669b,Fix typo in dccd155
eabbda8efd4da210748df2a6c98650cb2c5ba494,"Fixed grammar in the README.md file...

Went through the README.md file and fixed a lot of grammatical mistakes.
I know this is useless but I was bored..."
48161816e081b872e31d0f4378c134e80f155323,"Merge pull request #2163 from arib21/patch-1

Fixed grammar in the README.md file..."
a53cc886883cff93f16e44060f2f810fd210e40c,Bump gradle dependencies versions
4361c5e0c5a385e9070049d08842f6b3180c1f8e,"Fix java.lang.AbstractMethodError: androidx.window.sidecar.SidecarInterface$SidecarCallback.onDeviceStateChanged

The crash was reported for `Microsoft Surface Duo`, which would affect some samsung and other devices as well, mainly dual screens/foldables. It was caused by androidx:window library that has been used by termux-shared since v0.115 having a typo in its proguard rules which didn't stop the removal of the required method for release builds (not debug) by proguard.

The library has been patched and fix should be available on next version but doing an emergency patch now for termux as well.

For people who are getting the crash should set `disable-terminal-margin-adjustment=true` in `termux.properties` created as per instructions in the link below and then start termux again and see if it fixes the issue. If you had termux installed before updating, you should be able to directly access the `~/.termux/termux.properties` file with SAF.

https://github.com/termux/termux-app/issues/1896#issuecomment-766188879

------

**Crash Message**:
```
abstract method ""void androidx.window.sidecar.SidecarInterface$SidecarCallback.onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)""
```

### Stacktrace

```
java.lang.AbstractMethodError: abstract method ""void androidx.window.sidecar.SidecarInterface$SidecarCallback.onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)""
at androidx.window.sidecar.MicrosoftSurfaceSidecar.updateDeviceState(MicrosoftSurfaceSidecar.java:159)
at androidx.window.sidecar.MicrosoftSurfaceSidecar$1.deviceStateChanged(MicrosoftSurfaceSidecar.java:192)
at android.vendor.screenlayout.service.IWindowExtensionCallbackInterface$Stub.onTransact(IWindowExtensionCallbackInterface.java:94)
at android.os.Binder.execTransactInternal(Binder.java:1021)
at android.os.Binder.execTransact(Binder.java:994)

```

https://issuetracker.google.com/issues/189001730
https://android-review.googlesource.com/c/platform/frameworks/support/+/1757630"
2cf21c8409bebf4944c63d7e5e1ba5c47686e7c2,Update .gitignore
56c382668011e95e09522b740bce93fe5dc10c6f,Add app and device info too for crash notification shown when bootstrap installation or setup storage fails
cce6dfed22801cf063213ed3090bc76394c08618,Fix issue where RUN_COMMAND intent was failing for coreutils/busybox applets
c6b4114f8632e1f74048c946e3156e77cd9a9f0a,"Fix issue where a colour tint/highlight would be added to the terminal

This would happen when soft keyboard was to be disabled or hidden at startup and a hardware keyboard was attached and user started typing on hardware keyboard without tapping on the terminal first."
dc8bdfe675befe048df482663fa3a1b25ee5929b,Attempt to fix bootstrap installation failure that may be caused by invalid mkdirs return value
7aefd9436900806ce3c64f67afd5907aa81f4ffc,"Revert ""Allow users to disable terminal margin adjustment""

This reverts commit 32135025"
e0ad9ff57391963c28f702e45cc156d243a43acb,"Allow users to disable terminal margin adjustment from termux settings

Previously in (32135025) support was added with `disable-terminal-margin-adjustment` `termux.properties` property to disable terminal margin adjustment in case in causes screen flickering or other issues on some devices. It has now been removed in (7aefd943) and moved to Termux Settings since if it causes issues at startup and users can't access `termux.properties` file from the terminal, they will have to use SAF or root to access it, which will require an external app.

Users can set the value from the `Termux Settings` -> `Termux` -> `Terminal View` -> `Terminal Margin Adjustment` toggle. The `Termux Settings` can be accessed from left drawer in termux and from the android launcher shortcut for Termux Settings, usually accessible by long holding on Termux icon."
d49fd6b00c93be57d058c896255cf3bac13c8066,Trigger termux library builds on jitpack on releases
9272a757affc0dae4aa044248800f3987e06c52b,Bump to v0.117
b2a071aad967485b201d162f6f0b488d31801f13,Update trigger_library_builds_on_jitpack.yml
6fa4b9b7cd256a7dec78fcb8ec274bca727e4c1b,"Ensure termux files directory is accessible before bootstrap installation and provide better info when running as secondary user/profile

Termux will check if termux files directory `/data/data/com.termux/files` has rwx permission access before installing bootstrap or starting terminal. Missing permission will automatically be set if possible. The `/data/data/com.termux` directory will also be created if it did not already exist, like if android did not already create it.

Users will now also be shown a crash notification if they attempt to start termux as a secondary user or in a work profile with info of the ""alternate"" termux files directory `/data/user/<id>/com.termux` set by android and the profile owner app if running under work profile (not secondary user). A notification will also be shown if the termux files directory (not ""alternate"") is not accessible.

Related #2168"
1b62f7c9a9831a7e6d96dac9565c9d0c4767a5b6,"installer: fix permissions for lib/apt/apt-helper

It should have executable bit set, otherwise it won't be possible to use tools such as 'apt-file' without reinstalling 'apt'."
0308d6a6ca747c5f87ca700982b1faa215234619,"extra keys: avoid scheduled executor leak

Under certain cases scheduled executor may leak causing repeatable input to
stuck.

Issue: https://github.com/termux/termux-app/issues/2156"
a189f63604f922c25711dbf2a9dbef26069ba774,"Ensure failsafe session can still be opened if files directory is not accessible and fix comment

The `/data/data/com.termux` directory will not be created if it did not already exist and android did not already create it instead of as mentioned in 6fa4b9b7. Check https://github.com/termux/termux-app/issues/2168#issuecomment-879705552"
f4e70678b1835a4c183a88569146ae76ee8af318,Ensure that markdown code formatting is not broken for ResultSender if data itself contains any backticks
f837ddef23e4f8ecb802586165566ced977b4339,Bump gradle to 4.2.2
f10de462d288a52c93a4938e5eaf0cf70ed3922d,"Fix app packaging warning

PackagingOptions.jniLibs.useLegacyPackaging should be set to true because android:extractNativeLibs is set to ""true"" in AndroidManifest.xml.

https://monitor.f-droid.org/builds/log/com.termux/117"
00d80b9e026fab217b602b0d9a79a306f4a752d4,Automatically attach debug APKs when a release is created
7d76e8b18565c124cab7dffb8d01be2329e99d89,Add `PASTE` extra key for pasting text from clipboard
9febca95679c57f4bba62aa7c20551ca2a7b035c,Fix comment
9a306ca1c5341c3c388996bf0924d3e1c452e4d8,readme: update urls to https (#2190)
2b386efc3cbc30a4bc987165924c791bdeb52477,Update strings.xml
2b7aa5e8030d731c9237a5168965f405ba239023,Fix issue where wrong IME inputType would be set if termux was returned to from another app with text input view mode selected
a7596e7d0399e0651b74e30c47c7de61552d28af,"add ""join the discord"" badge

discord may be the popular platform and bridged through gitter/irc. so i guess why not"
8ba54582211662bdb91ca7b1f1e0a5ee0a4bed84,"Merge pull request #2198 from WMCB-Tech/master

Add Discord badge link"
d5d87639ce8adba8aa2f25f2a7ce2f4df067e9bf,update the discord badge link to updated one
1578ab5547361c42f8677a1df9cd4a0de2c990b6,"Merge pull request #2199 from WMCB-Tech/master

README: use the latest discord invite badge"
e30812af226a7da224dcf266a87fc474f621657f,Add Gemini to the list of protocols
cac9a769c0e1630e725984a096493e9f1311d70e,"Merge pull request #2217 from the-blank-x/supportgemini

Add gemini to the list of url regex protocols"
23d2c1f0e9c7898dcbfd6e63298876f5437ba297,github: convert issue templates to forms
e13773fd83ffab46d54eaf3464aa17ee402a69d8,bug-report template: format text a bit
501d13a0cb397f8e0ff9f18d0884d68e25b41b90,update bootstrap archives
19c6134c712e3bd3c7b9cce67e29dad902d14d2d,"terminal: invert text color under block cursor

Issue: https://github.com/termux/termux-app/issues/219"
4a74618f17a65bcafba67b7bf85273390dfa64cb,terminal: set default cursor color to white
8ee0c5a6ec67f10365d3f0c8a8ca677320c6c8aa,"Fixed: Fix markdown link generation

The `]` characters in label and `)` characters in url must be escaped."
98edf1fbc777ef7d41a70cf5655feb64c4fa2378,Changed: Use millisecond timestamps for reports
fabcc4fa35e635d8b339170b16e55449fe56238e,Fixed: RunCommandService notification was not being cleared if an error was raised
60f37bde8dd415f71acc8d4e6feb08dff78e2fb3,"Changed!: StreamGobbler needs to be passed log level parameter

When `Logger.CURRENT_LOG_LEVEL` set by user is `Logger.LOG_VERBOSE`, then background (not foreground sessions) command output was being logged to logcat, however, if command outputted too much data to logcat, then logcat clients like in Android Studio would crash. Also if a logcat dump is being taken inside termux, then duplicate lines would occur, first one due to of original entry, and second one due to StreamGobbler logging output at verbose level for logcat command.

This would be a concern for plugins as well like `RUN_COMMAND` intent or Termux:Tasker, etc if they ran commands with lot of data and user had set log level to verbose.

For plugins, TermuxService now supports `com.termux.execute.background_custom_log_level` `String` extra for custom log level. Termux:Tasker, etc will have to be updated with support. For `RUN_COMMAND` intent, the `com.termux.RUN_COMMAND_BACKGROUND_CUSTOM_LOG_LEVEL` `String` extra is now provided to set custom log level for only the command output. Check `TermuxConstants`.

So one can pass a custom log level that is `>=` to the log level set it termux settings where (OFF=0, NORMAL=1, DEBUG=2, VERBOSE=3). If you pass `0`, it will completely disable logging. If you pass `1`, logging will only be enabled if log level in termux settings is `NORMAL` or higher. If custom log level is not passed, then old behaviour will remain and log level in termux settings must be `VERBOSE` or higher for logging to be enabled. Note that the log entries will still be logged with priority `Log.VERBOSE` regardless of log level, i.e `logcat` will have `V/`.

The entries logcat component has now changed from `StreamGobbler` to `TermuxCommand`. For output at `stdout`, the entry format is `[<pid>-stdout] ...` and for the output at `stderr`, the entry format is `[<pid>-stderr] ...`. The `<pid>` will be process id as an integer that was started by termux. For example: `V/TermuxCommand: [66666-stdout] ...`.

While doing this I realize that instead of using `am` command to send messages back to tasker, you can use tasker `Logcat Entry` profile event to listen to messages from termux at both `stdout` and `stderr`. This might be faster than `am` command intent systems or at least possibly more convenient in some use cases.

So setup a profile with the `Component` value set to `TermuxCommand` and `Filter` value set to `-E 'TermuxCommand: \[[0-9]+-((stdout)|(stderr))\] message_tag: .*'` and enable the `Grep Filter` toggle so that entry matching is done in native code. Check https://github.com/joaomgcd/TaskerDocumentation/blob/master/en/help/logcat%20info.md for details. Also enable `Enforce Task Order` in profile settings and set collision handling to `Run Both Together` so that if two or more entries are sent quickly, entry task is run for all. Tasker currently (v5.13.16) is not maintaining order of entry tasks despite the setting.

Then you can send an intent from tasker via `Run Shell` action with `root` (since `am` command won't work without it on android >=8) or normally in termux from a script, you should be able to receive the entries as `@lc_text` in entry task of tasker `Logcat Entry` profile. The following just passes two `echo` commands to `bash` as a script via `stdin`. If you don't have root, then you can call a wrapper script with `TermuxCommand` function in `Tasker Function` action that sends another `RUN_COMMAND` intent with termux provide `am` command which will work without root.

```
am startservice --user 0 -n com.termux/com.termux.app.RunCommandService -a com.termux.RUN_COMMAND --es com.termux.RUN_COMMAND_PATH '/data/data/com.termux/files/usr/bin/bash' --es com.termux.RUN_COMMAND_STDIN 'echo ""message_tag: Sending message from tasker to termux""' --ez com.termux.RUN_COMMAND_BACKGROUND true --es com.termux.RUN_COMMAND_BACKGROUND_CUSTOM_LOG_LEVEL '1'
```"
5e09a501c96f2a297d53e5c82b9d9c8e443c48ea,Added: Support for MessageDialogUtils.showMessage() to receive positive and negative button OnClickListeners
7de061361774a2a42fe48f15a29730d541c249c1,"Fixed: Catch exception when requesting permissions, like if request code is negative"
35ea19dd75a326691e57b69bde4f0dfbeb3354f4,Added: Support for reading and writing serialized objects to files and deleting files older than x days in FileUtils
baacabdfbf89be1275acf9a090bf75f841550cf9,Added!: Support for delete intent for Notification.Builder in NotificationUtils
e7fc60af728b6b932bceb621ca6664ed90415720,Fixed: New plugin error or crash notifications overriding content of old ones
351934a6198ce198d9b9337261f1825fe8b71034,"Added|Fixed!: Added support to save reports to files and fixed large reports generating TransactionTooLargeException

If `ReportActivity` was started with a large report, i.e a few hundred `KB`, like for terminal transcript or other command output, the activity start would fail. To solve the issue, if the serialized size of the ReportInfo info object is above `DataUtils.TRANSACTION_SIZE_LIMIT_IN_BYTES` (`100KB`), it will be saved to a file in a cache directory `/data/data/com.termux/cache/report_activity` as a serialized object and loaded when activity is started. The file will be automatically deleted when activity is destroyed (`Activity.onDetroy()`) or when notification that would have started the activity is deleted (`Notification.deleteIntent`). In case, these two didn't happen, then on `TermuxActivity` startup, a thread will be started to delete files older than `14` days so that unneeded left over files are deleted. If user tries to open plugin error or crash report notifications after 14 days, they will get `ReportInfo` file not found errors, assuming `TermuxActivity` was started to run the cleanup routine.

Now these large reports can't be copied or shared with other apps since that would again result in `TransactionTooLargeException` exceptions and `ShareUtils` automatically truncates the data (now from end) to `100KB` length so that the exception doesn't occur. So now a `Save To File` option has been added in context menu (3 dots on top right) of `ReportActivity` so that large or small reports can be saved to a file if needed. They will be save in root of `/storage/emulated/0` or whatever is the default public external storage directory. The filename would depend on type of report. The storage permissions will be asked if missing. On android `11`, if you get permission denied errors even after granting permission, disable permission and grant it again. To solve privacy issues of report being saved to public storage since it may contain private info, an option for custom path will be added in future. The default directory is public storage instead of termux home since its easily accessible via all file managers or from pc. Instructing amateur users to get files via `SAF` from termux home is not something I wanna take on.

Another issue is that `ReportActivity` itself may not be able to show the entire report since Android may throw `OutOfMemoryError` exceptions if device memory is low. To solve this issue, `ReportActivity` will truncate the report to `1MB` from end that's shown to the user. It will add a header showing that report was truncated. To view the full report, the user will have to use the `Save To File` option and view the file in an external app or on pc that supports opening large files. The `QuickEdit` app on Android has been a reliable one in my experience that supports large files, although it has max row/column limits too at a few hundred thousand, depending on android version.

Despite all this, `OutOfMemoryError` exceptions could still be thrown if you try to view too large a report, like a few MB, since original report + the truncated report is still held in memory by the app and will consume `2-3` times memory when saving. It's fun coding for android, right?

The terminal transcript will not be truncated anymore that's generated via `Report Issue` option in terminal.

The `ShareUtils.copyTextToClipboard()` will truncate data now automatically, apparently all phones don't do it automatically and exception is raised.

The `ShareUtils.saveTextToFile()` has been added that will automatically ask for storage permissions if missing.

The `ReportInfo` now expects a `reportSaveFileLabel` and `reportSaveFilePath` arguments so that `ReportActivity` can use them to know where to save the file if users selects `Save To File` option.

The `ReportActivityBroadcastReceiver` must now be registered in `AndroidManifest.xml` if you are using `ReportActivity` in your app. Check `ReportActivity` javadoc for details. Moreover, an incremental call to `ReportActivity.deleteReportInfoFilesOlderThanXDays()` must also be made."
24ea83d6c093c1816757f43aedf4ced61b801472,"Added: Bootstrap error and report issue (optionally) will contain primary termux files stat info and logcat dump

Users have been reporting issues with bootstrap installation (and `login` file access) failure on email and github but ""most"" have been useless since they don't follow instructions to debug the issue and report back. The real reason may depend on device. One could be that `/data/data/com.termux` does not exist on the device in which case termux won't work on the device, at least without root. Other reasons could be wrong ownership or selinux context, selinux denials or attempting to install on external sd card (as reported by a user) where likely files dir was different from `/data/data/com.termux/files`.

This commit will save dev and possibly user time and automatically generate the required info to debug such issues. The `ls` command will generate `stat` info for all the major termux directories and files so that existence or ownership issues can be shown. It will also run `logcat` command to take a dump (last `3000` lines) in case other failures are being logged, like selinux denials as per `avc` entries. It will also show if app is installed on external sd card. This info will automatically be shown on bootstrap install failure report.

Moreover, users can generate termux files `stat` info and `logcat` dump manually too with terminal's long hold options menu `More` -> `Report Issue` option and selecting `YES` in the prompt shown to add debug info. This can be helpful for reporting and debugging other issues. If the report generated is too large, then `Save To File` option in context menu (3 dots on top right) of `ReportActivity` can be used and the file viewed/shared instead.

Users must post complete report (optionally without sensitive info) when reporting issues, instead of (partial) screenshots which won't be accepted anymore.

There has been some design changes in android 11 for `/data/data` and `/data/user/0` directory. You can check javadoc for `isTermuxFilesDirectoryAccessible()` function in [`TermuxFileUtils`](termux-shared/src/main/java/com/termux/shared/file/TermuxFileUtils.java) for details."
7047bbefbb67ec5a236fb33c3322905b5f09cd39,Added: Add warning reports with (partial) screenshots of error reports instead of text will likely be automatically closed/deleted
6409019a400f28502a27280e1da6bc02f5bba8cf,Added: Add warning that hax support is not provided and asking questions will likely result in issue automatically closed or even ban
486faf7fad4d1053189ef1d3a8d904d01dea86f3,Fixed: Stdin not being logged for background execution commands
19f40840990863fd1f071399704c5a28672c3c72,Added: Add labels for ExecutionCommand for termux internal commands
10704b1dad42a3d2f06bc6244db89a12a7058d51,Changed: Use extended version of Logger functions for logging execution commands
956e20e53dfead797f8e279f300579484dbf985a,"Fixed: Fix NullPointerException when running bell/vibrate on Samsung devices on android 8 and handled deprecated code

Apparently occurs on only Samsung android 8 devices and there is no fix for vibrator except catching the exception so that app doesn't crash.

https://gitlab.com/juanitobananas/wave-up/-/issues/131
https://github.com/overbound/SonicTimeTwisted/issues/131
https://web.archive.org/web/20201114040257/https://www.badlogicgames.com/forum/viewtopic.php?t=28507

```
java.lang.NullPointerException: Attempt to read from field 'android.os.VibrationEffect com.android.server.VibratorService$Vibration.mEffect' on a null object reference
at android.os.Parcel.readException(Parcel.java:2035)
at android.os.Parcel.readException(Parcel.java:1975)
at android.os.IVibratorService$Stub$Proxy.vibrate(IVibratorService.java:292)
at android.os.SystemVibrator.vibrate(SystemVibrator.java:81)
at android.os.Vibrator.vibrate(Vibrator.java:191)
at android.os.Vibrator.vibrate(Vibrator.java:110)
at android.os.Vibrator.vibrate(Vibrator.java:89)
at com.termux.app.terminal.io.BellHandler$1.run(BellHandler.java:37)
at com.termux.app.terminal.io.BellHandler.doBell(BellHandler.java:55)
at com.termux.app.terminal.TermuxTerminalSessionClient.onBell(TermuxTerminalSessionClient.java:178)
at com.termux.terminal.TerminalSession.onBell(TerminalSession.java:278)
```"
e889d84dc44d08e324cf89cb3186be81ccfcf478,Changed!: Changes introduced to disable/change logging in 60f37bde now also apply to stdin and plugin command results
1c01f4df081d594df96107316bb308392f4154e0,Changed: Bump gradle library dependency versions
296ee60dc8e7e7db788974e931a402c2faa4fa36,"Changed: Bump compileSdkVersion to 31

Needed since gradle library dependencies have minCompileSdk set to 31"
f0553057904fd6868392eeefcb63317347444ae8,Changed: Bump gradle to 7.2
f65f384acf43364dd5a58ebb1e4ac06639682971,"Merge pull request #2228 from termux/cursor-colors

terminal: invert text color under block cursor"
2a74d43ca55932045d7f481c35fdffbf4bcc4b69,"Added!: Convert extra-keys to agnosticism

The termux `extra-keys` have been moved to `termux-shared` library so that they can be imported and used by other apps for their own needs as long as they comply with GPLv3 license.

Almost everything is customizable and has no dependency on termux specific logic. Check the javadocs of files of `com.termux.shared.terminal.io.extrakeys` package for more info, specially, `ExtraKeysView`, `ExtraKeysInfo`, `ExtraKeyButton`, `TerminalExtraKeys` and  `TermuxTerminalExtraKeys`.

Moreover, you can now long hold on `CTRL`, `ALT`, `SHIFT` and `FN` to lock those control keys. They will not be released when you press another key and will only be released by pressing the respective control key again.

Closes #2049, Closes #1861"
fbb91149b5897e1807171eac0c5ce09eeb339f79,Fixed: Use default values if extra-keys or extra-keys-style termux.properties values are empty
91172409610863ec1fb9fd28e4456c3ae42921ee,"Added: Add shift key support in extra keys and terminal with `SHIFT` or `SHFT`

Closes #1038"
d1478fb6c3e112cb08c319254da5c898646481c6,"Fixed: Ensure `FN` extra key is read by the terminal

Can't find info on why it wasn't being read before"
c59835ed930b027f21ea4b600281ad14d98e1db2,"Revert ""Changed: Bump compileSdkVersion to 31""

This reverts commit 296ee60d

We do not need to bump to compileSdkVersion 31 currently, since I have decided not to bump `androidx.window` to `1.0.0-alpha10` or higher currently, since it has changed APIs and ViewUtils will break.

https://developer.android.com/jetpack/androidx/releases/window

Moreover, bumping compileSdkVersion to 31 requires openjdk 11 in build environment, which will break Jitpack library build and possibly still F-Droid as well, unless changes are made.

https://gitlab.com/fdroid/fdroiddata/-/issues/2441

https://github.com/jitpack/jitpack.io/issues/4474

https://jitpack.io/docs/BUILDING/#java-version

Also in android studio stub files are loaded when opening class sources since android 12 sources aren't available."
f97f07df3f89aeb3c0d05a0141416d1c2ca835d7,Changed: Add selinux context info to termux files info of debug output
b68a398fa81030a7f95394dcd9295c227d7966e8,Changed: Renamed typo `TERMUX_ACTIVITY.ACTION_FAILSAFE_SESSION` to `TERMUX_ACTIVITY.EXTRA_FAILSAFE_SESSION`
16c56a968e88372e990ee5d78c50a26e64045542,"Changed|Fixed: Drawer extra-keys button will toggle instead of just opening

Also fixed NullPointerException due to changes in 2a74d43c"
829cc398683104ed8401a013e4d99c291f569222,"Added: Allow users to disable hardware keyboard shortcuts

The user can add `disable-hardware-keyboard-shortcuts=true` entry to `termux.properties` file to disable hardware keyboard shortcuts. The default value is `false`. Running `termux-reload-settings` command will also update the behaviour instantaneously if changed. Note that for `ctrl+alt+p` to work, you need to unset `shortcut.rename-session = ctrl + n`. https://wiki.termux.com/wiki/Terminal_Settings

Closes #1825"
63504f0adc935977b662c7257464d1fc492b6374,"Added: Allow users to adjust terminal horizontal and vertical margin

The `terminal-margin-horizontal` key can be used to adjust the terminal left/right margin and the `terminal-margin-vertical` can be used to adjust the terminal top/bottom margin. This will also affect drawer. The user can set an integer value between `0` and `100` as `dp` units. The default value is still `3` for horizontal and `0` for vertical margin. So adding an entry like `terminal-margin-horizontal=10` to `termux.properties` file will allow users to set a horizontal margin of `10dp`. After updating the value, either restart termux or run `termux-reload-settings` for changes to take effect.

This was added since for some users text on edges would not be shown on the screen or they had screen protectors/cases that covered screen edges (Of course, that would require fixing every single app and android system UI itself, so kinda stupid to use). Moreover, horizontal margin of like `10dp` may be helpful with peek-and-slide for people having gesture navigation enabled on android `10+` since they won't be to touch at exactly the edge of the screen to trigger peek (#1325).

Closes #2210"
994df1c4af59f6e9823ec93a09d4a14700cbc0c6,Fixed|Added: Fix extra-keys shift key not uppercasing for all soft keyboards and added docs for keyboard key characters mapping
8387b70f64e1a5505cdfa025d328a2568f7f3f54,Fixed: Fix terminal cursor blinker not stopping when typing a character in non-gboard keyboards
5a8c4f10eef273e93c5059bff8d97c9eb5d6befb,"Fixed|Changed: Fix TermuxFileReceiverActivity incorrect handling of intent extras

- If the `EXTRA_TEXT` value of the intent passed was empty instead of `null`, it was incorrectly assumed that text was passed, even though a valid `EXTRA_STREAM` may have been passed. Now `EXTRA_STREAM` will be checked first.
- Added empty extra and empty/`null` filename checks before trying to create a file with an empty filename and failing.
- Enable logging of intent passed at verbose log level.
- Changed to a better error dialog.

Closes #2247"
582e56938a2cb8f1231031c4bbe735c219844909,"Added: Add SharedPrefernces controllers for all current published termux plugin app

Also added log level setting in Termux Settings for Termux:API. Others can be added when logging is implemented in the plugin apps via `Logger` class provided by `termux-shared`."
e7d06aebb59948730f32a2a251eb61f6a36281ad,"Merge pull request #2237 from agnostic-apollo/extra-keys-conversion-to-agnosticism

Extra keys conversion to agnosticism and disabling hardware keyboard shortcuts and terminal margin customization support"
1cf1e612e50efa7027b50fb207cf15ce7e3c68ca,Added: Add constants for termux-float in TermuxConstants
36557b2166ff502d375b13d7e1ed9f73819c7d3f,Added: Add more SharedPrefernces for termux-float and use multi-process for log level
d55c1001c890c5e480a655f5856c370db7efee61,Added: Add termux-float log level settings in termux app settings
9f1203f049c7ad7283a73b57a70e468e9699aeef,"Changed: Use multi-process SharedPrefernces for log level of plugin apps

Since termux-app runs in a separate process from other apps, if a user sets log level in termux settings, then it would require exiting the `termux-app` completely since android caches `SharedPrefernces` in memory and only writes to the file on app exit. Now updated value will be instantly written to the file so that plugins can directly read at startup. If plugins are already running, they would need to be restarted since usually log levels are loaded at startup."
bc779d2ffbd4bf162f397daa0cf3c94a6e177ded,Added: Add support for ~/.termux/termux.float.properties
197979fdcc695fa06f497baf648cd8e366357a32,Fixed: Ensure custom log level doesn't log if its off or null
52c1ee520f1f43bb9e7c7213a5f1894419022ce7,Added/Fixed: Add support to consider empty String values as null for SharedPreferences
3373a1f41c941c4328220cb4c704a9d2a8852401,Changed: Split long resource string on multiple lines
4e5f2c7e014d785c877d7876e160426f0d336a39,"Changed/Fixed: Ensure bootstrap installation creates prefix and prefix staging directory before extraction

We manually create the parent directories first so that bootstrap failures are detected early on instead of some sub directory during extraction.

Also fixed issue where `TermuxFileUtils.isTermuxFilesDirectoryAccessible()` would not check if a directory file actually existed at TERMUX_FILES_DIR_PATH and may set permissions for a non-directory file at the path. The `TermuxInstaller` was testing if `TERMUX_PREFIX_DIR_PATH` existed later on so check wasn't necessary but function may be called from elsewhere too.

Also removed legacy `PREFIX_FILE*` and `STAGING_PREFIX_FILE*` local constants and use the ones provided by `TermuxConstants` directly."
e5c05489429849d67f3fe6e4a37ef3d09eeb4e49,"Added: Add isTermuxAppInstalled() and isTermuxAppAccessible() functions to TermuxUtils

The `TermuxUtils.isTermuxAppInstalled()` function can be used by external apps to check if termux app is installed and enabled.

The `TermuxUtils.isTermuxAppAccessible()` function can be used by termux plugin apps to check if termux app is installed, enabled, accessible as per `sharedUserId` and `TERMUX_PREFIX_DIR_PATH` is accessible and has read, write and execute permission."
d5ffb116b83d625cad9047397117a642554c74b2,Added: Add constants and functions for termux-widget in TermuxConstants and TermuxPreferenceConstants
4953b1269c7e1f11d433f4bb15128474f05a7b20,Added: Add log level setting in Termux Settings for termux-widget
23b707a81995ae8a47c8e0f35066130577bb9403,Changed: Disable shrinkResources for testing reproducible builds
b62645cd03acbd9eaff1874b7c1b021a5bc061c7,Fixed: Fix typos and refactor
5c72c3ca1bd19efb1ecfcfaede0d507277af8580,"Added: Allow users to disable auto capitalization of extra keys text

The user can add `extra-keys-text-all-cap=false` entry to `termux.properties` file to disable auto capitalization of extra keys text for both normal and popup buttons. The default value is `true`. Running `termux-reload-settings` command will also update the behaviour instantaneously if changed."
f00738fe3a38e2d49be34fb9b7913d029e681ef0,"Changed: Make sure full path is included in FileUtilsErrnos

Previously, `FileUtilsErrno` had some errors that didn't include the full path passed to the `FileUtils` functions and caller had to manually append the path to the error. This was done due to `termux-tasker` plugin config activity was using these errors in the executable and working directory text fields and we had to keep the error short as possible to reduce clutter. Now by default, the path will be included so that its not missing for other cases and the `FileUtils.getShortFileUtilsError()` function is provided to get a shorter version from the original error if its possible to do so if caller like `termux-tasker` requires it."
ac32fbc53d8e91a5b7e53d08c06b936699d53ca2,Added: Add SharedPreferences KEY_LAST_PENDING_INTENT_REQUEST_CODE for termux-tasker
1259a212aa15c753fb229c83360121ed375f8eef,Changed: Make allowed custom log level added in 60f37bde to be more restrictive
da07826a0c7bd5e9a41537dc181a0fb892607e16,"Added: Add TERMUX_IS_DEBUG_BUILD, TERMUX_APK_RELEASE and TERMUX_APP_PID to termux shell environment

The `TERMUX_IS_DEBUG_BUILD` env variable will be set to `1` if termux APK is a debuggable APK and `0` otherwise. Note that the `dev_keystore.jks` shipped with termux app and plugin source code can also be used to create a release APK even though its mainly used for Github Debug Builds, in which case value will be `0`.

The `TERMUX_APK_RELEASE` will be set to `GITHUB_DEBUG_BUILD`, `F_DROID` or `GOOGLE_PLAY_STORE` depending on release type. It will be set to `UNKNOWN` if signed with a custom key.

The `TERMUX_APP_PID` will be set to the process of the main app process of the termux app package (`com.termux`), assuming its running when shell is started, like for `termux-float`. This variable is included since `pidof com.termux` does not return anything for release builds. It does work for debug builds and over adb/root. However, you still won't be able to get additional process info with `ps`, like that of threads, even with the pid and will need to use adb/root. However, `kill $TERMUX_APP_PID` will work from `termux-app` and `termux-float`.

These variables can be used by termux devs and users for custom logic in future depending on release type."
dd952a90ade33e77b30959abf9d71c80b9702ba7,Changed: Show system chooser if failed to find activity to handle url
e36c5294dbffa5d4be7c59e573a9c35f7402a9f0,Changed: Only show system chooser if ActivityNotFoundException is thrown when opening url
7b10a35f24774fd13516c7f92ff36ae22117f741,"Changed!: Change TERMUX_IS_DEBUG_BUILD env variable name to TERMUX_IS_DEBUGGABLE_BUILD and change GITHUB_DEBUG_BUILD release type to just GITHUB

This is being done since github release artifacts may be converted to non-debuggable if felt appropriate in future or at least is a more appropriate name. Signing keys can stay same as per commit/push builds. Currently, no changes are planned, just future proofing. The `TERMUX_IS_DEBUGGABLE_BUILD` env variable could be used to differentiate if needed.

Will also check if Termux app is installed and not disabled and will calculate APK signature only when needed since its a slightly expensive operation.

This commit breaks da07826a."
0cf3cef7def14f0bbac7a347bc7e9f51b6b1878c,"Added: Add TERMUX_API_VERSION to termux shell environment

This can be used to check if `Termux:API` is installed and enabled for cases where users try to run `termux-api` commands and it hangs. The check can be added to start of each `termux-api` script during build time by replacing a placeholder with `sed`.

```
if dpkg --compare-versions ""$TERMUX_VERSION"" ge 0.118 && [ -z ""$TERMUX_API_VERSION"" ]; then
echo ""The Termux:API app is not installed or enabled which is required by termux-api commands to work."" 1>&2
exit 1
fi

current_user=""$(id -un)""
termux_user=""$(stat -c ""%U"" ""/data/data/com.termux/files/usr"")""
if [ ""$current_user"" != ""$termux_user"" ]; then
echo ""The termux-api commands must be run as the termux user \""$termux_user\"" instead of as \""$current_user\""."" 1>&2
echo ""Trying to run with \""su $termux_user -c termux-api-command\"" will fail as well."" 1>&2
exit 1
fi
```"
94e01d68d6c915740f6d2a1f7ea1bcdb6bf1f0d5,Update README.md
9ffcd21ce11d74455b8a3b8869a1892205cfb207,Update README.md
c19e01fc1b9b7a1957737db396f1ff5653486508,Changed!: Do not wait for the user to press enter for failed terminal session commands if plugin expects the result back
783a840e3af8b02d259c545bb80d4b8e6dbb4a88,Added: Add MIN_VALUE_EXTRA_SESSION_ACTION and MAX_VALUE_EXTRA_SESSION_ACTION to TermuxConstants
0b47b20a9cc6c720c904c5488e617f1f7cf41d8a,Changed: Minor refactor and comment updates of ReportActivity and ReportInfo
5f3b1ccf9012f03cfa5360de43408cb13fe0936c,Added: Add getDefaultIfUnset() to DataUtils and update comment
c3280a94f0b9c7d7c64d5a538fbb50132831acc4,"Added: Add TextIOActivity and TextIOInfo

The `TextIOActivity` can be used to edit or view text based on various config options defined by `TextIOInfo`
and supports `monospace` font and horizontal scrolling for editing scripts, etc.

Current max text limit is `95KB`, which can be increased in future."
819571a03ae9e4d9c99788f9ef89f352a608eb75,Update README.md
22811167ac4869d3326a20f31890812e1822cf7c,Update README.md
865f29d49ac8a00a2c98e25b9aa8aea70ba4db69,"Added: Request android.permission.PACKAGE_USAGE_STATS permission

The permission can be granted from `Android Settings` -> `System` -> `Usage Access`.

Closes #2269"
1a5a66d0ee6726889c2f6c1e92eca67ff519d9a3,"Support clicking directly on a URL to open it

This allows you to click/press directly on a URL in the terminal view to
open it. It takes priority over opening the keyboard, so if you click on
a URL it is opened, and if you click anywhere else the keyboard opens
like before.

Currently, if the application in the terminal is tracking the mouse and
you click on a URL, both actions happen. The mouse event is sent to the
application, and the URL is also opened.

To enable support for this, you have to set
`terminal-onclick-url-open=true` in `termux.properties`."
54bb83de41385b839138ac8d8b6edd75e1b75cab,"Fix calculation of row number for selection and URL clicking

When calculating the row that is clicked, for mouse tracking
mFontLineSpacingAndAscent was taken into account, but for selection and
URL clicking it wasn't. This adds a common function for calculating the
column and row which does take it into account and use that for all
three.

I'm not quite sure why it's necessary to subtract
mFontLineSpacingAndAscent, but with this calculation the click location
matches the line that is acted on for me with both touch and mouse and
on different font sizes.

It also removes the offset for finger the selection/url used because I
don't think it's common for apps on Android to have such an offset, and
because the mouse tracking did not use such an offset."
fefbf2ec03dd0cfa4b79686f1f9f24c80e9ad17b,Update LICENSE.md
4f66786b987d1846d42cb1dba542bbfe821b4a37,"Changed: Store termux-widget token synchronously to the SharedPreferences file on creation

Attempt to solve termux/termux-widget#16"
0bf4b1eca47f1e5bdb23761c505fdca7e8b1a0f3,Added: Add Theme.MaterialComponents.DayNight.TermuxPrimaryActivity theme can be used by activities for day and night mode
075a080f00e7ec637e69cc714c49239718bfda3d,"Added: Add functions to PackageUtils to check/modify app Component states

These can be used by Termux app and its plugin to disable launcher icons/activities if they are enabled at install time"
5e2bec0f4c23d15033eaa043653a63d11e1170a2,Added: Add constants for launcher activities of termux plugins
1f0f80b0c95973eaf9b1248176519901c4e98329,Added: Add FileUtils.isPathInDirPaths()
f3ffc36bfd8362700de4ea16b5c60f25a8217d16,Added: Add TermuxFileUtils.getExpandedTermuxPaths() and TermuxFileUtils.getUnExpandedTermuxPaths()
e302a14cd0a9b331ec6a44cbe53023fb8d607a9a,Fixed: Do not allow external apps to modify termux properties files with ContentProvider
dcedf394343f97284359f33a52e264089a335751,Changed: Only allow ContentProvider access if allow-external-apps is set to true
da6174e4c49f2af7fd811149aeb07f437f64083f,bootstrap archives: update to 2021.10.03-r1
af16e79bf8e422811885f435c3aaf74d619dd7e6,"Merge pull request #2146 from trygveaa/click-on-url

Added: Allow users to directly open URL links in terminal transcript when clicked or tapped

The user can add `terminal-onclick-url-open=true` entry to `termux.properties` file to enable opening of URL links in terminal transcript when clicked or tapped. The default value is `false`. Running `termux-reload-settings` command will also update the behaviour instantaneously if changed.

Implemented in #2146"
edf3b622e4097de2b16349855481b1234f246194,"chore: Fix Discord server ID in shields.io badge

Based on https://github.com/termux/termux-x11/pull/60/commits/dd59986a8cb1610b590e62a1ee48e7b3e3fed599"
6c24e6ac3b3554c90894fa893a9b7a15b7e0bc28,"termux-shared: add android.permission.VIBRATE to manifest

./gradlew lint complains about vibrations being used in
termux-shared/src/main/java/com/termux/shared/terminal/io/BellHandler.java
without the permission being declared."
6d60bc669b721c973a7e31d5f1c7c790ae976ba2,bootstrap archives: update to 2021.12.02-r1
6e6da752bdcd01aa219fe7eee7a79e41ef25c022,"Fixed: Fix copy&paste error in areHardwareKeyboardShortcutsDisabled

Fixes 829cc3986831 (""Allow users to disable hardware keyboard
shortcuts"").

Reported-by: @amogusissofunnyhahalmaogenzhumorbelike"
cd5962c696f805c7c1babfe4cce16811bf66bf72,bootstrap archives: update to 2022.01.02-r1
897d911a5253b3b56b38ce9f4e95b9dec16e6df1,"Changed: Move to semantic versioning for app and library versions and add commit hash and `github` to APK file names

The `versionName` will now follow semantic version `2.0.0` spec in the format `major.minor.patch(-prerelease)(+buildmetadata)`. This will make versioning the prerelease and github debug builds versions easier and follow a spec. The @termux devs should make sure that when bumping `versionName` in `build.gradle` files and when creating a tag for new releases on github that they include the patch number as well, like `v0.1.0` instead of just `v0.1`. The `build.gradle` files and `attach_debug_apks_to_release` workflow will now validate the version as well and the build/attachment will fail if `versionName` does not follow the spec. https://semver.org/spec/v2.0.0.html

APKs released on github for debug build workflows and releases are now referred as `Github` releases as per 7b10a35f and 94e01d68, so APK filenames have been modified to include `github` in the filename. The APKs are still debuggable, so that tag remains too.

For github workflows the apk filename format will be `termux-app_<current_version>+<last_commit_hash>-github-debug_<arch>.apk`, like `termux-app_v0.1.0+xxxxxxxx-github-debug_arm64-v8a.apk` and for github releases it will be `termux-app_<release_version>+github-debug_<arch>.apk`, like `termux-app_v0.1+github-debug_arm64-v8a.apk`. The `last_commit_hash` will be the first `8` characters of the commit hash. The `<last_commit_hash>-github-debug` will act as `buildmetadata` and will not affect versioning precedence.

For github workflows triggered by `push` and `pull_request` triggers, `<current_version>+<last_commit_hash>` will be used as new `versionName`, like `v0.1.0+xxxxxxxx`. This will make tracking which build a user is using easier and help in resolving issues as well.

Note that users using github releases and termux devs using `$TERMUX_VERSION` environment variables in scripts should take commit hash into consideration and possibly use something like `dpkg --compare-versions ""$TERMUX_VERSION"" ge 0.1` where appropriate instead of mathematical comparisons.

The `app/build.gradle` now also supports following `TERMUX_` scoped environmental variables and `RELEASE_TAG` variable will not be used anymore since it may conflict with possibly other variables used by users. They will also allow enabling split APKs for both debug and release builds.

- `TERMUX_APP_VERSION_NAME` will be used as `versionName` if its set.
- `TERMUX_APK_VERSION_TAG` will be used as `termux-app_<TERMUX_APK_VERSION_TAG>_<arch>.apk` if its set. The `_<arch>` will only exist for split APKs.
- `TERMUX_SPLIT_APKS_FOR_DEBUG_BUILDS` will define whether split APKs should be enabled for debug builds. Default value is `1`.
- `TERMUX_SPLIT_APKS_FOR_RELEASE_BUILDS` will define whether split APKs should be enabled for release builds. Default value is `0` since F-Droid does not support split APKs, check #1904.

So based on above, if in future github releases are to be converted to `release` builds instead of `debug` builds, something like following can be done and even a workflow can be created for it. Users can also build split APKs release builds for themselves if they want.

```
export TERMUX_SPLIT_APKS_FOR_RELEASE_BUILDS=1
./gradlew assembleRelease -Pandroid.injected.signing.store.file=""$(pwd)/app/dev_keystore.jks"" -Pandroid.injected.signing.store.password=xrj45yWGLbsO7W0v -Pandroid.injected.signing.key.alias=alias -Pandroid.injected.signing.key.password=xrj45yWGLbsO7W0v
```

The APK will be found at `./app/build/outputs/apk/release/termux-app_<version>_<arch>.apk`

The `TERMUX_SPLIT_APKS_FOR_DEBUG_BUILDS` can be set to `0` to disable building split APKs which may be helpful for users building termux on device considering they will extra space and build time. Instructions for building are at https://github.com/termux/termux-packages/pull/7227#issuecomment-893022283.

```
export TERMUX_SPLIT_APKS_FOR_DEBUG_BUILDS=0
./gradlew assembleDebug
```

The APK will be found at `./app/build/outputs/apk/debug/termux-app_debug_universal.apk`

Note that F-Droid uses algorithm at https://gitlab.com/fdroid/fdroidserver/-/blob/2.1a0/fdroidserver/build.py#L746 to automatically detect built APKs, so ensure any modifications to location or file name are compliant. Current updates should be.

Auto updates are detected by checkupdates bot at https://gitlab.com/fdroid/fdroidserver/-/blob/master/fdroidserver/checkupdates.py"
085b17e496ef6f57b72ee3f48742d5f66100f6ec,Changed: Bump dependency versions
903b1c75a2986f767278972168e9f64ebdb423d3,Fixed: Fix bootstrap checksum check if it contained leading zeros
0eaaa1372ad0909adee30e0ee2c5d6abb9846ec2,Changed: Bump bootstrap to v2022.01.07-r1
b01a738791d6ad0d4a81064d37caf64800de59e8,Docs: Update README.md
480f92880c2e355c3b666b0773dcc5411c27bb93,Fixed: Fix bootstrap checksum check if it contained leading zeros
9259ef0be198f5981e8fb06e9458c702b6bba5ac,Changed: Bump to v0.118.0
009c128052766665a4363a048dc6e008e249dfcd,Changed: Move termux apps properties file list to TermuxConstants and do not follow symlinks
09412da9d76c7ad2d3cc530a1efedf9482e05e3e,Fixed: Fix NullPointerException when getting spanned markdown like for notification
0da1984b59ed58013404435c4ec4069e5f4670de,Changed: Do not show toast if text null or empty
1327cef7b4002f14409b23cef14bd53a2e657bd6,"Added: Add support for getting external app info

PackageUtils were previously based on using `Context` object to get app info, which was only possible to get for Termux app and its sharedUserId plugins. Now it has been refactored to used `PackageInfo` and `ApplicationInfo` objects to get the info, which will also allow getting info of external apps. However, when targeting sdk `30`, queries entries or `QUERY_ALL_PACKAGES` permission will be required. Check `PackageUtils.isAppInstalled()` for more info."
fd4159f1bad97a5d4dafcf1411a7eb0b113131d7,"Added: Add generic function TermuxUtils to get app info for termux app, its installed plugin apps and external apps"
ae7f141acab8d0e20097e3a6a1ce8213fdc6d8c7,Added: Add info of installed plugin apps when report issue report is generated with debug mode enabled
9814438ae5bd93511c1f1f07160bec11b3688ce0,"Added: Add info of Termux API calling app in plugin command error reports and refactor notification functions

Now when a Termux API command like `RUN_COMMAND` intent is called by an external app with PendingIntent, then the info of the app will be shown in error reports as well. This should provide more info about the caller which should be useful for debugging or in case a malicious app ran commands with `allow-external-app` disabled.

Moreover, `PluginUtils.sendPluginCommandErrorNotification()` has been refactored to send generic messages instead of just for `ExecutionCommand`. This will allow usage with other Termux APIs as well."
64adc521de4b7bd1476f6e479070e9d790c832eb,"Added: Add info of all Termux plugins in bootstrap error reports and refactor notification functions

Now in case of bootstrap failure, the app info of all installed termux plugin apps will be added as well, including whether they are installed on external/portable sd card. Apparently, as per reports, installing termux app or even plugin apps on external/portable sd cards prevents termux apps from accessing its files directory `/data/data/com.termux/file` and bootstrap checks fail. This commit should provide more info or proof of it.

Moreover, adding plugin info would be useful in future for diagnosing targetsdk mismatch between Termux and its plugins when sdk `30` is targeted by Termux app."
fa91205bcaa18f7afb317fea369bfda27f396888,Changed!: Move ReportInfo parameters from constructor to functions
9798b30c76c032393854280389fa5a9c75383ac9,"Fixed: Fix issue where menu wouldn't show when text on bottom row of terminal was selected

Closes #2233"
701b5ccd5ca8ccb426046c6bc7c86279e29b5ae0,"Fixed: Fix ArrayIndexOutOfBoundsException thrown because length was less than 0 when selecting text from terminal buffer

java.lang.ArrayIndexOutOfBoundsException: src.length=132 srcPos=90 dst.length=16 dstPos=0 length=-2
at java.lang.System.arraycopy(System.java:469)
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:597)
at java.lang.StringBuilder.append(StringBuilder.java:191)
at com.termux.terminal.TerminalBuffer.getSelectedText(TerminalBuffer.java:97)
at com.termux.terminal.TerminalBuffer.getSelectedText(TerminalBuffer.java:57)
at com.termux.terminal.TerminalBuffer.getSelectedText(TerminalBuffer.java:53)
at com.termux.terminal.TerminalEmulator.getSelectedText(TerminalEmulator.java:2401)
at com.termux.view.textselection.TextSelectionCursorController$1.onActionItemClicked(TextSelectionCursorController.java:140)"
4faf2b9d28f4151e41fe2f008bb95b98afc2d8d1,"Fixed: Fix CSI Delete Ps Column(s) (DECDC)

Firstly, `TerminalBuffer.blockSet()` was throwing the exception since `sx + w > mColumns` which was technically passed by TerminalEmulator.blockClear()`. Actual value would be `mCursorRow + columnsToMove + columnsToDelete > mColumns`.

Secondly, the call to `blockClear()` should not be needed since it the `blockCopy()` would overwrite the columns to be deleted on copy.

Run `printf ""\e['~""` to delete 1 column and `printf ""\e[3'~""` to delete 3 columns. Run `printf ""\e[3'}""` to insert 2 columns.

java.lang.IllegalArgumentException: Illegal arguments! blockSet(78, 0, 1, 30, 32, 56, 30)
at com.termux.terminal.TerminalBuffer.blockSet(TerminalBuffer.java:397)
at com.termux.terminal.TerminalEmulator.blockClear(TerminalEmulator.java:2035)
at com.termux.terminal.TerminalEmulator.processCodePoint(TerminalEmulator.java:799)"
79980a07a86ced101a100e310d611459700303a1,Fixed: Use android.util.Log for terminal-emulator logging if TerminalSessionClient is null like when running tests
f62997a60e5980ecf4522c4def2c2ef32de31194,"Fixed: Log exception instead of crashing app on NumberFormatException for invalid termcap/terminfo string requested

java.lang.NumberFormatException: For input string: "" a""
at java.lang.Long.parseLong(Long.java:583)
at java.lang.Long.valueOf(Long.java:781)
at java.lang.Long.decode(Long.java:933)
at com.termux.terminal.TerminalEmulator.doDeviceControl(TerminalEmulator.java:940)
at com.termux.terminal.TerminalEmulator.processCodePoint(TerminalEmulator.java:813)"
059feaacf181aefd154c8d0d93618b4c7b70311b,Changed: Move UrlUtils to TermuxUrlUtils
a987246bd82f668e94d180ccefbdc3518688c95c,Added: Add comment for why clearing of $TMPDIR may be skipped on termux exit
2c6d009657a872decbb7b3aeab2e435dc57b158d,Added: Add uid to app info
65252dc6405fc3eb1de9cbe693bf7c1ef1eed349,Changed: Use cached PackageInfo while getting version code and name for app
cbac7c8fbd12c54a896953237d313dafdf427ee2,Changed: Get user handle for package instead of process user handle when getting profile user serial number
304aed306353a2f8084e94fe0775229ce2e326c6,Added: Add UrlUtils
5252fbbe114be661fa73735b44f9599ffb6a503c,"Changed!: Move Termux specific classes to com.termux.shared.termux package

This will allow segregation of Termux utils/classes from general ones and also allow easier management of GPLv3 License for Termux classes"
aca0000ee6765fc1411bd7fd6c3020e89d0b3917,Update LICENSE.md as per 5252fbbe
3c202928b47f92dbc078e4796b69d9d57fe44a20,Changed: Fix typos is PackageUtils
f4a997b7ddc4d7c247af2f8747fe52330b641d69,Added: Add ActivityUtils with functions to start activities for result
50a97b1977fd3a8881e0f69ef81894cb4d173ba3,"Added: Add ReflectionUtils and add dependency for org.lsposed.hiddenapibypass:hiddenapibypass

The call to bypassHiddenAPIReflectionRestrictions() must be made before trying to reflect hidden or non-sdk APIs.

Reflection will be used for accessing hidden (@hide) APIs by Termux and its plugins later.

https://github.com/LSPosed/AndroidHiddenApiBypass
https://developer.android.com/guide/app-compatibility/restrictions-non-sdk-interfaces"
32dd7eab03ad252c5669b64529e39807088f607c,"Changed|Fixed: Add java docs to PermissionUtils and fix permission checking

ContextCompat.checkSelfPermission() may return true for permissions not even requested so it now checked if permissions are even requested in app manifest before checking if they are granted and before asking for permission to be granted.

Also some general improvements in code quality, including using ActivityUtils to request non-standard permissions and added support for AppCompatActivity instances to request permissions in addition to Activity instances."
9eeb2babd7638f8b2967ebd93020e7e37d19cc2b,"Added: Add support for MANAGE_EXTERNAL_STORAGE when targeting targetSdkVersion 30

Termux will now automatically request legacy `WRITE_EXTERNAL_STORAGE` or `MANAGE_EXTERNAL_STORAGE` permissions if targeting targetSdkVersion `30` (android `11`) and running on sdk `30` (android `11`) and higher when `termux-setup-storage` is run.

Functions have been added to `PermissionUtils` to automatically check and request either permission depending on app `targetSdkVersion` and android version. Functions have been added to `PackagUtils` to get `requestLegacyExternalStorage` value from app manifest if added. If legacy storage is possible, then it must be set to `true`. Check `PermissionUtils.checkAndRequestLegacyOrManageExternalStoragePermission()`, `PermissionUtils.isLegacyExternalStoragePossible()` and `PermissionUtils.checkIfHasRequestedLegacyExternalStorage()` for details."
2c0e9c6c5c28b42e1732ca425ee75a4530a9724e,Added: Add Logger.logInfoAndShowToast() and log messages even if not showing toast due to null Context
63c106c74660a0bab97acde124093db7e1a00aad,Added: Add Error.logErrorAndShowToast() and provide non-static logging functions to be used when Error may not be null
f7ebcae7b3c754feb957dee47441e84a56634d36,Added: Add functions to get dirname and basename in FileUtils
93d738ae636c9d08bdd188ce37fdd6d15f09c01b,Fixed: Remove all trailing slashes when normalizing path
5b2aca9cf72222b411b657e54e604b9106c15555,Changed: Fix minor typos in FileUtils and FileUtilsErrno
aed4b96a314c74b50e90a29e9da6149decd4ec48,Added: Add FileUtils.regularOrDirectoryFileExists()
5d64f1225cb52de26018cb9f078644542e9d2a3b,Added: Add support in SharedProperties to modify properties loaded from disk before they are mapped to internal values
28ecb6499242b372d65966eaf5c307dc6aaeea89,Changed: Automatically use default properties file and client for TermuxSharedProperties.getTermuxInternalPropertyValue()
d96883c4d62427a2e84ab53bbf9d40ecc450bdd9,"Changed|Deprecated: Deprecate `use-black-ui` termux property and replace it with `night-mode`

This will not break existing `use-black-ui` settings for users and it will automatically be converted to `night-mode` when properties are loaded from disk but a deprecation message will be logged.

This `night-mode` key can be used to set the day/night theme variant for activities used by termux app and its plugin. The user can set a string value to `true` to force use dark variant of theme, `false` to force use light variant of theme or `system` to automatically set theme based on current system settings. The default value is still `system`. The app must be restarted for changes to take effect for existing activities, including main terminal `TermuxActivity`.

This is required since ""theme != night mode"". In future custom theme or color support may be provided that will have both dark and night modes for the same theme."
3e518a6a75a26e64edd6b1f4643640c2459f5407,"Fixed: Fix termux-open failing to open files with ""#"" and remove hardcoded ""content"" and ""file"" strings

termux-open ""/data/data/com.termux/files/home/te#st.sh"""
b559d5a0bda866e8df0b241fe2c4f06fca416fcc,"Fixed: Fix TermuxService failing to execute files with ""#""

am startservice --user 0 -n com.termux/.app.TermuxService -a com.termux.service_execute -d ""file:///data/data/com.termux/files/home/te#st.sh"""
74b23cb2096652601050d0f4951f9fb92577743c,"Fixed: Fix TermuxFileReceiverActivity failing to open files with ""#"" and remove hardcoded ""content"" and ""file"" strings and fix indentation

am start -a android.intent.action.VIEW -n com.termux/.filepicker.TermuxFileReceiverActivity -d ""file:///data/data/com.termux/files/home/te#st.sh"""
7bbc12c7c9e5310dbe6b1e425cb3b975d74ecaba,Fixed: Get file basename from Uri path when opening files in termux if failed to get it ContentResolver and EXTRA_TITLE
37b9bcf5af7f0ea9beb86c1c6c43879a66968a29,Changed!: Rename FileUtils readStringFromFile() to readTextFromFile() and writeStringToFile() to writeTextToFile()
549a772d453e51b31d3b6656dab0e99bde9afdc4,Added: Add UriScheme and move UriUtils to com.termux.shared.net package
361bfb3961ccb54402253dc1ffc3f851c4139e65,Changed!: Move to package-by-feature hierarchy for classes not using it since termux-shared is growing too big and layers are getting out of hand
8e506859a6b164a180096fcb342b5075f2524dbc,Changed!: Rename TermuxTask to AppShell since its not part of termux-app or com.termux.shared.termux package
6ff5572999b703a02df2962a513883fa8c799c93,"Changed!: Remove TermuxConstants reference from Logger and set DEFAULT_LOG_TAG at application startup

Plugin apps must do the same"
8c43b7f0a127d066af63f741b9c54c9a3391aad0,Changed: Remove TermuxConstants reference from PackageUtils
b69d14119e34753d423a2189dcb040b9fea47657,Changed: Return Error instead of boolean for ActivityUtils.startActivityForResult()
f857bf2968910387a599b7da468b8bc9f3aa2261,Added: Add ActivityUtils.startActivity() and catch uncaught exceptions in TermuxActivity
36e49707ecf3c442a9329b55545a9cfe7b1f5d5c,Added: Add support to request Settings.ACTION* permissions to be requested via Service context
0a3efc537dc7d048f85dbcbbdf4720b378413860,Changed: Use PermissionUtils to request disabling battery optimizations in TermuxService
1b794b35181ca5c75fdbba4094a13eddd1848b2c,"Fixed: Do not use colon character "":"" in log tag since it is invalid and breaks logcat command filterspecs argument"
b79ed509f14ac963d0f881e0a2201f13d67f9931,Changed: Store app wide night mode in NightMode.APP_NIGHT_MODE so that libraries can use it directly without having to load or get it from termux properties
7a386a7f2a4d0d0600e1c026486a5f4d04b31803,"Fixed: Fix ArrayIndexOutOfBoundsException when setting zero width terminal character

java.lang.ArrayIndexOutOfBoundsException: length=64; index=-1
at com.termux.terminal.TerminalRow.setChar(TerminalRow.java:127)
at com.termux.terminal.TerminalBuffer.setChar(TerminalBuffer.java:413)
at com.termux.terminal.TerminalEmulator.emitCodePoint(TerminalEmulator.java:2329)
at com.termux.terminal.TerminalEmulator.processCodePoint(TerminalEmulator.java:617)
at com.termux.terminal.TerminalEmulator.processByte(TerminalEmulator.java:513)
at com.termux.terminal.TerminalEmulator.append(TerminalEmulator.java:480)
at com.termux.terminal.TerminalSession$MainThreadHandler.handleMessage(TerminalSession.java:339)
at android.os.Handler.dispatchMessage(Handler.java:110)
at android.os.Looper.loop(Looper.java:219)
at android.app.ActivityThread.main(ActivityThread.java:8349)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:513)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1055)"
d222102635404152da83d381c5450a84d6d37967,"Fixed: Catch rare RuntimeException while loading bell

java.lang.RuntimeException: Unable to resume activity {com.termux/com.termux.app.TermuxActivity}: android.content.res.Resources$NotFoundException: File res/raw/bell.ogg from drawable resource ID #0x7f0f0001
        at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3480)
        at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3520)
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1554)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loop(Looper.java:154)
        at android.app.ActivityThread.main(ActivityThread.java:6247)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:872)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:762)
        at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:107)
     Caused by: android.content.res.Resources$NotFoundException: File res/raw/bell.ogg from drawable resource ID #0x7f0f0001
        at android.content.res.ResourcesImpl.openRawResourceFd(ResourcesImpl.java:308)
        at android.content.res.Resources.openRawResourceFd(Resources.java:1272)
        at android.media.SoundPool.load(SoundPool.java:247)
        at com.termux.app.terminal.TermuxTerminalSessionClient.getBellSoundPool(TermuxTerminalSessionClient.java:257)
        at com.termux.app.terminal.TermuxTerminalSessionClient.onResume(TermuxTerminalSessionClient.java:82)
        at com.termux.app.TermuxActivity.onResume(TermuxActivity.java:290)
        at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1270)
        at android.app.Activity.performResume(Activity.java:6861)
        at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3457)
        at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3520)
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1554)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loop(Looper.java:154)
        at android.app.ActivityThread.main(ActivityThread.java:6247)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:872)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:762)
        at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:107)
     Caused by: java.io.FileNotFoundException: This file can not be opened as a file descriptor; it is probably compressed
        at android.content.res.AssetManager.openNonAssetFdNative(Native Method)
        at android.content.res.AssetManager.openNonAssetFd(AssetManager.java:467)
        at android.content.res.ResourcesImpl.openRawResourceFd(ResourcesImpl.java:306)
        at android.content.res.Resources.openRawResourceFd(Resources.java:1272)
        at android.media.SoundPool.load(SoundPool.java:247)
        at com.termux.app.terminal.TermuxTerminalSessionClient.getBellSoundPool(TermuxTerminalSessionClient.java:257)
        at com.termux.app.terminal.TermuxTerminalSessionClient.onResume(TermuxTerminalSessionClient.java:82)
        at com.termux.app.TermuxActivity.onResume(TermuxActivity.java:290)
        at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1270)
        at android.app.Activity.performResume(Activity.java:6861)
        at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3457)
        at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3520)
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1554)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loop(Looper.java:154)
        at android.app.ActivityThread.main(ActivityThread.java:6247)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:872)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:762)
        at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:107)"
006bfeac8d27e1f783ebd964675caabaec98182a,Fixed: Fix termux background command logging at verbose level if CUSTOM_LOG_LEVEL was not passed
3f84b5345f6be2d538d7c381e79f94145dc027dd,Changed: Make ExtraKeysView private functions public and variables protected
c1a0d6deff053aea7e6bbc9db11d19fee645a207,Changed: Rename ActivityUtilsErrno to ActivityErrno
bb1584decb366e8b6a97ae165d15dc90851e5906,Fixed: Remove unused imports
5d202d082f6449a5015b10208cf0a2970ffef8d9,Changed: Replace extra-keys Button with MaterialButton
20a70b1a2249761841da0b23069e7cf8e4f41dd9,Fixed: Add uncommitted string resource changes
998499d991c20a08551835c4dda42275aa01c39e,Changed: Remove redundant double quotes from string resources
0fa0738cf600a35f1dedd8e52eaacea3ab38bdd1,Changed: Add uncommitted changes from 361bfb39
8e7e355fcb15b74581c3eb70cf2ffee4d3af6ed8,Fixed: Add accidentally removed import in 5252fbbe
1fb4fe25103f1302be49fb81908fb0fd9d703a50,Fixed: Fix FileUtils labels
bf10c726613b6235a4da56409c34292964a59463,Added: Add annotations and modifiers
b45ff8a40787e5c66339d17f22c4192d8477c2a7,Added: Store pid in ExecutionCommand for sessions and tasks
1f3d3616a4900d4f52d1db52c2d17518d9847602,Fixed: Fix termux app restarting on samsung dex version < 3.0 when switching modes
3898ebdc74663195738766c23bf4e4eee8b4a3b7,Changed: Rename UriUtils getUriFilePath() to getUriFilePathWithFragment()
b435d948887e6417976039c9ce074d02280989b7,Fixed: Do not open null or empty file paths passed to TermuxOpenReceiver
a3cd058fb463562c8124084320b4a184cdf37c0e,Update: Remove duplicate log tag prefix from TermuxOpenReceiver
6fea1fbddca58580e26fd5775089433b4f0996d7,Changed: Change ShareUtils.openSystemAppChooser() to public
f3f434af92afd3845107139e8c267849bf6cd1d0,Changed: Rename ShareUtils openURL() to openUrl()
6631599fb627a849e64e76693cb3b0eb775b1a87,"Added: Add support for shared day/night theming across termux apps

With this commit, activities will automatically change theme between day/night if `night-mode` `termux.properties` is not set or is set to `system` without requiring app restart.

Dialog theming will be fully added in a later commit and may currently be in an inconsistent state or have crashes.

The `uiMode` has been removed from `configChanges` of `TermuxActivity`, this may cause termux app to restart if samsung DEX mode is changed, if it does, then users should report it so that it can be fixed by re-adding the value and ignoring the change inside `TermuxActivity.onConfigurationChanged()`. The docs don't state if its necessary. Check related pull request #1446.

Running `termux-reload-settings` will also restart `TermuxActivity`, the activity data should be preserved."
2452399a13051065f8c19e5b3c023320a4ebbeba,"Added: Add explicit exported attribute for app components as required by Android 12

https://developer.android.com/about/versions/12/behavior-changes-12#exported"
81dd11315765814cc6b270f1126bd1565fa94f44,Docs: Add notice that users should upgrade to v0.118.0 ASAP
4fd48a5aed2fa187352a64168e866db14490b44e,"Fixed: Fix termux session shortcuts not working after TermuxActivity recreation

The `List<KeyboardShortcut> mSessionShortcuts = new ArrayList<>()` declaration was causing shortcuts list to be of size 0 in `TermuxTerminalViewClient.onCodePoint()` after re-creation, which resulted in session shortcuts not working."
172a75e5785a4e2f85d54a9c909c0293675366c8,"Changed: Do not recreate TermuxActivity enabled in 6631599f when TermuxService starts a session

Activity will only be recreated when `termux-reload-settings` is run or `night-mode` config does not equal current system mode when TermuxActivity is initially started. Running `termux-reload-settings` can cause some problems if some variable whose state should be maintained or reset is not being done so correctly, like termux session shortcuts weren't before 4fd48a5a. It requires further testing and any bugs should be reported."
95d7a154a480aa6b13b3988e550d081bec301755,Docs: Add notice that termux is broken on Android 12
9b5aad94168769b3fa747fab7eaa75e57f10fa6c,Fixed: Fix AppShell failsafe env
2a1c5a70da4739cf8284f4df7be720f24cafba8c,Docs: Fix issue link
a56ed5771d9d0d18b4b7b3b24e8027bc3e027880,"Fixed: Fix terminal sessions being re-added if ""New Session"" shortcut or termux-reload-settings was used

If TermuxActivity was recreated then the original intent was re-delivered, resulting in a new session being re-added each time.

Closes #2566"
622ff4fad4e58713364523e0a2c50ce07a32211f,"Fixed: Fix issue where a colour tint/highlight would be added to the terminal on activity re-creation

The fix in c6b4114f was not working for it."
b8c3db0b6e950a15c075d974b1d0ef86ce1df08e,"Fixed: Change extra keys and terminal input view background to black

Required for day/night theming and should fix issues where both views were translucent with light terminal color themes."
43858dfbb17d35e5c5d6a61e0049373a8c70b698,Fixed: Rename TermuxActivity isOnResumeAfterOnCreate to mIsOnResumeAfterOnCreate as per variable naming convention
c567cc3b926a41554e1730dc7200a678df5c12e6,"Fixed: Fix app crash if failed to start TermuxService while in background due to android bg restrictions

The crash happens due to android 8.0 background restrictions if TermuxActivity is not in foreground/whitelist and attempts to start TermuxService. With this commit, the app will not crash but will just exit with a toast message.

https://developer.android.com/about/versions/oreo/background#services

https://cs.android.com/android/platform/superproject/+/android-12.0.0_r4:frameworks/base/services/core/java/com/android/server/am/ActiveServices.java;l=722

java.lang.RuntimeException: Unable to start activity ComponentInfo{com.termux/com.termux.app.TermuxActivity}: java.lang.IllegalStateException: Not allowed to start service Intent { cmp=com.termux/.app.TermuxService }: app is in background uid UidRecord{533ae62 u0a187 TPSL idle procs:1 seq(0,0,0)}
 at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2947)
 at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3082)
 at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:78)
 at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:108)
 at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:68)
 at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1832)
 at android.os.Handler.dispatchMessage(Handler.java:106)
 at android.os.Looper.loop(Looper.java:201)
 at android.app.ActivityThread.main(ActivityThread.java:6821)
 at java.lang.reflect.Method.invoke(Native Method)
 at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:547)
 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:873)
Caused by: java.lang.IllegalStateException: Not allowed to start service Intent { cmp=com.termux/.app.TermuxService }: app is in background uid UidRecord{533ae62 u0a187 TPSL idle procs:1 seq(0,0,0)}
 at android.app.ContextImpl.startServiceCommon(ContextImpl.java:1587)
 at android.app.ContextImpl.startService(ContextImpl.java:1542)
 at android.content.ContextWrapper.startService(ContextWrapper.java:674)
 at com.termux.app.TermuxActivity.onCreate(TermuxActivity.java:242)
 at android.app.Activity.performCreate(Activity.java:7224)
 at android.app.Activity.performCreate(Activity.java:7213)
 at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1272)
 at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2927)
 ... 11 more

Closes #2552"
f33758c7c05bede95e15fc9a7cc225b21d072113,Fixed: Fix typo from 43858dfb
f8e7ada143bcec12424b17f9ffa87d5c7dcb4aa8,Fixed: Fix typo from 43858dfb
a01ff018b3c105d1c971ec312985a90239016451,Docs: Update matrix invite links
280e28448858d421da5be781bce79535b226d285,Docs: Add building bootstrap link
68cdbd6ff46bda5673d4ebd72ca4c2d60e25b119,"Added: Add support for getting feature flag values and show MONITOR_PHANTOM_PROCS value in about page

MONITOR_PHANTOM_PROCS will only be shown in Android 12+ devices and will be marked ""<unsupported>"" if its not supported in current android build. It will show in Termux Settings->About->Device Info->Software and in reports. Flag is available on Pixel Android 12L beta 3 and Android 13. Check FeatureFlagUtils for more details.

Getting supported feature flags and their values is done through reflection on android ""android.util.FeatureFlagUtils"" class and requires bypassing android hidden API restrictions.

Related issue #2366
https://issuetracker.google.com/u/1/issues/205156966#comment27"
270e41fae51fc41e8dd043376339aa5a2da723cc,Update README.md
bd004514df53aeca246f9905ff79a8dbe2405d4e,"Merge pull request #2612 from Nickoriginal/master

Docs: Fix typo"
6d944b5f7fc07339e5c864badae8ab7c99abef4a,Changed: Use application context for SharedProperties
05283bd7745ee789b5468186a8d47e6c7700af6b,"Changed: Load termux.properties into a single static app wide TermuxAppSharedProperties class

The `TermuxAppSharedProperties.properties` will exist in `termux-shared` library and only the single static instance will be reloaded whenever needed, instead of different activities and services maintaining their own instances. The classes in `termux-shared` library will also get access to the properties for their own needs.

The night mode set in `TermuxApplication` and terminal rows set in `TermuxService` will no longer require loading props from disk.

Updating `allow-external-apps` value will now require restarting termux or running `termux-reload-settings` since value will no longer be loaded from disk every time."
b94dc7eea93962f11b55cd9f5cb7aff715a1f4a6,"Changed|Deprecated: Move from shell command background mode to command runner

This starts the support for adb, root and other custom runners for shell commands. Previously only terminal and background tasks in app shells were supported.

`TERMUX_SERVICE.EXTRA_BACKGROUND` and `RUN_COMMAND_SERVICE.EXTRA_BACKGROUND` extras have been deprecated and instead respective `EXTRA_RUNNER` extra keys should be used. Currently supported extra values are `terminal-session` and `app-shell`. In future, `adb-shell` and `root-shell` are planned to be supported as well."
c3ac30e2fb33cf26ad1ac736e0edd2b6905b9025,Added: Add ic_info and ic_settings
760ae78affdf5f53cefffcad073bd535b17e5a55,Docs: Add termux apps vulnerability disclosure post links to README
792c33c9a561e10a283a00fedfa216845396765b,Fixed: Fix `PermissionUtils.requestPermissions()` not requesting multiple permissions correctly
14c5fc7b1e6e23c1baca760f1982ea00010a2ac9,Fixed: Suppress warnings for requiring android 11 to request `MANAGE_EXTERNAL_STORAGE` permission and call `Environment.isExternalStorageManager()`
021cb60e2348830410dd1273513a957477aa6a2e,Added: Add `TERMUX_API_APT_*` constants
9a65aa4589015854066569b486cbeb63f88dd201,Fixed: Do not add double heading if callingPackageName passed to `TermuxUtils.getAppInfoMarkdownString()` is a plugin app
621545dd0a2cb692b2a596d9dcd1947890fd159d,Added: Add support for getting termux app and plugin app info only in `TermuxUtils.getAppInfoMarkdownString()`
4b07e4f4c0a84f58d3fc1f25cdc1448e88c5655a,Added: Add multi process support in `TermuxAppSharedPreferences` since plugin apps may need to read values modified by termux app process
4dbfc1fac8aebe47a96a88bc03d2b5d1f4674155,Added: Add support for `onPreLogCrash()` and `onPostLogCrash()` in `CrashHandler` so that `CrashHandlerClient` can decide which exceptions to log and add custom logic
5f0053138131b0d500790c1075af97e45218fd2a,"Changed: Move `com.termux.app.utils.CrashUtils` to `com.termux.shared.termux.crash.TermuxCrashUtils` so that plugins trigger plugin notifications too

Calls to `notifyAppCrashFromCrashLogFile()` will now be synchronized as well."
477b36acd1a661df7d056a60c77583b36a10aba1,"Added: Add support for `ACTION_NOTIFY_APP_CRASH` in receiver registered by `TermuxActivity` to notify users of plugin app crashes

Once plugins integrate changes for `TermuxCrashUtils.onPostLogCrash()`, they will send the `ACTION_NOTIFY_APP_CRASH` broadcast when an uncaught exception is caught by `CrashHandler`. If `TermuxActivity` is in foreground, then it will receive the broadcast and notify user of the crash by reading it from the crash log file without the user having to restart termux app to be notified."
cc58ddde31698ba68702d6f708eca5d557bed0ec,"Changed: Check crash log file whenever `TermuxActivity` is resumed instead of only on app startup

This adds onto 06dbfbdb since receiver would not be registered to receive `ACTION_NOTIFY_APP_CRASH` if `TermuxActivity` was not be in foreground"
e0074f280f7d168071bba145384868101ca0a485,Fixed: Fix typos
d25f7afd977dfc9ba455f9b30b3e62b62d489235,Changed: Share terminal transcript with `ShareUtils`
26e0fa2b9e9c0e69d83844ab9cc0af22d9203037,"Changed: Use thread to setup settings components

Getting plugin contexts may be considered as too much work on main thread in certain situations resulting in android complaining that app is not responding"
93d57f053bae24c2ea2627c2e113395529ffcb80,"Added: Add `~/storage` symlinks for `documents`, `podcasts` and `audiobooks`

The `audiobooks` symlink will only be made on Android `10+`

Closes #2648"
dd378738e31a3577c40cd81b727dd689b19f1796,"Fixed: Add `media-*` symlinks to `Android/media` for all storages and `external-0` symlink to `Android/media` of primary storage

The `~/external-0` and `~/media-0` should point to primary storage and `1+` to others, possibly portable sd cards.

Note that one can make portable sd card as primary storage as well instead of internal sd card with adoptable storage, which then links it to `/storage/emulated`, so the concept of `internal` and `external` sd card does not apply to primary storage for all cases.

https://android.stackexchange.com/questions/214233/how-to-free-internal-storage-by-moving-data-or-using-symlink-bind-mount-with-a/214706#214706

https://android.stackexchange.com/questions/217741/how-to-bind-mount-a-folder-inside-sdcard-with-correct-permissions/217936#217936

https://android.stackexchange.com/questions/205430/what-is-storage-emulated-0/205494#205494

https://source.android.com/devices/storage/adoptable

```
$ ls -l storage | cut -d ' ' -f 9-

audiobooks -> /storage/emulated/0/Audiobooks
dcim -> /storage/emulated/0/DCIM
documents -> /storage/emulated/0/Documents
downloads -> /storage/emulated/0/Download
external-0 -> /storage/emulated/0/Android/data/com.termux/files
external-1 -> /storage/XXXX-XXXX/Android/data/com.termux/files
media-0 -> /storage/emulated/0/Android/media/com.termux
media-1 -> /storage/XXXX-XXXX/Android/media/com.termux
movies -> /storage/emulated/0/Movies
music -> /storage/emulated/0/Music
pictures -> /storage/emulated/0/Pictures
podcasts -> /storage/emulated/0/Podcasts
shared -> /storage/emulated/0

```

Closes #2481"
25d21e9d2e94b87b62597b16636c489de98e922f,"Fixed: Fix wrong input type selected if toolbar is switched back to extra keys after tapping terminal if in text input mode

Closes #2503"
5e820ad2491acac8b07cc662cb24012cf82f52da,"Added: Allow users to adjust `$TMPDIR` clear mechanism on termux exit

The `delete-tmpdir-files-older-than-x-days-on-exit` key can be used to adjust how many days old the access time should be of files that should be deleted from `$TMPDIR` on termux exit. The user can set an integer value between `-1` and `100000`. Set `-1` to delete no files, `0` to delete all files and `> 0` for `x` days. The default value is `3` days. So adding an entry like `delete-tmpdir-files-older-than-x-days-on-exit=10` to `termux.properties` file will make termux delete files older than `10` when termux is exited. After updating the value, either restart termux or run `termux-reload-settings` for changes to take effect.

Note that currently `> 0` will revert back to `0` since deletion is currently broken for empty sub directories and deletion needs to be done based on access time instead of modified time. It will need to be fixed in a later commit. Check `FileUtils.deleteFilesOlderThanXDays()`.

Related issue #2350"
caa13b70473da8dc5f32f97c740941fc147340a6,Fixed: Fix pull request APKs commit hash
87a79a9b24a7f9fa13ba6cb5d463dad8e4c8f1cb,Added: Log intents received by  and
ce12b8ad2d67052284b2e62287b20f28ff1249ed,"Fixed: Fix `Settings.ACTION_*` permission requests result callback

Adding `FLAG_ACTIVITY_NEW_TASK` will start permission activity in separate task and `onActivityResult()` will be called early in the calling activity without grant/not-grant result being actually set."
8746db0d22e178a805531e03d6d1ddc884c6e434,"chore(gitignore): Remove unused ignore rules for crashlytics (#2683)

* Fix typo

* Remove crashlytics"
ee32ef0c7e74fd630d63876d9e422ba2a4502bb0,Changed: Maintain terminal session name in `ExecutionCommand.sessionName` in addition to `TerminalSession.mSessionName`
5794ab9a56f5a509f2c90ec2d96601254b680b8a,"Added|Changed: Add support to switch to existing session instead of creating duplicate session for `RUN_COMMAND` intent

This is done via addition of the `com.termux.RUN_COMMAND_SESSION_CREATE_MODE` extra, which currently supports two values.

- `always` to always create a new session every time.
- `no-session-with-name` to create a new session only if no existing session exits with the same terminal session name.

The terminal session name will equal executable basename by default and dashes `-` in the basename will no longer be replaced with spaces when session name as done previously. The `com.termux.RUN_COMMAND_SESSION_NAME` extra can be used to set custom session name.

Usage:

You can use this with `Termux:Tasker` or `Termux:Widget`.

For example for `Termux:Widget`

- Create a wrapper script at `~/.shortcuts/tasks/my-script.sh` with following contents under `tasks` directory so that it runs in background app shell instead of a terminal session. Do not use terminal session runner for wrapper script, since it will open two sessions everytime otherwise, first for wrapper script, then for actual target executable. There would also be conflicts if both wrapper script and target executable have the same basename and it would be incorrectly assumed that session is already running.
- Replace the `bash` executable with actual target executable that you want to run in the terminal session if its not already running.
- Optionally set custom session name. By default it will set to executable basename and not the wrapper script name. To set it to wrapper script name, you can pass `$(basename ""$0"")`.
- Launch the wrapper script with widget. On first launch, a new terminal session should open but on subsequent launches, same terminal session should open.

Note that you can also pass `com.termux.RUN_COMMAND_SESSION_ACTION` to modify session action behaviour. Check https://github.com/termux/termux-app/wiki/RUN_COMMAND-Intent#run_command-intent-command-extras.

```

am startservice --user 0 -n com.termux/com.termux.app.RunCommandService \
-a com.termux.RUN_COMMAND \
--es com.termux.RUN_COMMAND_PATH '/data/data/com.termux/files/usr/bin/bash' \
--es com.termux.RUN_COMMAND_SESSION_CREATE_MODE 'no-session-with-name' \
--es com.termux.RUN_COMMAND_SESSION_NAME ""custom-name""
```"
9e06bfce1ff8f48c8fb16d4b0ce00674faf39471,Changed: Bump bootstrap to v2022.04.21-r1
e597ece75fd55075ed0b265202d4a9d8c41396cf,Added: ArgumentTokenizer to com.termux.shared.shell
4aca16326c573ce1cd38700131c7f09ec9b77d00,Added: termux-am-library to integrate am with Termux.
f366db0cb328ce969d70301f5a98978a29302754,"Added: LocalFilesystemSocket as an Interface to UNIX sockets in the filesystem. The UID of connecting programs is automatically checked against the processes UID and connections where the UID doesn't match are automatically rejected and logged.
Changed: LocalSocketListener now uses sockets in the filesystem."
33b88b5d4b9f671934f1aab07fe1543c61ab5319,Changed: Set termux-am-library to a tag instead of following the main branch.
3dee2eb486c7205222453adf2eb90a4147b732c5,Changed: Allow connections from root o sockets.
2851175d8b980c3464f3adb4d06bf5a32768fcdd,Changed: Moved the am socket to PREFIX/var/run/am-socket
b025872029d1848c9288cfddcf64a71e18f24efa,"Changed: Updated the termux-am-library dependency, because the repo is now part of the Termux github organization."
007f9cd7f176f1e2d1ff64f533037777bbf1b760,"Changed: Set socket dir to /data/data/com.termux/files/api/

Using the TermuxConstants.TERMUX_FILES_DIR variable to get full path
TermuxConstants.TERMUX_FILES_DIR_PATH/api/am-socket."
cc981d8a0395e5b357f69cac94c049426f9b9364,"Changed: Move `com.termux.app.utils.PluginUtils` to `com.termux.shared.termux.plugins.TermuxPluginUtils`

This will allow plugins and `termux-shared` library to trigger plugin error notifications too and process plugin command results."
c095a6184bebc030e3deef9b20bff1ade2f14088,Changed: Rename `TermuxCrashUtils` `sendPluginCrashReportNotification() to `sendCrashReportNotification()`
02ab8324e986c933992162c5b9a87ca3e0f9d860,Changed|Fixed: Do not add empty stacktraces entry to Error log and markdown String
5116d886c382f01b48e366b0430af76149ba7821,Changed: Add label parameter to `ExecutionCommand` `getArgumentsLogString()` and `getArgumentsMarkdownString()` functions for external usage
6b60adc079f2cdf05c94df72299a1df41e4422c6,"Fixed: Do not stop the app if `UncaughtExceptionHandler` implemented by `CrashHandler` receives an exception on a non main thread

Rename function that should be used by main thread of apps to `setDefaultCrashHandler()`.

Functions for other threads will be added in a later commit."
9c7ec0cebdbfca985ba2f5d920f13268db4789b0,Added: Add functions that can be used by non main threads to set `CrashHandler` as the `UncaughtExceptionHandler`
1b9ca91da5c454fdcfe0b6b706331ad4f750d255,"Added: Add functions to `DataUtils` to get generic, space and tab indented strings"
58c3d427e8153abd511b6e0ff167c614a491400e,Fixed: Log and add to Error the current file type in `FileUtils.deleteFile()` in addition to allowed file types
c81d9c33463e2d8b0b23f3c1522414b2ac3d6315,Added: Add `FileType.SOCKET` support and add `FileUtils.deleteSocketFile()` function
89a08ff01a0397c5b025ec4ee9c350ec81c9c621,Fixed: Allow `Object` class object to be passed to `ReflectionUtils.invokeField()`
6bda7c4fc4d996e15998a70476cbcab5fa26d97b,"Added|Changed: Add `Logger.logErrorPrivate*()` functions which do not log errors that may contain potentially private info unless log level is debug or higher

Execution commands and other errors that may contain potentially private info should not be logged unless user has explicitly allowed it since apps with `READ_LOGS` permission would be able to read the data. A notification for failed executions commands would still be shown if enabled and required."
bcd8f4c419872d51f0ff67891110abb1844fd7c2,"Added: Add `TERMUX_APPS_DIR_PATH` and `TERMUX_APP.APPS_DIR_PATH` and create them at application startup.

The termux files directory will also be checked and created if required at startup and code related to it will only be run if it is accessible. This can later also be used for init execution commands.

The `TERMUX_APP.APPS_DIR_PATH` will act as app specific directory for `termux-app` app related files. Other plugin apps will have their own directories under `TERMUX_APPS_DIR_PATH` if required."
69cc65c3acc523f6ff1e437b1bd26e1fdcb0abce,Added: Add functions to `UserUtils` to get user name for user id from `PackageManager` and `Libcore`
9a71074c7dcf800e36d86f4e2656ad919d5b61df,Added: Add function to `ProcessUtils` to get app process name for a pid from `ActivityManager`
5f8a9222014f2731b09b77208fa4d2632846221b,"Added: Allow users to disable `termux-am` server

The user can add `run-termux-am-socket-server=false` entry to `termux.properties` file to disable the `termux-am` server to run at app startup which is connected to by `$PREFIX/bin/termux-am` from the `termux-am-socket` package. The default value is `true`. Changes require `termux-app` to be force stopped and restarted to provide consistent state for all termux sessions and tasks.

The prop will be used in a later commit."
2aa7f43d1c7739ab57fe50669f84588daf1602d7,"Added|Changed|Fixed: Refactor local socket server implementation and make client handling abstract

- Added `LocalSocketManager` to manage the server, `LocalServerSocket` to represent server socket, `LocalClientSocket` to represent client socket, `LocalSocketRunConfig` to store server run config and `ILocalSocketManager` as interface for the `LocalSocketManager` to handle callbacks from the server to handle clients.
- Added support to get full `PeerCred` for client socket, including `pid`, `pname`, `uid`, `uname`, `gid`, `gname` and `cmdline` instead of just `uid`. This should provide more info for error logs about which client failed or tried to connect in case of disallowed clients. Some data is filled in native code and some in java. Native support for added to get process name and `cmdline` of a process with a specific pid.
- Added `JniResult` to get results for JNI calls. Previously only an int was returned and incomplete errors logged. With `JniResult`, both `retval` and `errno` will be returned and full error messages in `errmsg`, including all `strerror()` output for `errno`s. This would provide more helpful info on errors.
- Added `Error` support via `LocalSocketErrno` which contains full error messages and stacktraces for all native and java calls, allowing much better error reporting to users and devs. The errors will be logged by `LocalSocketManagerClientBase` if log level is debug or higher since `PeerCred` `cmdline` may contain private info of users.
- Added support in java to check if socket path was an absolute path and not greater than `108` bytes, after canonicalizing it since otherwise it would result in creation of useless parent directories on failure.
- Added `readDataOnInputStream()` and `sendDataToOutputStream()` functions to `LocalClientSocket` so that server manager client can easily read and send data.

- Renamed the variables and functions as per convention, specially one letter variables. https://source.android.com/setup/contribute/code-style#follow-field-naming-conventions
- Rename `local-filesystem-socket` to `local-filesystem` since abstract namespace sockets can also be created.
- Previously, it was assumed that all local server would expect a shell command string that should be converted to command args with `ArgumentTokenizer` and then should be passed to `LocalSocketHandler.handle()` and then result sent back to client with exit code, stdout and stderr, but there could be any kind of servers in which behaviour is different. Such client handling should not be hard coded and the server manager client should handle the client themselves however they like, including closing the client socket. This will now be done with `ILocalSocketManager. onClientAccepted(LocalSocketManager, LocalClientSocket)`.

- Ensure app does not crash if `local-socket` library is not found or for any other exceptions in the server since anything running in the `Application` class is critical that it does not fail since user would not be able to recover from it, specially non rooted users without SAF support to disable the server with a prop.
- Make sure all reasonable JNI exceptions are caught instead of crashing the app.
- Fixed issue where client logic (`LocalSocketHandler.handle()` was being run in the same thread as the new client acceptable thread, basically blocking new clients until previous client's am command was fully processed. Now all client interface callbacks are started in new threads by `LocalSocketManager`.
- Fix bug where timeout would not be greater than `1000ms` due to only using `tv_usec` which caps at `999,999`."
53f26c9659df2919522c42f2b1c4c5c29de07e2f,"Changed: Refactor am socket server

The `AmSocketServer` now handles the entire logic for processing of am commands sent by clients and its results. This can be used by other apps as well to run their own am servers. The server started by `termux-app` will be managed by `TermuxAmSocketServer`. Read their javadocs for details.

The extended implementation `TermuxAmSocketServerClient` of `AmSocketServer.AmSocketServerClient`/`ILocalSocketManager` will also send a plugin error notification for all errors to the user instead of just logging to logcat since users are not very good at checking those, this should save dev time debugging problems. We may need to ignore notifications for some errors like broken pipe, based on their `Error` objects if they are normally expected, this requires further investigation.

The `TERMUX_APP_AM_SOCKET_SERVER_ENABLED` env variable will also be exported for all shell sessions and tasks for whether the server was successfully started on app startup. The user can disable the server by adding ""run-termux-am-socket-server=false"" to the ""~/.termux/termux.properties"" as implemented in 5f8a9222. The env variable will be checked by `$PREFIX/bin/termux-am` before attempting to connect.

The new path for the server socket is `/data/data/com.termux/files/apps/termux-app/termux-am/am.sock` as per `TERMUX_APP.APPS_DIR_PATH` added in bcd8f4c4."
7f7d889dd0fa53cd35408a09b9c5686f3602d152,"Fixed: Fix proguard removing JNI used methods for release builds

```
Exception in createServerSocketNative():
java.lang.NoSuchMethodError: no non-static method ""Lcom/termux/shared/jni/models/JniResult;.<init>(IILjava/lang/String;I)V""
	at com.termux.shared.net.socket.local.LocalSocketManager.createServerSocketNative(Native Method)
	at com.termux.shared.net.socket.local.LocalSocketManager.createServerSocket(LocalSocketManager.java:125)
	at com.termux.shared.net.socket.local.LocalServerSocket.start(LocalServerSocket.java:100)
	at com.termux.shared.net.socket.local.LocalSocketManager.start(LocalSocketManager.java:84)
	at com.termux.shared.shell.am.AmSocketServer.start(AmSocketServer.java:68)
	at com.termux.shared.termux.shell.am.TermuxAmSocketServer.start(TermuxAmSocketServer.java:101)
	at com.termux.shared.termux.shell.am.TermuxAmSocketServer.setupTermuxAmSocketServer(TermuxAmSocketServer.java:77)
	at com.termux.app.TermuxApplication.onCreate(TermuxApplication.java:53)
	at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192)
	at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6719)
	at android.app.ActivityThread.access$1300(ActivityThread.java:237)
	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1913)
	at android.os.Handler.dispatchMessage(Handler.java:106)
	at android.os.Looper.loop(Looper.java:223)
	at android.app.ActivityThread.main(ActivityThread.java:7664)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:592)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:947)
```"
4b3b1a5b6a39bd390b430722e523dd623b2ad1ae,Changed: Bump bootstrap to v2022.04.22-r1
b950efec27e71455c9e2c594c7ee45999927ed0b,"Added: Add support for `TERMUX_APP_PACKAGE_MANAGER` and `TERMUX_APP_PACKAGE_VARIANT` to build APKs with different package manager configurations

The `TermuxBootstrap` class has been added that defines the `PackageManager` and `PackageVariant` classes for the supported package manager configurations for the app. The variant is defined by the `project.ext.packageVariant` value in the `app/build.gradle` and its value is used by the `build.gradle` to pack its respective bootstrap zips in the app APK at build time and the value is used to set `TermuxBootstrap.TERMUX_APP_PACKAGE_MANAGER` and `TermuxBootstrap.TERMUX_APP_PACKAGE_VARIANT` static values that are used at runtime by the app to run variant specific code. The manager is automatically extracted from the variant as the substring before first dash `-`.

The default variant is `apt-android-7` and it can either be replaced in `app/build.gradle` manually or the `TERMUX_PACKAGE_VARIANT` env variable can be exported in which the build command is run.

The `TERMUX_APP_PACKAGE_MANAGER` and `TERMUX_APP_PACKAGE_VARIANT` environmental variables will be exported by the app and they will also be added in Termux app info in about page and reports, allowing users and devs to know which variant is currently installed.

Bootstrap of a different variant must not be manually installed by the user after app installation by replacing `$PREFIX` since app code is dependant on the variant used to build the APK.

Currently, `apt-android-7` and `apt-android-5` variants will be built for by the workflows but they will fail for `apt-android-5` since `build.gradle` support is currently not enabled and will be enabled by a pull request that adds support for Android 5. The workflow needs to try to build the `apt-android-5` variant so that pull request builds are generated."
0b4f4561323616b4b99867e6b0ebcccf94c47f69,"Changed: Write only our open collective to FUNDING.yml

Promote https://opencollective.com/termux instead of the old donation
channels that we have no control over."
6213b7f7828b41ad2036431d53bf1994c770750c,Changed: Use double quotes instead of single quotes for all gradle dependencies
623aaebb4a730289d61c02c8898d24e839427138,"Changed: Bump down `minSdkVersion` from `24` to `21` to restart supporting android 5/6 for the time being

Compatibility fixes will come in later commits."
9143ebdc22752c8a3ea79503a3b76f603c8f8812,"Changed: Enable desugaring support to enable support for new language APIs like Java 8 on old android versions

https://developer.android.com/studio/write/java8-support"
a1719d91b3ef32218a0ac6553c659f3e1baab4da,Changed: Bump `termux-am-library` to 2.0.0 that uses `minSdkVersion` `21`
14e9a8b6fc10379819f7e3406692151dc8759e59,Changed: Use float dp parameter instead of int for `ViewUtils.dpToPx()` to not lose precision
fa829623a886319b8b8aa360efde6c348279d02e,Added: Add `ViewUtils.pxToDp()`
677a5800424be462a369622b823e75a88b35a40d,Changed: Add general compatibility fixes for `minSdkVerion` `21`
55dcd09a096931833337336355e38da053442524,"Fixed: Fixed extra keys not showing properly on Android 5

Related issue #739"
c549988434d532caf2e3f471fb783cd48bc1b730,Fixed: Fix broken javadocs links
4e08f76fd20a9d514c41e1888525b0ef661765fa,Changed: Export correct PATH and also export LD_LIBRARY_PATH for Android 5/6 since packages won't use DT_RUNPATH
ab9b620c880f362fe27bcfb611d5eb929be4e635,"Added: Add ResourceUtils to get resource ids from names

This will mainly be used later when MediaViewer gets added."
5290ce1f7745a4c47f88f22b4fb19de2acc10988,Added|Fixed: Add `TermuxNotificationUtils.getTermuxOrPluginAppNotificationBuilder()` helper function and fix notification icon drawable resource id issue on Android 5
007bef81321fd9659b816fe674166f1a9ffd5f12,Added: Add message to bootstrap error if user installed termux on portable/external/removable sd card since its not supported on some devices
7677633e8f5b7845fced2831144a733b43f4ff0b,Fixed: Catch `UnsatisfiedLinkError` for `local-socket` library
18a1a33e83f637a091e32275d83a558fd0c39468,Added: Enable `TERMUX_PACKAGE_VARIANT` `apt-android-5` builds
4d084c02e7d889f8bc8678c5b7439e0a037de02b,Changed: Bump android-5 bootstraps to v2022.04.28-r6
899ef71e17f496fffb680d51ed5834ff0c1157f5,Changed: Bump android-7 bootstraps to v2022.04.28-r5
7b222ba3921faaecd315955883b9634c9893c543,"Changed: Export correct PATH and also export LD_LIBRARY_PATH for `apt-android-5` variant instead of on Android 5/6

Overrides 4e08f76f"
b04f209f17403b5764cbbba246bdea9a6de09efe,Added: Add TERMUX_DEVS key SHA-256 digest to official signing keys list
30cb848639487cc5129b21b3e44d92025e452348,Fixed: Do not setup plugin and crash notification channel on API `< 24` since NotificationManager.IMPORTANCE_HIGH requires API 24
a50387b553afc96173e0eddaa5b37f1e18a24431,Changed: Change termux support email from termuxreports@groups.io to support@termux.dev
37f08c4fccb79c9e8e911af9407168b566e890d9,"Fixed: Fix `Settings.ACTION_*` permission requests for non-activity contexts

This was caused by ce12b8ad

Closes #2769"
c1c46dfcfcff6fe2a21232d4fa2d0092c93e6cc1,"Changed: Change `TERMUX_APP.APPS_DIR_PATH` basename from `termux-app` to `com.termux`

The apps directory will now use the unique package name of apps for basename that can be automatically generated instead of having to be hardcoded.

`termux-am-socket` will be upgraded to `v1.4.0` for respective change."
231ecff5f0837d1aa2831039b64afd07915e1cab,"Changed: Do not modify code points for virtual or soft keyboard events

Closes #2799"
980bf8f0ae8c88658660cf0fd8ce01babb2712f5,Added: Add support to get termux app package context with code classloader for plugin usage
46cfea09ec2409526269b4744a7d699d66527205,Added: Add support for plugin apps to set TERMUX_APP_PACKAGE_VARIANT and TERMUX_APP_PACKAGE_MANAGER from Termux app APK BuildConfig.TERMUX_PACKAGE_VARIANT
d287734abae95107e73c763ccbd807315ca9a9c0,"Added|Changed!: Rename `SESSION_NAME` and `SESSION_CREATE_MODE` to `SHELL_NAME` and `SHELL_CREATE_MODE` and add support for `ShellCreateMode` to `AppShells`

Renamed extras `TERMUX_APP.TERMUX_SERVICE.EXTRA_SESSION_NAME` to `*.EXTRA_SHELL_NAME`, `TERMUX_APP.RUN_COMMAND_SERVICE.EXTRA_SESSION_NAME` to `*.EXTRA_SHELL_NAME`, `TERMUX_APP.TERMUX_SERVICE.EXTRA_SESSION_CREATE_MODE` to `*.EXTRA_SHELL_CREATE_MODE` and `TERMUX_APP.RUN_COMMAND_SERVICE.EXTRA_SESSION_CREATE_MODE` to `*.EXTRA_SHELL_CREATE_MODE`.

Renamed `enum` class `SessionCreateMode` to `ShellCreateMode`, `sessionName` field to `shellName`, `sessionCreateMode` to `shellCreateMode` in `ExecutionCommand`.

The `TermuxService` `AppShells`/`TermuxTasks` will now consider `ShellCreateMode` as well before starting tasks as done for `TermuxSessions` via 5794ab9a

New task command to not create new foreground session and switch to existing session if one already exits with `shellName` is

```
am startservice --user 0 -n com.termux/com.termux.app.RunCommandService \
-a com.termux.RUN_COMMAND \
--es com.termux.RUN_COMMAND_PATH '/data/data/com.termux/files/usr/bin/bash' \
--es com.termux.RUN_COMMAND_SHELL_CREATE_MODE 'no-shell-with-name' \
--es com.termux.RUN_COMMAND_SHELL_NAME ""custom-name""
```

New task command to not create new background task if one already exits with `shellName` is

```
am startservice --user 0 -n com.termux/com.termux.app.RunCommandService \
-a com.termux.RUN_COMMAND \
--es com.termux.RUN_COMMAND_PATH '/data/data/com.termux/files/usr/bin/top' \
--esa com.termux.RUN_COMMAND_ARGUMENTS '-n,5' \
--es com.termux.RUN_COMMAND_SHELL_CREATE_MODE 'no-shell-with-name' \
--es com.termux.RUN_COMMAND_SHELL_NAME ""custom-name"" \
--es com.termux.RUN_COMMAND_RUNNER ""app-shell""
```"
0c22067b5e7b90b8631fa0c8b1032de53f2be3a8,Added|Changed: Add termux site url and change donate url to https://termux.dev/donate
d29e20b0d0b7616be55d9ed22b625f7918ce7750,"Removed: Remove Termux game, root, science, unstable and x11 repo links since they have all been merged with https://github.com/termux/termux-packages"
9547869a52f5c672e0577f772aea9ba986dd84e6,Changed: Update funding link to https://termux.dev/donate
b96fcb78fd9269ee40a3f488a425d35204d38251,Changed: Update termux twitter to https://twitter.com/termuxdevs
042487c2b460c759f5066cd9792d2f385a146f94,Changed: Ensure `AppShell` executable is not `null` before trying to execute it
0fd354a469c4a2943838aa7885c3bcd2525c1d88,Changed: Ensure `TermuxSession` executable is `null` if its empty so that `login` shell can start
575941110956b0c32723da73b739663d06d42459,Added: Add `SELinuxUtils` to get process and file paths security contexts
1788013c80bbc48fafa7bf34712131270ccbf1d5,Added: Add functions to `PackageUtils` to get `seInfo` and `seInfoUser` of package
790481b8027d245bcd8180e95ca3aa42d2c045fc,Added: Add functions to `PackageUtils` to get base APK path of package
f9e9193c4e1e1b0c061d68856e9b673f9d450ea4,"Added: Add package `APK_PATH`, `SE_PROCESS_CONTEXT`, `SE_FILE_CONTEXT` and `SE_INFO` when generating app info markdown string"
0328d15ea77515469f1cd69afd1944f80ff71860,Fixed: Fix duplicate logging of `file` word in `FileUtils.copyOrMoveFile()`
f102ea20b2041723c94a6fd5dd27558250beb5bd,"Added|Changed!: Implement new design for shell environment generation and add support for `MIT` licensed shell environment client

- `ShellEnvironmentClient` has been renamed to `IShellEnvironment` with certain changes to its interface methods, including requirement for `Execution` command itself for `setupShellCommandEnvironment()`.
- `UnixShellEnvironment` implements the `IShellEnvironment` interface as is the abstract base class of all other shell environments.
- `AndroidShellEnvironment` extends from the `UnixShellEnvironment` class and provides an environment that would work for Android shells. This is `MIT` licensed and can be used by users importing the `termux-shared` library or the library itself to run `AppShell` shells. Previously, `TermuxShellEnvironmentClient` existed which was `GPLv3` licensed and it would not have been possible to use it for non-GPL code.
- `TermuxShellEnvironment` extends from the `AndroidShellEnvironment` class and adds/overrides additional environment variables required for Termux shells to work, including setting `HOME`, `TMPDIR`, `PATH` and `LD_LIBRARY_PATH` appropriately. Termux app related variables will be added in a later commit. `TermuxShellEnvironment` replaces `TermuxShellEnvironmentClient` and is `GPLv3` licensed."
13d93ccac70bd5ea7017f606ff05bd0b45ac5fa8,Added: Add `TermuxShellManager` to manage all termux app wide shells
2998558e9ffbac2af2527967a6481100fd911952,Added: Add support in `AppShell` and `TermuxSession` for caller to add/override additional environment variables not added by `IShellEnvironment.setupShellCommandEnvironment()`
29d05cc72c44b42df783b252eb3488b7f4d38c4e,Changed: All `ExecutionCommands` not managed by `TermuxShellManager` should have `id` `-1`
9749360caacc8b4e3486343a44b7e0a8d87edf06,Added: Add `UnixShellEnvironment.LOGIN_SHELL_BINARIES` variable for common/supported login shell binaries searched and add `fish` and `sh` shell as additional backups
afc06cfd0a9855e8443d0b62cd57d8fa9e4547a1,"Added|Changed!: Add `TermuxAppShellEnvironment` and `TermuxAPIShellEnvironment` to export `Termux` and `Termux:API` app variables in `TermuxShellEnvironment`

This adds onto f102ea20 to build termux environment. Variables for `Termux` app have the `TERMUX_APP__` scope and variables for `Termux:API` app have `TERMUX_API_APP__` scope, which allows easier management for variables and know which variable belongs to which component. Some variables that were added in the last `termux-app` `v0.118.0` release have been renamed as per scoped variable design. The `TERMUX_VERSION` variable will stay as is for backward compatibility and will be duplicate of `TERMUX_APP__VERSION_NAME`. Docs will be provided for details of the variables.

- `TERMUX_APP__VERSION_NAME`
- `TERMUX_APP__VERSION_CODE`
- `TERMUX_APP__PACKAGE_NAME`
- `TERMUX_APP__PID` (previously `TERMUX_APP_PID`)
- `TERMUX_APP__UID`
- `TERMUX_APP__TARGET_SDK`
- `TERMUX_APP__IS_DEBUGGABLE_BUILD` (previously `TERMUX_IS_DEBUGGABLE_BUILD`)
- `TERMUX_APP__APK_RELEASE` (previously `TERMUX_APK_RELEASE`)
- `TERMUX_APP__APK_PATH`
- `TERMUX_APP__IS_INSTALLED_ON_EXTERNAL_STORAGE`
- `TERMUX_APP__SE_PROCESS_CONTEXT`
- `TERMUX_APP__SE_FILE_CONTEXT`
- `TERMUX_APP__SE_INFO`
- `TERMUX_APP__USER_ID`
- `TERMUX_APP__PROFILE_OWNER`
- `TERMUX_APP__PACKAGE_MANAGER` (previously `TERMUX_APP_PACKAGE_MANAGER`)
- `TERMUX_APP__PACKAGE_VARIANT` (previously `TERMUX_APP_PACKAGE_VARIANT`)
- `TERMUX_APP__FILES_DIR`
- `TERMUX_APP__AM_SOCKET_SERVER_ENABLED` (previously `TERMUX_APP_AM_SOCKET_SERVER_ENABLED`)

- `TERMUX_API_APP__VERSION_NAME` (previously `TERMUX_API_VERSION`)"
ebdab0e59c702434ead044198dbf4a945fe36c70,Changed: Update `TERMUX_APP__AM_SOCKET_SERVER_ENABLED` environment variable value if `termux-am-socket` server state changes
150b1ff99c280dac09209b16c4149d3accf39591,"Added: Add `ShellCommandShellEnvironment` and `TermuxShellCommandShellEnvironment` to export `ExecutionCommand` variables

This adds onto f102ea20 to build termux environment. Variables for `ExecutionCommand` app have the `SHELL_CMD__` scope. Docs will be provided for details of the variables.

- `SHELL_CMD__SHELL_ID`
- `SHELL_CMD__SHELL_NAME`
- `SHELL_CMD__APP_SHELL_NUMBER_SINCE_BOOT`
- `SHELL_CMD__TERMINAL_SESSION_NUMBER_SINCE_BOOT`
- `SHELL_CMD__APP_SHELL_NUMBER_SINCE_APP_START`
- `SHELL_CMD__TERMINAL_SESSION_NUMBER_SINCE_APP_START`

The commit also adds `SystemEventReceiver` to Termux app that will receive `ACTION_BOOT_COMPLETED`."
f76c20d036e88369c42958aa046a1c0345fdeca2,"Added: Init `TermuxShellEnvironment` at app startup

This will currently cache `TermuxAppShellEnvironment` so that its not regenerated for each shell started since it contains some slightly expensive operations."
03e1d14e1e65e054eeeb0ad672a46c2c17254d3e,"Added: Write termux shell environment to `/data/data/com.termux/files/usr/etc/termux/termux.env` on app startup and package changes

The `termux.env` can be sourced by shells to set termux environment normally exported. This can be useful for users starting termux shells with `adb` `run-as` or `root`. The file will not contain `SHELL_CMD__` variables since those are shell command specific.

The items in the `termux.env` file have the format `export name=""value""`.
The `""`\$` characters will be escaped with `a backslash `\`, like `\""` if characters are for literal value. Note that if `$` is escaped and if its part of variable, then variable expansion will not happen if `.env` file is sourced. The `\` at the end of a value line means line continuation. Value can contain newline characters.

The `termux.env` file should be sourceable by `POSIX` compliant shells like `bash`, `zsh`, `sh`, android's `mksh`, etc. Other shells with require manual parsing of the file to export variables.

Related discussion #2565"
42eee49d308958ee23376eb6e029a7bf61907f94,"Added: Add `SettingsProviderUtils` to get `Setting` global, secure and system namespace values"
b69630355a45d4eb80ae3d35f633280b39477d00,"Added: Add `PhantomProcessUtils` to get phantom processes related settings values

- `settings_enable_monitor_phantom_procs` feature flag value can be received with a call to `getFeatureFlagMonitorPhantomProcsValueString()`. Likely only available on Android `12L+`.

- `max_phantom_processes` value from `dumpsys activity settings` output can be received with a call to `getActivityManagerMaxPhantomProcesses()`. Requires granting Termux `DUMP` and `PACKAGE_USAGE_STATS` permission. Can be granted with `adb shell ""pm grant com.termux android.permission.PACKAGE_USAGE_STATS; pm grant com.termux android.permission.DUMP""` and revoked with `adb shell ""pm revoke com.termux android.permission.PACKAGE_USAGE_STATS; pm revoke com.termux android.permission.DUMP""`.

- `device_config_sync_disabled` settings global namespace value can be received with a call to `getSettingsGlobalDeviceConfigSyncDisabled()`."
c2ddc23ae5bc21f18bc886e30a8b67e1c3c987f0,"Added: Add `MAX_PHANTOM_PROCESSES` and `DEVICE_CONFIG_SYNC_DISABLED` value to device info output like shown in Termux About page

Related commit b6963035"
841c41bf37e8d7a6b8bd20598f56daad6ffccce4,"Added|Changed: Added `TermuxTerminalSessionServiceClient` and renamed `TermuxTerminalSessionClient` to `TermuxTerminalSessionActivityClient`

Addition of `TermuxTerminalSessionServiceClient` is required so that interface methods that `TermuxService` can handle without `TermuxActivity` should implemented instead of relying on base implementation of `TermuxTerminalSessionClientBase`."
79d799a99d5fc3b9caba972079eb7804e0c61129,"Fixed: Fix `ExecutionCommand.pid` not being set for first and background terminal sessions since `TermuxTerminalSessionClientBase` was still being used instead of `TermuxTerminalSessionActivityClient`

This commit adds onto 841c41bf and implements the `setTerminalShellPid()` interface method in `TermuxTerminalSessionServiceClient` so that `pid` is set properly for all cases."
af6ac30bb1b062ccca5813e65380c8cafe20eaa3,"Added: Allow users to disable termux file view and share receivers

The user can add `disable-file-share-receiver=true` entry to `termux.properties` file to disable termux from showing in Android file `Share With` apps list.
The user can add `disable-file-view-receiver=true` entry to `termux.properties` file to disable termux from showing in Android file `Open With` apps list.

The default value is `false`. Restarting termux app or running `termux-reload-settings` command will update the behaviour instantaneously if changed.

Closes #2549"
e75680a88428a01a6a4566bdf1cd0255c5981fee,Changed: Do not re-set component state if current state equals new state in `PackageUtils.setComponentState()`
162469f7ced7ff2d1fdbeb3cd12a50737787e03f,Fixed: Fix message dialog button text not showing in day mode due to white text
b80126fd61de3bcdaee3b38a6f1f4670838c9513,"Fixed: Catch exceptions if failed to bypass hidden API restrictions

Attempting to bypass restrictions while tests are running will fail due to call to `TermuxApplication.onCreate()` -> `TermuxShellEnvironment.init()` -> `SELinuxUtils.getContext()`"
26ff978b0ffc788385f74ada472e5b819615c0c0,"Changed: Use black or white cursor color based on terminal background instead of always white if colors.properties didn't have cursor color set

Credit for algorithm link belong to @Jamie-Landeg-Jones

Closes #2653"
4c47f4f732c9d5e15df6536fa357ff43d0223b07,"Fixed: Fix CSI parameters parsing like for SGR sequences that start with a `;` or have sequential `;` characters

https://vt100.net/docs/vt510-rm/chapter4.html#S4.3.3

https://en.wikipedia.org/wiki/ANSI_escape_code#CSI_(Control_Sequence_Introducer)_sequences

Credits for finding the issue belongs to @Screwtapello

https://github.com/mawww/kakoune/issues/4339#issuecomment-916980723

Closes #2272, Closes mawww/kakoune#4339"
e92a6db06bb910a90b322af7c2813886d2156175,Fixed: Ensure CSI parameter value is not greater than `9999` as per vt510
82b15803126138eef8899e0c7b582713f872cd09,"Fixed: Fix `termux.properties` reload not working if the properties file didn't exist at app startup

Closes #2836"
a2df7d791a5c09f9ed16e5755bb15ab871cee9e6,"Fixed: Fix bootstrap not installing on app install

Previously, bootstrap was only installed if `$PREFIX` didn't exist, was empty or only had `$PREFIX/tmp`. But now with 03e1d14e, `$PREFIX/etc/termux/termux.env` was also created at app startup before bootstrap check was made, hence it was being assumed that bootstrap was already installed.

Now, bootstrap will be installed even if `$PREFIX/tmp`, `$PREFIX/etc/termux/termux.env.tmp` or `$PREFIX/etc/termux/termux.env` exist but no other files do.

Closes #2844"
5fc2b4cd4ae59a7cbfccea60c76019e96efb847c,"Added: Add `SCROLL` extra key to toggle auto scrolling of terminal to bottom on terminal text updates and termux activity return

The toggle will apply to each terminal session separately.

Closes #2535"
f1d411a5abd4d9fce46a8a8545df4b25c24dc44d,"Fixed: Fix shared terminal transcript joining back lines

Regression of 370ac2bd caused in 5f71e3e7 by the (in)famous @trygveaa"
4646aca597b64c9c7e34ee29b611efb2056657d7,Added: Start termux app docs support at https://termux.dev/docs/apps/termux as per termux/termux.github.io@612fa084 and termux/termux.github.io@f9c8d848
605dd6c192de882cea8113b2316fb4bca6bc370a,Added: Add check for if Termux has been granted Display Over Apps Permission if starting activities and services with termux-am-socket on Android 10+
211340781bcb0576ffe100fda2e0ed87d7333d53,Added: Add multi language i18n support for docs per termux/termux.github.io@f234d089e
061dc776bd74101b7917c2c2551ca88d7dda8939,"rename dev_keystore.jks to testkey_untrusted.jks

Hopefully the new name of keystore file would provide to potential user
more info about what it actually is."
6c5607395807122b432514201f560aa7631a4b65,readme: add notes about test keystore
8c1749ef9699e2953c7ca12a976c2fb70a6107e5,Added|Changed: Add `AppSharedPreferences` to hold `SharedPreferences` of apps and inherit termux app prefrences from it
63d035ce39bff075408815b7aded71063aa68cc3,Changed: Update phantom process links
0c14c291b2d8474d2f061576ebe596ae071d4496,"Changed: Use `ShareUtils` to copy and paste text and prevent potential `NPE`

The `copyTextToClipboard()` method has been updated to pass clip label when copying text to clipboard and `getTextFromClipboard()` and `getTextStringFromClipboardIfSet()` methods have been added to get current clipboard."
3f7a93931329d4d5cd10a8ec45eb29126984bd5e,Added: Add support for `Share selected text` of terminal in long hold `MORE` menu so that users don't have to copy and paste to move text between apps
5bc3d2db8d4b2e401928df5cc11a225960a83751,Added: Add `KEY_LAST_PENDING_INTENT_REQUEST_CODE` to `TermuxAPIAppSharedPreferences`
3516f1979f8ab77789048c816cc99effce3c049e,Update actions/checkout to v3
20dee0e9407f71c5189bb075fc32828c472132e1,Update actions/upload-artifact to v3
c8a74dc58898ffee1d1207a125f2b4000d20b39b,feat(KeyHandler): respect modifiers with PgUp and PgDn
29cf9820e1421e06c7d024dd34ddd0b4457fdeb5,Fix GitHub spelling
cff6cff609143d7441b42dad20c058ca26543247,Create dependabot.yml
b1c043d54084d2325b0cfaf3056f54bac14d45a3,update WcWidth.java to Unicode 15.0.0
82f83a2970b86f1e1f16233d8039abff95fc080e,WcWidth.c: fix typo
2f5a6f7de663074df829a62e44a23ee70e932763,WcWidth.c: fix 2nd typo
c6dce125104620befd24b8f14e5a9f5871ed63a3,Fix GitHub spelling
2ac7fd1e565872d10b91157022485c13ab179524,ci: use termux/upload-release-actions to attach debug builds to new releases
b800f1cc819fd549c8ba4e2a3a1fee2f1d916a21,Added: Add monochrome icon
9b274f9a0dfdd17a6610ed27f8ffd62cdce573c1,Changed: Bump robolectric to 4.9.2
93eafffb904035305c129d67e3087b9db85cccad,Changed: Bump Robolectric to 4.10
c1dca29076d43889cd0627080df8f02d38089eea,"[doc](readme)modified the links in file

improved some links to Hyperlinks."
1240c5ca471ee09f3cc2d3b404ec7d55e1079c8c,"Revert ""[doc](readme)modified the links in file""

This reverts commit c1dca29076d43889cd0627080df8f02d38089eea."
ba1fb850bff82b0196387a72206fa905b79cb1c7,Changed(README.md): Improved some links to Hyperlinks
33295decbb73d6c4e53873d7df192ec088d1581e,Changed: Add `PGUP` and `PGDN` extra keys to repetitive keys so that long holding them triggers page scrolling instead of having to repeatedly press the key to change pages
66a9495d91b72119830fd2bafcc9f3e2230f754f,"Fixed: Fix `SHIFT+PAGE_UP` and `SHIFT+PAGE_DOWN` behaviour to scroll `1` line of scrollback history instead of scrolling command history or changing pages

This will work for both `SHIFT` extra key and hardware keyboards. The `SHIFT` extra key can be long held to lock it in an enabled state and `PGUP` and `PGDN` keys can be long held to repeat scrolling.

Closes #867"
11d8e4ff8fd3517842a2687ac5779477cb572fae,"update readme

Clarification why Termux is still not unpublished from Play Store."
9d308c23314375f9d2b9f022f31ca6d7459cda72,"update readme

Presence of phantom process killer on Android 12 doesn't mean Termux is
broken. It could be unstable because of abrupt termination of all
processes by signal 9 under certain cases. But this doesn't mean it is
unusable on all devices with Android 12 or higher.

The word ""broken"" could be too scary for new users."
06230f95dfa05cf4822aa619ed4328cb0f092ef1,Changed: Only show github action builds for pushes to master branch and not of other branches and pull requests
7c262b8d9917d953c4c899089a88b08899946737,"Fixed: Fix toggle toolbar not working due to accidental comment of function in a56ed577

Closes #3258"
55cdef01e7b2c0c1c7946a95e716098bf441256c,"Fixed: Allow numbers and hyphens in domain extension for url selector

Closes #3550"
eef5ac43a72f6391a5360a7c1f123e97dee85182,Fixed: Fix headings in README.md
32cd8a938442536d804ca00b3aef87a9ddd02f4e,"Changed: Remove info from README.md that fornwall is inactive and issue #1072 needs extra attention

Fornwall is active again and work is already being done on #1072 for an alternate variant at https://github.com/termux/termux-exec/pull/24 and the other alternate https://github.com/termux/termux-app/issues/2155#issuecomment-1636732850 will be worked on in future."
cce78cc274ef082e6fab6026d4b532a2a614c02d,"Fixed: Fix dependabot commit format to use convetional commit format

All commit messages will now be prefixed with ""Changed: """
c5b69975e1a0fd7afc445e19174d83e9a4bd10b7,"Changed: Bump actions/checkout from 3 to 4

Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.
- [Release notes](https://github.com/actions/checkout/releases)
- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)
- [Commits](https://github.com/actions/checkout/compare/v3...v4)

---
updated-dependencies:
- dependency-name: actions/checkout
  dependency-type: direct:production
  update-type: version-update:semver-major
...

Signed-off-by: dependabot[bot] <support@github.com>"
e2f0edf4d20bc17c99b39c551708296f2c5c7939,Chore: Add vim swap files to .gitignore
e27f9fa979dfd386e54a94d65d4101eb717bd204,Changed: Update README with info on how to install termux for android 5 and 6
6727bbecc4ddc92933fbc7426cf153d11c09a12f,Changed: Put GitHub debug keystore information in README in dropdown
c84d4804c82c8325d1037fc20a5a847026fa11ca,"Changed!: Update commit messages guidelines in README to be more clear and remove `Docs` as a valid type

The `Docs` refer to ""something"" that is changed, and not the type of change being made. If docs are to be changed in future, it should be added as a scope instead, like `Added(docs): Add some docs` or `Fixed(docs): Fix some docs`."
3b5018b4c79a2c2d218eb6fd570b2f2bebb8415a,"Changed: Update `Twitter` to `X (Twitter)` in README

Co-authored-by: @BandhiyaHardik <bandhiya.hardik1905@gmail.com>
Co-authored-by: @agnostic-apollo  <agnosticapollo@gmail.com>

Related pull #3681"
e4385832b74e0272d6cd9c34c2c14f9be0031381,"Changed: Bump actions/download-artifact from 3 to 4 (#3736)

l"
8e3a8980a849046adbd4156741e1d84047ee1df6,Changed: Bump actions/upload-artifact from 3 to 4 (#3735)
