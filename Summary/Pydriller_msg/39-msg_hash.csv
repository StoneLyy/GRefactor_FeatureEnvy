commit_id,msg
d4bacdf31b1ef95d1e192aa0aa3cf9651ed8f9d4,initial commit
45bc62776a5312e0d5d40712e298247c9bdfed63,fix typo in .gitignore
1903a3ba2b980fd5c0556bfe869333a34411f5f5,initial commit of source from project
a7497732813cff1233667ad41b8a07393c1bcad3,add readme
4dcd5c51d9e15c3eb4e635851a3a3391b7c6454a,Replace disklru cache with an equivalent jar
13b6a3fde4af5c6d841d923f58e4de37d913ef2c,increase target version
8930013603d92aaead50840a8b22e2ca2327225d,remove unused argument to returnFromCache
5f788c90a6d69c917004fe50cc085f6cb4929bd8,Move centerCrop function into utils
9f35fb44d12058cababa7d60c1de7b0f751824ac,"Make classes return runnables to photo manager

Allows for uniform scheduling/cancelling interface
and for all posting to background threads to be
done in one place."
22219f2918d067387143a3eebe5a3252fac1b240,Add reference counting methods for bitmaps
6ce02e8cd583210dcedfcdd748a1f9db5e64b765,"Cache bitmaps in lru and mutables in memory

Removes requirement not to use memory cache on
devices that use bitmap recycling because ref
counting prevents us from recyling a bitmap that
is being used for something else (either by
another view or by a cache). Also removes
requirement to pass in bitmap to be recycled to
photo manager, though adds the requirement that
views call acquire and release as they use and
release bitmaps"
4cd65eb2366b162171d76f8df6dd47b9e13c8734,"Only hash keys for disk cache

disk cache requires a subset of characters,
otherwise it doesn't matter. hashing is expensive
compared to concatenating strings, so use
concatentation when possible and only hash in
background."
9d3bcff816a033b2a8f9f93ae8d338c570fdec15,Refactor out method to get size of photo on disk
da3bd5e1015d9c90c066ed4e9cd07d474650b4fa,"Move getting recycled bitmaps into stream resizer

Lets us actually determine the size of the bitmap
we want to load and use that to see if a recycled
one is available. Otherwise we would have to pass
in values which would be difficult to keep track
of. Side affect is we need to get two input
different input streams from the disk cache, one
to check the size and one to actually load the
image."
37f4761b3d7d008f7adc4f866e383cf91fb5431a,"Add a max # of bitmaps per size to store

Also remove some logging"
2bb9f85da9e0449459869e09fc11e6cc7666ed79,Minor code cleanup
1950a4bf64cbd8a20bb0dbff34a8e6914e0f56ed,"Allow PSR to not use recycled bitmaps

Increases the standalone utility of the class"
50eb50f03911d9270670ea68bf3af29043069bf2,"Allow caching of same photo in different types

Adds an enum to be appended onto keys so that keys
identify not just the size but also the type of
type."
e7b292bab443e478a37af8f68cd7f7c338686b61,"Replace ResizeCallback with LoadedCallback

removes a redundant callback since both had 
essentially the same two methods."
589712b7897fea08cc4588bc2dc977a4a0aeaedc,Don't remove all queued items if token == null
78aa6fcce8f6d5a05a62d435f72be113b903d0f1,Increase # of each bitmap type to keep around
f9a436a1bfb5e4b6901506ea61dc490a9b2fe5ae,Add presenter system for wrapping imageviews
490d51166be490c37e0515de479d7759e1cd6662,"Track bitmaps using hashcode, not the object

Prevents us from accidently leaking bitmaps if
we fail to call acquire and release in the correct
order."
2d8d67d75ae964474e108e3481ca4e4ce5cf08ea,"Loading logic->ImageLoaders, and use weak refs

Prevents us from leaking views if a path fetch or
image load doesn't complete or takes a long time.
Also better encapsulates loading code so that the
presenter is entirely independent of the photo 
loading code."
c63fed175ae10b0c90ecd883da58d04cc88526af,"Replace thumbnail inheritance with composition

Removes need to write load checking logic in two
places. Use a presenter coordinating interface to
keep minimal track of the presenter's states."
1f6fd1482a0015b07d3bd5157f00c4e9e0a7c96b,Only fetch missing entries in disk cache once
a0ef71a0d9b25dc69f22bd10fe8feec90db7d6c1,"Don't cancel disk cache puts

No point in doing the same work repeatedly, might
as well eagerly incur the cost of putting to the
disk cache and avoid having to resize again later."
7d123344ca35c80e24868f9a9f969c80683e80ec,Add more helper methods to thumb asset presenter
82e98eefdf8d3c867f98b138236914e7267a97dc,Increaes the size of the bitmap cache
203c74c40595dfb33aa038be015c7d7981bdb4f0,Don't try to track or recycle bitmaps if < 3.0
d4c1098771750e5ba8fc6c3838c836524b42a81a,Remove requirement to set dimens in assetpresenter
e01000c25ec231389438425c51a345ae34884c1f,Remove log line
de3fdb890a29f7fd547e409a3e130cc672c39f7b,SimpleAssetPath just takes and returns a path
52cba7bd25ed55ff12b348b673ae4b41c5390c4c,Rename Asset->Image presenters
12fcbf8629d2c7df78e075e22ba76380989987df,Rename stream resizer to match what it now does
ef5b145fcd68bb3d4c216b29f0c0b820ab909aff,Use builder pattern for image presenters
c23e55e744febc38b831dd8956831180fb9b1cc1,"Fix a memory leak

If a view hadn't been measured by the time the 
path was loaded, the dimens runnable would repost
itself until it was. For views that are invisible,
this would occur forever, or until the view became
visible. If the view never became visible, the
runnable would be reposted infinitely and retain
its references infinitely -> leaking photo manager"
2f75519799a09db2b467b202df6283fb2c636b3f,"BaseImageLoader manages refs and loader lifecycle

Allows simpler callbacks in the presenter or
higher levels and moves responsibility for not 
leaking referneces into the image loader. ALso
combines ImageLoader and AssetPathConverter 
interface to simplify the external interface and
make it possible to use a presenter with a model
that already has a path or otherwise doesn't need
to fetch one."
e074e84df1af85f0ce6425a8a05d13bc3b07cfe8,Add a way to queue bitmaps that are never aquired
9e19bf0d4784d355f3740371397d74a6d139cac8,"Fix losing track of bitmaps when they are replaced

If the bitmap in the cache were replaced, rather
than being evicted, the listener would not be 
notified and we would leak a reference."
e8f337ac173ee4713592c461a041222838cbe3b5,Use recycled bitmaps when performing a center crop
55e575b69f1b37507e0612c9e3be64169f3717a2,Pass in correct value if image comes from cache
73f79153c3e4c4902374c6300f4c831b089e9d53,"Release bitmaps when we request a new one

Maximizes potential for recycling, each loader now
only needs to hold on to at most one bitmap at a 
time. Before it would hold on to the old bitmap
and request a new one, using twice the memory"
6cd830a540d1fb4c503cff45d5009ba7da494d6e,SimpleAssetPathConverter is not abstract...
4719e28963b9efcf509549c76fa9f6eb71af01e9,"Add load to get an image assumed to be given size

Allows us to skip the somewhat expensive fetch of
the image size from the data on disk to retrieve
a recycled bitmap."
513575b90373f263b08df6b3d88c2bbb520cfd69,"Add a clear method to image loader

Also don't cancel load tasks. We incur the gc
penalty early on, so though cancelling might save
some cpu work, it causes more gcing and worse
performance early on because we toss the allocated
bitmap rather than storing and reusing it."
45a8b2bbb2d6cdc4ab8938bd4c5f109b9453173b,Add an AsIs photo manager loader
142a8e5dc4f035b44093d3d84715595b50585c72,"Delay image fetch until view size is stable

Fixes a case where we load an image for a view 
part way through a property animation so when
the animation finishes the loaded image only fits
in part of the view."
5648d3a9b4ec2a12bb48c98792e0767ae245443a,Reset to a placeholder when clearing a presenter
22ed787c395cd0b7dac301f2fc45f291e210bc61,Reset to blank if no placeholder is set
140bc3a11a2415b100a3691bfe2ce378022fefe9,Increase the odds of letting an animation finish
1afd6153d474f6f54a9b42d0df263e48ffaf4154,"Refactor ImageLoader -> PathLoader + ImageLoader

Also create a photomanager package and move 
PhotoManager and related subclasses of image 
loader into that package."
4b422e94f9f807efa18ee641295fab9fac18b893,more package cleanup
808de8fcef7aeedd7bb11648343f2db61d40403d,PhotoManager->ImageManager
3f14eb04d829f612b559bd6099141a7e317d4a29,Add reset placeholder to thumb image presenter
47cb98175b5d600567fef273e33e534e8fda704e,"Make disk cache and job generator synchronous

Reduces the number of callbacks and simplifies 
calls to the image manager."
86d11d698ff6aa979c6985c47370eeb6d4bfb463,"Add basic options to ImageManager

Makes it possible to specify app version, cache
sizes and use, and whether or not to allow 
recycling bitmaps"
f3924bdddf58d6482d8100cdd75398ad0aca26d6,"Don't make subclasses of loaders use internal cb

Simplifies subclasses and makes it easier to 
make callbacks leak proof without sacrificing
safety. If the subclasses have a strong reference
only to the internal callback, they will not 
retain a strong reference to the presenter or the
image view since the internal callback only has a
weak reference to a callback generated by the 
image presenter."
abd8776e1ddefb12d217415ad1487ead992169d9,Handle null images in image presenter
34822333800db30671f408890ea38870d8f8a127,"reize job gen + resize utils -> ImageResizer

Also move into image manager package"
2dbc7d62bd55ba0932cc45d4f97f2a945ee76c44,Move cache into imagemanager
defb867d7525e08463f6a2783c5edb34439282cd,Combine Photo and ImageResizer
04361f593621bb747f9f6e7e74228c9d8890c99b,PhotoManagerLoader->ImageManagerLoader
f17bc80dbaba84a68879230e3fbc2ddbc707814c,imagemanager package->resize package
720184018b3784a07b8af2c1fb136bf18a200256,Update direct path loader to be simpler
7af125c04ac080c1c1609e5d96aef54062998c09,"Pass path and model in to loader lifcycle methods

Makes it possible to do more intelligent things
specific to underlying data after a load succeeds
or fails"
06371e3cdb68be5ea7e8e2f9c2e6e2a3831dc8d6,"remove recycle calls

Sometimes the recycled bitmap is actually returned
and displayed -> an exception"
9da7a0a7c35af75a6c477f1fc4a6ede27aa41e2b,"Lots of documentation and a few name changes

Removes Asset from everywhere..."
25df36450c0cb82c37aafb2f4df527d0e1e1fdea,Move source into library folder
a3a23a8d53117ce1792523f5e6fde126b6efb48c,"Recycle inTempStorage and buffered input streams

Drastically reduces the number of GC_FOR_ALLOCs
when the number of resize operations is high (as 
in a grid view of photos with lots of columns). 
Also resuses more code and refactors out some
methods"
79c7d1f55e62dfb9588a0aa1c60f462c83eecef9,and sdk min and target to library
b362a3df8471b8d8716b5747690b492e8fb2a984,"Add start/stop to disk cache

If you open an already open disk cache you corrupt
the journal which wipes the cache. This is an
effort to avoid that behavior."
5a6c20ad694ddc0aa7ed76745eb61ea6f45889ae,Add an option to set max # of recycled bitmaps
1ba9a837563245b9b1e21c3cf7c696661bdb11b3,"Fix a bitmap recycling issue

Doesn't really speed anything up past the first
load anyway..."
2b84d41f0cff5e824d6aad39893b2d5f6155396c,"Remove lots of static methods from ImageResizer

Allows us to pass around fewer method arguments"
d8e2236aa4acb272a849db727c9091bb4be92417,Add ability to set default options for resizer
60d4a53813e96d3945c17e06954de35128570288,More static code cleanup in resizer
51c51e7fa4d247864f3debfff8aaff4078aaac7b,Initial commit of flickr sample
b15698d662f5c20bafd6958decc05f168b792a8b,"Change handler executor to post at front of queue

Better performance when scrolling"
a02a4a4d0b3a4e1518f8b40e260095c22edd8ebe,Add searching UI
77fac9940dba5b079addfc155bde4f493c8cd8df,Random changes to make HttpUrlConn faster...
5a82c4f602293960de89aa1065b2e4cfb84aafb3,"Add size based image downloading

Download smallest size available that is still
larger than our target area."
df5ba684898ad99c7b4c7b6dd4f11ba6656cddfa,DownloadWorker->MemoryDownloadWorker
ae8259eaee73dc4f96b0bd06e6e959687e37420b,"Create Fragment layout with tabs for sizes

Adds android support and ActionBarSherlock as
dependencies"
a36330e9cbe39da17d9f6687c259b222b5716593,2.x fixes
82ab4564086ed271e3d807c18e55d15b9285eab3,Make tabs swipeable
4456038ea9cc2ae9b24239252a0efe370e9916de,Naming cleanup in flickr sample
aef036f9ab558bb32e1cb81f8623fb2b886f2840,Add list of photos + title page
f0c4c377ac61e6c050f1dca1310d4f680c11e62e,Center the columns in the grid pages
f1f7d28a8386cf7ad4d7ae3ccbaed5ff2f81a98f,Code cleanup in search activity
949f090551894cc3330000bfe2ec1ae6086a7cb6,Naming cleanup
6630d0b66d2fc7e9db892d90760eb8ceab5bc805,"Doing lots of io on ui thread is bad

who knew..."
dd244f81188176cfd4e606a5cdb11c370fdb78ad,"Only download photo needed by largest page

This way we only download one image and resize it
three times, rather than downloading (up to) three
images and then resizing each one once."
0019cee25261c36372c30a63556d7988d9fde95b,Respond to ime search button on keyboard
a744e2eef3039df0c7b0976d970e368300c92021,Allow pending downloads to be cancelled
159a652a827b1d0f95e1ce6fe5a4a1f219ef16ed,"Return futures from ImageManager and cancel tasks

Doesn't interrupt threads and cancel tasks being
run, but it does prevent queued tasks from being
run. This means less waiting during scrolling and
less cpu/memory useage."
b12f95f1da31e9c6481c216b8b0a804c64424620,remove unused HandlerExecutor
05511c87dfa05b8b39448942c6cff2f508cbf305,"Revert to using a single background thread for IM

Using executor services adds locking overhead that
we really don't need."
10d323b2075929551aaa7e274a8708c372d1a475,"Only touch bitmap cache on one thread

avoid extra locking"
b1cd831ea27a7d9425afece1ef4b8d141d71da3e,Don't check disk cache if not using disk cache
c519db07159591f47d21e3a183540e755ea6c2af,Catch resize exception and inform corresponding cb
1d5dd90f4a8f85ee34fe4249b94018139e57de95,"Increase odds of recycled bitmaps being available

Occasionally loads seemd to be happening before
the corresponding loader's release of its previous
bitmaps which lead to lots more allocing then
we expected"
c716627a7b36e6815b815354abbc01cbd61a68bd,"Fix an Option only available in 10+

We support 9+..."
55ad7efd3add586976557a7be0bcb9cfd431c13c,"Try to resize if disk cache load fails

In case is corrupt for whatever reason we don't
crash or give up entirely"
9630d3257254d0fbb4750b51aa6bcc78181d521e,Reduce the default memory cache size
21bd36fa07ee82704a3d7a8788ba2157df855efe,"Actually use options passed to image resizer

Accidently were always using default b/c of a 
naming collision"
713a2a87a8117cb5181c3ab95380555e2d65aa0b,"Fix NPEs if a load fails to return an image for
whatever reason"
1060a63023f1e07fd579d0edd94256560f0eab7d,"Use integer hash rather than string for image keys

String concatenation is a lot slower."
1e9842ecc1a712a80f8ef98238adf2fa295d612a,Remove a noisy debug log line
37a81f81e509bacd8ecc1624ea7bfbe9ac89246b,Fix key for AS_IS images being 0...
a73208437d43a27ac88fe3ebece441b378d15916,decrease minSdkVersion
aa29e222d0aecb49f6f675bc1fd8f44efbfe5849,"Be more paranoid about catching disk cache excepts

Some weird race conditions around image saving
and cache opening/closing."
53601580ae7938c212373b8513f60d745c70fbb4,"Abort can throw same illegal state as commit

So don't try to abort if disk cache is closed and
catch all errors in error handeling code so we
don't cause a crash trying to abort a failed 
commit"
ef5a3a5b2d4187b1f62e6d11de3d8fd24676826a,"Replace library disk cache with our own 

This is unfortunate, but has to be done because
the disklrucache jar is just enough to put us over
the edge so we run into linear alloc errors on
older phones. Hopefully this can be reverted in 
the future."
c8c18c3138544306880fb94d4bdd9c83d8969f40,"Be more paranoid about threading in disk cache

This is not really a solution, but in case
open and close overlap because of actions on 
background threads started by two different
image managers, this will at least let state
be consistent. Needs more work to avoid this
problem."
81d2ccfbb0bf21224db07b2f85942d034e72e163,"Handle cache dirs being null + build version check

Apparently either get cache dir method can return
null in some circumstances. If one does, try the
other, if both do, return null. The image manager
will just not use a disk cache if the cache
dir is null. Environment.
isExternalStorageRemovable is api 9+ and we 
support 8, so add a check before using it."
118ddef77f1493f4516c15402ce2c9edf93b60af,Don' acquire bitmap for memory cache when not used
1f6d436ff23669fcdc35381850a437f09a421804,Remove an unused option
48bec5d2675744bbefa03354860bf676517834ae,"Allow ImageResizer to resize with multiple threads

Makes associated classes thread safe. Also only
allows disk cache to be a singleton, and replaces
pause and resume with a single shutdown call
to the ImageManager."
0ba5fb69da11dbe8b0dfe079eb879080b81d20b1,Fix a typo in flickr Downloader
7c8d3a766ea749b104a75d0c819435069185bdb8,Update FlickrActivity
c323a7d8372399f72f3790b5d1d3209f5ec79a52,resizeCenterCrop -> centerCrop
eb2ab7b42bcb26de42cfba78d94f1b7e8c8cd5ac,Add input stream interface to ImageResizer
f62b7ead7e48510976d191d1f6149e403703c999,Naming consistency
089c40976de1604596bbcba8612218b00af06b46,update support jar
3bf897c290c20b110abeeff2828bf32eafb52e4d,Avoid NPE when bitmap's config is null...
0be16397ca3146dc1bb58fb3f45d17348703aea5,Maybe fix a concurrency issue
364c29c02d829774995831302b7497f054a240f7,Add method to manually set dimens on presenters
538236fdf4d3854552ea1624dd17ea8e5eb8cbce,"in ImageManagerLoader, handle null paths"
3fa36d8dfee75ff064b855cbf370afe21b649a83,Make disk cache compress format configurable
363dec66e07972c5ecf5126f5d8ef128a9f4aa1b,Throw errors instead of using assert
82360b66ccf73d037e8baca58397b380e3df07ab,"Use layoutparams to determine size in IPs

Allows us to remove setDimens method and also
avoid some uneccessary size determination steps
if the params dimens have already been set but
the view itself hasn't yet been layed out."
a8ead54938ac8b922eacd3b38687529c1c69ea9d,Fix race causing two loads to use same bitmap
c3b301f1857fd86f98b63e2adb0879152791e9b2,Move size determining code into separate class
fac5216512ca376a9128307ea812fba51970a7b1,Fix type in name of recyclable is
03f18152c182cf110389a6d626c656518853ceba,Fix warning on BufferedOutputStream buffer size
35d81b95812cd086e2145dcf20319c40316c59c3,Small locking optimization rejecting bitmaps
d9bf71390f35d5311b7b9fcde7c89dc0d4a36bea,Explode inner class to main class in LruPhotoCache
411eee0e6eeb6b2ba9fc4d9ceba2aaffe9d1a73a,Pass exceptions up and handle in presenter/loaders
70fd3bd514ec623235d4f0432d26e5025e7103a4,"Rename loadApproximate loadAtLeast for clarity

Hopefully a little easier to tell what it does.
Also updates some documentation"
b8652f6e25e0f5d61640d7055ff0c8b4a7ccec55,Add a load at most method
51535aa1d870c8e097711673fb4ccc6aa7e35f99,Code cleanup (spacing/old comments etc)
6b909bbe47e21c78c42a1337ca45b8950ba08c60,Catch rejected execution exceptions
71cfbc2b968c8bfaf42ce8a5f75a6bdd877ffa3e,Add input stream based api to ImageManager
2cecf0c45346ae0602680003d98817605b2c8e77,"Clear image presenter when get a null model

Resets the placeholder and cancels old load. 
Probably makes more sense than doing nothing 
and allowing the old load to complete"
e89a880b0fbffa78ef37299e3fc3068c4c7f554a,Fix memory leak in ImagePresenter/SizeDeterminer
5652d207f3c538353301a0bc22065b8de3f992f5,Use a dequeue instead of linked list in sbc
cdd5d2d1ccd23f74c8a42887d409ddfe150c2201,Add an external class to track bitmap references
a42166e132f6902051a583e8aff6aca9b8f71e4c,Fix race causing bitmaps to be recycled 2+ times
6e1e771e040ad99be5953c307765ca385c4a35ed,Remove a uneccessary var
2a2882e26b572d6d69939ac553cd840059caee3a,Use per bitmap obj instead of map for ref tracking
2e8da58144b6337e8bcd270058b743630764c9e9,Fix size determiner setting size during animation
f7de145d9bebfdd354a234479e1d1f28e1d3e11b,remove null checks for disk cache
f13c881b00196dcfdf4e631129cda50de6e3446e,remove null checks for memory cache
5e6ad9282157314e8557251e43f4df80dae31247,SizedBitmapCache -> BitmapPool
d63075c870f203874bae02ede0058555f6d8e08a,Minor bitmap pool optimizations
b4ac01f44816fafed761e98b406eccb34c1fa8e9,BitmapPool -> ConcurrentBitmapPool
9b2c9802d9eb0fb9aaa25388ad064a41b95186af,Remove null checks for bitmap pool/cache
ec22143311afbbcffa25f0babcb12c71826897d4,BitmapTracker -> ConcurrentBitmapReferenceCounter
e356a4f7ddc93843f8a28d810ff4c8777032411c,Remove null checks for bitmap reference counter
4e909cdb8c804b85d7df78a80b87d3077cd896a0,Lock less in the concurrent bitmap pool
ea13d7e8ea6508ec167622d747c415c6040aff19,Fix some typos/bugs in disk cache journal
cf05cd678cb38154b8c54b5b9dd4526c00074c25,Use concurrent hash map in disk cache
32686b6b43ef88b4714e3e2bfcc9dc4290e7ba21,Open disk cache during singleton creation
adf463ee840af5d27be64698f9d218f041670e64,Fix not limiting # of recycled bitmaps per size
58ba89d87f7dc53dd734f32db1cc9c3d56027f44,Try to remove and add less from reference counter
d1066dce39cc2d2dfd5e95b6a1adb5ca717b8c3b,Use background priority levels for threads
0c001203beadf5130eb36f72180583f797af7709,"Store exactly resized images in the disk cache

Doing so seems to noticably increase the speed
and smoothness of image loads, presumably because
of the simpler bitmap format we use?"
fc2ec8570105927bc88b22f8538f5053ba7f05b5,Reduce some redundant variable passing
e954f763e7f47e4e632cce8cdc7276bd3816bf0a,Don't use ArrayDequeue since its api 9+
785ee3bd2f343b795a86d07fbc508ef5fc7883fc,Delete from disk cache if we fail to load a photo
a1210954ad6c1a5c7859161a2beeabce69828024,"Revert running IM thread with bg priority

Makes image loading too slow."
d344878a73dbdf0d6221ce3f4daaa9f97c33d719,"Don't post jobs to threads after IM shuts down

If we do, the bg thread might be dead which will
cause an exception when we post to the bg handler."
405de1fc5b1fac1690ce03ec630f584b398e158e,upgrade to latest support jar
309fea9a2ecf04b8466cc3869b5af798199cd8d5,Replace disk cache with open source cache
34ea26f6351441ce8592c4800d5588680b71cd93,Use a builder for ImageManager
7aa5da14cdc71cba8286e737746303a9e933375f,Fix sample project for api changes
1dfef8c093fd8f6cb014f60ae321b25ded43e641,Add bsd license
a0e21bfff1d3e17bf2edb7b15c43036a6306debc,"Remove set default options in ImageManager

Simpler interface if people just set instances of
default disk/memory cache that they create"
ac51901554a404bfcfaaac90e93bd1cec00ba5f5,"Make DiskLruCacheWrapper a singleton

Makes it more apparent that options can only bet
set once, rather than each time a new wrapper is
created"
6ca35fac19ce301c9ffbabe4e940fe7762266a3a,diskCacheFormat -> bitmapCompressFormat
b08c284744aa51abde6f1ec7d485225fb26f7657,"Move getMaxCacheSize to ImaageManager

Similar method to getPhotoCache, so might as well
be in the same place"
e87f04030d4bd0570551ae9333085c4d8710a443,getMaxCacheSize -> getSafeMemoryCacheSize
75a875cec2a817841ea688a46ec4f1414d0c0202,Add comments to ImageManager builder
3621c9213a3fc613813252d1fc741894324f6af8,Update comment on ImageSetCallback
230a51b0aba6ab1708e341f648b06ff70eda6d03,More ImageManager comments
df887db6053d8e6fbfe8a1905194af59b3cf9376,Remove unused activity from manifest
1ce6faa2aa74941b2a9b3f478f62085e30640b49,Add a rough readme
939a18deade2490d0693f62ee86bdccbc9485127,README -> README.md
8856168e303b108a5e0c5f1554573670083349e6,Fix bitmap recycling bug
2cdb0abe14e75e7497c6d39d92058ebeb3499694,remove unused readme
ed7d496cef495d8a98684bfe9e911013eeb53433,"Replace PathLoader with ModelStreamLoader

A major change that should allow a larger range
of images to be used (i.e. those to which it is
only possible to obtain an InputStream and not
a path) as well as making it possible to download
and store images directly in the cache without
an additional class or disk cache."
f68b64aae73cffd31b866b559bcabe4b600fbe85,Get the flickr example working again
26ad9c93f342f04f40d25252603c88d89a22a56b,"Use direct loader in list, downloader in grid

The two grids will download each image once and
then resize it twice, the list will download and
resize each image separately to demo two different
ways of implement model stream loaders"
b71bf819c59c4b8ea5e6a8b0929f5057ba6a01e1,com.bumptech.photos -> com.bumptech.glide
06e2f9826fe25904f0c9a30792e1df56b136739e,Update and fix some typos in read me
6ed6e22c7d4cbcf5b8269004ae37d72f0e0a5446,"Use a single InputStream to load images

requires using mark and reset instead which hasn't
been 100% reliable in the past and is difficult to
recover from when it fails. However, increasing
the mark length may make it reliable enough and
it allows us to avoid doing things like making
2 http calls to download each image."
9d75fc15b0d774a5736edf1e0c4fda1826fa83bb,More graceful error handling
678c91747b4f8f201767a20f3e0c8beff235d2e3,"Throw a particular exception if mark is invalid

Will make logging easier"
3199de78a097f3aa7394a98a0d5528bb3170a043,"StreamsOpener -> StreamOpener

Now returns a single InputStream instead of a pair
wrapped in an object"
a1ccb33c449424229fdcbfeb565cca7ba3b1de1d,Prevent BitmapFactory from overriding mark size
52207765f3e06c564f3d124bf4d6d14d1c6add3e,Make DiskCache interface return one InputStream
806522ed49bab96c11780a7986bd16767d1a0226,Pass model to exception handler
64b6d88e922b1818976a45ed30754b18e9b9e6e7,"Fix flickr api return url for incorrect image size

HashMap.keySet is not ordered :("
2eeb841d3f04c79d10517195318a93ac4056c86f,"Remove path interface in ImageResizer

Also update/correct the comments"
ea1722f9a4fd091493a4eb6e9d7b106df5e33dd3,"Fix mark position causing gcs

if mark position > bytes size, the input stream 
will eventually allocate a new buffer up to the 
mark position. This prevents those extra 
allocations."
3f76d6881419600d6721d51730701c86362d528a,Stop load in ImagePresenter if id or opener = null
bf40ba3600e6204efe8870fbf1f065519f1478a5,Lazily create files from paths in FileOpener
9c3d34adfd233c305e878b53238e9cbbcbf11271,"Fix extra allocations when marklimit > buffer size

BufferedInputStream would double the buffer size
each time it read from the input stream if
mark limit > buffer size, including the first time
before any data is read. This change prevents the
buffer size from being increased until after at
least one buffer worth of data is read. In turn
this reduces gcs with a large mark limit relative
to the buffer size."
ae2325db98f6703cae43c256c047c7a01bc787dc,"Add a default exception handler to log exceptions

previously they were caught silently"
ccadf8dc72fca1321df26468658cbdcec519df90,Add memory limited bitmap pool
9af835b6ca34692bbf437ec1ac0f0222db3232b9,"Default to SizedBitmapPool

Also unify builder interface re bitmap pool so
it matches memory and disk cache (either default,
an implementation, or disabled)"
924d7d1fe10924e1a56bf00e84910eb658de4fbf,SizedBitmapPool -> LruBitmapPool
c5d8fb140b19287943a0b67d7a766f51178d3813,"do bitmap ref management on a bg thread

Reduces the number of locks the main thread needs
to acquire and the amount of time they need to be
held (as well as the contention for said locks)"
263522db1736bf9a60367cd5456689ce079ccb68,Update mark limit and buffer size in ImageResizer
a4c32099c4041260ce386e9ec8d6f454387d2ee4,Simplify getPhotoCacheDir in ImageManager
4d2a2db41999cb6f2c79a6b63a93ea6e2adc49b9,"Allow DiskLruCacheWrapper to throw IOException

Allows us to log and monitor the exception as well
as forcing us to handle the default case"
d76f655fc29c5b3858d6657f22a5c656c3143767,"Create a simple static interface for Glide

Allows most of the functionality of the library
without having to directly create and manage an
ImageManager and ImagePresenters.

Doesn't currently allow for all functionality and
is somewhat less efficient because it encourages
allocations of unneeded objects, but it is easier
to use and should cover enough cases to be useful."
e8c751e00464b2d230840b763cdf3fbd06b32264,Use the static Glide interface in the flickr demo
2e20c9010e01a0abe4d87a2b2318dd7591f86a5f,Throw an exception if model stream loader not set
ee7dd443b1e92a36147f692c4b91b46d8202531a,Cleanup some of the sample app code
a8186fb26cb4eec77182935578dd6cdbe7ffdda8,"Refactor example to handle fragments correctly

Should fix case where searches would complete
but no photos would be shown"
bd2bd139f4b2246924dc5546140c97fc14b3c8b5,Convert flickr sample to use Volley
c02e315e8021c520780066b82d1063fc9137099a,Expose downloader and volley request queue
e13dcedf144c02927c122fae32179f460b21fef5,"Synchronous StreamOpener -> Async StreamLoader

An extensive but relatively minor change to the
internal interfaces to allow for asynchronous 
InputStream opening in the ImageManager. This
allows us to use async http libraries (like 
Volley) without forcing us to always start a 
download and then check the ImageManager cache
only after the download completes."
c717f77320080cf52eae84f740f40911b5bf0733,Update the flickr sample for the new interface
2e68b553b87ea27caadc67e0561dd1b7d52ed962,remove volley sumodule from flickr sample
8470694e1bc5f232d39b52740f5fda2ca3f00d29,Add Volley as a submodule of Glide
633966f8087dc4ef5e52ef0f559ec8090fbbc945,Make Volley default Model/Stream loader for http
ffecc1458c51228061cfed14d7f81c7b59db3f61,Use Glide's Volley api in flickr sample
f52e773c00be9c7b5ac244e0575cc75a4671750e,Gracefully handle search failure in flickr sample
8a7822194beb73ad7ea4a0a8dc1fa3e42eb6128d,"Run resize tasks in our thread pool

Previously would have run them on whatever thread
the callback was called on, which may have been
some external library's thread."
42dde938ba8adeb26321f6205091a8923c4fe53b,Update the comments in the Glide singleton
0f38de643fb07ae6761ad4d3e28586ab5e42e9b7,Gracefully handle search failure in flickr sample
56e62046cf9e1bd2d341b6455a9b81b5757e269c,Update the comments in the Glide singleton
78d7c407e08dd6167fa8d3a3f8bc4b435a841ca0,"Add a BaseModelLoader

Allows us to remove the repetitive
ModelLoader.close() -> StreamOpener.cancel()"
b76f0ab40cb6c420eea98f0e22aefb84595e2c43,"Clear loaders before load in ImagePresenter

Allows us not to call clear before new loads in
all of the loaders"
e52b12cbd7528e8c483115f271bb891cc64d3ab3,update VolleyModelLoader to remove repeated code
cce6b7feba2da45e9b4506ad8da78bcd93d7f3b1,Simplify the exception handler in ImagePresenter
5a2292b67fb8a9765e20782141705cdff8d46228,"Make compression quality to diskcache configurable

Also decrease the default from 100 to 90."
058ef77ccc7fd40a80a2da72dc97695c7dda2c0b,Javadoc fixes and updates
b08f94d1c2e5b9d6fae4fd015567d7c0c74b0e9a,"Merge branch 'async_stream_loader'

Conflicts:
	library/src/com/bumptech/glide/Glide.java"
6cdb8ce663c94e8b338179dca5f63da87058e2b3,fix project properties
523c00b11a3eae589ef205d1e0ea0e05502dee95,add Makefile to setup glide
c5f07ae8fa45ff992839993cbb1a2c9fb8e09bbe,remove unused resources
ac0a0f206f0761e283fb89aa205f02255b234ff3,Update and simplify readme
87c14759ce42401877f5e61d5349b91dd6ece99a,Fix a typo in readme
4afd69b78f36a0523be19185a3a3b4a1f72b771f,"Use instanceof not class comparison

Also fixes bug where we were comparing objects
to classes"
5855e3a115f40e2d44dca044768470a8e5b71bb5,Always set default model loader in Glide.load
4e8c4e61ae9f011c1bfccbace9c24aee61865bf0,Add default loader for Uris for Glide.load
f4e3c7600c1698912a1a374c172e4dd9c40c2ede,Add default loader for Strings for Glide.load
9d7d33af828f2b966c61b03bd78f11d67099369d,Check if strings are paths on background thread
1f05d2b70d1deb5b13e48841894d400aaafe354f,Use Volley in UrlLoader
c5a59166fb420fd6a1595a69952092877b9a5c51,"Fix an NPE if layout params not yet set in view

Can occur if you call new View(Context)."
147888d6c7b21d9d401b8fcf2b1c6a4bfbb995aa,"Remove a null check in Glide.resizeWith

Its not any more work to just pass through to the
builder, so we might as well (even if we don't
use the builder)."
944080485b6f0b1f412ae9f33cc49088cc8e39a9,Add test project with basic Glide interface tests
93988c0256d2bbd47ca5d45b316efe9de7dbfd5f,"Base FileLoader on UriLoader

removes some duplicated code."
1361bbeef0d664e4613787346a3bd1d442fc9f4b,"Remove volley dependence in uri/string loaders

Also removes the now unused FileStreamLoader"
b4f36c0e55facbe749e12501a920fde0316d74d2,"Simplify StringLoader to take UriLoader

eliminates the weird dependency on UrlLoader in
StringLoader"
3e3790c166fc84352cef9c75c6037297d1b9fe64,Allow https uris in UriLoader
42c4c4267394404562146dcd0f8064e188a2fe06,Add tests for string and uri loaders
cb5e1eeb05e904c6175419247f528ac93f9f8e21,Add default loader and support for drawable ids
54bf8809a40a9c65321439b4189a8cc3c39d0700,getStreamOpener -> getStreamLoader
6bbe4343c1e08c4b2fdb56a23b69c767b89962bc,buildStreamOpener -> buildStreamLoader
f80b960f9943234f88fc4707ad49b24e71840638,Remove redundant casts in getModelFor in Glide
e705c76eb127df626b6c007292ce0699c5a65ba0,Add methods to set placeholders in Glide.load
712e2931fb8d86e53cb4406d988d9b094aa1d98e,Update some of comments for Glide.load
388a07251f6558aac332bab015193db9cadadd3f,Add gradle build file
612bb49c9045a723e2da145ef3647707b731b6c6,"Tag views with ImagePresenters in constructor

This should be safe since we're using tag with
an id and it eliminates one extra step required
to use ImagePresenters."
d66ef49022858664841d3d60d0d531bdd13bd882,Comment updates and fixes for various warnings
8dcf3324d59efb354331f18089674fe1bcc3d4aa,Add defaults for loaders using Glide singleton
b1ef5cd4b890c9f5020f3f9a03f2bd24a2084d42,"Cleaner and more efficient Glide api

Reduces the # of extraneous object allocations by
lazily creating objects only if a new presenter is
needed. Adds some metadata to view tags to
determine whether or not options for a view are
the same, so an existing presenter can be used
or have changed, so a new presenter has to be
created"
7734c982edba8a11d04b1e3d2488b419de685ab8,DrawableLoader -> ResourceLoader
a27890fab33e5e12ecef00ef06f6b0daf2bf78a0,"Remove generics from ImagePresenterCoordinator

No reason why it can't coordinate presenters for
different types of models"
823b3dfe54d050bfbd52e1868973ad1ffb394749,Remove misleading constructors from RecycleableBIS
9d3c7b20ae60ddca62a1a98e88995bb5606b521a,"Call cb in background in VolleyStreamLoader

This means our code in the cb will run on a
background thread. Though all we do is post to a
thread pool, this change means we don't need to
acquire that lock on the main thread."
eb30abc2c999b3652823154b74c34a2b3351ce35,"Increase Bitmap compression in flickr sample

Increases # of images that will fit into cache"
340b387521de3138bfbdf013c53f5a81a737fe5d,Updated readme
a0d8c5119bb1350a0e26a861270f1b372cbcc90e,ImageSetCallback -> ImageReadyCallback
a10ff7ac7daea777368d642c5b0bf400000deed4,Add an error placeholder
d50efbfe3f305040ff0f1880238a1517ab7091c5,Allow VolleyModelLoader to set a retry policy
78790c322a30ac2e62498b79bdc965832bf2342d,Handle views with wrap_content set in Glide
5fd05ac34bfdc21daf6bdc9c7fd15a1ba8237995,Refactor duplicate code in ImageResizer to classes
53064eb60fad9ea0176a87ac77d841cced27bd29,Change default tag to Glide
11fad2185c246aecb8438f8aff9c200607dd96db,Mildly reduce # of posts to bg thread per resize
878ad09942bf74517a761cc80815038bdbed7b06,Add retries to flickr search in sample project
ee687a44213cf94c1f4c18d1e38eb57bea182a35,"Cache inefficient Url creation per photo

String.format is rather terrible"
ebee47a832ac2e333ed2ff453021810b10d2ea16,Code cleanup in ImageManager
933f43576bda8138f85ec83fc93c5659dad35d82,Revert to using String keys for caching
fdb5f853e615ab46a4f3dea3a46bfca09c75f27a,Fix a warning in VolleyStreamLoader
5c440624273f5f284cc464cbc7d39cc68a68825a,Compile volley as a jar and not a library project
c27229a159bfc992874609270ab8b57981fef339,Refactor downsampler and transformation out of IR
2381ce1d267b4d9591e0603ae641ba93d6b1342d,Use downsampler/transformation in ImageManager
ef34a5bc088fc6c07a986e674e88dd306e793fbe,use downsampler/transformation in Glide
c572847b4cf003bcd5070b5d0499342ac6827450,"Allow arbitrary transformations

Also passes loaders all the way to image manager
to decrease # of objects created for images
in the memory or disk cache."
33943be3ddf092ffb670ac0b51c884f9f39ee0b0,"Allow glide to load images into arbitrary targets

Removes global layout listener for views because
of performance issues."
8c85210b51c162129bab92531c090bf2b77b3355,Add default downsampler and transformations
a967562c5c0d2f31bb79e344240f2e0e0ee37721,Don't post to bg thread for bitmap ref counting
673466805f2e69b6d8567604732435058696daca,Fix exception when disk cache dir is null
20941f417deaebeb0eef02727d4c7c7945f423f2,"Dramatically reduce cpu usage of lru bitmap pool

No longer need to iterate over linked list to
find individual entries"
50997b0bbbc9ff198b3ef2baaf9dc78e95c1f795,Always call handleException rather than cb
0d133b4ecd1827f539e7a35b1cc8b2ea065c7b17,Reduce priority of image manager bg thread
76c7bc1d3db2e9f8b855ad7dc0d856358cb0a443,"Add our own version of an lru memory cache

Allows us to remove our dependency on the
android support libs."
4e9cdbf5b540b9c16c6102e2db286d1aff19cedc,"Add rules to build glide as a .jar

Makes glide not a library project by default,
although all that is really needed to use it
as a library project is to just add
android.library=true to project.properties again"
6cfecdb66e30d45f72516a13efb0d8243a68febc,update docs
02ddf36100d8b90b0ada2ef1dc67cb0ce6f73530,Add a cancel method to glide
75172f25fc3a44af74e164f18449e45db68ac485,Throw if key glide request arguments are null
e9bb38b983ede3ce22220af5de3ba803c50248c8,Fix a memory leak when bitmaps not released
2cdcb477b627fa4940dc4f05d5a45f88a9e2b0d0,Call ImageLoader exception handler on main thread
f6d25a2c66f49cdb1c3fece268729238a4c28bae,Don't set a null error drawable
f6418a526d759708d849aea7dcdec5396cad0206,Move ImageManagerLoader out of its own package
98f8035b44e9c120e25d663c9ec21eee0773645e,Move ImageResizer et al to their own package
64186e3971a8f9ec14a8da2bec752e8182a2057a,Bump targetSdkVersion
8cfe9c42b3163489b7add832dbacd19f529f5fa2,Javadoc fixes and updates
8735c904abc7184052abcaf057f02290e2fd91db,Code cleanup in sample project
8a6ea1bf4139db19d1a7e99b39ff0cfea2d83b48,"Prepare sample project for release

Mostly updating package from com.bumptech.flickr
to com.bumptech.glide.samples.flickr. Also
removes support jar in favor of one included with
ActionBarSherlock to avoid a dependency issue."
acf9eccb5d393700e1171f8ce4024ba1f9fd48b5,Readme updates for recent changes and +author
d7efd9c46ebd8872640bb4b4efb564968905507d,Obey exif orientations in image headers
ebb881862b1dff0c44c68134204cdec5b96a601b,Fix the tests
124291f1c6cb9b406a452a315c3f4cac4f2b753d,Add test images for exif orientation parser
293fdc0fc9203e2286beef092ac4a1fcec55cd0d,Use a special downsampler for images in disk cache
9c04fc7a0c1d5c9e8f54660b0f954f754100f250,"Add factorys for ModelLoaders for runtime config
    
Defaults don't change, but allows you to
dynamically add new loaders for models or replace
the defaults."
7d5beadceb1f3d6feb68aca766521d92a9519713,"Allow arbitrary uri loader in resource loader

Lets us use factory for uris rather than relying
on our specific implementation"
2d923581ee57592181845aa98231eec988fab9f6,"Gracefully allow Volley to be optionally excluded

Uses new factories to manage Volley singleton to
reduce Glide's dependence on Volley. New package
means we can easily exclude not just Volley, but
also our classes that depend on it when Volley is
being excluded. We also can check to see if Volley
is present at runtime and register a factory that
simply throws an exception if we try to fetch a
url, instead of throwing an exceptionw henever we
tried to fetch a model that optionally might try
to fetch a url (like a string or uri)."
425a2365cb61957bc52ae64ea7caa5f851c7bc72,"Add a model cache

Allows generalized caching from caches stored in
factories for expensive operations (like
parsing a string to a URL)."
8522ec058a7530bed072207b9e6712cb16395ed7,Use generated hashcode and equals for metadata
43cd70e892e5caa75610b21f24fac707d3db52a1,make project.properties target match manifest
7c9a8b3437d3b41263a59288fd91795425d9ed8a,Ignore some lint warnings
2ba91293a8a23ac237dfbd2f9e61b7e0aad0456b,Don't override equals/hashcode in metadata
4b06daa97d96374246538774bae0aeae1b0d5bc7,Only create target once per image view
7a58fe728839fce9519e9b0656668b316db52777,"Allow chaining of arbitrary # of transformations

Also includes some other cleanup, including
allowing arbitrary downsamplers."
c95a13d712f57271047e467d367e1145517b0c2a,Code cleanup and comment updates
3ae69da690e3740e0673442126e93f34c96159b6,Handle image views that aren't targets in cancel
d1b45a65e7f6f6d1a61032f7b154a26dbb078768,"Allow ModelLoaders to return null values

This allows models to sometimes, but not always,
have an associated image. If a ModelLoader returns
null, we will assume there is no image associated
with that particular model instance and show
the placeholder."
0db29a8601b04d3a05ec0c1afac7d0d0297af83a,"Make buildModelLoader a static method on Glide

It's not a setter, so it might as well have the
slightly simpler static syntax."
f947bbbad518d3b255bc5a428254819de48dbe47,Add version name to Glide jars in ant
206241084656f9cca261fe3b9c787a2c70986baf,"Best effort attempt to avoid memory leaks

The ImageManager will only retain weak references
to the various loaders/transformations/ etc so 
that if they do have a reference to a context
Glide will not cause a memory leak. The only class
this is imperfect for is StreamLoader which is 
likely to be referenced by some callback passed
in to another library, hence the warning note."
e622c7f25fb62078cc5bf9ef75f89b4e9629c938,Remove some overly verbose log lines
a5a7159b8456db935b9e4cda883152195c075370,update readme
d21e86975d5d7519d3c6d9c36bedb6dd8f52f4b0,rebuild before making jars
8142145086239bb8f9da4b924cfed32af24cb43b,Bump version to 2.0.0
fc7d4e9980c7530cf05628a750565ed897895beb,Fix always defaulting to DiskCacheAdapter
3d894a9c85b74de5aa7bd64ca2d0c5ffa550e72d,Consistently use 0 as default resource id
c29ca39f16c945b93a314f42ef360e87b1528025,Don't log verbosely unless explicitly enabled
35cb20e1a8eb09f1c346246346eb90e5fd29412c,Fix a typo in the readme
e3fd7cf0ecebd692dc3067f4737df5098092e565,"Revert to holding strong references during loads

This fixes a bug where a load may silently fail to
complete if the user passes in a target and does
not retain a reference to the target for the 
duration of the load."
0815f830ea434137ccc89e35dbee02c4d598c090,"Allow match_parent/wrap_content view dimensions

By default if the view has wrap_content for either
the width or the height (or both), we will load
the image in at the original size. Trying to apply
either FitCenter or CenterCrop to the load will
still result in an exception since we would need
concrete sizes to transform the image."
e6f1e3dee1903318ae45fcb1649a5bb7cc2f2d93,add a few basic tests for ImagePresenter
77e561347a5659849239145ddc6b74749579a6e0,"Correct handling of width/height keys in LBP

Using object keys lets us hash on both width
width and height without giving up the ability to
handle collisions."
c256841eed6d0b437e146f35ad334a98d8c51da7,"Don't pool bitmaps with null configs

They will cause an IllegalArgumentException in
some cases if passed in to decodeStream as 
inBitmap."
ba5282d0a246a9529d615ca35521a71a98009f5e,Fix some bitmaps never being released
9deda93272c193229a6d26850ad9db1e2cd0e1d7,bump version
525d50359e27ca73eeeba96a994155c684d05292,"Allow transparent images

Load PNGs as ARGB_8888 and JPEGs as RGB_565 preferentially.
Also save ARGB_8888 images to disk cache as PNGs and RGB_565
as jpegs. Fixes some quality issues with transparent images"
f243e2db2fc16ab84ec68995520544f6a469b90d,ExifOrientationParser -> ImageHeaderParser
4f17114479ccb5e3ef5941e22f0953a77ddbe2b3,remove some unused vars in ImageResizer
1e2e51205f2e00f385f74fd03357ede44cef4223,"Add some deprecation warnings and comments

Goal will be to include a more accurate api that
allows you to set only options Glide/the image 
resizer will actually pay attention to in the
future."
da9073795a5ca847f17d39cda1d964cfc1fa25dc,Use using rather than register syntax in sample
8d80e85248ebb55fc2f8935022d30f496c4460f9,"Set target as tag instead of ImagePresenter

allows us to remove an uneccessary map"
075c41cba8b0ec93fb25983f71de6d303eb8a33d,"Fix error replaced with standard placeholder

Only occurs when exception occurs synchronously"
239979db20a8f6ef11ab36f16ce72afb79e89bed,Refactor and add tests for ImagePresenter
6b6b71fd95a934d44be3cb72ac393011c399bcab,"- Updated the git ignore file.

Signed-off-by: Carlos Sobrinho <carlos.sobrinho@motain.de>"
40c6d302321db0784619297ddb41a48a119ba899,"- If the config if null or any of the ARGB variants, save it as PNG.
- Added support for indexed PNG's (PNG-8) that can have an optional transparency.

Signed-off-by: Carlos Sobrinho <carlos.sobrinho@motain.de>"
683b2a58778182ab1f864a6131898d1c641a21ec,"- Added the Gradle and .settings folder to the .gitignore list.

Signed-off-by: Carlos Sobrinho <carlos.sobrinho@motain.de>"
48ca6482e88f2f4d2f8b460ca79bc792ea29c1ac,Remove ternary from logic to get compress format
775639a5ed296935104321c7ff496d205f56c714,Increase the potential buffer size in Downsampler
96006426c97d4e4a3b4378585a847b50cd8b63d7,"Reduce the odds of a collision in image keys

Fixes #27"
2249865b029bcac568656ab67998d3706d27813e,updated readme
5578379e042046bfa44c94fb1fb6019986e194f2,Add docs directory to .gitignore
f83b7e59356f490c19d154d29b1007ff82f58a06,"Add an exception handler to Glide requests

Fixes #26"
888b2d50bd5fb89fad104dd939a0c2e4571548f2,Don't throw an exception if a tag is replaced
f59163dea0fd9b71ad8b3bce80f6852f38e6eab8,move key generator to its own class and add test
90ee177aea615192ad71cc87cdcee76cbe05f606,remove unused imports
d1b611b97332dd9d00c9f61fc4a70f0567aa9610,Merge branch 'better_disk_cache_hash'
cc805fdeb2fb10b588dbbe77e867aa7ef5d12dc3,use the correct bitmap size in LruBitmapPool
8344b14e4c4161233bded6a1af812230b9ee20ad,remove an uneccessary exception
0d1005f20127565dd54bbf37270695779de94473,expose bitmap pool via ImageManager
387872f47a801102dba3d47250f82839976108e1,"Call recycle on bitmaps not added to bitmap pool.

Fixes #33."
d21630806321d222e89e9de80b1a084c19ba3864,Expand exception handler to listen to load completion
c88ce8ece98d15d94bc3c9e05e60b268ccf9bd30,Introduced methods to trim and clear the memory cache
ca029bb6e1eae22c3b72889114715c2134ecd8b3,Memory cache adapter implements new methods
2310318f0ff9ad1919ec61878a43cb8dc3bd5086,Skipping the bitmap pool if the image to be decoded is a GIF
357ba9606a1e19cd15779c0819a1f09a052093a2,Removed method from public api of memory cache
be3f3ec377a89e8760dc352021bd35e839eef925,Recycling bitmaps when clearing cache
88d34b8a8c62474b099534608cfaff87098b2de1,Merge remote-tracking branch 'shazam/shazam_memcache_trim_clear'
fa8e803b8127839347587ed4856f3fae106e61ec,ignore inlined api for constants in LruMemoryCache
c89e181e0280de9249bc07efb377753a003f55d7,"Merge branch 'add_exception_handler'

Conflicts:
	library/tests/src/com/bumptech/glide/GlideTest.java"
c24284108320cf3d613497ddd67ba4e1b232ce74,Skipping pool for anything that is not png or jpg. This allows us to add more types in the future and they will skip the pool automatically
82341a72e30da80de01c59303e72855d10b5f945,Fixed wrong boolean expression in determining whether to skip the pool or not
40bab784a2b4eead93bb569a2265f592ffbdb9c8,Notifying request listeners after the target is notified
62a88c0259ec08080da8dde72df1d978039f0d6f,fix a lint warning
4a9d7bc554c8a12ce093ba5caff21b0e00c4b108,Merge remote-tracking branch 'shazam/shazam_gif_no_pool'
8e16172c4096cab9fde522b6e8b25823e5f3b056,add tests for lru cache
86f828998f6452dcb0b8f788b8cb63c7a858441a,fix a memory leak related to request listeners
bbcfc898defcb9c97a4fb1a6a348fcdd781fdcf3,bump target to 19
5e4f143b8601b376a6c59df3ce8d76f63e5a6f2a,disable memory leak check by default
db3e9b8fb571f6c3ee1a043f98133fa5cdfb438e,"fix attempting to draw with recycled bitmaps

Fixes #53"
62449689a18324317a67504611a1593283059db3,Add a clearMemory method to ImageManager and BitmapPool
295aa7eea425d5ad99350c55ff9674040fe26b45,add test to ensure recycle not called on bitmaps evicted from cache
c8f4ce14fc25c7c69b5bde3568caadb55ec808c3,add basic tests for bitmap pool
042a9dbeb1612ab582e841645380c956195f8432,add trimMemory method to bitmap pool
32c51e9227156990a15944d28072d584883ee2fd,add trimMemory method to image manager
1cea25ddeeebebe2a7ee9727775f208a90dc58d1,update gradle build file
800b9099f07037015ffa0efec1ef1a013d812146,handle exceptions loading from disk cache
8b2c41e58eb84ea229fd7cb58bae8bb118771047,add a toString method for flickr photo objects
a6740390d172ade92a707da4a7c0cd6f32f9b28e,initial working version of preloading
78ca85060bc5ad8c3f2e6584ae61918a6d132411,cancel preloads when changing directions
cd7216d872eaa25268de0ea3d83989e67fb0ea9c,add preloading to photo list
d1865e6c24e44936f9fab7ae555aed12b70e95f0,add preload amount as arg for photo grid instance
715fdf9b27c96e9549c48e32fed0ae0e942b00b7,add docs to preloader
4f9879337237a8a2988d48509b82b00ed044fd94,code cleanup
77ef6a07ab4d3390d90c12a0bfe83018496746c2,Add tests for list preloader
e81c2c3c8fe1533de8ba8137ea831a42378b35a9,Refactor logging to use dab shell setprop
d5ddd93ac507c52f316b094a6740ddb5f122125f,"Add a size based pool for api 19+

Fixes #34"
0ff76fe5f606495ee30a642b3d3f15d9fcb7e354,Fix unclosed OutputStream in DiskLruCacheWrapper (reported by StrictMode).
89ab762a34ea2392c730d649fe2d93114b9b7539,Be slightly more paranoid about closing os
dcbac15fa30c4839365b175a3daa5e04659a4546,Update volley
9708b31fc6ab9e49dc9a77a3411001e28fc4da3e,"Assert if tag is set on target ImageView

Fixes #62"
eaf17b9066087e48486b942c4f09be024975cb6a,Don't import * and rename thread in ImageManager
75b9c094e493ab783d5980e51d02373a71537e07,Bump version for incremental release
a61cfe640b7912c4109911ad9283f3592fb32fa5,Update read me
58455eee0cd164d0f01d77842fdee02b08444d28,Filter and dither bitmaps when transforming them
7e3f8a250845774ae344cdbd59ea6dcc3fad5488,Allow manual overrides of bitmap compress format
680eb4dca0cfa186b8a6ac7304130b0b6be60869,Save bitmaps without alpha as jpegs
42c83ac5fb487aa079d04b31469ab3237376ac12,"Merge pull request #64 from sjudd/allow_force_compress_format

Allow overriding default compress format"
f8a7681e186c37c2eeaebc4f2f216a377112ad2c,"Don't use a special downsampler in ImageManager

It doesn't work for non exact sizing."
9176f4ab55a000d763c1560b2edfc6cf8b53a30a,Merge branch 'fix_problem_decoding_from_disk_cache'
e407b540e31154bf8d232659708744e733ced180,Make SafeKeyGenerator thread safe.
8a896b37a0a5ef7a24d1b9077ac4f6bf51b6bda3,Fix bitmaps too large for memory cache being added to pool too soon.
0c67e6f7594012c85888df85e447aee15fb3797c,Increase the default cache size and default to internal cache dir.
270ac67719631ac2d5399cc57b4911bcf3bf46c6,Use small memory cache and large bitmap pool on new and non low ram devices.
b57a4098eb221dde24f0ca7839b59246d9f4b0aa,Decrease the default number of threads glide uses to resize images.
6340c9c02203ad1191ffff176065e975f416ccd7,Add debug logging for exceptions loading images.
635d04fddf1b28a798806263f4f286df02bf79d2,"Add more robust view size detection.

Includes at least functional support for 
wrap_content."
0ae32dc10d668a04f9f0484d587aefe5a7210e1c,Make model loaders and decoders generic.
fcd787c911d5fbca2a34ff0963d4665543a03275,Add basic support for decoding video thumbnails
896af010afa2c88aa6b63fc80c1a412357caed97,Handle videos and images in one request.
8c7ae0d1551752a2ff6260dd807580a90020451e,"Revamp Glide interface to be more flexible.

Conflicts:
	library/src/com/bumptech/glide/presenter/target/ImageViewTarget.java"
679ec4cf8eb554dbdead1c677c606598dbf4dfaa,"Don't attempt to reuse ImagePresenters in top level interface.

Change-Id: Ic8c82958c4b0e28c6d1df3d950901be034cbc7e3"
0c474ebc75fe6d845fa5256f80a4df135229c85b,"Fix NPEs with optional loaders in BaseBitmapLoadTask.

Change-Id: I4cfec042db8bb30318f61c396853d75d06a7d2f7"
ebf002122d17f21676230a4499894cc9f103d0b4,"Add convenience methods for retrieving common model loaders.

Change-Id: Ia83a51f9a8e32363e27af35493c947f1757cd8a6"
1973ac99527d3648a7b0bbeb6a273dbcc3bc60ba,Don't test removed functionality.
214d5d49b773db84e3c600ac4e83e526b93deac3,Use getWidth/getHeight in SimpleTarget
b44604067356bb73cae3c910ac0e0044d26974a5,Bring back special handling for views using setTag
6d96f53ac0d3e86527862a78c741fa89de25e603,Add a more efficient fitCenter method.
da25daffc2047b70f7cf3eb1f6e7ae53043d9337,Allow bitmap reuse with sample size on 19+
370ebf896886ab79e59644f0d82af9b8facdacd1,Add a byte array loader.
9ab1117d741cf18f7606685f96cba216bd5c1cb5,Move image only requests to loadFromImage syntax.
002c9ea13b8e2d275c862a0bc04463c131ef324c,Add Mockito to tests project and update tests
549ec61c6bcbd9cacfdf9162c231c1e7c1fd66c9,Make byte array pool size bounded and add tests
347118b12e87c821e1e12253c43cc7f052a56fe6,More descriptive BitmapLoad* names.
a55e2011ddbc4c2bac3789903ec338b892aacf10,Fix memory cache not exactly obeying size limit.
8fb1d987b035907890c5081fc0b229680087fbe0,"Merge branch 'master' into 3.0a

Conflicts:
	library/src/com/bumptech/glide/presenter/target/ImageViewTarget.java
	library/src/com/bumptech/glide/resize/load/Downsampler.java
	library/src/com/bumptech/glide/resize/load/Transformation.java
	library/src/com/bumptech/glide/resize/load/TransformationUtils.java"
333b4d0be7fd98bd14d215a17b0143e9dd1e2be8,Fix rename in Flickr sample
9aa6dd1e9e9497e54d38a8f5f686dd510b224ee1,Generalize LruCache so all caches are size limited
36db20745f9e19858647f754a6caf2785b23e781,Remove unnecessary code in SafeKeyGenerator
b2bcf70a40da4ebb1f914ab5ccedf3de593b6951,Remove getId from fetchers
d6fa4dcc44813857c0e03443c2830685525c20f8,Refactor out a ResourceBitmapLoader
230db9befbaa7a2325f0759ade5d8ae68e8c84eb,Add simple default constructors for model loaders
98df997689b40779cc93b3678f559cf7ae32f13e,Add Glide based disk cache implementation for volley.
c9348b94306eb775d5f52273b836a839355541c5,Copy and add cancellation to RequestFuture
ad99328e3cda64c7c74b365015585e3b1d569062,Move safe key generator into disk cache wrapper.
43e7a52d0abb9a03d87e7dfa7bb041f91d5bf039,"Fix receiving old cancellations in new jobs

Conflicts:
	library/src/com/bumptech/glide/resize/ImageManager.java"
29f3a82eaaf784c3722e7673b6ea6acff9449a4d,Simplify glide setup and add getRequestQueue
7db180336a0dd670a7c574a5e5e36a9501e2a5c0,Fix receiving old cancellations in new jobs
809f3b3bc87907085bd86833a29e4998face8211,Add optional verbose logging to ImageManager
982d0cd5281f66d1023ec09abda5882cd447a114,"Fix a strict mode violation opening disk cache.

Fixes #67"
7deed28737a0a88f235729fd1a799a8a747c0de5,Enable strict mode logging in flickr sample.
0b2cafb34c1227d49fe4b0485193bd5531ac4c86,Bump version
4626911b917568f6c1bd9d93f91ae1c70cb43554,"Merge branch 'master' into 3.0a

Conflicts:
	library/AndroidManifest.xml
	library/src/com/bumptech/glide/loader/model/FileLoader.java
	library/src/com/bumptech/glide/loader/model/ResourceLoader.java
	library/src/com/bumptech/glide/loader/model/StringLoader.java
	library/src/com/bumptech/glide/loader/model/UriLoader.java
	library/src/com/bumptech/glide/resize/ImageManager.java
	library/src/com/bumptech/glide/resize/cache/DiskLruCacheWrapper.java
	samples/flickr/src/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java"
6af39648ad0ad00177d3a670cba18ce66280e452,bump version
1d11261d4ec2ab97c5eec91a3d1c14625c5b23ca,Add simple thumbnailing.
f78093fd5e58b693c1fd93e19a727abca776e333,Add more complex thumbnail via a second request.
1ab791a7631baeaaeac8c8dba9aafdec3f3ff2f3,Fix NPE in volley stream fetcher
0ba0245a97116b2f2c7bd67213961ac4e2dc3e56,Add BitmapRequest as ImagePresenter replacement.
9f0bef767aca7d0e40f9eba8c1ea52159bed2091,Remove image presenters
217da78d74c0045848383c323efdd8b8f495ca6e,Make ImageManager final
b8963a023ceb009cbf7f73a4506e7af7e693a219,Pull out request builders into separate classes
15df8d073a97cfa2b589b547535a5b055c71bfbb,Avoid unnecessary model loader factory allocations
8e2641581399c6b767a1f5210689da8cc6fed6ba,Refactor/clenaup ModelLoaderFactory
0ef75b4bbd3bc549a9691372c3162a7c38b091a2,"Add image and video load for generic models.

Also cleans up some comments."
031fed2e364feacf89dfb904a3a0de98b050fdc4,Make the tests pass
76fbad3dbce72240e9f5b82c826e3229c1176fb6,Add support for requiring ARGB_8888 formats
a76c1d39daf35a8375fea219cdd69c1dd56a276f,Add support for drawable and animation objects
bcd0ac8b8367f88ca502e0540cfa871ee4eb07b2,Check resource ids > 0 rather than != 0
e9498d0b46d4c79410968eb11c332c42c9be7ec0,Set placeholders for null models.
01aa6006def432982a271b80daa2e356383e4f05,Fix loading items in the wrong order in preloader
08b61677e60069ba681b56cf6312fc0b92020962,Fix prioritization of thumbnails
4a5c89d88103190fa594199fbd4a1a2a62c675d7,"Treat null request as a load failure

This allows the listener to respond to the failure
rather than just setting the error placeholder."
a61bc312bae6bf99b9c254e4609810718211dfdf,Fix fit center producing overly large bitmaps.
d845b56d49a74bc4cd7916f4b5e7a353c8a7277a,"Only look at image loading to determine animations

Currently we only treat an image as having been 
loaded from cache (and therefore eligible to skip
an animation) if we can both determine the size of
the target the image is being loaded into and load
the image synchronously. This can lead to bugs
in collections where views may use match_parent or
layout weights resulting in near synchronous loads
being treated as asynchronous."
c5ba6fb229c79a6f90e9c430f11d02b43bfdc247,avoid a bunch of unnecessary URL parsing
f5ed4db9539770d186ff0be0882ba618a18af5ae,bump version
bbcff628a14a8eba0aeb9d5b4a28f0f868f78161,Migrate most tests to robolectric
e52ac307639fca7a22cd5bc3e05ea423b2e60264,Add runner implementations and tests
f2ae12d629c2445117449d89b11353ec37797ce3,convert some robolectric tests to junit tests
0e605e6c38a673ba792606ce559db054a776f5cd,Add an engine with dependencies.
b215b51a0ba86c2db14bd735cc0207cf3f1c7cd8,Preliminary working Engine
ff48958f88c9a970053e5b2e1ac5eef38bd2d365,Check disk cache on single background thread.
bcc2c0671de2b8832fd56e5545c8a62d39444b59,Make SourceResourceRunner prioritized
d315b62a7a112093f85db801382c8eacccdcd362,remove redundant test
562b6270c788c3a5ca55b594b55da519af478934,Move runners entirely into Engine and add Listener
faacbfc1109f255836b4091f6459976295bba7ba,Add resource reference counting
27eb05702fd4531d6974640c62df1d569629edb6,Support simultaneous image and video requests
39962a2e237a027f470d05daa7dd1a33dda7dddc,Delete corrupt/invalid images from disk cache.
31b60a4ba485dcc22e5edd19c6768e1141c32f4e,Add support for transformations.
f9ccb9c6c3f50832993459b83746567dfeb6acba,Functioning flickr demo
0e2e2b1b8df449b6e3223b090f5a55f1993e6c1f,Remove ImageManager
7bead36a3031afd9ffb74f06d254f4b11836ceff,Use class for keys rather than StringBuilder
97c9053667b102002ad1a98d7252fff08ca16b71,Fix bug in multi type request coordinator
4d8d6f225a75d74224306342fd30414aa826185a,Recycle resources if cancelled on finish.
fce91ebaf2090f716c654954681fd818688a87ad,Cache when we're unable to create model loaders
c8c79d03924a757c29bbe7df5bc07b3cf8e02a83,Replace requestContext with LoadProvider.
9fc12334a7d14347cd6951d0653264b2597bd3a0,Update package structure
45d19e27d8f8cc8f24f9a68efdf9f28e5f97851e,Remove unused retry policy from stream fetcher.
127f265355747f88a7ef0f5c73a2e2789f05efc3,Base memory and bitmap pool sizes on screen pixels
d8900c3aa1844ac66a1019eefd368c83459c2c4c,Add size multiplier for memory cache.
db4ad9438e8c2da3728368fd832bcb8e183609cc,Add support for size multipliers in BitmapPool
7050d58f72f666896e7f1ad6a27faafb0230fd37,Add support for memory categories in Glide
9bebdf4ee5dcaa1569bea3985dfe08f93ed8bd38,Remove metadata
e0e4ff5b4bcea7d92a16c5e5c2fe881373e720e8,Avoid string allocation in StreamBitmapDecoder
a5e9584f75c9beef66dbc639ec1a8318a1149341,Require keys to update messageDigests directly
f982d6212d7836e6ff91f242768b7f4f50264398,Reuse BitmapRequestBuilder
c15e08e227d221a7838dda9c5879b8ff1d59bc12,Try to improve ordering in EngineKey equality
59dfe6bccb7a462c6239aaca30ead1f3db47e555,Do reference counting in Resource.
407cdc3d2a3f2fb6d723b6d8195527bc283e045f,Minor optimizations
ba414a3eba45ab6566a94c48babace5c1d6d721f,Generify Target.
44e0516ee31912216c9e668c255f2d5baf86ac6d,Generify BitmapRequest and GenericRequestBuilder
785dc5ee71beeb3ebd77ea73b313eeaf057ae112,Make ResourceCallback return non generic resources
fe7154fc88d47c779aec395af7020a69d61f6392,Remove Glide.get() calls from requests
ad7119b91370d7418b24f5646b35190aa76e5e66,Add support for transcoders
77e0200ba76c89177b6ec8c781f4f8f86984989b,Pull ModelRequest out into its own file.
95800ddedeb8ed0390310ff80a68d3d0eeef00ba,Allow arbitrary transcoding.
1224f50c5f09df18da720042dca7dd03bf2c6a2e,Fix eagerly allocating in input stream
22fdf9c6fe4fb50f597fcb2e3e5fb7ab410828c7,"Add tests for transformations, transcoder."
d3bd0a915d197e08dc7d2c7cf97fb0ee77049f51,Allow generic loading of images
423bc54484b4be962955b2c194cf72edf705a935,Refactor ids for load components
7f6d858477e6852fff5c5e49897fc2f9e7140edc,Add cleanup method to resource fetcher
dbb67f826b0e76645c809be6d589e9dcb8271324,Single request image/video loads
9aee125089100198f025b5af6f6925eb0050f9b6,Cleanup data in LocalUriFetcher
0b3037c7d9bd028b9e0c6ed2cd4829e1667836b5,Call cleanup on fetcher if loadResource throws.
bcf4a0dae04a4ad14287eeb34069a97c96fe9bb1,"ResourceFetcher -> DataFetcher, resource <-> data"
9bd8b525cd931a2828a78da63b41341978f86468,And compiling pom.xml
ac28599e2b40e0dd6b97f6a91849585531264622,Get maven working with tests
af7dabc2a26fa01ffbea19c5a587016552858e5b,Add install dependencies script
64783e96163adb4fc8fa84038874694f236b4231,Add maven support for samples
c2e987e2e74f61f91c0edd93047658ab8bc2bcd8,Pom cleanup
3f8d4ceddd52677340df8007216ad633f749a379,Fix not holding resource for all cvs in EngineJob
57bf9ec78a5b5ddac206ed4f560f7b44b4f1d0f9,Fix EngineJobTest
80b7691daac313059e4311214249fa6da53451ed,"Allow resources to skip memory and disk caches.

Conflicts:
	library/src/test/java/com/bumptech/glide/load/engine/EngineJobTest.java"
b38d03ba0aa2b9dc036bb987a13cb5fcc6ec661d,Add types to base and simple targets
ea01ddd754126290fc18c3dc8f6095ce0216768a,Add GifDecoder and GifResource*
be9ba784e13d6f8bf390ec0f11fc2600a38b0548,Add drawable request builder to handle image/video/gifs.
4f96c1a82e7d2db4863ac63dd00a261e9f0746b1,Make gif resources safe for multiple consumers.
fc3f03260933d96fae33a43846860f226dd661fe,GifBitmap -> GifBitmapWrapper
8e9362526ca1e73364de269ae09c75c98d0e23f5,Code cleanup
feec80e875d6ae78dc03ee73585d4c5c446327f8,Add timing logs for runners.
7260e7b8e840ae9e03cc20df73accfc4121cb190,Cleanup request builders and add tests
9965bee0f6e0c5d46a83856ab14fde9ea1e83809,Use PreDraw rather than GlobalLayout in ViewTarget
50f743d619eca0df15a9edd531f54c73cadec9c4,Don't include testing jars in Glide.jar
44b89ba468c3f0f996bf1497d2f55fc9b50de0e8,Fix shared gif drawables
a5e015aa9997144434b892a17ae389e59bc3c937,Fix gifbitmap tests in wrong package
1a0d2f25951a536b465c5b2a1dfa5d3c076de912,Move GenericRequest out of bitmap package
063020db301f9a3d96c8aa6a7f0b0bc1651ba45e,Fix always returning null from MultiTransformation
da7bc32c1a0d448f7d29685692a45eb5f6867fa5,"Apply transformations to cached resources.

This allows transformations to be applied that
for whatever reason cannot be cached. In 
particular this is required for transformations
for GIFs because neither Glide nor the Android
framework include a GIF decoder so we can only
cache the original data. This change is risky,
and relies on transformations being idempotent."
a37592fb57e7cd95b53d9493e0f339d04b38b808,Fix GIF drawable transformations.
cbba04826bfaf4f8055f922bc41937572983c17f,Add asGif() default option
bd01b9765954ac2b99cb5dd76ade740455ad69e9,Make sure ids match class/package names.
63af4bec9ed53559e4fd1b39d286fe125a69f364,Show placeholder when given a null model.
c0fbc397de60c5381a72394a2cefa1a1c19b4618,Bump version to 2.0.4
0f49c87b2f26f3e086f021461b7e5409a7d42be0,Move GifDecoder related classes into third_party.
d47862b456cf2a7b813a9e412953e85fe09a5978,Change copyright to Google and date to 2014.
a963bcc3d20d461f32c3990f77a5b247b4ef17d5,Move volley into third party.
f54f934159582081ef58a136412f420be209ad1b,Move disklrucache to third_party.
4e93521eec37e6ced67c02fba9ba46ae96ec049b,Fix gifs showing images from recycled bitmaps.
0d8a954b91ef8a37c944c2fdee75966c6f94d7bb,Stop GifDrawables when callback is cleared.
ac17cee9e447433b9087d1a75f12355cbcf965d1,Fix exception where currentImage is manipulated.
512fcec1d596928ceac3e63ca80292543c30e82e,Fix NPE in ImageVideoBitmapDecoder.
8a6067fbe2a670d2e893c79c9c0ec17817da6568,Add RequestManagers based on lifecycle events.
c2a82e501afef1ef9876db0337d60ea599e73119,Allow rotation in Flickr sample.
8e6bfdc2ec09724d00235216d125acc2ed771f09,"Use pre draw listener to get view sizes.

Fixes #74"
accc403dc1ea0a0aa76ab55fdd1d09fb24111d3f,Add a test for a particular type of invalid uris.
4e9b1bc3a38760a51a5aaf0375b4d23141739a02,"Don't throw on invalid urls.

Fixes #71."
66e337a1c5829b66fccc4655e5071be3a9f93f52,Bump version to 2.0.5
444371118bf079a412017948166cf4eb4db48103,Intercept ready/failed calls with RequestListeners
531667420f0cb59e01e0ae5928392469006148dd,Add more robust animation support.
b46fae747f6bf04b849442f851a1c9da51434ec1,Allow overriding target sizes.
acbeb5b5e7b63f70ccdfa212af0bed3ca62cee11,Don't replace thumbnails with placeholders.
9412ff8e84d057afc4f44af62f618eefb744b7c1,Add connectivity listening to request manager.
89cd88e9c1ed197f390e186799b14b2f63b66670,Improve performance and resource reuse.
4e3f6162369c45d9fc1d2c9049452236bbb77ffd,"Fix the gradle build..

gif decoder is being built as a sub project while other dependencies are acquired via maven."
8f60b2b967992e8f6145e651495e1482b872696d,"Merge pull request #75 from kanelbulle/fix_gradle_build

Fix gradle build"
985687813fcdda9136dcf255784409f65317b280,Add override to request subclasses
be180a0eb61b3e4c088cec44c69cde5f91cbe7b9,Avoid NPE in multi transformation getId().
8bd8ac7321e75f75fa4f4ac8f4a2666f98643e3c,Fix safe key caching.
2b790b00f26ab3c57b409761c25351083aeb85b2,Don't memoize id in ImageVideoModelLoader
8ff32510d6572ca4952a87ccb8ad7140c1619443,Allow puts of same resource to LruCache repeatedly
284e8c47906592f1d1c30231d623c6499c4779c9,Add jar target and get AndroidStudio 0.6.2 working.
fcca8d79a3a04e71924d06799de2af46c923a84e,Fix android studio gradle build and lint errors.
f1d30908374cbc8a570d2cb1ca22ba6dfe3e0d4a,Working auto import into intellij using pom files
70db081bbc0a80737f457c6388f4af4c1391f5f5,Avoid allocating new object per default transform
2d5dcec769a2ac17df6aab0547befc80344f8967,Fix returning 0 size for GifBitmapWrapper
d0546ba0366fc276a5ac1f4c2eea88901166f7be,Pool and reuse GenericRequest objects.
1f028c8ef85fdd1608c7d716d41e7e086fc77359,Don't allocate ArrayList for single transformation
1e1f49824afcb737ed2b7bbf4a14c341827be9ee,Don't allocate List for single cb in EngineJob.
cecec2beee79204f1401f3a649c55fdb57f7d393,Use priorities for requests fulfilled from cache.
aed5a1923b6add5101689ca462107cc16877b05e,Pool BitmapFactory.Options in downsampler.
b5f3d09acfab5eb049c1cb395ca2520a98883047,Reduce some cache overhead in FlickrModelLoader
214e9f90ba8a156b0bdbaff7fc911ffaf3e5b137,Add some logs for timing requests.
4a5c5613515a641795fd4ae89ba3729c19544060,Only preload small thumbnails.
da4ce795221e0fd9a3d11c84f018b3b5d6a10421,Improve thumbnail performance.
f0442efacdae9dc1025b3c381d06215a957be21b,Fix lint warning.
669b218b9c2b3fe75607df5947e2d75a91c8d12f,Fix gradle build
eba30dc89f6138cf85e1adf0fd1d23a87849c9e6,Add support for media store thumbnails.
1cd9f328e9aa63121474dbfed8c8baf1a5fe9262,Expose setting resize/disk cache services.
e5fd0a7706b951d91ca97478d954a96e211bda08,Fix a duplicate pom entry
e743a1f03f24e33270f38de883b508d4312a7f69,Cache resources only after no remaining consumers.
b7c7c2b2505f996dbda219faeb0d08dc1c9982d7,Move resource into Engine package.
78bad2aa32f824f9e098b5058dfa3506a7ed3f62,Move id method into DataFetcher from ModelLoader.
ee914288218f2fa29a96ed746c9bd9995857c8cd,Transformation.NONE -> UnitTransformation
1732686228f6309f8305e4b6c6066b845ab543db,Pull cache loading logic out into class.
0be7fb306834626a8c389e0a685d4017f5f84c71,Check for original in cache before getting source.
cf1e05bf226ce4e7a510a5f7cac0661b9b2e90e9,Add support for caching the original image.
5166e0e9cce71ae4d515355ea2c3ac68ec830157,Add travis ci yml file and move install_deps
9facd7399690405f4c35114972eb52c1a424e9de,Move classes to more appropriate packages.
6614298e4d753bc3aebc49b5b7575c866eb5f432,Refactor request tracker out of lifecycle manager
667fb8129df68fbab0c489b23b2ca9d392cd45a0,Pass RequestTracker into builders.
7e7c54e34b096f6bee9cefe6ef043464a984e5ff,Move RequestManager into top level glide package.
e97358542be64b8f458d75d997ef585f6d9fce4c,Combine RequestManager and ModelRequest
927860d5cb33fb28a17e3b41b90dd27f43eb4f0d,Fix gradle build.
ad98053756e240354de03051733c0bf41bf8f25b,Add ability to set default options.
6cdebac98d36c87ff41f44f1eed75f3115428688,accept android sdk licenses on travisci
53c16e03081b659c2c9009721b1a50728d4fae80,Add javadoc generation and fix javadoc warnings.
4f579a81caf5c4ff505bb8d48d903062a52254bd,Fix Gifs not appearing.
a6abdf254070ed17319d3d93a83ba40ee2642358,Fix RequestManagerRetreiverTest
0181060403cb0a7a2b344e4b2f55667194f09732,Add gradle snapshot deployment.
700284ec94a2c78a6157a31dea1d70d0de51b9f1,Make Volley an optional dependency
e2d3f56356ccd2a70b0652056d894858bfe8ba15,Remove Volley submodule.
47c93882b2e32171f77be76a6fab2f8bb9c41bd3,Update gradle plugin version.
751aa97f348f94dcfad5df5bd530c623ab9ec4c6,Add combined jar task
907ba8ef0b9105e4e9602435f95202479e75cc9d,Add assertions for main thread and fix sample.
4f7c51ca4c48911c24097b86932c229fa874359e,Add a future into call for blocking bg loads.
18d5c371d568d0f2e33b8b5e78b400156c1720f5,Remove unused dependency and performance fixes.
20b43f38eeddc90706aedea7d5a4a10e21524f73,Add disk cache submodule.
0db3c45b412be1a5bfcb1da046836e89d3ffd0b4,Get Files rather than InputStreams from cache.
bb6268f046f355e1b6cd1bad6707288180a4bac4,Add download only methods for Files.
f59f35a759798ea0a5751e34a2585606fc9796af,Add disk cache strategy enum/methods.
fe090f50f3040f4d478143a3e0ffa8cdf813fefc,Add checkstyle plugin and and fix style issues.
86ea385b773a81e0f5c6b1bb677a752855e504e0,Working transitive Gradle dependencies.
55fe76154dd6c5af83cd3557f37c0d6368f3c046,Cleanup build and depend on local upload script.
e152fdff4c305ce60f81d3a26e15a0157e8b7e4a,Add property to add/remove upload script.
d84d695d3845bc175af28ca114ffc87177453960,Fix using BitmapDrawables in multiple views.
ad67eab60aed16b0269d33eb9b02eeb9f07210eb,Fix Exception when future receives null exception.
9b681c2e88b3722582585a3095cca295f5984098,Update build instructions in Readme
5f4610b54d517be58105bcf73ce3291ba79f9f40,Document all the things!
d2c42cb991e9395f4560cb433ce796082d15e3da,Generalize animations and add to GifRequests
c85c5fe1ee57a14cb7585b77bd4ab81d97ad45c8,Default to cross fade animation for drawables.
a7b3f66c2d3e244a5a5b5d8cfed5fcc483b4c2ca,More documentation updates
037d0f70e721742b51082f0694a14fb930a2aef5,Make GifRequestBuilder return GifDrawables.
29bc834c3105da133311a3a0bdfa5a488f1a34f6,Add documentation for GlideAnimationFactory.
a23b64f5872138b0a5fa4c95be5dcf3f6f0942d8,Add constant state to GifDrawable.
ce5bd7fa20a673612e8ba3cb5257c1ce533bd758,Avoid unnecessary get() calls.
310de52307eb090f0fa642ed18bbcbb298426ad4,"Provide final frame dimensions to GifDrawable.

This allows the intrinsic width and height to be
constant which plays more nicely with the android
framework."
742406a3e1207ea3664a1fecba8832ffc2e495ae,Avoid resource recycle loops.
e7260d81ae1b5ba49b6921df3560fce8f916a7b8,Fix a gif recycling error.
a1fdbb44c7260d81b810ffa717e049a3f2438c19,Use frame dimensions to estimate gif memory size.
ed2140817d86cc3ad9067d451c5fa0a6e362e04a,Add a gif based sample project.
5ce0c1172e076cd72af8efbde97cffca5f215ba1,"Fix exception when GIF can't be decoded

We get a GifHeader object, but it has 0 frames
which eventually causes a divide by zero
exception. Since the real problem is that we
couldn't decode the gif, we check in the decoder
if the decode failed and then simply return null."
186211e3d2350215984741f6df958c52a73e125d,Remove loadFromImage and loadFromVideo.
876b9f6ad347c12636d14b9196d08958b1310bc1,Allow transformations to be replaced.
09a5b320544ce6eefe54e42f6462ddbbe73b8418,Default to fit center transformation.
1614d6b4169b2930d3d2c17210c438708bb1117d,Add simplified BitmapTransformation.
2528b8f549da3ba89ed297653890fa4d7788d31b,Fix issues with artifacts in certain gif frames.
c95999a11b7c380a6711395482e16362039e5b31,Avoid NPE loading null or empty urls.
b5419dc08eb0a0f82821d774435720e5a31bc936,Add checkstyle for javadocs.
fb8ef48d955a346246271633c0e5b817929ee7a0,Replace ActionBarSherlock with AppCompat in Flickr
5bfada5c0be7c1fb2cd6e1247b61ff8a0f1a8f22,Add test to ignore size ready cb when cancelled.
e1d45b25cb006ab0a85bc3e15ce3454b12a23235,Add default transformations for ImageViews.
e9234a91ace35d1225d9ead0c1b47320ea541fcf,More tests for RequestFutureTarget.
2896f4261b305efc0da164314fb90eb75bf5a234,Add lifecycle methods to Target interface.
b8b7c87596739f144c8bd4b449f14d7d947ecd4d,Remove redundant commands in travis config.
38736d8e33b10d4b56e5b2603774717492cff95a,Fix race where placeholder might not be set.
2e698748d344b36ca2f866babf7482e38355ccbe,Add debugging bitmap tracker.
548ff09b7c987156a3f927e8988d798959a0e575,Fix concurrency exceptions in GifResourceDecoder.
ec059e312ca7560ef3856f79827994cb906ded7c,Abort disk cache edits if throws while writing.
82c18a181dc6f7867c76b1b8c469c6be88b85177,Add lifecycle + listeners
f5df9c0c3884655da753961a710ea5489337ca2c,Fix application RequestManager initialization.
8c98c8670d06f7b0a37213f2936308c080e21097,Handle context wrappers in RequestManagerRetriever
d8eac4cec0fe1fa9b496998cfac858fd603f4f32,Use LifecycleListener to stop/start gif animation.
da4b3dbb786c0f791496e8701bb2e4fc9dbe3536,Explicitly start/stop GifDrawables.
21c2822985058df655ee4874798297f74c5e367e,Fold GifData into GifDrawable.
3e519104d688b295f6b1b46d1cc78695a36654a7,Add GlideBitmapDrawable.
193e2f8f9d0c56ce4faa7cfe4e62ca6187be90b8,Make GifDrawable implement GlideDrawable.
5c3697fff7866246e107030b8c92359d4ebc1cf3,Use explicit GlideDrawable class.
15db37e4e7fd1a44ce43999bdcc403e624048f50,"Use SSL for Flickr api urls.

Fixes #86."
6fa8850db640d4d5f6e5af23e7afc98a9419b57d,"RequestQueue has been changed

If we click back from the activity the API object still the same because it's a static object
and if we navigate again to the activity, we are creating a new RequestQueue, but in Api.get(requestQueue) the API object is not null so here we are dealing with two request queues and the callback functions is never called."
d38204db4a7f40477fe7f8779127d08edb15208a,"Move glide configuration and requestqueue from the activity to the Api
class"
e3524cc0be626cf2a3cca3e009a2deab6c8805ca,"Merge pull request #87 from hegazy/master

Api dealing with outdated RequestQueue"
ef8d37df1325d1c0562829af837d06ca5196ecff,"Fix an order of operations issue.

Fixes #88"
618466795142529d59a078a1c85c8ecb390e3bde,"Fix an order of operations error in CenterCrop.

Fixes #88"
4b8a97a341190f4f881c8402087579721079946d,Upload a single jar rather than all subprojects.
c4fca2f8bceecd56c12a71ba6e765600cd42710b,Upload snapshot using travis.
0d41e4a66029748039076b2300f3411ee23d946a,Remove maven pom files.
7f237cb1a12cab48868a33fe028416ced5a34970,Fix lint warnings in flickr sample.
91e4fdccc4565a1c9dedee42093ab3d2b0d4429b,Simplify volley integration code and build.
e1fcb39595be16b53481fb310abb1274383632be,Simplify samples build and layout.
ccab7e9dffbfbe5782d7a3dbbf35d3d48f35a31a,"Don't remove new runners in old jobs.

Fixes #91"
e791c320273f8f7613d7b6097cb1a35ae7b70eea,Simplify library build and remove unused files.
c17a1755acb6d4f69cab9afe09ab331832ac5095,Add simple OkHttp integration library.
15024b6111ac2bae0c55e6a07c6f0caa7abfc0cf,Create glide subproject to generate jar
73e06d0acca77fb44126f9dbe2380c0bd3d3de5a,Cleanup gif decoder build.
5d10501387080d155023a02e821520a3cbd05308,Update readme
a9154a27df4e29d7a4741e95274e63ffc41e8092,Upload a jar for all integration projects.
5bd4f9572c17bc87a40ecf167ebf905e359ed133,Apply more universal exception handling.
96fd24996d9f52c067345f0174d948ca10256eb8,"Don't cancel new runners from old jobs.

Fixes #91"
48fa2540e56843571a008fe5e92b8b343024381b,Add Help/Contributing/Disclaimer readme sections.
f1419ffb24dec9334a2f9f8b60cc3f625473fbde,Add tests for ImageHeaderParser types.
db85af9fc44f98de5cfc2eb0c8b49ab44242d235,Fix using incorrect target for Drawables.
f3c7a66fbe8c2fee588baed934b7c66dc1b72f05,"Increase default jpeg compression quality to 90.

Fixes #95"
43c082540013abdd5b5aca4b8c6ed2e1cb335f06,"Don't start new requests while paused.

Fixes #90"
8668710dcf315ed9818d760275c6ceccc90fe56c,Fix fulls not being preloaded in list in sample.
a7fbd5b240013f5a8857fb3e78d2a0bb2e9672e1,"a bitmap by decoding a gif has null ""config"" in certain environments."
14fee20d124d1b163b39ec04a3fda788888b0b08,"Don't notify EngineJobs of failures more than once

Fixes #97."
9df9953e2d43570c81cc3b419c19556eb50dc695,"Don't notify jobs of failures decoding from cache.

Since we also try to reload the image from source,
we may end up reporting first a failure and then
a success which would leave the request in an
undefined state."
de24d6a2112bebef8d42def8c1f21c79ab7d418f,"Fix some comments: - typos, - documented empty blocks, - shortened some {@link}s, - converted some multi-line comments to single-line/javadocs."
86d92c89644021ab420ea612ce9d7d02b9b24be2,Only send to Sonatype on bump repo/3.0a branch.
c4cb69cd2ada92757c158af88d56ccc81ec72ee6,Add travis build status to readme.
512808d3f6b5e0184d08213753235a2b704caf7c,"Make sure check style runs on Android sources.

Fixes #104"
76666786ed7639da220a9bbba40412002f1faa71,Fix sonatype publish script.
1cd0b7c7f697e82df47febe9713ed1c8f981d53d,Move env variables to travis settings.
627ff97d1b20ec960184ca126b2458c229b3f6b0,Make library compile/test/checkstyle on Windows (@Ignore in comments where needed)
a947a6ee4cb9940627aa4f3ea1a24b54336f8f10,Close streams correctly and make DiskLruCacheWrapperTest method independent with random.
c7e6859197eaf80f0c752632d9b44a931f0d83b7,Simplify some thenAnswers
e8b5d67302f343bfa262c8c90fda5145813f292a,Move all ArrayDeque (API 9+) creations to Util.createQueue.
e7319b67364bd0ac6306bc7470a43d4a31600c1a,Change @TargetApi and SDK_INT comparison constants to named constants from Build.VERSION_CODES.
3947c741df8f8b0658430c22536b244dd26b793c,Fix application RequestManager always being paused
7df4f7acd44e96f6fc514176bd8c09e49c867ef4,Make .gradle files a little more uniform with 'strings'
3c44749b5511ae370776dd2ad43582206ffa640c,"Suppress less checkstyle checks in tests (no need for javadocs)
and fix the errors."
90fb33f2a24bd8fbbb3285c8447a2ebc9fe83264,Clean up .gitignore re:local.properties
c47d9c95e9b507399a57656d0c7ae207a37e3088,Bump roboelectric plugin version.
c62ca65d97eb058ef048d95ac10b99efe59c064c,"exceptions--
Less declared but not used exceptions.
Less tested but never thrown exceptions."
ead25618fdd9d1befa76a2ea1dbd66f9741c9af6,Missing keywords.
aa857fbd6c71f37b4e2a3ba590e61965a37218b5,Missing/extra comments/annotations.
9e52382fa7e377bc336499d9f5000662445dba0f,Real changes.
ae05603c3800df74390089d6a6c1562708cbca12,Release some dangling pool resources in finally blocks and reuse local variables instead of getters.
19611a3aaf2d45bb8274bdaabb4bf4b392e05fea,Add more comments to indicate resource (Closeable) ownership.
8acb4cc63588cdf595357bb60ac1ac79d3985893,"Add some generic type arguments
to prevent raw type and unchecked warnings, suppress where needed;
mostly to reduce warnings at call sites in clients."
43ab11d3b0a66fde1831699b4cb7146bce5dd68a,Enable further checks (in gradle) for non-test code.
72b51886cdd8da015fbcc7e680e7ed7ba7572e1f,Remove redundant fields exiting in super as well (with same type).
ac3aab2a5ef9062f1560b900e69f601c8225089e,Reduce duplicate code in MultiTransformation.
6840e4c22494617e679efb20896a6279dd08a9cf,"Review fixes, removed tabs, changed ordering in GifFrameManager to match args"
60b06578a99c3b29998be855e5e636e6e624850b,Remove some raw type warnings.
2c2b177cdc2f3a02da1663098b4da0c4d6262606,"Merge branch '3.0a'

Conflicts:
	library/AndroidManifest.xml
	library/src/com/bumptech/glide/Glide.java
	library/src/com/bumptech/glide/loader/model/UriLoader.java
	library/src/com/bumptech/glide/presenter/target/ImageViewTarget.java
	library/src/com/bumptech/glide/resize/ImageManager.java
	library/src/com/bumptech/glide/resize/load/ImageResizer.java
	library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy.java
	samples/flickr/src/com/bumptech/glide/samples/flickr/FlickrSearchActivity.java
	samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/api/Api.java"
a3e24e295f5f3f167898c3c898533b8459fff823,"Update readme and set integration versions to 1.0

Conflicts:
	integration/okhttp/build.gradle
	integration/volley/build.gradle"
488573d03a70e39aa948dfe0bb1f4b03accb4875,Update license.
c32f00a2aca81ee641955bda36cf3e985d628df6,Add warnings for future api changes.
5dc4cdef8898d8f34590823961c7fe751784edeb,"Pull out EngineResource wrapper class.

Conflicts:
	library/src/main/java/com/bumptech/glide/load/engine/EngineJob.java
	library/src/main/java/com/bumptech/glide/load/resource/bytes/BytesResource.java
	library/src/main/java/com/bumptech/glide/request/GenericRequest.java
Conflicts:
	library/src/androidTest/java/com/bumptech/glide/load/engine/EngineTest.java
	library/src/main/java/com/bumptech/glide/load/engine/Engine.java
	library/src/main/java/com/bumptech/glide/load/engine/EngineJobListener.java
	library/src/main/java/com/bumptech/glide/load/engine/Resource.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/LruResourceCache.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/MemoryCache.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/MemoryCacheAdapter.java"
7d1b90f6f06500ec52eb08704de52d8a8392e149,Performance improvements in flickr sample.
8bb5e18b09fa9246836fede0db6f86145df00cd6,Set version to 3.3.0 from 3.3.0a
bf17e1d0fb987cad223ea01c932cef9b15b4dcf1,Bump version to 3.3.0
d7eed7bc488fdaf88a4dfa1833373ff63ce886f6,Bump to 3.4.0-SNAPSHOT.
e71f2b8c21e3277d687155f31ba1c6f32a7f8010,Add unimplemented sample svg project.
3b3414f897b9db21e450b2a511f27606dfdb94d0,Make the SVG sample a functional app.
1e5d51a9dd0bbde1f974675c16372a4f97126872,Extract MultiClassKey from Registries to be reusable.
2d2fd74ee83002c19541f772dfb3e5ff5aa967c1,Extract SimpleResource as a reusable component (clients may use it).
9a293d642c30d91e22e46e1a89e64040476d764f,Extract DrawableResource as a reusable component (reducing code duplication: which already diverged).
e9c55fe4dd77358b301ee001d1c55ebc196e6e3a,Make the engine require only the dependencies it will use based on DiskCacheStrategy.
b23e1c479179b472ebb31ac20ec57a4284029d78,Review: fix invalid diskCacheStrategy checks and rethink checking Resource.get() results.
701890f819d28596799dc0ce1005e6e37572fefb,Simplification enabled by simplify and nitpicking branches.
090f1af18b872c3304c3ee265e86d20f41b694c0,Fix layout in landscape.
5a8cc18242da7de295ef19d137725afffe546b83,"Change junit.framework.Assert and junit.framework.TestCase references to org.junit.Assert.

Fixes #106."
b4a50bb787f9b9bc9e59b297aeda04796420a5a2,Use assertThat instead of assertTrue/False/instanceof and some other assertion changes
2384dd34baddfdcdfa5246734af5621cdd71a7ea,Go one step further with Matchers from the hamcrest-library
1376f3c0628fdda27db005c4865f773accd8616e,"Review: change .size() usages to hasSize(), remove is() wrappers"
219b3a468a7749e4b52b0e710df31e3c3b944573,"Merge pull request #114 from TWiStErRob/assert

Use checkstyle to forbid JUnit 3 and some other internal packages."
fa54837a6ee984a1d6813d25232a00661c7265d1,Fix compilation warning in Glide.
99a1de1974045b7f0f67ed28f2ae34e860abd978,"Add logo.

Huge thanks to Corey Hall for the logo design!"
ab87f38c82ac8b052b9a92ccabe4f5b45210da06,Fix a jdk version based generics bug in tests.
787279ab3e72c83626e65382a1dbd97f45e6cbd3,"Retain bounds when mutating GlideBitmapDrawable.

Follows the same pattern as BitmapDrawable in the
Android framework.

Fixes #118"
237ad5590666f641db5762c599be7c7edbfd0645,"Don't call executePendingTransactions.

Fixes #117"
00b0acca158c68091735a5c1aaa640306cd0b922,"Merge pull request #120 from sjudd/nested_execute_pending_transactions

Don't call executePendingTransactions."
3d81fc2b99797dd9c920f08fec57a8e124cee32f,Code comment fixes for RequestManagerRetriever.
76a6089ee030a8f6fd7d5abf2ba68225aaf44657,"Fix singleton initialization.

Fixes #115"
27fdb88d48eabbbab3b9babb7d8757a014327da0,Handle redirects in default url fetcher.
d5cf5cb0a7646969a68d58e644420ee71af14370,"Make javadoc task depend on compile task in upload

Fixes #113"
1aae73448879a7ca03902d3c9379ba3e29e4ae5b,Build with --parallel on travis.
2bd356be45b4af1419c06d05336238d18581af0e,"Merge pull request #125 from sjudd/handle_redirects

Handle redirects in default url fetcher."
e93b0a9c4dffc752b38b499adcf000a45d1828c2,Close streams in OkHttp and HttpUrl fetchers.
4dcb3c780a11d8647b9d0aeb1939952489d40d62,Allow null resources in GifBitmap resource decoder
526ae88675e01956aa14415b0cba527cf4f1cb0a,"Handle and throw exceptions in read in downsampler.

Fixes #126"
4679c6e171b7bb59ed13aac862d32a8dee9a09d1,"Handle relative redirects in HttpUrlFetcher.

Fixes #119"
e0239113cb498388e7c46664df6490335de6bb84,Fix NPE in gif sample.
36d52a4b762f98482163e38c68a324ae20392e7d,"Don't restart cancelled requests.

Fixes #128"
b007bfcc492551550c1566a21c2eb7a402514776,"Always use ARGB_8888 as config on 4.1.

Fixes #129"
051069671413f8b66a1b237a8f682aa6c1b50275,"Clear bitmaps before returning them from pool.

Fixes #131."
6b082ebd7480c5418c20b1d539bfa16912650c50,"Escape unsafe characters in urls.

Fixes #133"
c168678af320bc0616635f1704f2b914799c4dec,Merge branch 'jelly_bean_image_skew'
34cde327bc68d61e7aa64ed122b1d60250bc28d7,"Allow GIFs without Graphics Control Extensions.

The GCE is an optional extension that may or may
not be included per frame (it's slightly more
complicated than this), we shouldn't throw if it
isn't present.

Fixes #134."
ddbb043a5e8e4ad1471cde92381548645400570a,Return null from decoder if GifHeader has error.
738e0c86f7825a28f90774bb01775828123033b2,Clarify integration project jar names.
28744e4e2c68fae8a897eb9a8a579b24023746b6,Bump version to 3.3.1
2e5ef970e78b2c6b4605444d564fad138b9232cd,Prepare for next dev cycle.
42db20bed3c2b16f3b6cf3719e5a67023c776dea,Update readme javadocs link.
634650b0ad234e857e7afcc25818e8d0306b2910,"Update FutureTarget documentation.

Fixes #142."
e91056448d1f32c2585c99811ef69af8b29ce491,Update to Gradle v2.1 and Android plugin v0.13
a9d87fb5e13a86c9ba52d400815566c020e1d3d5,"Default to visible in GifDrawable.

Fixes #130."
e7812093bde705833531b43be2e9dc92adef1f5d,"Workaround for framework NPE on KitKat.

Fixes #148"
f2285a83d5ac3e79383278b91aa21b0a87603cd1,"Add support for recursive thumbnail calls.

Fixes #149"
dc6b7737ecc118c4ee0fcb580920d469ffcc6fd9,Don't use a weak ref in LocalUriFetcher.
48be324f9f0ae723d9d267911cb510c4b1dd16fd,Move get bitmap size bytes into Util.
98389d828138621d8de3fcf2d819b5a0ae6dc283,Make MemoryCache use Resource not EngineResource.
5207906814e7f5983ce16db79affba28e5651d2e,Add a basic pre-filling api.
20676c43a1900854678149f8b0b8184962c383da,"Clean up util, make Bitmap size methods consistent"
0bda20fb3ac597a309b094ff99b41ba1a4ca475b,"Set out alpha == in alpha in FitCenter/CenterCrop.

Fixes #156"
2572440646e51f7fadcee18e7a34c36bc9f40818,"Don't rely on Closeable interface in Uri fetchers.

Fixes #157"
e08fca6797945ad47b4d895a63bf5b3edc08c3be,"Don't call getFragmentManager pre Honeycomb.

Fixes #158"
4185efc3779f8caf2dd8103aa84705e7a88f679c,"Decode first gif frame before returning resource.

Fixes #159."
a128f6fbc301213074e0e3eaaf7c92f71c5da901,Don't loop through GIFs containing a single frame.
b4ed2bbf3fbe3c5bccc57fa253ee8abd13b38549,"Return GIFs with a single frame as Bitmaps.

This only affects the default decode path where
either a GIF or a Bitmap is an acceptable 
result. The GIF only path will still return 
GifDrawables for single frame GIFs.

Fixes #160."
b51cd256aa6d673e49c77676a5e1f9bb644cd2b3,"Handle asset manager Uris.

Fixes #155."
f9f9d2ba98eabe692df0a893b497993681fe24b0,"Assume string starting with '/' are file paths.

Fixes #161."
91289b40e72aee1f4cfce66e536a141e91b39c50,FindBugs fixes.
9f64f4735308ef2ce9d4fd549b76b28dc4658f88,Add findbugs task to main library.
5ba19a0e69ad3a651b8f13ba45de48a56b56ce36,Fix PMD warnings/errors.
42086c3cc9c9303dd7d219cd43da7426683d3a26,Add PMD checks to library.
3a5750359cb0362d01d394032944854fdde4069e,"Initial not compiling gif encoder

Source: http://java2s.com/Code/Java/2D-Graphics-GUI/AnimatedGifEncoder.htm"
f7b3e5d7a4893fd55b3fd36be56bb37319d8aa24,Add a GifEncoder/GifResourceEncoder.
26b25d874e891702ec7be835c3ed09100866671a,"Don't assert when adding ViewTarget callback twice

Fixes #167"
36e7c0f4b7bc1a57230c1f90550cb013293b405b,Add gif_encoder to glide dependencies.
4f89e9749a813cf7bec0cd6d8148bdb8acf9d900,"Only apply transformations when decoding source data.

Fixes #112."
57d127ae97689f4fe5524b2f4e1bcad8f6d09fd8,Add unused to pmd
f08ab536741266de5ed3887a2b3d5469299e89e9,"Relax requirements on thumbnail requests.

Fixes #107"
29438d5d293744613485914005d2717e03cae485,"Add an empty constructor for SimpleTarget.

Fixes #170."
accb2312cb6b2715a79e7f76fccdd9a97c5c1e2d,"Fix ConcurrentModificationException notifying requests.

Fixes #162"
dcfc33ff309aceaccbf5d9107a992512f8236833,Add an API for preloading resources.
a1912e2524d787760e38a92933851032f684b9cb,"Use full resource name to construct drawable Uris.

Improves #172."
1737514a35eae271f1a7d5441b92f9ea9c048e27,Fix javadoc warning in AnimatedGifEncoder
8a86b3909373197eabbd222115ba33257dc5a5aa,"Fix a concurrency bug in DataLoadProviderRegistry

Fixes #181"
897a034af167e52ecfeda89d267bba1640422058,"Handle null exceptions and resources in EngineJob.

Fixes #180."
e251093d388b502e07a7a8d39002dd22de1cd882,Remove argument from EngineResource#acquire.
f7cfabaed6bd44df15ebe3f6aa6ecc0757e0d1cc,Pass isCacheable into EngineResource constructor.
56ecaaaeda884a1976942d89a151ad363eaf9b6c,Fix acquiring resource for ignored callbacks.
7d7d03dceae92dc32a9b84dee665a34c300017a7,"Add signature

Fixes #176."
50c46832b71de76dd5142112b9ef76fc13238d6d,"Add default signatures and cache strategies.

Work toward #174."
c274f4e3cefa1b6e2ac430a9e5c92e26d798687d,"Replace ResourceRunner system.

Progress toward #111"
7080b408f7c19d7c5d1ab3ca74e10585a61a55fe,Consistently order executors in Engine.
b6bec7733c633f7923467a30c31689fe8b6b7666,"Set format of cacheDecoder in format()

Fixes #187"
3c1ebe277614f9e7cb2712892122e74e5e0e2d85,"Deprecate #load(URL)

Fixes #176."
8f80ee831ff7b42b72be5f8728a9486fe64c2fa6,"Skip AnimatedGifEncoder for original GIFs.

Fixes #184."
4c0c22e7f5fa76d9f44d79b06866f1d09f305d82,Let animation factories be used for multiple loads
b01082225896132431da0ee9a85028d610ae4abf,Allow request builder re-use.
7ace7e959b5d44fde04526eed4f5e0abb5a33980,Add from() api to allow builders to be re-used.
7392026b13c2265081d2f467d072d5eb6011720e,Add a clone() API to create copies of builders.
fe42c3811c9f30d91690d614e8a224a67193e2e1,Pull disklrucache forward for readme change
b6a75caaecf84103616b1b6deb71b2f2ba19b4b3,"Fix race in TranscoderRegistry.

Fixes #191."
1a7d5dfe94cacc327c642b51e3abf953c1b7d030,"Ensure overdraw, not overdraw, of reused bitmaps

Rounding errors should tilt toward a 1 pixel overdraw. These
errors could occur because the application of a scaling matrix
is opaque to caller within Canvas, and underdrawing can result
in garbage pixels in an extra line. Also added verbose logging.

Bug: 17963089
Change-Id: Id85b50ee646aecdcb7d6b26bd988577bc6fec980"
14d04c550556eae627c1e4262c81b40c1b7ef887,Add a simple fullscreen activity for flickr sample
d88c2f7df8007f44fb2b6ec3c00eac280fb298ec,"Fix still gifs failing to decode.

Fixes #196."
162c0ca87fa61299bfd13b18fe8bea76772e05f0,"Add api to set default decode format.

Fixes #177."
114a12eae5a6da8f046cf5328dbbf72f3297312e,Add a Bitmap -> GlideDrawable transcoder.
67e5f1d5b54017ccac1ff2232b5e2d833eebb031,Add deprecated annotation to Util.getSize
990a0d3e7d59029a96d720aac578945d14d55baa,Add tests for local color tables in gif parser.
3640e3493c7ea15243d8f0e953b5f0486a40c8a1,Skip image blocks in parser.
2c259f532bee14a4f3f6be419bcfb58ef5e22ff5,"Set transIndex for GIFs with transparent pixels.

Fixes #201."
855776275d8ca409f968c8fceff4d11f51bf8592,"Decode GIFs with more codes than can fit in table.

Fixes #203"
1579932986cc7438b103c811adeb0a14feab0ada,"Avoid drawing recycled Bitmaps in GifDrawable.

Fixes #202."
159f8c3a53939196c0e7a5f4a1667aa1fdfcd205,Add fullscreen activity to GIF sample.
29fa7dda76bf92f8d106826ec2769c0ddaade551,"Reset frame pointer in setData in GifDecoder.

Fixes #204."
3ea7f151576f197df4bd6c3cce46f229cc281698,"Handle null Config requests in LruBitmapPool.

Fixes #194."
38ced22f14acd14b69bb102605505d1feb04b46b,"Apply gravity in GifDrawable.

Fixes #206"
dc756490f3da974008078366b9e1dd5d34677729,Update readmes for gif_encoder and gif_decoder.
b4cc7fa5f667e4a56514823cf2ad85d7435b498a,"Always decode gif frames in sequence.

Fixes #207."
6958330c93825bbfb70aea1aff9aeed76b59af4e,"Clean up GifDrawable resources more reliably.

Each time we call get() on a drawable resource, we
get a new Drawable. We call get() repeatedly on
resources when they are retrieved from either the
set of active resources or the in memory cache.
Each time we create a new GifDrawable it holds on
to one or two temporary Bitmaps outside it's
shared state to render the current frame and obey
the dispose_previous method. This change means we
more aggressively cleanup those resources when
we think each Drawable is no longer being used.
The side affect is that we may reset back to
the beginning of the Drawable in some
circumstances.

Cleanup in in memory resources makes it less
likely that frames would be retrieved from
in memory, so this also works toward #207."
39f12e09c7273b13604184e523846c1ef18ff311,Update gif_encoder readme.
4fcb6cd5b3dbd7ecc58d3e3dcb7a3d8304e54a16,"Set minimum and default frame delays.

Fixes #205."
1c213bd9646c0292439767103060391121624ff9,"Use the application Context to build ModelLoaders.

Fixes #210"
f4e84300ed9c3a518f4bda4d29f417202e0e3adf,"Throw when given null data in Resources.

Adds assertions for #212."
f0c8a95c9d2ecaa085d389e4d95c80857d2f953e,"Return null when gif frame cannot be decoded.

More work toward #212."
4ee3030c0b69cbc1a0c0a073d33cc5a3023ed493,Add an obtain() method to BitmapResoure.
a61f3e9b2f21355cf8a0d3cdb0da15f19369a5eb,Assert that GifDrawables first frame is non-null.
688909efa77b8effea7dc02424362706af57048c,"Relax request listener type requirements.

Progress toward #213."
adf4c9e65eec8a83b39777438829d6817af89598,"Document deprecated methods will be removed in 4.0

Fixes #211"
e4ac1f593a328f35ca17d8603a54db3826da2475,Clear data from GifHeaderParsers before pooling.
62e93428d0e746bd9d7c36873d5500c867789eea,Recycle resource if available before cancelling.
3cb5a892b61d5db1243de1e303932db000a86478,Log get/put in LruBitmapPool as verbose not debug.
32f7a826624747bae652e4d46a52739047ed9bd0,"Only post recursive resource recycles.

Constantly posting resource recycles can cause
recycled data (Bitmaps) to not be available 
synchronously which can lead to unnecessary 
allocations."
64d97bb3532525879dd90f3b246ac6060f466684,"Document width/height values.

Fixes #145."
af30ddf8b29bf6dabc7ed01891a48906e14b5f8c,Copy thumbnail gif url on click in giphy sample.
284bbcd0ed2c8f747a3b6abbab9c673487842f53,"Use % to determine if GIF frame is transparent.

Fixes #214"
9acc6b7c656833022a6b0839c303d0fb49750831,"Only decode one frame at a time in GifFrameManager

Progress toward #212."
78a850159e64118073a66d1ae430133214d08a7a,"Synchronize gif decoder getNextFrame.

This does not make GifDecoder thread safe in that
it doesn't guarantee that a decoder will decode
a particular frame, but should keep state
consistent and prevent crashes from concurrent
writes to buffers.

Fixes #212."
41f3a4feefd1b65761281d97f02ecb51b8580c89,Add verbose timing logging to DecodeJob.
9f6146784f4a8cd8c980d79e3915959718613ff2,Fix gif encoder application id.
b67bebb4bb4b194ce2cbea5c6f68c87a762e9b70,"Always use ARGB_8888 to decode gif frames.

Fixes #216."
b4762ebd63a4da3efd214b91cf45909a9471a3e7,"Set frame transformation on GifFrameManager.

Fixes #217."
b1d9c53bacafb993dc4f264f76f396611e235bdb,"Protect error logging with DEBUG property.

Fixes #171."
6f41399fe1414cf5d05e2732b88925538110524b,"Post recycling gif frame resources.

Hack for #219"
05910d7bb9e9aafdf85893227d1dd50b82266771,"Do a get before put when pre filling.

Otherwise it's likely our new Bitmaps will be 
immediately evicted."
35ba01c93ca9ff3ed3b9943571a746c5cb242a24,"Obey default DecodeFormat in prefill API.

Also does some cleanup, including switching to use
a builder and re-naming a few classes."
b71d633d0fc091f3a4dc5615bb1f3467ca2df618,"Pull disk cache forward.

Fixes #222"
88868380fb22a5dae89d8664f2daa8c99522bc74,"Use sample size to acquire Bitmaps in Downsampler.

Fixes #224"
deef4ae2607fcbd32caffc03e2490cbca9134643,"Avoid expanding buffer to fit entire image.

Fixes #225."
dd737542dc2f6d58cfb1367929c8d3ebc1eeebf4,Add a back off to bitmap pool pre filling.
dc155ae8b22d0c59ce19d57f1a7b6eb35a660d47,Set fixed dependency versions using properties.
a48a2d28b95cfeace83d4f295ce6928bb3844341,Fix missing Config warnings.
a2f7668dd81e9aa6516882ba3c211cb64f75a610,Move TestUtil in gif decoder into test package.
2293cb271dce5355f4e6e19de6ec4b7816fad0d2,Explicitly set JUnit4 runner for junit tests.
767087d4c91ce7dcbf52b7d6d5aadcaef1e7a455,Avoid I/O in DecodeJobTest
34f797ba79d3dbb59765c6a1d03fda6d8751e300,Add jacoco coverage report.
69aee75208194b4b6d4fca4aa7a4ec8c2dfec486,Make AnimationFactorys top level and add tests.
dfd29c7799559aa6215d36189e7ba1870256849b,Fix checkstyle config in Intellij
f4d511ebf70c55d9224b57e6ff390373c0e2b12e,Fix some holes exposed by coverage report.
8588abe9e8967252c789d239e23ff1bfc3c26b21,"Replace Hamcrest with Truth.

Fewer static imports, better wrangling of generics
(particularly when asserting contains), and, least
of all, better internal support."
57de21f11be2b7d3db2c5a843017ebc72d575581,"Avoid static references to android classes in test

Depending on the order tests are run in, this
seems to be able to cause errors."
64c9d904d1b7a57c4fe2b9a513fd1c146d744a94,Remove duplicate test class.
1ba6cbc27ceb69d097d0bba0e173ea96ecf41cac,"Revert ""Avoid expanding buffer to fit entire image.""

This reverts commit deef4ae2607fcbd32caffc03e2490cbca9134643.
Fixes #231.
Reopens #225."
17180f4ce97118d61e609fef1ebbcbaebdb1d19e,Pull out testutil project.
2007440c380df454db15f83b019a5b4c55ca4b72,"Add API to fix mark limit/buffer size.

Fixes #225."
913e45915bd8aebd6e419d727020f6efc5d80ac6,Remove unused code in MemorySizeCalculatorTest.
59e410d39587e16ca5bdadafa4c4b18043840568,"Use resetter API in robolectric.

resetStaticState was removed here:
https://github.com/robolectric/robolectric/pull/1364"
f7a6d65cf7c1a41908dd48e0dab68ee5b881387e,Use set style for imports.
72e189cc27d62677a7e45dc5ddfcf4cc0d6466ab,"Explicitly verify state is non null in Drawables.

Related to #233."
0299bf37b060a03dd6cc4e7d3509804c70e046ca,"Add minimum sdk version to README.

Fixes #234"
e91ade604c4a3c145aacecd8293e9f7a356b5dae,Use source strategy in Giphy sample.
85dbdad1e5e9fc7b2d9e3e2234058dcce956a047,Add pre/postfix to integration source/javadoc jars
a311d4835cdede5757e203d52a1bb5e707cfd989,Set version for 3.4 release.
f8fb9c8647c59ddd811a21f3bc3538475d0cec18,Increment versions for next dev cycle.
1e618804a0d62feca2c4a804c1699f76687e694a,Pass override width/height to thumbnail builders.
41e1e84c86f5ad00dd12ea3cb19c7907cfe198d3,Clear thumb loads when full load finishes.
0ccd7b41a2185e18550d18b76d4ed85bf5709333,Allow underscores in method names.
705fe5a93a7254117ae4d762c4aff59e3b2ddce1,Fixes #249
c1fc2eda33b21b455243a7c14efb95497b74d3cd,Add tests for RecycleableBufferedInputStream.
93208760b2454dc9234380c19198a9381849163c,"Always clear thumbnails after full completes.

Fixes #244"
f0c21d36e5cbd6035e8fd999ae21c1e0beabc340,"Avoid memory cache/active resources if skipCache.

Fixes #258"
2742674973d888ee017fe977ea0684ba2b1ca4b0,Refactor out active/memory cache methods in Engine
d7b36af62eee4e2649206332b44f75097d138ed9,Remove incrementing signature in GifFrameManager.
f462212f5879d00de90945034e182ef06a78ecaf,Refactor loading frames for GIFs and add tests.
f5d05829a67d9bf161f2e616a1aa17b4e54cbb8f,"RemoteViewsTarget feature requested on #242

Ability to load a bitmap into an ImageView of a Widget using
RemoteViews.

Example of usage on the following gist
https://gist.github.com/pavlospt/00242d5102ac8f76e169"
51d3546e32d0965ad2ebf862594eacd37e8b93ba,Add tests for AppWidget and NotificationTargets
9089a96ff178e21a710d5ca9bcb649159fdc0023,Merge branch 'remoteviews'
e34df4494ad091e546bb0889d6839e1fc1fd0f2c,Add ide files for Intellij 14
636df9907e4866cc9895d46c3fa1aa594b30813e,"Use Interface instead of abstract ListPreloader
In your examples the ListAdapter and the final ListPreloader are
strongly connected. Using an Interface will remove this strong
connection.

Using an interface that an Adapter can implement has the following
advantages:
1. the dimensions don´t must be passed to the ListPreloader while the Adapter has the first access to the dimensions of the ImageView
2. you don´t have to pass the items to the ListPreloader, while the
Adapter already has the newest set of items (e.g.: CursorAdapter)
3. in most cases the ListAdapter already has an RequestBuilder, so
you don´t have to pass them twice
4. you get rid of an extra class (ListPrelaoder) you have to implement"
26651f07b96c6bd8c9e29e0c138d6226fabda192,"Split interface to provide the size seperatly. Change interface on `PreloadModelProvider` so preload items will requested one by one.
 - introduce new interface `PreloadSizeProvider`
 - change `PreloadModelProvider` preload items will requested one by one.
 - adapt Tests
 - adapt Samples
 - add two sample implementation for `PreloadSizeProvider`
      - `FixPreloadSizeProvider` to provide a size with a fixed width and height
      - `ViewPreloadSizeProvider` provide a size request from a given view using a `OnPreDrawListener`"
400c11a4aedd7c855e2cb55e57aa297a35861539,Use old List of models approach to preload and add some missing documentation
b095b9c8cfa34b86d189989855ac8950caf8002e,Cleanup comments and maintain backwards compatability for preloader.
28a34b614cc9d215e4b506f80e30acf96e119f9d,Only set size once in ViewPreloadSizeProvider.
7dcc877541e359e36db33fb46b49746cdd19445f,Update readme.
5ebcfbd3517c52a07567f97ec4d4bdff577b382d,Support different target-sizes for list items
33642b193db74513d063791e195ebc592f7cef5b,Change and remove some leftovers from testing and autoformating
72e93e6fc46d33acc1e34d9a315df41eac989e6c,"Use identity matrix to detect changes in rotate.

Fixes #270."
0618cf043cbc41d5dafab4c21436031a26805f47,"rename preloadItem(List<T> items, int position, boolean isIncreasing) to preloadAdapterPosition(List<T> items, int position, boolean isIncreasing)"
dc80fe44e6074019cddd2d736fa8ff5a894dcf53,"Merge pull request #273 from DavidWiesner/feature-ListPreloader-support-multiple-sizes

Feature list preloader support multiple target sizes"
b6763aea69edc96fd98305f5bd67bc247f6701ed,Fix holding onto reference to view in list.
827fc08222eb61595ab0d5fdebeea0033e9e8382,Add an original size constant.
1bd66cb3ffb1a4f684bd9cee6209df28fc860147,"Always return new copy in DrawableResource.

Fixes #276"
3d2580709bb0832ac43b165b18f46301ef054402,"Don't call cancel in OkHttpStreamFetcher.

Fixes #257"
3cf5a3094228b714c4f152c048bb0100d16cd3fb,"Merge pull request #274 from sjudd/original_size

Add an original size constant."
b735d2d918e3a37ff92884c810db3109a9df1abc,fixed the getRoundedSampleSize() calculation bug - https://github.com/bumptech/glide/issues/288
0d9b798f2633709e53e1451159f5b99fbe24096a,"Merge pull request #289 from balmbees/v3.4.0.1

fixed the getRoundedSampleSize() calculation bug"
2a93b1eb9f789a1866b582f766d2797d47ba12d1,"Allow video decoder to specify time to decode from
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=81384031"
6528aee7bb440b0da53c81ec82bdc3d98542c39d,"Allow request manager retrievals for detached fragments.

isDetached seems like the wrong thing to assert here since isDetached has to do with whether the fragment has UI or not. It could still be alive and attached to an activity. See http://developer.android.com/reference/android/support/v4/app/Fragment.html#isDetached().
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=81815183"
24fc713306c650683581531d18c08e3c20bb8373,"Fix NPE transforming Bitmaps with null configs
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=82003436"
7d683535a7f46a46d97f21330ab332a62e6e352f,"Reset bitmap factory options out data before reuse.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=82270509"
ba32d32fdaee007b14d3aa8dba42aa7c422a1649,Update Android gradle plugin to 1.x
c957b203cdcffa62e23965fff3131b394352b1b0,Update imls.
04b4e77acddc80832f2014421e1052071b4829d4,"Avoid OOB exception parsing minimal exif segment.

Fixes #286"
a84f6d1cc2885168c25f7bdfe912728f3be420d1,"Avoid overflowing read buffer decoding Bitmaps.

Fixes #283.

We use BitmapFactory.Options#inJustDecodeBounds to
decode the width and height of images before
decoding the full image so that we can downsample
large images to avoid memory pressure. To do so,
we use mark/reset on a buffered InputStream. To
handle images with large headers, we set a large
(currently 5mb) mark limit. However, there's
always the chance that that limit is insufficient
even with a well formatted image and a bug
free decoder. Since downsampling is typically an
optimization, if such a failure occurs we still
want to decode the full image, even if we can't
obtain the dimensions. By enforcing we don't read
beyond our limit, we ensure that the header read
fails recoverably, so that the full image can
still be decoded."
cf8317833765b3245e7d214e5f8ce9ea9455fcee,Fix a javadoc import error in ViewTarget.
fad970a0f7219e022690aae62a2af3ed331ebb41,"Allow initializing Glide on background threads.

Fixes #295."
b7be7be439d32ef73a5e9dcbeed6cf3d042aca8c,"Use factory to lazily instantiate disk cache.

Fixes #298"
a2e6e60898d6d1de08d12cd12f3b40f085396e8b,Fix flaky tests.
9063f6c077afb443311b952e832d3963e9cbaa66,Call trim/lowMemory in request manager fragments.
2664bd8805ba90b54ca8ff226143f2a015c21161,"Always use ARGB_8888 on KitKat+

Fixes #301."
9456192da7cb5ffb51d092a325118e4cbdfd8222,"Safely iterate over requests in RequestTracker.

Fixes #303."
e099ef65d0d711f300dd2fe6410b8d005c30abf9,Allow SIZE_ORIGINAL in SimpleTarget and override.
e6a4ea3642159d62fc53389875e2ea890cc430b9,"Add GlideModule for lazily initialization.

Fixes #299."
7fb36016efb97ee84e206f22d4a1ca3df0c51a23,Allow applying options in GlideModules.
3422c5754079df8e7a9871f82281b4dde2a78c5e,"Whitelist bitmap configurations in LruBitmapPool.

Fixes #301."
a1c39abfeb14de2ef735d5556fb231ad0e734e62,Remove OkHttp/Volley instructions from Readme.
6f6768b24a9075ea8bce41899d21ee7e75678d9f,Bump OkHttp and Volley versions.
d7ddcf57b963b2dca559b4b71ccc285965c72f19,Bump version to 3.5.0
c5a3de7069767c84fadd74979d8e5dbc5390e179,Point to 3.5.0 in Readme.
89352b384388e2a94a59b3381e1014117e57c435,Bump version to 3.6.0-SNAPSHOT
351d3d5b6fa75e381c2259e087f6cfdbb6addda4,"Avoid ClassNotFoundException in RequestTracker.

Fixes #320. Utterly incorrect comment is best
comment?"
b2e544773ef978c8c802b4d71cb28ea8705a11ae,"Avoid race where Request snapshot contains null.

Our implementation of toArray() called size()
multiple times, starting with the size used for
the array. size() in WeakHashMap removes entries
from the map if the corresponding WeakReference 
has been cleared. As a result, if a reference
was added to WeakHashMap's reference queue between
our outer call to size() and the methods in 
toArray(), the actual number of entries might have
been smaller than our array size, which would
lead to one or more null entries at the end of the
Snapshot array.

Fixes #322."
6d96b9194a42b67c482ccaf8a368a008e417a987,"Avoid spammy logged exceptions in ManifestParser.

Fixes #314."
81e1530cdb1152726fe81621d0d48391fb6e0a65,Allow travis containers.
5386deb84cb9bae6b4e2ac9068c7fbb372c6d64c,Bump version to 3.5.1
d2a982b83dc9bfb3a0003e6e0b0d9bdb1eb5e8a3,Bump version back to 3.6.0-SNAPSHOT.
b64ccd6b2e3e6362069feb6664a546519dddc08b,Add irc channel to readme.
2c5f63eb5711fa6f3463dc58766375653384ad5a,Update description in readme.
7d9590c3a334c04435fe4c497ddf920a2e895f62,Add RequestContext.
0a457a1e5f1ae26199d95242283d55163551753e,Remove unused getId methods
0786db22bcc0bb28640810f52aafd12201e56fe0,Allow data to be rewound.
e0fe3436efb24348374c6bea34a150ac58062923,Remove GitBitmapWrapper*
56465879a5f54baec8c7ca82d5da14a12d729e81,Disallow specifying encoder/decoder per request.
2702c7c059b4f26571082b300a9ca086d2d02af6,Remove ImageVideoWrapper
5ff26db2276c888d72cb46f1fcff2778fb33a6ec,Remove unused data load providers.
6e616283002ae1f6d688ced4a954d878de54acaf,Get the giphy sample working
e1f3574d96ac59ff59559b8a07fd0fcbf3dbaa77,Remove FileToStream decoders
af6e1e8504f874cc7b9117e10534375b4e6b3140,Replace GlideBitmapDrawable with BitmapDrawable.
3be40cf73c2330a414d3e9c3097b2b5ce7fb89ef,Replace GlideDrawable with Drawable.
89950209bfcc60b77c7060934c1c6a49f8f5c5af,Ease restrictions on AnimationFactories
760bb12182742e7cb8dae45f2aa8e27af7e8b383,Split apart and remove typed request builders.
e510b9933a22a6f180513bd3b1380861fee18108,Start fixing tests.
ef027a4d4a85a3438a4d13d85d94b4bae94af8df,Create GlideContext
de097a648061dd27bc0446c786a6b1c0bdf1a2e2,Compiling tests.
6a6467b927194e6fc5de18d8374ab592d75fdcf0,Allow ordered and multiple model loaders per type.
f8f387f2ee7e8d4d82986ec0f0b6e0989c47aa6f,Add MultiModelLoader and split apart uri loaders.
247c651f983db54a8b14888fdeaf8131695b8585,Remove Stream/FileDescriptor loader interfaces.
eb8cf4c3ed9b6388581e77dd1f67beabe064b8ec,Add Load/Decode paths.
1e28d46d81032a9c93ac1ba97095729445b29e20,Fix downloadOnly
4eb3545b8e4615418391437a60f8d07057d11c10,Add Load/Decode paths.
71a8244de9c50557f3494ce25b870f8d0a86dfe1,Make Transformation options not type specific.
1abd60feee7f6321fe790a85e24e5376652ffc8b,Reduce RequestBuilder to single generic type.
3c85aea1f6186940bd1be912df27251d165abde5,Pass through options to ResourceDecoders.
8f4fad0c846e09aed488d0ea6dafeca5451edb05,Pull registration out into registry.
32c9d3827dedf9a9d1372715f3ba68f235e826ac,Cleanup test failures and build errors.
758ce572abb700b086bee2dd7fc2e34e262f129e,"Throw if request is provided as its own thumbnail.

Fixes #330."
52ec8e39072d2a02879e855eb273318b1a9c08db,"Fix NPE in RequestManagerFragments

Fixes #329"
3dcad684f08ae6bf051cd6c55a0261d96ab22234,Allow custom Volley requests
4833eaa0da2e718596b5c3387c9593d73162cf06,Rename Animation options -> Transition options.
2c2a6efc760b04c255051ca5e07b832d2b180d9b,Compile with java 7 and pull dependencies forward.
2756dfc449ac51c89da05e9125e9ca28e981f881,Update to Robolectric 3.x snapshot.
d34b710a70d3d2591d443d89277a8275779f1641,Update travis dependencies and add java flavors.
ffe982af2083851c1ab00f18f9ea7b24edbeebbb,Set versions for v4.
ca2907f414e1e8254d0469af6becae4e79b94cfe,"Add logging and NPE check in BitmapPool.

Fixes #331"
297cf1f61f9ff2584d503301e2f48785a399467c,"Obey Target.SIZE_ORIGINAL overrides. 

Fixes #333."
7ab34f3902b21268bc9c53a9f436c07f311b2576,"Add an issue template and CONTRIBUTING.md.

Fixes #332."
3dd62207d4175b447963122a7e4eb8988a37da34,Combine DecodeOptions and RequestOptions.
431ccaf04b5c3db3f87e2ac2c1ca151f5d63744f,"Add a Size + Config Strategy.

Fixes #335.

Allows us to re-use Bitmaps with configs other
than ARGB_8888. Differs from AttributeStrategy in
that it sorts Bitmaps by config only, and allows
Bitmaps with a given config to be reconfigured to
change their dimensions. In addition, we allow
switching configs between the hidden GIF config
and ARGB_8888 which appears not to trigger #301."
21cad72fe13832e2a3bfb5f679a7ec87811394fa,Add EncodeStrategy and avoid encoding GIFs.
49047a7c84b829e4ade49c3a2f9a71c8b9f8aaf6,Make gif encoder a library rather than a default.
22b0623d8701a3306fbf316a95f34394335c6836,Add DataSource to DataFetcher interface.
0e91adf65591fd5dc58b2834c50dd453b0114818,Add an AUTOMATIC DiskCacheStrategy.
f389e91ccecac6ddf736bbf1a4346782609eb034,Convert to google style.
7bb2e567806d3c9a9170779f219c6af136567c43,"Merge remote-tracking branch 'bump/master' into 4.0a

Conflicts:
	integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java
	integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyUrlLoader.java
	library/src/androidTest/java/com/bumptech/glide/GenericRequestBuilderTest.java
	library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/DownsamplerTest.java
	library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/StreamBitmapDecoderTest.java
	library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoderTest.java
	library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerFragmentTest.java
	library/src/androidTest/java/com/bumptech/glide/request/GenericRequestTest.java
	library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java
	library/src/main/java/com/bumptech/glide/GlideBuilder.java
	library/src/main/java/com/bumptech/glide/load/DecodeFormat.java
	library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java
	library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/SizeStrategy.java
	library/src/main/java/com/bumptech/glide/load/engine/prefill/BitmapPreFiller.java
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java
	library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java
	library/src/main/java/com/bumptech/glide/manager/SupportRequestManagerFragment.java
	library/src/main/java/com/bumptech/glide/request/GenericRequest.java"
03e0a494104f43a2672f9229960574148c48bef2,Consistently return null instead throwing.
136067c821871587585915c7e189d16c324eae3b,Work towards caching LoadPaths.
be59d3cf0b504e6655a37b5046077c7b3df4e144,Avoid creating Uris when loading Files.
e0b93c361655b8a06621d4257f034c3cc9a94e8c,Avoid an extra BitmapDrawable allocation.
34fdef902a9087885364e505d3e02f0c19b9fc1c,"Correctly read JPEG headers to determine type.

Fixes #344"
5b49fa9cd43adc4a0455a75c9346db8ef00827e6,Add ByteBuffer support for decoding GIFs.
e85cf305eb8e030cbfc3a7c73f438085ee0fb025,Avoid unnecessary frame allocation in GifDecoder.
6fd3ede8591f128ddc2ecde16924ab94b5c78523,Cleanup cruft around Bitmap Downsampler.
91017ff95f7a4be4d457c86f0df3b44bcc26989a,"Avoid clearing paused requests using hard refs.

Fixes #346."
0405fcc0782b308e06e0f6a44dc7ca7054f59a47,Add ByteBuffer support for Bitmaps
7a12e3691a2cb005bc629de0d683fdb1e504ecfc,Pull data fetcher out of LoadPath.
7480e1257d90dad0970408d372e9d5bdef830e87,Bump version to 3.5.2.
04bfd59fe1781e84d5e82033e07d19359f9a7d0d,Bump to 3.6.0-SNAPSHOT.
9482c5625651108e797de1adbb071c7f03d2a781,Fix typo in okhttp integration version.
3a88d42bf46ae5c3a33fe63d285727f37185ae42,Switch DataFetcher to async API.
6218957b07368f1a35838371a16100ede16e4a36,Disallow mutating RequestOptions used by requests.
34dad9f5b9e8428ee3ac4a2d561def92dce8f2a7,Allow passing through headers in GlideUrl.
34474ac18b45ec5baba1e1e9e29a330ee921845b,Cleanup GlideUrl/Headers with better equals() imll
f3af6ea6608bbcd9e04a52d3bef99a5eccf5a562,New Glide class static method that allows disk cache cleaning.
1d3ca056c96f40535c14d2feb522fe4ee2f4d161,"Merge pull request #352 from nemphys/diskcache-clean

New Glide class static methods that allow disk cache & all cache types cleaning."
30f1ce7f866e1e6d6d46418faff5a2030c91e47e,Create DataFetchers lazily and allow multiple cache ids.
363b68e98c6fd45d825261bc290e91ab28756e04,Don't throw IOException from loadData.
4a8c58f5f6276ec344c151c782da30a49775970c,"Add ConstantState to SquaringDrawable.

Fixes #349."
fee6ed6b9f5d60b1e4b299088445401a898dbcc3,"Add lazy headers implementation

Work toward #198."
de96d0ba0ecd8cc48ae6741dd15030d78f3dfb04,Fix a crash re-using builders with thumbnail builders
a60bc5125aa577f4b1506d7baa62a215b2fcf416,Clarify GlideUrl methods
93a7613b16864eaa7a1ce8596cbac8ff45c4f933,"Pass through headers into http fetchers.

Fixes #198."
a9f80ea1a5a5c3576feb3b58e38240b597cc586f,Fix bitmap re-use bug cross fading from thumb.
4da90066d34a20d8b569038ecde39dc74353ffcb,Allow primary and alternate cache keys.
b078cc52a03f9187720f90eaf705d89dbe8b3a90,Fix bitmap reuse bug when cross fading.
20aaea6a927f90c9396e9c91d46e390503dbff11,Cleanup some todos and fixmes.
336c92769750974bc752ab550d5475c23557d3cd,Included decoded resource in ResourceCacheKey.
7497bf0662236014481b02bfa2eb611b0bc8868c,"Merge branch 'master' into 4.0a

Conflicts:
	integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java
	integration/volley/src/androidTest/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java
	integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java
	integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java
	library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherServerTest.java
	library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java
	library/src/androidTest/java/com/bumptech/glide/load/model/GlideUrlTest.java
	library/src/androidTest/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoaderTest.java
	library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParserTest.java
	library/src/androidTest/java/com/bumptech/glide/request/ThumbnailRequestCoordinatorTest.java
	library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java
	library/src/main/java/com/bumptech/glide/Glide.java
	library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
	library/src/main/java/com/bumptech/glide/load/engine/Engine.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCache.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheAdapter.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java
	library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java
	library/src/main/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoader.java
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParser.java
	library/src/main/java/com/bumptech/glide/manager/RequestTracker.java
	library/src/main/java/com/bumptech/glide/request/ThumbnailRequestCoordinator.java
	library/src/main/java/com/bumptech/glide/request/target/SquaringDrawable.java
	third_party/gif_decoder/src/main/java/com/bumptech/glide/gifdecoder/GifDecoder.java"
4563b45d35f922f8944b71da84a827fc91e41302,Remove getId() from data fetchers.
95c66fecb7b74bd72b69f83ec011c70adb23decd,Fix incorrect cache keys and data sources.
79bd0f8594378fe11065abbdbff0b1dbacbed3cc,Remove wrapped interface in DiskCacheStrategy.
c3e3341cb1873dd31546fb6ad7189aa067e4c940,Cleanup test files.
66db4a40986a5569fd378f851fbcae1487296932,Allow recursively pausing/resuming requests in a given context heirarchy.
d520efbca0dfd80725e477282f55267ea8c67f96,"Revert ""Allow recursively pausing/resuming requests in a given context heirarchy.""

This reverts commit 66db4a40986a5569fd378f851fbcae1487296932."
5210ba8d3390af9f0cc9bde422aa63601f6e4134,Allow recursively pausing/resuming requests in a given context heirarchy.
ae2d3767a774deeee829a84e0b96ea0e5e0be9e6,"Merge branch 'master' into 4.0a

Conflicts:
	integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java
	integration/volley/src/androidTest/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java
	integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java
	integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java
	library/src/androidTest/java/com/bumptech/glide/GlideTest.java
	library/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java
	library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherServerTest.java
	library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java
	library/src/androidTest/java/com/bumptech/glide/load/model/GlideUrlTest.java
	library/src/androidTest/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoaderTest.java
	library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParserTest.java
	library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerRetrieverTest.java
	library/src/androidTest/java/com/bumptech/glide/request/ThumbnailRequestCoordinatorTest.java
	library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java
	library/src/main/java/com/bumptech/glide/Glide.java
	library/src/main/java/com/bumptech/glide/RequestManager.java
	library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
	library/src/main/java/com/bumptech/glide/load/engine/Engine.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCache.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheAdapter.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java
	library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java
	library/src/main/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoader.java
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParser.java
	library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java
	library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
	library/src/main/java/com/bumptech/glide/manager/RequestTracker.java
	library/src/main/java/com/bumptech/glide/manager/SupportRequestManagerFragment.java
	library/src/main/java/com/bumptech/glide/request/ThumbnailRequestCoordinator.java
	library/src/main/java/com/bumptech/glide/request/target/SquaringDrawable.java
	third_party/gif_decoder/src/main/java/com/bumptech/glide/gifdecoder/GifDecoder.java"
2f053e67c728367bce8b6682b305f71709e3c8c6,Make Transformation extend Key.
2744acc88cdd41b17e1e47308d6bad379b215169,Including transformations in engine keys.
2795815f131815d9acb17051986f3c8c4e43991c,Pass through options to ModelLoaders
59ba832275fc8a202c54c81110c2afcafffafa05,Fix errors and concurrency in cache keys.
c3ee8a281155833dc578362ba731a1910320de17,Fix a concurrency bug generating cache file names.
76c88143d0351bbd27956472cb5a0322551ad51c,Re-enable downloadOnly.
aec9c993bd7fd48eebe6712f577deb9feca2f460,"Provide options to ResourceDecoder and use one to allow disable GifDecoders
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=87980033"
3d48e8916c33bc770839bc2907d4d7f2fdf628ec,"Add RequestOption to disable animated resources.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=87986342"
b6f2ed2379db2a9fabe8faa2e00effaf93dfdf7e,"Obey decodeData/decodeCache in DecodeJob.

Allows GIFs to play by obeying 
DiskCacheStrategy.NONE and avoiding an assertion."
5c71de0227f37de200fd87fd8b9c9ddccea41e37,Avoid IllegalArgumentException in Downsampler.
6b0df2ab43f337747ae102f813eee95649a32699,Fix scaling in FixedSizeDrawable.
7c4dcb7c6f50f9978653a1ad88d20a6c05bee4e0,"Handle null data returned by ModelLoader in MultiModelLoader.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=88278087"
c303843769b50a0a4626f3c665cb7575d5cd9db6,"Pass through options in BaseGlideUrlLoader methods
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=88278109"
c9669bf92988b1ec8b954cd24fa53863ed33e77c,Add verbose logging for Downsampler.
10b3df423587aae9f5fffbeb7861d57b04f1d966,"Add an efficient FitCenter downsample strategy.

Uses inDensity and inTargetDensity to apply an 
additional scale natively after downsampling which
reduces Java memory usage and avoids an extra
allocation."
df870af642d4fb9b0042f2344345f173aaabb06b,Avoid buffer allocs in StreamBitmapDecoder.
91e9c0ad2e2a555f1b9734b113a9392b9603c57b,Allow Options to affect cache keys.
aca42cc07ffde68a5117eb32d51ba450d9188396,Add Gallery sample app.
298fbaa62a366ee2b03818d5b2958b17cc17ca12,Add Options to ResourceCacheKey.
f07e45a8b77c54523ecbfc1e668f57e7bd2b0fad,Ensure consistent sizes in gallery sample app.
abc2dbb1d142144a16888a61369542bb9345c3b7,Don't save local data using DiskCacheStrategy#ALL.
f354773890c2e745f5143572ae9891fb36aa7d7c,"Fix using global rather than request options
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=88447621"
32101fe73c1df8bc5b59d685f51e2fa161cb07e8,"Fix excessive byte array allocations when decoding images.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=88448177"
3ff9beab7bb47fb929fe7eec2f90a3361d0b535d,"Handle individual failures in MultiModelLoader.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=88448964"
563b7b994d863ca9dba4a240eacef9f4ee767dd7,Apply fields mask when applying RequestOptions.
e7e7620f794b62fc53ba43705a73f715a9393df5,"Avoid concurrent modification in lifecycle impl.

Fixes #375."
e9cfd2d264c8d1f04ec3a9a26bed17ea690116c8,"Update paint flags and remove anti alias.

Fixes #366."
4e6fa2229b539dac918f88e9aa5e4c3665de349a,"Maintain order in headers.

Fixes #361."
b3a98a45f3d3d56ccf86114ce7664fb09f8cfbc5,"Point to PNG image in readme.

Fixes #379."
c630313a61a2ee2ce3c1f5b005da780153ca87f8,"Properly handle null disk caches.

Fixes #374."
91466bbf06b7a797b7320dc4efe3d83f6e850b9a,Remove synchronized from lifecycle.
42b450d8cbef2ed21e6a3e380d6de446028e3fb2,"Add ModelLoader for Uris containing Urls
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=88787174"
48618f114610031c878194b3aff83f79f8deac6d,"Minor tweaks and additional logging for SizeConfigStrategy
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=88868945"
dd0fc2085b0b38769df7fcae10753ba448fbf892,"Assert Bitmaps are not recycled in getSize.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=88943577"
a4be62dd5a00f3338d845d43b27c01c8fedef05c,"Make InvalidMark an IO rather than a Runtime exception

If we're asked to read partial data (ie a screenshot in Android), we may
read a valid image header but an invalid image body. We should treat
overring our mark as a soft failure, rather than an assertion failure so
that when we fix our mark limit to read the image body, we don't throw
if body is invalid.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=88966755"
ae6ea4ef32eea07267379b34bd5819f5e87abb12,"Fix recycle logic in BitmapDrawableTransformation.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89129772"
0462d5175fcad6554a1b123d5101e150747ff738,"Handle upscaling in Downsampler

I'm mildly inclined to think that we should just cap the scale factor at
1.0, but both centerCrop and fitCenter currently upscale so this is at
least consistent. If we want to disallow upscaling, we should do so
everywhere.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89129816"
121f7b08a00147ff9881ef4824a8c1f994ef517e,"Actually return the transformed bitmap in BitampDrawableTransformation
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89300846"
fb255d3b76d1de80bfcd181b60aadeee663a4a22,"Cancel data fetchers when jobs are cancelled
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89651970"
2830a5731e286ca2c7142439b188b924bf21efe2,"Fix cancellation logic.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89654137"
8ebd070cf6622d624f309712bbcc3488a5afae23,Fix minor code style issues.
c1059d16a3cd0b47b83acc65b45cb9ef072be445,"Avoid concurrent modification in lifecycle impl.

Conflicts:
	library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java
	library/src/main/java/com/bumptech/glide/manager/RequestTracker.java
	library/src/main/java/com/bumptech/glide/util/Util.java"
e06ab02727161777ca417766b4e656ebd90babbf,"Update paint flags and remove anti alias.

Conflicts:
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java"
952e35e036574fffcf437220b89fe3a866a695e7,"Maintain order in headers.

Conflicts:
	library/src/main/java/com/bumptech/glide/load/model/BasicHeaders.java"
6388a7ca91db184ed142ca8f2ea54d7473908b9c,"Point to PNG image in readme.

Fixes #379."
453f80c7f2ffea9d11e0ce5c19baa4ba92b781a1,"Properly handle null disk caches.

Conflicts:
	library/src/main/java/com/bumptech/glide/load/engine/Engine.java"
ba74e3ad7c35d0561be4a2c1638f70a896306bdf,"Remove synchronized from lifecycle.
Conflicts:
	library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java"
0290100538abe33ac07ac7d83f09565a79231f24,"Avoid overriding status if cleared in Target.

Fixes #385."
de0ed109aab0d1492e2d84cffa5dfa60d8a6bdd6,Use 3.0 RC2 version of Robolectric.
169b533a42e89fcfea96f6d02860d0023dc94513,"Fix issues allowing memory cache size to get out of sync.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89748425"
123599ca8d751cfeb989a4f834a9b32d5726ed19,"Cleanup requests and resources eagerly in Glide.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89868091"
cf12dc225ed016f337e6c1d7685017395c3a85bf,"Use a single loader to reduce GIF memory usage by 50%.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89892733"
c0c374c474903e3dca0061b9dcb350e01a6ca550,"Automated g4 rollback of changelist 89868091.

*** Reason for rollback ***

[]

*** Original change description ***

Cleanup requests and resources eagerly in Glide.

***
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89909812"
38853b62a74f5a5319618d9ba119629f5910f756,"Set resource before notifying listeners so requests can be cleared by Targets

Rollforward of [] external bug for 352 is: https://github.com/bumptech/glide/issues/385.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=89916328"
bde1e0c44b13d6fcd5d9e65700fff50a0358fead,"Avoid throwing exceptions caught while decoding in Glide.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=90015564"
8e1d25f7426879696eaeda22340e694b6e8699ed,Fix style issues.
52985d7c3b1f214532b5bd26b1d2563045982b83,"Handle partial reads/skips in ImageHeaderParser.

Fixes #387"
52c7e92e6e1d0d875d687c5ca98af172740c9d2e,"Check result status in OkHttpStreamFetcher

Fixes #315."
64be9d314814f541fe1bb20553c7501d6e8c987b,"Base available on content length for http streams.

Fixes #392."
c78ee4e8bc815d88f0e5b276984ec5e1af9d4f22,Fix a code style error in ImageHeaderParser.
a10f1ad71d8508a1948063a5646afe3e44c70e1d,"Handle partial reads/skips in ImageHeaderParser.

Fixes #387
Conflicts:
	library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParserTest.java
	library/src/androidTest/java/com/bumptech/glide/resize/load/ExifTest.java
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParser.java"
976ec371dbca985bb71fde0e0a8e8f8650a98194,"Check result status in OkHttpStreamFetcher

Fixes #315.
Conflicts:
	integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java"
e4062244a425a554d2fb1914ef1e36df037e59ba,"Base available on content length for http streams.

Fixes #392.
Conflicts:
	integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java
	library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java
	library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java"
2702cba8e4af72081787c02a2abc4f2e05e620bd,"Fix a code style error in ImageHeaderParser.
Conflicts:
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParser.java"
4eba230bd6bb47de8bd27c70a74b4a0f94bd2c18,Fix inconsistent code styles in OkHttpStreamFetcher.
8d7beb50703d6ea1da0652ea54095e2a0b7e5c45,"Merge pull request #397 from floating-cat/master

Fix inconsistent code styles in OkHttpStreamFetcher."
6213ffb169510aab014854533695f56156ba4735,Expose Files to Encoders to enable nio encoding.
8062c11af9958a12791c76c1ab7379734c0afa5e,Fix NPE in RequestFutureTarget.
12c0f5122cbf45dc1599bddb5dce76fb4bf6c151,Do not try to clear a non existent request
f20687d0cbd86d3a46b940b04b440aec3011b9f2,"Merge pull request #401 from Tolriq/master

Do not try to clear a non existent request"
ff5039909a3e61675c4a3c1f410aa539ad432b58,"Insert exif orientation into thumbnail streams.

Fixes #400"
899e41b88afab3f8de39e27e6e72b1ba1d57403c,"Obey durations in cross fade animations.

Fixes #398."
7012e45811b0cc8a85554942143e6bb50fcb3b95,"Insert exif orientation into thumbnail streams.

Conflicts:
	library/src/androidTest/java/com/bumptech/glide/load/data/MediaStoreThumbFetcherTest.java
	library/src/androidTest/java/com/bumptech/glide/load/data/ThumbnailStreamOpenerTest.java
	library/src/main/java/com/bumptech/glide/load/data/MediaStoreThumbFetcher.java"
6529484953f5942229966f3caf4e5fc456251f85,"Obey durations in cross fade animations.

Fixes #398.
Conflicts:
	library/src/main/java/com/bumptech/glide/request/GenericRequest.java
	library/src/main/java/com/bumptech/glide/request/animation/DrawableCrossFadeFactory.java
	samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java"
8006d29ef3562be11952e1e3c0e21b1d48f53c3f,"Avoid reallocating option key bytes
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=90217352"
f26b4e05977d8dac17c9e05a460f8ba78582e435,"Add native scaling when center cropping images.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=90437904"
3c1e3a7464e7ac86734001f96002e8bcb66a48a8,"Forking CircleCrop into Glide.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=90652396"
54fb5a2a35b3bd8e976c8122eb2b8bd16fafcf42,"Clone the requestOptions if they are locked when setting scale transform.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=90653252"
2db31c49bbfebd79aef0099f88ad62bf5b369a1d,"Make sure source data is written to disk on one of Glide's threads.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=90760750"
6d6202f7459c511d2bb8b1db01e35da83237352b,"Set density on Bitmaps correctly when scaling using inDensity/inTargetDensity.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91012952"
9106427987185ef1fd5c5a57b7ef6bc96daea726,Fix style and findbugs/pmd errors.
b96adbed5b8f5f5116fe54e1e5875894f4a241b7,"Avoid throwing on invalid resource ids.

Fixes #413"
248bca9cc947672d00fa34d4f970a278665c169c,"Gracefully handle the empty String.

Fixes #415."
59209d882bccf68586ce81132710b30417db0202,"Cancel RequestFutureTarget when clearing.

Fixes #402."
6c85b134d797126469dc3ab1a719e9edcf155573,"Don't dither when loading RGB_565.

Fixes #412."
09edc463fe8008ec6b2139e0548c88f4e5f9821c,More CircleCrop style fixes.
ad9c91c33681a232a9fd75b9c55db34eec9e4030,"Fix a race in cancellation in DecodeJob.

Fixes #424."
1fabbe4c5321befdbe708b061797e87c33e88403,"Document Bitmap recycling in BitmapTransformation.

Fixes #422."
8dbafcd3a80db565761e44942b88170911ab63f5,"Add a proguard section to the Readme.

Progress toward #425, fixes #143."
c3ea170cc2f7a322e4b8c214d85c2fa83f4507d5,"Add new DefaultDiskCacheFactory and ExternalCacheDiskCacheFactory
Refactor InternalCacheDiskCacheFactory to use new DefaultDiskCacheFactory"
e777bc05934ebf0d8fcb3bbd92e7de23f910fd2c,"Merge pull request #430 from Tolriq/cacheFactory

Extends glide disk cache factories"
01e59f2729767ad92ce7c1fe53f0b7fe128d2290,Avoid some unnecessary allocations.
7d9c28ec2763e973775abd5c3e3c971728a48a56,"Ensure put in LruCacheWrapper blocks until data is written to cache.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91215863"
999847b348e1682443537f3f7cd67bde72251efb,"Update Robolectric snapshot to commit:- https://github.com/robolectric/robolectric/commit/8576b3a138ed9af7616352db6d0f09c0eebaa038

Changes to [] code to because https://github.com/robolectric/robolectric/pull/1693 removed ShadowBitMap.{equals,hashCode,toString}
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91448571"
1bd2d5372f3fc12172bc6dbf1edd84f86931dae3,"Log when DecodeJobs throw runtime exceptions.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91619973"
7edfaff782a09e89d7fba8fa2648b8989199c020,"Simplify DownsampleStrategy and account for orientation in downsampler.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91640396"
14de839dfee6018f7f24cc9e03d52c7e4152a0d4,"Add a new lru disk cache with a sql based journal.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91645138"
1dc72904ed1b0e1f38a6095e1af4437bd5387113,"Automated g4 rollback of changelist 91640396.

*** Reason for rollback ***

[]

*** Original change description ***

Simplify DownsampleStrategy and account for orientation in downsampler.

***
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91696334"
05be5b28a540a7849483c56cb51500a568520f2a,"Fix DownsampleStrategy#AT_MOST.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91823174"
691e2ac1068188296d3e2a16d107675b3339f473,"Rollforward [] with fix for empty source dimensions.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91831138"
0419c8c88e3564f700b803e96ae57949e430cbcc,"Automated g4 rollback of changelist 91831138.

*** Reason for rollback ***

[]

*** Original change description ***

Rollforward [] with fix for empty source dimensions.

***
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91886580"
0367aa98a70bf3d0c507e5b2212f02cc155f43f3,"Rollforward of [] with fix for 0f scale factors.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=91892365"
20602fa0881e478b0547730421e8510ebf4d5ba6,"Fix downsample size error and add tests.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92001754"
3dee275b5879212114e297a723e0926511998602,"Fix Downsampler#caclculateScaling incorrectly offsets power of two sample size
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92009858"
922833df4af0101423009ff489607fe805206969,Code style fixes.
dc93f1f9faf824d4f1e556684b5f2c03d9bcc9f5,"Correctly downsample AT_MOST and update docs.

Fixes #434."
31fc07fd7be3507db0c163648d58392ed6fcbf65,"Add a toString() method for StringSignature.

Work toward #431."
31640f60f6b329c93cb3de4b5e2b4fefdfb653de,"Ensure data is available when disk cache put completes.

Fixes #429."
2cf86718b64ce43bb3d4ca34702e66ef7aa46684,"Add options for handling uncaught exceptions.

Fixes #435."
02c42460599feeccbe5df381a6e76c09c6731ff3,"Explicitly disable gzip for HttpUrlConnection.

Fixes #440"
1843c20552c6c22ba42859acd3429d4ca83fd7cc,"Add somewhat more legible logging for keys/jobs.

Fixes #431."
46126e00cbd8d32fa2b72ffc8af863047e685151,"Add a default user agent in OkHttp integration.

Fixes #436."
c97581c65eed790aaf0cb3c88856c59614c687a5,Add an LruByteArrayPool
5777f04054c627ce35dbf12246eeb4ad5abaee08,Fix thumbnail aspect ratio in FlickrPhotoGrid.
4c205d09d32c1180fe1ce5ebc18b3f64520875f2,"Fix NPE when preload completes synchronously in Glide.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92032561"
26b77e332cbde156ab7a7547418edd303c716982,"Fix bugs obtaining the set of available resources to decode for a model
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92168603"
108204bd005d4e7199d8252ef3bec8d9ed93e6ba,"Restrict intermediate types when decoding specific resource classes.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92182488"
c988e2515317089535884d8f0c8cc21447e88ff4,"Avoid allocating Map entries in equals in Options.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92205228"
f39e44da6ef8b2d860f9771a9ddf2311c0e3c5b3,"Remove a bunch of unecessary iterators/lists and reduce the size of other lists.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92266430"
7858f3ce3bdb368fa836c4c98e26da5f71585979,"Move tracking/untracking/cancelling requests into RequestManager.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92275518"
ddc19871a8c5c3014b5dd8dd1554c16c0254422a,"Properly null check load data.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92295185"
088f33df00233c51b34a396041aa32a7fb31fedd,Fix build + style errors.
1a95c525ccfc726a4993dcf2f8d839d59e90da7e,Fix more code style issues and re-enable tests.
f672f23454b6a6421f7e7bbf0303a9d9bdb54d39,Add min/target sdks to sample app manifests
372e3faf76c1924dc7cfe9e05d1c9465ebbecbe8,"Update FindBugs classpath for Windows compat.

Progress toward #312."
421570a43c15fa599d21613c90b5df95084bf347,"Pull disk cache forward for Windows compat fixes.

Progress toward #312."
2a77dcba72c3e0df1a8b2933a8ff038e4cfd0660,Fix trivial IDEA gradle warnings
9492f8bb7fe1ae89ef22553a65922b6ce630d985,Fix LINT warnings and errors
3143a4f6b1d6fa523a6afd58673902d7dfd5b80d,"Upgrade build utility versions to latest
Robolectric 1.0.0 got rid of the *TestDebug tasks"
31e8e3191d3456283db86972f21b030507838e7b,"Merge pull request #445 from TWiStErRob/fixes

Update versions and Warning Cleanup"
f32058ba1090e77fa0d081386296556f4285d505,Pull disk cache forward.
bf3d5a9fe15538191a9e0429afb8bbca837b3bca,Expose MemorySizeCalculator and add options.
879ea654b54ced110b27eb98fefe9f6074acbfae,Fix doc errors in RequestBuilder and BaseTarget.
9d40ad60acf94d3ce53b6aa308878a9015873241,"Avoid running cleared requests in ThumbnailRequestCoordinator.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92467060"
7e0f87347f1d47605a54c9e2782d8dedd660628c,"Consolidate responsibility for starting/stopping requests in RequestTracker.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92474681"
ea0a17a72c1752099c5d014c5485993d1fc48cd0,"Revert ""Upgrade build utility versions to latest""

This reverts commit 3143a4f6b1d6fa523a6afd58673902d7dfd5b80d."
b9a2d3b2a437d9f98e3be72fdc1a929f75cfb156,"Add method to set a resource id to use with setTag

Fixes #370"
95482113866a2147660888b6ae1a1d6d9e5ad0a9,"Add a fallback Drawable to display for null models

Fixes #268"
cdcf9e198bcca5448e29e96cc579b00786ae618c,Make the svg sample package match other samples.
e85cc9522917267d64ebaaba89e3b2f4dab4575f,Remove SNAPSHOT versions for 3.6.0 release.
e161ca9b39af52db04527ffe453dacafbb3ab94a,Bump version to 3.7.0-SNAPSHOT.
a93a9410a720adbfcf76e280db4ed3fda5e939d7,"Merge branch '4.0a'

Conflicts:
	README.md
	gradle.properties
	integration/okhttp/gradle.properties
	integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java
	integration/volley/gradle.properties
	integration/volley/src/androidTest/java/com/bumptech/glide/integration/volley/VolleyStreamFetcherServerTest.java
	integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyRequestFactory.java
	integration/volley/src/main/java/com/bumptech/glide/integration/volley/VolleyStreamFetcher.java
	library/src/androidTest/java/com/bumptech/glide/GlideTest.java
	library/src/androidTest/java/com/bumptech/glide/RequestManagerTest.java
	library/src/androidTest/java/com/bumptech/glide/load/data/ExifOrientationStreamTest.java
	library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherServerTest.java
	library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherTest.java
	library/src/androidTest/java/com/bumptech/glide/load/data/MediaStoreThumbFetcherTest.java
	library/src/androidTest/java/com/bumptech/glide/load/data/ThumbnailStreamOpenerTest.java
	library/src/androidTest/java/com/bumptech/glide/load/model/GlideUrlTest.java
	library/src/androidTest/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoaderTest.java
	library/src/androidTest/java/com/bumptech/glide/load/model/stream/ResourceLoaderTest.java
	library/src/androidTest/java/com/bumptech/glide/load/model/stream/StringLoaderTest.java
	library/src/androidTest/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParserTest.java
	library/src/androidTest/java/com/bumptech/glide/manager/RequestManagerRetrieverTest.java
	library/src/androidTest/java/com/bumptech/glide/request/GenericRequestTest.java
	library/src/androidTest/java/com/bumptech/glide/request/ThumbnailRequestCoordinatorTest.java
	library/src/androidTest/java/com/bumptech/glide/resize/load/ExifTest.java
	library/src/main/java/com/bumptech/glide/BitmapRequestBuilder.java
	library/src/main/java/com/bumptech/glide/DrawableRequestBuilder.java
	library/src/main/java/com/bumptech/glide/GenericRequestBuilder.java
	library/src/main/java/com/bumptech/glide/GifRequestBuilder.java
	library/src/main/java/com/bumptech/glide/Glide.java
	library/src/main/java/com/bumptech/glide/GlideBuilder.java
	library/src/main/java/com/bumptech/glide/RequestManager.java
	library/src/main/java/com/bumptech/glide/load/data/ExifOrientationStream.java
	library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
	library/src/main/java/com/bumptech/glide/load/data/MediaStoreThumbFetcher.java
	library/src/main/java/com/bumptech/glide/load/engine/DecodeJob.java
	library/src/main/java/com/bumptech/glide/load/engine/Engine.java
	library/src/main/java/com/bumptech/glide/load/engine/EngineKey.java
	library/src/main/java/com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCache.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheAdapter.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskCacheWriteLocker.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java
	library/src/main/java/com/bumptech/glide/load/engine/cache/InternalCacheDiskCacheFactory.java
	library/src/main/java/com/bumptech/glide/load/engine/executor/FifoPriorityThreadPoolExecutor.java
	library/src/main/java/com/bumptech/glide/load/engine/prefill/BitmapPreFiller.java
	library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java
	library/src/main/java/com/bumptech/glide/load/model/Headers.java
	library/src/main/java/com/bumptech/glide/load/model/LazyHeaders.java
	library/src/main/java/com/bumptech/glide/load/model/ResourceLoader.java
	library/src/main/java/com/bumptech/glide/load/model/StringLoader.java
	library/src/main/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoader.java
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/BitmapTransformation.java
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/Downsampler.java
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/ImageHeaderParser.java
	library/src/main/java/com/bumptech/glide/load/resource/bitmap/TransformationUtils.java
	library/src/main/java/com/bumptech/glide/manager/ActivityFragmentLifecycle.java
	library/src/main/java/com/bumptech/glide/manager/RequestManagerFragment.java
	library/src/main/java/com/bumptech/glide/manager/RequestManagerRetriever.java
	library/src/main/java/com/bumptech/glide/manager/RequestManagerTreeNode.java
	library/src/main/java/com/bumptech/glide/manager/RequestTracker.java
	library/src/main/java/com/bumptech/glide/manager/SupportRequestManagerFragment.java
	library/src/main/java/com/bumptech/glide/request/GenericRequest.java
	library/src/main/java/com/bumptech/glide/request/RequestFutureTarget.java
	library/src/main/java/com/bumptech/glide/request/ThumbnailRequestCoordinator.java
	library/src/main/java/com/bumptech/glide/request/animation/DrawableCrossFadeFactory.java
	library/src/main/java/com/bumptech/glide/request/target/SquaringDrawable.java
	library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java
	library/src/main/java/com/bumptech/glide/signature/StringSignature.java
	library/src/main/java/com/bumptech/glide/util/ContentLengthInputStream.java
	library/src/main/java/com/bumptech/glide/util/Util.java
	samples/flickr/src/main/AndroidManifest.xml
	samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrPhotoGrid.java
	samples/flickr/src/main/res/layout/flickr_search_activity.xml
	samples/flickr/src/main/res/layout/fullscreen_activity.xml
	samples/flickr/src/main/res/values/strings.xml
	samples/giphy/src/main/res/layout/fullscreen_activity.xml
	samples/giphy/src/main/res/values/strings.xml
	samples/svg/src/main/AndroidManifest.xml
	samples/svg/src/main/res/drawable/image_loading.xml
	third_party/gif_decoder/src/main/java/com/bumptech/glide/gifdecoder/GifDecoder.java
	third_party/gif_encoder/build.gradle"
ae4a451131d858bbe8f1bb1913bfef3322313e73,pull disklrucache forward for windows checkstyle fix
8be38e54a67fa29a7bd2c084210e574298144b93,"Add power of two downsampling for GIFs.

Although this may substantially reduce memory usage decoding large
GIFs, two significant limitations remain:

1. The pointers into the color table are not downsampled, so we
still allocate a byte per pixel in the original image.
2. Our downsampling algorithm is naive (rounding) and works
poorly with GIFs with partial frames."
c789782e512f42e5ca7582c907f4d7360e7c0eb5,Prefer RGB_565 Bitmaps for opaque GIFs.
ac75aaf2b2eee599c5c2d5ff92b7f19b87acd194,Include buffers in GifDrawable byte size.
f4a5b14fd4d124fb71f6ce362dddb7075825441b,Move downsample calculation to Glide's GIF decoder
7a5f0350739aff7dd66788da599544cee17e6906,"Allow pooling of RGB_565 on KitKat+

The underlying issue should be fixed by pooling
configurations independently on KitKat+"
62620d29bc51f92eaf4ff16c44c66d68c17de180,Avoid re-creating paints in TransformationUtils.
0d29f42b3b70610c755e8c76cfa42193d78896dd,Avoid logging exceptions related to cancellation.
4895c36aa477a9cb7695adf91b46b664dfcccfeb,Calculate byte array pool size in calculator.
be445d96370ef26a7608f2a13642c8313245235e,"Ignore overly large byte arrays in pool.

Otherwise we add an overly large array, then
immediately evict the entire contents of the pool,
including the large array."
740687bde17cc84603b650c918bee10a2a9c5669,Be more lenient with sizes when byte array pool is not full.
cf42cbcb26b753a0c517abca037d08c1ad638f6f,Handle inexact buffer sizes in ImageHeaderParser.
002afb3ab4f00fe17f0f3f613178f300f7c7c839,Re-use and pool EngineJobs.
c36d4f4651aa6aec77a03caf40733d08bec9ddfa,Re-use and pool DecodeJobs.
33b6412185eb0d6860c2eebbc330d5c31c4429da,Remove RequestContext to avoid extra allocation.
655d2b26dd59e4b62e6ba591d8489efb88e5cc49,Fix tests and code style.
ffbfe9ab92bd72dd969ce0103da91677e280bf33,Fix a duplicate notification exception.
13ddbe86b8dd338d1c73e95e9753cdf8bd34250a,Uniformly handle uncaught exceptions in executor.
a43c78fa43d102914016bcefbc8c22eb11af1100,"Fix debug logging in ByteBufferGifDecoder.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92743571"
2b86355baa32e137797810743638a4f2aa0ac36d,"Use SRC_IN xfer mode only when drawing the Bitmap in circleCrop.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92845003"
01f1f2078f70a0274ca4a19e87a928d6cb80c0a4,"Add and increment a version for the CircleCrop transformation.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92847992"
1781b0ad7c4451ab15a7e2994187de2d420570c2,"Add a ModelLoader to load Files from media store Uris.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92855098"
9e0e4c36e872fc4328500617eb00ddb51c8996c5,"Saves and restored header bg color.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92871966"
55ad5858a89763c1cc2cc86dbcbaa36d074ae8a1,"Fixes a bunch of 'any's that should have been 'isA's
isA > any most of the time. isA matches on a non-null instance of the given
class, while any matches *ANYTHING*, even null or an object of a different
class. For example, func(Object obj) could be verified with
func(any(Foo.class)), and even if a Bar is passed in it'll pass.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=92877407"
4503882a929950a47d4503e00743a6f9c8faab2f,"Avoid stack overflow with recursive model loaders.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=93061937"
f00c9a2f14f6c000a987c463c4f42f4d65ffe248,Fix import style errors.
ed770db705744217b2cc31c0e2f3f12d3dffdef8,"Moe automated commit.

Includes:

Avoid allocating a stack trace on release in EngineJob.
Always synchronize access to RequestManagers list in Glide singleton.
Don't load video thumbs from media store when a specific frame is
requested.
Only check cache keys that can lead to our requested resource type.
Avoid empty model loader assertion when building recursively.
Fix finding fragments recursively if the glide fragment has been created
and commited but pending changes have not yet been executed.
Clear requests from active Targets when RequestManagers are destroyed."
c0a016662089a2dee9c975444891fcfbcafa2503,"Avoid referencing cleared ivars for loads that complete synchronously.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=94110441"
145975c16020103fcc104dfbe9c38ade4a2b51e0,"Replace rewinds in Glide.
Rewind is implemented incorrectly for wrapped mapped ByteBuffers on ICS.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=94125405"
7734f6dff4d9dca650974b4c0fd88ac92fde8fa3,Update dependencies and test structure.
6a5ff9169c0e5261d336bda0eda77eb189efd4ec,Add a theme RequestOption for loading Drawables.
36e2127fa0988435fadb57ccbe5829e0bb079625,Add project code style settings.
dc2cd11a5a65e14bc1c7eb9ff30e87f409ca09e2,Fix deprecation warnings in Gallery sample.
2b0b775b52d0df1d658a9c2a04ad6cac715b7f23,"Synchronize access to MultiModelLoaderFactory.

Fixes a concurrency bug where internal state meant to apply to a single
build may be accessed by multiple builds simultaneously.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=94229486"
796266b82dd94a8185b4cf7b1d85b5e258015ff2,Add Gradle caching to Travis.
6c34550ca9a289e29b7beae9b6758fa3fd870648,Remove slow/flaky jdk8 build
9e2ff4f13d5a5898f8252cd7cedb3d49c73b267d,"Add a clear method to ModelCache.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=94292109"
c9d2234c3843bdbaa7fe4461ff7bb70763622ef4,"Update Robolectric snapshot to commit 454909fc8b7d299d396de0bcce70ddc576d059ee

-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=94324689"
4aaeb233d149c820c57f2a769d17df562e969568,"Update to rc3, fix import ordering"
640ce783e18ff9c54bf0db3abb2fe7021b8fc300,"Alphabetical static imports

Also updated to the latest version of checkstyle."
192c9d7728bd08422188d9461c3d521f8fc1c3ea,Import order cleanup
d2d268bbc5f8a043f4d7d73ac8db9a55c84dcae1,"Remove and ignore unnecessary intellij files.

Also cleaned up .gitignore file."
d91cec2d507b5f84a8c224bdd330ff5c9c5ce5ed,Don't close streams we don't own in BitmapDecoder.
615eaec24057f54d21c26711b1a679d3b3e7442c,Report exceptions back to Requests.
8421348a17b170513287a2395d516c7df2833a38,Only Load data that can be decoded as the requested type
ea92b4b611fa59c2e140572e890c1a0a6e055912,Don't assume LoadData is non-null in generators.
c5aa232b3947169cfa184c87d1e9edb78257a175,Add HttpException with status code to HttpUrlFetcher.
1efc7900b0e0f6e745fd843b1a1a2ddf452f5bfa,"Post release() in EngineJob#reschedule.

Prevents a race condition where the key is nulled
out on a background thread while simultaneously
being used to remove the job from Engine's list
of active jobs. As a result of this race, the job
may not be removed from the Engine's list, and so
the Engine may later try to add a new callback to
the now recycled job, triggering an assertion."
5e92cf98d16ce38be78680764ea8feef729e13bf,Pull StateVerifier out and use it in DecodeJob.
8ad8c2429aa96ccb0ba6202c1b1a7de0aeb87d05,Fix typo in Giphy urls that breaks the sample app.
d8d32184211799f6839527bef6a20eca77c1d6b5,Merge branch 'master' of https://github.com/joshzana/glide into joshzana-master
4149c35fbcbb418d9136c145ec1d582575438990,Ensure targets cleared at the wrong level are actually cleared.
3cf338d72027a2956730506150aca70009cfc6dc,Cleanup unused constant and warning in GifDecoder
e9acae09859651371612b6ef382b520d86d4a9b7,Add a public HttpException.
5b63543ae0ae11f17ba6c4c2b569b2cb5e0b4c47,"Expose GlideExceptions via RequestListener.

This brings back RequestListener's ability to distinguish between types
of failures, allowing for retries or custom failure messages/behavior."
8cd520e9a909448d76a1a6405d4a1b0ad9475dc0,"Encode resources after delivering them to callers.

Encoding after delivery decreases load times,
sometimes dramatically, when a limited number of
requests are active at once. Once all of Glide's
source threads are busy, this change provides only
a limited benefit because new requests still have
to wait for encodes from previous requests to
finish. However, when only a few large images are
requested, particularly with slow encode formats
link PNG, images will appear substantially faster."
8720e161169e228ae4dc1e78affa937f87a561c2,Refactor out a set of common Pools and utilities.
36993b8334ebac3e2bc77f1cd3b9681b7d07ac5f,"Fix GIF frame delays accidentally reverted in []
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95042250"
849675a0e96f81dedd0c7a6f8fd7fabc2d5db85d,Only release decode jobs when encode is complete.
fe5507c37a5b2a24fc0d4b0c22b2935c51f28967,"Add terminating new line to MultiModelLoaderFactoryTest.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95159544"
86a3afa40b56bad2f0d1d51a2a148d897a912b89,"Glide nullable annotations. Part 1; the major bits and pieces.

I may have misinterpreted some of these. Particularly unsure about ModelLoader#buildLoadData(). Is the model allowed to be null? I've noticed many implementations dereference it without checking but I've also noticed one instance of null (possibly) being passed in (StringLoader.java). I've left it without the nullable annotation as StringLoader seems to be the outlier here.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95163378"
edbf8bbbb43547470a3675112f177fdeef9fcc95,"Convert DiskCacheStrategy to an abstract class.

We're using an abstract class rather than an 
interface so that it is possible to make changes
without breaking existing users."
d53f00605b5d7c05975f9faa5ca735378530fd29,Small typo on IllegalArgumentException
1fc3ef901f5c40e57264539bfcb567a379cb965b,Ensure manifest sdk values match gradle values.
6a845d8c945cbbc807b1eeb9286465bd3f7dd448,"Merge pull request #488 from walmyrcarvalho/patch-1

Small typo on IllegalArgumentException"
9ab18f23d6528e63f533eb3c3f30bf88c3aefc6a,Remove deprecated tabs from Flickr demo.
4dc91569a9e1d4f15780e02433e6bbc145cb7425,"Update searching in Flickr sample.

We now use a SearchView for entering search queries. We also
query for recent images by default to match the behavior of
the other sample apps."
0f68afc9c336850c0720a9d543a9d4616c508340,Convert Flickr sample to use recycler view.
ccbd7f71c71731e5c367e5cdc9ed0a64d8fe8fcc,Fix lint errors in ReEncodingGifResourceEncoderTest.
3149acdcf6210c3c299ad1f88adc4be2de9ebf27,Fix lint errors in flickr sample.
9d91188d49625f39cf747640a6fbeb4852075ce0,Add RecyclerView library with preloader.
e80defd5634e4d0a5603dbe469b2dc9fae7dc96c,Convert Giphy sample to use RecyclerView.
a50b471ac7d2371998a47fb954b59425f47d5b9f,Fix gallery lint and use new recyclerview library.
8237afc110599649f2cc78afd042f271a682644b,"Update Glide documentation for the frame() request option to show that the parameter is desired time position of the frame in microseconds.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95324828"
bf53fa653849217ddd25d6b3c54d8e05312369ee,Add trailing newlines for compatibility.
9b60aa08ae244f479eee8416dd1a5c1ee1b6e8d6,"Add trailing new line to flickr dimens.xml.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95568967"
9c55989c00554ed547967760397c6887a0061cc6,"Run jobs decoding source only on source executor.

Fixes an issue where using DiskCacheStrategy.NONE
caused decodes for content not in cache to be 
decoded serially. Animated GIFs in particular
were affected because frames are only ever decoded
from source."
343a1f52d3ae9d9efe8587bba1530d1004d47969,"Update load() not called error message.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95595855"
dffd0145eeda92f418c6f8252ed7d8f1e97195b0,"Glide nullable annotations. Add annotations to more RequestBuilder#load methods.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95616390"
8cada05c12f2258e98f250d4afe627e3d4c92509,"Add versioning and development docs to Transformation.

Fixes #492."
e5f2fc25807dfcd41e1d65403820384e037b2d04,"Don't use FixedSizeDrawable by default.

Fixes #475."
0d4b27952751de0caab01774048c3e0ec74824ce,"Clear callbacks from ViewTargets in onLoadCleared.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95763399"
b75e12f68758cb8df858daec1faedaac9b8f1174,"Remove partially implement Logs file.

I'll follow up with a change that introduces some minimal amount of useful logging.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95883712"
c660ff430f3018c9090e68f54328034e07a760db,"Glide nullable annotations. Add annotations to bitmap recycling package.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=95896422"
43a84cfac6a7a16c561b16e37e447f974a1adf2d,"Remove an unused constant from Glide singleton.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96006544"
086391683917f15860bf56413613dbfa96f027a3,"Pass the source of the data for each load through to each Request.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96058555"
3a023adb7821e05ace5bb8d57652116b20cc5074,"Add simple timing logs and a method for controlling log level.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96061245"
49eb4c524b83d5e4220e548aeaa7109bc65508fe,"Glide nullable annotations. Final pass through.

All mentions of ""null"" in javadoc should now be annotated as such.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96076050"
30c92551ee75c2109955ee653e8795c7c1d60bf8,"Glide nullable annotations. Add annotation to HttpException.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96166611"
653546253689b7f04ae702be1887ab5f590542b1,Add circle crop to RequestOptions.
df70f3d622758e4d82ef73bdd677346aed490c42,Document and annotate RequestOptions.
a38c3485a9ebc8ed1574e7b9e5ad9a8d32ccebac,"Add a frame option to the VideoBitmapDecoder.

Fixes #496."
8eaa0217ad955db159b4fdca05287ad2ccd85aca,"Handle fragments attached to destroyed Activities.

Fixes #497."
30be384aa89cd84db9affd0f16497d197e3c8ee8,"Default to ARGB_8888.

RGB_565 has quality issues, both in memory and
after being compressed. RGB_565 is less
performant to draw on most modern devices. RGB_565
also doesn't support alpha and can be error prone
to try to maintain across transformations that
need to preserve or introduce alpha.

Helps with #305"
f80c4792b2214c893f07734996476ac0e02ac156,"Moe automated commit.

* Add versioning and development docs to Transformation.

Fixes #492.

* Don't use FixedSizeDrawable by default.

Fixes #475.

-------------
Created by MOE: http://code.google.com/p/moe-java
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96170523"
5bffbab2c175e035923f90b5edcce9cd02aeb60e,"Starting small on block reading fixes.
Renames one instance of read() (which is overloaded) to readByte for clarity
and searchability. Simplifies readBlock logic since it doesn't appear to
actually loop over anything...
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96251507"
23e1eec4b99fb385a096ab61a843b64e744e9ec3,"Pass in DataSource to TransitionFactory.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96264238"
f9f86330417dc8ee81758a7c3f6d412a6c6baf07,"Pass DataSource to RequestListener instead of isFromMemoryCache.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96354616"
59fc0fcbd8fe491e33992481ef70399b3e52f7e2,Add DataSource to RequestListener implementation in SVG sample.
9cc3c7bca8520551b9a439de6bca8fd15fb96dc2,"Handle invalid Bitmaps in BitmapPool.

This avoids having to check put and maybe recycle
everywhere where we return a Bitmap to the pool."
57cdba301532357d55668871321b47d23197349a,Make BitmapPool allocate if attributes not in pool
82faceaef3503171a198017e77fe727661534d98,Add @NonNull and consistent ordering to transformations.
b6cd0a346a200a7e6199a690ed8de6d9c5872352,Init and update submodules during gradle build.
5633bf556a52039589e3796a2e6c76ba2b8afe99,Only include gradle cache directory in travis cache
cfa304d7cda3a81e72202e7a0dba5dfc48283a54,Replace/deprecate downloadOnly in RequestBuilder.
23a28830b904b61b2668e4b770b187a40c0c14b8,"Adds byte array pooling to the gif decoders.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96430681"
f78416f353beb8fb4063bd4fc14cf5cdb0773b47,"""Drop the _downsampled. It's cleaner.""
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96451056"
167323a08b59766a90cfebebe9110100a6809af2,"Adds a 16k work buffer for the gif decoders. Makes decoding loads faster (so
that GIFs load faster!)
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96594330"
bcfb501b41fb3e0a60cdd2fc7c977549574a099a,Fix null Bitmap returned from pool in FitCenterTest
95551360d7562568ca3b1ce956203c16ae73035d,Handle invalid sizes in Downsampler.
d4aa29c603e02bb8fb947886ef4329ba109a8f2b,"Set isPremultiplied on KitKat+.

Doing so avoids a bug where we may set alpha
on a non-premultiplied Bitmap which will
throw an exception if drawn using Canvas."
2095254d0b2ad1471b6fab81dceeefd3baa005b5,Fix a typo in BitmapPool put() comment.
65d6ee6b63b5625425e3843f30c858cc3f5fe6e2,Allow requests to be cleared on background threads
69351a6eddb9945aa58544dd0e08782d2f2a0310,Update to the latest support libraries.
8327aef7e66d4c1710888314e808d93601ed7e41,"Fix code style in LruBitmapPool.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96719966"
b8b3550aee64fc6c03132166c2b10dafe3d63d1b,"Add default encoding/user agent to LazyHeaders.

Fixes #470.

Conflicts:
	integration/okhttp/src/main/java/com/bumptech/glide/integration/okhttp/OkHttpStreamFetcher.java
	library/src/androidTest/java/com/bumptech/glide/load/data/HttpUrlFetcherServerTest.java
	library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java
	library/src/main/java/com/bumptech/glide/load/model/GlideUrl.java
	library/src/main/java/com/bumptech/glide/load/model/Headers.java
	library/src/main/java/com/bumptech/glide/load/model/LazyHeaders.java
	library/src/main/java/com/bumptech/glide/load/model/stream/BaseGlideUrlLoader.java
	library/src/test/resources/exif-orientation-examples"
15df1f6c7eaf6c356955eb594bb5c543c0066b9e,Add helper methods for override and starting loads
77e5abb7a3d13f8e729ac4c2bfab5d0009bed29c,Add auto clone locking to BaseRequestOptions.
f36a841649e3a53607b9e784cf47b7c7cc4f0835,"Avoid masking errors when building a ModelLoader throws an exception.

Currently we accidentally retain some temporary data between calls that
causes a second request for the failed ModelLoader to fail for a
different reason, masking the original error. By clearing out the
temporary data whenever an exception is thrown, we avoid this problem.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96878903"
5a623d1bf8c124894a9f6e82ea2c8031127c1d12,"Use round rather than ceiling when applying density multipliers.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96912943"
f97dc0d713ec45fff6ad857e909bf659740aaf7d,"Avoid density scaling on JellyBean and lower.

Prior to KitKat, Android supported either density scaling or Bitmap re-
use, not both.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=96925775"
fb35cea00f769ee6712932959a100b3a623f4d8c,Add default RequestOptions to GlideBuilder.
7820ac23bf755d0cb5bf11a9c87e1bd8cc8e9850,"Add default options to RequestManager.

Work toward #414."
8113dfe7a2906dbc543702dba09b5a5fc45eba4d,Make it compile on Windows and fix some deprecation warnings
a9379314cf41d1cb68d8f9d8441df453d2f841a9,Update issue template and fix minor issues in CONTRIBUTING.md and README.md
4e285f8de24026821cee63e8d94e37aacfb967ec,"Merge pull request #569 from TWiStErRob/contrib

Update issue template"
4f8d43e113f83ac9ff44221e102fc96817721cd9,"Merge pull request #565 from TWiStErRob/changes

Make it compile on Windows and fix some deprecation warnings"
9b52d0a0e4c989fbdc5909cef033bc9197a8d19f,Fix spelling error in ResourceTranscoder
455f05e5c552a3dfc73e01085b8575b333752673,"Merge pull request #585 from mrhether/master

Fix spelling error in ResourceTranscoder"
8e4a93fdb0c8a1db76232a6beeda3d374a3acadc,Update .gitignore: exclude runConfigurations.xml file
b7a37a04c3c73453370a1b75fae1e87bdda22e3f,"Merge pull request #593 from vbauer/update-gitignore

Update .gitignore: exclude runConfigurations.xml file"
c001fa8996da6bac9ea75c89c617f1a728d57cdc,"enable to add frame with specified position for each frames

- add position parameter to addFrame()
- modify setSize() for the same purpose"
260c6c698440d183b78f972c0e9da357bedc7885,"added more comment about the frame position, added braces to the if statements"
165db64e6b3abd09a6c32c74eb692e8ee77a2291,"Merge pull request #603 from conanoc/master

enable to add frame with specified position for each frames"
7294459fa97f93786d14fb310331e4ebe34ddecc,"Log the width/height of requests that fail [] of null models.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=97598272"
610cd3d9ba7a96c8c0dec4d41c7692dc5fa995d8,"Call setBitmap(null) to avoid Bitmap re-use warnings on M+.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=97979502"
7ecb14abd46d9e73de584ff9efc27541210982cc,"Glide. Add transformation for rounded corners.

Implementation migrated from Docs' Glide libraries. Let me know if any of this doesn't match up well with Glide's conventions. Also, the behaviour when the size of toTransform doesn't match transformation dimensions was somewhat arbitrarily decided as scaling (which, again, might not match Glide conventions...?)
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=99252689"
daa7e67ea0e2aab02d40b75905c13262c46ec051,"Added use of byte arrays and int arrays to glide gif decoding to improve performance on <L devices. Created general ArrayPool that allows pooling of any array type with a corresponding adapter interface. Follow up CL will replace ByteArrayPool with ArrayPool<byte[]> in Glide.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=99517599"
998c413d73fccf92ec19b971a105d6c0f02a4b5c,"Automated g4 rollback of changelist 99517599.

*** Reason for rollback ***

VisibleForTesting annotation causing build failure

*** Original change description ***

Added use of byte arrays and int arrays to glide gif decoding to improve performance on <L devices. Created general ArrayPool that allows pooling of any array type with a corresponding adapter interface. Follow up CL will replace ByteArrayPool with ArrayPool<byte[]> in Glide.

***
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=99520837"
b83aa6a5c226df9038e86f1dc156e3c1558fb0e5,"Rollforward of []
Added use of byte arrays and int arrays to glide gif decoding to improve performance on <L devices. Created general ArrayPool that allows pooling of any array type with a corresponding adapter interface. Follow up CL will replace ByteArrayPool with ArrayPool<byte[]> in Glide.

NEW: Fixed import for VisibleForTesting annotation

Automated g4 rollback of changelist 99520837.

*** Reason for rollback ***

Fixed VisibleForTesting import issue

*** Original change description ***

Automated g4 rollback of changelist 99517599.

*** Reason for rollback ***

VisibleForTesting annotation causing build failure

*** Original change description ***

Added use of byte arrays and int arrays to glide gif decoding to improve performance on <L devices. Created general ArrayPool that allows pooling of any array type with a corresponding adapter interface. Follow up CL will replace ByteArrayPool with ArrayPool<byte[]> in Glide.

***

***
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=99524860"
5373064dfdb10b753ad8cb693e178e4ff3b50d82,"Recognize MediaType for locally created animations
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=100481015"
0414757994a86978ce4fd519b7b9060de0058604,"Trim half memory and pool sizes when ui is hidden.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=100722100"
c2bcc3bf9ae775878d5844d85b22ad81e457e217,"Flip condition for transformation empty check (fixing a typo?).

I don't have a code path to exercise this yet, but it'll be necessary for moviemaker to directly use glide.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=101222969"
3a11f4073a124f27293a0ca28bf2d144bc60684a,"Decrease default frame delay to two 100ths of a second.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=101250127"
a64d5d0af38facfe9cf5b8ff0efb7ac6b4aebb4b,"Avoid NPE if Exception message is null.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=101417464"
f85c742b44723ee80ed9ff0f7a387ea8b23eb752,"Fix transform/dontTransform merging logic in RequestOptions

Applying RequestOptions with dontTransform set now correctly removes
transformations. Applying RequestOptions with transformations set will
unset dontTransform. Finally we will also no longer apply
transformations based on ImageView's scale type if dontTransform is set.
-------------
Created by MOE: http://code.google.com/p/moe-java
MOE_MIGRATED_REVID=102289398"
85506abeaa9b10ba4c81848772785b60242ba5d7,Fix a variety of style pmd/findbugs issues.
f10b02990f735ef9221f3441afdffefac826f025,Fix a few code style issues in AnimatedGifEncoder
c2ac07b5868bd13b4ef2cc70a0fa4493e8a19591,let first frame using last frame's dispose
cb640b2221044fe272ea6a249772cf71ba0d5fab,"Merge pull request #620 from kojilin/master

Let gif's first frame using last frame's dispose"
8ccafd00a820d064f00947967b625a3980cca7e3,"Fix run task in gallery sample

Signed-off-by: Taeho Kim <jyte82@gmail.com>"
c2fc19316d8680322cabeed31234d19e942866e8,"Merge pull request #643 from kunny/gallery-sample-buildscript

Fix run task in gallery sample"
f8604a1cc29a5b2e90db119dcfedb0a336acaa3c,Remove aar qualifier since Glide is distributed as jar. Fixes #638
4b6a2c5af3cfc7fe65fd4269ea47218c5a0825e0,"Merge pull request #689 from TWiStErRob/readme

Remove aar qualifier since Glide is distributed as jar"
cd5b86f6a6bffa5ab249ad70f19cddc7b4274b53,"Make CircleCrop handle Bitmaps that don't support transparency.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=102375353"
02616573bd83e692627cff4e9308094085301dbc,"Glide libraries. Migrate Docs/Drive's Webp decoders to Glide libraries.

I looked into reading the first few bytes of the file stream to detect if it is a WebP (as you suggested in WebpStreamBitmapDecoder in [] but I was a bit worried due to the format (https://en.wikipedia.org/wiki/WebP#Technology). It seems like you'd need to read a lot of bytes... but maybe this is safe...?

Also of note, the tests are emulator tests which were previously running on x86 but are now on ARM. This is because Glide library tests run with --android_cpu=armeabi (the default). As it is the tests take 150-200s compared with 30-40s on x86. Since android_cpu is not a standard TAP flag it would need to be changed in [] to LEGACY_ANDROID_X86 (if my understanding is correct). I can look into changing after this is submitted if you'd like.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=102957832"
c1ce94fa10ed7b0aaa16f95e1c729a2deb1c1d1d,Fix code style issues in ImageHeaderParser.
cdb9ebe55f06fcb40bd4bebeb531b2823c69726c,"Note moe equivalence.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106529804"
d85e396a9cde03be5c30c5ceefe9431cdf23289c,"Fix NPE in Uri ModelLoaders when ContentResolvers return null.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106538766"
e9b523ca658dde1a17e6f3489d693de3d8d3ff66,"Avoid IndexOutOfBoundsException in ResourceCacheGenerator.

This is a temporary fix, we're handling this same error (no available
ModelLoader) in two different ways, depending on whether ModelLoaders
return false from handles() or null from buildLoadData. I'll file a
separate bug to fix this independently, since it may be a bit more
involved.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106548199"
22c5c8fe925673a4ae2de128cd30ad7911fa2f53,"Decrease log verbosity when loading null models with fallback Drawables set.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106548217"
c8bd7b909053d8bbec145691f055569117bdf449,"Note moe equivalence.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106699690"
128fcd2aa81d8205bf37d1dc2887f3d4e9cf2c5b,"Swap clearing memory cache and pool to prevent re-pooling Bitmaps
Fixes #687

-------------
Created by MOE: https://github.com/google/moe
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106713713"
b334f4f145a899d3e2c013d222d4ebcf6eb94f0d,"introduced ConnectivityMonitorFactory interface

connectivity monitor factory is now injectable

-------------
improved encapsulation and using more specific name

-------------
Created by MOE: https://github.com/google/moe
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106714967"
81ff043f5d4bfb32a3b6506413b29e53a4f181a4,"Use a correct method for determining the number of cores on a device.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=106725698"
8a291a8782f2694d9db9766680af62e6eab085bb,Fix findbugs errors in GlideExecutor.
3534357829f1611b5625133317975cf7444ae69f,Fix documentation in RequestBuilder.
0a082cadd61bc8fa77f02586708105a6d5dccff8,"Don't rely on short-circuiting for sdk checks.

Fixes #578.
Conflicts:
	library/src/main/java/com/bumptech/glide/load/engine/cache/MemorySizeCalculator.java
	library/src/test/resources/exif-orientation-examples"
d13b34b0c9fe03c22719d353903533c012efc651,"Fix replacing default user agent on addHeader.

Fixes #546.
Conflicts:
	library/src/androidTest/java/com/bumptech/glide/load/model/LazyHeadersTest.java
	library/src/main/java/com/bumptech/glide/load/model/LazyHeaders.java
	library/src/test/resources/exif-orientation-examples"
4f159aa051fd807aefe610772855e30b06a8aa82,Update code style settings for AS.
66d4caa4d373f6aa842983b6265a4018dfcc12d5,"Allow lazy header factories to return null values.

After this change, we can try to lazily retrieve values for headers even
when retrieving those values may fail (due to network operations or
I/O). Previously the factories would have had to return some value.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=107154151"
9b4793d5adb7e3d067b6949269d86af2b31ad38e,"Throw exceptions if network operations are run on Glide's disk cache thread.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=107180067"
7286c3fa474069ac02dc2bad5ade5ba7c0a1cc89,"Implemented CENTER_INSIDE support

Implemented CENTER_INSIDE support

Implemented CENTER_INSIDE support

CENTER_INSIDE implemented

CENTER_INSIDE implemented: DownscaleOnly Downsample strategy

CENTER_INSIDE: Formatting fixed"
84daeb78d4d0dfc4b812d705cf70cbedb60ca674,Add consumerProguardFiles configuration. Fixes #646
268e06c00cab952c52922ee593dfe479257b067f,"Clean upload script up

Minor fix in upload script. Forgot =

Change "" to ' where possible in scripts/upload.gradle"
59f3d9cbbd73675f155e5cf9e7ccf99a3dce450f,"fixes #738: Add optional threading lock for bitmap manipulation (affects only Moto X 2nd gen on api 22)

this addresses a threading bug on this specific device, the bug manifests itself by displaying
black images instead of resized images."
e04b5a1a558bfba142c2f3c21c08bd6b18aa54cc,Fix code style warnings.
07a1bca44065c20a7821fc63c1e1283761b7bff9,"Adding a ModelLoader for Data URI scheme.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=108283996"
fa799e27ad04559c833597bc1ed8e56241d84cf7,"Ensure MediaMetadataRetriever is released.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=108357922"
ab277ca637be436afb1ae75628a0af0e1e607ab5,Fix checkstyle error in DataUrlLoader.
4bf613932737fabc2f951e508215eae1f4487a5a,Fix missing wait in GlideExecutor.
9054725ba29c0fc9960a7334cedc74922893b8a5,Rename runAllOnMainThread to executeSynchronously.
20aacc51061df68a77f7d5052d42bef24273e997,"Merge pull request #762 from vanniktech/master_clean_upload_script

Clean upload script up"
acc3fe3dead2f3f156d1b75cb10cdc7dbbb1d84e,"Merge pull request #727 from josemontiel/master

Implemented CENTER_INSIDE support"
aa751f6289ea16ef35955f7563038c6c51c6a4e2,Update Downsampler names.
ff7850cf2136f001f3af1e9d0100fcdd829bc9ff,"Merge pull request #758 from mullender/glide-issue-738

fix for issue #738 Some images simply do not download (Black image) -…"
958673285748732dc2b69650e28491640fdefe60,Fix Checkstyle issues to unblock #771.
dbeedd0e526de8c896e9415ff61aded736162b12,Reorder target arguments to help Java disambiguate varargs
2ab0e01abe1fd7b31863b8dcbb753677d5c08cbf,"Automated g4 rollback of changelist 108709885.

*** Reason for rollback ***

Broke Street View

*** Original change description ***

MOE automated commit.

Merge pull request #762 from vanniktech/master_clean_upload_script

Clean upload script up

-------------
Merge pull request #727 from josemontiel/master

Implemented CENTER_INSIDE support

-------------
Update Downsampler names.

-------------
Merge pull request #758 from mullender/glide-issue-738

fix for issue #738 Some images simply do not download (Black image) -…

-------------
Created by MOE: https://github.com/google/moe

***
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=108724201"
32f25e61f2e3deaf82a09ddb5abc0dcebacf4ff8,"Automated g4 rollback of changelist 108724201.

*** Reason for rollback ***

Rollforward with compatibility for apps targeting API 21

*** Original change description ***

Automated g4 rollback of changelist 108709885.

*** Reason for rollback ***

Broke Street View

*** Original change description ***

MOE automated commit.

Merge pull request #762 from vanniktech/master_clean_upload_script

Clean upload script up

-------------
Merge pull request #727 from josemontiel/master

Implemented CENTER_INSIDE support

-------------
Update Downsampler names.

-------------
Merge pull request #758 from mullender/glide-issue-738

fix for issue #738 Some images simply do no...

***
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=108748541"
2a4e75a21fea39e1c069e86ed197e3e076667d43,"Update to Gradle 2.9 | Checkstyle 6.12.1 | PMD 5.4.0

Switch to Gradle-all back"
05c5b8cb5a7c7e4309b80aeb3e45bdf14a90c779,"Merge pull request #772 from TWiStErRob/fix_varargs

Reorder AppWidgetTarget arguments to help Java disambiguate varargs"
7fe2d14985c4e1fa30254930cb0d75c875f073b2,Avoid using varargs in array adapters.
3db87601f7c577317e63e4123fb348b0e8736f93,Fix circleCrop Rect bug
8489cc8edad9aa43fb512cfa40abd618fe074ce1,Do not re-allocate an entire MessageDigest instance for every key.
28859ec29420788d35da69606db96f3a94c9e4e8,Pool MessageDigests rather than synchronizing.
4c418a5bf6eee0f7eb855ee09e84914f76ffdf1f,"fix bug of DiskCacheStrategy.RESOURCE

This bug will cache source data at DiskCacheStrategy.RESOURCE."
3557f4b6dbf519d3b29561a200d82f94b4d0fc65,"Merge pull request #854 from luxiaoyu/master

fix bug of DiskCacheStrategy.RESOURCE"
1311e2bbd8c602869de0904f031d1fd38d063f78,"Add a new integration for OkHttp 3.

Also upgrade MockWebServer to 3.0.0-RC1, which is versioned with OkHttp.
Also deprecate the old OkHttp 2.x integration."
734c54c03b8835e99bf0f3385e82017b609bb193,"Merge pull request #856 from swankjesse/jwilson_0102_okhttp_3

Upgrade to OkHttp 3."
c898281891047b805e7f3218e823f08edd34b6a7,"Don't publish :glide as anything to Maven repos
Build :glide as 'glide-full' to have a flat jar to be published on GitHub/releases
Publish :library as 'group:glide' as AAR and JAR to Maven repos
Make :third_party:gif_decoder and :third_party:disklrucache first-class published gradle dependencies
Remove duplicated repositories, JAR_PREFIX, JAR_POSTFIX declarations (pull constants up to :integration and :third_party level)
Fix JavaDoc generation (Error reading file: ${androidSdkDirectory}\docs\reference\package-list)
Move JAR generation to upload.gradle (from integration/build.gradle) so it's used by :library as well
Add javadoc and sources JAR generation to upload.gradle for non-android projects as well"
1439c67e7b9f6c13eec7f394d908aa1b3fe080ae,"Merge pull request #874 from TWiStErRob/aar

Introduce AAR publish for :library and stop publishing :glide"
04b85152941bbc09fa1e430a9264d6904a09ae57,"Merge pull request #761 from vanniktech/master_add_consumerproguardfiles

Add consumerProguardFiles configuration. Fixes #646"
e91e78f14c473205f8a417d377dae5e13d5658fd,Fix breaking build for SNAPSHOT users
2f8dd4eccb9c5f895aef3c52b31219de25965898,"Merge pull request #881 from TWiStErRob/aar-fix

Fix breaking build for SNAPSHOT users"
6f9ff15a3816475d74790eabab45600f1fbb99cb,okhttp 3.0.1
ed495b9d184ec6040ddc41279f6001ebaf3d8edc,"Prefix Glide thread names with ""glide-"" and
make disk-lru-cache thread min priority
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=111548082"
dc21ef737a1f9a0289a135813cd4290bd1215128,"Avoid throwing in EmptyModelLoader

A ModelLoader for a given data type may depend on another ModelLoader
for that data type. If no such ModelLoader is registered, prior to this
change, Glide would throw an exception and fail the request. This change
allows the ModelLoader with the missing dependency to fail, rather than
throw, allowing Glide to move on to another ModelLoader that may
succeed.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=111701943"
a54f60fc48b8e5c012db7565575379b07ff17f50,"Merge pull request #897 from b95505017/okhttp_3_0_1

okhttp 3.0.1"
2e8331c7bdc5ea745b308083b1b7ce8575b04bc6,pull disklrucache forward
91c75ee589d0c57aa114734a3d5ff7d0571be6fe,Cancel okhttp3 requests
54ddf86aef697c8692caf1988f17bc07946fc0f0,"Remove version codes.

Progress towards #888"
364a6df1cba83f81229ac69dbdabcc554328cb1a,update glide version in README
e280ffb9e1bab53460f711ac79f242637c29397f,"Merge pull request #947 from Undin/readme

Update glide version in README"
7b512224fd3d0d62c4e2343a3758fc9af527e0cc,Always clear previous frame when drawing first frame
332c1fd02a1bcad7bdbc4f0b2783321d5b6433ff,"Merge pull request #950 from kojilin/master

Fixes issue #836, always clear previous frame when drawing first frame"
cba32372f9aad6d271863b67bf512d40d29e10e3,Fix comment to make it clear that target.cancel() has to be called when exception is thrown.
4e23a45e3125277a21c005b717ca208e06c4e8f5,"Enhancements to documentation
code style, compatibility section, more links, document issue labels"
724e606c9b3d3ffc9fb8dcae625565f91f339d71,Remove leftover lines for #888
8bf4f7a688e85960473274831dd9b2aa1bfaf686,"Use Tag along with Id to identify the notification

The pair `(tag, id)` uniquely identify a notification.

Refer [The NotificationManager class description](http://developer.android.com/reference/android/app/NotificationManager.html)"
cdfa93e34e0efcad338702e48ec50e86d5d64c4e,Fix a flaky test.
a0aada3e817bd6824f43810fe29ae70f1bbfc9dc,Fix travis builds.
ee36815ca9c6ba3b775f59f7671f4253e1005b81,"Merge pull request #967 from TWiStErRob/version_code

Remove leftover lines for #888"
22f4beb19bcdafe061eea9f4c8d2826d2e79cb30,"Merge pull request #966 from TWiStErRob/readme

Enhancements to documentation"
59133d4da250a3177c72dca42ed93b06e9e77ab5,"Merge pull request #962 from aam/master

Fix comment to make it clear that target.cancel() has to be called when exception is thrown."
1074961362a0048880501023fbf7e95053b6fa72,Fix some typos
3a8490a97372952d4bf96024fb4fff7b4b79e600,"Merge pull request #990 from liangricha/rl-typo

Fix some typos"
025e290aa9470a40a1bfcdce9a9da55b0a9c95df,Merge branch 'patch-1' of git://github.com/iontech/glide
c551460e6235e634a31db6b837f668087fcb55a3,"Use only one byte[]/int[] pool

ByteArrayPool and LruByteArrayPool can also
be removed in favor of ArrayPool"
3178434d1e4f75638714b3fe503f8663ed9c220d,"Merge pull request #992 from liangricha/rl-arr-pool

Use only one byte[]/int[] pool"
6a2c1b098b74987372e8cacf648eb2aa9461b629,Remove StringSignature - use ObjectKey instead
82254c239ea0ef0dc1a762b7894ab76297648945,"Merge pull request #1000 from liangricha/rl-key-cleanup

Remove StringSignature - use ObjectKey instead"
deb80c26f4220ff54a1c339c66804f45c231c1a4,"Catch IllegalStateException in onAttach

The error thrown when the RequestManagerFragment is attached at the
wrong time is an IllegalStateException, not an
IllegalArgumentException.

Fixes #497."
df0856b32383237fdbb672849a20dee9c73c2193,"Merge pull request #1016 from Teovald/master

Catch IllegalStateException in onAttach"
d34696310bb2dc8173e6a9b1bfb3651bd9dcac20,"Remove unused VolleyRequestFuture class

Seems to be unused as of:
https://github.com/bumptech/glide/commit/3a88d42bf46ae5c3a33fe63d285727f37185ae42"
2c1676bfa17679ea6e7330c9d8757d6abad14cfd,"Merge pull request #1023 from liangricha/rl-volley-unused-class

Remove unused VolleyRequestFuture class"
271df93be09219d6dc1302beda8da3839c006b62,"Remove BitmapTransitionOptions

We can use GenericTransitionOptions in its place"
6f5ce950da23be69c15ced9d3423aa2020b5f3df,"Merge pull request #1045 from liangricha/rl-transition-cleanup

Remove BitmapTransitionOptions"
5eef34d9039225950b4999a96cee552781bf8730,"Introduce issue templates ""the right way""."
4d2e710411c940d6824b52b654939ef21733ec37,"Merge pull request #1071 from TWiStErRob/master

Introduce issue templates ""the right way"""
45245c8b0523412d4dc78706f6f0c91afca42c1b,"Updating Robolectric to 90b6fa32b55c640b8403611dd7f2930b72f7bdef
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=113886263"
8ace2db8114f8c57039c3c382d4ec2a5122f5160,"Set Bitmap height / width for GifDrawableTest.testDoesDrawCurrentFrameIfOneIsAvailable() to a size that will not result in negative array size creation for latest update of Robolectric.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=114773678"
5db391ca4ddc2638e7960fdb006e5fd50e396d24,"Add load option to use SourceExecutors from unlimited pool.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=115278776"
be8f9863addae9f6c8850106852b46adcd63eab9,"Avoid using inSampleSize for WBMP and ICO images in Glide

The framework doesn't support downsampling WBMP files, and only supports
downsampling ICO files that contain PNGs, not BMPs. I'm hoping that ICO
files containing PNGs that are large enough for the lack of downsampling
to be a serious problem are relatively rare.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=115389667"
77e1876bf4ea36d43e537c1e46c7efc6046f35d3,"Adds debug logging to Glide ManifestParser for module loads.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=115469990"
3bb8856c246454e8ff832abfa72be6e1fc498276,"Migrate glide to new cronet APIs
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=115679810"
606ba55d800e154e7d417b428cb8a9d10dc5c8ed,Fix import spacing.
9b33cfc30bf2fc569c2a9efa186963c2298cc636,Fix PMD errors.
94e694732b877d4918615fb2db205ecb12f033a3,Depend on Robolectric 3.1-SNAPSHOT.
1b3f5c97b03c1e1aecc56fb9ec06f5f37003eb00,"Automated g4 rollback of changelist 116163387.

*** Reason for rollback ***

Broke []

*** Original change description ***

MOE automated commit.
-------------
Merge pull request #854 from luxiaoyu/master

fix bug of DiskCacheStrategy.RESOURCE

-------------
Merge pull request #856 from swankjesse/jwilson_0102_okhttp_3

Upgrade to OkHttp 3.

-------------
Merge pull request #874 from TWiStErRob/aar

Introduce AAR publish for :library and stop publishing :glide

-------------
Merge pull request #761 from vanniktech/master_add_consumerproguardfiles

Add consumerProguardFiles configuration. Fixes #646

-------------
Mer...

***
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=116167265"
db8b549519172702f4c2b1507750b285cffc5184,"Automated g4 rollback of changelist 116167265.

*** Reason for rollback ***

Rollforward with fixes

*** Original change description ***

Automated g4 rollback of changelist 116163387.

*** Reason for rollback ***

Broke []

*** Original change description ***

MOE automated commit.
-------------
Merge pull request #854 from luxiaoyu/master

fix bug of DiskCacheStrategy.RESOURCE

-------------
Merge pull request #856 from swankjesse/jwilson_0102_okhttp_3

Upgrade to OkHttp 3.

-------------
Merge pull request #874 from TWiStErRob/aar

Introduce AAR publish for :library and stop publishing :gl...

***
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=116316494"
afb03efd44c951be6d54162909f965fc4bbee9bc,"Use SynchronousQueue instead of unbounded queue for unlimited source
executor. With unbounded queue ""no more than corePoolSize threads will ever be
created"" per
https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor.html.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=116560426"
33315ed9f62a6776a9fcb9d76e3115d9b4c64799,"Start removing lookups of the Glide singleton in the framework code
instead requiring a Glide instance to be passed.

This is first in a series of CLs working towards removing the singleton
lookups in framework code so that Glide instances can be constructed and
injected outside the singleton/GlideModule mechanism.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=116591491"
4d52aa55ae34fe5c7d1775bcce34c2c68a960567,"remove unneeded Glide.get() call
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=116718420"
036a623eee32ff2f911deb588d52397da6ae0763,"remove unused context property in GifState

mark test-only constructor as @VisibleForTesting
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=116723134"
750354e4f0a0e98a5c3965d307975afb7f80a26c,"Modify PiexResourceDecoder to take a Glide object instead of a Context
as to avoid usage of the singleton.

No other files are changed as I do not see any other uses of PiexResourceDecoder
in [].

[]
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=116794303"
36262bcb1ca6a3b932e7ba472470a78222e43833,"Factor Glide.get() calls out of GifFrameLoader.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=116813747"
31c63e93360009642b84a002dff36be8e75470b9,"Start pulling unnecessary Context objects out of build() functions
in Thumbnail* classes and pass in the most-tightly scoped dependencies
into constructors where needed.

This is pre-work for other cleanups that limit passing of context objects
as grab-bags for dependencies.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=116824341"
c64847a168e49260c40853a6da97307a0305c316,"Most factories do not need access to the Context, and the Context is used
as a handle to get a handle to the Glide singleton.

Remove Context from these build() methods and provide dependencies in factories'
constructors when needed.

Update call sites to reflect changes to methods.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=117386263"
ac93fe4d2a2f691809434d9e854bcf9be64ba365,"Makes decoding a very low-pri foreground task but slightly more important than a background task.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=117496655"
63c1c2dadb229ee5ef41661c4a260deb38c4a34e,"Allow get to be called from main thread if done
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=120927634"
67327621807cfdf5c25ac7018b8277b3df09e5c5,"Makes GifDecoder an interface and extracts the current implementation. This
will allow us to start experimenting with other decoders, like hopefully
Renderscript. It will also allow us to implement a new decoder outside of
glide/third_party/... that just implements the shared interface.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=121313348"
f1975a3d32d5eab0d68c3bc0a8aceb3b706d5663,"Add preconditions and documentation to stop null gif header errors.

This doesn't contain any significant code changes, but should at least
make errors appear less obscure than a random NPE when a recycled
resource is used.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=122472941"
f6ba9c212a1030bf1aaf19f9f64cdd22c52ed83e,"Clear animatable resources in ViewTarget when non-animatable resource is set.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=122473903"
79e4302088dcdf1dcad9f11229cdd3f79a591237,Fix PMD/Checkstyle errors.
b03d6ce8de2698002658c15e942094ed3fdf7c12,"Avoid applying size multiplier if width or height is set to original size.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=122550422"
3c3bcc21a0e8adf596bc9f714286943565aab719,"Account for padding in ViewTarget.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=122573719"
4aa684fa9a303bb614536a565fa1b7506253ae88,"Disable cross fade in TransitionDrawable by default

The cross fade method in TransitionDrawable controls whether or not the
Drawable transitioned from is faded out.

If cross fading is enabled, the old Drawable's alpha is animated from
100 to 0 while the new Drawable's alpha is animated from 0 to 100. Using
this behavior can cause performance problems on older phones and
produces a whiteout affect in the middle of the transition where both
Drawables are at 50% opacity but the background color behind the
TransitionDrawable can be seen clearly.

With cross fading disabled, the old Drawable's alpha is not animated and
the new Drawable is simply faded in on top of the old Drawable.

This does change the default behavior in Glide. If users prefer the old
behavior, they can use DrawableCrossFadeFactory.Builder to re-enable
TransitionDrawable's cross fade.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=122579678"
cf259cdbbefd58b91404296c18115c48c8b06f6e,Fix PMD error in DrawableCrossFadeFactory.
e170dbf65f07a434786a70c8cac5cf0f78d5f3a1,"Fix bug when checking enough space to caching array

Since the space in LruArrayPool are count by bytes, we should
pass the bytes of the to be cached array to isSmallEnoughForReuse()"
d038af7c5289dcfb11528adecea243d1e473427b,"Update

mcxiaoke's mirror is deprecated"
91d77f750a834e29b539a8029c511c721f860835,updated version to make travis build pass
1bb673f6b864c598a5d1c4d6892bb6f1b37061e2,Depend on robolectric 3.1
d0760de1a03f069d9b807ab6a6b7b69c452884ed,Merge branch 'patch-1' of git://github.com/Dimous/glide into Dimous-patch-1
77f10060234c2a6714d6ca1b49a4f4c741823ac7,Merge branch 'Dimous-patch-1'
e0d8f8653206252276a4a901ab7ba27a45ab6e08,Merge branch 'fixbug_array_pool_checking_space' of git://github.com/JektonLuo/glide into JektonLuo-fixbug_array_pool_checking_space
235f90fc426431482a5b332a308151f6f3337809,Merge branch 'JektonLuo-fixbug_array_pool_checking_space'
6877184a5114e888f093a5f112679853dd40d0cd,"Speed up converting colors in GifDecoder when downsampling is not required.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=123230668"
8b99ef28041e52e37248801f2d86d45d48cecace,"Cache GlideUrl's hashCode, which is kinda expensive to calculate and shouldn't
be changing.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=124025653"
ec08475c17a3956af27bea7960759dc471b9c4cc,"Add support for customizing timeouts to Glide's HttpGlideUrlLoader.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=124279517"
bf70b83039349e29059c537e742548ce6c1510ad,"Always update animatable when updating resource in ImageViewTarget.

Previously we might set the resource to null without setting the
animatable to null which could cause us to interact with a recycled
resource.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=124367409"
a6731ff932566388e794fc16d42afa94c518618b,"Reuse the orientation information instead of parsing the stream again.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=126729209"
51ae91a9165be50185372ea79cdc8aa21a9f5b54,"Forward port PR #1119: Support contact Uri #394
(minor cosmetic changes were applied and more examples added)"
65c82f3d45fef8428e9e8aa534e9ab2fb7cbf754,Forward port PR #1281: Use application Context in GifResourceDecoder
0962c66c5eb9b28c8b4a2a58b3275a6c0cf98af1,Forward port PR #1090: Fix thread-unsafe behaviours in GifDecoder
a1208e3b6ceb40474ae4bb96ed0b31a288d31a0f,Forward port PR #1093: Fill only the area that was modified by the previous GIF frame on dispose background
bb453e69fcb537fdc7150729b33d9275733cbe3a,Minor cosmetics to reuse values.
ab0f762050acea6e9ab4650a0bb25776bcbf2121,"Forward port PR #1096 that introduced .asBitmap().crossFade() to .asBitmap().transition(withCrossFade())
Fixes #840
Also introduce some missing convenience methods and fix some JavaDoc typos."
d112d5d68718a9335fa9d92d9b1f55441ad82006,"Merge pull request #1322 from TWiStErRob/fwd_1119_contacts

Forward port PR #1119: Support contact Uri"
1ab0a907627215a5830d8349179f48f5d028f5fc,"Merge pull request #1323 from TWiStErRob/fwd_gif

Forward port GIF fixes"
2f7128edb0a4fc932a15531e998238caddfd265f,"Merge pull request #1324 from TWiStErRob/fwd_crossfade

Forward port PR #1096: .asBitmap().transition(withCrossFade())"
aab4fa3b0c3d9cc7677619dc504ef58bb4ea25fd,"Spring Cleaning
Mostly javac/LINT/gradle/IDEA warnings, typos, and consistency fixes.

Detailed Global changes:
 * Fix some JavaDoc formatting issues (e.g. broken links)
 * Fix some JavaDoc build issues (inner class ctor links were broken)
 * Fix mis-typed words that caused grammatical issues
 * Fix Gradle deprecation warning during build
 * Make samples' build.gradle files more similar
 * Remove redundant <uses-sdk> from manifest

Mostly test related classes:
 * Add some generic arguments where missing
 * Add @TargetApi annotations to test code to suppress LINTs
 * Reduce the scope of suppressions or remove them completely
 * Use some specialized mocking/matching methods to reduce uncheckedness

GIF related classes:
 * Reduce number of magic constants, name them
 * Add some documentation from the standard for the constants
 * Remove some meaningless comments
 * Convert most inline comments to JavaDocs
 * Add annotations for ints designating color/status/etc (int is too overloaded)"
7d54cb50e387a316b9d851c9a995f714a4f34122,"Merge pull request #1338 from TWiStErRob/cleanup

Spring Cleaning"
3f5543a1519e2b711a677f9072ad56734f492f86,"Migrate to new import order.
-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=126915351"
6d91e362060d4ea3301681989dc0f56b04037f36,"Suppress strict mode from calculateBestThreadCount

https://github.com/bumptech/glide/issues/1170

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=129004942"
aa82751774b1e75950cb6cfefa2a142e75dde780,More import formatting
2f4ffa57746a94d7ac5fc59fa3c13c8207ef7592,"Assign the responseBody as soon as we have a response.

Now the cleanup() method can close the response body properly.
Fixes https://github.com/bumptech/glide/issues/1441"
6e52b7b37efdbba97e2e8706db6b8807cbbdf0aa,"Merge pull request #1443 from kypeli/master

Close the OkHttp response in case of error. Fixes https://github.com/…"
a73a5291e50d684cb1be0fca86b60bb6ac91d37d,return the old MemoryCategory used by Glide.
b54084a99d80b979db075fcc4f8edd7bff459381,Update Android Gradle plugin.
20f70e6a176fe2ace1df27a6d89bcc1ada99f9c1,Fixes #1464
6c24ddd383c5ac4f98713264f94a2fe3354199c4,"Merge pull request #1465 from TWiStErRob/gifbuildfix

Fixes #1464"
6ddb5f0598b1a5a5a51647fb968e998d6cabbd3d,"Merge pull request #1459 from frannois/returnMemoryCategory

return the old MemoryCategory used by Glide."
7c4e1dc8c1deae8954f7d8738dc0d1d20c05c3e8,"removed synthetic methods, Fixes #1555"
67e6975df8a802680e48b0a1b9a7c472a4813c71,"Merge pull request #1556 from RiteshChandnani/remove-synthetic-methods

Removed synthetic methods"
14f9810a66c0fba15a6cde202a975355e2581d55,"added note for DexGuard only

https://github.com/bumptech/glide/wiki/Configuration#keeping-a-glidemodule"
a833fecfe5146efd06cc1aaa8edcf6842afe9a45,"Merge pull request #1666 from alashow/patch-1

added note for DexGuard only"
c6b7cf7416718fbc6c3022d98df3c1d85909bdb4,"Add method to GifDrawable to reset gif frameloader state so animation consistently starts at first frame.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=132060304"
6e8972529935860dbbcdc991a868253b7515492f,"Avoid filling arrays in the array pool

Each individual fill is relatively inexpensive, but they can add up to a
fairly large amount of time with enough requests. I can't find any place
in the codebase that currently requires any array to be filled with 0s.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=132361295"
dce95506f138bd877aaed1183958f5e186a2bfef,"Add prepareToDraw calls for Bitmaps in Glide.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=132440519"
16bbbbd4cdcd9441b2bfc67502abbb42af1dcc5b,"Allow to use dynamically loaded ImageHeaderParser.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=133011749"
e1170977ff3c15fc43bbe404d45d8beda755c7b9,"Automated g4 rollback of changelist 133011749.

*** Reason for rollback ***

TAP has detected that 500 or more targets failed to build at [] each of which successfully built at the prior CL that affected them.
TAP double-checked that []
built at 133011748. The verification run was:
[]
but the same target failed to build at 133011749. The sponge link for this run is available here: []
To see all targets that ran, along with their final status, visit: []Questions? Comments? See the URL.
[]

*** Original change description ***

Allow to use dynamically loaded ImageHeaderParser.

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=133014089"
c15f453757836e736a8155437da98860168058d4,"Add onlyRetrieveFromCache option to Glide RequestOptions

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=133965949"
619adc5382e6d138d9d914e7e08e22c505e5ab0a,"Fix typo in comment.

It mentions circleCrop instead of centerCrop

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=135136693"
21e29509569d5aab95de5ced00b7b02900ae7bd5,"Add option to fix bitmap dimensions based on requested resource
dimensions

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=135291116"
af4263f1b4a9161b2ea7409bcb9ad30e0fcfd0fb,"Roll forward of [] Allow to use dynamically loaded ImageHeaderParser.

New: fixed the usage of Glide by other clients (which where initially not caught by presubmit.

Automated g4 rollback of changelist 133014089.

*** Reason for rollback ***

Roll forward: fixed the usage of Glide by other clients (which where initially not caught by presubmit.

*** Original change description ***

Automated g4 rollback of changelist 133011749.

*** Reason for rollback ***

TAP has detected that 500 or more targets failed to build at [] each of which successfully built at the prior CL that affected them.
TAP double-checked that []
built at 133011748. The verification run was:
[]

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=135717157"
ee92824f42c8631be5e696d1d2595fa7726f217d,"Automated g4 rollback of changelist 135717157.

*** Reason for rollback ***

This breaks fireball

*** Original change description ***

Roll forward of [] Allow to use dynamically loaded ImageHeaderParser.

New: fixed the usage of Glide by other clients (which where initially not caught by presubmit.

Automated g4 rollback of changelist 133014089.

*** Reason for rollback ***

Roll forward: fixed the usage of Glide by other clients (which where initially not caught by presubmit.

*** Original change description ***

Automated g4 rollback of changelist 133011749.

*** Reason for rollback ***

TAP has detected that 500...

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=135730013"
aad2f376a01e15b23b11a9f58319095125e57088,"Load aspect mini thumb in PhotosImageLoaderBehavior
Fall back onto cached square mini thumb if applicable

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=135743644"
62da04b0a7d652e1adc0d8ca33aeb0368d4f5c21,"Prevent duplicate cache keys for sources to speed up loading.

Note that this avoids the use of a Set to avoid memory allocation.

In our requests I frequently see two identical source keys in there, which would cause twice the cache file lookups per request in worst case.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=135944748"
ac3940e215e4fe9e81e141d8ea117172f0872e3e,"Fix ImageHeaderParser Buffer Exceptions.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=136188037"
f5adbb6e2e73de6bf84b53480c57383b958cc4e3,"Roll forward of [] Allow to use dynamically loaded ImageHeaderParser.

New: fixed the usage of Glide by other clients (which where initially not caught by presubmit).
Global tap presubmit seems to be fine, see b/26762780 for more details.

Automated g4 rollback of changelist 135730013.

*** Reason for rollback ***

Roll forward: fixed the usage of Glide by other clients (which where initially not caught by presubmit.

*** Original change description ***

Automated g4 rollback of changelist 135717157.

*** Reason for rollback ***

This breaks fireball

*** Original change description ***

Roll forward of [] Allow to use dynamically loaded ImageHeaderParser.

New: fixed the usage of Glide by other clients (which where initially not caught by presubmit.

Automated g4 rollback of changelist 133014089.

*** Reason for rollback ***

Roll forward: fixed the usage of Glide by other clients (which where initially not caught by presubmit.

***...

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=136504201"
450a503e952b628b913df6c060a7667ca4329566,"Add PiexImageHeaderParser and the PiexImageHeaderParserGlideModule.
(Not yet connected to Photos)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=137061082"
69fead82c64c47084af8c540dcfdf805021a3fec,"Close the url connection after receiving an Http error when trying to load a
resource

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=139198431"
e8a50071a59aac2dd7d6628166471a2c456414a2,"Update Robolectric to head of master -- https://github.com/robolectric/robolectric/commit/b88b2f6be9755ba6b951b78beb784f86776cc432

* Matrix and Parcel are more fully implemented.
* Config properties resource files may be included at any package level to configure Robolectric for related tests.

Several tests depend on the old (broken) Matrix behavior; b/33080703 and b/33078636 track fixing those.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=139978380"
0b541f8ed4009e2014f6e177401f8345077bba7e,"Fix crash when parsing GifHeaders to detect animations.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=141194472"
28aa015db3bd8d8edd0b19c875b4e901f4c79806,"Glide + OkHttp 3 == <3

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=144026579"
2d323743b3d9a8f353af164a8855a48ad3560e77,Fix lint/findbugs/pmd errors.
af671dc4d1aac02704f45480c3fa9a2ebb480381,"Fix minor inconsistency in okhttp integration libs.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=144965423"
df665fce482e60f4222ae2ced1474af0b0ce3dec,fix comment error
7ffa361176a5ab0c8e67d28d3f373ca3f2406e96,"Merge pull request #1715 from AlanCheen/master

fix comment error"
3bcea91b7709ad219887fb9b71dff9222dbd3d99,Update to latest sdk/build tools.
04b829d27c16f87dbcaa55469be445e697e514fa,Add an annotation processor for GlideModules.
13a7fa24873246e52c73915bd648cf2af49e4484,Add a script to simplify updating javadocs
133b0c5aa3cdbd1de26dc377a0ff2e77c20ad0cc,"This is in preparation for incoming upgrade of //third_party/java/robolectric

This migrates down-casts of Context.getPackageManager() to RobolectricPackageManager which make assumptions about the implementation details. After the upgrade Context.getPackageManager() will return Android's own ApplicationPackageManager (although that may change over different SDK versions).

This phase of the migration moves users to the safe RuntimeEnvironment.getRobolectricPackageManager()

Cleanup change generated by Refaster ([] to directories
[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []
[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [][] [] [] [] [] [] [] [] [] [] [] [] [] [] [] //third_party/java_src/android_app/bugle/nohistory/tests/robolectric/javatests/com/google/android/apps/messaging:shared/receiver/SmsReceiverTest //third_party/java_src/android_app/bugle/nohistory/tests/robolectric/javatests/com/google/android/apps/messaging:shared/util/LogUtilTest //third_party/java_src/android_app/bugle/nohistory/tests/robolectric/javatests/com/google/android/apps/messaging:util/RcsAvailabilityUtilImplTest //third_party/java_src/android_libs/glide/library/src/test:GlideTest //third_party/java_src/android_libs/rcsengine/nohistory/tests/robolectric/javatests/com/google/android/rcs:service/capabilities/CapabilitiesFactoryTest
[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] with template java/com/google/thirdparty/robolectric/refaster:do_not_cast_package_manager

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=146520836"
96e4e0d0b6a4f4b6d5a4e0ebda5bee411bb0d3bc,"catch NullPointerException wherever we call openInputStream

MediaStore, and maybe other content providers, will throw
NullPointerExceptions in their open methods if filenames are null. Since
anyway can update the filename to be null for an entry in media store,
we always need to catch the exception wherever we use the method.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=147089717"
a727c3355886e2153b6afd0fa75812cb7090115b,"Do not treat cancel as the same as clear in RequestFutureTarget

Rx libraries always cancel futures after they complete, which does bad
things if we treat the cancellation as a clear. In addition, we should
follow the API and only actually cancel requests if
mayInterruptIfRunning is true.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=149317023"
ca555d9c092c3c7402ca4d7196623feaabb0743e,Add cause to FileNotFoundException for NPE in ThumbnailStreamOpener.
a0a701d90fdfc26de68ad4d9b51516c3671c974e,Assign Glide var before component registration
00039cebdacccf0d832099e319583895e44de599,Split out module processor just for GlideModules.
4ab4b39c7d13ab6b71f738f630b8061f7ed90a48,Add support for generated RequestOptions.
d54bc81a40769b7c3f2af3671ceb63e2c5a569a6,"Move RequestManagerRetriever into the Glide singleton.

This removes the independent singleton that
RequestManagerRetriever used prior to this change.
Removing the singleton will allow us to more easily
configure RequestManagerRetriever in the future."
99d98780069e1ec7950ca9170390d489b6492cad,"Add @ExtendsRequestOptions to add new types to RequestManager API.

@ExtendsRequestOptions will allow us to add dependencies on new types
and maintain the same fluent API. For example, if we split out GIFs into
a separate library, our generated API can still retain the asGif()
method, albeit with a slightly different entry point.
Glide.with(fragment).asGif() in the current world becomes
GlideApp.with(fragment).asGif()."
91a8a8b8ff324e711b6a8a6c38e16d33ee697d24,"Add a generated RequestBuilder subclass.

The generated class contains all RequestOptions as
well as all options in the standard RequestBuilder
class. The methods include those added from
GlideExtensions."
365b8882d5c4925c97f1a727b724c1617353755b,"Always generate classes even without extensions.

This allows us to always have the generated RequestBuilder containing
all standard RequestOptions methods available. Without code generation,
no such class exists."
43bd607b0a6bf1a6457789e0fa8c1ef5d5385189,Rename Glide annotations.
0188104a7d8a094da5c8b8c00290106e34ac1bb6,"Set min sdk version for Glide to 14.

Practically speaking this is already required by interfaces implemented in several classes. Given that ~1% of devices are still using Gingerbread, less than 1% are using honeycomb and it’s hard for us to avoid using newer APIs even in our sample apps, it’s probably time to move the sdk version forward."
61ef536716a8562c3c525ddb913603ec38d034a8,"Merge pull request #1810 from sjudd/set_min_sdk_version_to_14

Set min sdk version for Glide to 14."
f860038303169fcc1a6aa5df5558df7e3ad1639d,"Add a Glide.with method for View subclasses.

The implementation, especially for non-support 
Fragments, relies on implementation details of
FragmentManagerImpl. It’s not ideal, but it does
resolve a longstanding problem where View 
subclasses end up using the wrong RequestManager."
371297cf9a36df03da4244b5ea8527acdf05df6f,"Merge pull request #1800 from sjudd/add_with_for_views

Add a Glide.with method for View subclasses."
f62b6983fafdd844dab993ca5cba644837688bea,"Return latestSupported() from getSupportedSourceVersion(); the annotation processor has no version specific properties. Prevents compile time warnings on non version 7.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=151054136"
8761aa5adbcc68768d91600a6987b7eee6b71811,"Add Context as a parameter to Transformations.

Doing so allows us to remove the Context parameter
from all of the various transformation methods
in BaseRequestOptions/RequestOptions. In turn the
lack of a Context should make it easier to memoize
or retain static copies of options."
28b86bccf87ebe6fb51df624890430a4bc766dad,"Merge pull request #1812 from sjudd/move_context_to_transform_arg

Add Context as a parameter to Transformations."
c0c9d8c41b410b652a2de997d44869c5b9e2b32d,Fix Broken RequestBuilder subclass generation.
72da5b035d1979215c46384bca99cf2032dea341,"Generate API code in package containing RootModule

This fixes class path collisions in projects
containing multiple applications with 
RootGlideModules."
b6f97fb56daf893f6aff76a0d1e54b670843338c,Remove generated code deprecation warnings.
1c89ee0822e99797527b55eb9a7b49ea892b4239,"Moe Automated Commit

Merge pull request #1812 from sjudd/move_context_to_transform_arg

Add Context as a parameter to Transformations.

-------------
Created by MOE: https://github.com/google/moe

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=151345679"
5c557267d7171e28e9c0c1047e52f41baa144c3d,"Change the default downsample strategy to CENTER_OUTSIDE.

Addresses Point 3 in #730."
73f6629da16b551da40972d0b26e88ea8c5607cb,"Use centerInside for FIT_XY ImageView ScaleType

Addresses #730."
f775e1664df2be7c3114e02dc778f19dbf23d7f3,"Add a second model to those requiring a transform lock.

Addresses #738."
93bf2cd4a69b0237190103fcd4fb6efc14cb9497,Update to latest Android gradle version.
c06547b884163260b390afbb99a5b15349e7c8d9,"Change findAllSupportFragmentsWithViews to return a collection instead of list.

[]

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=151717941"
c973038917011939aba745fc5dedada4128bee07,"Don't let HttpUrlConnection redirect automatically as it doesn't seem to copy headers to the redirects properly, resulting in authentication problems when using OAuth.  If we don't redirect using HttpUrlConnection, then HttpUrlFetcher.loadDataWithRedirects will redirect recursively as expected.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=151764981"
7a03bbafb690f6d7100b6088a618f27991f51f2c,"Apply migrations from Robolectric 3.2 to 3.3:
  http://robolectric.org/migrating/#migrating-from-32-to-33

CL automatically created by replace_string.

LSC here: https://docs.google.com/document/d/1wFs1C4fOK9BKfeIZOuPp7RsUE4F-7BHkadxwtDkY-Vg

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=151851168"
0e613e2b3cfa1e5029ff6c58ea588a291242b128,"Apply migrations from Robolectric 3.2 to 3.3:
  http://robolectric.org/migrating/#migrating-from-32-to-33

CL automatically created by replace_string.

Finishing up stragglers after LSC here: https://docs.google.com/document/d/1wFs1C4fOK9BKfeIZOuPp7RsUE4F-7BHkadxwtDkY-Vg

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=152067245"
c468061a30f2329a56f2c45937fc5fc02642fca5,Update to Robolectric 3.3.2.
1ac38b5f88ddf462e46f7cbc3139b4f58cdabf06,"Check isLaidOut/isLayoutRequested in ViewTarget.

Avoids cases where we start loads for sizes that
were from previous images. Usually this happens
when Views use WRAP_CONTENT as a layout parameter
for multiple different image and/or video sizes.

Progress towards #939."
980ac625618f5e979aab925f928cade00a5de325,"Improve WRAP_CONTENT/padding logic in ViewTarget.

1. Treats WRAP_CONTENT as SIZE_ORIGINAL
2. Uniformly accounts for padding in ViewTarget.
The prior implementation failed to handle padding
correctly when the View’s size was not immediately
available (usually WRAP_CONTENT or MATCH_PARENT).

Progress towards #939."
8bb070c72c015f9cf5120c2dc9ac0f4322211495,Fix remote ref and javadoc target in update_javadocs.sh.
5a46c4bb8053c5a7dfca1a9f011e78aed7bf0f69,"Replace constants (static final CONSTANT_CASE) declaration type which use the general collection interface (e.g. List) with an immutable type (e.g. ImmutableList).

For constant field declarations, you should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List). This communicates to your callers important semantic guarantees ([]

For more info, see: []

Cleanup change automatically generated by javacflume/refactory
Refactoring: //third_party/java_src/error_prone/project/core/src/main/java/com/google/errorprone/bugpatterns:MutableConstantField_refactoring

Tested:
    TAP train for global presubmit queue
    []    Some tests failed; test failures are believed to be unrelated to this CL

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=152261983"
66f377006aa741c211f71ee3ebf8ca97fcf87aa7,"Deprecate autoLock in favor of autoClone

autoLock as a method name makes no sense, it's actually autoClone.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=152271991"
b8944624ddd19292ce464b2b206a9e0ae7f0ac25,"Remove deprecated autoLock() method.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153123820"
816bd427f0752c106e773a783e0a67ce495ced39,"Cleanup change generated by Refaster ([] across [] with template []

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153170194"
ee789657baefc8cd625b221710137a9b281c6ce4,"Remove deprecated centerInside(Context)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153194620"
c1ad27a141af92b0d725a25010e4f725f56352cd,"Automated g4 rollback of changelist 153194620.

*** Reason for rollback ***

Breaks youtube

*** Original change description ***

Remove deprecated centerInside(Context)

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153198264"
7534895ddd6cffe661599f31f857b2ff9864bc2f,"Forward port PR #1813 and #1836 from 3.0 to master: Fix wrong interpretation of the Netscape iteration count in an animated GIF.
Fixed #1724"
c6e837ba47934d9136d8a5b5075d81b98dec4105,"Remove deprecated fitCenter() method

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153349831"
b949d0011eba88fdb31cf6028306cf48d70ded69,"Carry through @Nullable annotations from Target interface.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153365074"
caf5163df12728f3fd31293825afaa9bf8ca51ac,"Allow a view's state to be consider valid if it has a non-null layout params and a non-zero layout width and height.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153508986"
f390ee219e728419353068cb0fa15ae4d386d28b,"Remove deprecated fitCenterTransform(Context) method.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153509979"
e766c9d2a5c12bdc7ac4beb25dcfb5dd6c19027e,"Rename RootGlideModule -> AppGlideModule.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153521192"
89290802f47cd1273f551f8377bc4b4d42099a7e,"Remove deprecated centerInsideTransform(Context)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153583063"
3705918e9c9f2156fd461327f4218876d9505d68,"Fix bug in ContentLengthInputStream where reading a single byte does not adjust readSoFar correctly.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153591376"
a376f2c601819bf4ce1d6e0a37f7a48bc651fe70,"ChildGlideModule -> LibraryGlideModule.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153594263"
eb678f4df7a68f472a57b9d360d5d65b575c4e70,"Remove circleCropTransform(Context)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153637170"
22456e2df919f2d3104a418b8b182a933c1c8221,"Cleanup change generated by Refaster ([] across [] with template []

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153665346"
63275bc21f51b5fe48007be214e95c60ec51f835,"Remove transform(Context)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153706169"
00bbbaf1c31fa7583e346351b67983a3363d7189,"Cleanup change generated by Refaster ([] across [] with template []

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153783377"
027d670699fac100fc9a547f577b5c470c348109,"Use correct any... matchers for primitive numeric parameters

More Information: []
Mockito relies on Java type checking to ensure that the matchers are used in a
type safe manner. While that works for the most part it does not work well
for primitive numeric parameters as Java will do widening conversions if the
types are not exact, which means that anyInt() can be used for long parameters.
That has no effect in the current version of Mockito as it does not do type
checking for the any... matchers. However, future versions do type check and
expect exact match on type for primitive matchers.

This CL fixes the incorrect usages of the any... matchers. The change was made
using an Error Prone BugChecker and once all the incorrect usages have been
fixed it will be enabled to prevent any other incorrect usages being added in
future.

Cleanup change automatically generated by error-prone refactoring third_party/java_src/mockito/v1_9_5:mockito_any_incorrect_primitive_type on targets <stripped>

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=153880222"
01795c8a09a2a24bcf655986db510fbc1be8e45b,Fix SvgModule.
a8d06cb3e6d252bb798614ea1bc6c922e11f9e24,"Remove deprecated centerInside(Context).

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154059485"
064f850993eeb0d6db447c560a51cc082527389d,Use a single consistent library version.
ed148d0c69db845af2d58ab42be064412bb78158,Add annotation to group name for annotation libs.
06cf811f2b4e61223ad30dae51a214fda7ecc300,"Merge pull request #1875 from toyama-sumio/fix-gif-loopcount-for-4.0

Forward port PR #1813 and #1836 : Fix wrong interpretation of the loop count in an animated GIF"
4131c8b1ee93912ff9fd6425db396c5805e7fcc3,"Fix SvgModule.

-------------
Created by MOE: https://github.com/google/moe

MOE_MIGRATED_REVID=01795c8a09a2a24bcf655986db510fbc1be8e45b

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154081386"
adbf6423fa53a523d8f07c693020bb484b7f18a1,"Remove deprecated centerCropTransform(Context)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154233512"
83544ce5ef328bb692d66096bb910eff31139729,"Remove deprecated optionalTransform(Context, Transformation<Bitmap>)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154325497"
cef7f9c1c71768db52f3576f418af02134c465e1,"Remove deprecated centerCrop(Context) transform

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154363980"
e1f02abebed22e0c5333175125c5bf8505e1f6dc,"Automated g4 rollback of changelist 154363980.

*** Reason for rollback ***

Breaks youtube

*** Original change description ***

Remove deprecated centerCrop(Context) transform

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154369436"
0249b7635ed82027c9d3a261f405d6b36bc46f15,"Remove deprecated optionalCircleCrop(Context)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154833726"
e72fe918a9452b6ba7c03040a87ba6b6e6820a29,"Remove deprecated optionalFitCenter(Context)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154880638"
eceabdc69c56227837ede49d9203a2bce0bb38dc,"Remove deprecated optionalCenterCrop(Context)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154912567"
1138ca6390625b76685eb612bfc2630d7c4f31ea,"Remove deprecated centerCrop(Context)

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154968917"
bf312c9db41df4d869bf19c32b74006317db8677,"Combine RequestOptions and BaseRequestOptions.

Instead of asking users to write their own BaseRequestOptions sublcass, we're now just generating a subclass and asking users to write GlideExtensions that are included in the generated subclass. It's confusing to have an otherwise unused base class and there's not too much overhead in generating a class that overrides a bunch of builder methods.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=154991615"
3761a432c0f58fd77cd9d06314a1c6c17bca35f0,"Add deprecated noTransform method to unbreak apps.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=155031959"
6c776104c0ccdbf9b0b218c9e92a06c0f08a69c4,"Include name in exclusion criteria for RequestOptions methods.

Previously we were excluding only by type and 
parameters, which excluded far more methods than
just those that had been overridden by the 
extension."
51882a842162f8ad2ccb16a1f43c739c7a103324,"Remove group id from annotations.

This causes annotations to be called “annotation.annotaitons”, 
and doesn’t affect compiler at all."
360757e48fdf165bbdb1c7579704f3cb1e71b8eb,"Update README.md (#1912)

* Update README.md

Added a friendly maven central version badge

* Update README.md"
75a28f1b25d04e1659d71e5f73a873e61769b1b7,"Allow removing size callbacks from Targets.

There's a race where a Target can be cleared before a View is laid out. If that happens and the view is laid out later on, we will crash. Removing the callback from the ViewTarget when the Target is cleared resolves that issue.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=155384032"
d950e5ef1bb5ccf152196a4c70edf982e1d68493,"Always generate a RequestOptions subclass.

Doing so fixes a bug where the generated RequestBuilder would otherwise
not include methods from RequestOptions. It’s also probably more consistent to always have the subclass rather than only have it if an extension is defined somewhere."
66ad0d415739bdb87f41133caf36135cbb18acb4,Use Glide’s generated API in all sample apps.
ab534710686611e09527d9743f1ffafee21cdb76,Bump version to 4.0.0-RC0
ca6e8b770a955bbc995b9c759efa645e4838bca5,Update Glide’s readme with v4 instructions.
bd9e265e86137502038a582d5d884961df45b14d,"Add VectorDrawable support for placeholder (#1946)

This allows you to use VectorDrawable with the support lib
( vectorDrawables.useSupportLibrary = true)
for placeholder, error and fallback drawables.

Of course, if the id points to a regular (not vector drawable) resource, the
resource still inflate as usual."
8419b90fd35dc6e842c3cfe290a9b19f758e2904,Set version to 4.0.0-SNAPSHOT
d94e99453734c72a74e393e765f7c56ccdf6d39a,"Broaden exclusion criteria for “as” method in RequestManagerGenerator.

We’re being overly specific. At least for now, there’s only one “as”
method so we can exclude it based on the name alone.

Addresses #1971."
a38271047f58715ff0e177f4519470b20d88a915,"Copy over method annotations to GlideApp’s static overrides.

Work toward #1977"
0d8032547189e97446926db14332b04739b7dc2d,"Fall back to the error drawable if model and fallback are null.

Fixes #1985."
db2e6bbc639704314588bb726296d609c8ded119,"Skip null Fragments returned by support FragmentManager.

Fixes #1991."
3275c2bfc0b78ea77de4d2bd03ee8859d70d0f4e,"Don’t add code checks if no assembleDebug task exists.

The task isn’t present when building the sample apps alone."
b52a23acf62f4fe75cba2e525cc862560af81606,"Raise HttpException in OkHttp integrations for non-200 status codes.

Fixes #1967."
7f24c187dc613bf75fb7d3ddf453c5c08a4a7f67,Proguard - Keep AppGlideModule (#2020)
6e753fc0d0419a85f70112a9f0cb6f3b839a27b3,"Add tracing to some Glide calls.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=157279844"
8dfb63e05b320e07789562d12b4744864d323dba,"Add more detailed logging about formats in BitmapEncoder.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=157282639"
853c68744fb62d95763c1a10d662643106e5d050,"Retry failed Bitmap decodes with a null inBitmap if we can reset the InputStream

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=157882288"
d3855bca759c3cf3829106ff44186d20b7ff80b6,"Avoid removing jobs from queues to ensure cleanup runs.

Right now we’re overly aggressive about removing jobs that may have pending data from queues on executors. Doing so can cause resources to be obtained and never cleaned up. Notably DataFetcher’s cleanup method may never be called. This cl ensures that we always allow the jobs to handle cancellation themselves, giving them the opportunity to ensure cleanup runs before they stop. 

Fixes #1996"
d8e84367bbbad849fe3b14e1de4d5d961afc3e18,"Avoid trying to release a null list in MultiModelLoader.

Fixes #2028"
be4db99940e909202dd91994bf35bff22a6d10b2,"Suppress lint error for VisibleForTesting override in GlideGenerator.

Fixes #1977."
48d1f14400977ad75d80add82336426fb63303d8,Fix context null check.
41cc06c32d3f3ffc71c8ff10a4084d68ef395d0a,"Fixes issue where loading a null image with a placeholder but without a fallback drawable or error drawable would cause the loaded image to be null.

Patched from [] by angelorhoit@."
243c28c836d7729c7f582240d5b732d17d17603f,"Avoid short circuiting when removing requests in RequestTracker

Requests can be in both requests and pendingRequests. If we remove the
request from requests and the request is in pendingRequests, the item is
not removed from pendingRequests. If we attempt to clear the Request a
second time it will be found in pendingRequests and will be recycled a
second time, causing a crash."
1ec2a3ee2d715e5307485705f059c8b029aac9be,Remove unused v4 dependency in recyclerview integration package.
ee8a8eda15cf4961cda152817dfce5350ce59620,"Exclude R inner classes from jar files for android libs.

Progress towards #1972."
bfe14423bffb0890d9b78f9baffc9e604a82afc7,"Don’t disallow javadoc generation in subprojects.

Even though these aren’t used in Glide’s javadoc, they are used in 
creating the javadoc jars uploaded to maven.

Fixes #1972."
7049acebc33b8b7d307c51fe9942730d2e021f52,Update javadoc jars with better links for java/androi.
56746e7999ace9836c85843b63239a558dc4f0b3,"Update the documentation in RequestListener.

RequestListener is called before Targets so that
it has the option of overriding the Target’s 
behavior.

#2054"
42dd24b4492f1af01b628ec4f4b1b9f8f43b3c2b,"Change recycler view dependency to provided in integration library.

Fixes #2053"
0f18190db9d170128a45fa46c0a5f492ae1daac8,"Add javadoc for Transformation to implement equals/hashCode.

Progress towards #2049."
ac65f39ca9503f844396cf6986f4ef14c87ba666,Remove deprecation on GeneratedAppGlideModule.
b60d2e208c0658283c030e3a73aa7f5371165594,Add documentation link to top of readme.
794fec26333e3753398b57e754b1a9244eabb456,Update readme link for docs.
b0d4f421d3ff1ca556833d63ed3e32656b4ec107,"Make GlideRequest non-final for mocking.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159181219"
f058110627968106044e04cf32088e72ef318eec,"Make GlideRequests non-final for mocking.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159181971"
17102eb50277f999ffce4307cfe20b81cb331080,"Remove deprecated bitmapTransform method from Glide

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159505366"
012ed7f7b8d15c9ab7dbc1b9c4d6d4575ecbe49c,"Rename getLifecycle into getGlideLifecycle.

""getLifecycle()"" will be added to fragments from support library in 26*, to avoid name conflicts getLifecycle in requestManagerFragment is renamed.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159630140"
2c23a7b834d62ffb42616d639bbdcda49f989dde,Bump version to 4.0.0 RC1
d4e84d151b7aefee2d43a8ff9d6f9a7d72bffa80,Set version back to 4.0.0-SNAPSHOT
8f22bd9b82349bf748e335b4a31e70c9383fb15a,Update readme to RC1
61d7f0ce9d1a61f8f971131ec44c73e00fbb5c4d,"Remove deprecated noTransform() method

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159695986"
f69a3061c8dd9567c73046110252cbb7cd9907f3,"Remove deprecated centerCrop(Context) method

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159838749"
b26d51fdf57cbaee0eee70b29b0419d7a98d8a3c,"typo *BOOP*

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159845326"
50eb93064abadf42f3914366bb085f25a5d5f136,"Remove deprecated optionalCenterInside(Context) method

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=159894351"
923160112d090c482965aff731c7abfeffc92db5,"Remove more deprecated RequestOptions methods.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=160160785"
811f301fea09ed174068a3b6fc7ee0e07dbdf822,"Add Glide to RegistersComponents interface.
Tested:
    TAP train for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=161135330"
6c56e3831a47f923aeb634d78d5660af2da07bf5,"Avoid setting the Glide singleton when it's half initialized

If we set the singleton before calling registerComponents, other threads
that call get() while registerComponents is being called may receive a
half initialized Glide object. Half initialized Glide objects may be
missing critical components and using them in other threads may break
lots of things.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=161232290"
63f842a3dc37208f3fd7aa01840f1e3beb40ca9f,Fix a couple of errors related to registersComponents refactor.
a61d751574947af5b22c50f0d964abcf10f5fb3c,"Avoid setting the Accept-Encoding header to identify by default.

The Accept-Encoding header was added to ensure that we receive content
length headers in responses. The Performance section of 
HttpUrlConnection’s documentation https://goo.gl/o2jeUM) indicates that
unless Accept-Encoding is set to ‘identity’, the content length of the
response will be cleared. In practice this appears to be incorrect for
all API levels that Glide v4 supports (14+) and content length is
always populated. 

Passing in ‘identity’ as the encoding header is problematic because
it disables the default compression in HttpUrlConnection and some 
servers disregard the header and provide compressed data anyway. There’s
not much point in adding extra complexity to Glide to handle compressed
data if the ‘identity’ header isn’t actually required to get valid
content lengths for images.

Fixes #2132."
0ebc25922faac44d2407ea163fb0b92a4afa6278,Update Fetcher documentation (#2153)
b905c1bd93509931193ba788c08e5a73498e1610,Fix a typo in maven dependency in README.md
b476c2aa03a6028485e6d3e8f90f38b86f86ed13,"Avoid using isLaidOut in ViewTarget.

Fixes #1981."
60cfcc538cc94564785826bf8dd09667b7ea25d2,Fix typos in README.md (#2191)
86e472d436382531fe076854bbadaad37c24bedc,"Use PackageManager#checkPermission to check for network state.

Fixes #2121."
43eb2907e96d180b76c48595836c39c2ce2ab510,Set version to 4.0.0
eb2d54ba034721717075e02677524a1f20ed1adf,Update readme to point to 4.0.0
72d79a1707b0af18df40170fd58345740ea1ee1e,Bump version to 4.1.0-SNAPSHOT.
560116e591f683438333b7691bbf91a7ed2806c2,"Replace uses of deprecated RobolectricPackageManager with ShadowPackageManager.

replace_string \
  'import org.robolectric.res.builder.RobolectricPackageManager;' \
  'import org.robolectric.shadows.ShadowPackageManager;'

replace_string \
  'import static org.robolectric.RuntimeEnvironment.getRobolectricPackageManager;' \
  'import static org.robolectric.Shadows.shadowOf;'

replace_string \
  'RuntimeEnvironment.getRobolectricPackageManager\(\)' \
  'shadowOf(RuntimeEnvironment.application.getPackageManager())'

replace_string 'RobolectricPackageManager' 'ShadowPackageManager'.

... plus fixes for line length and readability.

Compatibility for [] and https://github.com/robolectric/robolectric/pull/3203

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=162373742"
00886e77e3f300b929bf023c3ff4f5442727679b,"Add a shortcut to apply multiple transformations on a single request. (#2138)

See #2086"
7004e5959741ff1194ce9465670850e948016d57,"Annotate getDataClass and getDataSource from DataFetcher as NonNull (#2203)

Returning null from those will trigger obscure crash in MultiClassKey, annotation helps preventing that."
9d10097e7bd298cc5b393364663fa0cf08711e8e,"Avoid starting identical requests.

If a request is already in progress we should only
cancel and restart it if the new request differs
from the in progress request in some way. Prior
to this change, we always cleared and restarted 
requests without checking to see if the request
parameters had changed. 

Progress toward #2194."
6c94c363e962c2671fa2610922215952be9c14ec,"Fix NPE in SingleRequest when Models are null.

Fixes #2212."
23dd41ad9de8726d54feb98585bbba74cc84429f,Fix warnings in RequestOptions and add annotations
6b137c2b1d4b2ab187ea2aa56834dea039daa090,"Automatically register Glide as ComponentCallbacks

Applications will no longer have to manually call
callbacks methods."
88e4fea01ccf2b05e606632e9dc9ecede3f552fe,Remove test logging.
c393ebc725f6f84ae6bf1ee095fa6479acdee116,Fix warnings in Glide.java
3e5527ebc8110c017037592aedc788f1d66f783f,"Add method to set http timeouts in Glide’s default networking library.

Progress toward #2220."
7e1548bb2d6473790b09d72756de12c64841ef50,Remove reference to Glide v3 in readme.
0b99260f2f99b4b3c0ea5f4d7b309bc5a36d8d1c,"Allow users to specify default transition options in GlideBuilder.

Fixes #2182."
06aced3fd95a6339f30a8d611be81fbb2169b0d1,"Always use TransitionDrawable for cross fades.

RecyclerView breaks badly when you run ViewAnimation on its views 
outside of an ItemAnimator. As a result, Glide’s cross fades are broken
when used for loads into ImageViews in RecyclerView. Instead of using
ViewAnimations when no placeholder is set in the cross fade, we can 
instead default to cross fading from a transparent ColorDrawable. Using
the ColorDrawable avoids the issues with ViewAnimations in RecyclerView
and provides a similar looking effect."
8fac1236423cec5f46bff2d904a0803070a14c4b,"Fix error mapping files over Integer.MAX_VALUE in length.

Fixes #2240."
31a911e1fd15d4133bc7ee0fde4083894c982649,"Contact lookup by phone number added. (#2233)

* Added phone lookup for local URIs and updated sample to use it. Improved license handling in sample

* Checkstyle fixes

Fixing issues reported by checkstyle on travis

* Code formatting

Updated formatting after code review. Removed line of code that was commented-out. Added comment for permission request."
81b179b98e5a83c8062cde19cf9d1d8ba5dd4bc0,Fix indentation in contacturi MainActivity.
cac71928447b964fc1d9aac300e5ffcb503496b6,"Avoid concurrent modifications when notifying ViewTarget callbacks.

Fixes #2237."
1594655d9c256e52f7ac829bba5fafb926d001c0,"Rewind ByteBuffers in ByteBufferUtil.toFile.

This avoids writing partial data if the buffer is not at position 0 when the method is called. This fixes a bug where using DiskCacheStrategy.ALL
or DiskCacheStrategy.RESOURCE with GifDrawables would result in partial
and invalid gif files being written to Glide’s disk cache."
49142cf1d9cd81bf2347e8dc9c7350a43447b114,Use generated API in giphy sample.
cea1cce41649602e4d3d3490303ea132c75f0332,Target API 26.
73a8e0116a7826b631775f42f9a04aad374f3bb8,"Restart any non-running identical requests instead of ignoring them. (#2261)

Running requests are left to complete to avoid cancelling and restarting
expensive operations (network or I/O). Completed requests are asked to
begin again, but short cut the normal request pipeline and redeliver the previously loaded resource to ensure that Targets and RequestListeners 
are notified as expected. Failed, cancelled, paused etc requests (all 
other states) are simply restarted."
9d7b8d9757b0f296d280af4ae8c96b311b15855e,"Avoid double logging GlideException errors.

Fixes #2266."
7069a74f194657860359b709d635f7cde3b852dd,"Note moe equivalence.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=164752684"
a2a695f11e0a486337c8d0010a997ad536f6a565,"allow subclasses to read cache entry count.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165002367"
71bfc6b65fde499df533fc26ef4c9202f92ec965,"Fix a missing synchronized block in LruCache.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165650311"
6d48bd5baa9ff649a9e1c8afdaa25dbb7faddad2,"Pass Builder directly into constructor of MemorySizeCalculator.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165653043"
d83de421024882311c0aa4d835c8fce6a0550f8a,"Support HARDWARE Bitmaps in Android O+ in Glide.

From adb shell dumpsys meminfo com.google.android.apps.photos on a 2016
Pixel on OPM1.170816.001:

Before:
App Summary
                       Pss(KB)
                        ------
           Java Heap:    20360
         Native Heap:    66032
                Code:    93336
               Stack:     1192
            Graphics:    85892
       Private Other:     8956
              System:    19944

               TOTAL:   295712       TOTAL SWAP PSS:       82

After:
App Summary
                       Pss(KB)
                        ------
           Java Heap:    20456
         Native Heap:    39756
                Code:    93384
               Stack:     1220
            Graphics:    81460
       Private Other:     9024
              System:    11662

               TOTAL:   256962       TOTAL SWAP PSS:       81

These numbers aren't super solid. Some extra invalidations can dump more
Bitmaps into our Bitmap pool which will make it look like the steady
state memory usage is increasing even though the maximum amount remains
the same. That said, I see between a 33% and 50% improvement in native
heap usage after this change. This was tested by flinging back and forth
in the All grid in Photos.

This change is limited to HARDWARE Bitmap support. We ought to also be
able to reduce the bitmap pool size in O+ now that we only care about
re-using Bitmaps for very small images or while generating thumbnails
for the first time.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165717498"
bb5c391a8b418f8ac2296d4d2c2ca24110e83984,"Cut the default BitmapPool size down to 1 for O+ and 0 for O+ with isLowRam.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165717599"
32313e35ba60cace07d0c80122ce1e47ace11e75,Fix lint/PMD warnings.
6d166ad38d3ea796ce5d673bf1ff69c47a4f56ea,"Add javadocs for Registry.

Work toward #2193."
67a40a5daed6cd6e593fe958d85a67c39fea9891,"Set defaultRequestOptions to the return value of apply in GlideBuilder.

apply may return new object if autoClone() is enabled on a 
RequestOptions object that is passed into the builder via setDefaultRequestOptions."
0310656a6686ea1988c10dad3a9b14d24c4356da,update gradle to 4.1 (#2286)
b1e0cbda18e06eeaef0680c088ba8cd03ff9c9be,Fix Android lint errors in samples.
30c59048d27638ae83bb5e2b927b0946fac87e5c,"Automated g4 rollback of changelist 165717498.

*** Reason for rollback ***

b/64845448

*** Original change description ***

Support HARDWARE Bitmaps in Android O+ in Glide.

From adb shell dumpsys meminfo com.google.android.apps.photos on a 2016
Pixel on OPM1.170816.001:

Before:
App Summary
                       Pss(KB)
                        ------
           Java Heap:    20360
         Native Heap:    66032
                Code:    93336
               Stack:     1192
            Graphics:    85892
       Private Other:     8956
              System:    19944

               TOTAL:   295712       TOTAL SWAP PSS...

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165772656"
2214e929f94e8263dd2f3bf70024b846c3ad795d,"Rollforward [] with a way to disable hardware bitmaps.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165778077"
669aceef6eb1702c18f25e41397bc046adf122e9,"Always use ARGB_8888 if PREFER_ARGB_8888_DISALLOW_HARDWARE is set

Previously we'd use RGB_565 in a couple of cases.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165976352"
0312208087f164cb52a212731b7f378bcb689e73,"Default to ARGB_8888_DISALLOW_HARDWARE.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=165989169"
d717e83ea8a64cff268cae302acb35889ee73ab3,"Use the return value of apply when updating RequestManagers' options.

If the RequestOptions object has auto clone enabled, apply() will leave the original object unmodified and return a new mutated copy. Right now RequestManage is ignoring the new mutated copy and retaining the old unmodified object which causes Glide to ignore the applied options.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=166084541"
0b56d092a04b40cbe3306d5f87b38ee8e38418e0,"Choose whether or not to use HARDWARE bitmaps based on transformations in Glide.

Previously we were checking only against the requested and actual size
of the image as a heuristic to see if we thought a transformation would
be applied. That doesn't work well for certain types of transformations
that don't necessarily change the size of the image but do change its
shape (rounded corners, circle crop etc).

Now we're explicitly checking to see if a transformation will be applied
to the load and I've removed the heuristic. This should catch cases like
CircleCrop and also allow us to use hardware bitmaps when doing scaling
entirely within Downsampler.

In addition, we're now not applying transformations to Bitmaps for scale
only transformations that can be done with DownsampleStrategies alone.
This is a change in behavior, but since the Transformations were no-ops
previously, it should be low risk.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=166253525"
06ce0136fa184303493eac1ddae5a0ac639fec1e,"Automated g4 rollback of changelist 166253525.

*** Reason for rollback ***

b/64987553

*** Original change description ***

Choose whether or not to use HARDWARE bitmaps based on transformations in Glide.

Previously we were checking only against the requested and actual size
of the image as a heuristic to see if we thought a transformation would
be applied. That doesn't work well for certain types of transformations
that don't necessarily change the size of the image but do change its
shape (rounded corners, circle crop etc).

Now we're explicitly checking to see if a transformation will be applied
to the load and I...

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=166268954"
f58e2daf4fc18215345f044fa45f9ee5a76bcd42,"Rollforward [] with a bit to track scale vs non-scale transformations.

This allows us to apply scale transformations if we decode from a video but
still use the hardware config if we decode from an image. Unfortunately it
won't work for custom transformations that only scale. We'd probably have to
extend the Transformation API to let transformations indicate that they only
scale and I'm not sure that that's common enough to be useful.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=166406311"
d836ac2049074a0dd2fc71953f804c7021dabd63,"Avoid hardware bitmaps when rotation is required.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=166499393"
48754e616b85e2324117188c90307bb5fa708b70,Fix lint/pmd/findbugs errors.
b39a9dbfd6d45782380d8d8c8e4db0863db5f32b,"Call clone() before calling extension methods if auto clone is enabled.

Otherwise when our extension methods mutate the RequestOptions we pass 
them, the mutations create a new RequestOptions object that’s dropped
at the end of the extension method, which causes any options applied in
the extension method to be ignored. Cloning first matches the behavior
of other RequestOptions methods and ensures that the RequestOptions 
object passed into the extension method is mutable."
9e9ce00e08cdfa6fcfc2c9008bb5659c2e1bb1c2,Move short circuit comment in Downsampler closer to the check it references.
0a44cf60135e67e64bc4027ebe70f9acac6f7962,Ensure that restarted request use the updated model when failed/canceled as it can contains data to help the request to succeed. (#2293)
0241df55757df3eace3c8c7a0b12dc83246620ba,"Add a disallowHardwareConfig method to RequestOptions.

It's easier to just call a method than it is to set a component specific
option and it looks like disabling hardware configs is going to be
relatively common.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=167035799"
c8f04ca3eb6aeb3746b14bde7e6c1f3c539bfe38,Bump version to 4.1.0.
6b4859bf3e5f862758785fdaed6e3f1ab3a8d27b,Bump version to 4.2.0-SNAPSHOT.
a786126a5afb1438b36386086a51e2df64a0a0e5,Fix minSdkVersion in readme (fixes #2134) (#2323)
1325d87d37693214c0cde86f5de0380c396772b0,"Exclude all inner classes of R from upload jars.

Fixes #2322."
789161a6ce07289885ef9daa4a4626e83c1b2480,"Use provided for support-fragment in libs and compile in sample apps.

Fixes #2318."
f5d5403ffbe54e9a8190be1a16654494462e5457,Bump version to 4.1.1.
fe5289d23c39fc6a4d48b092ad3fc71f84cc81f9,Flip incorrect comparator operator in BITMAP_POOL_TARGET_SCREENS (#2334)
8b86b17d115edd49141309b1cd3a7c7edeb19a8e,Update README version to 4.1.1.
35c28c28ca2a030e90df5aac67b0356c769cd623,Set version to 4.2.0-SNAPSHOT.
3bf2d36175cce7f11bc579c94e99dde113b85144,"Add the Google's maven repo to get the support-annotations library (#2351)

If not, Gradle doesn't succeed. And that doesn't help copypasting (the common way to get Glide :·)

Progress toward #2347"
8cbfc631e807f974c76e61023da127a197f1fb8e,"Remove unnecessary support lib/jcenter reference.

Progress towards #2347."
7f625977e740e0278224a96e6b962c2afd286b38,"Close HttpUrlConnections when following redirects in HttpUrlFetcher.

Progress towards #2352."
73a8054f2bc4833598426ba5b09c243b21f752f3,"Always set stream when connecting HttpUrlConnection

That way we will always close the stream in cleanup(). Prior to this change, when cancel was called, stream was never set to non-null and therefore never closed in cleanup. Because disconnecting the stream doesn’t seem to close the contained ResponseBody object, failing to obtain and then close the stream results in leaked objects.

Progress towards #2352"
03f5bd4098489d3c76644ebc014f81bab371dd54,"Override default Encoders (#2349)

* Add prepend methods for EncoderRegistry and ResourceEncoderRegistry classes"
01f5a3d3dc0e78cc83b9e390b331a65dd5c1a9f3,"Key off of the safe key in writeLock in DiskLruCacheWrapper.

The Key we’re given may have a different implementation for equals and hashCode than it does for updateDiskCacheKey. As a result, two different
Key objects that are not equal to each other may produce the same
disk cache key. To avoid simultaneous puts for the same disk cache key
we need to lock on the disk cache key, not the original key object."
8a149b939a5f85918aafe9a32e9d1bb7d545b0a6,Add append methods for encoders and deprecate the register equivalents.
8a1dbe71e705489e5bfeb6a02805553cbc6b9965,Fix code format and typo in TransformationUtils (#2359)
3cd06858313ebe28b4a14384fd087eddcece68ab,"Sanitize default user agents.

Fixes #2331."
a365dab26ef34a72008ff94acbb04624bd6f3c9e,Default to searching for kittens in flickr sample.
d482b8ed2b4551a35ba5edca16bc439f6242abf7,"Clean up DataFetchers even if DecodeJobs are cancelled prior to run().

Previously some of the logic in run() might null out the data fetcher
instance variable, even if it had been set when run() was first called.
As a result, the data fetcher would not be cleared. Now the initial 
data fetcher is held on to as a local variable so the instance variable
can be freed without affecting the behavior of cleanup().

Progress towards #1996, #2352"
a4af922db56c928a56bcb8bfc7651e32fe10fd10,"Use execute instead of async enqueue OkHttp API on O.

Works around a ClassCastException in OkHttp on O due to a framework bug.

Fixes #2355"
f033e9b45192a8a9521eca8160edbea2bb741f63,"Return true from isDone in RequestFutureTarget if load has failed.

Fixes #1063."
b85fccdff4b60cf2322247e3de7c3cc4501407e8,"Bump OkHttp to v3.9.0.

In addition to v3.0.1 being super old, it looks like earlier version(s)
of OkHttp have a race that will leak resources when requests are
enqueued instead of executed and cancel is called.

Progress towards #1996."
648c58e4214d9c2e2605e9b6203159a0655ad067,Allow more lenient sizes in ViewTarget even if layout is requested.
b667cab8d3e384ab6f127aef83eafe631d210fd0,"Implement a new optional model interface Model. (#2353)

This allows models to handle equity for internal states that can be different from the target image result that is handled with equals()/hashCode()
For example to allow restart of image download from a new source but still using the same cache in Glide."
b01ac7be7299e47353eea8c2da47c2c7976201a6,Fix an incorrect link in RequestOptions.diskCacheStrategyOf.
3650c4ef8bffb8c36d4eab4e3021ab170ef33f0f,Add runtime permission support to gallery sample.
a41cc9b9e554bad8929713679d93e3f0f4b18640,Add a timing log to Downsample for when decodes complete.
f5ba3740fc7d4ad4918a88d84ab55921173543bf,"Use accurate rounding in FitCenter when checking to see if we can skip

floor is necessary to make sure that we populate all pixels in the
Bitmap, but it's not necessary to use to check if our input Bitmap has
already been transformed and can be returned as is. Using floor can
cause us to re-draw a Bitmap unnecessarily.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=167789795"
b1b024ebced1e6aef74062cfd04f67d1ca4aa8f5,"Improve rounding in Downsampler and add emulator test.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=168236016"
a0c5af1af736a06bdeee78f13de9bd7a072dc3b5,"Fix failing to find non-support Fragments using get(View).

Also fixes an issue where if we failed to find a support Fragment in
a FragmentActivity, we’d never check for a non-support Fragment in the
same Activity.

Fixes #2370."
56368d03f3c1688ca853794cbc26dc413f80d4e2,"Avoid varargs warnings using @SafeVarags in generated code.

The annotation can only be added to final methods, so we have to use
@SuppessWarnings for RequestOptions instead. As a result callers of
transforms() will have to suppress the warning on their end as well.

Fixes #2383."
b2fb2297dcd64398a9415677b6d566648d52a7a1,Fix and suppress a variety of deprecation warnings.
501455c53ae5a522a7f90a8f6c31aef0bc565572,"Explicitly add Cloneable interface to GlideOptions and GlideRequests.

It seems like this shouldn’t be necessary, but it fixes a PMD warning.

Fixes #2394."
4239a45e3ca784c228b93407e761ea2a446fcb59,Remove an unnecessary DiskCacheStrategy call in FlickrPhotoGrid.
c3479c43461404de36c0fd07a5f324573443e193,"Make ListPreloader more tolerant of null values from its interfaces.

Progress towards #2379."
d56e08cc020269360452c7caabc35565723986f8,"Allow modifying RequestBuilders after calling into().

Fixes an issue where setting options on the generated GlideRequest after
having used it to load one image would throw an exception because the
internal RequestOptions object was locked when the first load was 
started. Now we apply autoClone() to make sure that the options object
for the first load isn’t modified by subsequent changes to options, but
also allowing those changes to occur."
d67ce32fcdac66a219eb03838a8d75ffd890cd28,"Use Math.random() instead of UUID to create GIF frame signatures.

Fixes #1510."
853c0d94f1ad353048b3d2556b49729ef3534430,"Add compile API version to README.

Progress towards #2354"
ec9f7a32511f256cb1806e6cad0219faa5aa6be0,Include recycler view integration library in javadocs.
a0e388e234919cb4c94ea391811b5314ac5a9654,"Repackage annotation compiler dependencies to prevent conflicts

Fixes #2059"
c2eeb90b70245fe2559428f88411d86cc053c240,Update annotation compiler deps to avoid unnecessary pom dependencies.
a84deb3f6a0bff59b967cf1f2eb8d8c80d805ac2,"Avoid calling setDataSource twice for videos

It's pretty expensive to do, so we're wasting time for videos. If
setDataSource is called with a non-video, it will throw an exception
which in turn will cause us to move on to the next decoder, so the
behavior shouldn't change.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=168390557"
da90633b91e817603bb25589b6589654926caea7,"Group resource decoders into buckets, where the user can specify a bucket ordering so that prepending and appended is localized to the bucket.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=168779283"
2c2d2e0fc8e4190da1519594dbb1e668917836df,Fix external build/PMD errors.
ee557b62a6aed1b365a21e33acbe2e9c0e0580c4,Add link to Simplified Chinese Doc. (#2405)
7a6adec91d3644cdeeb44b0fff8828b279dc7cb8,Allow GlideRequest to be non-final for mocking.
8058e17d9a631f88fd5327934032afcbdc5282e5,"Make jar task in annotation/compiler depend on repackaged jar.

Fixes #2407"
6cffaabcf7e67f59801cc4238a38ec1a88720767,"Handle unexpected RuntimeExceptions in DecodePath.

Some decoders will throw randomly, that doesn’t mean that we can’t 
continue on to try other decoders. 

Fixes #2406."
2e59ecf29d585788af0c7a8fcc1ee3b8d3e6fa7b,"Fix ignoring View scale types in RequestBuilder.

clone() always returns a new object, which wasn’t being used in
this case."
a1ae214c0236c35034e6f88185d96490b4eeac32,Use the thumb builder’s RequestOptions when building the thumb request.
cc75a9ce1f7d0fa8302fd5ee81ffd4ecb254bba8,Fix some whitespace to match internal code base.
38d0d782ff25a0cab07a0c995921b80997175bf8,Add @CheckResult annotations to RequestOptions and subclasses/extensions
7a8ac09c670096ff27f0c866757f8131b0d4fa5f,Add an Imgur card sample app.
615510d263dfffc8e31382a89514c69be4c5f3f6,Remove reference to deprecated Volley host.
b4a8fb7a0a7a4465feb1110799402c9ec2a2a416,Build on travis with -—parallel.
0afc0e6a6973ed1432806de6ea51178d97805f1c,Remove deprecated MenuItemCompat from FlickrSearchActivity.
134870e51e362f1648a607348ebb7cb9c51d0a8a,"Pass Options into ResourceTranscoders.

Fixes #2417."
1b4a99a7e442cfb88f5b902d87cc4c988a310c42,Use the correct preload request in FlickrPhotoGrid.
6fb87b357803b1ca5b34ac046ac01e0fdb88ab16,"Assert that into() and clear() are not called in callbacks.

Fixes #2413."
a1cd3afcc41da72885f4da385b53d71601d0d407,issue #2403: create a UncaughtThrowableStrategy API (#2411)
7457b9d82d2596c8f6be38e66cc7978d06568627,"Use Dagger 2.11 in imgur sample (#2425)

* Remove unneeded excludes from imgur sample
jsr305 is repackaged, so there won't be a conflict on annotationProcessor classpath

* Increment Dagger version to 2.11
There are breaking API changes (renames) and use the new API to reduce custom code.

* Further simplify injection by using the Dagger library components"
f9757a5a51c253d4732cea657e968f9918fbed64,"Avoid using hardware Bitmaps if we're unable to determine the source dimensions

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=169726622"
4b5ccaa84ad6f7d1e3ab63e6c678ab2d857aaf5d,"Fix downsampling for jpegs when sample size is > 8.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=169730418"
9866f058c9266828586ab20ed19537d13559b393,"Increase Glide's mark limit to 10mb to account for large headers in VR files.

May or may not be related to b/65655184. It could cause us to decode very large images.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=169734472"
2d5bf5304b81562ce012267c3c7ee573e286f305,"Largely revert back to v3 ViewTarget size handling.

See #2431 for details on what this does and why. This will introduce
some behavior changes, especially if you’re not using fixed dimensions
in your layout parameters."
7d6a4f1513f5db14bf7b816be8efd31f121cbbb3,"Wait for any pending layout passes before using wrap_content fallback.

In some cases wrap_content may be used as a default layout parameter,
so we should at least wait for any pending layout passes before using
it.

Progress towards #2431."
cbc70016361a5e79845a47bba5fc266bfb49acdc,"Add the waitForLayout parameter to ViewTarget subclasses.

Progress towards #2431."
8ddeff2e556b4e98026dd47d2c240e9ad0cb70d2,"Ignore waitForLayout if we have fixed layout parameters.

Progress towards #2431."
e88c449690c35c51f6cd243850aab8561989871f,Ignore non-support Fragments if they’re attached to FragmentActivity.
818f591e6243b9890c46000f0d7f365971ab6259,"Fix the loading Drawable in SVG sample.

Fixes #2434."
d51b5772ba2e8dcfe44814f2400ac051cb78431d,Fix error message (#2439)
ae2b0e3393b89311ad46b254d08436f573daca4c,"Update proguard rules (#2447)

That was wrong class name"
8a90f542145f82f51fb8b7718f2a5c3fd9ce1bb9,"Use DownsampleStrategy.DEFAULT as the default strategy Option.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=170742776"
45013968bf451ac3219febd6f0794321916e62c0,"Do not use MediaStore thumbnail when size is SIZE_ORIGINAL.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=170774550"
6bbe88ec79f73f1f5cc4f6af04a733ea854e2def,Set version to 4.2.0.
ed7b3a3edfa0abf2b9c82bdfbbfe4902a72d9a0c,Set version to 4.3.0-SNAPSHOT.
9018ae6ae935a28a86452bb93c49e8bdcebb3ff5,Set version to 4.2.0 in README.
d96a1e7855aacf453d401f42f9e7d2563e369606,"Build improvements (#2426)

* Update Gradle version to latest

* Fix typo in dependency name (Gradle was resolving support-annotations:{26})

* Bump Android Gradle Plugin version to latest stable

* Remove deprecation warning during compile.
(@SuppressWarnings(""deprecation"") has no effect on imports)

* Force LF as the line separator to make sure checkstyle is runnable on Windows

* Constrain deprecation of GlideModule to a single method (suppresses javac warning)

* Make sure compiledJar's output is unique.
archivePath was the same as jar's archivePath, which triggered a rebuild and re-proguard every time, even on incremental builds.

* Move quality tool initializations near the tasks
Extract version constant for PMD

* Minor gradle improvements: warnings, Java compatiblity

* Extract test JVM memory size to gradle.properties

* Enable auto-completion in IDEA by using tasks.create instead of task shorthand

* Reduce amount of hard-coded paths

* Reduce amount of missing files when running findbugs

* Add missing test for setMemoryCategory return value

* Simplify JavaDoc classpath calculation

* Change JavaDoc {@link}s to {@code} as they're not linkable.
This reduces the noise during build.

* Fix invalid missing references in JavaDoc.
The equals/hashCode method doesn't exist in the classes, so need to reference the super-class.

* Fix checkstyle, javadoc alignment, typo and codify class-name-like concepts."
56a427573bae591696d6986da4209757c36db9a3,Add ExternalCache that falls back to InternalCache if not available.
739cb35b637e8d4dd277d1133dbaeb2e2dc7d4ad,Add @CheckResult to intermediate builder methods
28e461ec168e24b09c26e53071c374186ab10f30,Add @CheckResult to RequestManager methods.
1e2fb234a8ba0f0089b2dbe9b93fc321dd9b5f10,"Update the list of moto X gen 2 models that require locks around Canvas.

More progress towards #738.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=170938515"
9ec8991305f23bc732370e01fd010b2c4f568f82,"Ignore fixBitmapToRequestedDimensions if we're unable to determine source dimens.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=171204273"
a13685276495701de0ec5a3c32f5583d9f472ec0,Fix a lint error in DefaultConnectivityMonitor.
b06b0cc2bd79e10a77155466da8a83459edf371b,"Add API to start a new Request when a load fails.

We’re going with .error() to match the behavior of the .error Drawable
and resource id methods. fallback() is a somewhat better name, but we
unfortunately already use it to handle cases where models are null and
expected to be null.

Fixes #451."
d13e97b1cf3dfa35c0602cd31c440f36ddd9503a,Remove a useless inheritDoc comment.
7614e100c001222075a864275d1cbc28a9589023,"Add support for decoding non-Bitmap drawables using Resources.

As a fallback for drawables that we either can’t obtain an InputStream
for or can’t decode as Bitmaps, Glide will now also call 
Resources#getDrawable with the given resource id. 

Fixes #350."
7c09fc197c3c63aa57b0f9e797a10ee9accd7bf1,"Avoid including default source sets in repackaged compiler jar.

Unless you override the jar task completely, any files you specified are
added to the original files, not replaced. To make matters worse, gradle
does not fail jar tasks when duplicate classes are added by default.

We’ve fixed the immediate issue with compiler’s jar file by excluding classes that do not originate from our repackaged/proguarded jar to 
avoid duplicate class files.We’ve hopefully also prevented future occurrences by forcing all jar tasks in the project to fail by default 
if duplicate classes are added.

Fixes #2452."
a69d86bfd574fc7e1c84683961c052dc95c4e001,Add a warning about non-Bitmap resource types in RequestBuilder.load.
115ee22cafbaea25cf6ec0ad41e2eafd4899c485,Add more validating annotations to RequestOptions.
edd08c03dd33ecf0e08bfc1915c509294deb8edf,Include annotations in parameters for generated API classes.
0f1d9fce409f0c61a0088cddbc62057b971ed5ae,Handle varargs in extension methods.
da76c8e35bd2342b9a82e11026aa6276d3bbb0cc,Override methods that return RequestManager in generated API.
762fd379a100ebcf7b3bb784358327336f7dd07f,Remove unused block for stripping v4 from Glide’s POM.
c7383b2e9fd16d642207ad20b1028b17a06bd06c,"Fix integer overflow bug in Downsampler when asked to upscale images.

This should also be a slight accuracy improvement since we're now using
a somewhat more efficient density multiplier in some cases, especially
when downsampling.

Fixes #2459.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=171601510"
bc1b25ef058c03e70f9749e56a62d0371c9accb6,"Support multiple, ordered, nullable thumbnail requests.

I've basically just added a helper method that calls thumbnail()
recursively for you. It seems like it eliminates some of the especially
confusing nested thumbnail logic.

Unfortunately it requires @SuppressWarnings(""unchecked"") whever it's
used because it uses varags with a parameterized type (RequestBuilder).
I can't currently use @SafeVarargs because that requires a final method.
I can't make the method final without preventing mocking in tests
(minor) and breaking the generated API (major). By splitting out a
separate base class for RequestBuilder I actually probably can fix this
in the future, but that's a pretty substantial change that I don't want
to make right now.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=171694145"
f2f9081c7878527a20a1c2f5e4a309d6c4d838e9,Remove unused constant in Downsampler.
cd8e49c155f9ca4699ba8df66daff29067233ee3,"Add @RawRes to load(Integer) in RequestBuilder.

It’s perfectly possible to load a valid image or video frame from raw resources as well as drawables resources."
9f4b79013986095f5be17c853fa2e2a7e30be723,"Remove IntRange from override() methods.

It warns when we use Target.SIZE_ORIGINAL which is currently a negative
value."
6cd8289d5a85dadf0a541124ced17e90aa312542,"Fix a couple of import code style nits.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=171739060"
c4db04ed1998b7252ca4621321bcf8664be42a03,"Add an animation executor to decode GIF frames on.

Our normal source executor is often used to load data from networks. Glide’s default networking library runs all networking operations on Glide’s source executor. OkHttp runs the initial connection on its own
thread pool, but we still read and write the body of each request to our ache on Glide’s source executor. Even libraries like Volley that buffer
the entire request into memory will still require a few hundred milliseconds of Glide’s source executor’s time to write the request to 
cache.

Scrolling through a list of images will enqueue a large number of requests. If each request is relatively time consuming, it’s likely that
all of Glide’s source executor threads will end up blocked for 
significant periods of time, even if the longer requests are lower priority. Using a different executor for GIF frames and other animations
lets us avoid junk during playback. 

Unfortunately there is a CPU and memory hit to using an additional executor. I’ve tried to limit that here by using only one or two threads
and a cached thread pool so that few threads are created and are only
created when an animation is actually run.

Fixes #899"
0b5d1bc127d5188fa2744848c4c4815166501dcc,"Obtain the correct size Bitmap in TransformationUtils.roundedCorners.

Previously we were obtaining the requested image size. The requested
image size is ignored in roundedCorners because the transformation 
doesn’t scale. As a result we were weirdly stretching the image with
some combinations of image and requested dimensions.

Fixes #2472."
890454a3b8ad84e5077911931bf10483b0ee85fc,"Remove inaccurate Precondition in DecodeJob.

Fixes #2462."
95caa05ab2e202112a4b6a98e03501bab1cefa2a,"Check for presence but not equality of RequestListener in isEquivalentTo

More progress toward #2270."
a9ab473ad2dd2f789e7ebf5c21b5f8789a88c016,Fix incorrect comments in SingleRequestTest.
6f91031a7e7b3852a58f3271091913655aa0f7ea,"Default GIF frames to ARGB_8888 and configure them via DecodeFormat.

Fixes #2396."
70f11dc2cdb022ea959068ff61a7e05ae793727e,Fixed a small typo. (#2489)
d38ffe98d9194c02eb3cf114c48d043ae7337aae,Remove redundant call in RequestOptions#dontAnimate.
2cc1789d6ac7e13760b9c33b13ed391cba4eab02,Fix an order of operations bug in SingleRequest.
0b020de3a5e053255a8922201f7873f0f3f8660a,"Use consistent Strings in GifOptions.

These are only used as memory cache options, so we
can safely change the keys without invalidating
disk cache values."
47110664daf895d1e398114ffeb5af2216d973f2,isAnimation -> useAnimationPool.
702386e329895914ab41f804546497ea27cc2b38,"Prefer useUnlimitedSourceExecutor over useAnimationExecutor.

useAnimationExecutor can lead to deadlock in scenarios where useUnlimitedSourceExecutor is required. As a result, it’s safer to 
always prefer useUnlimitedSourceExecutor."
bbb25aff0e44e23fe437c24e55278fe1f12061cb,"Pass a non-application Context into Glide’s Requests.

We can use the default themes from Activities and/or Context wrappers
to obtain placeholder Drawables, which can be more efficient than
forcing callers to call getDrawable when building their request and more
powerful/neater than having callers pass in a Theme.

This change does NOT pass through the Context or Themes to the decoder
that loads non-Bitmap drawables on a background thread to avoid memory
leaks.

Fixes #1267."
0b3e84bb91a5216541a89aa98e0ef6fa6db4e4c6,Convert SingleRequestTest Harness to a SingleRequestBuilder.
69700c4c2cc6b5b44877b403ed6540014df7af4a,Use EquivalenceTester in SingleRequestTest.
a0628b8e19c11c88da31999d08ab22ac0567cee7,"Handle loading application icons and resources outside our package.

This also adds support for an additional Uri format that uses an integer
resource id in the path instead of a type and a name."
374b9efb3be0ab8406ae5d6855411a9675d68985,Add an emulator test for various types of Drawable resources.
f77a02c6db411b549ac2f05e1fa36fafef198eb8,Update gradle to 4.2.1
cbe9f4225def8c790f7ad9deaab01355cc9a89f7,"Make ByteBufferUtil::fromFile fail if file cannot be mmap'd.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=172750122"
efa61f0d82519f5f40571fbc69f9bb81568e10b1,Run application icon test against all installed applications with icons.
8ffe0538e17a96de88892fdfcdcd47a00654fb23,"Run emulator tests on travis.

Also parallelizes the build a bit so that samples, the library, and the
emulator tests are built and run independently."
5fd2aaf943eb735f95cd5404cd567ea2e4f5fefa,"Sync out Google emulator tests.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=172791960"
91f2e94484230aa262dcce39532e26c62d3ad7e0,"Get Emulator tests compiling in a cross build system way.

Google’s internal build system doesn’t exactly match gradle/android studio’s behavior. The biggest compromise seems to be resource ids, which aren’t available (or at least I haven’t figured out how to get them) internally."
29992732cce5e3f2979f80adab9defd35b71c3f6,Run API 16 emulator as well as API 22.
cb1276d53eea4cf1b69c65cf807e84a51e0db79d,Only install emulators if they’re used by the build matrix.
65048a4a241b2acc03d2e3586d6e1eec37cb9f5a,"Pass through exception messages to RequestFutureTarget.

We may want to more generically handle multiple RequestListeners in the
future, but for now we can at least avoid swallowing exceptions in 
RequestFutureTarget without allocating new Lists every time a RequestListener is added."
39b55231fab40c40fdc6190ace4af930ecfb3ceb,"Create an instrumentation subpackage for Glide emulator tests.

Android's testing frameworks seem happier if there's a binary
to test against. Without the binary running tests on Firebase
is impossible at the moment. There's also some strange
behavior with regards to resource ids of Drawables that are
included in the test apk but not the binary apk.

Creating a dummy app resolves most of these issues and
seems straight forward to maintain moving forward."
706a681ea084be99a4221338fd0211704469e151,Add scripts to queue firebase emulators in travis instrumentation test.
fc4a45607dbea111295881eb98f309f7f708ad31,Add a decoder that can retrieve Bitmaps from most types of Drawables.
90f1cc93916e4b6ff2faaf666b9b0e5cac799fab,"Add a DrawableTransformation that runs wrapped BitmapTransformations.

The transformation uses the same logic used by the ResourceBitmapDecoder
to try to convert non-Bitmap Drawables to BitmapDrawables. Exceptions 
are thrown that will cause the load to fail if the conversion can’t happen. The primary benefit of this approach is that transformations
work similarly for the non-Bitmap Drawables that we’re now decoding. 
Unfortunately this isn’t a super efficient process, so hopefully it’s
rare."
f7a939ec131114e1da87f3e6f7c4fbfbea4d173a,Avoid some unnecessary object allocations initializing Glide.
7663c214e44964529173ca48e0faf3e588f5a386,Add support for passing through Bitmaps and Drawables.
7da399f3b9b2b6860a70ca40f158decf54e6c5e2,"Avoid recycle Drawables/Bitmaps passed in or loaded from Resources.

Both Android’s Resources class and AppCompat class will cache content
they decode. If they happen to decode a Bitmap or a BitmapDrawable,
it’s not safe for Glide to recycle or re-use the Bitmap or 
BitmapDrawable because the cached entry may eventually be returned 
again. To avoid this case, we now simply avoid recycling Bitmaps and
Drawables we don’t decode directly."
e6e2aef946b9a1ab5355d1a29b81a38f3994f407,"crash because of wrong executor being created (#2508)

Glide v4.2.x crashes because of wrong executor when using a custom UncaughtExceptionPolicy."
b41308ed4145e334d4752174bf8cc6b256a416d6,"Handle non-recyclable Bitmaps in Drawable converter.

Avoids errors where we forget to check if the Bitmap is recyclable 
in callers."
033ddf7cad7632afff47511ddad7ac9bd8146382,Fix an incorrectly documented parameter in RequestBuilder.
7124996781f78e11b9070653f05b9d8c4fdc55ac,"Don’t run Firebase tests on pull requests.

See https://goo.gl/yCdtpF for details."
8570831cf4f3388319c0243e15879aafa2635582,Run Firebase emulator tests on more versions of Android.
91682c90ca064b03a12c4618c652920dbc5305e7,Add more travis emulator tests.
dd5f0f1944a20c436d3e600cdaee6059791ebb5e,Run Firebase robot tests on Glide’s sample apps.
d447e582397cc7cf3f95a9871eb18d81a917544f,MOE automated commit.
74fcad1340da13ac302994873e076731ab96b8e6,Avoid blocking Futures forever on unexpected load failures.
d57b90b77e7528e72f2ebae173fe8d98562a5fe6,"Add a system for emulator based regression testing.

The tests can both generate canonical output specific to one
or more Android SDKs and compare the current output to previously
generated images to detect regressions.

Ideally we can add top level tests for most Glide functionality
using these tests to detect regression across the library without
a ton of overhead either when new tests are added or when
functionality is intentionally."
e799e08f7bf6d3d3fc277862a08cc9f020e35f81,Add an explicit 2m timeout to Firebase sample tests.
f8bd27cec5dfd9d308219f2d97ef3f1a8abc6419,Run emulator tests on all available Android versions on Firebase.
01a3d211cc828cc48f3ebccc151042dc3a338c62,"Run instrumentation tests on Travis always.

This should help us keep track of flakes so they don’t only appear
when someone makes a pull request."
25f435013634635d54a6250b9aa1bc362daec53e,"Remove Android API 20 emulator from travis.

It’s unreliable and basically just KitKat anyway."
f89f2f49757c9aee16df32acc2f549fb9a514018,Update usage script for split_by_sdk.
2a0a5940f19183f42cebbde07546c6d55a9dda09,Add more transformation regression tests.
90b3b9f054072a7c3625926caa150277352b92dd,"Avoid clearing Bitmaps in use by paused GifDrawables.

Fixes #2526."
204659778850fbac6421e125d8e18176cb4d61cb,Update the non-Bitmap Drawable javadoc for load(Integer).
85c2176609427fd67fc14a33410b67ee25eec51a,Bump version to 4.3.0.
c3d05307c80094e17b90ec5fed45e91a6b4b8533,"clear all pixels when dispose is 3 but previousImage is null (#2521)

* clear all pixels when dispose is 3 but previousImage is null

* Separate conditions and explain why we need to drop the prev image

* release previousImage for re-use"
98449136876950dc87782c3551e85f56a80ce88f,Bump version to 4.4.0-SNAPSHOT
7f7d9cc02e8fc2f2706d71b6d1ae0831c0f6c47f,Update README to point to 4.3.0.
477e6608c16a8c39d91948c9d410ab04efc13e13,"Add a debug.keystore and copy it to its expected location in travis.

Fixes https://github.com/travis-ci/travis-ci/issues/8679."
5733543790f235ad7f6603688b3853e6ee6d81fb,"Increase the samples firebase runtime to 5 minutes.

It seems to take about 2 minutes to start running the test."
2371aa66594b160a74e1ddfbffc3e335152e3c55,"Avoid unsafely recycling Bitmaps in DrawableTransformation.

There were two issues here:
1. The BitmapPool used by the Drawable converter was recycling Bitmaps
when it was used specifically to avoid recycling Bitmaps when the converter didn’t allocate the returned values
2. If the Drawable wasn’t transformed, because the BitmapTransformation that the DrawableTransformation wrapped didn’t need to mutate the 
converted Drawable, the intermediate Bitmap would be placed into the
BitmapPool twice.

Both of these issues should be fixed with some additional tests to 
hopefully prevent this from happening again."
b56dbd99bbe885a1a800f7bfe6e79abad15dba29,"Retry 3 times when running instrumentation tests.

Fixes #2540"
aa2711b56b2e4962630ed540576b062b0a22357d,"Start animatable resources after setting the resource in ImageViewTarget

After 90b3b9f054072a7c3625926caa150277352b92dd we have a case where a
GifDrawable may load a frame synchronously when it’s started. If the
GifDrawable was started before it was attached to a View (and gets a 
non-null Callback) and the GifDrawable had a frame pending, then the
GifDrawable would stop itself in the start() call, causing the 
drawable not to animate. We can avoid this scenario by changing the 
order in which we start animated drawables and set them on views so that
we only start the drawable after its set on the View.

Fixes #2541"
4827c9ebe24462feaa346e969312b0a463cce8f4,"MOE automated commit.

Use ResourceIds instead of depending on R.raw.canonical in 
CanonicalBitmap.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=173974844"
57d3fa8da8988147241321a5e44054a7ce71f76b,Bump version to 4.3.1
6a891ff80cf0a626aac50857eb15e8264c304a80,Set version back to 4.4.0-SNAPSHOT.
b1c70d26bae6971854cf334370e1821572c47aed,Update Readme to point to 4.3.1.
7cf2c151cd76622228fe6fd05301a012eb359718,"Cleanup Glide’s fat jar.

1. Eliminates the separate debug/release variant builds since both are identical at the moment.
2. Depends on compilation tasks rather than build tasks to reduce build time
3. Removes annotation/compiler from the fat jar javadocs (it wasn’t included in the javadocs anyway)
4. Remove deprecated usage of javaCompile."
f75087f8678402f595c5082cd83776b6bba5b6d2,"Add tests for Glide’s annotation processor.

Fixes GlideOptions.OVERRIDE_REPLACE and GlideOptions.OVERRIDE_NONE options (previously they would cause complication errors if used).

Fixes an NPE caused by skipStaticMethod."
e78f2ee1153f5b810242ff9a31fad398357623b7,"Add support for return values from extension methods.

The old style is still supported for now to avoid breaking backwards compatibility, but the new style is available, simpler to write and avoids @CheckResult warnings."
7fccb32a139edcc3e316fedde57b36e6f65ba435,Allow return values from @GlideType extension methods.
d402780a638da1662b0190b918a578c391ddeb01,"Use long value so that cache sizes greater than 2Gigabytes can be supported. (#2558)

* Use long value so that cache sizes greater than 2Gigabytes can be supported
resign

* refactor to long diskcache sizes"
5d74999a49a1f41777c1371088b7a939b807ed2b,"Use Iterator.remove when trimming cache  (#2550)

* Use Iterator.remove when trimming cache so even keys violating equals() can be used here.
Fixes #2532

* Ensure that we don't overrun the iterator

* Get new iterator for each iteration so concurrent modification is possible. #2532"
c75e2a6256176b62d2f5d909c6684cc057eecad7,"Add a test for returning a resource to cache during trimToSize.

Suggested by @TWiStErRob in #2550."
014bf4482637f7fb7abe1febb0e6796d3e04a2dc,"Avoid escaping ‘;’ and ‘$’ in GlideUrl.

Fixes #2583."
e9cf41fbc190c9d29ce683728f52c061809c749b,Fix leaking threads in tests when using Glide.tearDown().
d3adf2c238bcf5ee5bdb0478b0378b54083ab89a,"Add @RunsWith(JUnit4.class) to compiler tests

Satisfies a requirement of Google's build system."
46e4fc70770c5b7e7787c7fb8e3d8aab27459bd2,Remove a couple of unused imports in Glide's compiler extension test resources.
122b43cee890ae0aef6b35fee3f07dc6b81262e3,"Add a Glide.init method compatible with the generated API.

Deprecates Glide.init(Glide)"
04fd0f0165e5946f2952e61f0bcd209689d59291,Add probot stale configuration. (#2556)
c02e4b7b48d9de9467616e527551dbc5f1ed5155,Remove good first issue/help wanted from stale.yml
b8fd89f7c11cfc90ef9ed274ecffe2c6fc110cf5,Avoid marking documentation issues stale.
cb4f02c38b704e0441186266f6469056bb33e117,Adds missing javadoc for TransitionOptions#transition.
963191a6554449531fd96feba6f85902b53af20a,Update to Android Gradle Plugin 3.0
0f71afe214bca9101bd965fcec89d145c3d85e61,Fix a variety of build warnings.
c1c9be203e6dd031c970f49abf1de60cd043c096,"Add an api dependency on support-fragment.

Fixes #2547"
78cc2f73660e9405246b72f7d0728e795f22cd7e,Cleanup deprecated method usage in GlideTest.
02096625b38f5c5fd6c820752a2fc4f0ae2b07ea,"Add resources that are dereferenced but not released to the cache.

Previously resources that were dereferenced but not released vanished
into the ether. As a result you could load a Bitmap and then immediately
after load the same Bitmap again and get a memory cache miss on the
second load. This pattern is particularly common with the submit() APIs
that load images on background threads where the Target is neither
referenced by a view nor referenced directly.

Fixes #2560"
e2b4e95c88cbee523557d43b323918c447854504,"Consistently use timeouts in CachingTest.

None of these waits are flaky, but if we do break a test in a way that
prevents a callback we expect, the test will time out instead of hanging
forever."
4334d6af8c2bbb2bb467e097fd1bae18c755ab67,"Add test for writing and reading from the disk cache after clearing it.

Related to #2465"
1cfc4afd10c7beb249833be1d91a351513c37ed1,"MOE automated commit.

Deprecates DiskLruCachWrapper.get()."
561b1144a1441bb6aa4da0cb9e0c54328e8dae09,Fix a few lint errors.
589597481028abf68a90526316dbdb846c1465f4,Set emulator memory to 2048.
14decbd5cd4d8b4c020690c1e1ceb044542627d6,Extract concurrency helper for emulator tests.
43b9ada7f4c77ac0aedd02b84801fddfcfabd7b6,"Return true from RequestTracker.clearRemoveAndRecycle for null Requests.

If the request is null, we don’t need to do anything to clear it, so
we might as well treat the clear as successful. Doing so also matches
the behavior in RequestManager when we have a non-null Target with
a null Request."
1a4e1b4672c2a50c454d086f22c1aec631ab1bb7,Avoid including null Targets in TargetTracker.getAll.
2ea14abf8d5ca50e88b16385d817cfee77a5c52a,"Add an explicit null check to Util.getSnapshot.

Explicitly checking for null avoids our previous implicit expectation 
that the iterator of the provided Collection would do the null checking 
for us. This expectation is valid in Glide right now because we only 
pass WeakHashMaps to this method, but it seems like a dangerous 
assumption to make in a utility method.

We can’t require a WeakHashMap directly because all of our usages are
wrapped in Collections.newSetFromMap."
d4db53f817c505b973f7af9bc4a51e3d95170f56,Add tests for clearing with RequestManager relatives.
811983799a1815f06cdac91165d8a4aad88facc8,"Fix exception clearing after onDestroy in a second RequestManager.

Sequence is either:
1. Obtain a RequestManager for a Fragment
2. Wait for Fragment to be destroyed
3. Start a new load with the RequestManager for the destroyed Fragment
4. Clear the new load with the application RequestManager (or any
RequestManager other than the one the load was started with).

Or:
1. Obtain a RequestManager for a Fragment
2. Obtain a RequestBuilder from the Fragment RequestManager
3. Pass the RequestBuilder to a background thread
4. Wait for the Fragment to be destroyed
5. Start a load with the RequestBuilder on the background thread
6. Clear the target returned from submit using the application manager."
f24ba470b5141be99185ba246de07417d775dd88,"Unify tearing down Glide in unit tests with a rule.

Also fixes a case where we weren’t tearing down a directory in a cache
test."
7e317c049f25423f46c4651d8d0b476d457ff3c0,"Allow Glide's EngineResources to be garbage collected by removing the extra strong reference.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=175964658"
062e9ba0af80437efad8dade830737eee6c2d3c5,Add tests to validate that active resources are eventually cleared.
00c8b9f4ecc97b9d8eadb8793bda88a010fa47ea,Avoid depending on Apache commons.
cf765b43668c86e5fa0c413b2df5646cf1ca0dac,Add tests for Error Coordinator and fix bugs in clear/onRequestFailed.
d667220130e5921b9d25a252bb2443e4d8ab4f22,"Fix Glide’s teardown rule to wait for running tasks and clear caches.

Previously there might have been pending tasks that could complete after
the teardown method was invoked, causing race conditions that could
break other tests."
9c82c42e6314311efb3bea12ee8984b3bc5caa48,"Allow Requests to notify Targets when cleared after loads complete.

Fixes #2555."
54801bd931cc99ee7ed738bd179cfa2a805a415b,Cleanup a bunch of errors and warnings.
6bc908bef3ed57827227efdb0c3b06d1e72d71d8,"Catch SecurityException registering receiver in ConnectivityMonitor.

Fixes #1417"
986f55992e78e9c076a63ce5a53236339117f40f,"Add logging/ACCESS_NETWORK_STATE permissions to sample apps.

Hopefully this, along with a documentation update, will make it easier to understand what Glide requires to be able to monitor network status."
eff228fcafc2a3e6077d15d0f2a995edf46f1f56,Remove an unused permission from the Flickr sample.
d0fd96780dccf00b5cffa43befa2d5566cacd1db,"Add a clearOnDetach method to ViewTarget.

Also returns appropriate ViewTarget implementations from into(ImageView) 
so that the method can easily be chained.

Related to #2520."
7159c7b2fe61d453257c01348fa54c6e6dc22743,Enable hardware Bitmaps in Flickr sample.
bcd6cc2d72f50f84aa97b1098d465114cd0678c2,"Catch SecurityExceptions obtaining active network info.

Fixes #1405."
9d87deaf34f06c147f69550cdf9b2289f315a325,"Stop GifDrawable in onFrameReady if all callbacks are Drawables.

When we use TransitionDrawable, the GifDrawable’s callback is always
non-null and always the TransitionDrawable, even if the
TransitionDrawable was removed from the view hierarchy. Checking up
the callback chain allows us to ensure that there’s a non-Drawable 
callback eventually."
3dad44975a9af3f1765d30d98ca1a694f77ed4e8,"Stop animated Drawables in ImageViewTarge#clear.

Fixes #1087."
2bdeec9a41158f68e3eebd85fbc28b92383f357b,"Add KeyTester and Key regression tests for better coverage of Key implies.

In addition to being easier to use than KeyAssertions, the regression 
tests should help us catch any unintentional changes that result in 
disk cache keys being modified."
fd858cdf86b23ea96b68e9362cecf9ef4db41f49,"Use a RecyclerListener and clearOnDetach to optimize Giphy performance.

The RecyclerListener optimizes memory usage and clearOnDetach can 
significantly reduce the number of GIFs running in parallel."
6cee6d2c155f9dda7857df6d9c060713f4e5b2ca,"Clean up GlideExecutor and provide a method for using instrumented executors in tests.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=176178140"
fac5db753615f6419950c438d48ea873d5bdcb97,Fix a few build errors.
f202e4c412bd259a81873c23705dc9d4f7c3d4d5,MOE automated commit.
08efd1bdef4b612a1043ccb8c3f2f72f7e51ed45,Fix a line length issue in BitmapSubject.
f18005eb0818f8a817138271fdfdd3c5bf29f69b,Clean up warnings in GlideExecutor.
e51a013d754c2658e7329beb97308f3e2686c924,Clean up warnings in and around MockGlideExecutors.
6837543ca446660d74812ad26dd7a096e4fa66ac,"Add method to specify animation executor and fix consistency issues.

Progress towards #2471."
e7a494253187f14bc73a909f522e4da2ce093920,"Create local references of instance variables used in GIF decoder loops.

Cuts ~40% off of frame rendering times on API 23 emulators and devices.

Progress towards #2471."
fa2ebfe255be99c9cf5b5edab0f7d8d2ae8a0545,"Use Arrays.fill to clear out missing pixels in StandardGifDecoder.

Progress towards #2471."
7c0cd6379c23d5a9cdf8893ad993edce3feda064,"Optimize loops in StandardGifDecoder.

These small additive changes might save ~5-10% decoding some GIFs,
depending on the vagaries of the particular file.

Progress towards #2471."
4db20db0486f97ec9c5ca67b5d08c6b3b700581b,"Remove intermediate work buffer.

It adds complication and data copying and doesn’t seem to make much
of a difference in multiple low/high end devices or emulators. If it
seems like I/O might be a blocking issue, we can try just copying the
file into a byte[] in the ByteBufferGifDecoder the same as we do for the
stream decoder and wrapping it in ByteBuffer.

Progress towards #2471."
65e550618c0f991aafe7062d33e8fd443faa5cad,"Cache the actual color table index of transparent gif frames.

Progress towards #2471."
5dc6460d0d9555400823e675332898fc8f68ab54,Fix warnings in emulator tests.
b4d778bc66ec9683157e5c5e46f9a999362d4564,Reduce a variety of object allocations across Glide.
0e2142b6e6b285110d17c8a069e2f3f4ef5fa82d,"Avoid asserting that KeyTester’s test method is called in finally.

If any of the tester’s assertions fail, this error will be triggered,
which hides the assertion failure.s"
42bf7756372ad0b4825584d557b6b73a8dbe8e7e,Remove use of deprecated setResizeExecutor.
e89fd495c6ef57d116de11babb4253d2ddd2dcd7,Add missing tests for Objects that implement Key.
9b0741231d4214d2609fa27ddbe6764df51701d3,Add favicon to javadocs pages.
05b885422624170dd39c89ef55b802f3b63ffc44,Add a waitForLayout method to ViewTarget to make it easier to use.
68965f07d1178f05f2b1360361a71b87e254283f,Enable warnings as errors for Java compilation in Glide.
1070ca8ba9d370efecb3abd7232409cef2bde72c,"Treat Android lint warnings as errors.

Also hides the progress messages and 0 errors found lines during the
build."
d466c51d575fb6a7141ca96ae888a933652c6556,"Replace http links with https in README.md (#2640)

few links are served over http, replacing with https"
5580e517d05d178946369e178eb16022224dd362,"External storage exists but not writable (#2641)

* Some phones (like Huawei P9) are detecting external storage as available, but it's not writable."
2c146ec93e7a8c8954a18ba312e77f3d4481c5bc,Add another try at de-flaking the active resource emulator test.
108a0621d1fa970aa83e28c8700c04c2dbc1a8cf,"Keep onlyRetrieveFromCache and normal requests running independently.

This prevents cases where using onlyRetrieveFromCache might block a
request on an RPC if a request was already pending without
onlyRetrieveFromCache being set.

However, this change does now mean that it's possible a resource will be
loaded from the disk cache twice simultaneously because
onlyRetrieveFromCache requests are no longer deduped with normal
requests. We expect this case to be rare, and the consequences are an
efficiency issue rather than a correctness problem, so we're still
probably better off with this change.

Future work might include attempting to cancel and notify any normal
requests if an onlyRetrieveFromCache requests completes with the same
key will the normal request is running.

Fixes #2428."
7a8d5e84e7cfa420da55c33f0129d6d95a84d12f,"Add method type assertions to HttpUrlFetcherServerTest.

Related to #2636."
f1758e5b8667a1c612db86cb075a5e86b7d05c92,Add a test for issue #2638.
861329226e3dffa0e096c3200fb6b96a1613ba83,"Improve byte[] loading and consistency.

Two significant issues are resolved here:
1. Using Glide.with().load(byte[]) and Glide.with().asDrawable().load(byte[]) used different sets of default options.
2. All byte[] loads default to using the same disk cache key unless override with a signature (which happens inconsistently depending on which variation of load() is called in #1)."
cb696947145db73dae432a1f5d1cbf8a619117b1,Disregard timeouts in emulator tests when debugging.
c7b7dfe1bce777556d623a29ea4ea232e3853037,"Allow setting options for byte arrays in any order.

Previously we’d silently override disk cache strategies or skip memory cache options set prior to the load call.

There’s still a TODO to make this work for the rest of the options."
cff4f2cc3398daa21e00f76e2c51e4b2bd3952c4,"Avoid recycling Bitmaps/Drawables passed to load().

This is still best effort in that anyone can register a component that
doesn’t follow our conventions and break things, but it should be safer
by default at least."
4bc86c7c33ad59b39ba24998b31ac2d9d62edf2f,Add tests for loading Bitmaps and Drawables.
fa4100fa61e6570eb2f6690b0e437c17d2bc87b1,Update to check style 8.4 and ban org.mockito.ArgumentMatcher imports.
16eaa9bf70f03f9b45a98912045bea4186367133,"Reset DiskLruCachWrapper outside of IOException catch block in clear().

DiskLruCache can close the disk cache but throw anyway in delete(), 
which previously left the disk cache in an unrecoverable state until the
application was restarted. By always nulling out the disk cache variable
we allow for future attempts at opening the disk cache even if closing
it throws. 

This particular case was caused by a bug in DiskLruCache where it would
throw on an empty directory if the cache were deleted outside the app
while the app was still running, but broadly speaking it seems like a 
bad idea to allow our disk cache to get into a state where the app must
be killed for it to function again, even if we might partially ignore
a clear disk cache command (which wouldn’t be retried or recovered in 
the previous implementation anyway).

Fixes #2465."
5ac08f93ca7f9e5d7cc8f529aab29b3771c80b8c,Stop GIFs started in GifDrawableTest.
73872982c90f7905290a43d657e6a2e9eda4c550,"Avoid obtaining size of recycled Bitmap in logs in BitmapPreFillRunner.

If the BitmapPool is too full or the Bitmap is larger than the 
BitmapPool size, putting a Bitmap into the pool may recycle it. As a 
result it’s unsafe for us to use the Bitmap after the call to put() in 
the BitmapPool, including in logging. I’ve resolved the issue by 
memoizing the Bitmap size prior to the put() call.

Fixes #2574."
383110daf27c73aeddc256e4ce6f5f0aa428b206,"Update the javadocs in Engine#load.

Fixes #2648"
fcec722bdc016c95d24675b90a64752d4e28427f,Fix a missing closing ‘}’ tag in RequestManager javadoc.
a277fa513c5373bd860f9f164153acf4674912dc,"Fix parameter comments that don't match the formal parameter name

More information:
https://docs.google.com[]document/d/1lzK04DqCZgjOoGQfBT053QIrCvlsyAAwLo0jfqcN6ds/edit?usp=sharing

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=176975332"
243c1cf5bc7d552743257cec7a66f80af0058fc3,"Avoid releasing resources to memory cache after they’re removed.

Previously when the Target was dereferenced, even if it was cleared 
first, the resource would be put into the memory cache. That could end
up affecting eviction order and prevent Glide from re-using resources
it would have otherwise been able to."
924bb9753272dfe740df79ff475946235e5e183b,Cleanup internal build errors and warnings.
f372e632e4013f43e10eb1d1f2542f56de2ee7c6,Add an API to avoid active resource retention.
cb4bda0d4798e7a05d5ac0fbeb3c87a0061ab18c,"Update some documentation around active resources.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=177466368"
2c7aa8536d1e9b74c8e11af3182f7f896dfab255,"Poll ActiveResources’ ReferenceQueue using a separate Thread.

Avoids an issue where prolonged idle states on the main thread could 
lead to an unexpectedly large accumulation of cleared weak references
and a corresponding increase in memory usage."
a1e3fa281baa3bc13fddd8160fedbd6c96cbf6b0,"Only restart full request when restarting requests with thumbnails.

When thumbnail requests finish after full requests complete, we discard
the thumbnail's resource to decrease memory usage and we set the
thumbnails status to complete. When requests are restarted after they
complete, we just call onLoadComplete with whatever resource they had
previously. As a result, thumbnail requests that completed after full
requests were calling onLoadComplete(null), causing spammy error logs
and potentially undesireable calls to onLoadFailed.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=177489960"
4a528bfacf32fa9f08f32ab519f858aa314792d4,"setEnqeueud->setDequeued in ActiveResources.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=177484965"
d9cc63a3a85d837135a2fc3e201e6997bbe3b21c,Update README to use new dependency resolution DSL (#2668)
21060136cff32f4c06cb60ac734f021baf8f300d,"Avoid running firebase when secrets are missing.

This is more robust than checking pull requests and will allow users
to have travis running on their personal Glide clones."
4f650681c55ede3b7a8db8a74cc87d80e07a255c,Whitelist build stability for stale.
029f9e1615299a0b453e0afe4204b44cfc5e1579,Update javadocs script to pull version from gradle.properties.
beb0a89cc179304dc8a738c422bf11ab3cebb1f5,"Update dependencies

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
597a915f454e7bdd018f61c52e263125ded8d070,"Fix licensing issues

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
75631ef45b28583059083b521ec57a0324856509,Update okhttp3/volley notes in readme to point to docs page.
63ec9ba1fbb0eb4751df8df74cd43b953b27dcc1,Update IntelliJ code style settings to follow existing style
5e62023557075b843444c3e5a69221bdcda42a47,Ensure java imports are last to follow existing code style
0c56f5215bf422e1961775551517ea1f825e35bc,Or not
7e70d2980b2dafe5117e1cecc80198021b7d3591,Add regression tests for @Excludes.
b9568d37cd627c8bd8dd735712aaef2b96d744e9,"Use reflection to retrieve @Excludes values.

Fixes #2673."
dd1a8544329935cca1b3368b46884ae6170b1834,"Upload to the local maven repo when -PLOCAL is used with uploadArchives.

This makes it easier to test changes in sample projects."
ce90ed40867e49b74025f39b8077f8c6b18ff998,Update readme to point to docs pages instead of wiki.
f9918e7b9f74d078778d8461798a56f349bcc649,Bump version to 4.4.0
63d96335809956b1ec8244b67b0afc7bb9f1a754,Bump version to 4.5.0-SNAPSHOT
0e4c491ae0f250b1806e914f6b39d43761d0673b,Update readme to point to 4.4.0.
5d760e2a117a63f2339af5ccfd9a2f81126893e1,"Fail CachingTest if our weak reference is never cleared.

We're waiting for a specific condition that should occur, but it's
dependent on the VM. I haven't seen it fail with 100 attempts, but it's
possible it might. Failing with a specific assertion should make it
easier to distinguish between failed tests and flakes.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=177625844"
09e33a2133eb1d4005b227439c0c53c9c4e8c89b,"Add pauseAllRequests()

pauseAllRequests() can be called when the activity is in the background to reclaim memory used by the active bitmaps. As the caches are unaffected by this, returning to the activity and loading is still fast.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=177660869"
092a5948afbd29a78735756e1ac14512788689b8,Add a test for loading byte[] from DATA disk cache.
c3bb9701d8df091c44e5a04cb8337b2091c48818,"Add a script for running most code related release steps.

Excludes javadocs and version updates to the readme/docs website."
4e539f5266e5acdfaee808d9274a11e0c0397e07,Fix incorrect/old javadoc in RequestListener.
67783961c71639871cc3687894976e6caeb6609e,"Cleanup target api annotations (#2671)

* Remove unnecessary API checks

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
dc12b60c8f0a21eb9b3ab2164471c93d2e20ae25,"Improve Kotlin support for RecyclerView module (#2670)

* Improve Kotlin support for RecyclerView module with nullability annotations

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
c3dafde00a061bafcd43a739336ca3503af13a7d,"Add nullability annotations to okhttp3 module and its dependencies (#2685)

* Add nullability annotations to okhttp3 module and its dependencies

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
753f177026431bee2a4b6cfec9e758fb2d3962de,Update SimpleTarget javadocs and warn about its limitations.
b4b45791cca6b72345a540dcaa71a358f5706276,Fix an out of date reference to Glide.load()
06ba3442fd8d25c943e986c2bd6c138aa4b390e3,"Ensure that <packaging> is set in poms.

Previously our attempts to set packaging weren’t working at all and no packaging value was set in the pom one way or another. 

Fixes #2318."
07ae4f715701833deb2e8bc322ccda907bba6a5c,Add more docs about equality and keys to BitmapTransformation.
3dc1d18da75b44d8d97f4161fe0d330e4993e537,"Avoid re-using completed previous requests if skipMemoryCache is true.

Fixes #2663."
11b5fd73e08c66f62d7b692b31946c1463001d52,"Fix an ordering issue in Glide's annotation processor.

Internal and external compilers use different iteration orders when
iterating over sets. For our processor to have consistent output, we
have to ensure we process annotations in a defined order.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=177824343"
23975d933bcda7d136340b9988f2bd575065b667,"Remove a deprecated constructor in CenterCrop.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178191424"
733b2e0f25a6d3ddbb4942172e92a9fe01c87363,"Remove a deprecated constructor in CircleCrop

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178191526"
9bedc2b5fe5b1b2e05203af173c73f0e599a0177,"Remove deprecated constructors in CenterInside

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178240180"
55594baf791ccb49dd5cdc256662360717b409bb,"Remove deprecated BitmapPool constructor in RoundedCorners

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178241507"
d8f6224d127b984c3ac1356d44f62126e4843d07,"Remove deprecated constructor in FitCenter

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178249037"
b64f23de2a7ba38fceac1cda85f05158e80132f9,"Fix static decoding of interlaced or downsampled transparent GIFs.

The GifDecoder was NPEing, forcing Glide to fall back to BitmapFactory,
which can only decode static images.

Fixes #2698"
7ab1621224fbb0f146e1baff715bc4b97602edbe,Fix GifDrawable restart after stop emulator test.
523562c2fd951557b7bec3d7c4680f5eefa6746d,Fix GifDrawable leaks in GifDrawableTest.
b18a63f6952c947bda71c61a267dac5985210150,Use ConcurrencyHelper in GifDrawableTest.
d840533448fd7bde528e0af7ce10c49653430c12,"Remove deprecated constructor in FitCenter

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178304408"
dad8e89ff5a6abef2e3d9b7a12caa67a4c16fa95,"Fix parameter comments that don't match the formal parameter name

More information:
https://docs.google.com[]document/d/1lzK04DqCZgjOoGQfBT053QIrCvlsyAAwLo0jfqcN6ds/edit?usp=sharing

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178386009"
ef9b89aa344eb2baf108eea8c0d78eeff82f072f,"Disallow imports of org.mockito.ArgumentMatchers as well as methods.

Previously we disallowed methods in ArgumentMatchers, but not the class
itself."
c809f7ec03bbfc2c529f2c211cfc644c2073aab0,"Add first gen Moto G (XT1032) to locks whitelist.

More progress towards #738"
76c6af23984a95ac434674cd944d1d54f7b2684c,"Increase default timeouts in emulator tests.

The GIF decoder seems to be sufficiently slow on
arm emulators that 5 seconds is insufficient."
2f76842b8ef9ac15c43a2c5175f23496b5a13f37,"Remove deprecated CenterCrop constructor.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178649539"
d427cbd33206cbcc88ac4a0f0c29ef831d4bb5b5,"Fix a race causing an NPE when obtaining load paths for resources.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178651500"
144ac5374eb0bd11a8f8e92d7346dafac1426621,"Remove deprecated CircleCrop constructor

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178663970"
150ebabbd7d5e8751c8678fa01418d1b1f1259da,"Remove unnecessary public empty constructors in Glide transformations.

These are no longer necessary now that the deprecated constructors have been removed.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178665733"
fb5d60875664b997e03a6220812e306b6211f585,Fix not specific enough generic types in Java 7.
0cffd1da977e9ca334032ebc1d798213a177aab7,"Add nullability annotations to library module (1/n) (#2681)

* Add nullability annotations

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
f541b65e596a49d252ba6b80d3b05a111ce93461,"Add nullability annotations to gif modules (#2712)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
e923554b10fa9625f4fa6fe706f3d5a553843ab9,"Add more models affected by #738 (#2720)

* Update list of models that require locks around Canvas

Observations aren't confined to API level 22 anymore.

Yet more progress on #738."
cfae30aa55ad38d69fa3997662e2d791de2c110e,"Add nullability annotations to gif encoder module (#2713)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
36e0b802c3a1e564caf230b351a6438fa32100ac,"Cleanup (#2722)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
04b9c1147e33bce54fd53c6f1b2f9fcf3875613b,"Disable 16, 17, and 18 emulator tests.

Work around for #2738."
650bb7770d08b279c2a7f00e25337618da54f7f3,"Start adding nullability annotations to Registry class and its dependencies

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
2b4be8b8c210abb34740f0778434679b644a6525,"Fix all annotation testing issues on Windows (#2721)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
c902730b75085cecdd40cd5817453d8af0eff4e9,"Catch NPEs and RuntimeExceptions thrown in getActiveNetworkInfo.

The framework seems to throw these on various devices and versions of
Android, though mostly on Samsung between APIs 22 and 24. 

The deleted test was passing because of an exception in isConnected, not
in registerReceiver so it was incorrect. There doesn’t seem to be a way
to force Robolectric to throw when registering receivers."
2f8f2c40cb373f0b09a8896e5d3d68a460dcd4b9,"Only avoid restarting old requests when memory cache is disabled, not just set

You can set skipMemoryCache to true or false, or you can not set it at
all. Previously we were avoiding using the previous request if
skipMemoryCache is set, which means that not setting skipMemoryCache
behaves differently than setting skipMemoryCache to false. That's not
necessarily a bug, but it's not expected either. Now we only avoid using
the previous request if skipMemoryCache is explicitly set to true.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178704109"
73759b9eb1d3b186c4deb6412137b0b1193fbd5d,"Default active resource retention false.

Although Glide avoids recycling or mutating Bitmaps recovered from
active resources via weak references, we can't prevent callers from
doing so. If callers do mutate or recycle the Bitmaps, Glide may throw
exceptions, show graphical errors, or experience other undefined
behavior. Since we can't guarantee that Glide's behavior is safe, it
doesn't make sense to default this option on.

That said, recycling or mutating Bitmaps returned by Glide isn't
strictly safe either and is generally both bad and inefficient. If
applications use the safe and efficient RequestManager.clear method
instead, setting this option to true will work as expected. As a result,
we'll retain the option, but force users to opt in if they want the
benefit.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=178704468"
429b7e2d9854da549eb0b852e2e08de176f05fbf,"Properly trim LruResourceCache

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=179077833"
92d761d002da25320f2c504267f56d73b889b2d4,"Remove deprecated constructor in BitmapTransformation.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=179579673"
a6f1b1c1bef5b4e8be736c564792715266b07463,"Remove deprecated constructor in RoundedCorners

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=179580259"
bd2f21595d3404e6aadf1f4333bef369509c4a56,"Util nullability (#2729)

* Add nullability annotations to the util package and its dependencies

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
c889c2ed10d6918ecef1da73c14f7be4ad148a79,"Default test coverage disabled.

It breaks the debugger for emulator tests and we don’t actually need it
on."
6c7cf3f8cae998469a7e7df8c70c459311479a38,"Fix using a recycled DecodeJob object when ResourceEncoders throw.

It’s possible that a ResourceEncoder will throw unexpectedly. If they do
so, the exception is caught by the DecodeJob’s top level try/catch block. Unfortunately, in a finally block lower down the stack, we were
calling onEncodeComplete and returning the DecodeJob to the pool. As a result, the logic in the catch block higher up was running after the DecodeJob was already in the pool, causing an exception. Now we avoid calling onEncodeComplete and returning the DecodeJob to the pool if an exception is thrown, which allows the logic in the top level catch block to function as we expect."
b221d4bbec138efcdb1aabd07600b7df713f9e40,"Default isLowRam to true on APIs < 19.

Fixes #2650."
b19387ce0a9427ead22ee95294709e4b9371cb2a,Fix a deprecated call in the parent gradle file.
7ffbfc9f82e9d2e29a371631c1c7a28e38257f56,Update to Android gradle plugin 3.0.1
ae202bc0ad3c02cbb6dbb71dd654050c5b5332eb,"Revert back to support library version 26.1.0.

Makes #2730 less likely. We can wait until the source is released before
updating to 27 again."
0e3172a86719029b0642677c59b442f0e3bdd687,"Set device to Nexus 4 and re-enable API 16, 17, and 18 emulator tests.

Fixes #2738."
e35a73b4e78f2f05dc5c1163b8083ac1b662b02f,"Finish adding nullability annotations to Registry class and its dependencies (#2746)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
f37ced1512f7eabf37f6c93b1b7ffb32c3629b72,"Add nullability annotations to pool package and its dependencies (#2747)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
bb96b633174184965cd1bdf9027ef3843f59c54f,"Add nullability annotations to RequestOptions (#2750)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
276d4ff4bdce85763c985c90a87ea5e858a1ffe4,"Add nullability annotations to more generated classes (#2749)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
c3107801dab8ccbe121157bee7dba29b7d9723e6,"Add nullability annotations to signature package and its dependencies (#2748)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
a084ae4eb067c6759b813c27fe6316453a849b18,"Mark a couple of non-null methods in Registry as NonNull instead of Nullable.

I missed these the first time around, but they throw exceptions if the
result is null, so they either return a non-null value or throw, which
qualifies as NonNull."
ee83b67780f27960d67a66f10f411397eddad22c,Add error prone to the main library component.
bf476cd1a362e77e4a9cf3363ca7bf1e60916b06,"Remove jacoco/coveralls integration.

It hasn’t worked in at least 6+ months."
cfeb4a46eebb13b8f0be98eed92cefd54bf78f55,Switch back to the travis container based build system.
cc0288c3b4bfb82a109a3f279af52c57fc5e1499,"Support Re-using Bitmaps with RGBA_F16 configs.

Also adds emulator tests for wide gamut images on API 26+."
75c2a8b6d216013e7fbf797231839a8f4c82757a,"Upgrade to API 27 (#2755)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
a55cc5e3f91655ca640c769101d9b7f0d5e16b1b,"Add emulator test for obtaining bytes of images.

The checks are pretty basic, but they at least clarify which methods
throw and verify that the bytes produced are valid images. We probably
also ought to add regression tests like the transformation regression
tests, or convert this test to a regression test."
6e9866b5a19d06625006a9a8c605db21047df74b,"Add support for decoding AssetFileDescriptors as videos.

AssetFileDescriptors require an offset and a length, simply unwrapping
them as FileDescriptors or ParcelFileDescriptors won’t work. Most of the
time videos are loaded through providers that don’t store multiple 
videos in a single file or from individual files so this is relatively
rare. However, prior to this change Glide would fail to load any video
placed in resources like raw resources. Glide might also fail to load
videos provided via ContentProviders as AssetFileDescriptors prior to
this change."
ded8f77c9f2471e3c3413aa234656df8cf72dd2f,Support getScaledFrameAtTime.
7d350390cc2d0eb8c6ed9c19faa9556b5910e172,Improve exception messages for failures in GlideFutures.
d522ac7249ca1bf71f6de30e62d71a1faa8d4c4c,"Fix an NPE in ResourceDrawableDecoder.

The NPE would only occur if the load was going to fail for the decoder
anyway, but at least this way we don’t show a scary looking NPE for
an expected case."
015d2659a9ea7438ab72b94500a0921f8ff35aa3,"Support transcoding Drawables to byte[]s. 

We do so by casting which isn’t great, but it makes the API work a bit
more as expected and it’s not super expensive in comparison to the 
compression call."
ffd0fe0e3c03106abfaf18df301ac5f0d66e0582,Fix an out of date OkHttp version.
9c70aa5f92f523c6bac29628554fdde5428e0cdd,"Clear the error request in ErrorRequestCoordinator if it’s running.

Previously we’d never clear the error request which could lead to a
StateVerifier exception or an object pooling error because 
primary.isLoadFailed() would always return false because the state would
be reset from failed to cleared in the call to primarly.clear() on the 
line immediately above the check.

Fixes #2767."
d7e041c366c9dd6d0f024c534b778486688aaaa6,"Avoid looping forever on RuntimeExceptions in ConcurrencyHelper.

If the exception threw a non-timeout exception while the debugger was
attached, we’d busy loop until it was detached. Now we only loop while
timeout exceptions are thrown and the debugger is attached."
d59a54866893eda0def3532ddd89502e4d24d19b,Add the violations-gradle-plugin for findbugs and PMD in library.
ea7bf7c7bde69b39c2cce6f7bcda3d00b3c3d772,Remove a couple unused PMD suppressions.
989e76f6682c9eb11a52954ec960c3688fbbddef,Use the violations plugin for checkstyle and lint errors.
4e5577d91fd20e902aa27c89e810a54fb04eb31e,Fix load failures on API 27+ loading videos with Target.SIZE_ORIGINAL.
3ed41ae8207e492813c647c36c4141bf9fa671ce,"Disable a wide gamut emulator test that fails only on API 27.

It looks like Bitmap#compress always fails on API 27 if the config is
the new RGBA_F16 config. The same test passes on API 26. I’m not 
currently sure whether this is intended behavior or not in the framework
so assuming the test for now seems reasonable."
e02969417a75048af0fcb61c5fbf6ea94bd2c4aa,"Clean up synthetic accessor method rot (#2762)

* Clean up accessor method rotting.

* Make tests pass on Windows (10, JDK 8x64) (with less ignores than before)

* Fix error prone version"
abce865cbd3fdb969ffa7baf3a78529cec6617e1,Add API 27 firebase emulator.
8ed06d2cf39b10dd3112243e02701bc95db16d31,Include default inspection profile for AS/Intellij.
642b2dc431e54cb677088e934743d78f1ad84810,"Cleanup the OkHttpStreamFetcher class.

Updates to OkHttp 3.9.1 and removes the work around made redundant by
the new version.

Removes some unnecessary accessor class avoidance. 

Clarifies why call is volatile and the rest of the variables are not.

Fixes #2355."
fae9444e85857bc524511f9b78063765bbcc760d,"Add a Gradle task to regenerate test resources for compiler tests.

Doing so requires the cooperation of the tests themselves by relying
on a JUnit rule to overwrite the test resources with the current output
of the annotation processor if a specific property is set. 

This is a bit of hack, but it’s at least much nicer than manually 
copy/pasting a bunch of file contents around every time we add or
re-order annotations."
f16aef4c6ad583bafe796c7a952a0d10920c4dcd,"PMD 6.0.0 (#2771)

* Update to PMD 6.0.0

* Revert: Fix deprecation warnings in PMD 6.0.0.
Move @SuppressWarnings closer to the problem to avoid suppressing future similar issues.
Reduce amount of C-style (declare first and then use) variable definitions
Make some variables final in tricky methods (enabled by above).
Remove some unnecessary PMD suppressions
Move PMD.OneDeclarationPerLine suppression for for loops into pmd config
Small method extractions towards Clean Code
Minor formatting/interface-impl enhancements in touched classes

* Fix classpath of PMD so UnnecessaryModifierRule doesn't crash (https://github.com/pmd/pmd/issues/817)
Fix hidden PMD violations

* Fix false positives by providing the correct classpath to PMD

* Simplify ThumbnailStreamOpener.open

* Add TODO to make PMD build faster"
a0cc414bd0a4be735d7fe29c4c3c4a3784f01f31,Update the violations Gradle plugin to v1.8
13ca461a3571713870616c6bdbdd2879b1b47516,Update to GSON 2.8.2 in Giphy sample.
ebff466a04594b806f7d341fcafaeb4ad3b204fe,Remove some debugging code from FlickrGlideExtension.
62d7464fb4f874897121591815ecb7503f7bc01b,"Add @NonNull to generated options and warn if @NonNull is missing.

Progress towards #2774."
9fde00628f223e96372aeceadcb3e35a0635cb6d,"Add @NonNull and warning to extension type methods.

Progress towards #2774."
8db787682e9191a600c3788e1336b41cb47e4059,"Use the fully qualified NonNull class name in warnings.

Reduces the likelihood of confusion with @Nonnnull in java."
04d5fea0825e7f9c68e59d8742a561a788aabedc,Add @CheckResult to extension type methods.
cc4bb160c555e90c354f5c4c9c2722756709232f,"Fix spurious PMD warnings when building with —-profile.

Adds a workaround for #2776."
fd73179166b15af246769c9b1ae205c65c584e5b,"Make PMD depend on compiled .class files (#2778)

* Revert ""Fix spurious PMD warnings when building with —-profile.""

This reverts commit cc4bb160c555e90c354f5c4c9c2722756709232f.

* Make PMD depend on compiled .class files so type resolution can do its job.

* Make FindBugs depend on compiled .class files via specific task and dynamic value"
d7bb6f956b34dd00ad0dbcb64f15f4b9c2fb0538,"Add missing annotations on APT overriding methods (#2779)

* Run tests for annotation compiler

* @NonNull GeneratedAppGlideModuleImpl.getExcludedModuleClasses

* @NonNull RequestBuilder.getDownloadOnlyRequest

* @NonNull RequestManager.as

* Fix Gradle deprecation warning (file(File) -> files(Object))"
180de95b8b3c4ac13e06a3f1510711122789b8e5,"Fix a whitespace issue in AnimatedGifEncoder.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=179712262"
13a6191b9fed219942abc932059629fafb2387e7,Add a link to the download/setup page to the README.
0996f124c222142415c22a3607117067c5a3f3b3,"Don’t require GifDrawables in Gallery sample.

This is more leftover debugging code :/."
01e5f74feb7381d22c22b8107aa827fd15ee9f25,"Avoid using options.outConfig in Downsampler

Reverts cc0288c3b4bfb82a109a3f279af52c57fc5e1499. The tests added in that commit are already disabled in [] due to emulator issues.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=180609322"
0deee306477ca1987ee4a9eeb04b7299aa3f54c5,"Handle null outConfigs from BitmapFactory on API 26.

We may be able to be smarter about how we perform this fallback. Not
all images are affected and those that are may be limited to some
subtypes of images. This fix may have negative side affects if it causes
us to use the wrong config for the inBitmap. Although the image should
still decode if we use the wrong config because we retry on failures
with a null inBitmap, it can prevent us from re-using Bitmaps and waste
memory and CPU cycles."
c1036c1cdc3c85827bf566e104a12ca880e26411,"Avoid passing null configs to Bitmap.createBitmap in LruBitmapPool.

We already handle null configs for our various strategies because some 
types of Bitmaps (GIFs mostly) on some API levels will have special 
native configs that have a null Java equivalent. As a result, 
LruBitmapPool does not throw as long as there is a matching Bitmap in 
the pool even if the config we’re asked for is null. 

This change fixes the inconsistent behavior where we would throw if
the pool happened to not have a matching Bitmap when the given config
is null. Now we universally handle null configs in get() and getDirty()."
4f1a8b6e4eba083a9affad9720f172d49f2bb7c3,Bump version to 4.5.0
dff420bd6f4a474d178e1e8076a441b602f426f1,Update README to point to 4.5.0.
f84e46182e17ab21a9f7a73ab01c6b111c2f57d7,Bump version to 4.6.0-SNAPSHOT
3968ccbc8815409165cec630f28bb44ce350b30a,"Disable all release variants in Glide.

There’s no difference whatsoever in any of our configurations between
the two variants. As a result we’ve been building all of our code
and running all of our tests twice, which is slow and doesn’t add any
value. It’s a little weird to see that the jars we upload to maven are
based on ‘debug’ variants, but that should be fine since we do nothing
different for release vs debug builds.

We can’t default to the release build only because AndroidStudio and
other dev tools assume that the debug variant will be present."
1c7434aced9e9c9ad1bd8a90bc1c08eeb7587a4a,"Adjust some gradle parameters to speed up the build.

Seems to take ~2 min 50s build down to ~20 min 30s. Not a huge gain."
eabe5fb2eebec3c61b0e75d406c8eb7975b043cd,Add an explicit timeout to ActiveResourcesTest.
3af80f43b8c7d4dd36ad149f7a5dc647b258330a,"Pull PMD and FindBugs out into separate projects.

This saves ~10-20s so down to around ~2min build."
95637cfcf37a4d9acf05aa3e46dff6f7799f763a,"Move library unit tests into their own module.

Along with disabling error prone for unit tests,
cuts build time by ~20s down to ~1min 40s."
11a8daf91ddda4847c246d83c509ff05e51a472b,Replace explicit resources with submodule.
416797ea294a23ec8adadfc922a1c8b6e331770b,Move tests into correct directory for package.
a0f3d300d556cf83cf6a2a5dee737b89c862770d,Add a BufferedOutputStream that works with ArrayPool to reuse byte[]s.
860f7d041dd00e6032d71ff8483ac2a9d30441ec,"Use the new BufferedOutputStream when encoding Bitmaps.

Deprecates the BitmapEncoder constructor that does not take an
ArrayPool."
35f6a0a43bf8ac645c8c5d0cb82f2936f172f7f9,"Ensure all generated classes are fully nullabilitily annotated (#2789)

* Ensure all generated classes are fully nullability annotated

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
bfa237c19a7d742a4911e2744d174ae82f420ac0,"Add nullability annotations to manager package (#2790)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
9634421cd101efccc7eb613ece85866fb874c760,Include problematic class/method names in annotation processor errors.
1847f4292e3349f06e68dc14d4295fa97c1af671,Merge redundant blocks in parent build.gradle file.
0becb7264e6327371aa6506d8cf1dd1addb6b469,Include full test failure messages in all subproject.
3318c95db9d09d82065a8603d4100f91a814f81d,"Update proguard rules to match the readme.

Also deletes some unused rules for sample projects."
d45956144f72f080675c119a7d21dc1bf6057380,"TearDownGlide in the GifDrawable unit test.

Might help to de-flake a rare failure."
a198ef627d3537d460d2eb5d64d15de1803f0f6c,"Handle RGBA_F16 Bitmaps in Util.getBitmapByteSize.

Fixes #2818."
73277df1debcf894aece03f0d1b2852281c266a5,Avoid converting RGBA_F16 to ARGB_8888 in TransformationUtils.
2cd953c63cf266bae37293ce536de4fb04b8e7e0,Add an in config set for RGBA_F16 in SizeConfigStrategy.
c8d927e2871275ab8f544e218cb53c65d3d54f88,Remove scope annotations from Dagger modules
17e0943fdc9e24ce4f105df53e91c7cdea60edf6,Allow ARGB_8888 to be re-used for RGBA_F16 if size appropriate.
e9f682f9586a68f9322d978dda4856957167ff0b,"Start adding nullability annotations to load package (#2797)

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
9d3a6ff872c0c0d753fd8f37ba0a80d487277d76,"Avoid adding duplicate resource classes.

Avoids an issue where multiple Bitmap.class instances were added to the list resulting in duplicate load paths being created.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=182292756"
c99a5301614d318a5de308f20d32a5af01f0bbef,Fix a lint warning.
0917ef365ea35ca3e0f1eb12a2b7c843c84042f3,"Avoid throwing when decoding Files with DiskCacheStrategy.AUTOMATIC.

AUTOMATIC allows decoding items from the resource cache in case the item
being loaded is local. If the item is remote and the user is requesting
a File however, the resource cache generator will throw an exception
because it’s unable to find any path that will obtain a File from any
Model. I’ve fixed this here by special casing Files and ignoring missing
paths for them in ResourceCacheGenerator so that loads for File types
won’t fail with automatic if they would have otherwise succeed with
DiskCacheStrategy.DATA. I’ve also updated a few of the error messages
to try to make it clearer why a load has failed if it fails for a 
similar reason.

Fixes #2824."
51ae5717610cb3b79b40cc74ada9db1669735828,"Include the debug aar in release artifacts for Android projects.

We removed the release variant a while ago to speed up the build, which
has the side affect of removing the release aar from artifacts. Since
we expect the debug and release variants to be identical (hence why
we disabled the release variant), it should be safe to just use the 
debug aar instead. We will have to specify it explicitly since android’s
rules unsurprisingly only add the release variant by default."
761654c85a3c32fe7712618e1f7082632858ae02,Bump version to 4.6.0
4b26f3d5dc38500ee86a0d2a3581ee92b9f46e8a,"Update readme to 4.6.0

Also removes the old v4 dependency from maven deps, I don’t think it’s
necessary."
430b7aaf4925562ba938bdcad51775c1e56a525d,"Change update_javadocs to use debugJavadocJar instead of release.

We’ve disabled the release variant."
a10361b5417e4d0c735e277386dda337b4f9238d,Bump version to 4.7.0-SNAPSHOT
c63ff574979c6a912a521104630f68e489ec2051,"Add POM dependencies explicitly.

Fixes #2863."
3a3a06108fe5e93ae39b5264ac2376ae889236f4,Bump version to 4.6.1
46c905b9d4bcfef788dac495bdc7eb547dac493c,Update readme to 4.6.1
451adedf60ac7d6799ee07b3dc34ff06ff42a4e8,Fix param mistake (#2873)
fa1b0ff19c4c4f705dff916f543eb9ccaf8cc841,Update SimpleTarget javadoc to match v4 API.
e60c451abd761382558ee116de2acad3236a1a75,"Add javadoc for RequestOptions.apply/RequestBuilder.apply.

Related to #2858."
17c1c3d5781e953379904a60bae08524632e5053,"Add support for Uri data uris.

Previously we only supported data uris if they were provided as Strings.

Fixes #556."
914060e00a9a766017560276a2dd9a42dc9b2874,"Make GlideBuilder.build package private.

It shouldn’t have been made visible and can’t 
safely be used directly outside of the library.

Fixes #2885"
a690f38859ebf5f4f06172060596842a35cc16d8,"Handle notifications in MultiFetcher after cancellation.

We can’t guarantee that every fetcher implementation will strictly avoid
notifying after they’ve been cancelled. 

This also improves the behavior in VolleyStreamFetcher so that it attempts to avoid notifying after cancel, although it still doesn’t make
any strict guarantee.

Fixes #2879"
10e22663732e76edc4c71a0be82dfd35334ac5f5,"Re-enable -Werror for java compilation.

Related to #2886."
41f7400fbf0445438507ef9eaa9f7bf31b8efbdf,Fix a deprecation warning in DataUriTest.
3a7e262fe4c530a86c8064fb5d22a4fb0cc73e84,gradle 4.5.1
29d481ccdc8a0f0d7135359d970de071f73b6922,deprecate fragments
99229725401d5777e059da7b6331134bf73fbcdf,add @deprecated to javadoc and suppress deprecations in code
05e3215ceca003ee295ed373f86e17caa3568c10,"Remove deprecated constructors in BitmapDrawableTransformation

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=184142212"
b68ba436aa8d022fdf906c010fabb0d690f3d18a,"Remove deprecated constructors in GifDrawableTransformation.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=184142291"
2d0bc2de5c86d7f56ca77748733511669f80d32a,"Remove deprecated BitmapTransformation constructor.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=184151152"
7664c826ef2a55c67a4b55fbe61e33203355f2ee,"Create a CachedHashCodeArrayMap subclass to speed up EngineKey hashing.

EngineKey is hashed frequently and caches its own hashCode, however for every request a new EngineKey is created and it rehashes the options and transformations. It's common to cache RequestBuilders for generating multiple requests that have the same options so a handy optimisation is to use an ArrayMap subclass that caches the hashCode to prevent recomputing it every time. This is one of the more expensive atoms in starting a glide request.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=185029279"
428f547d7c8a1229451896413aed575a5b9399ce,"Use ArgumentCaptor and == instead of eq to compare color filters in GifDrawableTest.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=185053507"
c042d110689c9ee025752483a75c6fc3bcff66c1,Fix build errors for CachedHashCodeArrayMap.
d939314e04b26709e7e890ba8f88494551111e23,"Evict oldest half of cache on TRIM_MEMORY_RUNNING_CRITICAL (#2889)

* LruResourceCache: Evict oldest half of cache on TRIM_MEMORY_RUNNING_CRITICAL

* LruBitmapPool: Evict oldest half of cache on TRIM_MEMORY_RUNNING_CRITICAL

* LruArrayPool: Evict oldest half of cache on TRIM_MEMORY_RUNNING_CRITICAL"
97d130d338349220cc8158141bbae1dfda496efe,Support DownsampleStrategy in VideoBitmapDecoder
7d1898e92600a6a2698d72e12ec26c6715fb8fc5,"Set RequestManagers to started if their parent Fragments/Activitys are started.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=185590877"
cd08c4b9615df462584055de5e304c0bf5f945fb,"Revert the synchronization/cancellation changes in MultiModelLoader added to fix #2879

This wasn't well throught through. Avoiding calling callbacks can lead
to resource leaks.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=185931910"
b0c9aecd54f1801e8582fe16f93f3dd725a5c6dd,"Add hardware Bitmap notes to PREFER_ARGB_8888 docs.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=186016913"
53b5147d35b2365e66a8f328081618aeef9b78de,"Add a factory implementation for DiskCacheAdapter.

We're trying to keep people from setting DiskCache implementations
directly on Glide's Builder during initialization because creating
caches often requires reading from Files and other expensive I/O. The
method to set a disk cache is deprecated in favor of one that accepts a
factory. Some people want to disable the disk cache entirely, so they
use DiskCacheAdapter. Without a Factory, it's less obvious how they're
supposed to do so if we remove the deprecated method.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=186049317"
30941656c9fc1617995bbd9451be7c01bd996878,"Fix proguard rules for ImageHeaderParser.

Progress toward #2917."
fbf1ffc7f93841afb00f59d88c02c2770538a933,Update support library version to 27.1.0
a1f5f1008d4e9588ad37acd731d73bd63903440c,"Improved @NonNull annotation check for Kotlin:

Kotlin uses `org.jetbrains.annotations.NotNull` for @NonNull annotation, adding support @NonNull annotation is unnecessary. This commit adds JetBrains NonNull annotation check."
99723e3e7e14eecd908685da630d522e0e304b40,Fix best guess related APT compiler crash with underscore in package name.
5e45539453e386b85ae08c65725fdb71b81538a5,"MOE automated commit.

-------------
Include the debug aar in release artifacts for Android projects.

We removed the release variant a while ago to speed up the build, which
has the side affect of removing the release aar from artifacts. Since
we expect the debug and release variants to be identical (hence why
we disabled the release variant), it should be safe to just use the
debug aar instead. We will have to specify it explicitly since android’s
rules unsurprisingly only add the release variant by default.

-------------
Bump version to 4.6.0

-------------
Update readme to 4.6.0

Also removes the old v4 dependency from maven deps, I don’t think it’s
necessary.

-------------
Change update_javadocs to use debugJavadocJar instead of release.

We’ve disabled the release variant.

-------------
Bump version to 4.7.0-SNAPSHOT

-------------
Add POM dependencies explicitly.

Fixes #2863.

-------------
Bump version to 4.6.1

-------------
Update readme to 4.6.1

-------------
Fix param mistake (#2873)

-------------
Update SimpleTarget javadoc to match v4 API.

-------------
Add javadoc for RequestOptions.apply/RequestBuilder.apply.

Related to #2858.

-------------
Add support for Uri data uris.

Previously we only supported data uris if they were provided as Strings.

Fixes #556.

-------------
Make GlideBuilder.build package private.

It shouldn’t have been made visible and can’t
safely be used directly outside of the library.

Fixes #2885

-------------
Handle notifications in MultiFetcher after cancellation.

We can’t guarantee that every fetcher implementation will strictly avoid
notifying after they’ve been cancelled.

This also improves the behavior in VolleyStreamFetcher so that it attempts to avoid notifying after cancel, although it still doesn’t make
any strict guarantee.

Fixes #2879

-------------
Re-enable -Werror for java compilation.

Related to #2886.

-------------
Fix a deprecation warning in DataUriTest.

-------------
gradle 4.5.1

-------------
deprecate fragments

-------------
add @deprecated to javadoc and suppress deprecations in code

-------------
Created by MOE: https://github.com/google/moe

MOE_MIGRATED_REVID=99229725401d5777e059da7b6331134bf73fbcdf

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=185535564"
7ff3bdeed52d6047e8e9f879ccb3f67afe50fa2d,"Reduce the overhead of Engine log statements.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=187506205"
7fecca97c2b6b087580bd395778651239509ce3d,"Include key in DecodeJob systrace tag.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=187541996"
1937b055db40557206cb7ea8499c37e43d9ec22f,"Remove deprecated ComponentCallbacks methods in RequestManager

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=187624368"
d7635bda9105dbeb27ed8a3fbda69832396960f5,"Minor optimization to avoid calling currentTimeMillis when not logging.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=187644617"
b2eb35db07cee692e6e6e7b16e2ea968b959f531,"Remove deprecated methods from GlideBuilder.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=187914170"
84178369d1782b788e9d66f3ef6a5453a2314160,Fix a lint error in GlideTrace.
86f327664c456360dc1d3f403e88c62059561969,Update Gradle wrapper to 4.6 (#2935)
c28837be99c52160d96efbdaca7e13b51a7ea085,"Updated documentation (#2936)

As into(int,int) is depreacted too, suggest to use submit (which the method itself does too)"
7427a493fa23d95f5e00853f78c40c43a50b8a56,Avoid expensive synchronization in MultiModelLoader and work around caching bug.
dd7fe186e0eb4ea2b17f8611317a2714b81ff03b,Fix don't start preload on open RecyclerView (without user intract) (#2996)
5212e953ff8fb0db390214eafb5a89b826884142,Respect theme when loading Drawables while AppCompat is present (#2999)
58bcf53681e8944add93c8680578fa7fdd617785,"Give generated code meaningful parameter names (#2970)

* Give generated code meaningful parameter names

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
6eb094cd38215b8604b4bee8b8dd9250c7b032dc,"Remove out of date documentation in ViewTarget

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=189932831"
f508d7cce947a8075806e088e798cfb6593647b0,"Fall back to decoding resources from other packages directly.

AppCompat tries to use internal resources to determine whether or not it's capable of decoding vector graphics. The ids of those resources will change across different versions of the support library. If the versions of the support library in the two apps don't match, there might be an id mismatch, which leads to an error. In some cases we can decode the resource anyway by bypassing the support library entirely.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=190825442"
6f5ff7059d85d22f41cc6e4c6bc6e4dca76ce654,Remove trailing space in ViewTarget
6e932b374e3f3b87a5f105f27f89767e82d68129,Fix a few errors in the BitmapTransformation javadoc.
7fb8b1258a3aabbedad3b8d15f59c8091498160a,Fix swapped pixels in GifDecoder's output (#3002)
418f73c513a0d62724c536dcfe6107dbd9495b6f,Update support library version to 27.1.1
f36ac461db69a3aa7a2938bce3adeb1d2c7a8034,Bump version to 4.7.0
af81b868940ad280f4997b8db1e460a7d7784ba3,Update README version to 4.7.0
3798ec51965dd6d2e394adf2d504061ad253a48e,Bump version to 4.8.0-SNAPSHOT
6ea67b6b3e634759c8b81c2c5f26487709c4c267,Bump version to 4.7.1
e170581de673da0e8d65fe02c4fd0b0b5252e1b9,Set README version to 4.7.1.
62fa26c4054d4a551895a8cece2b18547368ad0c,Bump version to 4.8.0-SNAPSHOT
a683e04d4bb794f82401abd2abfe975f664e2590,Remove unused changelog.
93289994a4ba59c6251aad0ccdf332c0d758d9c7,"Support multiple listeners in a Glide request.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=191378721"
a3f8114d015be983d365410fa0655de95fb80fef,"Use ExifInterface to parse orientation data on OMR1+ in Glide.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=192690571"
bc22b02612260ead6991558690286b25d698cfa3,"Automated g4 rollback of changelist 192690571.

*** Reason for rollback ***

b/78110139

*** Original change description ***

Use ExifInterface to parse orientation data on OMR1+ in Glide.

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=193431565"
9fdb786eed3ce716070b9b960fc34a9c31c57b38,"Rollforward [] with fix for b/78110139.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=193438586"
633b6f838677ede49b3b57761e4cf9ab00fa71f0,Fix build errors in SingleRequestTest/ExifInterfaceImageHeaderParser.
11a83f854ccce157f3e7c8700bc2a369239945aa,Update annotation tests to support addListener method.
ff463d779ef8bccffc224e3647dbaf6dbc27fd57,"Avoid calling UriLoader with unsupported schemes from StringLoader.

Related to #2894."
d2d5c4e473505ef3b8d7f391f4749ed3236c72aa,"Explain how to obtain Contexts in ModelLoaderFactory

Fixes #3061."
1b7c4295d679d499ae7de979b63ab5907979018e,Remove deprecated ExpectedException calls.
1b5769ecc161f2b906bc2d82be623e511f53937f,Disable API 21/22 travis emulators
5ce19a667442c83aa608c22fd42761b9fbbd42fc,"Replace http://errorprone.info with https://errorprone.info since that site
serves from https now

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=195673007"
2dccb5c2fb265cbfa67b328cea30e922c67feb9e,"Override placeholder/error/fallback equivalents when id or drawable is set.

Glide will always check for a placeholder/error/fallback drawable first
and only check the id equivalents if the drawable is null. Previously,
when setting a placeholder/errror/fallback id on a RequestOptiosn
object, we did not unset the drawable equivalents. As a result, it
wasn't previously possible to replace a placeholder/error/fallback
drawable by setting the equivalent id.

After this change any calls to placeholder/error/fallback will always
replace previous calls, regardless of whether and id or drawable is
provided.

Fixes #3068.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=195990546"
0aa75aef353f9ee9569c12a86c18733f7520e46d,"Automated g4 rollback of changelist 197961403.

*** Reason for rollback ***

Rollforward with fix for b/80259796

*** Original change description ***

Automated g4 rollback of changelist 197922991.

*** Reason for rollback ***

b/80259796

*** Original change description ***

Default hardware bitmaps to off via the Downsampler option.

Right now we default hardware Bitmaps to off via a deprecated DecodeFormat enum value. We want to remove the deprecated DecodeFormat. Moving the default off state for hardware Bitmaps into the non-deprecated option will let us complete that migration without also defaulting hardware bitmaps to on.

Hopefully in...

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=198089173"
afeb674b6db45fc45d0383a743d07d2b869b8c18,Clean up some redundant code in AsFilesTest.
a55e935eba859b9ea4f6e4357b8ac4e7e4a8327f,"Pause requests when they’re started while the RequestManager is paused.

Pausing the request allows Glide to show a placeholder without starting the request."
c441d83d7aa3f010ca85b9ec0a3d37844f19afe2,Avoid asserting that Android can decode hardware Bitmaps for wide gamut images.
4c8a7b5914f811d0e72d6835fbb5b3eee927ff5f,Fix typo in Javadoc (#3136)
c3328fe63214c0aedefca3d5496bb222a2fd29ef,Add Android X support to the annotation processor. (#3139)
7eb59f7f217adc7b0e017d586ea0814bf75c53d0,"Remove deprecated DISALLOW_HARDWARE DecodeFormat.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=198569187"
76fe2bd1ba1a8abb0409f20f7522de4243592c17,"Fix typo in ALLOW_HARDWARE_CONFIG name

The name is only used for in memory cache keys so changing it is safe.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=198598261"
5ff120cc46ce4997d22c1e12189d552a4b4bd241,"Default allow hardware config to true in Glide for P+

For more information on hardware Bitmaps, see []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=198730947"
8487ab7988b731da684c279f6ef235c8b052db23,"Automated g4 rollback of changelist 198730947.

*** Reason for rollback ***

b/80539264

*** Original change description ***

Default allow hardware config to true in Glide for P+

For more information on hardware Bitmaps, see []

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=198772333"
386d89e4b7ba0fee92a9b9421bae2308ec9c9f2b,"Do not require clearing Drawables in Target#onLoadStarted.

It's no longer necessary, the Target is always cleared first whenever a completed load might be present.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=199811222"
9089752d2a4f4ccd6e7a6a7bbf7ea85db3f0949b,"Remove pause() and isPaused() from Request API

Various other changes allowing Requests to restart have removed the
assertion that cleared requests are never restarted. There doesn't seem
to be any need currently to distinguish between a request that's cleared
by a call to Glide.with().clear() and a request that's cleared by Glide.
We can simplify the API and reduce confusion by just calling clear()
directly and removing pause() entirely.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=201439855"
4ca13a0d473c275d83ec5a38e89a5beeb0ed754c,"Removes Math.round() call when the argument is an integer or a long.

Math.round() called with an integer or long type can result in loss of information because it coerces the argument to a float before rounding back to an int.

If this CL introduces an explicit saturated cast from long to int, you may want to remove the cast if it wasn't desired. If so, please make a suggestion to remove the cast in this CL.

NOTE: Review carefully. If the original code contained the pattern Math.round(a/b), there's a good chance the original author wanted a floating-point division with round-to-nearest instead of the integer division with round-to-zero that they got.

This an automated fix using Error Prone ([] We intend to make this a compilation error in Blaze's Java compiler, so it is necessary to fix existing occurrences first to avoid breaking builds.

More information: ​[]

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=201592824"
ad33b8d503024c8a3a6a3da60ce28c4d7732ae58,Fix a couple of merge issues in RequestTracker.pause removal.
b7c2b1360c777794c50351a10c30c08a3390b753,Update documentation for BitmapPool#getDirty (#3160)
3a7060777d17fa4d9ca2b68b019fd2d448f54ea6,"Create a CustomViewTarget to replace ViewTarget.

The two main differences are:
- It forces you to override the method where resources must be cleared. Not doing so results in recycled bitmaps being used and crashing apps. Not doing so was a common pattern among developers optimizing for lines of code instead of correctness.
- No more setTag(object) use. Glide now targets 14+ which can safely use the id tag variant and avoid another class of runtime bugs caused by developers optimizing for lines of code instead of correctness by calling setTag() and overwriting Glide's data.

Finally, we deprecate ViewTarget, SimpleTarget and BaseTarget. Apps should primarily be using Target, CustomViewTarget, ImageViewTarget and FutureTarget which either force the developer to implement all necessary methods, properly implement them themselves, or will not attempt to reclaim bitmaps. The deprecated classes continue to be used internally by some of the ""correct"" classes but can be merged down once the deprecated APIs are able to be removed.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=201729878"
c4b08d4689b746c524c5e31cf723f8976a7173ac,"Replace references to android.support.test with androidx.test.

The Android Test Support Library is being renamed to AndroidX Test, with its root java namespace changing from android.support.test to androidx.test.
And code location changing from tp/android/android_test_support to tp/android/androidx_test.

More information: []

TAP global presubmit: []

BUG:
79205333

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=202796842"
229cb11e2fd984939d9abde4071b858a1f24f6b6,"[third_party] Avoid saving Robolectric shadow instances; instead, save the real framework object, and get its shadow when needed using Shadows.shadowOf(). Call Android framework methods directly on the framework object instead of its shadow whenever possible.

LSC: []
Additional details: []

Cleanup change automatically generated by javacflume/refactory
Refactoring: //third_party/java_src/robolectric/errorprone:ShadowUsageCheck

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=204784445"
62e6c11e6e4e4d0cf5f4c380219fe10129bb2694,"A couple tweaks to ModelLoaderRegistry to improve potential contention.

1) Synchronize only the inner method that accesses the cache, as the outer call
that loops and filters the loaders appears to not have threading issues.
2) Probably less of an impact since I imagine the loops are generally small,
but only allocate an ArrayList once you find a matching loader, and allocate it
with size - i which is the max possible remaining in the loop, rather than
always allocating it to size.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=205877123"
d861c67cbeffb4f0c6222f2c10ffe8d61736f524,"Cleanup preparing for []
ShadowDrawable.equals() is being removed in cases where possible I migrated to ShadowDrawable.getCreatedFromResourceId(). In other cases this was not possible and the existing equality check was returning a false positive because the comparison, intrinsic height, width and bounds were all uninitialized.

PSA: [] for unit tests that are ~25% faster, higher fidelity + simpler configuration

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=206187349"
0c73d1c4c7dc483a38008b8d7ca0e5238ceaca6c,"Fix various build issues.

The only significant change is moving CustomViewTargetTest into the
library project and out of the test project. This appears to be
necessary to work around issues with transitive resource dependencies
across libraries. Hopefully we can find a better fix in the future."
38cf86168015f6dd4d9df370f74305a1bbc2dd1a,Add android dependencies to instrumentation.
9c1652ca86e9015743153ade3e720a0009130875,Add InstrumentationRegistry to workaround Mockito/androidx incompatibility.
a50a7512ec7a99d4b3d8c1a2df9d8af48aa543cc,Update Android Gradle versions.
914996cac11108ec1a02c21a10af53ebc4980d7f,Bump version to 4.8.0
8de973f4702fa813fcb0d1e2ae621df5d3aa3cc5,Change README version to 4.8.0
33d698d0dedfbd287d66642ada44b182b28294f4,Bump version to 4.9.0-SNAPSHOT
a9e1ae2e3a59e9a77a0fb3d9105fbeac96343a15,"Add back assertion on empty resource classes in ResourceCacheGenerator

Currently we're failing to load some images that are present in cache
due to a race condition. I haven't had any luck looking through the code
to see why this happens. I suspect a race of some sort. I'm hoping that
adding the exception back in with additional logging will help me move
forward.

I'm also hoping that this change avoids the worst of the behavior in the
bug by failing only one request, rather than all requests. I may
actually have to revert back to failing all requests if I can detect via
ecatcher that this exception happens but no one reports it.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=209077692"
37127f0f817d4a11dfdcc447946397b5288de593,"Add global/activity/fragment scoped RequestListener API to Glide.

After this change, callers will be able to add one or more
RequestListeners either to all requests started with Glide, or to all
requests started within a particular Activity or Fragment.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=209947609"
d18e5e8595daff24356fa4fe36833cc8bfc7ca46,"Automated g4 rollback of changelist 209077692.

*** Reason for rollback ***

All requests still end up failing.

*** Original change description ***

Add back assertion on empty resource classes in ResourceCacheGenerator

Currently we're failing to load some images that are present in cache
due to a race condition. I haven't had any luck looking through the code
to see why this happens. I suspect a race of some sort. I'm hoping that
adding the exception back in with additional logging will help me move
forward.

I'm also hoping that this change avoids the worst of the behavior in the
bug by failing only one request, rather than all requests....

***

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=210027336"
cad83d2988c569ef5c22811c59886588814b4c6c,"Include Transcode class in cache key for cached resource classes.

We've avoided returning resource classes that can't possible be
transcoded to our expected transcode class to avoid uselessly decoding
and then throwing out an unusable resource. Unfortunately when that
optimization was implemented we didn't change the cache key used to keep
track of the set of available resource classes, so the set of resources
for two different transcode class requests could have the same cache key
but different contents. As a result we introduced a race where a smaller
than accurate (or even empty) set of resource classes could be returned
if the first call to getRegisteredResourceClasses used the same Model
and Resource class, but a different and less available trascode class.

This change includes the transcode class in the cache key so that we
stop incorrectly sharing cache keys across different resource class
sets.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=210131660"
64adebd766cd6aa97ee95861c52a80e0578491d3,"Re-add empty resource class assertion to ResourceCacheGenerator

b/73882030 is now fixed.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=210140993"
092e0624054db5cf00b32dea2da459df90f13b11,"Fix build inconsistencies from MOE import.

Java 7/8 compilation error in GlideContextTest.
Annotation test updates for default RequestListeners.
PMD error about overridable method in RequestBuilder constructor."
ed20643fb94d4e17f4cdb3699a6d83621408dd34,"Directly include RequestOptions in ReqestBuilder using CRGP

https://www.artima.com/weblogs/viewpost.jsp?thread=133275

This means that you can write:

Glide.with(context)
  .load(url)
  .placeholder(R.drawable.placeholder)
  .into(imageView);

Instead of:

Glide.with(contex)
  .apply(placeholderOf(R.drawable.placeholder)
  .into(imageView);

Without using the generated API.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=211640993"
87881988c19cac066599cff5ee2ec6d2645093d6,Fix annotation processor overrides/tests and remove legacy support.
e7965ed1a738c65357b113303e596d78d4404b77,"Remove applyInternal in RequestBuilder.

applyInternal doesn't buy us anything and strictly adds complication."
ebb0e45d42709338ffc8de0d58e48c992af2d372,Make Giphy models implement equals/hashcode for in memory caching
b4562903cd09cd8bd95c1962867d166b9d2eec18,"Remove memegen-android-team from presubmit notifications.

We appreciate being int he check_tests, but we don't really have an opinion on the CLs in general.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=212715499"
b3b2d7aa84a5beb8eddea39f2ec0e8ba35ceaa20,"Add a CustomTarget class

Extending Target directly requires implementing some not totally trivial
boilerplate logic in set/getRequest and getSize. This class does not
implement onLoadCleared, and should provide an implementation safer than
BaseTarget and SimpleTarget, but more convenient than just the Target
interface. See #3304 for an example request for this class.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=212743879"
2ca790afa86279645bd7d84a3d5d273b5992f2f4,"Avoid new ArrayList(collection) in Registry

Fixes https://github.com/bumptech/glide/issues/3296

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=213286385"
38dc42d4995a2320f95b2ced390c45545ad7bc90,"Avoid API 28 gradle dependency warnings.

Typically users don't want to upgrade until at least the sources are
released."
00bae3a41e3017d316ae56481fd2fc17eda2272c,Fix the annotation compiler test imports.
b57ef348d1b18621d7a2e6026f1adf5afa072561,"Support loading resources from dynamic modules (#3308)

* Support loading resources from dynamic modules

* Try creating child context first before defaulting to parent

* Fix small nit

Signed-off-by: Alex Saveau <saveau.alexandre@gmail.com>"
67825410ada908e7cf4eba134af33877b8cf69b0,Fix an incorrect reference in RequestListener's javadoc. (#3352)
8a26a6b8d93cc629d423a316b1838b841e672099,Updated BaseRequestOptions.transform api (update for issue #2875) (#3365)
f7d860412f061e059aa84a42f2563a01ac8c303b,Make ProGuard rules consumable (#3375)
d6345fbbf19f9eb8434587f76a5c38e2232149cf,Add nullability annotations to LazyHeaders.Builder functions (#3446)
1878585429e0579bfd1c2ca8af12a831fb23903d,"Add BitmapTransformation to rotate the image (#3444)

* Added BitmapTransformation for rotation

* Improved override methods"
c147f4668f067960d92cbd7fc753b3148ed5253c,"[glide] Avoid saving or passing around Robolectric shadow instances; instead, use the real framework object, and get its shadow when needed using Shadows.shadowOf(). Call Android framework methods directly on the framework object instead of its shadow whenever possible.

LSC: []
Additional details: []

Cleanup change automatically generated by javacflume/refactory
Refactoring: //third_party/java_src/robolectric/errorprone:ShadowUsageCheck

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=215614057"
3c9f92f6eb4c212a27abb46079f1b33ee927850d,"Add more robust cancellation support to MultiModelLoader.

There's a race described in https://github.com/bumptech/glide/issues/3343 where a child DataFetcher can call the MultiModelLoader after it has been cancelled, which can result in us unnecessarily starting a new load. Although we should probably also change the fetcher to avoid calling its callback after it's cancelled, we can make this behavior less of a problem in general by changing MultiModelLoader instead of relying on every individual DataFetcher implementation.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=216546841"
9a5d1f19dc9c1007a18d90af4dd972836b13bce1,Fix trailing whitespace in MultiModelLoader.
a03ca14f47a11a268e5d4254c6a9082341990c5d,Update Robolectric and Android Gradle deps.
be51b4ebb77d2dba6df5df9a5761496d31626c92,"Use the requested config, not the previous config in SizeConfigStrategy.

Previously we'd use the config of the Bitmap that we happened to pull
from the pool instead of the config we'd requested. This isn't
frequently an issue because we only allow cross config re-use in a few
cases and we also need a size match. However, it's clearly incorrect to
ignore the requested config and can cause crashes.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=217896479"
e515f4781ec508671f21263f4de29e49e3f96945,"Retain the hasAlphaBit when rotating images in TransformationUtils.

This fixes a bug where camera images written with non-zero exif
orientations are cached in Glide's disk cache as slower PNGs instead of
JPEGs. Camera images without exif orientaiton or with 0 values for the
exif orientation are unaffected.

Images with exif orientations are always rotated by Downsampler using
this method when they're decoded. The modified method writes the rotated
image into a Bitmap acquired from the BitmapPool. Bitmaps in the pool
default to having hasAlpha true because it's safer to retain
transparency than not. The modified method previously did not update the
newly obtained bitmap's hasAlpha flag with the value from the unrotated
original. As a result, every image with exif orientation ended up in a
bitmap with the hasAlpha flag set to true. In turn, BitmapEncoder would
write all of these images to disk as PNGs because it assumes images with
hasAlpha set to true might have transparency. Writing and reading PNGs
is much slower than writing/reading JPEGs in general, so this causes a
performance issue for Camera images, which, as a rule, do not have
transparency (and have hasAlpha set to false).

To avoid the performance hit, this change sets the hasAlpha flag on
rotated Bitmaps based on the value from the original unmodified Bitmap.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=218380242"
114b885f1deed1cd4da493e50c15235da59b5fce,"Add API to Glide to include request origins when Glide requests fail.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=219699654"
8ff103ae66e247706912e4929252489ee254e237,"Include better request origins for Glide requests started on background threads.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=220193320"
6a1c79590990c7c583dbee775e6b6a46524663d7,"Migrate from AndroidSupportInjectionModule to AndroidInjectionModule.

The support module currently has no practical functionality and will soon be removed

Tested:
    TAP --sample for global presubmit queue
    []

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=220377791"
617edc34757ff43807548e64a394eeb1df115db9,"Bitmap.compress() actually writes the image to the stream in the right format rather than just text description. Note: Tests checking this text description will be broken (looks like 2-3 internally)

Fixes: https://github.com/robolectric/robolectric/issues/4028

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=221796274"
8f1ea5c07dff7ade8c49c324bcb5a7f40d0b4891,"Allow starting requests on background threads without posting to the main thread.

-------------
Avoid posting to the main thread when clearing in RequestFutureTarget.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=221803963"
503abebdd9e9d5938cb463e3388ed47c6bf28f44,"Convert Glide unit tests to android_local_test.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=222872275"
2fe677685f41cb14e0f7639629ce214565484bce,"Fix a slew of bugs around XMP in the editor.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=223037933"
081b905e281d9568a458f1e900dc6d24ea1c9bf3,"Note the thread RequestListeners will be called back on in the javadoc.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=223046288"
be28a4d2bf3f4552d4cf6a5463e105f0368d17c2,"Add a couple of missing locks to Glide.

Little confidence that this fixes the associated bug, but at least the
SingleRequest pool is clearly a problem as written.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=224017191"
e2df4d068840ea04b9e448347f062b964eb0b0b7,"Fix handling of system and type/name resource Uris.

-------------
Fix some broken javadoc.

-------------
Created by MOE: https://github.com/google/moe

MOE_MIGRATED_REVID=7b95ebeab7e0f80dda2ad89fb77c342f20cf3980

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=224180751"
824cd2e6709e37335b495e702c34cc6f3aa73050,"...Androidx Migration...

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=225886550"
c528928503acfa57d353a62cc64c3d7fc0717d10,"Make Bitmap encoding tests more useful.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=226077435"
c33d28eb62b62a54b633296580f690e7352f8f14,"Eliminate some duplicate code in EngineJob and simplify removing Callbacks.

Ignored callbacks used to be necessary because we needed to avoid
ConcurrentModificationExceptions while iterating over the list that we
were modifying. Now we're iterating over a copy of the callbacks list,
so we don't need to worry about concurrent modifications. As a result we
can just directly remove the callback from the callbacks list and not
keep any separate set of ignored callbacks.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=226087181"
d2b2742c35ec572b3b683ef6baa9eefcc9326acc,"Ensure that EngineJobs are cancelled and removed from Engine's Job set atomically.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=226088532"
eaf720e934d8d71ed34c5bffb32cd4e72ff90495,"Fix locks and add lock annotations in RequestManager.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=226105246"
f083d87409d13e1db2081a8156816441fe7e5830,Fix various build issues.
c162dba708c010a651c4e7ad13190ba048bd3dcd,"Handle preloading with empty data in Gallery sample app.

Fixes #3457"
c03564af9bf54d401cf132c0a6157dbee1383b4d,Remove unnecessary ignores from Bitmap based tests.
a150301a7f5b157821b7ec5273f86c6d54e2b75d,Added listener to notify loop completion of a gif (#3438)
b56dbabde3abeb5ed1c232a3f6b17a4a0af0b7e2,Accept sdk 28 licenses on Travis.
a16a1baa140c9b87b9a68a2a3b91047fd60ba5d8,Support incremental annotation processing (#3508)
92d8cc401aedab8118a3b91763c029be66588222,"Fix a deadlock in EngineResource/Engine.

Engine acquires it's lock, then the EngineResource lock when it loads
resources from cache or active resources. EngineResource acquires its
lock, then the EngineLock, when a resource is cleared. This conflicting
lock order leads to deadlock.

The fix is similar to the fix applied in ActiveResources. We always make
sure that the Engine (listener) lock is acquired before the
EngineResource lock.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=233861929"
d8cc530d15ed86c1a6d9238806903cca5dd56f72,Exclude synchronization warning in EngineResource caused by deadlock avoidance.
3035749168c8a4187cf3a51d19a6aee3bc5958d1,Bump version to 4.9.0
60af52dccda3ea7f9a14a437e5e7054eb37aadda,Update README.md to 4.9.0
52cce3be9ba466cd0304acd8043306d0641d9e17,Bump version to 4.10.0-SNAPSHOT
7bb6f11c43c245a4e150d93d293a40c75fe99796,fix the unused animationExecutor in GlideBuilder (#3525)
f3fafcd3cb93e384263434b19e72ad926c249188,* update okhttp library from 3.9.1 to 3.12.1 (#3537)
842d3d2e7f8ef58e01d908a17f2a0a2760b8d769,Update Gradle to 4.10.1
6b9c00de0816ffcf7fad77b3034db1fb0bca46df,"Add a better error when v3 and v4 modules are used in the same app.

Better documentation for #2994."
d77c0cb3ce910b0df8bcc94ac15ed2404b2b4fed,"Wait for a post to complete before starting failing request in DrawableTransformationTest.

Fixes #3551."
9c48b48eb17d8d1c005352730d66d0dc85da5efe,"Catch/ignore SecurityException opening MediaStore thumbnails.

A Uri permission grant for a MediaStore Uri will only grant access to the main Uri, not the thumbnail Uri. Applications that have only Uri permissions and not the storage runtime permissions will receive a SecurityException when they try to open the corresponding thumbnail. 

Prior to this change, the thumbnail exception would cause the entire
request to fail. After this change only the thumbnail portion of the request will fail so the image may still be loaded via the original MediaStore Uri. 

Fixes #3504."
c6ffb0460de4a5b51db5b2f9fd5c0b697cb51486,"Remove IntRange in RequestOptions.overrideOf.

It’s not possible to whitelist Target.SIZE_ORIGINAL, so the range doesn’t make sense. A long term answer might be to use SIZE_ORIGINAL to be Int.MAX_VALUE instead, but in the short term the annotation is incorrect and not present in the non-static versions of the method.

Fixes #3443."
53438b90f982d27652c2bae7cd9daf9be8d5a03a,"Require ResourceListener in the constructor of EngineResource

ResourceListener is supposed to be effectively final in EngineResource.
It was only passed into a separate method to reduce the number of pass
throughs. Since we're now loading resources on multiple threads, it's no
longer trivially safe to call an additional method to set the listener.

Specifically there's a race where the EngineJob exposes the Resource to
any new requests for the same image before the Engine has a chance to
set the ResourceListener on the EngineResource. The locking to fix this
is complicated and would require holding multiple locks simultaneously.
Instead this cl moves the ResourceListener into the EngineResource
constructor and performs the necessary pass throughs to make that
happen. Ideally this is safer and more performant than adjusting the
locking.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=234844998"
29c553df470401211dd080c2b3c8b69916e7ea25,"Fix GifDecoder with PREFER_RGB_565

With the previous implementation, isFirstFrameTransparent would never be set because previousFrame is always null when framePointer == 0. And even if it is set, it will be set back to false later.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=236478315"
d07af89ae41c309f53a7c1afc0e20b61f1eb5250,"Halve the number of hardware bitmaps we use on Samsung Galaxy S7 Edge devices.

There's some issue that appears to affect these device models. I don't
have a complete list, but the top 5 are all variations of S7 edge and
make up more than 75% of the crashes we've received so far.

Ideally this would be done as an experiment, but there's no reasonable
way to make that change in Glide without piping through additional APIs,
so this seems like a reasonable first step.

-------------
Created by MOE: https://github.com/google/moe
MOE_MIGRATED_REVID=236923829"
4b26d774fa4c5d6b5332c732a51a92eaeb1ee8b9,Fix formatting issues in build.
fbd31f41d164c3b93248556d2601da33d13f2c30,"CustomTarget javadoc is incorrect (#3583)

`isValidDimensions` implementation enforces that width and height must be `> 0` or `== Target.SIZE_ORIGINAL`"
0644002a25f0840ce504c89ff09eacee67bc4398,Fix a typo in SimpleTarget deprecation warning.
f8cafb3010795b94e982866ed0699e6fcf2d51ae,Move VisibleForTesting generation into ProcessorUtil
fa7cb2f52d388497411204419bdb88006f1b0e17,MOE automated commit.
87f0340c6d41516da442a8ba764edfe3df9b43cd,"Remove API 19 emulator tests, it seems to be not working."
342b5faae9451f7c609cf83269cddc3a5d170e83,Avoid using deprecated SimpleTarget.
ad0255084fe1d7fde9b3ada6d4d5d80059df1362,"Use Glide’s tag id and deprecate ViewTarget’s setTag method.

This makes CustomViewTarget and ViewTarget interoperable. Setting a
global view tag shouldn’t be useful either now that we can include our
own resources. Back when we could only ship jars, it let callers avoid
conflicts with other tags, but unless someone re-uses Glide’s tag
resource id, that should no longer happen."
312c993b3e81735e543d3961d12a12cefa8c304a,Remove some usages of deprecated ViewTarget.
ac2598897ee222be192c54b00bc6b805d3ffa0ef,"Use hasSourceEquivalentTo for compiler tests.

This should be resistant to whitespace differences, which will help us handle version differences of javapoet in the Google build vs the GitHub build.

I also had to update the regenerate resources rule since the new method throws a very generic AssertionError that doesn’t provide a simple way to extract the expected source easily."
a35037cfcfee8323a4b289d39927a3c6a48ccdd7,"Skip java.lang imports in generated classes.

This matches the behavior of newer versions of javapoet used in the Google build."
c375a2fbf594bdf422c45a1395a65823141a8bd5,"Auto format files to match google’s style guide.

The Spotless plugin will do this automatically, but it needs to wait
until we can make Copybara use the same style when exporting. For now
there may be minor differences, particularly in import order for
android support library and androidx classes."
8f8a1600826fd042abae9251cbad063dee5144b2,"Revert ""Auto format files to match google’s style guide.""

This reverts commit c375a2fbf594bdf422c45a1395a65823141a8bd5."
0dcc33fe6957657b910484599c499430cdf3461c,Reformat all files excluding third_party.
c19ecf23ab665e0988436817ef4d15c043a0544e,"Move disklrucache out of a submodule.

It’s effectively Glide specific at this point and having it as a 
separate submodule complicates migrating changes."
7b9ab9c495dd8e1bd05e433e5cd78c15267ce523,Move exif-orientation-examples out of submodule to ease code migrations.
75a5eade8bf5bd1c447922fdcf483d47382ca917,"Remove hyphens from exif samples, move readme to appropriate place."
65fb4c01167a8b77416a4ff0f2d85e56c7d8c177,"Project import generated by Copybara.

PiperOrigin-RevId: 249918201"
4b799334b65d1a08124cdd3f5d5211a3fb119a6d,"Migrate test targets from aapt to aapt2.

This will standardize Google on a single Android asset packaging tool (go/aapt2) which will:
- reduce the size of Android apps
- speed up build times
- simplify maintenance

For more information: go/aapt2aapt2-lsc

Tested:
    tap_presubmit: http://test/OCL:249549522:BASE:250181077:1559010997744:421c69bb
    Some tests failed; test failures are believed to be unrelated to this CL
PiperOrigin-RevId: 250313303"
8dd10672ca52a0f0733c2ef1600df615ffe6cf19,"Convert disklrucache to use Android gradle rules.

PiperOrigin-RevId: 250340200"
bd6aa36c7473e35837401eb162a5cb532193b7e5,"Disable travis tests except for unit tests + samples.

All tests are running internally already and travis is especially slow to run.

PiperOrigin-RevId: 250571374"
cb22ae2c5c7da9d93cfc252a76c6bd2776b6bf55,"Remove failing ActiveResourcesTests.

These tests can't reliably pass because they rely on the behavior of
WeakReferences which are documented as being inconsistent. In particular
we can't really simulate an item being added to the reference queue, but
not yet cleared by the system. We can simulate the end state, but not
the intermediate state.

PiperOrigin-RevId: 250577546"
1be3a6c94f032111ff666427f3bcae84d91e1c04,"Remove apache/fest dependencies in dislrucache tests.

PiperOrigin-RevId: 250595542"
d8278f43a94484f20822170b71ac7b66269a2aa6,"Migrate Glide to androidx

PiperOrigin-RevId: 250772542"
9c3eb026ae7fcdeaf5aea403763ccc4407a915d9,Remove unused DecodeFormat parameter in HardwareConfigState.
168ef64ac64c48e18d5cabcd8d183ed98c7e5855,Update name used to monitor the number of FDs in HardwareConfigState.
63a257108269a0639f6238f78f68932b10e53f18,Update name used to monitor the number of FDs in HardwareConfigState.
f0d843ba7adc12fbb1bfb6bb3be94b3f300f863a,"Merge pull request #3682 from sjudd:disable_hardware_bitmaps_samsung

PiperOrigin-RevId: 250798154"
f112fa981c7016678692aa7429e8c46d4cc18369,"Avoid syncing out AndroidManifest for Glide's instrumentation tests.

PiperOrigin-RevId: 250802871"
5e89210fdda149095f77690e88d3255dcd8f99b7,"Automated g4 rollback of changelist 250798154.

*** Reason for rollback ***

Doesn't handle Build.MODEL with lengths < 7

*** Original change description ***

BEGIN_PUBLIC
Copybara import of the project:

  - 9c3eb026ae7fcdeaf5aea403763ccc4407a915d9 Remove unused DecodeFormat parameter in HardwareConfigSta... by Sam Judd <judds@google.com>
  - 168ef64ac64c48e18d5cabcd8d183ed98c7e5855 Update name used to monitor the number of FDs in Hardware... by Sam Judd <judds@google.com>
  - 63a257108269a0639f6238f78f68932b10e53f18 Update name used to monitor the number of FDs in Hardware... by Sam Judd <judds@google.com>
  - ead750489404eede0e7cdc424d3e26ca8166419...

***

PiperOrigin-RevId: 250816270"
6d833d9bad63c92fc77da1997c278ac415b199cb,"Automated g4 rollback of changelist 250816270.

*** Reason for rollback ***

Rollforward with fix

*** Original change description ***

Automated g4 rollback of changelist 250798154.

*** Reason for rollback ***

Doesn't handle Build.MODEL with lengths < 7

*** Original change description ***

Disable hardware bitmaps for certain Samsung devices

***

PiperOrigin-RevId: 250943789"
41877c651042f35ce8bf1d3679cb21c86121261e,"Add orientations to DownsamplerEmulatorTest.

Android’s ExifInterface only supports writing orientations to JPEGs, so
for now that’s all I’m starting with. We should investigate other open
source image writers and considering using one that supports other 
formats.

Related to #3673, but not sufficient because there’s clearly a bug but 
all tests here still pass."
ebdf8beb59df8d62c0a978ad967098dae8f666cf,"Always use orientation corrected sizes in Downsampler#calculateScaling.

Previously we were sometimes using the rotated size and sometimes using
the original size. As a result, some combinations of width, height and
exif orientation were decoded with unexpected sizes.

Fixes #3673"
c8d646ebf857a676a6b682b5e78d382c52b8c5ab,"Disable custom tags in CustomViewTarget

Setting custom tags will prevent Glide.with().clear() from working properly.

PiperOrigin-RevId: 251273595"
7f8bcc9f1013960c26a733f96f5f90bf7953468c,"Removing usages of @Config(manifest = ...)

PiperOrigin-RevId: 251699232"
c3ff2e579971d3fa3a0ae8ef907db77a25689d5a,"Internal change

PiperOrigin-RevId: 251715450"
5bb469166d49ddb49d7e164fded2b58b48d45916,"Update to Truth 0.45, and address deprecations.

Renames may include:
- containsAllOf => containsAtLeast
- containsAllIn => containsAtLeastElementsIn
- isSameAs => isSameInstanceAs
- isOrdered => isInOrder
- isStrictlyOrdered => isInStrictOrder

The other major change is to change custom subjects to extend raw Subject instead of supplying type parameters. The type parameters are being removed from Subject. This CL will temporarily produce rawtypes warnings, which will go away when I remove the type parameters (as soon as this batch of CLs is submitted).

Some CLs in this batch also migrate calls away from actualAsString(). Its literal replacement is `""<"" + actual + "">""` (unless an object overrides actualCustomStringRepresentation()), but usually I've made a larger change, such as switching from an old-style ""Not true that..."" failure message to one generated with the Fact API. In that case, the new code usually contains a direct reference to this.actual (a field that I occasionally had to create). Another larger change I sometimes made is to switch from a manual check-and-fail approach to instead use check(...). And sometimes I just remove a withMessage() call that's no longer necessary now that the code uses check(...), or I introduce a check(...) call. (An assertion made with check(...) automatically includes the actual value from the original subject, so there's no need to set it again with withMessage().)

Finally, there's one CL in this batch in which I migrate a Correspondence subclass to instead use Correspondence.from.

PiperOrigin-RevId: 251729082"
58acc32b347e6a48debe82e4a1ec197e96f1a5c8,"Removing all ""manifest = ..."" entries from @Config annotations.

PiperOrigin-RevId: 251739775"
472713354fa18457e78b376652dac73270b0404e,"Merge pull request #3689 from sjudd:issue_3673

PiperOrigin-RevId: 251883069"
6022f500e18fccfbe364ceabccc29d153bceb930,"More aggressively reformat code, including imports, when migrating code

PiperOrigin-RevId: 251890615"
cd37a54f076392402af6df7b80bda07d96e012c7,"Extend raw ComparableSubject instead of supplying type parameters.

The self-type parameter is being removed from ComparableSubject. In order to remove one type parameter while leaving the other in place, it's necessary either to make an atomic change (which is tricky for third-party code) or to temporarily remove *both* type parameters and then put the one back. This CL implements the latter. This CL will temporarily produce rawtypes warnings -- and temporarily eliminate type-checking of calls to the ComparableSubject methods -- which will go away when I remove the type parameters (as soon as this batch of CLs is submitted).

This CL requires Truth 0.45. I should already have another CL out to you (perhaps even already submitted) to make other changes to prepare for Truth 0.45.

PiperOrigin-RevId: 251895062"
3df54453089c5ec02af552c713d5907985aee12a,"Improve comments and consistency of sampling in DownsampleStrategies.

FitCenter, CenterInside, and CenterOutside now all reliably prefer 
quality on versions < KitKat where we can only do power of two 
downsampling.

I’ve also fixed a bug in FitCenter and CenterInside where we would 
downsample to 2x the requested size in some cases where there was
an exact power of 2 match in one dimension but not the other. The logic
to fix the bug isn’t perfect, but it keeps this change small and avoids
making any API changes."
2b0652b2938c563f153a0ebd6828f7c23ad5c75c,"Merge pull request #3703 from sjudd:fix_incorrect_preserve_quality

PiperOrigin-RevId: 252075930"
01e8543d6c7115a911a89f091196247e140f7c89,"Add ImageDecoder based ResourceDecoders to Glide for Bitmaps.

It's simplest to swap out the decoder for Bitmaps because we can obey
most of the parameters in Downsampler and there aren't many API changes.

Swapping out decoders for GIFs is more complicated becuase we'll have
to change APIs.

PiperOrigin-RevId: 252883331"
7793ef46af39467bbca3f409716c8f65f040a8f2,"Moving away from @Config(manifest = ...)

PiperOrigin-RevId: 252943611"
cac81c919e5b549eefdb8fc66f715eed8cf2b689,"Moving away from @Config(manifest = ...)

PiperOrigin-RevId: 253052217"
7f43b32aee65cb3c524f5633c85facf12f8ca37d,"Create annotation glide module classes lazily but outside a lock.

This means we might instantiate GlideModule classes multiple times if
multiple threads race and call Glide.with(). Only one instance will
actually be used even if this happens.

Instantiating modules outside of a lock allows to both:
1. Provide an opportunity for dependency injection into GlideModule
constructors without introducing deadlock.
2. Lazily create modules.

We could instantiate the modules exactly once if we initialize them
eagerly, but that would slow down application startup. We can
instantiate modules exactly once, but can introduce deadlock if
dependency injection is used (Glide.get() acquires the Glide lock, then
the DI lock. DI.get() acquires the DI lock, then the Glide lock).

The primary cost of instantiating (and injecting) glide modules is
probably in the reflection and class loading. Most of that is already
memoized, so it's not super expensive to do it more than once. Most
applications won't race anyway, so most of the time the cost is
effectively non-existent (we hope).

A future change will allow passing in a Context to the constructor
of modules to allow injection in the constructors only.

PiperOrigin-RevId: 253114941"
568441b1ced721721ea647cfbb8096ececb71dec,"Allow AppGlideModules to optionally accept a Context in their constructor.

The Context can then be used to safely inject parameters and/or classes
outside of Glide's initialization lock. The initialization will happen
exactly once per AppGlideModule instance, but the lack of a lock means
that more than one AppGlideModule instance may be created.

We can't both not use a lock and guarantee that initialization will
occur exactly once. Rare race conditions causing double initialization
are probably worth the cost, especially because most DI frameworks will
memoize and minimize the cost of the second injection if it does occur.

PiperOrigin-RevId: 253302453"
e7b6d2fabbb6ee0af4f3e7063a8980587732c4f3,"Remove flaky test in ActiveResourcesTest

PiperOrigin-RevId: 253304973"
4039981e719071473fa66515027188bdb71313ad,Disable BuildConfig generation
6657401329bce5f906becae0ccdd01874968e421,"Internal change

PiperOrigin-RevId: 253571474"
2afbd402d1eac60f1df7df5f6e08253cdf2becda,"Merge pull request #3715 from technoir42:disable-buildconfig

PiperOrigin-RevId: 254771253"
764ddc66db7cc3b2b17aa42eee34509f5cbf2c69,"Rollforward ""Allow AppGlideModules to optionally accept a Context in their constructor"".

PiperOrigin-RevId: 254973895"
890712279a997ded1b22d64ea6059c911b2f8a55,"Fix deadlock in EngineJob.

Sometimes we acquire the Request lock, then the EngineJob lock (like
when the request is cancelled) and sometimes the other way around (like
when the request completes successfully). By always acquiring the
callback/request lock first, we avoid the deadlock.

PiperOrigin-RevId: 255225339"
b96b00096607cee23763e4dd049a297d85b89911,"Avoid holding the Engine lock while calling callbacks for in memory resources.

Doing so can make it easy for callers to deadlock.

PiperOrigin-RevId: 255250190"
a97686216b90ecf5d29a7f382f96a89a05bff328,"Add experimental methods to try various FD size limits on P+

PiperOrigin-RevId: 255439576"
d73b61266e6f4083f3253c0d54c9bf80c5c65062,"Disable ImageDecoder in Glide prior to Android P.

PiperOrigin-RevId: 255449105"
36ccdfb9ef8e9193cc2c3c3369e12c3dbf3ea1e8,"Disable ImageDecoder in Glide prior to Android Q.

PiperOrigin-RevId: 255656446"
338ca698efb0dc8e0f3a3e4d3bebe2c9e99ce262,"Migrate org.mockito.Matchers#any* to org.mockito.ArgumentMatchers

The former is deprecated and replaced by the latter in Mockito 2. However, there is a
functional difference: ArgumentMatchers will reject `null` and check the type
if the matcher specified a type (e.g. `any(Class)` or `anyInt()`). `any()` will
remain to accept anything.

PiperOrigin-RevId: 257221301"
288866e446b0efebc865b74e0a1ed4eee43856b1,Update to mockito 2.23.4
8258d3c364412ff40e1d6a1e9ae258aec294f82b,"Merge pull request #3765 from sjudd:update_mockito_2_23_4

PiperOrigin-RevId: 258830209"
61a8a6df37ba01cc619ecd5519ff19d35fdd7761,"Set outConfig to null when re-using BitmapFactory.Options.

Fixes #3757

PiperOrigin-RevId: 258864591"
31b501d1955a7bbc1d3a6ed92307a2aa8c43e392,"Stop unwrapping Contexts if the base has a null application Context.

The Context#createPackageContext API returns Context without an Application
instance attached, causing #getApplicationContext to return null. If this is
overridden to a non-null value using a ContextWrapper, stop unwrapping so that
code relying on #getApplicationContext will still work.

PiperOrigin-RevId: 259036178"
71359c7e385dc7d287f0da5d9e6d533ca41c76e4,"Support Fragments which are not hosted by Activities.

A Fragment host can be of any type; if it is not an Activity, then calling
#getActivity will always return null. Use #getContext instead, which works
similarly but is non-null while the Fragment is attached.

PiperOrigin-RevId: 259059132"
525e7ba82ec883fb518087879269836f888bd584,"Clear the Bitmap Pool when the UI is hidden on M+.

PiperOrigin-RevId: 259615959"
219330630652a6d9bd088c0a7e971cf796872de1,"Fix a wrong process

It has been determined that activity belongs to FragmentActivity , so should use the get() method of FragmentActivity"
444b1f3e2f6cf30f820ddd8a239f3859188982c5,"Migrate org.mockito.Matchers#any* to org.mockito.ArgumentMatchers

The former is deprecated and replaced by the latter in Mockito 2. However, there is a
functional difference: ArgumentMatchers will reject `null` and check the type
if the matcher specified a type (e.g. `any(Class)` or `anyInt()`). `any()` will
remain to accept anything.

PiperOrigin-RevId: 260496316"
7fe334f481a062c3faf155d5365938bef46e5911,"Migrate org.mockito.Matchers#any* to org.mockito.ArgumentMatchers

The former is deprecated and replaced by the latter in Mockito 2. However, there is a
functional difference: ArgumentMatchers will reject `null` and check the type
if the matcher specified a type (e.g. `any(Class)` or `anyInt()`). `any()` will
remain to accept anything.

PiperOrigin-RevId: 260498065"
7910f68b31c5f3fb465a2834b6b579464ef0f1c6,"Add support for P3 and SRGB in Glide.

Allows users of the library to manually set an option to support displaying wide gamut images with the DISPLAY_P3 color space on P+.  Defaults Glide to using SRGB on O and for all loads where the option isn't set to DISPLAY_P3.

Does not allow callers to specify other color spaces. Does not allow callers to convert SRGB images to DISPLAY_P3. Does not verify that screens/renderers are capable of displaying P3 images when it's requested.

PiperOrigin-RevId: 260580611"
2f561534cd49171d0e372f1c613d1aa4ddcae36d,"Re-implement Request#pause() to allow partial clearing of requests.

RequestManager#pauseRequests expects to pause requests that are running
without affecting requests that have completed. From a user perspective,
pauseRequests should allow grey squares in a photo grid to remain grey,
without affecting any images that have managed to successfully load.

Without an interface change it's not possible to apply this behavior to
thumbnail requests where the thumbnail(s) have completed but the full
request has not because clear() applies to all parts of the request,
regardless of whether or not they have completed.

The pause() method added in this change allows us to clear() an in
progress full request while leaving any completed thumbnails in place.
As a result the user may see lower resolution thumbnails until
RequestManager#resumeRequests is called, but they won't see the lower
resolution thumbnails disappear as soon as RequestManager#pauseRequests
is called.

PiperOrigin-RevId: 260725883"
a0ddfc93d7025d2abc2232e71fe3cb68e8e96481,"Merge pull request #3784 from limuyang2:patch-2

PiperOrigin-RevId: 260741416"
4de2cda0a2a5ed08273b11b8796c2c2d1327e788,"Avoid holding locks when releasing resources.

We need to lock while updating the various states of the objects that
care about resources. We don't need a lock when all we're doing is
releasing the resource itself. Previously we fixed a deadlock by adding
locks so that locks were always acquired in order. It appears though
that we can go the other direction for this particular case and avoid
holding any locks, which should also solve the deadlock.

If it turns out this doesn't work we can revert this and add another
layer of locking when releasing from the memory cache. Ideally though
this should provide better performance with too much more complication.

Fixes #3795

PiperOrigin-RevId: 260748170"
0ac450c614ffb8db021c0c43a84a02fa2a2f951f,"Add option to set minimum hardware Bitmap dimension in Glide.

PiperOrigin-RevId: 260752977"
6dc03d84d5a009e6a4535381f5b3ec8aeced2912,"Avoid holding a lock while calling other RequestManagers in clear().

PiperOrigin-RevId: 260756583"
15a21b125d0d131df7bc405a947e69b4d40709ae,"Add color space handling to ImageDecoderResourceDecoder.

This should exactly match Downsampler.

PiperOrigin-RevId: 260781611"
85bf0c32f797c04c7d2be87589e075040c3bfb7e,"Copybara import of the project:

--
219330630652a6d9bd088c0a7e971cf796872de1 by mumu <li734930787@gmail.com>:

Fix a wrong process

It has been determined that activity belongs to FragmentActivity , so should use the get() method of FragmentActivity

PiperOrigin-RevId: 260787575"
ac4aa53c6b8e4f7fa4b014ee84b858610106ec4e,Fixed slow GIF animations #3575
b2a46ef7a385abd5df38ee11b8be85868768739e,"Use single lock for all error/thumbnail requests in a single request chain.

The single lock avoids deadlock that could previously have been caused by acquiring the lock for one individual request and then the lock for another individual request and vice versa.

I've also cleaned up some unecessary methods in Request and decreased the reliance on Request states in the various coordinators.

PiperOrigin-RevId: 261714443"
01ea6a544d6159ed986e4f8628a4d962a7aa520d,"Avoid deadlock between SingleRequest and RequestFutureTarget.

Clearing the Request object outside of RequestFutureTarget's lock should prevent the RequestFutureTarget -> Request path, which will eliminate the deadlock. Since a new Request object is created for each subsequent load, there isn't any risk that clearing the Request outside of the lock will end up clearing a new or restarted request.

PiperOrigin-RevId: 261721324"
8a9b63cfd9462f6c4bb40f655d3bd25cc02d7d0d,"Make sure to reset inPreferredColorSpace from BitmapFactory.Options

Once inPreferredColorSpace is set once on a BitmapFactory.Options it is currently not unset.

PiperOrigin-RevId: 261813818"
4b3916735be8e7ca1fb5f8958340d164b655ed76,"Fixing a typo in Glide's documentation.

PiperOrigin-RevId: 262955429"
0ff4f460573729839e68518dba95849c67ca50a9,"Merge pull request #3810 from yuriy-budiyev:master

PiperOrigin-RevId: 263174243"
5cccdfba8bbced57669629f93c92a59eb0439382,"Make sure EngineJob uses the Request's shared lock.

PiperOrigin-RevId: 263201451"
8a094e972e686ddd1223371c268f0a4758e0b1ef,"Adds support to more aggressively pause in progress and completed requests in
Glide in response to an onTrimMemory event.

PiperOrigin-RevId: 263206711"
bee634818cff229570d0fd392130cd76ea2c3639,"Avoid pooling/reusing SingleRequest objects.

~90% of devices are now running on Art and won't get any benefit from
this object pooling. It's very difficult to definitively determine when
it's safe to recycle an object when it's used by multiple threads. The
code simplification is worth the minor performance regression on dalvik
devices.

PiperOrigin-RevId: 263229952"
502ba75304270775ef49a3c2d61bddc3fc23aeb3,"Copybara import of the project:

--
219330630652a6d9bd088c0a7e971cf796872de1 by mumu <li734930787@gmail.com>:

Fix a wrong process

It has been determined that activity belongs to FragmentActivity , so should use the get() method of FragmentActivity

PiperOrigin-RevId: 263239302"
1b391c42f22e967c070a6a105b1e37730ab6ea6e,Include day/night mode in resource id cache keys.
b3b1216e59b2a83cb93432532f38648ef751fc12,"Merge pull request #3834 from sjudd:day_night_resource_cache_key

PiperOrigin-RevId: 263623990"
01addba115f745cfac3cde7ef8356ebe9c8a7372,"Remove Request#recycle()

It's now unused.

PiperOrigin-RevId: 263792894"
f36a9fa9182227d7cebb3b5eaa6cc26e7d26aea5,"Add granular rounding for corners.

PiperOrigin-RevId: 264495417"
047c22d77ebb497db29cf329c2388274ee413f20,"Fix cancelAll() termination condition

The method cancellAll() was using the field maxPreload to determine when the for loop should terminate, which was always off by one compared to the size of the preloadTargetQueue, and therefore, not all the pre-loaded requests would be canceled. This issue was raised in https://github.com/bumptech/glide/issues/3693"
3c3f6c20bf1ef5dde42c7ef1a6dd3750363b69e9,"Add @Syntethic annotation to queue property for access

This property was being referenced from an outer class, which caused PMD to throw an error."
9bb2c19b15629dbca224afa48877e1b5216cc9f8,"Merge pull request #3854 from paynemiller92:master

PiperOrigin-RevId: 265785223"
9fb1036645ec4e7cb159e7ca215f85375d8e4f67,"Add integration library for use with Guava's ListenableFuture class.

PiperOrigin-RevId: 266481039"
e021f6bf83c909a7511c8182cce0af9c58912834,"Move MockGlideExecutor into public 'mocks' package

Also eliminates one of the duplicate copies of the class.

PiperOrigin-RevId: 267016311"
0d6ae156e063c0f0c55b60a011c0ec485b19e368,Update targetSdkVersion to 28
24f9c28eadc0a54d034bd0b75b4b3d7809f3c3b6,"Update ByteBufferStream read() to return byte values from 0-255 or -1 if EOF reached.

PiperOrigin-RevId: 269596827"
79dac0d1f522cab3d254f0fb91264e06e09568c6,"Downsampler preserves original size for Target.SIZE_ORIGINAL for all downsample strategies.

PiperOrigin-RevId: 269628399"
e31e1e9947b678a83a9e407ad3f4337bad94c3de,"Merge pull request #3880 from prempalsingh:patch-1

PiperOrigin-RevId: 269656835"
3084bac8359c157d3688b422f32c1bb383df769a,"Add tests for GlideFutures

PiperOrigin-RevId: 269698115"
3bb8782f722391ef750efdea08cb94bbb966ad40,Bump version to 4.10.0
cdf436ee63ccf6e0a3cb6681c7b1f78485adda84,"Use an internal Builder to construct most GlideExecutors.

A builder better supports additional options. Future cls will expose the builder and deprecate the existing factory methods.

PiperOrigin-RevId: 270109328"
e8720ff7fae73941d8ce04fa710d39f4cf92c1e5,"Expose GlideBuilder as a public API and deprecate various factory methods.

PiperOrigin-RevId: 270132488"
f9a7966787b1644149c6be4329c3482ea09732e7,Bump version to 4.11.0-SNAPSHOT
db3acefdd4206f669762bafb82a7db05118c336b,"Add a thread timeout method to GlideExecutor's builders.

PiperOrigin-RevId: 270305260"
1ddd1a2af5ec7b382f0dbc005aecd6149d8d3e8a,Update readme to 4.10.0
1382e566c5ce36cd915afbe9177315f5f9961e47,"Add getters to Bitmap Pool for cache statistics.

PiperOrigin-RevId: 271557242"
da34aabdb625b6bfb2b981939283d1f846b1e354,"Use sourceSets instead of JavaCompileProvider to generate javadoc.

JavaCompileProvider's source list is always empty.

This change also removes the public jar generation and replaces it with
a single fat jar that's meant for internal use only. As part of those
changes I also removed unused logic that allowed a variant to be
specified. Glide only supports the ""debug"" variant to eliminate the
redundant compilation/unit tests associated with the release variant."
8758d17ba1df191e2291ff9b4c4154b5518f8cb4,Bump version to 4.11.0-SNAPSHOT
4c76832ecc4d80a37b575f31425a78cce6d70e79,Bump version to 4.10.0
8502b9d542dd020223780c87b6c67deb801256b1,"Merge pull request #3907 from sjudd:bump_version_to_4.10.0

PiperOrigin-RevId: 271629994"
59f5c1b3910857bbc7adf0c10215fc3c82d8c56c,Update release checks script to work better with Copybara workflows.
484e7afbc23670e5d0a0e60665e9101cb0e5905a,"Merge pull request #3908 from sjudd:update_release_checks

PiperOrigin-RevId: 271639401"
2c9ae56e421b9f1d9bd67c70feee0c8957784fcc,Bump version to 4.11.0-SNAPSHOT
291af105a52c84264259d3d63721b5e7094895d5,"Merge pull request #3911 from sjudd:bump_version_to_4.11.0-SNAPSHOT

PiperOrigin-RevId: 271668186"
83ba102882f897c1c01239b7fa87805f8b6feabf,"Distinguish between missing and non-handling ModelLoaders in exceptions.

Fixes b/141615023."
5c20f1a7bed0bb2ee851b74309672ba76994ae74,"Merge pull request #3914 from sjudd:fix_exception_messages_model_loader

PiperOrigin-RevId: 272311623"
690f815267611d44978769a90b12d02fe4483a91,"Distinguish resource set from request complete in Glide's RequestCoordinators

A request might have it's thumbnail complete, but not it's full. It's
not complete, but it has a resource set. If it has a resource set, and a
parent's request fails, we shouldn't replace the thumbnail with the
error placeholder.

Complicating matters is that we have another way in which we want to
know if a resource is set. SingleRequest wants to know if its the first
request in the set so it can tell its RequestListener. That requires
walking up the request coordinator tree and then back down.

To solve the first issue, we check the requests explicitly and walk down
the tree to see if any has set a resource, regardless of its state.

To solve the second issue, we introduce a getRoot() method on
RequestCoordinator that can be used by SingleRequest to walk down the
entire tree.

PiperOrigin-RevId: 272448635"
c6432551b04f58dba19c1b83e4657196ef7a348e,"Rename MARK_POSITION to MARK_READ_LIMIT

I don't think ""MARK_POSITION"" is a correct term, and I found it confusing while reading this file.

PiperOrigin-RevId: 275573103"
42d3f07ac540b46af9d69bc875235fef25f7f08e,"Avoid ArrayList#addAll when setting bucket priorities.

Fixes #3296

PiperOrigin-RevId: 276299510"
1c51b24b5af61a73267e36e486abe7e5157002e7,"Add Q ModelLoader to load unredacted data when possible to avoid HEIC failures.

EXIF redaction in MediaStore on Q breaks HEIC/HEIF decoding. This class
does it's best to obtain unredacted file data on Q depending on the
state the hosting application is in with regards to storage.

It's not a complete fix. In particular applications that target Q, do
not opt in to legacy storage and do not have the ACCESS_MEDIA_LOCATION
permission will still be unable to decode HEIC/HEIF after this change.

PiperOrigin-RevId: 276302007"
bdca4aaa4cca22341dca76b26626e5bca2566e77,"Minor cleanup

PiperOrigin-RevId: 276500010"
95fe2eee96bce0432d7c0991fdda9601d2505c61,"Try using ParcelFileDescriptor for local files.

This helps with handling of large files, and also needs less RAM than mark()ing InputStreams.

PiperOrigin-RevId: 276582585"
b5a0ed648bb39c6c8860c5d9191fe2710e1868d6,"Roll back ""Try using ParcelFileDescriptor for local files""

It broke some integration tests, will figure out separately and try to re-submit.

PiperOrigin-RevId: 276610742"
e8c841ce4b8214a8765e3303dac6f6fc04775692,"Finalize Glide hardware Bitmap dimension/count limits for P+.

PiperOrigin-RevId: 277184075"
146454a74ca872271e0a343a935b48d5b07b7901,Fix typo in VideoDecoder docs
0acd87ca787c31f9bbcd9bb245bbf6af68af5af6,"Avoid removing caller added listeners in GlideFutures.

PiperOrigin-RevId: 277759400"
7e750caec1d64ccd408a4423f97b4be09d0b39e0,"Ignore callbacks from cancelled or otherwise invalid requests in SourceGenerator.

PiperOrigin-RevId: 277765705"
0ffcb685bbd1baf43315d9055e78c9f49d618504,"Add methods to GlideFutures that release resources back to Glide's pools.

There are some limitations to these methods for safety so that we do not recycle resources while they're still in use.

PiperOrigin-RevId: 277817709"
304202166f9524cf857cbb9d628917ba9752405f,"Improve handling of EOF in DefaultImageHeaderParser.Reader

PiperOrigin-RevId: 278438164"
2522398e75300b4248c41110dd2469dcab44ce20,"Add a parameter to force Glide's annotation processor to use support
library annotations and default it to false.

PiperOrigin-RevId: 278475232"
d40198ec7ca9ae47188dcffcbf718a36d8db11e9,"Roll back ""Improve handling of EOF in DefaultImageHeaderParser.Reader"" as it unexpectedly broke some tests downstream

PiperOrigin-RevId: 278525850"
bd6f894adb2e77120b50199ae471a2e86443723f,"Switch to the support library version of ExifInterface

Fixes #3851.

PiperOrigin-RevId: 278655542"
e733e9c8662b1397f08f7530ba727865e34e143c,"Roll forward ""Improve handling of EOF in DefaultImageHeaderParser.Reader"" with error-level logging disabled

PiperOrigin-RevId: 278712901"
1ed76ee49eae26999e808ce6fc18b2c43a192751,"Roll forward ""Try using ParcelFileDescriptor for local files"" with fixes

PiperOrigin-RevId: 279117663"
9a600fc7509763e278d86ee90bf57bc0705579ae,"Merge pull request #3957 from zsmb13:patch-1

PiperOrigin-RevId: 279387294"
03271581e93fe551f38d713d1c30ef2070a6c035,"Roll forward ""Try using ParcelFileDescriptor for local files"" with fixes

PiperOrigin-RevId: 280051451"
17dde9a3d83e706bffe46cc65036e0b37880ad38,Fix gallery sample app on Q.
7ff5dc328b66d9fcc5f53ff45939b82c0a8b1ed4,"Merge pull request #3983 from sjudd:fix_gallery_on_q

PiperOrigin-RevId: 280499771"
9281d8ed45591279b5fe646b136c956624a5da24,"Roll forward ""Try using ParcelFileDescriptor for local files"" with fixes

PiperOrigin-RevId: 281546605"
f4da653a55cb3d491a015161d7e1f41338b5545f,"Fix javadoc typo in GranularRoundedCorners

PiperOrigin-RevId: 282434964"
100ac4a29eb525c0004d638edcd6ed8020864d75,"Fix deadlock releasing resources that recursively clear when evicted from cache.

PiperOrigin-RevId: 283380663"
919069837db6f8ad80b79901eb382a247020540d,"Add a VideoDecoder for ByteBuffers

Fixes #4021"
48875fabe806b83175836dced1de79ed47b4da8a,"Merge pull request #4033 from sjudd:byte_buffer_video_decoder

PiperOrigin-RevId: 288393071"
cd72124f6fd124d88f4fe85d503e6b22e1f84b1b,Bump version to 4.11.0
f05dc6071451b7fe3f1695bd55a071a34bdcc919,"Merge pull request #4040 from sjudd:bump_version_to_4.11.0

PiperOrigin-RevId: 288716659"
423e0de13c06c70848c3f88cabd488fc25bf32aa,Bump version to 4.12.0-SNAPSHOT
cbbb254a1549477af3eac07b5d1bf3205f796999,"Merge pull request #4041 from sjudd:bump_version_to_4.12.0-SNAPSHOT

PiperOrigin-RevId: 288812548"
ba995829f495379df82653bc07542006c15f4cb9,"Internal change

PiperOrigin-RevId: 289164359"
ff2984963cbf0f31e374228c7f702f27b5753336,"Internal change

PiperOrigin-RevId: 289462005"
114251e6ce43fb67ca1528a0f24dc3c7e73eb0bf,"Open source a Cronet integration for Glide.

PiperOrigin-RevId: 289467603"
1dd0576f8d133e26a525a746b2454d1ee5c74762,"Internal change

PiperOrigin-RevId: 289478230"
d75bb3070797daaeae95be90af1e8c72084cdb1a,"Official Gradle Wrapper Validation GitHub Action

See: https://github.com/gradle/wrapper-validation-action"
3d54ef50ea4fa41694695971b7d858435c784057,"Rollforward exposing cronet glide modules

PiperOrigin-RevId: 289954530"
9488f15cb16b514c7bed62be69fea48ae576364e,Add `pull_request` to list of triggers
52e177a5666c1f5e078b75e5f1cafae073c1a9e8,"Fix javadoc for request listener

PiperOrigin-RevId: 290121877"
fdea91e067180b1457dff943c543e66df0f65981,"Merge pull request #4050 from JLLeitschuh:patch-1

PiperOrigin-RevId: 290124672"
b32ea3d85db34e4b65ce4abf613b33c739a3ac27,"Migrate org.mockito.Matchers#anyInt to org.mockito.ArgumentMatchers

The former is deprecated and replaced by the latter in Mockito 2.

PiperOrigin-RevId: 291753023"
9243526dc643e99e3f8489a2fe58c9fc777af5a3,"Migrate org.mockito.Matchers#{isA, same, isNull, notNull} to org.mockito.ArgumentMatchers

The former are deprecated and replaced by the latter in Mockito 2.

PiperOrigin-RevId: 292107773"
54351fb98465c3d323b4db8f6bb527128d42f30f,"Migrate org.mockito.Matchers#any to org.mockito.ArgumentMatchers

The former are deprecated and replaced by the latter in Mockito 2.

PiperOrigin-RevId: 292147644"
946335b7db1c5b71e792f1ba4417779b77bd4e8c,"Migrate static imports of org.mockito.Matchers to org.mockito.ArgumentMatchers

The former is deprecated and replaced by the latter in Mockito 2.

PiperOrigin-RevId: 292561649"
8f246820062f228287b506e6aeb5f5ef3c5a7fdb,"Migrate static imports of org.mockito.Matchers to org.mockito.ArgumentMatchers

The former is deprecated and replaced by the latter in Mockito 2.

PiperOrigin-RevId: 292568025"
55a475806c2014c54ed18ceb4cffd1f607a818d4,"Migrate static imports of org.mockito.Matchers to org.mockito.ArgumentMatchers

The former is deprecated and replaced by the latter in Mockito 2.

PiperOrigin-RevId: 292570319"
0647c410a0a6dc918f56ff3a4105557dc5313477,"Hardcode disallowed device models for hardware Bitmaps from b/147430447

PiperOrigin-RevId: 292986300"
b2a361a8faf3ba56d433bb476b892672911dfaa2,Allow HTTP traffic on imgur.com domain to imgur sample
09544555e88963c399b88b34df4820f28bb15647,"Fix typo in documentation

Removes duplicate word"
46ec892297b28a0fb2cffbe692deb2e44a21af5d,"Fix typo in documentation

Removes duplicate word"
5b117b315a3bd90ae96d7eda61badb94e78c3613,"Keep InternalRewriter.rewrite to ensure it is not inlined

The function could be inlined into
ParcelFileDescriptorRewinder.rewriteAndGet resulting in verification
errors on pre api-level 21 devices."
961ba28cdce5f6423fe81216552c4571b34a7e24,"Merge pull request #4089 from ouattararomuald:master

PiperOrigin-RevId: 295799300"
5d542af79121cb0aca4c3120d2712dc572b25202,"Merge pull request #4091 from mkj-gram:master

PiperOrigin-RevId: 296016131"
6f7ffae6a2dee26b375035f7a5109e499414cf4a,"Merge pull request #4086 from landicefu:master

PiperOrigin-RevId: 297200406"
fb672a54e11739454f34430f856a9eeb2ea0244f,"Annotate tests to use Robolectric's LEGACY LooperMode.

The default Robolectric Looper simulation mode is changing to PAUSED from LEGACY.
The following tests fail in this new mode, and are thus being defaulted to LEGACY.

PiperOrigin-RevId: 297491161"
c9132b3af80e79c237f0366e13db71672c494f3e,Update Encoder.java
3fcae8254526be3c107fb13ceee7e2d9f36feede,"Merge pull request #1 from Danny7226/improve-annotation

Improve the annotation of Encoder interface"
541ee73447375de543225c276e0dca473d1ebee8,"Merge pull request #4130 from Danny7226:master

PiperOrigin-RevId: 300582619"
78ecfd2212015d0ad650562652dfe44b76409789,Resolve #4121
0d7ea08d4c2c755884cff7dc19ed929bb0354ae2,"Merge pull request #4141 from Pravin-Divraniya:bug#4121

PiperOrigin-RevId: 301385536"
7aaeb41625f7878611745ebf9c91f5ce336425b2,"Try to more reliably include http status codes in HttpUrlFetcher exceptions.

PiperOrigin-RevId: 301890967"
3d8bf6bbf489364fa15c34eee8069cc1f772522b,"Try to more reliably include http status codes in HttpUrlFetcher exceptions.

PiperOrigin-RevId: 301911566"
efe8023aed474e4bf1a596faf15ca1e4c5f9e34f,"Try to more reliably include http status codes in HttpUrlFetcher exceptions.

PiperOrigin-RevId: 302119882"
5e2ccc6ceb7b64293667753bdc9455c88c501276,"Increase the number of items used in LruCacheTest.

PiperOrigin-RevId: 302976944"
5090b6d004fabbc0ae50e0295fd50e2f13cb6357,"Use a fixed size for items in LruCache.

PiperOrigin-RevId: 303010044"
7cc865ac1a0141707aa3318bcd9b0250594d7464,"Use UUID for indexers with names that exceed the file name length.

Fixes #4106."
cce9375713d989cdd0958890b277150e61374135,"Properly synchronize RequestManagers in Glide in onTrimMemory

Fixes #4162"
acf19d1284dfc7d0bf88d16eff97b1d30f84a59b,"Merge pull request #4159 from sjudd:issue_4106

PiperOrigin-RevId: 303796168"
52726e2a0d0fbdf123c59b15a935aa2d9d6dd3c6,"Merge pull request #4163 from sjudd:issue_4162

PiperOrigin-RevId: 303807531"
621e2d5ba6ee563f396c0b46521b3ce22fd8d226,Mark RequestListener.onLoadFailed() model parameter as Nullable
f9095c67a46e65446783feda9ba01341bc591ca3,"Merge pull request #4167 from opayen:master

PiperOrigin-RevId: 306956970"
00d8fce1ca3cf6df81ccaba4dbaa77527c681265,"Copybara import of the project:

--
621e2d5ba6ee563f396c0b46521b3ce22fd8d226 by Olivier Payen <olivier.payen@truecaller.com>:

Mark RequestListener.onLoadFailed() model parameter as Nullable

PiperOrigin-RevId: 306967899"
1caeff4bf17952c7372acbbbc27297cd06615e5f,"Add mock utility methods for Glide's various builder classes

PiperOrigin-RevId: 307088222"
5a814a1ca472c6a174cefec7c2cb60a66a53321c,"Add support for width / height to the SvgDecoder

The sample SvgDecoder does not currently use parameters with and height
that are passed into the decode() method. This can be misleading for
Glide users and causes basic functionality such as image scaling to not
work properly. This change adds code to change the SVG document width
and height according to the provided parameters."
940b49b0c03089fe4d34d81ab91d8cb39b32f43b,"Set cronet integration library min sdk to 16

Matches the one required by the gms cronet library dependency."
1ae9a2af4e52afbeb4a9927fb535481cf39d7c21,"Avoid IllegalArgumentException in GifFrameLoader.

IllegalArgumentException is thrown when the target is invisible and
startFromFirstFrame is called and the target subsequently becomes visible."
8f354dc527b46a69a47713e6e625cee2750eb6a0,"Check if Activitys are FragmentActivities in RequestManagerRetriever

This fixes an issue where we can end up adding both a support and a
non-support Fragment to a FragmentActivity if the FragmentActivity is
passed to Glide as an Activity or Context instead of a FragmentContext
at some point."
fb57ce913bb1915b540ae1c3c282ec294f147946,"Merge pull request #4217 from sjudd:fix_cronet_min_sdk

PiperOrigin-RevId: 311428398"
a6ef6eae08bebb61e77da8423d30960092c5ae2b,"Merge pull request #4218 from sjudd:fix_duplicate_adds_different_activity_types

PiperOrigin-RevId: 311633951"
b8ffc23e92edad6c7e62ab7d83e84365ebf2c1e8,"Merge pull request #4214 from chggr:svg-sample

PiperOrigin-RevId: 311820182"
0429ea9bff7eb3aac5469ff9b03c62d4350a3bdd,"Merge pull request #4193 from dalinaum:on_frame_ready_before_visible

PiperOrigin-RevId: 312183353"
d653fc42efedc0d10bea907fd23ff99856a44ae8,Update README.md with updated proguard rules
a77ed9003d578bf2520b188cff2f701097813f31,"Add an experimental option to Glide to avoid hardware Bitmaps until after the first frame.

This option is not fully implemented in the external version because it's not intended to be long lived.

PiperOrigin-RevId: 313301014"
f903a73283702fb28220fcba913111c8fe4228d0,"Add a new experimental hardware bitmap fd limit parameter to Glide.

For now this parameter isn't available publicy.

PiperOrigin-RevId: 313444962"
1d6781f7675c088ef9cb105f9f1acacc739cd871,Add test for Glide.with before Activity's super.onCreate call
14a0e1acd07d76bc161de6d211f9cd7484918f61,"Only start RequestManagers, not lifecycles when creating with visible parents"
9dcc0a1dcbe6b568ea0ce1eab711fff9580083f8,"Merge pull request #4240 from sjudd:avoid_notifying_connectivity_monitor_on_start

PiperOrigin-RevId: 314430675"
7361ab99817f14a917bac27aeaa212a722fd13d7,"Merge pull request #4225 from carlonzo:update-proguard-readme

PiperOrigin-RevId: 314431233"
1cfbe3c6ff6688ac6f58333a882540805729b5ce,"Merge pull request #4241 from sjudd:add_test_for_no_duplicate_fragments

PiperOrigin-RevId: 314436527"
f2419933e01ecb755d14567267a4e00b4aad2150,"Update README.md

Use jcenter instead of mavenCentral. It is specified by new Android projects."
5aa0b4f8e9d4c5b468b39db33c7e6eb213765206,"Stop running monkeyrunner on Glide's sample apps

The project is torn down and these have never caught a bug.

PiperOrigin-RevId: 316512463"
25c84ec611675430e41390ac738bf14bbe46735e,"Fix a small typo in Glide's DecodeFormat javadoc

PiperOrigin-RevId: 316515412"
461925494761e2d0e9d3e14db24fa40537d607ed,"Internal change

PiperOrigin-RevId: 316918709"
a6f7755d93865bb4a46adf43fb08c5296e9a24df,"Internal change

PiperOrigin-RevId: 317147378"
8e25211a5132d533d35b920dd2e72a82c32b766d,"Merge pull request #4243 from dalinaum:patch-2

PiperOrigin-RevId: 317937695"
85868bdb31b393e85c8c97c1465f13d47872d7ab,"Update Glide's exif interface version to 1.2.0

Fixes #4265

PiperOrigin-RevId: 318098005"
d84034def390665668026fb1e009aa0d11594dac,"Add isAlternateCacheKey to a new ExperimentalRequestListener interface.

PiperOrigin-RevId: 319301011"
67b01f62c0e98bb4f517708128be3107b22367cb,"Add thumbnail method that takes in a list

PiperOrigin-RevId: 320059478"
eb30d52215582c58a6ee1cf076587e8ec9621598,"Internal change

PiperOrigin-RevId: 322443056"
93a2d0e5370303346adba16fc5ca67d72b223a7b,"Fix parameter comments that don't match the formal parameter name

PiperOrigin-RevId: 324713821"
6aa7ad274ac6ec586997efcf0d51dd2091e8fadc,"Fix class cast exception in Registry#setResosurceDecoderBucketPriorityList

This works around a bug in the jdk. Fixes #4309

PiperOrigin-RevId: 326123807"
e7d16d7108554d55d01796c399bcf445a7eae050,"Internal Change

PiperOrigin-RevId: 329789745"
edd96d80024a6a3cf2f6966664ff8543006967bb,"Wait for the app to render at least one frame before enabling Hardware bitmaps.

There appears to be a bug on versions of Android < Q where trying to create a hardware bitmap before the application has rendered a single frame causes a native crash. This works around the issue by making sure Glide only uses regular Bitmaps until the application has drawn at least one frame.

PiperOrigin-RevId: 330840252"
8584b450f3af6c18e0393a3bff015a62a08d5eb5,"Wait for the app to render at least one frame before enabling Hardware bitmaps.

There appears to be a bug on versions of Android < Q where trying to create a hardware bitmap before the application has rendered a single frame causes a native crash. This works around the issue by making sure Glide only uses regular Bitmaps until the application has drawn at least one frame.

PiperOrigin-RevId: 331202490"
7b40fd253cb07def22896b13e2b7fec181caa413,"Suppress violations of TruthIncompatibleType.

PiperOrigin-RevId: 331566028"
a3a3a6573addd83a5be031bbd55d29e7514ca446,"Rollforward after disabling first frame waiter < O (hardware Bitmaps require O+ anyway).

PiperOrigin-RevId: 331577544"
8ab09c18e8a2f541fc822d114e99e5cbf340a8fb,"Deduplicate HTTP Uri ModelLoaders

Glide had two essentially identical ModelLoaders: UrlUriLoader and
HttpUriLoader. They both were being used to defer HTTP/HTTPS Uris
to another ModelLoader.

Best-case scenario, this was a harmless distraction; but in some bad
cases, it was possible for both ModelLoaders to fire, duplicating work.

With this change, only one of the two HTTP Uri ModelLoaders are entered
into the registry. The one no longer being used has been deprecated as well.

I chose to deprecate HttpUriLoader because it can be implemented as a
UrlUriLoader (but not vice versa, due to generics). To demonstrate that
it still behaves the same, the test (which now targets UrlUriLoader) is
unchanged but still passes."
50ebdbff0bebee4e31075f26d4263312ab5ef04a,"Merge pull request #4352 from dlew:dlew/deduplicate-http-uri-loaders

PiperOrigin-RevId: 333128445"
95b7ca95f6c1b69de7fd287a37600013dd02c52a,Move statement
d197fe7c0b908b0ab337c2cbd23b038f247f426b,modify LocalUriFetcher
7c661e51d5caf82a48fffa2a8d0bf55b977ef5b8,Refactoring other methods
9c6eae7dccd4570dd2914fc2be84631f7b3b570e,"Merge pull request #4354 from T45K:make_consistent

PiperOrigin-RevId: 333573230"
6d7c4849007e9d45d43ec566e84424d505b0d93e,"Add Experiments class to Glide.

We seem to keep adding more and more experiments. Hopefully this makes them a bit easier to keep track of and reduces the pass through work required each time one is added or removed.

PiperOrigin-RevId: 337556489"
b0a7efecf54723506bcaac2d801e29845f04f229,"Add a method of frame waiting that resets when we get certain trim memory callbacks.

The GL context may be destroyed on TRIM_MEMORY_MODERATE or higher. We could strictly listen to that callback, but we'd end up racing because we only get trimMemory on the UI thread and decodes happen on multiple background threads. Hopefully by resetting when the app is backgrounded we can minimize those races.

PiperOrigin-RevId: 337927814"
7d7042c4f14d0f825f49183cd840ea22525bdf14,"Avoid using frame waiting on Q+

PiperOrigin-RevId: 337935179"
90a657b6591fb97fc47a8444ab778a348cef0fcb,"Update LG HAL hardcoded hardware bitmap blacklist.

PiperOrigin-RevId: 337935996"
ddb3934a3d1f43dd184b3b9534a8e621fabff713,"Update low FD count hardcoded hardware Bitmap blacklist.

PiperOrigin-RevId: 337968955"
e9e5a2e0948ef1a8152953fc3f4de58f979b23b2,"Don't 'claim' annotations in annotation processors

PiperOrigin-RevId: 338299681"
f007af2d687b89a61cb5fdc6be1b10f21c97355b,"Change default search to ""airplanes"" in Flickr's commons project.

This hopefuly reduces the odds of users seeing nsfw images when they
simply open the sample app. We could extend this to all searches in the
future if required, but doing so might result in some perceived search
quality loss."
e41550de5d18306bd662bc07ddbc20729a999636,"Merge pull request #4389 from sjudd:safe_search_flickr

PiperOrigin-RevId: 340314652"
cbe5877ddb24a32dccd475f25386f6ef6eed6b4c,"Add more extensive equals testing to KeyTester

PiperOrigin-RevId: 342176883"
410ab7e22a15662675b3cbf163ef6a56ead19848,"Add support for multiple identical Keys in KeyTester regression tests.

PiperOrigin-RevId: 342760558"
b451065702ff452349f3f08deb2f937fb3a83ab5,"Reset frame state after UI_HIDDEN and minor cleanup.

PiperOrigin-RevId: 342767032"
d1aacb5e116a94f70b7f5e4531ece93ab08a4cd4,"Add shortcut for starting an identical error request with a different model.

PiperOrigin-RevId: 343195456"
dbdb62c4cb1ee4c0448c64e10398435553351d1a,Switch to Github Actions CI.
b8570b177a7ae0619fe8300da6efb89c0b56735e,"Merge pull request #4418 from sjudd:github_actions

PiperOrigin-RevId: 344084699"
e442557fc5ff640e9988c850bfe4d7be73c09b18,"Avoid assertions on model type in .error()

It's too complicated to figure out if models are likely compatible or incompatible. The current logic is broken if we have three classes, Parent, Child1 and Child2 where both the Child classes extend parent. We want Child1 and Child2 to be compatible, but they won't be because Child2 is not assignable to Child1. Anything we do that's more sophisticated is likely to be heuristic anyway.

Ideally we'd just unapply the automatically applied options from the original model and apply the correct automatic options (if any) for the new model. Keeping track of which options can be undone and which options should be re-applied is quite difficult, in part because they automatic options could also be deliberately applied.

Rather than do anything intelligent, we'll rely on callers to use the API appropriately and update the javadoc to warn more. In general I expect the common case to be matching models and there's a reasonable fallback if people have trouble. Unfortunately I expect this won't be perfect, there will be some amount of debugging caused by someone expecting or not expecting a default option :/. I think the tradeoff of not having to create a new request builder and duplicate options for that request builder is probably worth the cost.

PiperOrigin-RevId: 345085610"
e464e01e0511e96ce78d4049e4110b79da8f5876,"Improve VideoDecoder error messages in Glide.

PiperOrigin-RevId: 345121436"
332807aed4641967ef47cf3a1a61e57b0689aa17,"Add missing mutable instance variables to RequestBuilder#clone

PiperOrigin-RevId: 345719582"
11530fd76903ea4c6b63d5b0697b42af6393476b,"Make RequestBuilder consistently support lock and autoClone

Previously these methods worked, but only for the methods in RequestBuilder that came from BaseRequestOptions. This changes makes sure the remaining methods in RequestBuilder (and the generated equivalent) obey those two methods in a consistent manner.

PiperOrigin-RevId: 347879132"
2b61482baa90175e0efdf4ec90f06a5051e1b370,"Reset mark position after skipping past the mark limit. Any later reset will throw instead of leaving the stream in a bad/undefined state.

Previously, this would cause us to lose track of the bytes that were skipped. For PNGs, ExifInterface skips past the entire data block, which for some files can exceed the buffer limit. We would return back to the buffer location, decode the image partially and then try to load more from the wrapped stream - which would lead to a quick EOF

This is similar to what fillbuf does when we push past the mark limit.

PiperOrigin-RevId: 349315836"
59ec98c505c17b3efa882522c3312022d1ca88da,"Make Exception wrapper throw instead of returning -1/0

This will hopefully fix issues like https://github.com/bumptech/glide/issues/4438.

PiperOrigin-RevId: 350393488"
8f31fe15bbf14248fba2de1ab5e9c4d09a4436f7,"s/RuntimeEnvironment.application/ApplicationProvider.getApplicationContext()/g

PiperOrigin-RevId: 350624858"
e2a467ddb71d76e9da84933a6bce65b30f86c494,"s/RuntimeEnvironment.application/ApplicationProvider.getApplicationContext()/g

PiperOrigin-RevId: 350795581"
8f770797ef3cd99f6a7eae99f7441f1cba266127,"s/RuntimeEnvironment.application/ApplicationProvider.getApplicationContext()/g

PiperOrigin-RevId: 351185422"
5acc99f8fc7e772aeef8aa959ff2a9c203ab1aa6,"Minimize stat() syscall on Glide init.

PiperOrigin-RevId: 351620050"
10b92e7b03aba9936cc29b681a71a9cd507742aa,Update to Gradle 5.6.4
743cb00c7b0a9bfef640df17e732b0d50d5db136,Bump version to 4.12.0
384617791a97f3d2f3052e0b63bd4d971da92f7d,"Merge pull request #4486 from sjudd:bump_version_to_4.12.0

PiperOrigin-RevId: 354617172"
b0dc133d729fde0bc676e9e080c277b4a0bb3dce,Bump version to 4.13.0-SNAPSHOT
d521baa031f6034b74588a1e263c464f0d90d82b,"Merge pull request #4493 from sjudd:bump_version_to_4.13.0-SNAPSHOT

PiperOrigin-RevId: 355049736"
4b48ea3aa67600a6fc35bc0f7f42a0a5bf82ae58,"Merge pull request #4484 from EwoutH:gradle-5.6.4

PiperOrigin-RevId: 357230828"
9f813390646d2cdaecece8fd96fa7fd8b8605217,"Internal change

PiperOrigin-RevId: 359162710"
0c0087b6cf6d870eeb63092cd50ebaf151dbc81d,feat:add a new preferred ColorSpace - NULL
7b27d5efc47d97b281d731f6e6304eb86b7d2a9b,fix:fix format error reported by spotlessApply
0d3204907f09c713e9dcf104e879b4dea8c2f5f6,remove jcenter reference
4ee9758ad37a0f87a7f2c9a2488ac380e667f36b,"Update Volley version to 1.2.0

PiperOrigin-RevId: 362320715"
627d04af1ec5d81c23908c27e1a646806dce7b30,"Optimized RequestTracker by using a Set instead of a List to track pendingRequests. This makes cancelling an incomplete request O(1) instead of O(n), by making remove()-by-value an O(1) function call.

PiperOrigin-RevId: 362418569"
a295828e4a1b4e501d8bdd918fd9e2c78f0c4c0f,"Merge pull request #4518 from jeremyrempel:updatejcenter

PiperOrigin-RevId: 363061642"
042f6b57d511c9d1652d280f5d385d5fef071647,"Avoid wrapping byte[] and ByteBuffer in streams.

The streams use a buffered stream where the limited size buffer can
cause failures if parsing metadata requries reading past the buffer
size.

This is unnecessary for these two types because both already have all
data in memory or otherwise handle buffering internally. Avoiding the
buffer also saves some memory overhead."
87a77cea15a0eed253fabc57ff36a1f9b3556fff,jcenter -> mavenCentral + gradlePluginPortal.
5f261f3af7585d96c022c18892b5e1e688ccb21a,"Merge pull request #4526 from sjudd:switch_to_maven_central

PiperOrigin-RevId: 363245876"
86b5929ccd64f893e0eb89e151f892442f3fc894,"Merge pull request #4525 from sjudd:avoid_array_buffer

PiperOrigin-RevId: 363257245"
15d96483d36099a1d088cef4a5bccc234fc66ec4,Update gradle plugin to 6.7
a2e11dc2565c8f9e9832234cb4bdfa4cd74d82b5,"Merge pull request #4527 from sjudd:update_gradle_wrapper_to_6_7

PiperOrigin-RevId: 363557881"
d2bb3e8a6a2296b20ecaeb7759c16ef15aacbb28,"Internal

PiperOrigin-RevId: 363696807"
b52356253d088824fa3f05d645a8eb5297fb5c60,"Add benchmarks for the various data types supported by Downsampler in
Glide.

I've added a few new types that should probably be reverted or thought
through more carefully."
ce6852d372b2b6fe6d52fe039b7003b1891a8435,feat: change the default for PREFERRED_COLOR_SPACE to be null
71e7c2f9efaecfa224c13ed48dbdeddeeabe163e,"Merge pull request #4529 from sjudd:add_benchmarks

PiperOrigin-RevId: 364912638"
80922f1da10d8426e4f718696291712a7b8dc61c,Add various benchmarks for Glide/MediaStore/Downsampler.
a2b759bdcd668f05011e3864aad69f317f342283,"Merge pull request #4536 from sjudd:add_more_benchmarks

PiperOrigin-RevId: 365713946"
ce8b5e31d7c8ee8e98725142b9c22c478f78cefd,TranscoderRegistry.getTranscodeClasses method should return registered transcode classes
0ac564fd27c5f382f7f180d327d87d889fc7ceb5,"Fixup the testutil package for the external build

PiperOrigin-RevId: 368276634"
755c39fb1ff49895ada9f13d808fa46153112980,"Try to decode source data directly if we fail to write it to disk.

Currently if you disable the disk cache using DiskCacheAdapter or some similarly non-functional implementation, any attempt to load remote data with DiskCacheStrategy.AUTOMATIC or any data at all with DiskCacheStrategy.DATA will fail. In both of these scenarios Glide expects the data to be written to the disk cache first, then decoded from the disk cache. So if the disk cache can't write the data, the load fails.

Here we're changing Glide so that even with these strategies we attempt to fall back to decoding the original data, if we can rewind it. I can imagine this behavior being confusing in some cases where someone misconfigures the disk cache. Arguably this change should be limited to DiskCacheStrategy.AUTOMATIC.

I've decided to just keep this always because it's probably better to succeed at loading if we can, even if we fail to cache the image and doing so introduces some confusion. For users who want to disable the disk cache entirely, it's also unexpected for the default behavior in Glide to be to fail 100% of remote image loads.

PiperOrigin-RevId: 368307717"
a7b254c42888db691b7339b2165abcd462473fcf,"...Androidx Annotation Migration...

PiperOrigin-RevId: 368922286"
4733d1d3309e0f9af1e751f266c5fb0f9fd3a9ce,"Avoid cancelling preload requests until the primary request completes.

PiperOrigin-RevId: 369340778"
e6464721cef2c4b1c3e26f30c9a01c0e13e22f97,"Plumb toString() all the way though to the in-flight request.

PiperOrigin-RevId: 369466372"
621da63582b42bc0167e6bc0da75156b4884796d,"Add more tracing for image loads.

PiperOrigin-RevId: 370781879"
0e6912a910e083a1cc0360712ca18eaed4d12d42,"Replace RuntimeEnvironment.application with ApplicationProvider.getApplicationContext()

PiperOrigin-RevId: 370997557"
2d57f6967a32784d2878f91cffc97792fbef0323,"Rewrite `x.equals(null)` to suppress EqualsNull errorprone check

PiperOrigin-RevId: 372153036"
a8c24c63c195306f82e36775d9f08f23c72c700e,"Fix a StrictMode violation in VideoDecoder#decode.

The explicit termination method MediaMetadataRetriever#close is expected to be called when StrictMode is enabled.

PiperOrigin-RevId: 374525345"
9dc1f608540039c29931c22e7c7512caa842fe90,update the documentation for default value change
9c7f7f83e961e90bf7a5a39b429dd403d1c196a2,"Merge pull request #4514 from skyinu:fix_colorspace_option

PiperOrigin-RevId: 378974972"
10acc31a16b4c1b5684f69e8de3117371dfa77a8,"Merge pull request #4546 from fightyz:fix_registered_transcode_classes_fun

PiperOrigin-RevId: 381908159"
e7fe3e35c0b66cba3531477adaee0bc4b51c6988,"Remove some generated accessor methods in TranscoderRegistry.

Not sure why these started blocking submits now, but...

PiperOrigin-RevId: 396008732"
c0dc37e4dc9325e26f2bb113713f0785433454b7,"Fixed typo in RycyclerToListViewScrollListener javadoc

Removed extra 'the' from RecyclerToListViewScrollListener javadoc"
286cb0f27ba28c4939919f3ba7cf8fa12fc9894a,"Merge pull request #1 from madison-allen/firstIssueBranch

Fixed typo in RycyclerToListViewScrollListener.java javadoc"
aa23eedb79196c29c61b366d8c9b93c34564fe09,"Deprecate .thumnbail(float) and javadoc RequestListener and thumbnail behavior.

PiperOrigin-RevId: 396424687"
02fed10b715785d24693ccd30fced378fb6dcaa9,"AtomicInteger instead of lock for threadNum

PiperOrigin-RevId: 396959585"
b21dde771d39e62604fc1bdaee9d35ee82d517dd,"Internal change

PiperOrigin-RevId: 396991722"
e9f7cecc75cb1059241366046af2fc05550aa6f9,"Merge pull request #4634 from madison-allen:master

PiperOrigin-RevId: 397104300"
dbdae568a37e9aabdab4ceb0ab9c7294de53861d,"Make the connectivity BroadcastReceiver in Glide a singleton

Fixes #1161

PiperOrigin-RevId: 397401635"
ef16e1cac4eeb8c8b78afdea5ee13ed5400859ee,"Migrate off deprecated mockito APIs

PiperOrigin-RevId: 398032461"
05f35ccd2eb059a7c89c8cc1d134e2529a1f3295,"Use a non-deprecated way of monitoring connectivity state on API 24+

PiperOrigin-RevId: 398530281"
66c46f6e160b45031fa58ee51d52025b92e4ba1c,"Use a non-deprecated way of monitoring connectivity state on API 24+

PiperOrigin-RevId: 399492414"
4504939c0f17a98a2afc511814b08e57d8530723,"Use a non-deprecated way of monitoring connectivity state on API 24+

PiperOrigin-RevId: 399546909"
b43ea9833e9f5f0cb0f6b3a35664c3e2aaed956a,"Use a non-deprecated way of monitoring connectivity state on API 24+

PiperOrigin-RevId: 402658425"
833ef21d4edd9f907cecbdc9e780fc88058bf66f,"Rollforward using a non-deprecated API for connectivity monitoring

PiperOrigin-RevId: 406191957"
808a685f3c538621d5dfecd9928d2f75a4b7f68e,"Hardcode the maximum FD size for honor/huawei devices to avoid native crashes.

Fixes #4165

PiperOrigin-RevId: 406440064"
f9d9afe2f2a8af52680035bf811776cfdfc328d7,"Add support for Android S

PiperOrigin-RevId: 406952005"
2faabe8b7c0ebfff537c9a150795293ad5fbb5df,"Android SDK T drop

PiperOrigin-RevId: 407223800"
ba544276d2bd2a7b72d85273018661ca98baad16,"Remove unused custom shadow

Also make a followup change to 2faabe8 since compiling against T will not happen for a while

PiperOrigin-RevId: 407393064"
02165470c6b5e931ca231515b424dcd2e4af604b,"Retry adding pending RequestManagerFragments.

It's pretty easy to call Glide before super.onCreate in an Activity. If we do so, any attempt we make to add a Fragment will reliably fail. That in turn causes us to register a RequestManager with the Glide singleton that never gets unregistered because the Fragment that should do so is never added.

We're avoiding that here by using the existing pendingFragment maps to verify that the Fragment was in fact added. Previously we just assumed the Fragment was added and removed it from the map in the next frame. Now we check the FragmentManager and loop until either the Fragment is added or the FragmentManager tells us it has been destroyed.

The logic here is duplicated because there's no shared interface across the support and non-support Fragments.

PiperOrigin-RevId: 407444491"
5e1e71008a97b86fc50975cf4af405bfd2157d18,"Failed assertion adding two fragments.

PiperOrigin-RevId: 407900604"
f40cc137d86bb251367b3c7747af9b08795dca8a,"Rollforward retry adding pending RequestManagerFragments.

This attempt includes a fix to handle starting requests before Activity onCreate during Activity re-creation.

When an Activity is re-created, the old request manager fragment is retained. Normally that's fine because when we start the request we look up the old fragment and use it instead of adding a new one. However if we manager to start the request before Activity.onCreate, the FragmentManager's Fragments will not be populated and we won't be able to find the previous Fragment. That leads us to create a new Fragment, associate the RequestManager with the new Fragment and add it in a posted Handler message. When that message runs, Activity.onCreate will have finished and we'll find both our new Fragment and the old Fragment.

To handle this case, I've narrowed the assertion to only throw if there are requests associated with the existing Fragment. If there are requests associated with both Fragments, then it's unsafe to remove both and we're in a weird undefined state. If there are no requests associated with the old/existing Fragment, then I just remove it and replace it with the new one.

PiperOrigin-RevId: 409253061"
258305660c0b78cc39f8cdb49078e2175a5335e6,"Start lifecycles not RequestManagers in RequestManagerRetriever.

This was originally added to fix a memory leak when we registered the connectivity receiver globally, but not the RequestManager. We've since started registering the RequestManager globally, so this fix no longer works. Neither fix should be necessary if we can make sure we use the correct Fragment here anyway, which I think we've done.

PiperOrigin-RevId: 410075941"
0f7ba1946e373393bde7cd722568b8dbc36ae545,"Collateral for b/206969426

PiperOrigin-RevId: 410831923"
1c0a45f80b92179291f99a68b1a471c0f939c10e,"b/206969426

PiperOrigin-RevId: 410873535"
3fd8e777e2be6a3fedc5f5c5f688970a212a285f,"Add AVIF sniffing to DefaultImageHeaderParser

Android 12 supports AVIF.

PiperOrigin-RevId: 413818906"
8bebf71e80c2cd1f260d919e6b0697436da6e302,"Rollforward retry adding pending RequestManager Fragments.

This time I've made sure we look for pending fragments before we try to look up any previously added fragments. Prior to this change, we might add a pending fragment but then successfully look up a Fragment from an old instance of the Activity in a subsequent request if that request occurred after the old Fragment was re-added but before our pending Fragment was added. Now we will only ever use the pending Fragment if one has been added.

PiperOrigin-RevId: 414768848"
a6d84a81e3302dc672e7a0a8599e0eea6b550c72,"Add instrumentation test for AssetUriLoader.

PiperOrigin-RevId: 419928432"
52a8cf84a9c10123777db805b235bf47e18ec234,"Change asset uri data fetcher to return AssetFileDescriptor rather than ParcelFileDescriptor.

PiperOrigin-RevId: 419944523"
afc37e814de8d5dbfd02054beef28a6b2e9a358b,"Internal change.

PiperOrigin-RevId: 421155154"
42654b298ebf2d2931a1b6d099f9f2b901dc37b1,"Add support for animated webp detection to Glide's ImageHeaderParser.

PiperOrigin-RevId: 421923663"
f83cc274b42cf02af6611d2a8c21e4a9b1f5d592,"Convert image decoder helper class into a OnHeaderDecoded listener.

Avoiding inheritance makes it easier to reuse in the future. I also think it's a less confusing code structure. This is technically a breaking change, but the API is experimental anyway...

PiperOrigin-RevId: 422642039"
979459c485cf3a02e41fd58e9adcaca1e0029d35,"Add experimental ImageDecoder based animated webp decoders to Glide.

I've also renamed the GIF bucket to ANIMATION and used it for animated webp decoding. The old value is left in place for backwards compatibility.

PiperOrigin-RevId: 422658088"
f5e78ed03c99a9804285360b36b04d3089c80cff,"Internal change

PiperOrigin-RevId: 424362058"
2b52437cd52bbacf0376d84aa2eec5b63ba53ac4,"Open source the AVIF Integration

AVIF integration adds support for Glide to decode and render AVIF
Images without relying on the Android platform's AVIF decoder.

This CL adds a new sub-project ':integration:avif' which can be used
to add AVIF support in Glide.

PiperOrigin-RevId: 424399907"
878d148a34825a78ca3c8d9501d16057c18203a9,Bump version to 4.13.0
1a6fa926ea391d6e5ac0045f67bb3ea249840117,"Merge pull request #4738 from sjudd:bump_version_to_4.13.0

PiperOrigin-RevId: 427031698"
96596ae9269e85f31d5c6a158c2ab92c16677703,"Handle connectivity changes < API 24 on background threads.

Registering a broadcast receiver and interacting with ConnectivityManager requires IPCs which in turn impact performance.

PiperOrigin-RevId: 428127830"
46ed2fa26eb87c77af53b615da8afd8a40ee0b6d,"Move Glide registry initialization to a separate class.

PiperOrigin-RevId: 428618167"
48cf57b7c6a83b0de18deeedebd51430e0af2934,"Move Glide Registry initialization to a background thread.

By making the Registry lazy, we defer initialization until the first time it's used, which will be during the first request to load an image. Since image loads only happen on Glide's background threads, this effectively moves initialization from the UI thread to a background thread.

PiperOrigin-RevId: 428640031"
a607b1d6795c807dd5d1b1ee78b808ead7f7fb50,"Move Glide Registry initialization to a background thread.

By making the Registry lazy, we defer initialization until the first time it's used, which will be during the first request to load an image. Since image loads only happen on Glide's background threads, this effectively moves initialization from the UI thread to a background thread.

PiperOrigin-RevId: 428650795"
edf9d32aa4ea7c9ff7a9ddd346b6609ef9423deb,"Remove Glide's spotless integration.

It's causing spurious failures that can't be fixed. We can rely on internal formatting tools for now.

PiperOrigin-RevId: 429667832"
6ba4b548cae12f3aa53634a59025069834c0ea14,"Move Glide Registry initialization to a background thread.

By making the Registry lazy, we defer initialization until the first time it's used, which will be during the first request to load an image. Since image loads only happen on Glide's background threads, this effectively moves initialization from the UI thread to a background thread.

PiperOrigin-RevId: 429678596"
67350cd7de90e583db423ddb62bca87a5fb5ec98,"avif: Add annotationProcessor dependency

Without this, the annotation processor won't be able to find the
AvifGlideModule.

Fixes github issue #4751

PiperOrigin-RevId: 430490297"
ad35f5e4fcd2e34750289fa1f9820579b2661f0c,"Default on animated webp decoding in Glide on P+

PiperOrigin-RevId: 430741092"
14b3bf5445ef2e347389fc6a20693a047fdc31b1,"Configure alpha as false explicitly on jpeg encode tests

Jpeg encoding does not support alpha.

PiperOrigin-RevId: 432968779"
e2b488c30d27138fecc7a3adc353c66b3756147f,"avif integration: Update libavif dependency to a319893

The update fixes proguard stripping/obfuscating of native code
and java members that are being accessed from native code.

Fixes Github issue #4761.

PiperOrigin-RevId: 434574974"
50702ef9a90968349051856c5d3b692987b38cbf,"Remove lazy registry intialization flag from Glide and default it on.

PiperOrigin-RevId: 435206652"
9840c91e1b2d358d9c9367654eacd4b4719ed849,"Disable ParcelFileDescriptor rewinding for Robolectric tests as Os#lseek does not work in Robolectric.

PiperOrigin-RevId: 437780484"
4f29adab64f6b43a10652f4d26ba3ecdaf0b5e47,"Rewind ByteBuffers in ImageHeaderParserUtils between each parser.

Previously we were rewinding InputStreams reliably, but not rewinding ByteBuffers. This could mean that only the first parser had the chance to read the data correctly, even if multiple were specified.

ParcelFileDescriptor is pretty confusing. Prior to this change we were closing the InputStream. In a Robolectric environment, closing the InputStream seems to close the file descriptor, causing subsequent parsers to throw IOExceptions when they tried to read data. However on an emulator, closing the stream doesn't seem to close the file descriptor and things seem to work. I have made a change to explicitly avoid closing the stream when we create one from a ParcelFileDescriptor because that seems to align with the expected behavior in the method. The caller should be responsible for creating and closing the resource. All that said though, I'm not sure this makes a difference outside of Robolectric.

I believe this fixes #4778

PiperOrigin-RevId: 438635301"
9e93e0b879a533bc55ea6303742dabcf2f0c77c4,"Improve error messages in Glide for empty strings.

Before the error message was ""Load failed for  with size [100, 100]"". Now the message is ""Load failed for [] with dimensions [100, 100]""

PiperOrigin-RevId: 446289257"
17cae33fd8a966f741495e5c8604661629821006,"Allow Drawable requests to be loaded with a specified theme

PiperOrigin-RevId: 452415405"
8875d30ee10d5432d8c872d45792678da01781eb,Clean up and rearrange gradle.properties
3633e95064405744485ce469870bdfdb9428fbd9,Some more versioning cleanup
f91be270404a3231bd9ee1b7e12301cd5aef95a5,Bump version to 4.14.0-SNAPSHOT
340d57bfd9abd593bc06f10be0b99cd701c6fc51,"Merge pull request #4817 from sjudd:bump_version_to_4.14.0-SNAPSHOT

PiperOrigin-RevId: 456193802"
1f73006e3d02f4b16c81a46b62d5bfaf8dad3119,Merge branch 'master' into fixVersioning
fd5e7df9fc8d43522a32b3be966f5895e78a8d15,"Merge pull request #4813 from TacoTheDank:fixVersioning

PiperOrigin-RevId: 456503369"
fdbb694e68d117553cdc89f32932e0a129c2c75f,"Update Glide to Gradle 7+

This change will require newer versions of Java, probably 9+. I've
tested it on 11. The biggest difference is that older versions of Java
will require rt.jar to compile Glide's annotation processor. On newer
versions of Java that jar has been removed and the dependencies are
available as part of the Java plugin. For now I've required newer
versions of Java. If this proves complex, we could optionally include
rt.jar and partially revert this change when we detect older versions of
Java being used.

The single largest problem with this change is that I cannot figure out
a way to get the annotation processor tests to run. They require the
android library plugin because they depend directly on Android code.
However, they also require access to javax classes. These classes are
included via jmods on newer versions of Java and the rt jar is not
available. The jmods are only available from the Java plugin, not the
android plugin. This means that we can either get access to the android
classes, or the javax classes, but not both. I can't find a reasonable
way to resolve this in the short term. For now the tests are still
enabled using blaze/bazel internally."
2a43b5aaee314a32ae7128ff64c88f403c231fe9,"Update Glide version in readme to 4.13.2

This matches the latest released version.

PiperOrigin-RevId: 457818563"
cec74646074e8494b8ab5f8ec68f5bb91be7615c,"Add more detail to the javadoc for onlyRetrieveFromCache

PiperOrigin-RevId: 457819311"
9560eadb130a49e8d11fc328d059667087fd0633,"Merge pull request #4820 from sjudd:update_to_gradle_7

PiperOrigin-RevId: 457823446"
dae0f9ae78349e9f589ac4c1dded732ea0076068,Convert Gallery sample to Kotlin using a ViewModel and Flow.
1f0b0493892d9e23b71f61a10d237d7eed005e62,"Merge pull request #4822 from sjudd:gallery_kotlin

PiperOrigin-RevId: 457864906"
b8fb588c2dcba0792747ccc1374b923bd9e1926a,Update AndroidX libraries
a287253579d4e68f993a4fabcf9f29f5fde2562d,"Merge pull request #4829 from TacoTheDank:updateLibs

PiperOrigin-RevId: 459863807"
2895b351fa6dde68ab5dc85c591f47bd4a395475,Fix some gradle script deprecations
31e7ce34ebad92ecebb7ec9d6288be30c748b830,Fix some gradle deprecations
50440de73eb62662a722f84e576c8bfe9042f583,"Internal change

PiperOrigin-RevId: 460785305"
faf85ec4351893eef81b52e982fa1067af1e8fdd,"Remove jarjar jar from annotation/compiler in favor of a maven dependency.

PiperOrigin-RevId: 461248989"
3f8d3b2b5c8f6608718de21d39f14b36aa4ac539,"Merge pull request #4828 from TacoTheDank:updateGradle

PiperOrigin-RevId: 461251636"
3711e0315cee9a220534e31e25df6ee29b5406a4,"s/uploadArchives/publish.

From fdbb694e68d117553cdc89f32932e0a129c2c75f, we need to use a slightly
different command to publish our sources to sonatype."
d52c6ae9d5750abc7b6b9970fd615f1a7b54bb18,"Merge pull request #4841 from sjudd:upload_archives_to_publish

PiperOrigin-RevId: 461875936"
b1fd63570a5aa05bc61dd8bcacaf6d5f77efc2e3,"Use android.compileSdkVersion instead of android.compileSdk

While you can set the sdk integer with compileSdk, you don't appear to
be able to read it from the project using that shortcut. Instead reads
still need to be done via the not yet deprecated compileSdkVersion.

Fixes a regression introduced in
https://github.com/bumptech/glide/pull/4828. I'm not clear on why the
presubmits did not catch the issue then, but started to after that cl.
I've explicitly started running the failing tasks in the hopes of
avoiding this in the future."
1fe4f0152f05558e28863cb77be648d7198a7c1f,"Merge pull request #4840 from sjudd:fix_android_sdk_version

PiperOrigin-RevId: 461930522"
66403763e8235dd2f45d1e6007cd25c62f43843f,"Replace exif_orientation_examples dependency with license free images.

PiperOrigin-RevId: 461941186"
c35ad1351ee47314f69ad5ecc405a28fbf919298,"Add a basic KSP Symbol Processor for Glide

This library only implements support for basic configuration of Glide. Like the
Java version it can detect and merge multiple LibraryGlideModules and a single
AppGlideModule. The merged output (GeneratedAppGlideModule) will then be
called via reflection to configure Glide when Glide is first used.

Unlike the Java version this processor has no support for:

1.  Extensions
2.  Including or Excluding LibraryGlideModules that are added via AndroidManifest registration
3.  Generated Glide, RequestOptions, RequestBuilder, and RequestManager
    overrides.
4.  Excluding LibraryGlideModules that are added via annotations

I suspect very few people use the first two missing features and so,
barring major objections, those features will be only available via the
Java processor and in the very long run, deprecated. Kotlin extension
functions can provide the same value with less magic and complexity as
Extensions. AndroidManifest registrtion has been deprecated for years.

For #3 ideally we do not support these generated overrides either. Their
only real purpose was to expose the functionality provided by
Extensions. The one caveat is that our documentation has encouraged
their use in the past. If we remove support instantly, it may complicate
migration.

I will support #4, but in a future change. This one is large enough
already.

PiperOrigin-RevId: 461943092"
4016448fc56179ac5fa6eaf352113617f04847a5,"Add support for parsing LibraryGlideModules.

Every round now writes a new Index containing all LibraryGlideModules in that round. When we encounter an AppGlideModule, we read all previously read Index classes, extract the LibraryGlideModules they point to, and write a merged AppGlideModule that calls the developer's AppGlideModule and all of the LibraryGlideModules.

Excluding LibraryGlideModules is not supported yet. The library is still in a pre-release state.

Progress towards #4492

PiperOrigin-RevId: 461946515"
269c447ba4fd51565ac3fb22b867be1ed27dde69,fixed bug where it was unable to find night resources when using night mode
6f681a2660b6a7209f43a45a8a3ca2cf9afd6a05,"Move Model conversions into a separate file in Glide's emulator tests.

This makes it a bit easier to re-use in different files.

PiperOrigin-RevId: 462167970"
839899dd252c58045b992181791d2aa9412bfdc0,"Target API 32, update tests to use java 11."
2a787b9ba4287dd1f1efd19b1139794ee8b530b6,Add support for @Excludes in Glide's KSP processor.
813ebd684f87aa351aed336bacef7b9eea1c1f85,"Merge pull request #4845 from sjudd:target_32_java_11

PiperOrigin-RevId: 464841931"
e802964ddc838b4db776d45689e9dfd6f46a5b2c,Deprecate Glide fragments in favor of androidx Lifecycle.
201252860eadd813d8acaad210c475a8ba53a7f0,"Merge pull request #4844 from sjudd:support_excludes

PiperOrigin-RevId: 465140150"
9f04fd005925ffc39c3e103e9e88a1a85977bee0,"Use KSP in the gallery sample, remove references to generated API.

This helps verify that the ksp process works and shows the changes required when the generated API is not available."
2538359fbe454d0290e8ee25e01d516379aee2bf,"Merge pull request #4857 from sjudd:ksp_in_gallery

PiperOrigin-RevId: 466144958"
f714343985eee3933444a90389361483535161c8,"Use a real file path to allow content resolve to open the file

PiperOrigin-RevId: 467252108"
5c232dd12b5710c9bb8d940313e77351a39bc6a6,"Deduplicate status and cleared calls in ErrorRequestCoordinator

Previously we'd let both the the primary and the error request notify when the status of a request changes (ie cleared -> running). That would lead to duplicate running calls, once for the primary request, then when it failed, again for the error request.

This change also relaxes the requirements for canSetImage to be either request because we only ever run one at a time. It also simplifies canNotifyCleared to just the primary. For notifyCleared we just need one or the other request to do it, it doesn't particularly matter which one. There's no defined agreement over whether the primary's placehodler will be used, or the error if both have placeholders. Using the primary's always seems more coherent."
1b364c719fb2f089ea761b04eb005197b02b240d,Fix a bunch of javadoc warnnigs.
10bffe360373da64aa4a1fbf4d999797be1caccf,"Merge pull request #4866 from sjudd:error_request_coordinator_fixes

PiperOrigin-RevId: 467979387"
1a2cfe36bf32a8b3d8f155cf8e66e145fcfc3ba7,"Avoid always overwriting RunReason with one specific one in DecodeJob.reschedule.

This seems to have been around for years. I think the only negative impact is that we call into the SourceGenerator and run a few extra lines, which shouldn't materially impact the result of the load or its performance. It's certainly confusing though.

PiperOrigin-RevId: 468008961"
71c1fcfaab833685d789cd6c122d6d9be0d6b793,Fix the KSP suppression for unused context parameter.
00da16778860f8afd4b9fde16cb087eb7a7f0618,"Merge pull request #4847 from sjudd:fix_javadoc_warnings

PiperOrigin-RevId: 468013574"
c38ce36cd6827251fbc5e49b79d4e83dec8d71be,"Notify RequestCoordinator before Targets/Listeners when loads finish.

This allows callers (ideally only Glide's framework) to reason about the state of the load based on the Request object. Prior to this change, the Request object is not updated for loads involving thumbnails or error request builders until after the Target/RequestListener is called. When RequestListeners/Targets check the state of the Request, it still has the previous state that doesn't match the callback the RequestListener/Target just received.

PiperOrigin-RevId: 468013881"
24e4b0f2a6932d37a86233c40710deb080a4a7de,"Merge pull request #4867 from sjudd:fix_unused_parameter

PiperOrigin-RevId: 468032985"
7d9e1a3659a23c58457338ce449a37cdcddc62fb,"Add an experimental integration with Flows

Currently the only Flow will emit the status of the load along with the current placeholder or resource, clearing the request when the Flow ends. In future versions we might consider making clearing the target optional so that resources could be used after the flow is over. We could also expose some additional helper functions to make it easier to work with the first run of a flow, or to exclude placeholders. For now this seems like a reasonable starting point."
c9d0f9f85b2c8203afe611b3592f5353b5ae7873,"Merge pull request #4868 from sjudd:add_kt_flow

PiperOrigin-RevId: 468065075"
7a20806a98dd51685adc588efb47c1124ff3b8eb,"Merge pull request #4848 from sjudd:support_androidx_lifecycle

PiperOrigin-RevId: 468341787"
3cd533fc6fe7244e62d180a7990513ccef6d9878,"Use release instead of debug variant, fixup benchmark package.

From Glide's perspective these two variants are exactly the same. We don't do any different configuration for release vs debug. However, the Kotlin binary-compatibility-validator only works on the release variant and it doesn't appear to be configurable to work on a different variant. To use that plugin, we need to have a release variant.

The net output here should be the same as before, just with Relase* task names instead of Debug* task names.

The benchmark project changes seem to be unrelated, but I think they're
actually required by some additional checks that the tools run by
default on release variants but not debug variants."
79e726e1b53fbe6e265358edaf0cac9a0023e986,Link proguard-rules.txt in README
842c6b0fd48d5f0561308f4394c73151a1d9eca6,"Merge pull request #4873 from sjudd:swap_to_relase_variant

PiperOrigin-RevId: 469066225"
0f967b2bd29d600f0ea5727b2165e1da7c123c76,Add Kotlin's binary compatibility validator.
e9791e8a6ae67cf13586e64f17734c8755559ae2,"Merge pull request #4875 from Goooler:readme

PiperOrigin-RevId: 469081755"
c30aee9f01fd10d60e4da8e36812595d30cf8abe,Optimize CI a bit
896a0b74c9cddeebfed3cf8e8324dd61b0be4069,"Merge pull request #4877 from sjudd:add_binary_compat_validator

PiperOrigin-RevId: 469085371"
aee590a50bdc6952bbe5f5cd6d3edb757fb60bcf,"Avoid launching Glide's flow's clear

Launching the clear means a long delay when a lot of requests build up,
which in turns adds latency when requests are churning (ie scrolling
quickly through a list).

It was added to avoid clearing a Target in response to a Target
callback, but that only happens in certain types of forced main thread
requests, which won't happen in prod. In fact I've already removed the
behavior from the tests, so it's entirely bad."
13ca8bc1dfee68ec82aadde6649df2a4c519abba,"Default to debug signing key for Glide's samples

Without the debug signing key, trying to build the samples will fail because apparently the release config requires a custom signing configuration.

I also cleaned up the top level build file a bit.

PiperOrigin-RevId: 469333168"
2be5834de9e69f2859732d0ebff96241a58e3c13,"Merge pull request #4880 from sjudd:dont_launch_flow_clear

PiperOrigin-RevId: 469917836"
f86db6fb3003b88a405ffa437b510414a1df2af1,"Allow Glide to build both release and debug variants again

It's annoying because from Glide's perspective these are identical. However, Android Studio requires the debug variant to show syntax highlighting for instrumentation tests. Similarly the kotlin compile testing rule requires a release variant to output and validate API dumps.

It seems a lot simpler to just give in and double compile/test everything

Fixes #4881

PiperOrigin-RevId: 470288990"
93d176e205130d0cb59d8326fc9d13533bbfcd7a,"Copybara import of the project:

--
10973a13b3bd54b0debd844495775177c1fdd2fe by Sam Judd <judds@google.com>:

Add an internal RequestBuilder flow for async sizes.

This will be used for the Compose integration. As the kdoc says, we
could consider expanding the visibility more broadly if we come up with
use cases beyond Glide's Compose integration.

COPYBARA_INTEGRATE_REVIEW=https://github.com/bumptech/glide/pull/4869 from sjudd:add_async_flow_size 10973a13b3bd54b0debd844495775177c1fdd2fe
PiperOrigin-RevId: 470334481"
45447dde17fde5feace1afdbe743842691e2fc1c,"Merge pull request #4879 from Goooler:ci

PiperOrigin-RevId: 475333693"
8454296dea3cee6cdd77c5af89c18b91228ca727,"Copybara import of the project:

--
d2865d8cca92dc2dc6e5e1483656bc5406f2af88 by Sam Judd <judds@google.com>:

Add a Compose API for Glide.

This is relatively early stage at this point. The API is likely to change in
breaking ways. Ideally the migrations are not large, but I'd expect a
few iterations.

There's already a TODO to improve the Prealoader API and make the
GlideImage API less reliant on GlideBuilder.

Early feedback and usage would be welcome, with the caveat that it'll
mean some migration work down the road.

COPYBARA_INTEGRATE_REVIEW=https://github.com/bumptech/glide/pull/4886 from sjudd:compose_api d2865d8cca92dc2dc6e5e1483656bc5406f2af88
PiperOrigin-RevId: 475636677"
fd5d2615af5698af11211aebcf1b9c58dbd503bc,"Internal deconfliction, will rollforward with no changes shortly.

PiperOrigin-RevId: 475654641"
790c3512d46bcfef3280009e1a1312e6e0b72cbe,"Work-around MediaMetadataRetriever bug doubly-rotating HDR video 180 deg frames by rotating extracted frames from those videos.

 Target API 33 as well to allow Android T checks.

PiperOrigin-RevId: 475676584"
8bef56e2588a371363079a9e33053a9f1f663849,"Add a Compose API for Glide.

This is relatively early stage at this point. The API is likely to change in
breaking ways. Ideally the migrations are not large, but I'd expect a
few iterations.

There's already a TODO to improve the Prealoader API and make the
GlideImage API less reliant on GlideBuilder.

Early feedback and usage would be welcome, with the caveat that it'll
mean some migration work down the road.

PiperOrigin-RevId: 475696354"
5366e7b782599c607bed7a7aa5aa26d3bc1cf42c,"Increase application minSdkVersion to 14.

PiperOrigin-RevId: 475840270"
272c6c390938189972767168a754c01d909810bc,Convert Glide's Gallery sample to Compose.
94b86cc379226ec7baa62fcc71a08a865503b521,"Merge pull request #4899 from sjudd:compose_gallery_sample

PiperOrigin-RevId: 476430507"
42a40ed4aed03cf136c66410a4003c2735d5149e,Allow Glide's compose integration to be published.
dafc7e21d3d4cad5cc257dc39bb09cfb9b651106,"Avoid a javadoc tag warning in GlideModule

PiperOrigin-RevId: 476453614"
e5a29beb96d9fc8a31e9f0adc650f6b2bd09c4ec,Add an integration with Dokka to generate Glide docs.
b3f2216e1574c9a4f1db88b65497586a086c6095,"Merge pull request #4900 from sjudd:add_compose_publish_task

PiperOrigin-RevId: 477223236"
e59554f0ba82299837c2cfc8826ae6e22807e54c,"Merge pull request #4902 from sjudd:add_dokka

PiperOrigin-RevId: 477240539"
e220d3e9c15213c25e0efeb53d3a7e77b1cc87d6,Bump version to 4.14.0
fd8e68ad9b577e6f53fef5dead16bd56ee4ef564,"Merge pull request #4904 from sjudd:bump_version_to_4.14.0

PiperOrigin-RevId: 477306484"
a840bbc4036b3871b3758060ce8d18d44ab91c9c,Bump version to 4.15.0-SNAPSHOT
e5de57e844ec4990fb7f9e9de136f680af7c493d,"Merge pull request #4906 from sjudd:bump_version_to_4.15.0-SNAPSHOT

PiperOrigin-RevId: 477508548"
380d2dc6b6f40a79f71f2d8c961799ed6ca64113,Actually sign artifacts when on a non-snapshot version.
4d4f3ebe4b8d4aeb7dc833d1787442f04cf8d785,"Remove unused dependency on :glide in ksp

We don't actually require this dependency to build and it produces a bad
dependency on the pom file.

Fixes #4908"
37698193b25bca70d3da84ecaa3b523ed5d4df12,"Merge pull request #4909 from sjudd:fix_spurious_ksp_dep

PiperOrigin-RevId: 477754129"
e5a91d4109c1c45c42035a1fb2a49ad7b691a090,"Merge pull request #4907 from sjudd:fix_publish_signing

PiperOrigin-RevId: 477762387"
74ce246bb070143bc72c93f08b4c021e0e97fc26,"Remove unused lazy Glide registry experiment.

This was launched a while ago

PiperOrigin-RevId: 477771974"
8a279effe596e1877acf91e58aa27f2655bc4a38,"Internal change

PiperOrigin-RevId: 477864244"
098c1a40d9e85398f9a16d4683c510c665664d4b,"avif_integration: Add support for RGB565 Bitmaps

Some low-RAM devices tend to use this format. Honor the existing
Downsampler.PREFER_RGB_565 flag in the AVIF integration.

PiperOrigin-RevId: 478018960"
03e14bc7254b0f9136f670cd9252ca9b6556bd21,Update to gradle 7.3.0
94887875f880a91ca318a0d0f059f3a70a2c5c72,"Merge pull request #4912 from sjudd:upgrade_to_gradle_7_3_0

PiperOrigin-RevId: 478051444"
b420e88462037eed78c8a6e347cd055e44a48a46,Cleanup compilerArgs in parent build.gradle.
f9b508b439412daceaa543cfd261d2cd8ab39e60,"Merge pull request #4914 from sjudd:cleanup_compile_flags

PiperOrigin-RevId: 478121250"
c6a0dc533f50114999c4f70db7e74d8681710ddb,"Implement equals/hashcode for RequestOptions and TransitionOptions concrete classes.

It's a little tricky to get this right because we've defined
equals/hashcode in the base classes, but are implementing them in the
concrete classes. I think this implementation is actually safe because
the base classes are abstract. However making equals transitive requires
the weird equals() only implementations in the classes that have no
properties but are concrete implementations of the base classes.

A safer way to do this would be to move the the equals/hashcode
implementation out of the base class and re-implement it in each
subclass. However that would require exposing a bunch of internal
instance variables to subclasses. Given the existing structure and the
public nature of the base classes, this seems like a reasonable
compromise.

Fixes #4916"
293a2025c58502d082f706660ff4ae2afca9ef92,"Merge pull request #4917 from sjudd:fix_compose_model_updates

PiperOrigin-RevId: 479172065"
463688baee0bfe658ef6affd901b6af29fd1148e,"Move the Index annotation for KSP to annotations.

The processor will produce a Index annotated class for each LibraryGlideModule in given compilation unit. If the Index annotation is in the ksp module, it will not be accessible in parent modules, causing a compilation failure. To work around that, we'll follow the same pattern as we did for Java and place the annotation in the annotations package, but with package private visibility.

Any compilation unit that uses our annotation processor must already
have a dependency on annotation, so the Index annotation will be
available.

Fixes #4911."
c605b00b5468881a4b8217caaa3d9ee0059526b5,"Merge pull request #4919 from sjudd:fix_library_glide_module_deps

PiperOrigin-RevId: 479418663"
95c8f811a1a25a9dd893f456dafe2de9deb0f029,"Update Glide's README to point to 4.14.2

PiperOrigin-RevId: 479649841"
08c9f7212b4c7a657d6bd7a6c7edec5d9f2019a0,"Merge pull request #4842 from shijiayao-main:fix/fix_resource_error_in_night_mode

PiperOrigin-RevId: 480688510"
ef64c38a41f2cde4f2d760c312f6af9956badab7,"Fixes a bug in gms

PiperOrigin-RevId: 481179115"
26a393bb3745977ea4e75fde7dbf06d2b7fbb5b4,"Remove custom Canvas shadows from Glide Robolectric tests

The built-in ShadowCanvas can be used.

PiperOrigin-RevId: 482519852"
e1366e544309c0260a9dec6ed6ba3f260b8b9bb7,"Fixes a bug in gms

PiperOrigin-RevId: 482613746"
eab4c3742d02ad9f173773007ffc0077b8ace98d,"Load placeholders with the RequestManager Context.

Previously we'd use the application Context, which would not use the
Activity theme. That would in turn mean we would not customize Drawables
for light / dark mode.

I've also added a bunch of emulator tests. It turns out these changes
aren't quite sufficient, even with #4842, to get asynchronous loading
of resources passed to load() working. I've left a pretty extensive
comment in the new test along with ignored tests about what additional
changes we'd need.

Progress towards #3751."
4298bb7609eb97094406919189c5b147ab6af822,"Remove custom Bitmap shadows from Glide Robolectric tests

These custom shadows are not needed any more.

PiperOrigin-RevId: 482877761"
4bfda588b628389134c7a1269cc8202bb69510bf,"Prevent decoding VP8 videos on ARC devices, which can put the device into a bad state.

PiperOrigin-RevId: 483541133"
d5fc241c21bfbf5c162e5109e48a4af113aa39cb,"Add `loading` and `failure` parameters to GlideImage

These parameters will override equivalent values set via
requestBuilderTransform if the parameters are non-null. If the
parameters are null, then we'll apply whatever is specified by
requestBuilderTransform. I plan to add similar explicit parameters
for other values settable via requestBuilderTransform over time with
similar override behavior unless someone objects.

The `fallback` on `RequestBuilder` is not replicated. Callers can use
`failure` or if/else to provide custom behavior for null models.

Similarly `loading` is only shown while the request is loading. Unlike
`RequestBuilder.placeholder`, `loading` will never be shown after the
load fail. `failure` should instead be used to explicitly duplicate the
`loading` behavior if that functionality is desired."
a20276bee48ab29ff9919f473c5ef3b629a63931,"Merge pull request #4924 from sjudd:add_dark_mode_tests

PiperOrigin-RevId: 484122634"
32fb19fd1c66fd8af99145f3205df6d541a07f3f,"Merge pull request #4934 from sjudd:compose_placeholders

PiperOrigin-RevId: 484432082"
37bc006173813d5831d23c38f24a8ce0e6d0c654,"b/256152978

PiperOrigin-RevId: 484598284"
84f20eb3fdb10f589d57e040a42f3420dda2904e,Create GlideComposeRule to simplify adding new compose tests.
89472a35df81ca8924ad31870ccd17a5a800674e,"Apply optional transformations for ContentScales

Using optional trasnformations more closely matches the behavior of
RequestBuilder when loading into Views.

Using non-optional transformations will cause exceptions to be thrown if
the loaded resource type cannot be transformed. In particular any
non-Drawable / non-Bitmap resource will throw as will any Drawable type
that cannot be converted into a simple Bitmap.

Fixes #4943"
330b9a888e762dac3b2a0d7ec321a088fa90be8b,"Update two Glide tests to use public Bitmap APIs instead of shadow APIs

PiperOrigin-RevId: 486721523"
e247bb7f486a9c36a0f8dec2e3441195b26be727,"Remove obsolete TextLayoutMode(LEGACY) from Robolectric tests

PiperOrigin-RevId: 486843122"
66758e44a183b2ae11ff3078fb4a48b0dc85ac13,"Merge pull request #4948 from sjudd:issue_4943

PiperOrigin-RevId: 487051232"
0ce75a86a26de398d9b4ff33187e238472ee0051,Add tests for Glide's Preloader IndexOutOfBounds with non-Glide rows.
a3b9ebdf375be9b6979c788b836520de53598783,"Merge pull request #4951 from sjudd:compose_preloader_index_out_of_bounds

PiperOrigin-RevId: 488395020"
ede3c7180f1b8890a150229c2ab5cef177d53cb9,"Handle data changing in GlideLazyListPreloader.viewToDataPosition

Previously the function would get stuck using the first version of the
data, even if the preloader itself would use the current version always.
Now they both use the same data source and are updated in lockstep."
fab2aed3cfd1124a549cfb29b2098c0992fbf0c7,"Merge pull request #4957 from sjudd:compose_fix_preloading

PiperOrigin-RevId: 488794440"
6cb9486abc77d2fd37eda7de3f5a01c88725682d,Handle invalid sizes in GlideImage.
fdcef29bad8c3f37fe4e0d8f367df29167c2dfa2,"Merge pull request #4961 from sjudd:issue_4952

PiperOrigin-RevId: 490105161"
b32fc26d46e7945a6a271c674047328232367499,"...update jetpack compose library to g3...

PiperOrigin-RevId: 491420626"
e6f5eec4ff0d70be28e17c040ee0177edafd8da7,"Rollforward after gms fixes

PiperOrigin-RevId: 493658588"
18bba927a5e5fe7d07ada9667e9e503b9f0596a2,"Use Lifecycle instead of Fragments by default

PiperOrigin-RevId: 494046303"
04f198eb186bf7bc800f056a5fc104eff88b59f1,"Experimental ModelLoader to load using Resources

The new ModelLoader is guarded by an experiment. It should, in the long
run, replace ResourceLoader as the new way of loading resourceIds.
Instead of converting resourceIds to Uris and then loading the Uri with
ContentResolver, the new ModelLoader uses Resources.openRawResource
directly.

openRawResource, despite the name, works fine with normal Drawables as
well as raw resources. In addition, we can obtain a Resources object
that will use the Theme to pick the appropriate day or night mode
drawable. ContentResolver and resource Uris always use the default or
day mode Drawable.

The new ModelLoader should fix the most common use case for #3778 where
people pass in resource ids.

We'd need an additional change to handle cases where users pass in
resource Uris, since those still go through ContentResolver."
e63c5d216520baecaaad9273699765b8c02b28be,"Change Glide's preloading API to be data based

By data based we mean that we preload based on access to the data,
rather than the position of the user in the view. Data based access
matches how the Compose paging API works and is much simpler to
implement in safe / reasonable way. The primary compromise is that we
cannot begin preloading until the data is accessed. If there are
multiple disjoint data sets or multiple header rows, we may not preload
data while scrolling until we reach the first item in each data set.
Users can work around this in each application by manually accessing the
prealoding data set, but it's not super convenient.

Another option would be to wrap LazyListState and track each insertion
via item / items. That would let our preloader track exactly which
positions are preloadable and which are not. While the functionality is
somewhat better and it's safe, the implementation is much larger and it's
more complex for callers to call correctly. We can add it in later if we
find that the data based API is painful to use.

Yet another option would be to more faithfully implement the
ListPreloader interface and rely on users to paper over more gaps, just
as we do for non-Compose code. This is significantly more complex for
users to implement.

We've discussed a few options for this API here:
https://chat.google.com/room/AAAAYRnp4-Y/Q61ILNtb8hu"
472717c22189c45552d06470b69e2a629575fdc5,"Merge pull request #4970 from sjudd:compose_data_based_preload

PiperOrigin-RevId: 495469751"
581690343f76dd30619dfdde7ebf2a4c553e6198,"Merge pull request #4972 from sjudd:experimental_model_loader_resources

PiperOrigin-RevId: 495694663"
a912e0fba1142da4f939c12852d79bdf6192666e,"Support parsing package local resource uris to ids

This lets us load resource Uris with the same theming benefits that we
do normal resource ids. This is really only for backwards compatibility
so that we can more readily remove the old ResourceLoader and support
for resource Uris in UriLoader."
2aed37c1f6ea7c1d230e7085b5c0cdab9f97a08f,"Merge pull request #4975 from sjudd:parse_package_local_resource_uris

PiperOrigin-RevId: 495916229"
128d2903a41be4c8199f583a5dfa24ce158509e7,"Clean up remainders of lifecycle experiment in Glide.

PiperOrigin-RevId: 495925873"
464002b62496fc7b4c913563ae9496ee2f7764c1,"Create glide okhttp integration using okhttp4 dependency

PiperOrigin-RevId: 496520960"
01ed966e24ae26fac1dff9ef46b509e6d607b621,"Support loading placeholders in compose previews

Composable placeholders already worked, but resource and drawable
placeholders did not. Presumably some part of the production codepath
isn't supported by the Android Studio renderer. The actual display of
the resources seems to work fine, we just never get to that point in
Glide's code. Debugging exactly what's happening seems mostly
impossible. I don't see a way to view logs or debug code running in the
Android Studio preview renderer.

For now we can work around whatever the issue is by rendering resources
and drawables when in preview mode earlier than normal."
00e8c233a1ddf65092d840e96e94a11ff9d8b26f,"Wrap recursive initialization booleans in try/finally

Previously any exception in the initialization process could be hidden
by one of these recursive checks. The first time the exception occured,
it would be thrown normally, but subsequent times the recursive check
would be thrown instead. This complicates debugging.

Now we always unset the isInitializing boolean using try/finally. While
this doesn't fix anything directly, it does make debugging easier when
some kind of initialization error occurs.

Helps with #4977"
966815704feedc6d524a9724c74b88a28ba8b40e,"Apply the current Theme for Uri and resource ids.

Applying the Theme allows us to respect the Theme, including dark or
light mode resources. We're making the same compromise here that we've
made for other model types. Specifically we're only applying this
behavior if the non-generic version of the method is used, ie the type
of the model is known at compile time.

We could try to do this at a lower level, but there's some additional
risk of confusion about when or why the Theme is or isn't available.
While this isn't perfectly consistent, the behavior can at least be well
documented.

There's also some risk that passing the Context's Resources / Theme
classes to a background thread will result in transient memory leaks. I
don't immediately see a direct link between either class and the
enclosing Context, but it's hard to be certain.

Progress towards #3751"
2a6597323c910aab29c76cb8802176b7b394f5f1,"Merge pull request #4980 from sjudd:try_finally_initialization

PiperOrigin-RevId: 498460333"
c9f76cce1055fcdbe15096d36ab2c7071382b419,"Merge pull request #4979 from sjudd:apply_current_theme_uri_resource_ids

PiperOrigin-RevId: 498467550"
4f362632bea5ae841e4b7e2f2ebcf7f9b6cebef4,"Add units to CustomTarget's dimensions

Fixes #4989"
0b54bf735b82cc31d692464f674f96f772fe6294,"Internal change

PiperOrigin-RevId: 499533290"
0f755763b004495194fbc51d371bf60cf1b9920d,"Internal change

PiperOrigin-RevId: 499567653"
4affb8d2d9f4ca15c7953ca7322c52fb1e2dab1b,"Register RequestManagers before adding Lifecycle listeners.

RequestManagers are registered to a singleton. If they're not unregistered, we'll leak the RequestManager and the corresponding Activity or Fragment.

Unregistration is done via the destroyed Lifecycle event. While we assert that the Activity is not destroyed at a higher level, that assertion will not trigger during onDestroy calls on API 29+.

As a result on API 29+, if we add a listener and then register the RequestManager statically, we'll end up triggering an assertion because the RequestManager will be unregistered before it is registered. Pre API 29 we'd have crashed earlier due to the Activity having been destroyed.

To fix this on API 29+, we'll move the registration earlier so that we always register before there's a chance that the Lifecycle will trigger unregistration.

This behavior changed a bit when we swapped over to using Android's Lifecycle. However I think the old behavior would simply have registered the RequestManager and never unregistered it, leading to a memory leak.

PiperOrigin-RevId: 500018277"
31821f5ee0556560f5ee85552f6bfe92e52a178d,"Fix vector/shape drawables not loading with DirectResourceLoader.

PiperOrigin-RevId: 500212780"
9d0beccb05c8cd214d61099e664f719b5e028aac,WIP
ca5a0ac1e487b2246b228367115d292d423c2be4,"Update deprecation message for Glide.with(Activity)

PiperOrigin-RevId: 500796250"
5e7c91a24a4439ddf6da9521f99bfa2f72284c91,"Merge pull request #5000 from sjudd:fixup_direct_resource_loader_tests

PiperOrigin-RevId: 501356658"
c283043e722466142d026609ab2599ece6eac247,"Remove references to 'robolectric.nativeruntime.enableGraphics'

This system property was only used during the development of
Robolectric Native Graphics (RNG). Now that RNG code has been
merged upstream to GitHub, the graphics mode can be checked
directly.

PiperOrigin-RevId: 504464649"
0f9aea2979fbb5ea2cf763182fe13c9785a227d7,"Check for null results from PackageManager.getApplicationInfo

This should never happen based on the API documention. However,
Compose's preview API seems to return null anyway. Catch for the
exception for now while we wait for a fix in the tooling."
155bcb1a2a124ceaf9f121bc40c25a9056061695,"Merge pull request #4990 from bumptech:issue_4989

PiperOrigin-RevId: 509308029"
57248aecbd2ada7b26249284fc6e304603047cf4,"Merge pull request #5018 from sjudd:manifest_parser_null_app_info

PiperOrigin-RevId: 509337603"
895e2f7bb2b060cb88d460d0660a68ca0d9dec6c,"Support parsing of animated AVIF in DefaultImageHeaderParser

This helps us pass animated AVIF images through to the platform's
ImageDecoder similar to animated WebP.

PiperOrigin-RevId: 509647391"
d704c8954ae667483afa9a8efdb8b0059e1e979e,"Rename AnimatedWebpDecoder to AnimatedImageDecoder

This sets up the class to be used in a generic manner for other
animated image formats (like AVIF) that are supported by the
android platform's ImageDecoder.

PiperOrigin-RevId: 509657824"
62654be8ba337afa24e235d23902129f787e87d8,"Add AVIF support to AnimatedImageDecoder on Android 12+

Animated AVIF images have been supported on the Android platform
since Android 12 via the ImageDecoder API. Enable support for AVIF
on Android 12 (Build Code S) or higher devices.

PiperOrigin-RevId: 510167795"
fe6288a2c286c81e9eb7ca7c02fa3d901bfc1821,Fix typo. anay -> any in GlideSymbolProcessor.kt.
f73f00344b31bdad87ea90c722174895389904e5,"Enable DirectResourceLoader in Glide

The new loaders respect themes, dark mode, screen sizes and other resource attributes that are not supported by contentResolver.openInputStream. We can only use them reliably with resource ids and uris that are owned by the same package as the resource, so the legacy loaders will continue to live for other packages. There are also some edge cases, like videos in raw resources, that are not supported by the direct resource loaders.

This will result in a behavior change for applications. Resources that were previously loaded with default attributes will now be loaded instead with the appropriate theme / dark mode / size etc.

PiperOrigin-RevId: 511612517"
e58802e60b36ba76ece309a2c00fb66226498655,"Update error message in AnimatedImageDecoder

Replace an occurrence of 'webp' with generic 'image' since the
class supports more than just webp now.

PiperOrigin-RevId: 511910050"
ef0e63d5ad05c139dcc9f5c8d0ea644414f6c7b6,"Merge pull request #4982 from sjudd:compose_previews

PiperOrigin-RevId: 511916995"
76ba99d4c6bb7e0c2bd64ae083ec0ab51be8cd5c,"Bump version to 4.15.0

Also bumps compose/ktx integrations to 1.0.0-alpha2"
462416b88df5714f883c75c74eff9ed2af1b0a29,"Merge pull request #5031 from sjudd:bump_version_to_4.15.0

PiperOrigin-RevId: 512098930"
69e1bdaa7745e0fef443988ac8f03c62b6a60c5b,"Internal Code Change

PiperOrigin-RevId: 514634289"
414b9705377c57427feed760f6b0794ecd24edac,"Internal Code Change

PiperOrigin-RevId: 514648987"
3ec937266919039c8774851801341938a8ba9e1a,"Merge pull request #5029 from trevorhackman:typo/anay

PiperOrigin-RevId: 514842620"
0a35de6792770b2c81df04b82da3ce3226ca8f8c,"Add some more detail to on Target#onResourceReady

PiperOrigin-RevId: 514875935"
644789d9d938f8777c47b94a3eac1791e07be922,"Remove unused UseDirectResourceLoader experiment in Glide

PiperOrigin-RevId: 515080695"
16306e89dece9908e9ada2382f4b94b591120ea5,"Read library glide module names from Java indexes

Progress for #5043

Annotation processors (including ksp) only run on newly compiled code.
Libraries have been previously compiled, so an annotation processor will
not be run on them. To find any LibraryGlideModules included in those
libraries, we look for specific generated classes in those libraries
that we call Indexes. Indexes contain an annotation listing the class
names of any LibraryGlideModules. Indexes are generated by Glide's
annotation processors for each library and are exported as part of the
library.

To preserve the package private visibility of the existing Java Index
annotation, I created a new Index annotation for the KSP processor. This
lets us reference the KSP Index annotation directly.

Unfortunately it also means that the Java and KSP Index classes are not
the same. While it's only a small amount of duplicated code, it's a
significant compatibility issue because the KSP and Java processors no
longer produce the same Index class.

In particular the KSP processor looks only for its Index class and not
for the Java processor's Index class. This is unfortunate because
Glide's libraries are always processed by the Java annotation processor,
not the KSP processor. In turn this means that Glide's KSP processor
effectively ignores any of Glide's integration libraries.

To fix this in the short term I've made the KSP processor look for both
its Indexes and the Java annotation processors Indexes. A more robust
fix would be to merge the two Index processors so that the annotation
processors are mutually compatible. I'll do that in a follow-up.

I've written tests, but they're somewhat involved so I'll send them as
a follow-up."
bb6d5e27d6200407067dc3beff02e5f74ed47aaa,"Remove lifecycle support for non-androidx Fragments and Activities.

These methods have been deprecated for a long time. For support Fragments and Activities, we're relying on the androidx lifecycle which isn't available for these legacy classes. That means that our implementation will diverge over time, adding additional maintenance overhead.

No public methods are removed, the deprecated public methods remain. However they now delegate to the application context, which effectively removes lifecycle support.

PiperOrigin-RevId: 515107738"
1f07380eccd78fe6bef412435a23c242df8a77c8,"Clean up glide code for wait for frame after trim memory.

PiperOrigin-RevId: 515116760"
4cf46ff8381a844b5283d3c246e80065573a3250,"Fix flaky GlideExecutorTest

PiperOrigin-RevId: 515121217"
902bbd4c7225109b50f1ddb90aabb54882a485c8,"Merge pull request #5052 from sjudd:handle_java_indexes_in_ksp_processor

PiperOrigin-RevId: 515131629"
9fd7a84dfc92602e3dfc1c0ca741a87987558827,"Add integration tests for ksp library modules.

I've added a new module ksp:integrationtest so that we can keep the
pollution from the dependent module out of the normal library glide
module tests. There's more detail in the documentation for the
build.gradle file in ksp:integrationtests.

This does at least make sure that if a dependent module is added, it is
succesfully included by ksp. Previously the tests only tested either
library modules compiled with the app glide module or library modules
compiled by ksp. This new set of tests now tests library modules
compiled by java. If we ever compile a module with ksp, we should add
that module to these tests as well so that we have integration tests for
both types of modules. For now all modules are compiled only with the
java processor.

In an ideal world we'd be able to just run the Java annotation processor
using kotlin compile testing the same way we are with ksp. The library
seems to support it. However I can't figure out a way to get the javax
annotations and kotlin and android all available in a single gradle
module. For now using a separate module is reasonable (if somewhat
clunky) compromise."
cbc020ea512541929956eca03178c826525015ab,"Set Glide versions back to snapshot (4.16, alpha3)

PiperOrigin-RevId: 515146491"
501dedb34cfcfe095759833c8492f0de1cb25304,"Merge pull request #5054 from sjudd:add_library_module_integration_tests

PiperOrigin-RevId: 515147519"
dbd1f02e2305d382344ffec8dfdb2bb00c6d4ff7,"Add annotation processor dependency to cronet integration module

Without this automatic registration won't work. Manual registration still works though.

PiperOrigin-RevId: 515163064"
a8d73db3fb29edf52e346010f45cdc7e88316a92,"Internal Code Change

PiperOrigin-RevId: 515255773"
4992a631fba574c7b380d84b44b2945547f5e0d1,Update README.md
f88039387e76055aac0c75fc618814dea62087b6,"Re-add RequestManagerFragment.

I realized we should keep this class around even if it's unused because it's public. I've found a couple of use cases where people are trying to cast a class. This will help avoid breaking binary compatibility issues.

PiperOrigin-RevId: 515356118"
fda5929267eaca3e9c2007854ea614328c44cb82,"Remove more of the now unused support fragment infrastructure in Glide.

It should be unused as of cl/494046303.

PiperOrigin-RevId: 515425856"
8af364eda3424427303f3364da4e9920e60b31b2,"Launch no more than one request per onRemembered

It appears compose will call onRemembered multiple times without an
onForgotten call in between. Previously that would cause GlidePainter to
launch multiple requests. These requests are deduplicated by Glide, so
only one image is loaded. However there's still additional wasted work
and churn from tracking the additional request.

To avoid launching the duplicate request, we track the current job in
onRemembered, then cancel and null it out in onForgotten. If
onRemembered is called again and there's an active job, we can just
ignore the new call to onRemembered.

Fixes #5032"
c26c91d0c98cc9916eb7f0f6714d3caf98844345,"Internal Code Change

PiperOrigin-RevId: 515565550"
3cfdc4e71118f6222f82f942c27d5e8191d91cf6,"Clean up an obsolete comment in HardwareConfigState

This used to be public, but it was made private a while ago.

PiperOrigin-RevId: 515673875"
73662207f7adf5a28cb171d9e33c3f2b8bd3cad5,"Merge pull request #5062 from sjudd:fix_double_load_on_double_on_remembered

PiperOrigin-RevId: 515695961"
6b64ba4af551f5d13c4f090810e9eb6ecc481651,"Avoid using FragmentScenario in RequestManagerLifecycleTest

It fails randomly on the external build, it's noted as not being useful
in the class comment and it's only used in one test case, apparently
without any particular reason."
9bf326e087f89377c69f52f1f85e024d845aa029,"Run regression tests when resources are present or we're regenerating.

Previously the regression tests would run always, which means that
they'd fail 100% of the time for any device, emulator or SDK combination
that we hadn't previously generated resources for.

By ignoring these tests when the resources are missing and we aren't
trying to generate them, we make the emulator test output much more
useful for additional device types or emulators (ie those used for
testing features, but not in our regular test suite)."
1a2c5f8674e97e50b427817d09ab1d0fcef1c099,"Merge pull request #5064 from sjudd:fix_request_manager_lifecycle_test

PiperOrigin-RevId: 515776395"
65f8c833411229d37cfda3365841b8457c8124f0,"Merge pull request #5067 from sjudd:avoid_regression_tests_when_resources_missing

PiperOrigin-RevId: 515776408"
5c8b54b40bcd81295147e385aa36878becd92b95,"Merge pull request #5058 from simoarpe:patch-2

PiperOrigin-RevId: 515783979"
cddcbd53a61fe485ceaa4d7a10ed57556b75d9fa,"Internal Code Change

PiperOrigin-RevId: 515826371"
a490a59098ee6f909497f5bf065092c4ab5ca498,"Internal Code Change

PiperOrigin-RevId: 515944988"
e5a6540533cbe9aeb5aa842df6043854848e4146,"Allow either DISPLAY_P3 or LINEAR_EXTENDED_SRGB in Glide emulator test.

Some devices, IE Pixel devices, will return p3. Others seem to default to SRGB. Allowing either isn't great, but still in line with the spirit of the test and better than spurious failures depending on which device the test is running on.

PiperOrigin-RevId: 516284810"
9e1157f4bb5baefdd206da57f41b48594ce5078c,"Remove explicit clear disk cache call from TearDownGlide

Glide.tearDown() already clears the disk cache, so we shouldn't need to do it a second time.

PiperOrigin-RevId: 516325186"
f229c894f5f3936fcc2586944903b0a8be624271,"Register a BitmapDrawableEncoder in ErrorHandlingTest

Right now this test relies on the fact that we happen to attempt to decode Bitmaps before BitmapDrawables. If we were instead to decode BitmapDrawables first, the test would fail because the FailEncoder we register would never be called.

To make the test more robust to order changes, I've registered an encoder for both BitmapDrawable and Bitmap, which are the two types we could plausibly decode here.

I've also removed some duplicate code by moving the initialization step for two of the test methods into a shared method.

PiperOrigin-RevId: 516326606"
d0c9137a9c6f58f4b42603a36c8ecbe107cd9f3c,"Bump compose / ktx versions to alpha.4 after the 4.15.1 Glide release.

These need to be bumped separately because we're not currently doing dot releases the way we are with the rest of Glide. The rest of Glide can just use 4.15.1, but we don't want to add the complexity of 1.0.0-alpha.3.1, so we have to bump the version with each dot release.

PiperOrigin-RevId: 516360517"
c8e39b4f440cf515180b699cd8e9c3fe1c2f3e90,"Add Glide support for an experiment to disable Hardware bitmaps on O.

PiperOrigin-RevId: 516372431"
4196da8930162ea1f1361cffee8c321d0c01cd19,"Internal Code Change

PiperOrigin-RevId: 516429261"
295d92dad6151e8a0bedf7b5db920ab81058214f,"Hardcode and clean up the manual FD override flag in Glide.

PiperOrigin-RevId: 516867999"
84adff9ae8cedae9afa0633495aceaf8a5c5a47b,"Pass an executor into ChromiumRequestSerializer

ChromiumRequestSerializer creates an single thread executor
for executing callbacks from cronet. In tests, we want to track
all threads related to Glide and cronet through ActiveResource, so
that the test result is deterministic. So we pass an active resource
thread pool executor to ChromiumRequestSerializer, and the active resource
will be tracked by ActiveResourceRule.

PiperOrigin-RevId: 518069577"
eae751ceecee562c7ca2df25cbd89d71f25060cb,"Internal change

PiperOrigin-RevId: 518657355"
c0ef7f6fad519622e7d6bd11815cb618cb0cc644,"Set Glide's fragmentx version back to 1.3.6

I'm not sure how I managed to update this to a newer version without breaking the build, but it now appears to be broken. 1.5+ and I think 1.4+ require the usage of java8's desugaring. Glide's v4 doesn't currently do this, so we need to stay on an older version of the Fragment libraries.

Fixes #5086

PiperOrigin-RevId: 519745378"
0fd89b851a1cd201caef36362f45f0a8a06716e3,"Add a resettable interface to Glide's FactoryPool utility class.

PiperOrigin-RevId: 519774232"
9bdd8c7757f4e01e3d7f7f6d4ab7b3d1c5f72664,"Open source GlideFutures.preload()

PiperOrigin-RevId: 520143565"
41c110e6f5fb038b66dd9efec7d91e009882d063,"Internal change

PiperOrigin-RevId: 520149888"
dfe70183bf405d455f18aea1468f7219ad007cb3,"Export / enable a Q specific hardware bitmap test.

PiperOrigin-RevId: 520151194"
882d1c399def51557df2c892f0c4cf1c5055ec7d,"Avoid stripping disable hardware bitmaps on O.

For a while we've stripped some experimental methods when they're exported to GitHub. This prevents them from being included in a public release, which in turn prevents them from causing binary incompatibility issues between different versions of Glide if the methods are misused.

However it also creates a maintenance burden where the internal and external versions of Glide are not the same. It adds some confusion for external developers because necessarily some number of useless classes, imports or variables are left in the exported version.

Rather than rely on explicit stripping, we'll instead document and deprecate the experimental methods and continue to remove them when they're no longer useful. This is more transparent and easier to maintain, at the risk of some additional binary incompatibility issues in the future. Given that it's very unlikely that people will use these methods, especially in libraries, this seems like an ok tradeoff.

PiperOrigin-RevId: 520157449"
53e37b40e8fefec2f88c02a529e59dd02a4ae32a,"Open source Glide's FirstFrame waiter

This class helps avoid some issues with hardware Bitmaps on Android O and P. It's been in use in production internally for a while for these older devices. Even if we don't use it on Q+ and we decide there are too many bugs with hardware Bitmaps on O, it's still useful to enable on P devices.

PiperOrigin-RevId: 520157997"
1db4a72abd771aa030bfb8399a2065a5fec72afd,"Call ExperimentalRequestListener's new onResourceReady method.

PiperOrigin-RevId: 520166967"
17f03fbcd929b0e690d04537320525f3ede3d596,"Add an experimental setThreadFactory method on GlideExecutor

PiperOrigin-RevId: 520172603"
abfc4db9d9cb9bed387f147538ea6939279d4835,"Remove a broken build status badge from Glide's README.md

Glide is now built with GitHub actions, not travis-ci.

PiperOrigin-RevId: 520176732"
67fcf079938ae487f01d9fce69c3b8eef1f24e20,"Internal change

PiperOrigin-RevId: 520180505"
24ff6f685b91f9b32122923167f3820ee920cf44,"Export gradle-wrapper.properties

PiperOrigin-RevId: 520201631"
d73f70ceadb8d0aeb04492df7c144785fe7b4da5,"Fix errors generating Glide's documentation with dokka

Prior to this change, the build fails because dokka fails to find the
dokka task on a bunch of submodules. That's happening because we
deliberately disabled the dokka task on irrelevant submodules.

I have no idea how this worked originally. I even went back to my
original commit (e5a29beb96d9fc8a31e9f0adc650f6b2bd09c4ec) and tried
building with dokka and it failed. But clearly 4.14's javadocs on the
website were built with dokka.

The fix seems to be to always add the dokka task, but to simply set it
to disabled for submodules that aren't useful for developers. That's a
relatively minor change that I've made here."
39803862e4406bce6c422cb8124a84b9c1dfdbcd,"Merge pull request #5103 from sjudd:fix_dokka_build

PiperOrigin-RevId: 520364928"
cdf37dc0a664a0f5b02ae00523012c1be37e2e7d,Use the dokka command to build scripts/update_javadocs.sh
83c7b134560289c97bcb3b10bddaf3665ecb7aad,"Merge pull request #5104 from sjudd:update_javadocs_script

PiperOrigin-RevId: 520393656"
4554f3e3294983d2f3a2da342ae863772e43a533,"Open source a sql based LRU disk cache for Glide

PiperOrigin-RevId: 520411345"
4de16fcef1562d67f5bd0f09f959046e657e8d45,"Use Fragment.getActivity instead of getContext in Glide

getContext was only introduced in a newer API. getActivity has been around for a while.

Fixes #5107

PiperOrigin-RevId: 520431972"
aa4157e9f6a39116a32ca2d25aa1f4f28db721db,"Require appropriate API levels when using VideoDecoder.

Several of these are lint warnings that are properly checked, but there's at least one registry call that would allow the use of newer methods on an older API. I haven't yet seen any issue that results from that and this isn't new code, but we still should add the correct SDK check in RegistryFactory.

Progress towards #5108

PiperOrigin-RevId: 520436921"
08346ce4ef391ef4e7b4c1f39bf8f3b9c2f72bc5,"Reverse the order in which List and T are checked in AppGlideModules

Fixes #5091

PiperOrigin-RevId: 520518296"
fe7ca319e4b44573ec29daf71bcd711a259a3b3b,"Fixup Glide's KSP tests

In particular:
1. Rename AppGlideModuleOnlyTests to OnlyAppGlideModuleTests so the class and file name are consistent
2. Move the 'simpleAppGlideModule' string into the SourceTestHelpers so it can be shared across tests without explicit cross-test dependencies.

PiperOrigin-RevId: 521040266"
7a022416b58e73907d238a65532461e7fb30dd0b,"Rename ksp integration tests so the class and file names match

PiperOrigin-RevId: 521505015"
fe212a60ea95f2555b0f42fced6ca6ba6b374c65,Hard code disabling hardware bitmaps on O/OMR1. (#5115)
ebad66bf87742bf4afb545f73b9e7bf25bf72518,Only require hardware bitmaps on P+ in LoadResourcesWithDownsamplerTest. (#5116)
0be8073f272ea9440640b4fb20595a30d76d541b,"avif integration: Update libavif dependency

Updated libavif contains performance improvements and a bug fix
when rendering images with alpha transparency."
e66d253d4c1834a7fd4e2d312f133eb8bb8daf5f,"Merge pull request #5128 from vigneshvg/cl_avif_version_update

avif integration: Update libavif dependency"
3c733a489eab040e581f0cc420fdfabcd2570359,Include URL in error log
2de5856751ce8033221d01354ef715fc2d8eb7fc,"Merge pull request #5164 from paulsowden/chromium-error-print-url

Include URL in error log"
26ecf64550a07d1b8f958a8e3ef192028b4892ca,"Add `isInitialized` visible for testing method (#5163)

Glide provides an `init` method for test authors and rule writers to initialize Glide with custom executors but due to the transparent way it self initializes and tears down when re-initialized it makes it hard to assert the state of Glide. One easy way to misconfigure Glide when using dependency injection is for something to obtain an instance before the test has called `init`, in this case the instance that was read will be torn down but will typically fail in mysterious ways; Glide doesn't throw an exception when a torn down instance is attempted to be loaded from, usually the request will be rejected by the executors because they've been shutdown.

Adding `isInitialized` allows test authors and rule writers to assert that Glide has not been initialized before the test initializes Glide."
2498f51f02b3d972b5cb35222e807be498094f81,"Disable java 7 source obsolete warning. (#5168)

We treat warnings as errors, so this warning breaks the build in AS in
some versions. It's not immediately actionable, so we might as well
disable the warning."
466dc629a6740278474770aa4aef86e9f21813d5,Remove unused rules.bzl
b137ebda1f50970c9edd30e13f75333ab6debe89,"Merge pull request #5170 from kanelbulle/rm_rules

Remove unused rules.bzl"
14d8d5696a830fc126abf6173b1a530d697603f8,Update mockito version to fix j16 compilation. (#5169)
028f83cfa75a2d6a839726ff5e056e9ea5e83898,Log instead of throwing parsing manifests. (#5167)
b4ae9f3dcff97621c6223a89a4870632568033a3,"Do not set requireOriginal on Android photo picker uris. (#5162)

* Do not set requireOriginal on Android Picker uris.

Android Picker (https://developer.android.com/training/data-storage/shared/photopicker) uris have MediaStore authority but does not accept requireOriginal."
993e59d575a1f97cb70dd6ae1cd2e405ec4c40b6,Move androidx.test:core-ctx to a test dependency. (#5182)
3d6d038f7341dc71872d076b42d74492fec197b9,"Allow host app to provide a way to clear all resources onStop() (#5145)

* * Integrated a way in glide to allow host app to provide a way to clear resources onStop().

* * Clear targetTracker only in case clearOnStop is true

* * Extracted a clearRequests() and re-used it in onStop() and onDestroy()"
32827dc04400d9f618740316447d108258ccf4ed,"Switch Glide's dependencies to a version catalog. (#5183)

Version catalogs are officially supported by Gradle as a way to manage
dependencies. They're also supported by tools like Renovate.

Unfortunately it's only kind of supported by Android Studio, which seems
to prefer toml files over settings.gradle. Since Gradle's docs seem to
be recommending settings.gradle and are usually ahead of Android, I've
chosen to follow Gradle's guidance in the hopes of avoiding a toml ->
settings.gradle migration in the future."
8d7462119a65e208cdf6315e0141fb651f2c4623,Remove jetifier from Glide. (#5184)
928c8dc9889601596ce2f9352d90873ccf0d2492,"Add an updated gradle plugin to compile on Java 17. (#5185)

Related to #5003. This at least lets Glide compile on Java 17. I'm not
sure if it has any down stream impact on users of Glide."
12a68f121cf690c11eba9dcb6ada91888d22de11,"Configure Renovate (#5186)

* Add renovate.json

* Update renovate.json

---------

Co-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>
Co-authored-by: Sam <sam.a.judd@gmail.com>"
e189422c18580b8366440623c9c3cde31356c81f,Update androidx-benchmark to v1.1.1
127c8a0a23340e7bfaef5782edc734e7f9f06dde,Update dependency androidx.test.ext:junit to v1.1.5
c9ebe0c4d7a7ea39a19b4498688e21fb8a91a697,"Update dependency androidx.exifinterface:exifinterface to v1.3.6 (#5188)

Co-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>"
d8414dac407094118b6598fb19042090d887aacc,"Update dependency androidx.test.ext:junit-ktx to v1.1.5 (#5189)

Co-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>"
7dd3294e25c14d365d7999749b61d6b28bd26019,use read images/video permissions on 33+ in gallery sample
ec665eeeb2bbb98409dc4dd63a763bdbc328b9a7,Update dagger to use androidx in Imgur sample and update ci tests
a4a23faa19aee279f33eda0a77fe4546e10615d2,"Update annotations to 1.5.0, disable renovate for annotatins/fragment."
f4baae1ea5829172dbfe36f5fe10e5c1e1e08e24,Fix renovate config.
ddddbc17b27843cf5727336951210be0da9c3d67,Create renovate-config-validation.yml
b80e28c207c51e352f4b51be891005af3ed96e75,"Use onIdle to avoid a race in FlowTests

Glide's executor thread notifies the flow in a loop while holding a lock
on the resource. When it finishes, it releases the lock.

If the flow wins the race and runs before Glide's executor releases the
lock, the resource will not be recycled in the remainder of the test
method. If the executor wins the race and releases the lock first, then
the resource will be recycled in the rest of the test method.

To fix this race, I've used Espresso's onIdle and idling resources,
similar to the compose rule."
00251a547ec56d03947ce59760740a753d77f93f,Update compose to v1.4.3
19dfef8aef33cae2bb0625b6affcd33a8b6254e5,Move size resolution from GlideImage to GlidePainter
25b4895ed847cb47f5d46d2765c5fbca10f42f3b,Add ksp and kotlin-compiler-extension versions to settings.gradle
cae63cc53b40a8b8097a7c3eae0ce27f78a78507,Fix appcompat version to < 1.4
67d6067165b58ec0d9e4df1f4c7e682dc41f6461,Update dependency org.aomedia.avif.android:avif to v0.11.1.647c3c2
f78da0bdb627393d2d0d569959f74c5d7f143834,Update suzuki-shunsuke/github-action-renovate-config-validator action to v0.1.3
e9b8758b63ec905d54b4cabec08e16cf588bcb38,"Introduce a constant for Robolectric tests using sdk = 18.

This commit replaces hardcoded instances of 'Config(sdk = 18') with a
constant. The intent is to make it easier to update the value in the
future when Robolectric stops supporting sdk 18.

Tested via gradle test testDebugUnitTest."
fd96de2dd20541c46b3eee24e312969830bc17fb,"Increment ROBOLECTRIC_SDK to 19 from 18.

A future version of Robolectric will drop support
for SDK 18.

Tested via gradle test testDebugUnitTest."
ce2f4954b262e05baec301d4221bf3526009ea3c,Add @RequiresPermission to NotificationTarget
8c058c147fa536576ecf298b2c807bbe9348884f,"Remove unused <uses-sdk android:minSdkVersion=""..."" />

Issue id: GradleOverrides
This minSdkVersion value (...) is not used; it is always overridden by the value specified in the Gradle build script (...)
Inspection info: The value of (for example) minSdkVersion is only used if it is not specified in the build.gradle build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity."
4382fff28c8b969f21ce0a0f287a4c27a25e47fe,Remove empty <application /> nodes from manifest.
9e0efec48e87d996d757ca2279edc65edc7967fb,Remove unused manifest file.
ef9f0b3ad35f1c2c19ab75ef7f8411308c562c89,"Add missing `<?xml version=""1.0"" encoding=""utf-8""?>` in all AndroidManifest.xml files."
49ddc01484ac50287230f72804e8c41cb5dcd71b,Ensure one new line at end of modified files.
401d7e587c321d88fb8d45c5d42d1dcfdbcd0802,"Migrate <manifest package=""..."" in AndroidManifest.xml to namespace '...' in build.gradle."
0b62103433b2cdb247f5c9a72fb8c1404e1d3e88,Remove empty AndroidManifest.xml files.
8f6d64519574c9a199f96269f56fae8ffb942b4f,Add a isEquivalentTo method to correctly check equality
60b567e5feec70ba810a663e56a10d837f26c56c,"Remove GlidePainter in favor of Modifier nodes / Flows

Using a custom Modifier node instead of a Painter follows a
recommendation from the Compose team. It will allow us or
library users to compose Glide's modifier in the future for animations
of other effects.  For now we do not actually expose the Modifier
directly.

This change adds a GlideSubcomposition that uses' Glide's flows
integration to allow subcomposition based on image load state.
Subcomposition allows us to deprecate the expensive Composable
placeholder variants and also allows users to implement complex layouts
or animations.

In a subsequent change we'll explore adding a default crossfade and/or
exposing the Glide modifier node so that users of the library can
compose modifiers themselves."
cb2b1dcdb8abebf5470c0570ac9fad905fac4d49,Replace flows in GlideSubcomposition with a listener on GlideNode
d10c5ff0ab05bf17709913edb5f864e94a1b5e60,"Add a Transition API and a CrossFade Transition for Compose

Similar to Glide's existing Transitions, but intended for use with
Animatable instead of views. I've started with a simple CrossFade."
b3294015ae9739ad434f2c274ca2104522735f67,Influence layout using intrinsics in GlideNode
5d2fb6724844388a8c879a71755d37c659e905a5,Clean up some duplicate size logic in GlideModifier.
0138465d3d0cedcdcf274e5b24c0b920c4cd38e4,Bump version to 4.16.0 / alpha5
2ae4effcf7bad2131a54423d203c2d124257fc04,Bump versions to 5.0.0-SNAPSHOT
9bfbf25c53b00f70ddde09ccd634902b101f9e11,Add emulator tests run on Github Actions
ed5b09affc97e93d991df52a474369b9d0b47081,Increase timeout seconds in ConcurrencyHelper
44d6aa18b1cecf885b9c45233376db6041a18b2c,Update coroutines to v1.7.3
65543f8ec85cb0eeba6aa398e8b1be81337ab456,Update dependency com.android.volley:volley to v1.2.1
62789a833d38069d0927aafd291247e062f68ad0,Update dependency com.google.android.gms:play-services-cronet to v17.0.1
926d4fbe31a8d65cdc36adc783334ccffc3caff5,Update dependency com.google.truth:truth to v1.1.5
33bbb2137efa4365af2d54668ba510a85475b0e9,Update dagger to v2.47
cf95b65556c5b0880ed11c36a21a783a3fd8bbd6,Update dependency androidx.compose.material:material to v1.5.0
a057dfee6f4a763a4f651af4adbea61d079aa97e,Update dependency org.aomedia.avif.android:avif to v0.11.1.647c3c2
e5479dca76a0b106effd4ec5bde023ea3c1ee4fb,Update dependency androidx.test:core-ktx to v1.5.0
eaad72346354729b2615cff8b29871d901f06b7b,Update dependency gradle to v7.6.2
b4a0483240c3fd31d8e908bed23afe727db4fe82,Update dependency io.reactivex:rxjava to v1.3.8
7583df0382e2163193baa970afafb9668852a760,"Revert ""Increase timeout seconds in ConcurrencyHelper""

This reverts commit ed5b09affc97e93d991df52a474369b9d0b47081."
4db0b300c43f127313211774a1784ac873aa45cf,"Revert ""Add emulator tests run on Github Actions""

This reverts commit 9bfbf25c53b00f70ddde09ccd634902b101f9e11."
af0d631c616c41cd23eacf953f278d28b0d217e4,"Avoid modifying constraints when a scale factor can't be computed

This will happen if either width or height (or both) are constrained to
have a 0 size.

We already avoid loading the image via AsyncImageSize /
inferredGlideSize. This only impacts layout.

Fixes #5256"
e94916ef5d797345a114a2665a3c66d2fb7f4647,Fix drawables not animating via a custom DrawablePainter
6ff7f325353f4c3d913dc682d6e9201c8616c6ab,Add a goldens based test utility for compose
3472f80fc0b258e0962ff1966255d5284e2a40d1,Avoid duplicating Modifiers in GlideModifer
cbdc1e78b4ee0f335054bb2781f46cf8db82f914,Add device attribtues to golden file names
06fc8f689c0936ee570ed3e31ae2d6a1ff019fe9,Finish animation ignoring cancellation.
46eb7311b2c75ac015e56fa165e6c99e757d0a71,"Update Glide to java 8, AGP to 8.1.0"
c6960d314151ad6c03e9e5eea5a9dcea57e6035e,Update dependency androidx.recyclerview:recyclerview to v1.3.1
69e220463ac7110b87beaa7a0e3e124f38cecacd,"Upgrade to androix fragment 1.6.1

...yikes"
bd2a519d7d8095a3a0e307486ddd6ed9bbb84e65,Update Checkstyle to 8.45.1
fe3b9128d75a9ae43c46b77e72a217ce3fc3e1e5,Update disklrucache checkstyle to 6.19
12c86e9a316bd774b77bc47b7fbed38a146d704b,"Update compile sdk to 34, androidx core to 1.12.0"
efc56f8bc03846706027076779cac33d489a680d,"Remove custom MediaMetadataRetriever shadow in GlideTest

This custom shadow is unused."
e8d10fc3dabdb835be1db3779e961064ffec3291,Update to AGP 8.1.1
9809d98fe43ae3d0593f3d710bb32af9bed72642,Add a Painter variant of the placeholder APIs
05d346557c284844fb85eedbd7c7db009591f0e8,Update dependency androidx.compose.material:material to v1.5.1
b3fd2bc1b68b988202e50fac757a318274c16be8,"Bump version to 5 RC01, 1.0 beta01"
f0d2b16034826757e4c68e5320b7707a8d43a289,Set versions to next snapshot
1863e6713a34507f584c4d1f2a061dd885b687ee,Only log duplicate library modules if there actually are duplicates
b1c6076bbbc3cc46d45f35924070cb11be44ff90,Avoid drawing placeholder when it shouldn't be used
75599b7af05eeca1393c8f4267adb78e88e7821e,Fix BitmapPoolAdapter outdated JavaDoc
c06a85d8427de557a1a04e0370e44007301bcf9b,"Make Placeholder a type that can be convered to Painter

This removes the deprecated Composable variant of Placeholder. Users who
require that functionality should instead use GlideSubcomposition. It's
useful to remove this now because it allows for a much simpler
Placholder interface and it unblocks us from moving most of GlideImage
into GlideModifier. In turn that will let us expose GlideModifier as a
real composable API component."
3bbc3908edd8432f55ccfae3257bad533c1bf7d1,"avif: Use the correct bucket for GlideModule

Instead of prepending to the default prepend_all bucket, prepend
the Avif integration decoders to the Bitmap bucket. Also add a
configuration for decoding into a BitmapDrawable.

This prevents some incorrect interactions with the Downsampler
when dealing with the animated drawables (if the Avif integration
is in the prepend_all bucket, it prevents GIF animations from
playing back since they are returned as a BitmapDrawable as
explained in issue #5051).

Fixes #5051"
e77562a432352da19741d93b8c1f6599b558676a,"Update TransformationUtils#rotateImageExif to preserve gainmap and colorspace on Android U+.

Also bump Robolectric Version to support testing on Android U."
